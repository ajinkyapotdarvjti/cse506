!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
-format	GNUmakefile	/^	git archive --format=tar HEAD | gzip > lab$(LAB)-handin.tar.gz$/;"	m
ACKCIADDR	net/lwip/netif/ppp/ipcp.c	495;"	d	file:
ACKCICHAP	net/lwip/netif/ppp/lcp.c	653;"	d	file:
ACKCICHAR	net/lwip/netif/ppp/lcp.c	641;"	d	file:
ACKCIDNS	net/lwip/netif/ppp/ipcp.c	522;"	d	file:
ACKCILONG	net/lwip/netif/ppp/lcp.c	668;"	d	file:
ACKCILQR	net/lwip/netif/ppp/lcp.c	680;"	d	file:
ACKCISHORT	net/lwip/netif/ppp/lcp.c	629;"	d	file:
ACKCIVJ	net/lwip/netif/ppp/ipcp.c	467;"	d	file:
ACKCIVOID	net/lwip/netif/ppp/lcp.c	620;"	d	file:
ADDCIADDR	net/lwip/netif/ppp/ipcp.c	399;"	d	file:
ADDCICHAP	net/lwip/netif/ppp/lcp.c	551;"	d	file:
ADDCICHAR	net/lwip/netif/ppp/lcp.c	574;"	d	file:
ADDCIDNS	net/lwip/netif/ppp/ipcp.c	418;"	d	file:
ADDCILONG	net/lwip/netif/ppp/lcp.c	559;"	d	file:
ADDCILQR	net/lwip/netif/ppp/lcp.c	566;"	d	file:
ADDCISHORT	net/lwip/netif/ppp/lcp.c	544;"	d	file:
ADDCIVJ	net/lwip/netif/ppp/ipcp.c	382;"	d	file:
ADDCIVOID	net/lwip/netif/ppp/lcp.c	538;"	d	file:
AF_INET	net/lwip/include/lwip/sockets.h	118;"	d
AF_UNSPEC	net/lwip/include/lwip/sockets.h	117;"	d
ALLOC_ZERO	kern/pmap.h	/^	ALLOC_ZERO = 1<<0,$/;"	e	enum:__anon11
ALT	kern/console.c	219;"	d	file:
ANNOUNCE_INTERVAL	net/lwip/include/ipv4/lwip/autoip.h	65;"	d
ANNOUNCE_NUM	net/lwip/include/ipv4/lwip/autoip.h	64;"	d
ANNOUNCE_WAIT	net/lwip/include/ipv4/lwip/autoip.h	66;"	d
API_EVENT	net/lwip/include/lwip/api.h	158;"	d
API_LIB_DEBUG	net/lwip/include/lwip/opt.h	1497;"	d
API_MSG_DEBUG	net/lwip/include/lwip/opt.h	1504;"	d
AR	GNUmakefile	/^AR	:= $(GCCPREFIX)ar$/;"	m
ARPH_HWLEN	net/lwip/netif/etharp.c	81;"	d	file:
ARPH_HWLEN_SET	net/lwip/netif/etharp.c	84;"	d	file:
ARPH_PROTOLEN	net/lwip/netif/etharp.c	82;"	d	file:
ARPH_PROTOLEN_SET	net/lwip/netif/etharp.c	85;"	d	file:
ARP_MAXAGE	net/lwip/netif/etharp.c	69;"	d	file:
ARP_MAXPENDING	net/lwip/netif/etharp.c	77;"	d	file:
ARP_QUEUEING	net/lwip/include/lwip/opt.h	336;"	d
ARP_REPLY	net/lwip/include/netif/etharp.h	132;"	d
ARP_REQUEST	net/lwip/include/netif/etharp.h	131;"	d
ARP_TABLE_SIZE	net/lwip/include/lwip/opt.h	328;"	d
ARP_TMR_INTERVAL	net/lwip/include/netif/etharp.h	123;"	d
ARRAYSIZE	user/testbss.c	5;"	d	file:
AS	GNUmakefile	/^AS	:= $(GCCPREFIX)as$/;"	m
ASM	lib/string.c	9;"	d	file:
ASM	obj/fs/fs.asm	/^#define ASM 1$/;"	d
ASM	obj/kern/kernel.asm	/^#define ASM 1$/;"	d
ASM	obj/net/ns.asm	/^#define ASM 1$/;"	d
ASM	obj/net/testinput.asm	/^#define ASM 1$/;"	d
ASM	obj/net/testoutput.asm	/^#define ASM 1$/;"	d
ASM	obj/user/echosrv.asm	/^#define ASM 1$/;"	d
ASM	obj/user/echotest.asm	/^#define ASM 1$/;"	d
ASM	obj/user/forktree.asm	/^#define ASM 1$/;"	d
ASM	obj/user/hello.asm	/^#define ASM 1$/;"	d
ASM	obj/user/httpd.asm	/^#define ASM 1$/;"	d
ASM	obj/user/icode.asm	/^#define ASM 1$/;"	d
ASM	obj/user/idle.asm	/^#define ASM 1$/;"	d
ASM	obj/user/init.asm	/^#define ASM 1$/;"	d
ASM	obj/user/pingpong.asm	/^#define ASM 1$/;"	d
ASM	obj/user/primes.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testfile.asm	/^#define ASM 1$/;"	d
ASM	obj/user/testtime.asm	/^#define ASM 1$/;"	d
ASM	obj/user/writemotd.asm	/^#define ASM 1$/;"	d
ASSERT	kern/lapic.c	25;"	d	file:
AUTHDEBUG	net/lwip/netif/ppp/pppdebug.h	66;"	d
AUTHDEBUG	net/lwip/netif/ppp/pppdebug.h	76;"	d
AUTH_H	net/lwip/netif/ppp/auth.h	54;"	d
AUTOIP_DEBUG	net/lwip/include/lwip/opt.h	1680;"	d
AUTOIP_STATE_ANNOUNCING	net/lwip/include/ipv4/lwip/autoip.h	74;"	d
AUTOIP_STATE_BOUND	net/lwip/include/ipv4/lwip/autoip.h	75;"	d
AUTOIP_STATE_OFF	net/lwip/include/ipv4/lwip/autoip.h	72;"	d
AUTOIP_STATE_PROBING	net/lwip/include/ipv4/lwip/autoip.h	73;"	d
AUTOIP_TICKS_PER_SECOND	net/lwip/include/ipv4/lwip/autoip.h	57;"	d
AUTOIP_TMR_INTERVAL	net/lwip/include/ipv4/lwip/autoip.h	56;"	d
Argstate	inc/args.h	/^struct Argstate {$/;"	s
BACKTRACE_RE	grade-lab1	/^BACKTRACE_RE = r"^ *rbp +00000000f01[0-9a-z]{5} +rip +00000000f0100[0-9a-z]{3} +args +([0-9a-z]+)"$/;"	v
BCAST	kern/lapic.c	28;"	d	file:
BCMP	net/lwip/netif/ppp/ppp.h	210;"	d
BCOPY	net/lwip/netif/ppp/ppp.h	211;"	d
BIG_ENDIAN	net/lwip/include/lwip/arch.h	40;"	d
BLKBITSIZE	inc/fs.h	13;"	d
BLKFILES	inc/fs.h	45;"	d
BLKSECTS	fs/fs.h	5;"	d
BLKSIZE	inc/fs.h	12;"	d
BOOT_CFLAGS	GNUmakefile	/^BOOT_CFLAGS := $(CFLAGS) -DJOS_KERNEL -gstabs -m64$/;"	m
BOOT_LDFLAGS	GNUmakefile	/^BOOT_LDFLAGS := -m elf_x86_64$/;"	m
BOOT_PAGE_TABLE_END	kern/pmap.c	14;"	d	file:
BOOT_PAGE_TABLE_END	kern/pmap.c.BACKUP.24152.c	14;"	d	file:
BOOT_PAGE_TABLE_END	kern/pmap.c.BASE.24152.c	15;"	d	file:
BOOT_PAGE_TABLE_END	kern/pmap.c.LOCAL.24152.c	14;"	d	file:
BOOT_PAGE_TABLE_END	kern/pmap.c.REMOTE.24152.c	15;"	d	file:
BOOT_PAGE_TABLE_END	kern/pmap1.c	14;"	d	file:
BOOT_PAGE_TABLE_START	kern/pmap.c	13;"	d	file:
BOOT_PAGE_TABLE_START	kern/pmap.c.BACKUP.24152.c	13;"	d	file:
BOOT_PAGE_TABLE_START	kern/pmap.c.BASE.24152.c	14;"	d	file:
BOOT_PAGE_TABLE_START	kern/pmap.c.LOCAL.24152.c	13;"	d	file:
BOOT_PAGE_TABLE_START	kern/pmap.c.REMOTE.24152.c	14;"	d	file:
BOOT_PAGE_TABLE_START	kern/pmap1.c	13;"	d	file:
BUFFSIZE	obj/user/echosrv.asm	/^#define BUFFSIZE 32$/;"	d
BUFFSIZE	user/echosrv.c	7;"	d	file:
BUFFSIZE	user/echotest.c	5;"	d	file:
BUFFSIZE	user/httpd.c	11;"	d	file:
BUFLEN	lib/readline.c	4;"	d	file:
BUFLEN	obj/kern/kernel.asm	/^#define BUFLEN 1024$/;"	d
BUSY	kern/lapic.c	30;"	d	file:
BYTE_ORDER	net/lwip/jos/arch/cc.h	38;"	d
BZERO	net/lwip/netif/ppp/ppp.h	212;"	d
C	kern/console.c	286;"	d	file:
CAPSLOCK	kern/console.c	221;"	d	file:
CBCP_OPT	net/lwip/netif/ppp/lcp.h	82;"	d
CBCP_SUPPORT	net/lwip/include/lwip/opt.h	1302;"	d
CC	GNUmakefile	/^CC	:= $(GCCPREFIX)gcc -pipe$/;"	m
CCP_SUPPORT	net/lwip/include/lwip/opt.h	1309;"	d
CFLAGS	GNUmakefile	/^CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -O0 -fno-builtin -I$(TOP) -MD$/;"	m
CGA_BASE	kern/console.h	13;"	d
CGA_BUF	kern/console.h	14;"	d
CHAPCS_CLOSED	net/lwip/netif/ppp/chap.h	103;"	d
CHAPCS_INITIAL	net/lwip/netif/ppp/chap.h	102;"	d
CHAPCS_LISTEN	net/lwip/netif/ppp/chap.h	105;"	d
CHAPCS_OPEN	net/lwip/netif/ppp/chap.h	107;"	d
CHAPCS_PENDING	net/lwip/netif/ppp/chap.h	104;"	d
CHAPCS_RESPONSE	net/lwip/netif/ppp/chap.h	106;"	d
CHAPDEBUG	net/lwip/netif/ppp/pppdebug.h	71;"	d
CHAPDEBUG	net/lwip/netif/ppp/pppdebug.h	81;"	d
CHAPSS_BADAUTH	net/lwip/netif/ppp/chap.h	118;"	d
CHAPSS_CLOSED	net/lwip/netif/ppp/chap.h	113;"	d
CHAPSS_INITIAL	net/lwip/netif/ppp/chap.h	112;"	d
CHAPSS_INITIAL_CHAL	net/lwip/netif/ppp/chap.h	115;"	d
CHAPSS_OPEN	net/lwip/netif/ppp/chap.h	116;"	d
CHAPSS_PENDING	net/lwip/netif/ppp/chap.h	114;"	d
CHAPSS_RECHALLENGE	net/lwip/netif/ppp/chap.h	117;"	d
CHAP_CHALLENGE	net/lwip/netif/ppp/chap.h	87;"	d
CHAP_DEFTIMEOUT	net/lwip/include/lwip/opt.h	1354;"	d
CHAP_DEFTRANSMITS	net/lwip/include/lwip/opt.h	1358;"	d
CHAP_DIGEST_MD5	net/lwip/netif/ppp/chap.h	82;"	d
CHAP_FAILURE	net/lwip/netif/ppp/chap.h	90;"	d
CHAP_H	net/lwip/netif/ppp/chap.h	69;"	d
CHAP_HEADERLEN	net/lwip/netif/ppp/chap.h	76;"	d
CHAP_MICROSOFT	net/lwip/netif/ppp/chap.h	84;"	d
CHAP_PEER	net/lwip/netif/ppp/auth.c	93;"	d	file:
CHAP_RESPONSE	net/lwip/netif/ppp/chap.h	88;"	d
CHAP_SUCCESS	net/lwip/netif/ppp/chap.h	89;"	d
CHAP_SUPPORT	net/lwip/include/lwip/opt.h	1288;"	d
CHAP_WITHPEER	net/lwip/netif/ppp/auth.c	92;"	d	file:
CHECK	user/faultregs.c	57;"	d	file:
CHECK	user/faultregs.c	79;"	d	file:
CHECKSUM	kern/entry.S	/^#define CHECKSUM (-(MULTIBOOT_HEADER_MAGIC + MULTIBOOT_HEADER_FLAGS))$/;"	d
CHECKSUM_CHECK_IP	net/lwip/include/lwip/opt.h	1433;"	d
CHECKSUM_CHECK_TCP	net/lwip/include/lwip/opt.h	1447;"	d
CHECKSUM_CHECK_UDP	net/lwip/include/lwip/opt.h	1440;"	d
CHECKSUM_GEN_IP	net/lwip/include/lwip/opt.h	1412;"	d
CHECKSUM_GEN_TCP	net/lwip/include/lwip/opt.h	1426;"	d
CHECKSUM_GEN_UDP	net/lwip/include/lwip/opt.h	1419;"	d
CHPMS_H	net/lwip/netif/ppp/chpms.h	58;"	d
CILEN_ADDR	net/lwip/netif/ppp/ipcp.c	77;"	d	file:
CILEN_ADDRS	net/lwip/netif/ppp/ipcp.c	78;"	d	file:
CILEN_CBCP	net/lwip/netif/ppp/lcp.c	88;"	d	file:
CILEN_CHAP	net/lwip/netif/ppp/lcp.c	85;"	d	file:
CILEN_CHAR	net/lwip/netif/ppp/lcp.c	83;"	d	file:
CILEN_COMPRESS	net/lwip/netif/ppp/ipcp.c	75;"	d	file:
CILEN_LONG	net/lwip/netif/ppp/lcp.c	86;"	d	file:
CILEN_LQR	net/lwip/netif/ppp/lcp.c	87;"	d	file:
CILEN_SHORT	net/lwip/netif/ppp/lcp.c	84;"	d	file:
CILEN_VJ	net/lwip/netif/ppp/ipcp.c	76;"	d	file:
CILEN_VOID	net/lwip/netif/ppp/ipcp.c	74;"	d	file:
CILEN_VOID	net/lwip/netif/ppp/lcp.c	82;"	d	file:
CI_ACCOMPRESSION	net/lwip/netif/ppp/lcp.h	69;"	d
CI_ADDR	net/lwip/netif/ppp/ipcp.h	65;"	d
CI_ADDRS	net/lwip/netif/ppp/ipcp.h	63;"	d
CI_ASYNCMAP	net/lwip/netif/ppp/lcp.h	64;"	d
CI_AUTHTYPE	net/lwip/netif/ppp/lcp.h	65;"	d
CI_CALLBACK	net/lwip/netif/ppp/lcp.h	70;"	d
CI_COMPRESSTYPE	net/lwip/netif/ppp/ipcp.h	64;"	d
CI_EPDISC	net/lwip/netif/ppp/lcp.h	73;"	d
CI_MAGICNUMBER	net/lwip/netif/ppp/lcp.h	67;"	d
CI_MRRU	net/lwip/netif/ppp/lcp.h	71;"	d
CI_MRU	net/lwip/netif/ppp/lcp.h	63;"	d
CI_MS_DNS1	net/lwip/netif/ppp/ipcp.h	68;"	d
CI_MS_DNS2	net/lwip/netif/ppp/ipcp.h	70;"	d
CI_MS_WINS1	net/lwip/netif/ppp/ipcp.h	67;"	d
CI_MS_WINS2	net/lwip/netif/ppp/ipcp.h	69;"	d
CI_PCOMPRESSION	net/lwip/netif/ppp/lcp.h	68;"	d
CI_QUALITY	net/lwip/netif/ppp/lcp.h	66;"	d
CI_SSNHF	net/lwip/netif/ppp/lcp.h	72;"	d
CLOSED	net/lwip/include/lwip/tcp.h	/^  CLOSED      = 0,$/;"	e	enum:tcp_state
CLOSE_WAIT	net/lwip/include/lwip/tcp.h	/^  CLOSE_WAIT  = 7,$/;"	e	enum:tcp_state
CLOSING	net/lwip/include/lwip/tcp.h	/^  CLOSING     = 8,$/;"	e	enum:tcp_state
CMDBUF_SIZE	kern/monitor.c	15;"	d	file:
CMDBYTE	inc/kbdreg.h	60;"	d
CODENAME	net/lwip/netif/ppp/ipcp.c	115;"	d	file:
CODENAME	net/lwip/netif/ppp/lcp.c	130;"	d	file:
CODEREJ	net/lwip/netif/ppp/fsm.h	75;"	d
COLORS	gradelib.py	/^COLORS = {"default": "\\033[0m", "red": "\\033[31m", "green": "\\033[32m"}$/;"	v
COM1	kern/console.c	27;"	d	file:
COM_DLL	kern/console.c	31;"	d	file:
COM_DLM	kern/console.c	32;"	d	file:
COM_FCR	kern/console.c	36;"	d	file:
COM_IER	kern/console.c	33;"	d	file:
COM_IER_RDI	kern/console.c	34;"	d	file:
COM_IIR	kern/console.c	35;"	d	file:
COM_LCR	kern/console.c	37;"	d	file:
COM_LCR_DLAB	kern/console.c	38;"	d	file:
COM_LCR_WLEN8	kern/console.c	39;"	d	file:
COM_LSR	kern/console.c	44;"	d	file:
COM_LSR_DATA	kern/console.c	45;"	d	file:
COM_LSR_TSRE	kern/console.c	47;"	d	file:
COM_LSR_TXRDY	kern/console.c	46;"	d	file:
COM_MCR	kern/console.c	40;"	d	file:
COM_MCR_DTR	kern/console.c	42;"	d	file:
COM_MCR_OUT2	kern/console.c	43;"	d	file:
COM_MCR_RTS	kern/console.c	41;"	d	file:
COM_RX	kern/console.c	29;"	d	file:
COM_TX	kern/console.c	30;"	d	file:
CONFACK	net/lwip/netif/ppp/fsm.h	70;"	d
CONFNAK	net/lwip/netif/ppp/fsm.h	71;"	d
CONFREJ	net/lwip/netif/ppp/fsm.h	72;"	d
CONFREQ	net/lwip/netif/ppp/fsm.h	69;"	d
CONSBUFSIZE	kern/console.c	385;"	d	file:
CPUS	GNUmakefile	/^CPUS ?= 1$/;"	m
CPU_STARTED	kern/cpu.h	/^	CPU_STARTED,$/;"	e	enum:__anon10
CPU_UNUSED	kern/cpu.h	/^	CPU_UNUSED = 0,$/;"	e	enum:__anon10
CR0_AM	inc/mmu.h	101;"	d
CR0_CD	inc/mmu.h	103;"	d
CR0_EM	inc/mmu.h	96;"	d
CR0_ET	inc/mmu.h	98;"	d
CR0_MP	inc/mmu.h	95;"	d
CR0_NE	inc/mmu.h	99;"	d
CR0_NW	inc/mmu.h	102;"	d
CR0_PE	inc/mmu.h	94;"	d
CR0_PG	inc/mmu.h	104;"	d
CR0_TS	inc/mmu.h	97;"	d
CR0_WP	inc/mmu.h	100;"	d
CR4_DE	inc/mmu.h	109;"	d
CR4_MCE	inc/mmu.h	107;"	d
CR4_PAE	inc/mmu.h	115;"	d
CR4_PCE	inc/mmu.h	106;"	d
CR4_PSE	inc/mmu.h	108;"	d
CR4_PVI	inc/mmu.h	111;"	d
CR4_TSD	inc/mmu.h	110;"	d
CR4_VME	inc/mmu.h	112;"	d
CRT_COLS	kern/console.h	17;"	d
CRT_ROWS	kern/console.h	16;"	d
CRT_SIZE	kern/console.h	18;"	d
CTL	kern/console.c	218;"	d	file:
CURRENT_TEST	gradelib.py	/^CURRENT_TEST = None$/;"	v
ChallengeResponse	net/lwip/netif/ppp/chpms.c	/^ChallengeResponse( u_char *challenge, \/* IN   8 octets *\/$/;"	f	file:
ChapAuthPeer	net/lwip/netif/ppp/chap.c	/^ChapAuthPeer(int unit, char *our_name, int digest)$/;"	f
ChapAuthWithPeer	net/lwip/netif/ppp/chap.c	/^ChapAuthWithPeer(int unit, char *our_name, int digest)$/;"	f
ChapChallengeTimeout	net/lwip/netif/ppp/chap.c	/^ChapChallengeTimeout(void *arg)$/;"	f	file:
ChapGenChallenge	net/lwip/netif/ppp/chap.c	/^ChapGenChallenge(chap_state *cstate)$/;"	f	file:
ChapInit	net/lwip/netif/ppp/chap.c	/^ChapInit(int unit)$/;"	f	file:
ChapInput	net/lwip/netif/ppp/chap.c	/^ChapInput(int unit, u_char *inpacket, int packet_len)$/;"	f	file:
ChapLowerDown	net/lwip/netif/ppp/chap.c	/^ChapLowerDown(int unit)$/;"	f	file:
ChapLowerUp	net/lwip/netif/ppp/chap.c	/^ChapLowerUp(int unit)$/;"	f	file:
ChapMS	net/lwip/netif/ppp/chpms.c	/^ChapMS( chap_state *cstate, char *rchallenge, int rchallenge_len, char *secret, int secret_len)$/;"	f
ChapMS_LANMan	net/lwip/netif/ppp/chpms.c	/^ChapMS_LANMan( char *rchallenge,$/;"	f	file:
ChapMS_NT	net/lwip/netif/ppp/chpms.c	/^ChapMS_NT( char *rchallenge,$/;"	f	file:
ChapProtocolReject	net/lwip/netif/ppp/chap.c	/^ChapProtocolReject(int unit)$/;"	f	file:
ChapReceiveChallenge	net/lwip/netif/ppp/chap.c	/^ChapReceiveChallenge(chap_state *cstate, u_char *inp, int id, int len)$/;"	f	file:
ChapReceiveFailure	net/lwip/netif/ppp/chap.c	/^ChapReceiveFailure(chap_state *cstate, u_char *inp, u_char id, int len)$/;"	f	file:
ChapReceiveResponse	net/lwip/netif/ppp/chap.c	/^ChapReceiveResponse(chap_state *cstate, u_char *inp, int id, int len)$/;"	f	file:
ChapReceiveSuccess	net/lwip/netif/ppp/chap.c	/^ChapReceiveSuccess(chap_state *cstate, u_char *inp, u_char id, int len)$/;"	f	file:
ChapRechallenge	net/lwip/netif/ppp/chap.c	/^ChapRechallenge(void *arg)$/;"	f	file:
ChapResponseTimeout	net/lwip/netif/ppp/chap.c	/^ChapResponseTimeout(void *arg)$/;"	f	file:
ChapSendChallenge	net/lwip/netif/ppp/chap.c	/^ChapSendChallenge(chap_state *cstate)$/;"	f	file:
ChapSendResponse	net/lwip/netif/ppp/chap.c	/^ChapSendResponse(chap_state *cstate)$/;"	f	file:
ChapSendStatus	net/lwip/netif/ppp/chap.c	/^ChapSendStatus(chap_state *cstate, int code)$/;"	f	file:
Collapse	net/lwip/netif/ppp/chpms.c	/^Collapse(u_char *in, u_char *out)$/;"	f	file:
Command	kern/monitor.c	/^struct Command {$/;"	s	file:
Cpu	kern/cpu.h	/^struct Cpu {$/;"	s
DBG_MIN_LEVEL	net/lwip/jos/lwipopts.h	57;"	d
DEASSERT	kern/lapic.c	26;"	d	file:
DEBUG_SPINLOCK	kern/spinlock.h	7;"	d
DECODEL	net/lwip/netif/ppp/vj.c	107;"	d	file:
DECODES	net/lwip/netif/ppp/vj.c	118;"	d	file:
DECODEU	net/lwip/netif/ppp/vj.c	129;"	d	file:
DECPTR	net/lwip/netif/ppp/ppp.h	208;"	d
DEFAULT	net/ns.h	6;"	d
DEFAULT_ACCEPTMBOX_SIZE	net/lwip/include/lwip/opt.h	1043;"	d
DEFAULT_RAW_RECVMBOX_SIZE	net/lwip/include/lwip/opt.h	1016;"	d
DEFAULT_TCP_RECVMBOX_SIZE	net/lwip/include/lwip/opt.h	1034;"	d
DEFAULT_THREAD_NAME	net/lwip/include/lwip/opt.h	989;"	d
DEFAULT_THREAD_PRIO	net/lwip/include/lwip/opt.h	1007;"	d
DEFAULT_THREAD_STACKSIZE	net/lwip/include/lwip/opt.h	998;"	d
DEFAULT_UDP_RECVMBOX_SIZE	net/lwip/include/lwip/opt.h	1025;"	d
DEFEND_INTERVAL	net/lwip/include/ipv4/lwip/autoip.h	69;"	d
DEFLOOPBACKFAIL	net/lwip/netif/ppp/lcp.h	165;"	d
DELIVS	kern/lapic.c	24;"	d	file:
DEPTH	user/forktree.c	5;"	d	file:
DHCP_ACK	net/lwip/include/lwip/dhcp.h	188;"	d
DHCP_AUTOIP_COOP_STATE_OFF	net/lwip/include/lwip/dhcp.h	178;"	d
DHCP_AUTOIP_COOP_STATE_ON	net/lwip/include/lwip/dhcp.h	179;"	d
DHCP_BACKING_OFF	net/lwip/include/lwip/dhcp.h	174;"	d
DHCP_BOOTREPLY	net/lwip/include/lwip/dhcp.h	182;"	d
DHCP_BOOTREQUEST	net/lwip/include/lwip/dhcp.h	181;"	d
DHCP_BOUND	net/lwip/include/lwip/dhcp.h	172;"	d
DHCP_BROADCAST_FLAG	net/lwip/include/lwip/dhcp.h	197;"	d
DHCP_BROADCAST_MASK	net/lwip/include/lwip/dhcp.h	198;"	d
DHCP_CHADDR_LEN	net/lwip/include/lwip/dhcp.h	93;"	d
DHCP_CHADDR_OFS	net/lwip/include/lwip/dhcp.h	151;"	d
DHCP_CHECKING	net/lwip/include/lwip/dhcp.h	170;"	d
DHCP_CIADDR_OFS	net/lwip/include/lwip/dhcp.h	147;"	d
DHCP_CLIENT_PORT	net/lwip/include/lwip/dhcp.h	159;"	d
DHCP_COARSE_TIMER_MSECS	net/lwip/include/lwip/dhcp.h	21;"	d
DHCP_COARSE_TIMER_SECS	net/lwip/include/lwip/dhcp.h	19;"	d
DHCP_COOKIE_OFS	net/lwip/include/lwip/dhcp.h	156;"	d
DHCP_DEBUG	net/lwip/include/lwip/opt.h	1673;"	d
DHCP_DECLINE	net/lwip/include/lwip/dhcp.h	187;"	d
DHCP_DISCOVER	net/lwip/include/lwip/dhcp.h	184;"	d
DHCP_DOES_ARP_CHECK	net/lwip/include/lwip/opt.h	490;"	d
DHCP_FILE_LEN	net/lwip/include/lwip/dhcp.h	97;"	d
DHCP_FILE_OFS	net/lwip/include/lwip/dhcp.h	153;"	d
DHCP_FINE_TIMER_MSECS	net/lwip/include/lwip/dhcp.h	23;"	d
DHCP_FLAGS_OFS	net/lwip/include/lwip/dhcp.h	146;"	d
DHCP_GIADDR_OFS	net/lwip/include/lwip/dhcp.h	150;"	d
DHCP_HLEN_ETH	net/lwip/include/lwip/dhcp.h	195;"	d
DHCP_HLEN_OFS	net/lwip/include/lwip/dhcp.h	142;"	d
DHCP_HOPS_OFS	net/lwip/include/lwip/dhcp.h	143;"	d
DHCP_HTYPE_ETH	net/lwip/include/lwip/dhcp.h	193;"	d
DHCP_HTYPE_OFS	net/lwip/include/lwip/dhcp.h	141;"	d
DHCP_INFORM	net/lwip/include/lwip/dhcp.h	191;"	d
DHCP_INFORMING	net/lwip/include/lwip/dhcp.h	169;"	d
DHCP_INIT	net/lwip/include/lwip/dhcp.h	164;"	d
DHCP_MAX_DNS	net/lwip/include/lwip/dhcp.h	55;"	d
DHCP_MIN_OPTIONS_LEN	net/lwip/include/lwip/dhcp.h	100;"	d
DHCP_MSG_LEN	net/lwip/include/lwip/dhcp.h	154;"	d
DHCP_MSG_OFS	net/lwip/include/lwip/dhcp.h	139;"	d
DHCP_NAK	net/lwip/include/lwip/dhcp.h	189;"	d
DHCP_OFF	net/lwip/include/lwip/dhcp.h	175;"	d
DHCP_OFFER	net/lwip/include/lwip/dhcp.h	185;"	d
DHCP_OPTIONS_LEN	net/lwip/include/lwip/dhcp.h	103;"	d
DHCP_OPTIONS_LEN	net/lwip/include/lwip/dhcp.h	108;"	d
DHCP_OPTIONS_OFS	net/lwip/include/lwip/dhcp.h	157;"	d
DHCP_OPTION_BOOTFILE	net/lwip/include/lwip/dhcp.h	232;"	d
DHCP_OPTION_BROADCAST	net/lwip/include/lwip/dhcp.h	208;"	d
DHCP_OPTION_CLIENT_ID	net/lwip/include/lwip/dhcp.h	230;"	d
DHCP_OPTION_DNS_SERVER	net/lwip/include/lwip/dhcp.h	204;"	d
DHCP_OPTION_END	net/lwip/include/lwip/dhcp.h	210;"	d
DHCP_OPTION_HOSTNAME	net/lwip/include/lwip/dhcp.h	205;"	d
DHCP_OPTION_IP_TTL	net/lwip/include/lwip/dhcp.h	206;"	d
DHCP_OPTION_LEASE_TIME	net/lwip/include/lwip/dhcp.h	214;"	d
DHCP_OPTION_MAX_MSG_SIZE	net/lwip/include/lwip/dhcp.h	224;"	d
DHCP_OPTION_MAX_MSG_SIZE_LEN	net/lwip/include/lwip/dhcp.h	225;"	d
DHCP_OPTION_MESSAGE_TYPE	net/lwip/include/lwip/dhcp.h	217;"	d
DHCP_OPTION_MESSAGE_TYPE_LEN	net/lwip/include/lwip/dhcp.h	218;"	d
DHCP_OPTION_MTU	net/lwip/include/lwip/dhcp.h	207;"	d
DHCP_OPTION_OVERLOAD	net/lwip/include/lwip/dhcp.h	215;"	d
DHCP_OPTION_PAD	net/lwip/include/lwip/dhcp.h	201;"	d
DHCP_OPTION_PARAMETER_REQUEST_LIST	net/lwip/include/lwip/dhcp.h	222;"	d
DHCP_OPTION_REQUESTED_IP	net/lwip/include/lwip/dhcp.h	213;"	d
DHCP_OPTION_ROUTER	net/lwip/include/lwip/dhcp.h	203;"	d
DHCP_OPTION_SERVER_ID	net/lwip/include/lwip/dhcp.h	221;"	d
DHCP_OPTION_SUBNET_MASK	net/lwip/include/lwip/dhcp.h	202;"	d
DHCP_OPTION_T1	net/lwip/include/lwip/dhcp.h	227;"	d
DHCP_OPTION_T2	net/lwip/include/lwip/dhcp.h	228;"	d
DHCP_OPTION_TCP_TTL	net/lwip/include/lwip/dhcp.h	209;"	d
DHCP_OPTION_TFTP_SERVERNAME	net/lwip/include/lwip/dhcp.h	231;"	d
DHCP_OPTION_US	net/lwip/include/lwip/dhcp.h	229;"	d
DHCP_OP_OFS	net/lwip/include/lwip/dhcp.h	140;"	d
DHCP_OVERLOAD_FILE	net/lwip/include/lwip/dhcp.h	236;"	d
DHCP_OVERLOAD_NONE	net/lwip/include/lwip/dhcp.h	235;"	d
DHCP_OVERLOAD_SNAME	net/lwip/include/lwip/dhcp.h	237;"	d
DHCP_OVERLOAD_SNAME_FILE	net/lwip/include/lwip/dhcp.h	238;"	d
DHCP_PERMANENT	net/lwip/include/lwip/dhcp.h	171;"	d
DHCP_REBINDING	net/lwip/include/lwip/dhcp.h	166;"	d
DHCP_REBOOTING	net/lwip/include/lwip/dhcp.h	165;"	d
DHCP_RELEASE	net/lwip/include/lwip/dhcp.h	190;"	d
DHCP_RENEWING	net/lwip/include/lwip/dhcp.h	167;"	d
DHCP_REQUEST	net/lwip/include/lwip/dhcp.h	186;"	d
DHCP_REQUESTING	net/lwip/include/lwip/dhcp.h	163;"	d
DHCP_SECS_OFS	net/lwip/include/lwip/dhcp.h	145;"	d
DHCP_SELECTING	net/lwip/include/lwip/dhcp.h	168;"	d
DHCP_SERVER_PORT	net/lwip/include/lwip/dhcp.h	160;"	d
DHCP_SIADDR_OFS	net/lwip/include/lwip/dhcp.h	149;"	d
DHCP_SNAME_LEN	net/lwip/include/lwip/dhcp.h	95;"	d
DHCP_SNAME_OFS	net/lwip/include/lwip/dhcp.h	152;"	d
DHCP_XID_OFS	net/lwip/include/lwip/dhcp.h	144;"	d
DHCP_YIADDR_OFS	net/lwip/include/lwip/dhcp.h	148;"	d
DISCREQ	net/lwip/netif/ppp/lcp.h	81;"	d
DISKMAP	fs/fs.h	9;"	d
DISKSIZE	fs/fs.h	12;"	d
DNS_DEBUG	net/lwip/include/lwip/opt.h	1701;"	d
DNS_DOES_NAME_CHECK	net/lwip/include/lwip/opt.h	600;"	d
DNS_FLAG1_AUTHORATIVE	net/lwip/core/dns.c	110;"	d	file:
DNS_FLAG1_OPCODE_INVERSE	net/lwip/core/dns.c	108;"	d	file:
DNS_FLAG1_OPCODE_STANDARD	net/lwip/core/dns.c	109;"	d	file:
DNS_FLAG1_OPCODE_STATUS	net/lwip/core/dns.c	107;"	d	file:
DNS_FLAG1_RD	net/lwip/core/dns.c	112;"	d	file:
DNS_FLAG1_RESPONSE	net/lwip/core/dns.c	106;"	d	file:
DNS_FLAG1_TRUNC	net/lwip/core/dns.c	111;"	d	file:
DNS_FLAG2_ERR_MASK	net/lwip/core/dns.c	114;"	d	file:
DNS_FLAG2_ERR_NAME	net/lwip/core/dns.c	116;"	d	file:
DNS_FLAG2_ERR_NONE	net/lwip/core/dns.c	115;"	d	file:
DNS_FLAG2_RA	net/lwip/core/dns.c	113;"	d	file:
DNS_MAX_NAME_LENGTH	net/lwip/include/lwip/opt.h	590;"	d
DNS_MAX_RETRIES	net/lwip/core/dns.c	97;"	d	file:
DNS_MAX_SERVERS	net/lwip/include/lwip/opt.h	595;"	d
DNS_MAX_TTL	net/lwip/core/dns.c	102;"	d	file:
DNS_MSG_SIZE	net/lwip/include/lwip/opt.h	612;"	d
DNS_RRCLASS_CH	net/lwip/include/lwip/dns.h	65;"	d
DNS_RRCLASS_CS	net/lwip/include/lwip/dns.h	64;"	d
DNS_RRCLASS_FLUSH	net/lwip/include/lwip/dns.h	67;"	d
DNS_RRCLASS_HS	net/lwip/include/lwip/dns.h	66;"	d
DNS_RRCLASS_IN	net/lwip/include/lwip/dns.h	63;"	d
DNS_RRTYPE_A	net/lwip/include/lwip/dns.h	45;"	d
DNS_RRTYPE_CNAME	net/lwip/include/lwip/dns.h	49;"	d
DNS_RRTYPE_HINFO	net/lwip/include/lwip/dns.h	57;"	d
DNS_RRTYPE_MB	net/lwip/include/lwip/dns.h	51;"	d
DNS_RRTYPE_MD	net/lwip/include/lwip/dns.h	47;"	d
DNS_RRTYPE_MF	net/lwip/include/lwip/dns.h	48;"	d
DNS_RRTYPE_MG	net/lwip/include/lwip/dns.h	52;"	d
DNS_RRTYPE_MINFO	net/lwip/include/lwip/dns.h	58;"	d
DNS_RRTYPE_MR	net/lwip/include/lwip/dns.h	53;"	d
DNS_RRTYPE_MX	net/lwip/include/lwip/dns.h	59;"	d
DNS_RRTYPE_NS	net/lwip/include/lwip/dns.h	46;"	d
DNS_RRTYPE_NULL	net/lwip/include/lwip/dns.h	54;"	d
DNS_RRTYPE_PTR	net/lwip/include/lwip/dns.h	56;"	d
DNS_RRTYPE_SOA	net/lwip/include/lwip/dns.h	50;"	d
DNS_RRTYPE_TXT	net/lwip/include/lwip/dns.h	60;"	d
DNS_RRTYPE_WKS	net/lwip/include/lwip/dns.h	55;"	d
DNS_SERVER_ADDRESS	net/lwip/core/dns.c	87;"	d	file:
DNS_SERVER_PORT	net/lwip/core/dns.c	92;"	d	file:
DNS_STATE_ASKING	net/lwip/core/dns.c	121;"	d	file:
DNS_STATE_DONE	net/lwip/core/dns.c	122;"	d	file:
DNS_STATE_NEW	net/lwip/core/dns.c	120;"	d	file:
DNS_STATE_UNUSED	net/lwip/core/dns.c	119;"	d	file:
DNS_TABLE_SIZE	net/lwip/include/lwip/opt.h	585;"	d
DNS_TMR_INTERVAL	net/lwip/include/lwip/dns.h	42;"	d
DNS_USES_STATIC_BUF	net/lwip/include/lwip/opt.h	607;"	d
DesEncrypt	net/lwip/netif/ppp/chpms.c	/^DesEncrypt( u_char *clear, \/* IN  8 octets *\/$/;"	f	file:
Dev	inc/fd.h	/^struct Dev {$/;"	s
Dir	fs/fsformat.c	/^struct Dir$/;"	s	file:
Disassembly	obj/boot/boot.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/boot1/boot.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/fs/fs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/kern/kernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/net/ns.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/net/testinput.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/net/testoutput.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/echosrv.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/echotest.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/forktree.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/hello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/httpd.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/icode.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/idle.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/init.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pingpong.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/primes.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testfile.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testtime.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/writemotd.asm	/^Disassembly of section .text:$/;"	l
E	grade-lab4	/^def E(s, trim=False):$/;"	f
E0ESC	kern/console.c	225;"	d	file:
E1000_DEVICEID	kern/e1000.h	13;"	d
E1000_EERD	kern/e1000.h	24;"	d
E1000_EERD_DONE	kern/e1000.h	27;"	d
E1000_EERD_START	kern/e1000.h	26;"	d
E1000_MMIOADDR	kern/e1000.h	15;"	d
E1000_RAH	kern/e1000.h	41;"	d
E1000_RAL	kern/e1000.h	40;"	d
E1000_RCTL	kern/e1000.h	49;"	d
E1000_RCTL_BAM	kern/e1000.h	55;"	d
E1000_RCTL_EN	kern/e1000.h	50;"	d
E1000_RCTL_LBM	kern/e1000.h	52;"	d
E1000_RCTL_LPE	kern/e1000.h	51;"	d
E1000_RCTL_MO	kern/e1000.h	54;"	d
E1000_RCTL_RDMTS	kern/e1000.h	53;"	d
E1000_RCTL_SECRC	kern/e1000.h	57;"	d
E1000_RCTL_SZ	kern/e1000.h	56;"	d
E1000_RCVDESC	kern/e1000.h	18;"	d
E1000_RDBAH	kern/e1000.h	36;"	d
E1000_RDBAL	kern/e1000.h	35;"	d
E1000_RDH	kern/e1000.h	38;"	d
E1000_RDLEN	kern/e1000.h	37;"	d
E1000_RDT	kern/e1000.h	39;"	d
E1000_RXD_STAT_DD	kern/e1000.h	67;"	d
E1000_RXD_STAT_EOP	kern/e1000.h	68;"	d
E1000_STATUS	kern/e1000.h	23;"	d
E1000_TCTL	kern/e1000.h	43;"	d
E1000_TCTL_COLD	kern/e1000.h	47;"	d
E1000_TCTL_CT	kern/e1000.h	46;"	d
E1000_TCTL_EN	kern/e1000.h	44;"	d
E1000_TCTL_PSP	kern/e1000.h	45;"	d
E1000_TDBAH	kern/e1000.h	30;"	d
E1000_TDBAL	kern/e1000.h	29;"	d
E1000_TDH	kern/e1000.h	32;"	d
E1000_TDLEN	kern/e1000.h	31;"	d
E1000_TDT	kern/e1000.h	33;"	d
E1000_TIPG	kern/e1000.h	59;"	d
E1000_TXDESC	kern/e1000.h	17;"	d
E1000_TXD_CMD_EOP	kern/e1000.h	63;"	d
E1000_TXD_CMD_RS	kern/e1000.h	62;"	d
E1000_TXD_STAT_DD	kern/e1000.h	64;"	d
E1000_VENDORID	kern/e1000.h	12;"	d
E2BIG	net/lwip/include/lwip/arch.h	75;"	d
EACCES	net/lwip/include/lwip/arch.h	81;"	d
EADDRINUSE	net/lwip/include/lwip/arch.h	168;"	d
EADDRNOTAVAIL	net/lwip/include/lwip/arch.h	169;"	d
EADV	net/lwip/include/lwip/arch.h	138;"	d
EAFNOSUPPORT	net/lwip/include/lwip/arch.h	167;"	d
EAGAIN	net/lwip/include/lwip/arch.h	79;"	d
EAI_FAIL	net/lwip/include/lwip/netdb.h	53;"	d
EAI_MEMORY	net/lwip/include/lwip/netdb.h	54;"	d
EAI_NONAME	net/lwip/include/lwip/netdb.h	51;"	d
EAI_SERVICE	net/lwip/include/lwip/netdb.h	52;"	d
EALREADY	net/lwip/include/lwip/arch.h	184;"	d
EBADE	net/lwip/include/lwip/arch.h	120;"	d
EBADF	net/lwip/include/lwip/arch.h	77;"	d
EBADFD	net/lwip/include/lwip/arch.h	147;"	d
EBADMSG	net/lwip/include/lwip/arch.h	144;"	d
EBADR	net/lwip/include/lwip/arch.h	121;"	d
EBADRQC	net/lwip/include/lwip/arch.h	124;"	d
EBADSLT	net/lwip/include/lwip/arch.h	125;"	d
EBFONT	net/lwip/include/lwip/arch.h	129;"	d
EBUSY	net/lwip/include/lwip/arch.h	84;"	d
ECHILD	net/lwip/include/lwip/arch.h	78;"	d
ECHOREP	net/lwip/netif/ppp/lcp.h	80;"	d
ECHOREQ	net/lwip/netif/ppp/lcp.h	79;"	d
ECHRNG	net/lwip/include/lwip/arch.h	112;"	d
ECOMM	net/lwip/include/lwip/arch.h	140;"	d
ECONNABORTED	net/lwip/include/lwip/arch.h	173;"	d
ECONNREFUSED	net/lwip/include/lwip/arch.h	181;"	d
ECONNRESET	net/lwip/include/lwip/arch.h	174;"	d
EDEADLK	net/lwip/include/lwip/arch.h	103;"	d
EDEADLOCK	net/lwip/include/lwip/arch.h	127;"	d
EDESTADDRREQ	net/lwip/include/lwip/arch.h	159;"	d
EDOM	net/lwip/include/lwip/arch.h	101;"	d
EDOTDOT	net/lwip/include/lwip/arch.h	143;"	d
EDQUOT	net/lwip/include/lwip/arch.h	192;"	d
EEXIST	net/lwip/include/lwip/arch.h	85;"	d
EFAULT	net/lwip/include/lwip/arch.h	82;"	d
EFBIG	net/lwip/include/lwip/arch.h	95;"	d
EFER_LME	inc/mmu.h	117;"	d
EFER_MSR	inc/mmu.h	116;"	d
EHOSTDOWN	net/lwip/include/lwip/arch.h	182;"	d
EHOSTUNREACH	net/lwip/include/lwip/arch.h	183;"	d
EIDRM	net/lwip/include/lwip/arch.h	111;"	d
EILSEQ	net/lwip/include/lwip/arch.h	154;"	d
EINPROGRESS	net/lwip/include/lwip/arch.h	185;"	d
EINTR	net/lwip/include/lwip/arch.h	72;"	d
EINVAL	net/lwip/include/lwip/arch.h	90;"	d
EIO	net/lwip/include/lwip/arch.h	73;"	d
EISCONN	net/lwip/include/lwip/arch.h	176;"	d
EISDIR	net/lwip/include/lwip/arch.h	89;"	d
EISNAM	net/lwip/include/lwip/arch.h	190;"	d
EL2HLT	net/lwip/include/lwip/arch.h	119;"	d
EL2NSYNC	net/lwip/include/lwip/arch.h	113;"	d
EL3HLT	net/lwip/include/lwip/arch.h	114;"	d
EL3RST	net/lwip/include/lwip/arch.h	115;"	d
ELFHDR	boot/main.c	33;"	d	file:
ELFHDR	boot1/main.c	33;"	d	file:
ELF_MAGIC	inc/elf.h	4;"	d
ELF_PROG_FLAG_EXEC	inc/elf.h	53;"	d
ELF_PROG_FLAG_READ	inc/elf.h	55;"	d
ELF_PROG_FLAG_WRITE	inc/elf.h	54;"	d
ELF_PROG_LOAD	inc/elf.h	50;"	d
ELF_SHN_UNDEF	inc/elf.h	64;"	d
ELF_SHT_NULL	inc/elf.h	58;"	d
ELF_SHT_PROGBITS	inc/elf.h	59;"	d
ELF_SHT_STRTAB	inc/elf.h	61;"	d
ELF_SHT_SYMTAB	inc/elf.h	60;"	d
ELIBACC	net/lwip/include/lwip/arch.h	149;"	d
ELIBBAD	net/lwip/include/lwip/arch.h	150;"	d
ELIBEXEC	net/lwip/include/lwip/arch.h	153;"	d
ELIBMAX	net/lwip/include/lwip/arch.h	152;"	d
ELIBSCN	net/lwip/include/lwip/arch.h	151;"	d
ELNRNG	net/lwip/include/lwip/arch.h	116;"	d
ELOOP	net/lwip/include/lwip/arch.h	108;"	d
EMEDIUMTYPE	net/lwip/include/lwip/arch.h	195;"	d
EMFILE	net/lwip/include/lwip/arch.h	92;"	d
EMLINK	net/lwip/include/lwip/arch.h	99;"	d
EMSGSIZE	net/lwip/include/lwip/arch.h	160;"	d
EMULTIHOP	net/lwip/include/lwip/arch.h	142;"	d
ENABLE	kern/lapic.c	19;"	d	file:
ENABLE_LOOPBACK	net/lwip/include/lwip/netif.h	37;"	d
ENAMETOOLONG	net/lwip/include/lwip/arch.h	104;"	d
ENAVAIL	net/lwip/include/lwip/arch.h	189;"	d
ENCODE	net/lwip/netif/ppp/vj.c	86;"	d	file:
ENCODEZ	net/lwip/netif/ppp/vj.c	96;"	d	file:
ENETDOWN	net/lwip/include/lwip/arch.h	170;"	d
ENETRESET	net/lwip/include/lwip/arch.h	172;"	d
ENETUNREACH	net/lwip/include/lwip/arch.h	171;"	d
ENFILE	net/lwip/include/lwip/arch.h	91;"	d
ENOANO	net/lwip/include/lwip/arch.h	123;"	d
ENOBUFS	net/lwip/include/lwip/arch.h	175;"	d
ENOCSI	net/lwip/include/lwip/arch.h	118;"	d
ENODATA	net/lwip/include/lwip/arch.h	131;"	d
ENODEV	net/lwip/include/lwip/arch.h	87;"	d
ENOENT	net/lwip/include/lwip/arch.h	70;"	d
ENOEXEC	net/lwip/include/lwip/arch.h	76;"	d
ENOLCK	net/lwip/include/lwip/arch.h	105;"	d
ENOLINK	net/lwip/include/lwip/arch.h	137;"	d
ENOMEDIUM	net/lwip/include/lwip/arch.h	194;"	d
ENOMEM	net/lwip/include/lwip/arch.h	80;"	d
ENOMSG	net/lwip/include/lwip/arch.h	110;"	d
ENONET	net/lwip/include/lwip/arch.h	134;"	d
ENOPKG	net/lwip/include/lwip/arch.h	135;"	d
ENOPROTOOPT	net/lwip/include/lwip/arch.h	162;"	d
ENOSPC	net/lwip/include/lwip/arch.h	96;"	d
ENOSR	net/lwip/include/lwip/arch.h	133;"	d
ENOSTR	net/lwip/include/lwip/arch.h	130;"	d
ENOSYS	net/lwip/include/lwip/arch.h	106;"	d
ENOTBLK	net/lwip/include/lwip/arch.h	83;"	d
ENOTCONN	net/lwip/include/lwip/arch.h	177;"	d
ENOTDIR	net/lwip/include/lwip/arch.h	88;"	d
ENOTEMPTY	net/lwip/include/lwip/arch.h	107;"	d
ENOTNAM	net/lwip/include/lwip/arch.h	188;"	d
ENOTSOCK	net/lwip/include/lwip/arch.h	158;"	d
ENOTTY	net/lwip/include/lwip/arch.h	93;"	d
ENOTUNIQ	net/lwip/include/lwip/arch.h	146;"	d
ENSRBADFAMILY	net/lwip/include/lwip/arch.h	207;"	d
ENSRBADNAME	net/lwip/include/lwip/arch.h	206;"	d
ENSRBADQUERY	net/lwip/include/lwip/arch.h	205;"	d
ENSRBADRESP	net/lwip/include/lwip/arch.h	208;"	d
ENSRCNAMELOOP	net/lwip/include/lwip/arch.h	216;"	d
ENSRCONNREFUSED	net/lwip/include/lwip/arch.h	209;"	d
ENSRDESTRUCTION	net/lwip/include/lwip/arch.h	214;"	d
ENSRFILE	net/lwip/include/lwip/arch.h	212;"	d
ENSRFORMERR	net/lwip/include/lwip/arch.h	200;"	d
ENSRNODATA	net/lwip/include/lwip/arch.h	199;"	d
ENSRNOMEM	net/lwip/include/lwip/arch.h	213;"	d
ENSRNOTFOUND	net/lwip/include/lwip/arch.h	202;"	d
ENSRNOTIMP	net/lwip/include/lwip/arch.h	203;"	d
ENSROF	net/lwip/include/lwip/arch.h	211;"	d
ENSROK	net/lwip/include/lwip/arch.h	198;"	d
ENSRQUERYDOMAINTOOLONG	net/lwip/include/lwip/arch.h	215;"	d
ENSRREFUSED	net/lwip/include/lwip/arch.h	204;"	d
ENSRSERVFAIL	net/lwip/include/lwip/arch.h	201;"	d
ENSRTIMEOUT	net/lwip/include/lwip/arch.h	210;"	d
ENTRY	net/lwip/jos/arch/longjmp.S	/^#define ENTRY(x) \\$/;"	d
ENVGENSHIFT	kern/env.c	24;"	d	file:
ENVX	inc/env.h	31;"	d
ENV_CREATE	kern/env.h	29;"	d
ENV_DYING	inc/env.h	/^	ENV_DYING,$/;"	e	enum:__anon1
ENV_FREE	inc/env.h	/^	ENV_FREE = 0,$/;"	e	enum:__anon1
ENV_NOT_RUNNABLE	inc/env.h	/^	ENV_NOT_RUNNABLE$/;"	e	enum:__anon1
ENV_PASTE3	kern/env.h	27;"	d
ENV_RUNNABLE	inc/env.h	/^	ENV_RUNNABLE,$/;"	e	enum:__anon1
ENV_RUNNING	inc/env.h	/^	ENV_RUNNING,$/;"	e	enum:__anon1
ENV_TYPE_FS	inc/env.h	/^	ENV_TYPE_FS,		\/\/ File system server$/;"	e	enum:EnvType
ENV_TYPE_IDLE	inc/env.h	/^	ENV_TYPE_IDLE,$/;"	e	enum:EnvType
ENV_TYPE_NS	inc/env.h	/^	ENV_TYPE_NS,		\/\/ Network server$/;"	e	enum:EnvType
ENV_TYPE_USER	inc/env.h	/^	ENV_TYPE_USER = 0,$/;"	e	enum:EnvType
ENXIO	net/lwip/include/lwip/arch.h	74;"	d
EOI	kern/lapic.c	17;"	d	file:
EOPNOTSUPP	net/lwip/include/lwip/arch.h	165;"	d
EOVERFLOW	net/lwip/include/lwip/arch.h	145;"	d
EPERM	net/lwip/include/lwip/arch.h	69;"	d
EPFNOSUPPORT	net/lwip/include/lwip/arch.h	166;"	d
EPIPE	net/lwip/include/lwip/arch.h	100;"	d
EPROTO	net/lwip/include/lwip/arch.h	141;"	d
EPROTONOSUPPORT	net/lwip/include/lwip/arch.h	163;"	d
EPROTOTYPE	net/lwip/include/lwip/arch.h	161;"	d
ERANGE	net/lwip/include/lwip/arch.h	102;"	d
EREMCHG	net/lwip/include/lwip/arch.h	148;"	d
EREMOTE	net/lwip/include/lwip/arch.h	136;"	d
EREMOTEIO	net/lwip/include/lwip/arch.h	191;"	d
ERESTART	net/lwip/include/lwip/arch.h	155;"	d
EROFS	net/lwip/include/lwip/arch.h	98;"	d
ERRNO	net/lwip/jos/lwipopts.h	61;"	d
ERROR	kern/lapic.c	39;"	d	file:
ERR_ABRT	net/lwip/include/lwip/err.h	60;"	d
ERR_ARG	net/lwip/include/lwip/err.h	67;"	d
ERR_BUF	net/lwip/include/lwip/err.h	54;"	d
ERR_CLSD	net/lwip/include/lwip/err.h	62;"	d
ERR_CONN	net/lwip/include/lwip/err.h	63;"	d
ERR_IF	net/lwip/include/lwip/err.h	71;"	d
ERR_INPROGRESS	net/lwip/include/lwip/err.h	74;"	d
ERR_ISCONN	net/lwip/include/lwip/err.h	72;"	d
ERR_IS_FATAL	net/lwip/include/lwip/err.h	58;"	d
ERR_MEM	net/lwip/include/lwip/err.h	53;"	d
ERR_OK	net/lwip/include/lwip/err.h	52;"	d
ERR_RST	net/lwip/include/lwip/err.h	61;"	d
ERR_RTE	net/lwip/include/lwip/err.h	56;"	d
ERR_TIMEOUT	net/lwip/include/lwip/err.h	55;"	d
ERR_TO_ERRNO_TABLE_SIZE	net/lwip/api/sockets.c	145;"	d	file:
ERR_USE	net/lwip/include/lwip/err.h	69;"	d
ERR_VAL	net/lwip/include/lwip/err.h	65;"	d
ESCAPE_P	net/lwip/netif/ppp/ppp.c	135;"	d	file:
ESHUTDOWN	net/lwip/include/lwip/arch.h	178;"	d
ESOCKTNOSUPPORT	net/lwip/include/lwip/arch.h	164;"	d
ESPIPE	net/lwip/include/lwip/arch.h	97;"	d
ESR	kern/lapic.c	20;"	d	file:
ESRCH	net/lwip/include/lwip/arch.h	71;"	d
ESRMNT	net/lwip/include/lwip/arch.h	139;"	d
ESTABLISHED	net/lwip/include/lwip/tcp.h	/^  ESTABLISHED = 4,$/;"	e	enum:tcp_state
ESTALE	net/lwip/include/lwip/arch.h	186;"	d
ESTRPIPE	net/lwip/include/lwip/arch.h	156;"	d
ETHARP_DEBUG	net/lwip/include/lwip/opt.h	1476;"	d
ETHARP_FIND_ONLY	net/lwip/netif/etharp.c	118;"	d	file:
ETHARP_HWADDR_LEN	net/lwip/include/netif/etharp.h	56;"	d
ETHARP_STATE_EMPTY	net/lwip/netif/etharp.c	/^  ETHARP_STATE_EMPTY = 0,$/;"	e	enum:etharp_state	file:
ETHARP_STATE_PENDING	net/lwip/netif/etharp.c	/^  ETHARP_STATE_PENDING,$/;"	e	enum:etharp_state	file:
ETHARP_STATE_STABLE	net/lwip/netif/etharp.c	/^  ETHARP_STATE_STABLE$/;"	e	enum:etharp_state	file:
ETHARP_STATS	net/lwip/include/lwip/opt.h	1157;"	d
ETHARP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	202;"	d
ETHARP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	205;"	d
ETHARP_STATS_INC	net/lwip/include/lwip/stats.h	201;"	d
ETHARP_STATS_INC	net/lwip/include/lwip/stats.h	204;"	d
ETHARP_TRUST_IP_MAC	net/lwip/include/lwip/opt.h	348;"	d
ETHARP_TRY_HARD	net/lwip/netif/etharp.c	117;"	d	file:
ETHERMTU	net/lwip/include/netif/ppp_oe.h	135;"	d
ETHTYPE_ARP	net/lwip/include/netif/etharp.h	125;"	d
ETHTYPE_IP	net/lwip/include/netif/etharp.h	126;"	d
ETHTYPE_PPPOE	net/lwip/include/netif/etharp.h	128;"	d
ETHTYPE_PPPOEDISC	net/lwip/include/netif/etharp.h	127;"	d
ETH_PAD_SIZE	net/lwip/include/netif/etharp.h	52;"	d
ETIME	net/lwip/include/lwip/arch.h	132;"	d
ETIMEDOUT	net/lwip/include/lwip/arch.h	180;"	d
ETOOMANYREFS	net/lwip/include/lwip/arch.h	179;"	d
ETXTBSY	net/lwip/include/lwip/arch.h	94;"	d
EUCLEAN	net/lwip/include/lwip/arch.h	187;"	d
EUNATCH	net/lwip/include/lwip/arch.h	117;"	d
EUSERS	net/lwip/include/lwip/arch.h	157;"	d
EWOULDBLOCK	net/lwip/include/lwip/arch.h	109;"	d
EXDEV	net/lwip/include/lwip/arch.h	86;"	d
EXFULL	net/lwip/include/lwip/arch.h	122;"	d
EXTPHYSMEM	inc/memlayout.h	93;"	d
E_BAD_ENV	inc/error.h	/^	E_BAD_ENV	= 2,	\/\/ Environment doesn't exist or otherwise$/;"	e	enum:__anon6
E_BAD_PATH	inc/error.h	/^	E_BAD_PATH	= 12,	\/\/ Bad path$/;"	e	enum:__anon6
E_BAD_REQ	user/httpd.c	9;"	d	file:
E_EOF	inc/error.h	/^	E_EOF		= 8,	\/\/ Unexpected end of file$/;"	e	enum:__anon6
E_FAULT	inc/error.h	/^	E_FAULT		= 6,	\/\/ Memory fault$/;"	e	enum:__anon6
E_FILE_EXISTS	inc/error.h	/^	E_FILE_EXISTS	= 13,	\/\/ File already exists$/;"	e	enum:__anon6
E_INVAL	inc/error.h	/^	E_INVAL		= 3,	\/\/ Invalid parameter$/;"	e	enum:__anon6
E_IPC_NOT_RECV	inc/error.h	/^	E_IPC_NOT_RECV	= 7,	\/\/ Attempt to send to env that is not recving$/;"	e	enum:__anon6
E_MAX_OPEN	inc/error.h	/^	E_MAX_OPEN	= 10,	\/\/ Too many files are open$/;"	e	enum:__anon6
E_NOT_EXEC	inc/error.h	/^	E_NOT_EXEC	= 14,	\/\/ File not a valid executable$/;"	e	enum:__anon6
E_NOT_FOUND	inc/error.h	/^	E_NOT_FOUND	= 11, 	\/\/ File or block not found$/;"	e	enum:__anon6
E_NOT_SUPP	inc/error.h	/^	E_NOT_SUPP	= 15,	\/\/ Operation not supported$/;"	e	enum:__anon6
E_NO_DISK	inc/error.h	/^	E_NO_DISK	= 9,	\/\/ No free space left on disk$/;"	e	enum:__anon6
E_NO_FREE_ENV	inc/error.h	/^	E_NO_FREE_ENV	= 5,	\/\/ Attempt to create a new environment beyond$/;"	e	enum:__anon6
E_NO_MEM	inc/error.h	/^	E_NO_MEM	= 4,	\/\/ Request failed due to memory shortage$/;"	e	enum:__anon6
E_PKT_TOO_LONG	inc/error.h	/^        E_PKT_TOO_LONG  = 18,   \/\/ Packet size is too big$/;"	e	enum:__anon6
E_RCV_EMPTY	inc/error.h	/^        E_RCV_EMPTY     = 17,   \/\/ Receive queue is empty$/;"	e	enum:__anon6
E_TX_FULL	inc/error.h	/^	E_TX_FULL       = 16,   \/\/ Transfer queue is full$/;"	e	enum:__anon6
E_UNSPECIFIED	inc/error.h	/^	E_UNSPECIFIED	= 1,	\/\/ Unspecified or unknown problem$/;"	e	enum:__anon6
Elf	inc/elf.h	/^struct Elf {$/;"	s
Env	inc/env.h	/^struct Env {$/;"	s
EnvType	inc/env.h	/^enum EnvType {$/;"	g
Expand	net/lwip/netif/ppp/chpms.c	/^Expand(u_char *in, u_char *out)$/;"	f	file:
F	net/lwip/netif/ppp/md5.c	71;"	d	file:
FDTABLE	lib/fd.c	8;"	d	file:
FD_CLR	net/lwip/include/lwip/sockets.h	277;"	d
FD_ISSET	net/lwip/include/lwip/sockets.h	278;"	d
FD_SET	net/lwip/include/lwip/sockets.h	276;"	d
FD_SETSIZE	net/lwip/include/lwip/sockets.h	273;"	d
FD_SETSIZE	net/lwip/include/lwip/sockets.h	275;"	d
FD_ZERO	net/lwip/include/lwip/sockets.h	279;"	d
FEC_PR	inc/mmu.h	143;"	d
FEC_U	inc/mmu.h	145;"	d
FEC_WR	inc/mmu.h	144;"	d
FF	net/lwip/netif/ppp/md5.c	81;"	d	file:
FILEDATA	lib/fd.c	11;"	d	file:
FILEVA	fs/serv.c	41;"	d	file:
FIN_WAIT_1	net/lwip/include/lwip/tcp.h	/^  FIN_WAIT_1  = 5,$/;"	e	enum:tcp_state
FIN_WAIT_2	net/lwip/include/lwip/tcp.h	/^  FIN_WAIT_2  = 6,$/;"	e	enum:tcp_state
FIONBIO	net/lwip/include/lwip/sockets.h	254;"	d
FIONREAD	net/lwip/include/lwip/sockets.h	251;"	d
FIXED	kern/lapic.c	31;"	d	file:
FL_AC	inc/mmu.h	137;"	d
FL_AF	inc/mmu.h	122;"	d
FL_CF	inc/mmu.h	120;"	d
FL_DF	inc/mmu.h	127;"	d
FL_ID	inc/mmu.h	140;"	d
FL_IF	inc/mmu.h	126;"	d
FL_IOPL_0	inc/mmu.h	130;"	d
FL_IOPL_1	inc/mmu.h	131;"	d
FL_IOPL_2	inc/mmu.h	132;"	d
FL_IOPL_3	inc/mmu.h	133;"	d
FL_IOPL_MASK	inc/mmu.h	129;"	d
FL_NT	inc/mmu.h	134;"	d
FL_OF	inc/mmu.h	128;"	d
FL_PF	inc/mmu.h	121;"	d
FL_RF	inc/mmu.h	135;"	d
FL_SF	inc/mmu.h	124;"	d
FL_TF	inc/mmu.h	125;"	d
FL_VIF	inc/mmu.h	138;"	d
FL_VIP	inc/mmu.h	139;"	d
FL_VM	inc/mmu.h	136;"	d
FL_ZF	inc/mmu.h	123;"	d
FOLD_U32T	net/lwip/core/ipv4/inet_chksum.c	69;"	d	file:
FSMDEBUG	net/lwip/netif/ppp/pppdebug.h	70;"	d
FSMDEBUG	net/lwip/netif/ppp/pppdebug.h	80;"	d
FSM_DEFMAXCONFREQS	net/lwip/include/lwip/opt.h	1338;"	d
FSM_DEFMAXNAKLOOPS	net/lwip/include/lwip/opt.h	1342;"	d
FSM_DEFMAXTERMREQS	net/lwip/include/lwip/opt.h	1334;"	d
FSM_DEFTIMEOUT	net/lwip/include/lwip/opt.h	1330;"	d
FSM_H	net/lwip/netif/ppp/fsm.h	55;"	d
FSREQ_FLUSH	inc/fs.h	/^	FSREQ_FLUSH,$/;"	e	enum:__anon7
FSREQ_OPEN	inc/fs.h	/^	FSREQ_OPEN = 1,$/;"	e	enum:__anon7
FSREQ_READ	inc/fs.h	/^	FSREQ_READ,$/;"	e	enum:__anon7
FSREQ_REMOVE	inc/fs.h	/^	FSREQ_REMOVE,$/;"	e	enum:__anon7
FSREQ_SET_SIZE	inc/fs.h	/^	FSREQ_SET_SIZE,$/;"	e	enum:__anon7
FSREQ_STAT	inc/fs.h	/^	FSREQ_STAT,$/;"	e	enum:__anon7
FSREQ_SYNC	inc/fs.h	/^	FSREQ_SYNC$/;"	e	enum:__anon7
FSREQ_WRITE	inc/fs.h	/^	FSREQ_WRITE,$/;"	e	enum:__anon7
FS_MAGIC	inc/fs.h	54;"	d
FTYPE_DIR	inc/fs.h	49;"	d
FTYPE_REG	inc/fs.h	48;"	d
FVA	obj/user/testfile.asm	/^#define FVA ((struct Fd*)0xCCCCC000)$/;"	d
FVA	user/testfile.c	5;"	d	file:
Fd	inc/fd.h	/^struct Fd {$/;"	s
FdFile	inc/fd.h	/^struct FdFile {$/;"	s
FdSock	inc/fd.h	/^struct FdSock {$/;"	s
File	inc/fs.h	/^struct File {$/;"	s
Fsipc	inc/fs.h	/^union Fsipc {$/;"	u
Fsreq_flush	inc/fs.h	/^	struct Fsreq_flush {$/;"	s	union:Fsipc
Fsreq_open	inc/fs.h	/^	struct Fsreq_open {$/;"	s	union:Fsipc
Fsreq_read	inc/fs.h	/^	struct Fsreq_read {$/;"	s	union:Fsipc
Fsreq_remove	inc/fs.h	/^	struct Fsreq_remove {$/;"	s	union:Fsipc
Fsreq_set_size	inc/fs.h	/^	struct Fsreq_set_size {$/;"	s	union:Fsipc
Fsreq_stat	inc/fs.h	/^	struct Fsreq_stat {$/;"	s	union:Fsipc
Fsreq_write	inc/fs.h	/^	struct Fsreq_write {$/;"	s	union:Fsipc
Fsret_read	inc/fs.h	/^	struct Fsret_read {$/;"	s	union:Fsipc
Fsret_stat	inc/fs.h	/^	struct Fsret_stat {$/;"	s	union:Fsipc
G	net/lwip/netif/ppp/md5.c	72;"	d	file:
GCCPREFIX	GNUmakefile	/^GCCPREFIX := $(shell if i386-jos-elf-objdump -i 2>&1 | grep '^elf64-x86-64$$' >\/dev\/null 2>&1; \\$/;"	m
GCC_LIB	GNUmakefile	/^GCC_LIB := $(shell $(CC) $(CFLAGS) -print-libgcc-file-name)$/;"	m
GDBClient	gradelib.py	/^class GDBClient(object):$/;"	c
GDBPORT	GNUmakefile	/^GDBPORT	:= $(shell expr `id -u` % 5000 + 25000)$/;"	m
GD_KD	inc/memlayout.h	17;"	d
GD_KT	inc/memlayout.h	16;"	d
GD_TSS0	inc/memlayout.h	20;"	d
GD_UD	inc/memlayout.h	19;"	d
GD_UT	inc/memlayout.h	18;"	d
GETCHAR	net/lwip/netif/ppp/ppp.h	176;"	d
GETLONG	net/lwip/netif/ppp/ppp.h	193;"	d
GETSHORT	net/lwip/netif/ppp/ppp.h	184;"	d
GG	net/lwip/netif/ppp/md5.c	86;"	d	file:
Gatedesc	inc/mmu.h	/^struct Gatedesc {$/;"	s
Get7Bits	net/lwip/netif/ppp/chpms.c	/^Get7Bits( u_char *input, int startBit)$/;"	f	file:
GetMask	net/lwip/netif/ppp/ppp.c	/^GetMask(u32_t addr)$/;"	f
H	net/lwip/netif/ppp/md5.c	73;"	d	file:
HEADERLEN	net/lwip/netif/ppp/fsm.h	63;"	d
HH	net/lwip/netif/ppp/md5.c	91;"	d	file:
HOSTENT_STORAGE	net/lwip/api/netdb.c	65;"	d	file:
HOSTENT_STORAGE	net/lwip/api/netdb.c	67;"	d	file:
HOST_NOT_FOUND	net/lwip/include/lwip/netdb.h	56;"	d
HTTP_VERSION	user/httpd.c	7;"	d	file:
HWTYPE_ETHERNET	net/lwip/netif/etharp.c	79;"	d	file:
I	net/lwip/netif/ppp/md5.c	74;"	d	file:
ICMP6_DUR	net/lwip/include/ipv6/lwip/icmp.h	46;"	d
ICMP6_ECHO	net/lwip/include/ipv6/lwip/icmp.h	48;"	d
ICMP6_ER	net/lwip/include/ipv6/lwip/icmp.h	49;"	d
ICMP6_TE	net/lwip/include/ipv6/lwip/icmp.h	47;"	d
ICMPH_CODE	net/lwip/include/ipv4/lwip/icmp.h	110;"	d
ICMPH_CODE_SET	net/lwip/include/ipv4/lwip/icmp.h	113;"	d
ICMPH_TYPE	net/lwip/include/ipv4/lwip/icmp.h	109;"	d
ICMPH_TYPE_SET	net/lwip/include/ipv4/lwip/icmp.h	112;"	d
ICMP_DEBUG	net/lwip/include/lwip/opt.h	1518;"	d
ICMP_DEST_UNREACH_DATASIZE	net/lwip/core/ipv4/icmp.c	57;"	d	file:
ICMP_DUR	net/lwip/include/ipv4/lwip/icmp.h	48;"	d
ICMP_DUR_FRAG	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_FRAG = 4,   \/* fragmentation needed and DF set *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_FRAG	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_FRAG = 4,   \/* fragmentation needed and DF set *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_HOST	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_HOST = 1,   \/* host unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_HOST	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_HOST = 1,   \/* host unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_NET	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_NET = 0,    \/* net unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_NET	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_NET = 0,    \/* net unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_PORT	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_PORT = 3,   \/* port unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_PORT	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_PORT = 3,   \/* port unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_PROTO	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_PROTO = 2,  \/* protocol unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_PROTO	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_PROTO = 2,  \/* protocol unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_SR	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_SR = 5      \/* source route failed *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_SR	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_SR = 5      \/* source route failed *\/$/;"	e	enum:icmp_dur_type
ICMP_ECHO	net/lwip/include/ipv4/lwip/icmp.h	51;"	d
ICMP_ER	net/lwip/include/ipv4/lwip/icmp.h	47;"	d
ICMP_IR	net/lwip/include/ipv4/lwip/icmp.h	57;"	d
ICMP_IRQ	net/lwip/include/ipv4/lwip/icmp.h	56;"	d
ICMP_PP	net/lwip/include/ipv4/lwip/icmp.h	53;"	d
ICMP_RD	net/lwip/include/ipv4/lwip/icmp.h	50;"	d
ICMP_SQ	net/lwip/include/ipv4/lwip/icmp.h	49;"	d
ICMP_STATS	net/lwip/include/lwip/opt.h	1179;"	d
ICMP_STATS	net/lwip/include/lwip/opt.h	1231;"	d
ICMP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	170;"	d
ICMP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	173;"	d
ICMP_STATS_INC	net/lwip/include/lwip/stats.h	169;"	d
ICMP_STATS_INC	net/lwip/include/lwip/stats.h	172;"	d
ICMP_TE	net/lwip/include/ipv4/lwip/icmp.h	52;"	d
ICMP_TE_FRAG	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_TE_FRAG = 1     \/* fragment reassembly time exceeded *\/$/;"	e	enum:icmp_te_type
ICMP_TE_FRAG	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_TE_FRAG = 1     \/* fragment reassembly time exceeded *\/$/;"	e	enum:icmp_te_type
ICMP_TE_TTL	net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_TE_TTL = 0,     \/* time to live exceeded in transit *\/$/;"	e	enum:icmp_te_type
ICMP_TE_TTL	net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_TE_TTL = 0,     \/* time to live exceeded in transit *\/$/;"	e	enum:icmp_te_type
ICMP_TS	net/lwip/include/ipv4/lwip/icmp.h	54;"	d
ICMP_TSR	net/lwip/include/ipv4/lwip/icmp.h	55;"	d
ICMP_TTL	net/lwip/include/lwip/opt.h	452;"	d
ICRHI	kern/lapic.c	32;"	d	file:
ICRLO	kern/lapic.c	21;"	d	file:
ID	kern/lapic.c	14;"	d	file:
IDE_BSY	fs/ide.c	10;"	d	file:
IDE_DF	fs/ide.c	12;"	d	file:
IDE_DRDY	fs/ide.c	11;"	d	file:
IDE_ERR	fs/ide.c	13;"	d	file:
IFF_PASSIVE	net/lwip/netif/ppp/ppp_oe.c	188;"	d	file:
IGMP_ADD_MAC_FILTER	net/lwip/include/ipv4/lwip/igmp.h	73;"	d
IGMP_DEBUG	net/lwip/include/lwip/opt.h	1525;"	d
IGMP_DEL_MAC_FILTER	net/lwip/include/ipv4/lwip/igmp.h	72;"	d
IGMP_GROUP_DELAYING_MEMBER	net/lwip/include/ipv4/lwip/igmp.h	77;"	d
IGMP_GROUP_IDLE_MEMBER	net/lwip/include/ipv4/lwip/igmp.h	78;"	d
IGMP_GROUP_NON_MEMBER	net/lwip/include/ipv4/lwip/igmp.h	76;"	d
IGMP_JOIN_DELAYING_MEMBER_TMR	net/lwip/include/ipv4/lwip/igmp.h	69;"	d
IGMP_LEAVE_GROUP	net/lwip/include/ipv4/lwip/igmp.h	64;"	d
IGMP_MEMB_QUERY	net/lwip/include/ipv4/lwip/igmp.h	61;"	d
IGMP_MINLEN	net/lwip/include/ipv4/lwip/igmp.h	54;"	d
IGMP_STATS	net/lwip/include/lwip/opt.h	1186;"	d
IGMP_STATS	net/lwip/include/lwip/opt.h	1232;"	d
IGMP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	178;"	d
IGMP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	181;"	d
IGMP_STATS_INC	net/lwip/include/lwip/stats.h	177;"	d
IGMP_STATS_INC	net/lwip/include/lwip/stats.h	180;"	d
IGMP_TMR_INTERVAL	net/lwip/include/ipv4/lwip/igmp.h	67;"	d
IGMP_TTL	net/lwip/include/ipv4/lwip/igmp.h	53;"	d
IGMP_V1_DELAYING_MEMBER_TMR	net/lwip/include/ipv4/lwip/igmp.h	68;"	d
IGMP_V1_MEMB_REPORT	net/lwip/include/ipv4/lwip/igmp.h	62;"	d
IGMP_V2_MEMB_REPORT	net/lwip/include/ipv4/lwip/igmp.h	63;"	d
II	net/lwip/netif/ppp/md5.c	96;"	d	file:
IMAGES	GNUmakefile	/^IMAGES = $(OBJDIR)\/kern\/kernel.img$/;"	m
INADDR_ANY	net/lwip/include/lwip/sockets.h	127;"	d
INADDR_BROADCAST	net/lwip/include/lwip/sockets.h	128;"	d
INADDR_LOOPBACK	net/lwip/include/ipv4/lwip/ip_addr.h	81;"	d
INADDR_NONE	net/lwip/include/ipv4/lwip/ip_addr.h	80;"	d
INCPTR	net/lwip/netif/ppp/ppp.h	207;"	d
INCR	net/lwip/netif/ppp/vj.c	45;"	d	file:
INCR	net/lwip/netif/ppp/vj.c	47;"	d	file:
INDEX2DATA	lib/fd.c	16;"	d	file:
INDEX2FD	lib/fd.c	14;"	d	file:
INET_DEBUG	net/lwip/include/lwip/opt.h	1532;"	d
INIT	kern/lapic.c	22;"	d	file:
IN_BADCLASS	net/lwip/include/ipv4/lwip/ip_addr.h	112;"	d
IN_CLASSA	net/lwip/include/ipv4/lwip/ip_addr.h	88;"	d
IN_CLASSA_HOST	net/lwip/include/ipv4/lwip/ip_addr.h	91;"	d
IN_CLASSA_MAX	net/lwip/include/ipv4/lwip/ip_addr.h	92;"	d
IN_CLASSA_NET	net/lwip/include/ipv4/lwip/ip_addr.h	89;"	d
IN_CLASSA_NSHIFT	net/lwip/include/ipv4/lwip/ip_addr.h	90;"	d
IN_CLASSB	net/lwip/include/ipv4/lwip/ip_addr.h	94;"	d
IN_CLASSB_HOST	net/lwip/include/ipv4/lwip/ip_addr.h	97;"	d
IN_CLASSB_MAX	net/lwip/include/ipv4/lwip/ip_addr.h	98;"	d
IN_CLASSB_NET	net/lwip/include/ipv4/lwip/ip_addr.h	95;"	d
IN_CLASSB_NSHIFT	net/lwip/include/ipv4/lwip/ip_addr.h	96;"	d
IN_CLASSC	net/lwip/include/ipv4/lwip/ip_addr.h	100;"	d
IN_CLASSC_HOST	net/lwip/include/ipv4/lwip/ip_addr.h	103;"	d
IN_CLASSC_NET	net/lwip/include/ipv4/lwip/ip_addr.h	101;"	d
IN_CLASSC_NSHIFT	net/lwip/include/ipv4/lwip/ip_addr.h	102;"	d
IN_CLASSD	net/lwip/include/ipv4/lwip/ip_addr.h	105;"	d
IN_CLASSD_HOST	net/lwip/include/ipv4/lwip/ip_addr.h	108;"	d
IN_CLASSD_NET	net/lwip/include/ipv4/lwip/ip_addr.h	106;"	d
IN_CLASSD_NSHIFT	net/lwip/include/ipv4/lwip/ip_addr.h	107;"	d
IN_EXPERIMENTAL	net/lwip/include/ipv4/lwip/ip_addr.h	111;"	d
IN_LOOPBACKNET	net/lwip/include/ipv4/lwip/ip_addr.h	114;"	d
IN_MULTICAST	net/lwip/include/ipv4/lwip/ip_addr.h	109;"	d
IOCPARM_MASK	net/lwip/include/lwip/sockets.h	236;"	d
IOC_IN	net/lwip/include/lwip/sockets.h	239;"	d
IOC_INOUT	net/lwip/include/lwip/sockets.h	240;"	d
IOC_OUT	net/lwip/include/lwip/sockets.h	238;"	d
IOC_VOID	net/lwip/include/lwip/sockets.h	237;"	d
IOPHYSMEM	inc/memlayout.h	92;"	d
IO_PIC1	kern/picirq.h	12;"	d
IO_PIC2	kern/picirq.h	13;"	d
IO_RTC	kern/kclock.h	9;"	d
IO_RTC	kern/lapic.c	137;"	d	file:
IP	net/ns.h	4;"	d
IP4_ADDR	net/lwip/include/ipv4/lwip/ip_addr.h	116;"	d
IP6_ADDR	net/lwip/include/ipv6/lwip/ip_addr.h	71;"	d
IPADDR	user/echotest.c	6;"	d	file:
IPCPDEBUG	net/lwip/netif/ppp/pppdebug.h	67;"	d
IPCPDEBUG	net/lwip/netif/ppp/pppdebug.h	77;"	d
IPCP_H	net/lwip/netif/ppp/ipcp.h	55;"	d
IPCP_VJMODE_OLD	net/lwip/netif/ppp/ipcp.h	72;"	d
IPCP_VJMODE_RFC1172	net/lwip/netif/ppp/ipcp.h	73;"	d
IPCP_VJMODE_RFC1332	net/lwip/netif/ppp/ipcp.h	74;"	d
IPCP_VJ_COMP	net/lwip/netif/ppp/ipcp.h	77;"	d
IPCP_VJ_COMP_OLD	net/lwip/netif/ppp/ipcp.h	78;"	d
IPFRAG_STATS	net/lwip/include/lwip/opt.h	1172;"	d
IPFRAG_STATS	net/lwip/include/lwip/opt.h	1230;"	d
IPFRAG_STATS_DISPLAY	net/lwip/include/lwip/stats.h	194;"	d
IPFRAG_STATS_DISPLAY	net/lwip/include/lwip/stats.h	197;"	d
IPFRAG_STATS_INC	net/lwip/include/lwip/stats.h	193;"	d
IPFRAG_STATS_INC	net/lwip/include/lwip/stats.h	196;"	d
IPH_CHKSUM	net/lwip/include/ipv4/lwip/ip.h	151;"	d
IPH_CHKSUM_SET	net/lwip/include/ipv4/lwip/ip.h	159;"	d
IPH_HL	net/lwip/include/ipv4/lwip/ip.h	144;"	d
IPH_ID	net/lwip/include/ipv4/lwip/ip.h	147;"	d
IPH_ID_SET	net/lwip/include/ipv4/lwip/ip.h	155;"	d
IPH_LEN	net/lwip/include/ipv4/lwip/ip.h	146;"	d
IPH_LEN_SET	net/lwip/include/ipv4/lwip/ip.h	154;"	d
IPH_OFFSET	net/lwip/include/ipv4/lwip/ip.h	148;"	d
IPH_OFFSET_SET	net/lwip/include/ipv4/lwip/ip.h	156;"	d
IPH_PROTO	net/lwip/include/ipv4/lwip/ip.h	150;"	d
IPH_PROTO	net/lwip/include/ipv6/lwip/ip.h	99;"	d
IPH_PROTO_SET	net/lwip/include/ipv4/lwip/ip.h	158;"	d
IPH_TOS	net/lwip/include/ipv4/lwip/ip.h	145;"	d
IPH_TTL	net/lwip/include/ipv4/lwip/ip.h	149;"	d
IPH_TTL_SET	net/lwip/include/ipv4/lwip/ip.h	157;"	d
IPH_V	net/lwip/include/ipv4/lwip/ip.h	143;"	d
IPH_VHLTOS_SET	net/lwip/include/ipv4/lwip/ip.h	153;"	d
IPPROTO_IP	net/lwip/include/lwip/sockets.h	122;"	d
IPPROTO_TCP	net/lwip/include/lwip/sockets.h	123;"	d
IPPROTO_UDP	net/lwip/include/lwip/sockets.h	124;"	d
IPPROTO_UDPLITE	net/lwip/include/lwip/sockets.h	125;"	d
IPTOS_LOWCOST	net/lwip/include/lwip/sockets.h	201;"	d
IPTOS_LOWDELAY	net/lwip/include/lwip/sockets.h	198;"	d
IPTOS_MINCOST	net/lwip/include/lwip/sockets.h	202;"	d
IPTOS_PREC	net/lwip/include/lwip/sockets.h	214;"	d
IPTOS_PREC_CRITIC_ECP	net/lwip/include/lwip/sockets.h	217;"	d
IPTOS_PREC_FLASH	net/lwip/include/lwip/sockets.h	219;"	d
IPTOS_PREC_FLASHOVERRIDE	net/lwip/include/lwip/sockets.h	218;"	d
IPTOS_PREC_IMMEDIATE	net/lwip/include/lwip/sockets.h	220;"	d
IPTOS_PREC_INTERNETCONTROL	net/lwip/include/lwip/sockets.h	216;"	d
IPTOS_PREC_MASK	net/lwip/include/lwip/sockets.h	213;"	d
IPTOS_PREC_NETCONTROL	net/lwip/include/lwip/sockets.h	215;"	d
IPTOS_PREC_PRIORITY	net/lwip/include/lwip/sockets.h	221;"	d
IPTOS_PREC_ROUTINE	net/lwip/include/lwip/sockets.h	222;"	d
IPTOS_RELIABILITY	net/lwip/include/lwip/sockets.h	200;"	d
IPTOS_THROUGHPUT	net/lwip/include/lwip/sockets.h	199;"	d
IPTOS_TOS	net/lwip/include/lwip/sockets.h	197;"	d
IPTOS_TOS_MASK	net/lwip/include/lwip/sockets.h	196;"	d
IP_ADDRESSES_AND_ID_MATCH	net/lwip/core/ipv4/ip_frag.c	91;"	d	file:
IP_ADDR_ANY	net/lwip/include/ipv4/lwip/ip_addr.h	77;"	d
IP_ADDR_ANY	net/lwip/include/ipv6/lwip/ip_addr.h	41;"	d
IP_ADDR_ANY_VALUE	net/lwip/core/ipv4/ip_addr.c	44;"	d	file:
IP_ADDR_BROADCAST	net/lwip/include/ipv4/lwip/ip_addr.h	78;"	d
IP_ADDR_BROADCAST_VALUE	net/lwip/core/ipv4/ip_addr.c	45;"	d	file:
IP_ADD_MEMBERSHIP	net/lwip/include/lwip/sockets.h	168;"	d
IP_DEBUG	net/lwip/include/lwip/opt.h	1539;"	d
IP_DEFAULT_TTL	net/lwip/include/lwip/opt.h	432;"	d
IP_DF	net/lwip/include/ipv4/lwip/ip.h	127;"	d
IP_DF	net/lwip/netif/ppp/vjbsdhdr.h	33;"	d
IP_DROP_MEMBERSHIP	net/lwip/include/lwip/sockets.h	169;"	d
IP_FORWARD	net/lwip/include/lwip/opt.h	362;"	d
IP_FRAG	net/lwip/include/lwip/opt.h	389;"	d
IP_FRAG_MAX_MTU	net/lwip/include/lwip/opt.h	425;"	d
IP_FRAG_USES_STATIC_BUF	net/lwip/include/lwip/opt.h	417;"	d
IP_HDRINCL	net/lwip/include/ipv4/lwip/ip.h	66;"	d
IP_HDRINCL	net/lwip/include/ipv4/lwip/ip.h	68;"	d
IP_HDRINCL	net/lwip/include/ipv6/lwip/ip.h	57;"	d
IP_HDRINCL	net/lwip/include/ipv6/lwip/ip.h	59;"	d
IP_HLEN	net/lwip/include/ipv4/lwip/ip.h	55;"	d
IP_HLEN	net/lwip/include/ipv6/lwip/ip.h	46;"	d
IP_MF	net/lwip/include/ipv4/lwip/ip.h	128;"	d
IP_MF	net/lwip/netif/ppp/vjbsdhdr.h	34;"	d
IP_MULTICAST_IF	net/lwip/include/lwip/sockets.h	171;"	d
IP_MULTICAST_LOOP	net/lwip/include/lwip/sockets.h	172;"	d
IP_MULTICAST_TTL	net/lwip/include/lwip/sockets.h	170;"	d
IP_OFFMASK	net/lwip/include/ipv4/lwip/ip.h	129;"	d
IP_OFFMASK	net/lwip/netif/ppp/vjbsdhdr.h	35;"	d
IP_OPTIONS_ALLOWED	net/lwip/include/lwip/opt.h	371;"	d
IP_PCB	net/lwip/include/ipv4/lwip/ip.h	/^  IP_PCB;$/;"	m	struct:ip_pcb
IP_PCB	net/lwip/include/ipv4/lwip/ip.h	80;"	d
IP_PCB	net/lwip/include/ipv6/lwip/ip.h	71;"	d
IP_PCB	net/lwip/include/lwip/raw.h	/^  IP_PCB;$/;"	m	struct:raw_pcb
IP_PCB	net/lwip/include/lwip/tcp.h	/^  IP_PCB;$/;"	m	struct:tcp_pcb
IP_PCB	net/lwip/include/lwip/tcp.h	/^  IP_PCB;$/;"	m	struct:tcp_pcb_listen
IP_PCB	net/lwip/include/lwip/udp.h	/^  IP_PCB;$/;"	m	struct:udp_pcb
IP_PCB_ADDRHINT	net/lwip/include/ipv4/lwip/ip.h	71;"	d
IP_PCB_ADDRHINT	net/lwip/include/ipv4/lwip/ip.h	73;"	d
IP_PCB_ADDRHINT	net/lwip/include/ipv6/lwip/ip.h	62;"	d
IP_PCB_ADDRHINT	net/lwip/include/ipv6/lwip/ip.h	64;"	d
IP_PROTO_ICMP	net/lwip/include/ipv4/lwip/ip.h	57;"	d
IP_PROTO_ICMP	net/lwip/include/ipv6/lwip/ip.h	48;"	d
IP_PROTO_IGMP	net/lwip/include/ipv4/lwip/igmp.h	52;"	d
IP_PROTO_TCP	net/lwip/include/ipv4/lwip/ip.h	60;"	d
IP_PROTO_TCP	net/lwip/include/ipv6/lwip/ip.h	51;"	d
IP_PROTO_UDP	net/lwip/include/ipv4/lwip/ip.h	58;"	d
IP_PROTO_UDP	net/lwip/include/ipv6/lwip/ip.h	49;"	d
IP_PROTO_UDPLITE	net/lwip/include/ipv4/lwip/ip.h	59;"	d
IP_PROTO_UDPLITE	net/lwip/include/ipv6/lwip/ip.h	50;"	d
IP_REASSEMBLY	net/lwip/include/lwip/opt.h	380;"	d
IP_REASS_CHECK_OVERLAP	net/lwip/core/ipv4/ip_frag.c	68;"	d	file:
IP_REASS_DEBUG	net/lwip/include/lwip/opt.h	1546;"	d
IP_REASS_FLAG_LASTFRAG	net/lwip/core/ipv4/ip_frag.c	79;"	d	file:
IP_REASS_FREE_OLDEST	net/lwip/core/ipv4/ip_frag.c	76;"	d	file:
IP_REASS_MAXAGE	net/lwip/include/lwip/opt.h	398;"	d
IP_REASS_MAX_PBUFS	net/lwip/include/lwip/opt.h	408;"	d
IP_RF	net/lwip/include/ipv4/lwip/ip.h	126;"	d
IP_STATS	net/lwip/include/lwip/opt.h	1164;"	d
IP_STATS	net/lwip/include/lwip/opt.h	1229;"	d
IP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	186;"	d
IP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	189;"	d
IP_STATS_INC	net/lwip/include/lwip/stats.h	185;"	d
IP_STATS_INC	net/lwip/include/lwip/stats.h	188;"	d
IP_TMR_INTERVAL	net/lwip/include/ipv4/lwip/ip_frag.h	49;"	d
IP_TOS	net/lwip/include/lwip/sockets.h	141;"	d
IP_TTL	net/lwip/include/lwip/sockets.h	142;"	d
IRQ_ERROR	inc/trap.h	40;"	d
IRQ_IDE	inc/trap.h	39;"	d
IRQ_KBD	inc/trap.h	36;"	d
IRQ_OFFSET	inc/trap.h	32;"	d
IRQ_SERIAL	inc/trap.h	37;"	d
IRQ_SLAVE	kern/picirq.h	15;"	d
IRQ_SPURIOUS	inc/trap.h	38;"	d
IRQ_TIMER	inc/trap.h	35;"	d
JOS_INC_ARGS_H	inc/args.h	2;"	d
JOS_INC_ASSERT_H	inc/assert.h	4;"	d
JOS_INC_CPU_H	kern/cpu.h	3;"	d
JOS_INC_ELF_H	inc/elf.h	2;"	d
JOS_INC_ENV_H	inc/env.h	4;"	d
JOS_INC_ERROR_H	inc/error.h	4;"	d
JOS_INC_FD_H	inc/fd.h	6;"	d
JOS_INC_FS_H	inc/fs.h	4;"	d
JOS_INC_LIB_H	inc/lib.h	8;"	d
JOS_INC_MALLOC_H	inc/malloc.h	2;"	d
JOS_INC_MEMLAYOUT_H	inc/memlayout.h	2;"	d
JOS_INC_MMU_H	inc/mmu.h	2;"	d
JOS_INC_NS_H	inc/ns.h	4;"	d
JOS_INC_PERROR_H	net/lwip/jos/arch/perror.h	2;"	d
JOS_INC_QUEUE_H	inc/queue.h	36;"	d
JOS_INC_SETJMP_H	net/lwip/jos/arch/setjmp.h	2;"	d
JOS_INC_SPINLOCK_H	kern/spinlock.h	2;"	d
JOS_INC_STDARG_H	inc/stdarg.h	4;"	d
JOS_INC_STDIO_H	inc/stdio.h	2;"	d
JOS_INC_STRING_H	inc/string.h	2;"	d
JOS_INC_SYSCALL_H	inc/syscall.h	2;"	d
JOS_INC_THREADQ_H	net/lwip/jos/arch/threadq.h	2;"	d
JOS_INC_TRAP_H	inc/trap.h	2;"	d
JOS_INC_TYPES_H	fs/fsformat.c	25;"	d	file:
JOS_INC_TYPES_H	inc/types.h	2;"	d
JOS_INC_X86_H	inc/x86.h	2;"	d
JOS_KBDREG_H	inc/kbdreg.h	2;"	d
JOS_KERN_E1000_H	kern/e1000.h	2;"	d
JOS_KERN_ENV_H	kern/env.h	4;"	d
JOS_KERN_KCLOCK_H	kern/kclock.h	4;"	d
JOS_KERN_KDEBUG_H	kern/kdebug.h	2;"	d
JOS_KERN_MONITOR_H	kern/monitor.h	2;"	d
JOS_KERN_PCI_H	kern/pci.h	2;"	d
JOS_KERN_PICIRQ_H	kern/picirq.h	4;"	d
JOS_KERN_PMAP_H	kern/pmap.h	4;"	d
JOS_KERN_SCHED_H	kern/sched.h	4;"	d
JOS_KERN_SYSCALL_H	kern/syscall.h	2;"	d
JOS_KERN_TIME_H	kern/time.h	2;"	d
JOS_KERN_TRAP_H	kern/trap.h	4;"	d
JOS_LONGJMP_GCCATTR	net/lwip/jos/arch/i386/setjmp.h	6;"	d
JOS_LWIP_LWIPOPTS_H	net/lwip/jos/lwipopts.h	2;"	d
JOS_MACHINE_SETJMP_H	net/lwip/jos/arch/i386/setjmp.h	2;"	d
JOS_STAB_H	inc/stab.h	2;"	d
KADDR	kern/pmap.h	36;"	d
KBCMDP	inc/kbdreg.h	29;"	d
KBC_AUXDISABLE	inc/kbdreg.h	32;"	d
KBC_AUXECHO	inc/kbdreg.h	36;"	d
KBC_AUXENABLE	inc/kbdreg.h	33;"	d
KBC_AUXTEST	inc/kbdreg.h	34;"	d
KBC_AUXWRITE	inc/kbdreg.h	37;"	d
KBC_DISABLE	inc/kbdreg.h	66;"	d
KBC_ECHO	inc/kbdreg.h	71;"	d
KBC_ENABLE	inc/kbdreg.h	67;"	d
KBC_KBDDISABLE	inc/kbdreg.h	40;"	d
KBC_KBDECHO	inc/kbdreg.h	35;"	d
KBC_KBDENABLE	inc/kbdreg.h	41;"	d
KBC_KBDTEST	inc/kbdreg.h	39;"	d
KBC_MODEIND	inc/kbdreg.h	70;"	d
KBC_PULSE0	inc/kbdreg.h	42;"	d
KBC_PULSE1	inc/kbdreg.h	43;"	d
KBC_PULSE2	inc/kbdreg.h	44;"	d
KBC_PULSE3	inc/kbdreg.h	45;"	d
KBC_RAMREAD	inc/kbdreg.h	30;"	d
KBC_RAMWRITE	inc/kbdreg.h	31;"	d
KBC_RESEND	inc/kbdreg.h	64;"	d
KBC_RESET	inc/kbdreg.h	63;"	d
KBC_SELFTEST	inc/kbdreg.h	38;"	d
KBC_SETDEFAULT	inc/kbdreg.h	65;"	d
KBC_SETTABLE	inc/kbdreg.h	69;"	d
KBC_TYPEMATIC	inc/kbdreg.h	68;"	d
KBDATAP	inc/kbdreg.h	47;"	d
KBOUTP	inc/kbdreg.h	48;"	d
KBR_ACK	inc/kbdreg.h	76;"	d
KBR_BREAK	inc/kbdreg.h	79;"	d
KBR_ECHO	inc/kbdreg.h	81;"	d
KBR_EXTENDED	inc/kbdreg.h	74;"	d
KBR_FAILURE	inc/kbdreg.h	78;"	d
KBR_OVERRUN	inc/kbdreg.h	77;"	d
KBR_RESEND	inc/kbdreg.h	75;"	d
KBR_RSTDONE	inc/kbdreg.h	80;"	d
KBSTATP	inc/kbdreg.h	19;"	d
KBS_DIB	inc/kbdreg.h	20;"	d
KBS_IBF	inc/kbdreg.h	21;"	d
KBS_NOSEC	inc/kbdreg.h	24;"	d
KBS_OCMD	inc/kbdreg.h	23;"	d
KBS_PERR	inc/kbdreg.h	27;"	d
KBS_RERR	inc/kbdreg.h	26;"	d
KBS_TERR	inc/kbdreg.h	25;"	d
KBS_WARM	inc/kbdreg.h	22;"	d
KC8_CPU	inc/kbdreg.h	57;"	d
KC8_IGNSEC	inc/kbdreg.h	56;"	d
KC8_KDISABLE	inc/kbdreg.h	55;"	d
KC8_KENABLE	inc/kbdreg.h	59;"	d
KC8_MDISABLE	inc/kbdreg.h	54;"	d
KC8_MENABLE	inc/kbdreg.h	58;"	d
KC8_TRANS	inc/kbdreg.h	53;"	d
KERNBASE	inc/memlayout.h	87;"	d
KERN_CFLAGS	GNUmakefile	/^KERN_CFLAGS := $(CFLAGS) -DJOS_KERNEL -gstabs -mcmodel=large -m64$/;"	m
KEY_DEL	inc/kbdreg.h	14;"	d
KEY_DN	inc/kbdreg.h	8;"	d
KEY_END	inc/kbdreg.h	6;"	d
KEY_HOME	inc/kbdreg.h	5;"	d
KEY_INS	inc/kbdreg.h	13;"	d
KEY_LF	inc/kbdreg.h	9;"	d
KEY_PGDN	inc/kbdreg.h	12;"	d
KEY_PGUP	inc/kbdreg.h	11;"	d
KEY_RT	inc/kbdreg.h	10;"	d
KEY_UP	inc/kbdreg.h	7;"	d
KSTACKTOP	inc/memlayout.h	96;"	d
KSTKGAP	inc/memlayout.h	98;"	d
KSTKSIZE	inc/memlayout.h	97;"	d
K_LDCMDBYTE	inc/kbdreg.h	51;"	d
K_RDCMDBYTE	inc/kbdreg.h	50;"	d
LAB	conf/lab.mk	/^LAB=6$/;"	m
LABSETUP	GNUmakefile	/^LABSETUP ?= .\/$/;"	m
LANManResp	net/lwip/netif/ppp/chpms.c	/^    u_char LANManResp[24];$/;"	m	struct:__anon16	file:
LAST_ACK	net/lwip/include/lwip/tcp.h	/^  LAST_ACK    = 9,$/;"	e	enum:tcp_state
LCPDEBUG	net/lwip/netif/ppp/pppdebug.h	69;"	d
LCPDEBUG	net/lwip/netif/ppp/pppdebug.h	79;"	d
LCP_ECHOINTERVAL	net/lwip/include/lwip/opt.h	1363;"	d
LCP_H	net/lwip/netif/ppp/lcp.h	55;"	d
LCP_MAXECHOFAILS	net/lwip/include/lwip/opt.h	1368;"	d
LD	GNUmakefile	/^LD	:= $(GCCPREFIX)ld$/;"	m
LDFLAGS	GNUmakefile	/^LDFLAGS := -m elf_x86_64 -z max-page-size=0x1000$/;"	m
LENCIADDR	net/lwip/netif/ppp/ipcp.c	339;"	d	file:
LENCICBCP	net/lwip/netif/ppp/lcp.c	512;"	d	file:
LENCICHAP	net/lwip/netif/ppp/lcp.c	508;"	d	file:
LENCIDNS	net/lwip/netif/ppp/ipcp.c	340;"	d	file:
LENCILONG	net/lwip/netif/ppp/lcp.c	510;"	d	file:
LENCILQR	net/lwip/netif/ppp/lcp.c	511;"	d	file:
LENCISHORT	net/lwip/netif/ppp/lcp.c	509;"	d	file:
LENCIVJ	net/lwip/netif/ppp/ipcp.c	338;"	d	file:
LENCIVOID	net/lwip/netif/ppp/lcp.c	507;"	d	file:
LEVEL	kern/lapic.c	27;"	d	file:
LINK_STATS	net/lwip/include/lwip/opt.h	1150;"	d
LINK_STATS	net/lwip/include/lwip/opt.h	1228;"	d
LINK_STATS_DISPLAY	net/lwip/include/lwip/stats.h	210;"	d
LINK_STATS_DISPLAY	net/lwip/include/lwip/stats.h	213;"	d
LINK_STATS_INC	net/lwip/include/lwip/stats.h	209;"	d
LINK_STATS_INC	net/lwip/include/lwip/stats.h	212;"	d
LINT0	kern/lapic.c	37;"	d	file:
LINT1	kern/lapic.c	38;"	d	file:
LISTEN	net/lwip/include/lwip/tcp.h	/^  LISTEN      = 1,$/;"	e	enum:tcp_state
LIST_EMPTY	inc/queue.h	142;"	d
LIST_EMPTY	net/lwip/jos/arch/queue.h	142;"	d
LIST_EMPTY	net/lwip/netif/ppp/ppp_oe.c	122;"	d	file:
LIST_ENTRY	inc/queue.h	129;"	d
LIST_ENTRY	net/lwip/jos/arch/queue.h	129;"	d
LIST_ENTRY	net/lwip/netif/ppp/ppp_oe.c	112;"	d	file:
LIST_FIRST	inc/queue.h	147;"	d
LIST_FIRST	net/lwip/jos/arch/queue.h	147;"	d
LIST_FIRST	net/lwip/netif/ppp/ppp_oe.c	124;"	d	file:
LIST_FOREACH	inc/queue.h	160;"	d
LIST_FOREACH	net/lwip/jos/arch/queue.h	160;"	d
LIST_FOREACH	net/lwip/netif/ppp/ppp_oe.c	126;"	d	file:
LIST_HEAD	inc/queue.h	109;"	d
LIST_HEAD	net/lwip/jos/arch/queue.h	109;"	d
LIST_HEAD	net/lwip/netif/ppp/ppp_oe.c	104;"	d	file:
LIST_HEAD_INITIALIZER	inc/queue.h	118;"	d
LIST_HEAD_INITIALIZER	net/lwip/jos/arch/queue.h	118;"	d
LIST_HEAD_INITIALIZER	net/lwip/netif/ppp/ppp_oe.c	109;"	d	file:
LIST_INIT	inc/queue.h	168;"	d
LIST_INIT	net/lwip/jos/arch/queue.h	168;"	d
LIST_INIT	net/lwip/netif/ppp/ppp_oe.c	131;"	d	file:
LIST_INSERT_AFTER	inc/queue.h	177;"	d
LIST_INSERT_AFTER	net/lwip/jos/arch/queue.h	177;"	d
LIST_INSERT_AFTER	net/lwip/netif/ppp/ppp_oe.c	135;"	d	file:
LIST_INSERT_BEFORE	inc/queue.h	190;"	d
LIST_INSERT_BEFORE	net/lwip/jos/arch/queue.h	190;"	d
LIST_INSERT_BEFORE	net/lwip/netif/ppp/ppp_oe.c	143;"	d	file:
LIST_INSERT_HEAD	inc/queue.h	201;"	d
LIST_INSERT_HEAD	net/lwip/jos/arch/queue.h	201;"	d
LIST_INSERT_HEAD	net/lwip/netif/ppp/ppp_oe.c	150;"	d	file:
LIST_NEXT	inc/queue.h	153;"	d
LIST_NEXT	net/lwip/jos/arch/queue.h	153;"	d
LIST_NEXT	net/lwip/netif/ppp/ppp_oe.c	157;"	d	file:
LIST_REMOVE	inc/queue.h	212;"	d
LIST_REMOVE	net/lwip/jos/arch/queue.h	212;"	d
LIST_REMOVE	net/lwip/netif/ppp/ppp_oe.c	159;"	d	file:
LITTLE_ENDIAN	net/lwip/include/lwip/arch.h	36;"	d
LOAD_REGS	user/faultregs.c	30;"	d	file:
LOCK_TCPIP_CORE	net/lwip/include/lwip/tcpip.h	52;"	d
LOCK_TCPIP_CORE	net/lwip/include/lwip/tcpip.h	59;"	d
LOG2NENV	inc/env.h	29;"	d
LOG_CRITICAL	net/lwip/netif/ppp/pppdebug.h	/^LOG_CRITICAL = 0,$/;"	e	enum:__anon18
LOG_DEBUG	net/lwip/netif/ppp/pppdebug.h	/^LOG_DEBUG    = 7$/;"	e	enum:__anon18
LOG_DETAIL	net/lwip/netif/ppp/pppdebug.h	/^LOG_DETAIL   = 6,$/;"	e	enum:__anon18
LOG_ERR	net/lwip/netif/ppp/pppdebug.h	/^LOG_ERR      = 1,$/;"	e	enum:__anon18
LOG_INFO	net/lwip/netif/ppp/pppdebug.h	/^LOG_INFO     = 5,$/;"	e	enum:__anon18
LOG_NOTICE	net/lwip/netif/ppp/pppdebug.h	/^LOG_NOTICE   = 2,$/;"	e	enum:__anon18
LOG_WARNING	net/lwip/netif/ppp/pppdebug.h	/^LOG_WARNING  = 3,$/;"	e	enum:__anon18
LS_ACKRCVD	net/lwip/netif/ppp/fsm.h	87;"	d
LS_ACKSENT	net/lwip/netif/ppp/fsm.h	88;"	d
LS_CLOSED	net/lwip/netif/ppp/fsm.h	82;"	d
LS_CLOSING	net/lwip/netif/ppp/fsm.h	84;"	d
LS_INITIAL	net/lwip/netif/ppp/fsm.h	80;"	d
LS_OPENED	net/lwip/netif/ppp/fsm.h	89;"	d
LS_REQSENT	net/lwip/netif/ppp/fsm.h	86;"	d
LS_STARTING	net/lwip/netif/ppp/fsm.h	81;"	d
LS_STOPPED	net/lwip/netif/ppp/fsm.h	83;"	d
LS_STOPPING	net/lwip/netif/ppp/fsm.h	85;"	d
LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT	net/lwip/include/lwip/opt.h	177;"	d
LWIP_ARCH_CC_H	net/lwip/jos/arch/cc.h	2;"	d
LWIP_ARCH_PERF_H	net/lwip/jos/arch/perf.h	2;"	d
LWIP_ARCH_QUEUE_H	net/lwip/jos/arch/queue.h	36;"	d
LWIP_ARCH_SYS_ARCH_H	net/lwip/jos/arch/sys_arch.h	2;"	d
LWIP_ARCH_THREAD_H	net/lwip/jos/arch/thread.h	2;"	d
LWIP_ARP	net/lwip/include/lwip/opt.h	321;"	d
LWIP_ASSERT	net/lwip/include/lwip/debug.h	64;"	d
LWIP_ASSERT	net/lwip/include/lwip/debug.h	67;"	d
LWIP_AUTOIP	net/lwip/include/lwip/opt.h	502;"	d
LWIP_AUTOIP_RAND	net/lwip/core/ipv4/autoip.c	82;"	d	file:
LWIP_CALLBACK_API	net/lwip/include/lwip/opt.h	762;"	d
LWIP_CALLBACK_API	net/lwip/include/lwip/opt.h	765;"	d
LWIP_CHKSUM	net/lwip/core/ipv4/inet_chksum.c	56;"	d	file:
LWIP_CHKSUM_ALGORITHM	net/lwip/core/ipv4/inet_chksum.c	58;"	d	file:
LWIP_CHKSUM_ALGORITHM	net/lwip/core/ipv4/inet_chksum.c	63;"	d	file:
LWIP_COMPAT_SOCKETS	net/lwip/include/lwip/opt.h	1083;"	d
LWIP_COMPAT_SOCKETS	net/lwip/jos/lwipopts.h	16;"	d
LWIP_DBG_FRESH	net/lwip/include/lwip/debug.h	59;"	d
LWIP_DBG_HALT	net/lwip/include/lwip/debug.h	61;"	d
LWIP_DBG_LEVEL_OFF	net/lwip/include/lwip/debug.h	43;"	d
LWIP_DBG_LEVEL_SERIOUS	net/lwip/include/lwip/debug.h	45;"	d
LWIP_DBG_LEVEL_SEVERE	net/lwip/include/lwip/debug.h	46;"	d
LWIP_DBG_LEVEL_WARNING	net/lwip/include/lwip/debug.h	44;"	d
LWIP_DBG_MASK_LEVEL	net/lwip/include/lwip/debug.h	47;"	d
LWIP_DBG_MIN_LEVEL	net/lwip/include/lwip/opt.h	1461;"	d
LWIP_DBG_MIN_LEVEL	net/lwip/jos/lwipopts.h	58;"	d
LWIP_DBG_OFF	net/lwip/include/lwip/debug.h	52;"	d
LWIP_DBG_ON	net/lwip/include/lwip/debug.h	50;"	d
LWIP_DBG_STATE	net/lwip/include/lwip/debug.h	57;"	d
LWIP_DBG_TRACE	net/lwip/include/lwip/debug.h	55;"	d
LWIP_DBG_TYPES_ON	net/lwip/include/lwip/opt.h	1469;"	d
LWIP_DEBUG	net/lwip/jos/lwipopts.h	49;"	d
LWIP_DEBUGF	net/lwip/include/lwip/debug.h	80;"	d
LWIP_DEBUGF	net/lwip/include/lwip/debug.h	93;"	d
LWIP_DHCP	net/lwip/include/lwip/opt.h	483;"	d
LWIP_DHCP	net/lwip/jos/lwipopts.h	15;"	d
LWIP_DHCP_AUTOIP_COOP	net/lwip/include/lwip/opt.h	510;"	d
LWIP_DNS	net/lwip/include/lwip/opt.h	580;"	d
LWIP_DNS_API_DECLARE_H_ERRNO	net/lwip/include/lwip/netdb.h	38;"	d
LWIP_DNS_API_DECLARE_STRUCTS	net/lwip/include/lwip/netdb.h	46;"	d
LWIP_DNS_API_DEFINE_ERRORS	net/lwip/include/lwip/netdb.h	42;"	d
LWIP_DNS_API_HOSTENT_STORAGE	net/lwip/api/netdb.c	60;"	d	file:
LWIP_ERROR	net/lwip/include/lwip/debug.h	72;"	d
LWIP_EVENT_ACCEPT	net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_ACCEPT,$/;"	e	enum:lwip_event
LWIP_EVENT_API	net/lwip/include/lwip/opt.h	761;"	d
LWIP_EVENT_API	net/lwip/include/lwip/opt.h	764;"	d
LWIP_EVENT_CONNECTED	net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_CONNECTED,$/;"	e	enum:lwip_event
LWIP_EVENT_ERR	net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_ERR$/;"	e	enum:lwip_event
LWIP_EVENT_POLL	net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_POLL,$/;"	e	enum:lwip_event
LWIP_EVENT_RECV	net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_RECV,$/;"	e	enum:lwip_event
LWIP_EVENT_SENT	net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_SENT,$/;"	e	enum:lwip_event
LWIP_HAVE_LOOPIF	net/lwip/include/lwip/opt.h	881;"	d
LWIP_HAVE_SLIPIF	net/lwip/include/lwip/opt.h	893;"	d
LWIP_ICMP	net/lwip/include/lwip/opt.h	445;"	d
LWIP_IGMP	net/lwip/include/lwip/opt.h	567;"	d
LWIP_LOOPBACK_MAX_PBUFS	net/lwip/include/lwip/opt.h	852;"	d
LWIP_MALLOC_MEMPOOL	net/lwip/include/lwip/memp.h	57;"	d
LWIP_MALLOC_MEMPOOL	net/lwip/include/lwip/memp.h	66;"	d
LWIP_MALLOC_MEMPOOL	net/lwip/include/lwip/memp_std.h	14;"	d
LWIP_MALLOC_MEMPOOL	net/lwip/include/lwip/memp_std.h	98;"	d
LWIP_MALLOC_MEMPOOL_END	net/lwip/include/lwip/memp.h	58;"	d
LWIP_MALLOC_MEMPOOL_END	net/lwip/include/lwip/memp.h	67;"	d
LWIP_MALLOC_MEMPOOL_END	net/lwip/include/lwip/memp_std.h	100;"	d
LWIP_MALLOC_MEMPOOL_END	net/lwip/include/lwip/memp_std.h	16;"	d
LWIP_MALLOC_MEMPOOL_START	net/lwip/include/lwip/memp.h	56;"	d
LWIP_MALLOC_MEMPOOL_START	net/lwip/include/lwip/memp.h	65;"	d
LWIP_MALLOC_MEMPOOL_START	net/lwip/include/lwip/memp_std.h	15;"	d
LWIP_MALLOC_MEMPOOL_START	net/lwip/include/lwip/memp_std.h	99;"	d
LWIP_MAX	net/lwip/include/lwip/def.h	38;"	d
LWIP_MEMPOOL	net/lwip/core/memp.c	117;"	d	file:
LWIP_MEMPOOL	net/lwip/core/memp.c	123;"	d	file:
LWIP_MEMPOOL	net/lwip/core/memp.c	130;"	d	file:
LWIP_MEMPOOL	net/lwip/core/memp.c	137;"	d	file:
LWIP_MEMPOOL	net/lwip/core/stats.c	103;"	d	file:
LWIP_MEMPOOL	net/lwip/include/lwip/memp.h	44;"	d
LWIP_MEMPOOL	net/lwip/include/lwip/memp.h	55;"	d
LWIP_MEMPOOL	net/lwip/include/lwip/memp.h	64;"	d
LWIP_MEMPOOL	net/lwip/include/lwip/memp_std.h	97;"	d
LWIP_MEM_ALIGN	net/lwip/include/lwip/mem.h	96;"	d
LWIP_MEM_ALIGN_SIZE	net/lwip/include/lwip/mem.h	92;"	d
LWIP_MEM_ALLOC_DECL_PROTECT	net/lwip/core/mem.c	192;"	d	file:
LWIP_MEM_ALLOC_DECL_PROTECT	net/lwip/core/mem.c	203;"	d	file:
LWIP_MEM_ALLOC_PROTECT	net/lwip/core/mem.c	193;"	d	file:
LWIP_MEM_ALLOC_PROTECT	net/lwip/core/mem.c	204;"	d	file:
LWIP_MEM_ALLOC_UNPROTECT	net/lwip/core/mem.c	194;"	d	file:
LWIP_MEM_ALLOC_UNPROTECT	net/lwip/core/mem.c	205;"	d	file:
LWIP_MEM_FREE_DECL_PROTECT	net/lwip/core/mem.c	189;"	d	file:
LWIP_MEM_FREE_DECL_PROTECT	net/lwip/core/mem.c	199;"	d	file:
LWIP_MEM_FREE_PROTECT	net/lwip/core/mem.c	190;"	d	file:
LWIP_MEM_FREE_PROTECT	net/lwip/core/mem.c	200;"	d	file:
LWIP_MEM_FREE_UNPROTECT	net/lwip/core/mem.c	191;"	d	file:
LWIP_MEM_FREE_UNPROTECT	net/lwip/core/mem.c	201;"	d	file:
LWIP_MIN	net/lwip/include/lwip/def.h	39;"	d
LWIP_NETCONN	net/lwip/include/lwip/opt.h	1063;"	d
LWIP_NETIF_API	net/lwip/include/lwip/opt.h	809;"	d
LWIP_NETIF_HOSTNAME	net/lwip/include/lwip/opt.h	802;"	d
LWIP_NETIF_HWADDRHINT	net/lwip/include/lwip/opt.h	836;"	d
LWIP_NETIF_LINK_CALLBACK	net/lwip/include/lwip/opt.h	825;"	d
LWIP_NETIF_LOOPBACK	net/lwip/include/lwip/opt.h	844;"	d
LWIP_NETIF_LOOPBACK_MULTITHREADING	net/lwip/include/lwip/opt.h	869;"	d
LWIP_NETIF_STATUS_CALLBACK	net/lwip/include/lwip/opt.h	817;"	d
LWIP_PBUF_MEMPOOL	net/lwip/include/lwip/memp_std.h	101;"	d
LWIP_PBUF_MEMPOOL	net/lwip/include/lwip/memp_std.h	22;"	d
LWIP_PLATFORM_ASSERT	net/lwip/jos/arch/cc.h	35;"	d
LWIP_PLATFORM_BYTESWAP	net/lwip/include/ipv4/lwip/inet.h	66;"	d
LWIP_PLATFORM_DIAG	net/lwip/jos/arch/cc.h	34;"	d
LWIP_POSIX_SOCKETS_IO_NAMES	net/lwip/include/lwip/opt.h	1092;"	d
LWIP_PROVIDE_ERRNO	net/lwip/jos/arch/perror.c	2;"	d	file:
LWIP_PROVIDE_ERRNO	net/lwip/jos/lwipopts.h	18;"	d
LWIP_RAW	net/lwip/include/lwip/opt.h	464;"	d
LWIP_SNMP	net/lwip/include/lwip/opt.h	523;"	d
LWIP_SNMP_OBJ_ID_LEN	net/lwip/include/lwip/snmp.h	88;"	d
LWIP_SOCKET	net/lwip/include/lwip/opt.h	1075;"	d
LWIP_SO_RCVBUF	net/lwip/include/lwip/opt.h	1115;"	d
LWIP_SO_RCVTIMEO	net/lwip/include/lwip/opt.h	1108;"	d
LWIP_STATS	net/lwip/include/lwip/opt.h	1134;"	d
LWIP_STATS	net/lwip/jos/lwipopts.h	13;"	d
LWIP_STATS_DISPLAY	net/lwip/include/lwip/opt.h	1143;"	d
LWIP_STATS_DISPLAY	net/lwip/include/lwip/opt.h	1238;"	d
LWIP_STATS_DISPLAY	net/lwip/jos/lwipopts.h	14;"	d
LWIP_STATS_LARGE	net/lwip/include/lwip/stats.h	47;"	d
LWIP_TCP	net/lwip/include/lwip/opt.h	650;"	d
LWIP_TCPIP_CORE_LOCKING	net/lwip/include/lwip/opt.h	1056;"	d
LWIP_TCP_KEEPALIVE	net/lwip/include/lwip/opt.h	1101;"	d
LWIP_TIMEVAL_PRIVATE	net/lwip/include/lwip/sockets.h	290;"	d
LWIP_UDP	net/lwip/include/lwip/opt.h	624;"	d
LWIP_UDPLITE	net/lwip/include/lwip/opt.h	631;"	d
LWIP_UNUSED_ARG	net/lwip/include/lwip/arch.h	63;"	d
LcpEchoCheck	net/lwip/netif/ppp/lcp.c	/^LcpEchoCheck (fsm *f)$/;"	f	file:
LcpEchoTimeout	net/lwip/netif/ppp/lcp.c	/^LcpEchoTimeout (void *arg)$/;"	f	file:
LcpLinkFailure	net/lwip/netif/ppp/lcp.c	/^LcpLinkFailure (fsm *f)$/;"	f	file:
LcpSendEchoRequest	net/lwip/netif/ppp/lcp.c	/^LcpSendEchoRequest (fsm *f)$/;"	f	file:
LinkPhase	net/lwip/netif/ppp/lcp.h	/^} LinkPhase;$/;"	t	typeref:enum:__anon17
LogCodes	net/lwip/netif/ppp/pppdebug.h	/^} LogCodes;$/;"	t	typeref:enum:__anon18
MAGIC_H	net/lwip/netif/ppp/magic.h	55;"	d
MAKEHEADER	net/lwip/netif/ppp/ppp.h	223;"	d
MAKE_TIMESTAMP	gradelib.py	/^MAKE_TIMESTAMP = 0$/;"	v
MASK	net/ns.h	5;"	d
MASKED	kern/lapic.c	40;"	d	file:
MAX	inc/types.h	49;"	d
MAXARGS	kern/monitor.c	107;"	d	file:
MAXARGS	obj/kern/kernel.asm	/^#define MAXARGS 16$/;"	d
MAXERROR	inc/error.h	/^	MAXERROR$/;"	e	enum:__anon6
MAXFD	lib/fd.c	6;"	d	file:
MAXFILESIZE	inc/fs.h	27;"	d
MAXMALLOC	lib/malloc.c	/^	MAXMALLOC = 1024*1024	\/* max size of one allocated chunk *\/$/;"	e	enum:__anon12	file:
MAXNAMELEN	inc/fs.h	17;"	d
MAXNAMELEN	net/lwip/include/lwip/opt.h	1398;"	d
MAXOPEN	fs/serv.c	40;"	d	file:
MAXPATHLEN	inc/fs.h	20;"	d
MAXPENDING	obj/user/echosrv.asm	/^#define MAXPENDING 5    \/\/ Max connection requests$/;"	d
MAXPENDING	user/echosrv.c	8;"	d	file:
MAXPENDING	user/httpd.c	12;"	d	file:
MAXSECRETLEN	net/lwip/include/lwip/opt.h	1399;"	d
MAX_CHALLENGE_LENGTH	net/lwip/netif/ppp/chap.h	96;"	d
MAX_CONFLICTS	net/lwip/include/ipv4/lwip/autoip.h	67;"	d
MAX_DIR_ENTS	fs/fsformat.c	35;"	d	file:
MAX_HDR	net/lwip/netif/ppp/vj.h	31;"	d
MAX_IRQS	kern/picirq.h	9;"	d
MAX_NT_PASSWORD	net/lwip/netif/ppp/chpms.h	60;"	d
MAX_RESPONSE_LENGTH	net/lwip/netif/ppp/chap.h	97;"	d
MAX_SIZE	net/lwip/netif/slipif.c	62;"	d	file:
MAX_SLOTS	net/lwip/netif/ppp/vj.h	30;"	d
MBOXSLOTS	net/lwip/jos/arch/sys_arch.c	14;"	d	file:
MC_NVRAM_SIZE	kern/kclock.h	12;"	d
MC_NVRAM_START	kern/kclock.h	11;"	d
MD5Final	net/lwip/netif/ppp/md5.c	/^MD5Final (unsigned char hash[], MD5_CTX *mdContext)$/;"	f
MD5Init	net/lwip/netif/ppp/md5.c	/^MD5Init (MD5_CTX *mdContext)$/;"	f
MD5Update	net/lwip/netif/ppp/md5.c	/^MD5Update(MD5_CTX *mdContext, unsigned char *inBuf, unsigned int inLen)$/;"	f
MD5_CTX	net/lwip/netif/ppp/md5.h	/^} MD5_CTX;$/;"	t	typeref:struct:__anon13
MD5_H	net/lwip/netif/ppp/md5.h	41;"	d
MD5_SIGNATURE_SIZE	net/lwip/netif/ppp/chap.h	83;"	d
MD5_SUPPORT	net/lwip/include/lwip/opt.h	1323;"	d
MEMCPY	net/lwip/include/lwip/opt.h	76;"	d
MEMP_ALIGN_SIZE	net/lwip/core/memp.c	104;"	d	file:
MEMP_ALIGN_SIZE	net/lwip/core/memp.c	95;"	d	file:
MEMP_DEBUG	net/lwip/include/lwip/opt.h	1567;"	d
MEMP_MAX	net/lwip/include/lwip/memp.h	/^  MEMP_MAX$/;"	e	enum:__anon23
MEMP_NUM_ARP_QUEUE	net/lwip/include/lwip/opt.h	250;"	d
MEMP_NUM_IGMP_GROUP	net/lwip/include/lwip/opt.h	260;"	d
MEMP_NUM_NETBUF	net/lwip/include/lwip/opt.h	276;"	d
MEMP_NUM_NETBUF	net/lwip/jos/lwipopts.h	30;"	d
MEMP_NUM_NETCONN	net/lwip/include/lwip/opt.h	284;"	d
MEMP_NUM_NETCONN	net/lwip/jos/lwipopts.h	31;"	d
MEMP_NUM_PBUF	net/lwip/include/lwip/opt.h	191;"	d
MEMP_NUM_PBUF	net/lwip/jos/lwipopts.h	25;"	d
MEMP_NUM_RAW_PCB	net/lwip/include/lwip/opt.h	199;"	d
MEMP_NUM_REASSDATA	net/lwip/include/lwip/opt.h	240;"	d
MEMP_NUM_SYS_TIMEOUT	net/lwip/include/lwip/opt.h	268;"	d
MEMP_NUM_SYS_TIMEOUT	net/lwip/jos/lwipopts.h	32;"	d
MEMP_NUM_TCPIP_MSG_API	net/lwip/include/lwip/opt.h	293;"	d
MEMP_NUM_TCPIP_MSG_INPKT	net/lwip/include/lwip/opt.h	302;"	d
MEMP_NUM_TCP_PCB	net/lwip/include/lwip/opt.h	216;"	d
MEMP_NUM_TCP_PCB	net/lwip/jos/lwipopts.h	27;"	d
MEMP_NUM_TCP_PCB_LISTEN	net/lwip/include/lwip/opt.h	224;"	d
MEMP_NUM_TCP_PCB_LISTEN	net/lwip/jos/lwipopts.h	28;"	d
MEMP_NUM_TCP_SEG	net/lwip/include/lwip/opt.h	232;"	d
MEMP_NUM_TCP_SEG	net/lwip/jos/lwipopts.h	29;"	d
MEMP_NUM_UDP_PCB	net/lwip/include/lwip/opt.h	208;"	d
MEMP_NUM_UDP_PCB	net/lwip/jos/lwipopts.h	26;"	d
MEMP_OVERFLOW_CHECK	net/lwip/include/lwip/opt.h	128;"	d
MEMP_POOL_FIRST	net/lwip/include/lwip/memp.h	74;"	d
MEMP_POOL_HELPER_FIRST	net/lwip/include/lwip/memp.h	/^    MEMP_POOL_HELPER_FIRST = ((u8_t)$/;"	e	enum:__anon24
MEMP_POOL_HELPER_LAST	net/lwip/include/lwip/memp.h	/^    MEMP_POOL_HELPER_LAST = ((u8_t)$/;"	e	enum:__anon24
MEMP_POOL_LAST	net/lwip/include/lwip/memp.h	75;"	d
MEMP_SANITY_CHECK	net/lwip/include/lwip/opt.h	136;"	d
MEMP_SANITY_CHECK	net/lwip/jos/lwipopts.h	59;"	d
MEMP_SANITY_REGION_AFTER	net/lwip/core/memp.c	85;"	d	file:
MEMP_SANITY_REGION_AFTER_ALIGNED	net/lwip/core/memp.c	88;"	d	file:
MEMP_SANITY_REGION_AFTER_ALIGNED	net/lwip/core/memp.c	90;"	d	file:
MEMP_SANITY_REGION_BEFORE	net/lwip/core/memp.c	77;"	d	file:
MEMP_SANITY_REGION_BEFORE_ALIGNED	net/lwip/core/memp.c	80;"	d	file:
MEMP_SANITY_REGION_BEFORE_ALIGNED	net/lwip/core/memp.c	82;"	d	file:
MEMP_SIZE	net/lwip/core/memp.c	103;"	d	file:
MEMP_SIZE	net/lwip/core/memp.c	94;"	d	file:
MEMP_STATS	net/lwip/include/lwip/opt.h	1216;"	d
MEMP_STATS	net/lwip/include/lwip/opt.h	1236;"	d
MEMP_STATS_AVAIL	net/lwip/include/lwip/stats.h	235;"	d
MEMP_STATS_AVAIL	net/lwip/include/lwip/stats.h	245;"	d
MEMP_STATS_DEC	net/lwip/include/lwip/stats.h	237;"	d
MEMP_STATS_DEC	net/lwip/include/lwip/stats.h	247;"	d
MEMP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	243;"	d
MEMP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	249;"	d
MEMP_STATS_INC	net/lwip/include/lwip/stats.h	236;"	d
MEMP_STATS_INC	net/lwip/include/lwip/stats.h	246;"	d
MEMP_STATS_INC_USED	net/lwip/include/lwip/stats.h	238;"	d
MEMP_STATS_INC_USED	net/lwip/include/lwip/stats.h	248;"	d
MEMP_USE_CUSTOM_POOLS	net/lwip/include/lwip/opt.h	155;"	d
MEM_ALIGNMENT	net/lwip/include/lwip/opt.h	107;"	d
MEM_ALIGNMENT	net/lwip/jos/lwipopts.h	23;"	d
MEM_DEBUG	net/lwip/include/lwip/opt.h	1560;"	d
MEM_LIBC_MALLOC	net/lwip/include/lwip/opt.h	98;"	d
MEM_SIZE	net/lwip/include/lwip/opt.h	115;"	d
MEM_SIZE	net/lwip/jos/lwipopts.h	35;"	d
MEM_SIZE_ALIGNED	net/lwip/core/mem.c	170;"	d	file:
MEM_STATS	net/lwip/include/lwip/opt.h	1209;"	d
MEM_STATS	net/lwip/include/lwip/opt.h	1235;"	d
MEM_STATS_AVAIL	net/lwip/include/lwip/stats.h	217;"	d
MEM_STATS_AVAIL	net/lwip/include/lwip/stats.h	227;"	d
MEM_STATS_DEC_USED	net/lwip/include/lwip/stats.h	224;"	d
MEM_STATS_DEC_USED	net/lwip/include/lwip/stats.h	230;"	d
MEM_STATS_DISPLAY	net/lwip/include/lwip/stats.h	225;"	d
MEM_STATS_DISPLAY	net/lwip/include/lwip/stats.h	231;"	d
MEM_STATS_INC	net/lwip/include/lwip/stats.h	218;"	d
MEM_STATS_INC	net/lwip/include/lwip/stats.h	228;"	d
MEM_STATS_INC_USED	net/lwip/include/lwip/stats.h	219;"	d
MEM_STATS_INC_USED	net/lwip/include/lwip/stats.h	229;"	d
MEM_USE_POOLS	net/lwip/include/lwip/opt.h	145;"	d
MIB2_GROUPS	net/lwip/core/snmp/mib2.c	677;"	d	file:
MIB2_GROUPS	net/lwip/core/snmp/mib2.c	679;"	d	file:
MIB_NODE_AR	net/lwip/include/lwip/snmp_structs.h	91;"	d
MIB_NODE_EX	net/lwip/include/lwip/snmp_structs.h	97;"	d
MIB_NODE_LR	net/lwip/include/lwip/snmp_structs.h	95;"	d
MIB_NODE_RA	net/lwip/include/lwip/snmp_structs.h	93;"	d
MIB_NODE_SC	net/lwip/include/lwip/snmp_structs.h	89;"	d
MIB_OBJECT_NONE	net/lwip/include/lwip/snmp_structs.h	55;"	d
MIB_OBJECT_NOT_ACCESSIBLE	net/lwip/include/lwip/snmp_structs.h	63;"	d
MIB_OBJECT_READ_ONLY	net/lwip/include/lwip/snmp_structs.h	60;"	d
MIB_OBJECT_READ_WRITE	net/lwip/include/lwip/snmp_structs.h	61;"	d
MIB_OBJECT_SCALAR	net/lwip/include/lwip/snmp_structs.h	56;"	d
MIB_OBJECT_TAB	net/lwip/include/lwip/snmp_structs.h	57;"	d
MIB_OBJECT_WRITE_ONLY	net/lwip/include/lwip/snmp_structs.h	62;"	d
MIN	inc/types.h	43;"	d
MIN_CHALLENGE_LENGTH	net/lwip/netif/ppp/chap.h	95;"	d
MIN_SIZE	net/lwip/core/mem.c	165;"	d	file:
MIN_SIZE_ALIGNED	net/lwip/core/mem.c	168;"	d	file:
MMIOBASE	inc/memlayout.h	102;"	d
MMIOLIM	inc/memlayout.h	101;"	d
MONO_BASE	kern/console.h	11;"	d
MONO_BUF	kern/console.h	12;"	d
MPBOOTPHYS	kern/mpentry.S	/^#define MPBOOTPHYS(s) ((s) - mpentry_start + MPENTRY_PADDR)$/;"	d
MPBUS	kern/mpconfig.c	67;"	d	file:
MPENTRY_PADDR	inc/memlayout.h	144;"	d
MPIOAPIC	kern/mpconfig.c	68;"	d	file:
MPIOINTR	kern/mpconfig.c	69;"	d	file:
MPIOINTR	obj/kern/kernel.asm	/^#define MPIOINTR  0x03  \/\/ One per bus interrupt source$/;"	d
MPLINTR	kern/mpconfig.c	70;"	d	file:
MPLINTR	obj/kern/kernel.asm	/^#define MPLINTR   0x04  \/\/ One per system interrupt source$/;"	d
MPPROC	kern/mpconfig.c	66;"	d	file:
MPPROC_BOOT	kern/mpconfig.c	63;"	d	file:
MSCHAP_SUPPORT	net/lwip/include/lwip/opt.h	1295;"	d
MSG_DONTWAIT	net/lwip/include/lwip/sockets.h	134;"	d
MSG_MORE	net/lwip/include/lwip/sockets.h	135;"	d
MSG_OOB	net/lwip/include/lwip/sockets.h	133;"	d
MSG_PEEK	net/lwip/include/lwip/sockets.h	131;"	d
MSG_WAITALL	net/lwip/include/lwip/sockets.h	132;"	d
MS_CHAP_RESPONSE_LEN	net/lwip/netif/ppp/chap.h	85;"	d
MS_ChapResponse	net/lwip/netif/ppp/chpms.c	/^} MS_ChapResponse;$/;"	t	typeref:struct:__anon16	file:
MULTIBOOT_HEADER_FLAGS	kern/entry.S	/^#define MULTIBOOT_HEADER_FLAGS (0)$/;"	d
MULTIBOOT_HEADER_MAGIC	kern/entry.S	/^#define MULTIBOOT_HEADER_MAGIC (0x1BADB002)$/;"	d
MakeKey	net/lwip/netif/ppp/chpms.c	/^MakeKey( u_char *key,    \/* IN  56 bit DES key missing parity bits *\/$/;"	f	file:
NAKCIADDR	net/lwip/netif/ppp/ipcp.c	592;"	d	file:
NAKCICHAP	net/lwip/netif/ppp/lcp.c	760;"	d	file:
NAKCICHAR	net/lwip/netif/ppp/lcp.c	772;"	d	file:
NAKCIDNS	net/lwip/netif/ppp/ipcp.c	624;"	d	file:
NAKCILONG	net/lwip/netif/ppp/lcp.c	794;"	d	file:
NAKCILQR	net/lwip/netif/ppp/lcp.c	805;"	d	file:
NAKCISHORT	net/lwip/netif/ppp/lcp.c	783;"	d	file:
NAKCIVJ	net/lwip/netif/ppp/ipcp.c	612;"	d	file:
NAKCIVOID	net/lwip/netif/ppp/lcp.c	750;"	d	file:
NATIVE_CFLAGS	GNUmakefile	/^NATIVE_CFLAGS := $(CFLAGS) $(DEFS) $(LABDEFS) -I$(TOP) -MD -Wall$/;"	m
NCC	GNUmakefile	/^NCC	:= gcc $(CC_VER) -pipe$/;"	m
NCOMMANDS	kern/monitor.c	30;"	d	file:
NCPU	kern/cpu.h	11;"	d
NDIRECT	inc/fs.h	23;"	d
NENV	inc/env.h	30;"	d
NETCONNTYPE_DATAGRAM	net/lwip/include/lwip/api.h	60;"	d
NETCONNTYPE_GROUP	net/lwip/include/lwip/api.h	59;"	d
NETCONN_CLOSE	net/lwip/include/lwip/api.h	/^  NETCONN_CLOSE$/;"	e	enum:netconn_state
NETCONN_CONNECT	net/lwip/include/lwip/api.h	/^  NETCONN_CONNECT,$/;"	e	enum:netconn_state
NETCONN_COPY	net/lwip/include/lwip/api.h	55;"	d
NETCONN_EVT_RCVMINUS	net/lwip/include/lwip/api.h	/^  NETCONN_EVT_RCVMINUS,$/;"	e	enum:netconn_evt
NETCONN_EVT_RCVPLUS	net/lwip/include/lwip/api.h	/^  NETCONN_EVT_RCVPLUS,$/;"	e	enum:netconn_evt
NETCONN_EVT_SENDMINUS	net/lwip/include/lwip/api.h	/^  NETCONN_EVT_SENDMINUS$/;"	e	enum:netconn_evt
NETCONN_EVT_SENDPLUS	net/lwip/include/lwip/api.h	/^  NETCONN_EVT_SENDPLUS,$/;"	e	enum:netconn_evt
NETCONN_INVALID	net/lwip/include/lwip/api.h	/^  NETCONN_INVALID    = 0,$/;"	e	enum:netconn_type
NETCONN_JOIN	net/lwip/include/lwip/api.h	/^  NETCONN_JOIN,$/;"	e	enum:netconn_igmp
NETCONN_LEAVE	net/lwip/include/lwip/api.h	/^  NETCONN_LEAVE$/;"	e	enum:netconn_igmp
NETCONN_LISTEN	net/lwip/include/lwip/api.h	/^  NETCONN_LISTEN,$/;"	e	enum:netconn_state
NETCONN_MORE	net/lwip/include/lwip/api.h	56;"	d
NETCONN_NOCOPY	net/lwip/include/lwip/api.h	54;"	d
NETCONN_NOFLAG	net/lwip/include/lwip/api.h	53;"	d
NETCONN_NONE	net/lwip/include/lwip/api.h	/^  NETCONN_NONE,$/;"	e	enum:netconn_state
NETCONN_RAW	net/lwip/include/lwip/api.h	/^  NETCONN_RAW        = 0x40$/;"	e	enum:netconn_type
NETCONN_TCP	net/lwip/include/lwip/api.h	/^  NETCONN_TCP        = 0x10,$/;"	e	enum:netconn_type
NETCONN_UDP	net/lwip/include/lwip/api.h	/^  NETCONN_UDP        = 0x20,$/;"	e	enum:netconn_type
NETCONN_UDPLITE	net/lwip/include/lwip/api.h	/^  NETCONN_UDPLITE    = 0x21,$/;"	e	enum:netconn_type
NETCONN_UDPNOCHKSUM	net/lwip/include/lwip/api.h	/^  NETCONN_UDPNOCHKSUM= 0x22,$/;"	e	enum:netconn_type
NETCONN_WRITE	net/lwip/include/lwip/api.h	/^  NETCONN_WRITE,$/;"	e	enum:netconn_state
NETIF_DEBUG	net/lwip/include/lwip/opt.h	1483;"	d
NETIF_FLAG_BROADCAST	net/lwip/include/lwip/netif.h	71;"	d
NETIF_FLAG_DHCP	net/lwip/include/lwip/netif.h	75;"	d
NETIF_FLAG_ETHARP	net/lwip/include/lwip/netif.h	80;"	d
NETIF_FLAG_IGMP	net/lwip/include/lwip/netif.h	82;"	d
NETIF_FLAG_LINK_UP	net/lwip/include/lwip/netif.h	78;"	d
NETIF_FLAG_POINTTOPOINT	net/lwip/include/lwip/netif.h	73;"	d
NETIF_FLAG_UP	net/lwip/include/lwip/netif.h	69;"	d
NETIF_INIT_SNMP	net/lwip/include/lwip/netif.h	181;"	d
NETIF_INIT_SNMP	net/lwip/include/lwip/netif.h	196;"	d
NETIF_LINK_CALLBACK	net/lwip/core/netif.c	62;"	d	file:
NETIF_LINK_CALLBACK	net/lwip/core/netif.c	64;"	d	file:
NETIF_MAX_HWADDR_LEN	net/lwip/include/lwip/netif.h	61;"	d
NETIF_SET_HINT	net/lwip/netif/etharp.c	121;"	d	file:
NETIF_STATUS_CALLBACK	net/lwip/core/netif.c	56;"	d	file:
NETIF_STATUS_CALLBACK	net/lwip/core/netif.c	58;"	d	file:
NEW_A	net/lwip/netif/ppp/vj.h	86;"	d
NEW_C	net/lwip/netif/ppp/vj.h	83;"	d
NEW_I	net/lwip/netif/ppp/vj.h	84;"	d
NEW_S	net/lwip/netif/ppp/vj.h	85;"	d
NEW_U	net/lwip/netif/ppp/vj.h	88;"	d
NEW_W	net/lwip/netif/ppp/vj.h	87;"	d
NHANDLERS	fs/serv.c	340;"	d	file:
NHANDLERS	obj/fs/fs.asm	/^#define NHANDLERS (sizeof(handlers)\/sizeof(handlers[0]))$/;"	d
NINDIRECT	inc/fs.h	25;"	d
NM	GNUmakefile	/^NM	:= $(GCCPREFIX)nm$/;"	m
NMBOX	net/lwip/jos/arch/sys_arch.c	13;"	d	file:
NO	kern/console.c	215;"	d	file:
NODE_STACK_SIZE	net/lwip/core/snmp/mib_structs.c	45;"	d	file:
NO_DATA	net/lwip/include/lwip/netdb.h	57;"	d
NO_RECOVERY	net/lwip/include/lwip/netdb.h	58;"	d
NO_SYS	net/lwip/include/lwip/opt.h	68;"	d
NPDENTRIES	inc/mmu.h	55;"	d
NPDPENTRIES	inc/mmu.h	54;"	d
NPMLENTRIES	inc/mmu.h	53;"	d
NPMODE_DROP	net/lwip/netif/ppp/ppp.h	/^  NPMODE_DROP,        \/* silently drop the packet *\/$/;"	e	enum:NPmode
NPMODE_ERROR	net/lwip/netif/ppp/ppp.h	/^  NPMODE_ERROR,       \/* return an error *\/$/;"	e	enum:NPmode
NPMODE_PASS	net/lwip/netif/ppp/ppp.h	/^  NPMODE_PASS,        \/* pass the packet through *\/$/;"	e	enum:NPmode
NPMODE_QUEUE	net/lwip/netif/ppp/ppp.h	/^  NPMODE_QUEUE        \/* save it up for later. *\/$/;"	e	enum:NPmode
NPTENTRIES	inc/mmu.h	56;"	d
NPmode	net/lwip/netif/ppp/ppp.h	/^enum NPmode {$/;"	g
NSEM	net/lwip/jos/arch/sys_arch.c	12;"	d	file:
NSREQ_ACCEPT	inc/ns.h	/^	NSREQ_ACCEPT = 1,$/;"	e	enum:__anon4
NSREQ_BIND	inc/ns.h	/^	NSREQ_BIND,$/;"	e	enum:__anon4
NSREQ_CLOSE	inc/ns.h	/^	NSREQ_CLOSE,$/;"	e	enum:__anon4
NSREQ_CONNECT	inc/ns.h	/^	NSREQ_CONNECT,$/;"	e	enum:__anon4
NSREQ_INPUT	inc/ns.h	/^	NSREQ_INPUT,$/;"	e	enum:__anon4
NSREQ_LISTEN	inc/ns.h	/^	NSREQ_LISTEN,$/;"	e	enum:__anon4
NSREQ_OUTPUT	inc/ns.h	/^	NSREQ_OUTPUT,$/;"	e	enum:__anon4
NSREQ_RECV	inc/ns.h	/^	NSREQ_RECV,$/;"	e	enum:__anon4
NSREQ_SEND	inc/ns.h	/^	NSREQ_SEND,$/;"	e	enum:__anon4
NSREQ_SHUTDOWN	inc/ns.h	/^	NSREQ_SHUTDOWN,$/;"	e	enum:__anon4
NSREQ_SOCKET	inc/ns.h	/^	NSREQ_SOCKET,$/;"	e	enum:__anon4
NSREQ_TIMER	inc/ns.h	/^	NSREQ_TIMER,$/;"	e	enum:__anon4
NSYSCALLS	inc/syscall.h	/^	NSYSCALLS$/;"	e	enum:__anon5
NTResp	net/lwip/netif/ppp/chpms.c	/^    u_char NTResp[24];$/;"	m	struct:__anon16	file:
NULL	inc/stdio.h	7;"	d
NULL	inc/types.h	5;"	d
NULL	net/lwip/include/lwip/def.h	42;"	d
NUMLOCK	kern/console.c	222;"	d	file:
NUM_PPP	net/lwip/include/lwip/opt.h	1274;"	d
NUM_SOCKETS	net/lwip/api/sockets.c	57;"	d	file:
NVRAM_BASEHI	kern/kclock.h	16;"	d
NVRAM_BASELO	kern/kclock.h	15;"	d
NVRAM_CENTURY	kern/kclock.h	27;"	d
NVRAM_EXTHI	kern/kclock.h	20;"	d
NVRAM_EXTLO	kern/kclock.h	19;"	d
NVRAM_PEXTHI	kern/kclock.h	24;"	d
NVRAM_PEXTLO	kern/kclock.h	23;"	d
N_BCOMM	inc/stab.h	37;"	d
N_BINCL	inc/stab.h	29;"	d
N_BSLINE	inc/stab.h	25;"	d
N_DSLINE	inc/stab.h	24;"	d
N_ECOML	inc/stab.h	39;"	d
N_ECOMM	inc/stab.h	38;"	d
N_EINCL	inc/stab.h	32;"	d
N_ENTRY	inc/stab.h	33;"	d
N_EXCL	inc/stab.h	35;"	d
N_FNAME	inc/stab.h	16;"	d
N_FUN	inc/stab.h	17;"	d
N_GSYM	inc/stab.h	15;"	d
N_LBRAC	inc/stab.h	34;"	d
N_LCSYM	inc/stab.h	19;"	d
N_LENG	inc/stab.h	40;"	d
N_LSYM	inc/stab.h	28;"	d
N_MAIN	inc/stab.h	20;"	d
N_PC	inc/stab.h	21;"	d
N_PSYM	inc/stab.h	31;"	d
N_RBRAC	inc/stab.h	36;"	d
N_RSYM	inc/stab.h	22;"	d
N_SLINE	inc/stab.h	23;"	d
N_SO	inc/stab.h	27;"	d
N_SOL	inc/stab.h	30;"	d
N_SSYM	inc/stab.h	26;"	d
N_STSYM	inc/stab.h	18;"	d
Nsipc	inc/ns.h	/^union Nsipc {$/;"	u
Nsreq_accept	inc/ns.h	/^	struct Nsreq_accept {$/;"	s	union:Nsipc
Nsreq_bind	inc/ns.h	/^	struct Nsreq_bind {$/;"	s	union:Nsipc
Nsreq_close	inc/ns.h	/^	struct Nsreq_close {$/;"	s	union:Nsipc
Nsreq_connect	inc/ns.h	/^	struct Nsreq_connect {$/;"	s	union:Nsipc
Nsreq_listen	inc/ns.h	/^	struct Nsreq_listen {$/;"	s	union:Nsipc
Nsreq_recv	inc/ns.h	/^	struct Nsreq_recv {$/;"	s	union:Nsipc
Nsreq_send	inc/ns.h	/^	struct Nsreq_send {$/;"	s	union:Nsipc
Nsreq_shutdown	inc/ns.h	/^	struct Nsreq_shutdown {$/;"	s	union:Nsipc
Nsreq_socket	inc/ns.h	/^	struct Nsreq_socket {$/;"	s	union:Nsipc
Nsret_accept	inc/ns.h	/^	struct Nsret_accept {$/;"	s	union:Nsipc
Nsret_recv	inc/ns.h	/^	struct Nsret_recv {$/;"	s	union:Nsipc
OBJCOPY	GNUmakefile	/^OBJCOPY	:= $(GCCPREFIX)objcopy$/;"	m
OBJDIR	GNUmakefile	/^OBJDIR := obj$/;"	m
OBJDIRS	GNUmakefile	/^OBJDIRS :=$/;"	m
OBJDUMP	GNUmakefile	/^OBJDUMP	:= $(GCCPREFIX)objdump$/;"	m
OPT_PASSIVE	net/lwip/netif/ppp/fsm.h	94;"	d
OPT_RESTART	net/lwip/netif/ppp/fsm.h	95;"	d
OPT_SILENT	net/lwip/netif/ppp/fsm.h	96;"	d
OTHERS	kern/lapic.c	29;"	d	file:
O_ACCMODE	inc/lib.h	145;"	d
O_CREAT	inc/lib.h	147;"	d
O_EXCL	inc/lib.h	149;"	d
O_MKDIR	inc/lib.h	150;"	d
O_NONBLOCK	net/lwip/include/lwip/sockets.h	268;"	d
O_RDONLY	inc/lib.h	142;"	d
O_RDWR	inc/lib.h	144;"	d
O_TRUNC	inc/lib.h	148;"	d
O_WRONLY	inc/lib.h	143;"	d
OpenFile	fs/serv.c	/^struct OpenFile {$/;"	s	file:
OptionParser	gradelib.py	/^from optparse import OptionParser$/;"	i
PACKAGEDATE	conf/lab.mk	/^PACKAGEDATE=Wed Sep 26 08:18:17 EDT 2012$/;"	m
PACK_STRUCT_BEGIN	net/lwip/include/lwip/arch.h	50;"	d
PACK_STRUCT_BEGIN	net/lwip/jos/arch/cc.h	23;"	d
PACK_STRUCT_END	net/lwip/include/lwip/arch.h	54;"	d
PACK_STRUCT_END	net/lwip/jos/arch/cc.h	24;"	d
PACK_STRUCT_FIELD	net/lwip/include/lwip/arch.h	58;"	d
PACK_STRUCT_FIELD	net/lwip/jos/arch/cc.h	21;"	d
PACK_STRUCT_STRUCT	net/lwip/core/dns.c	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:dns_answer
PACK_STRUCT_STRUCT	net/lwip/core/dns.c	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:dns_hdr
PACK_STRUCT_STRUCT	net/lwip/core/dns.c	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:dns_query
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/icmp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:icmp_dur_hdr
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/icmp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:icmp_echo_hdr
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/icmp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:icmp_te_hdr
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/igmp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:igmp_msg
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/ip.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip_hdr
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/ip_addr.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip_addr
PACK_STRUCT_STRUCT	net/lwip/include/ipv4/lwip/ip_addr.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip_addr2
PACK_STRUCT_STRUCT	net/lwip/include/ipv6/lwip/ip_addr.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip_addr
PACK_STRUCT_STRUCT	net/lwip/include/ipv6/lwip/ip_addr.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip_addr2
PACK_STRUCT_STRUCT	net/lwip/include/lwip/dhcp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:dhcp_msg
PACK_STRUCT_STRUCT	net/lwip/include/lwip/tcp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:tcp_hdr
PACK_STRUCT_STRUCT	net/lwip/include/lwip/udp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:udp_hdr
PACK_STRUCT_STRUCT	net/lwip/include/netif/etharp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:eth_addr
PACK_STRUCT_STRUCT	net/lwip/include/netif/etharp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:eth_hdr
PACK_STRUCT_STRUCT	net/lwip/include/netif/etharp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:etharp_hdr
PACK_STRUCT_STRUCT	net/lwip/include/netif/etharp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ethip_hdr
PACK_STRUCT_STRUCT	net/lwip/include/netif/ppp_oe.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:pppoehdr
PACK_STRUCT_STRUCT	net/lwip/include/netif/ppp_oe.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:pppoetag
PACK_STRUCT_STRUCT	net/lwip/jos/arch/cc.h	22;"	d
PADDING	net/lwip/netif/ppp/md5.c	/^static unsigned char PADDING[64] = {$/;"	v	file:
PADDR	kern/pmap.h	26;"	d
PAP_H	net/lwip/netif/ppp/pap.h	53;"	d
PAP_PEER	net/lwip/netif/ppp/auth.c	91;"	d	file:
PAP_SUPPORT	net/lwip/include/lwip/opt.h	1281;"	d
PAP_WITHPEER	net/lwip/netif/ppp/auth.c	90;"	d	file:
PBUF_DEBUG	net/lwip/include/lwip/opt.h	1490;"	d
PBUF_FLAG_PUSH	net/lwip/include/lwip/pbuf.h	62;"	d
PBUF_IP	net/lwip/include/lwip/pbuf.h	/^  PBUF_IP,$/;"	e	enum:__anon37
PBUF_IP_HLEN	net/lwip/include/lwip/pbuf.h	44;"	d
PBUF_LINK	net/lwip/include/lwip/pbuf.h	/^  PBUF_LINK,$/;"	e	enum:__anon37
PBUF_LINK_HLEN	net/lwip/include/lwip/opt.h	780;"	d
PBUF_POOL	net/lwip/include/lwip/pbuf.h	/^  PBUF_POOL \/* pbuf payload refers to RAM *\/$/;"	e	enum:__anon38
PBUF_POOL_BUFSIZE	net/lwip/include/lwip/opt.h	789;"	d
PBUF_POOL_BUFSIZE	net/lwip/jos/lwipopts.h	38;"	d
PBUF_POOL_BUFSIZE_ALIGNED	net/lwip/core/pbuf.c	79;"	d	file:
PBUF_POOL_SIZE	net/lwip/include/lwip/opt.h	309;"	d
PBUF_POOL_SIZE	net/lwip/jos/lwipopts.h	37;"	d
PBUF_RAM	net/lwip/include/lwip/pbuf.h	/^  PBUF_RAM, \/* pbuf data is stored in RAM *\/$/;"	e	enum:__anon38
PBUF_RAW	net/lwip/include/lwip/pbuf.h	/^  PBUF_RAW$/;"	e	enum:__anon37
PBUF_REF	net/lwip/include/lwip/pbuf.h	/^  PBUF_REF, \/* pbuf comes from the pbuf pool *\/$/;"	e	enum:__anon38
PBUF_ROM	net/lwip/include/lwip/pbuf.h	/^  PBUF_ROM, \/* pbuf data is stored in ROM *\/$/;"	e	enum:__anon38
PBUF_TRANSPORT	net/lwip/include/lwip/pbuf.h	/^  PBUF_TRANSPORT,$/;"	e	enum:__anon37
PBUF_TRANSPORT_HLEN	net/lwip/include/lwip/pbuf.h	43;"	d
PCI32_DMA_BOUNCE_THRESHOLD	kern/pcireg.h	708;"	d
PCINT	kern/lapic.c	36;"	d	file:
PCI_BHLC_CODE	kern/pcireg.h	329;"	d
PCI_BHLC_REG	kern/pcireg.h	302;"	d
PCI_BIST	kern/pcireg.h	306;"	d
PCI_BIST_MASK	kern/pcireg.h	305;"	d
PCI_BIST_SHIFT	kern/pcireg.h	304;"	d
PCI_BRIDGE_BUS_PRIMARY_SHIFT	kern/pcireg.h	590;"	d
PCI_BRIDGE_BUS_REG	kern/pcireg.h	589;"	d
PCI_BRIDGE_BUS_SECONDARY_SHIFT	kern/pcireg.h	591;"	d
PCI_BRIDGE_BUS_SUBORDINATE_SHIFT	kern/pcireg.h	592;"	d
PCI_BRIDGE_CONTROL_DISC_TIMER_SERR	kern/pcireg.h	639;"	d
PCI_BRIDGE_CONTROL_DISC_TIMER_STAT	kern/pcireg.h	638;"	d
PCI_BRIDGE_CONTROL_ISA	kern/pcireg.h	630;"	d
PCI_BRIDGE_CONTROL_MABRT	kern/pcireg.h	633;"	d
PCI_BRIDGE_CONTROL_MASK	kern/pcireg.h	627;"	d
PCI_BRIDGE_CONTROL_PERE	kern/pcireg.h	628;"	d
PCI_BRIDGE_CONTROL_PRI_DISC_TIMER	kern/pcireg.h	636;"	d
PCI_BRIDGE_CONTROL_REG	kern/pcireg.h	625;"	d
PCI_BRIDGE_CONTROL_SECBR	kern/pcireg.h	634;"	d
PCI_BRIDGE_CONTROL_SECFASTB2B	kern/pcireg.h	635;"	d
PCI_BRIDGE_CONTROL_SEC_DISC_TIMER	kern/pcireg.h	637;"	d
PCI_BRIDGE_CONTROL_SERR	kern/pcireg.h	629;"	d
PCI_BRIDGE_CONTROL_SHIFT	kern/pcireg.h	626;"	d
PCI_BRIDGE_CONTROL_VGA	kern/pcireg.h	631;"	d
PCI_BRIDGE_IOHIGH_BASE_MASK	kern/pcireg.h	622;"	d
PCI_BRIDGE_IOHIGH_BASE_SHIFT	kern/pcireg.h	620;"	d
PCI_BRIDGE_IOHIGH_LIMIT_MASK	kern/pcireg.h	623;"	d
PCI_BRIDGE_IOHIGH_LIMIT_SHIFT	kern/pcireg.h	621;"	d
PCI_BRIDGE_IOHIGH_REG	kern/pcireg.h	619;"	d
PCI_BRIDGE_IO_32BITS	kern/pcireg.h	601;"	d
PCI_BRIDGE_MEMORY_BASE_MASK	kern/pcireg.h	606;"	d
PCI_BRIDGE_MEMORY_BASE_SHIFT	kern/pcireg.h	604;"	d
PCI_BRIDGE_MEMORY_LIMIT_MASK	kern/pcireg.h	607;"	d
PCI_BRIDGE_MEMORY_LIMIT_SHIFT	kern/pcireg.h	605;"	d
PCI_BRIDGE_MEMORY_REG	kern/pcireg.h	603;"	d
PCI_BRIDGE_PREFETCHBASE32_REG	kern/pcireg.h	616;"	d
PCI_BRIDGE_PREFETCHLIMIT32_REG	kern/pcireg.h	617;"	d
PCI_BRIDGE_PREFETCHMEM_64BITS	kern/pcireg.h	614;"	d
PCI_BRIDGE_PREFETCHMEM_BASE_MASK	kern/pcireg.h	612;"	d
PCI_BRIDGE_PREFETCHMEM_BASE_SHIFT	kern/pcireg.h	610;"	d
PCI_BRIDGE_PREFETCHMEM_LIMIT_MASK	kern/pcireg.h	613;"	d
PCI_BRIDGE_PREFETCHMEM_LIMIT_SHIFT	kern/pcireg.h	611;"	d
PCI_BRIDGE_PREFETCHMEM_REG	kern/pcireg.h	609;"	d
PCI_BRIDGE_STATIO_IOBASE_MASK	kern/pcireg.h	598;"	d
PCI_BRIDGE_STATIO_IOBASE_SHIFT	kern/pcireg.h	595;"	d
PCI_BRIDGE_STATIO_IOLIMIT_MASK	kern/pcireg.h	599;"	d
PCI_BRIDGE_STATIO_IOLIMIT_SHIFT	kern/pcireg.h	596;"	d
PCI_BRIDGE_STATIO_REG	kern/pcireg.h	594;"	d
PCI_BRIDGE_STATIO_STATUS_MASK	kern/pcireg.h	600;"	d
PCI_BRIDGE_STATIO_STATUS_SHIFT	kern/pcireg.h	597;"	d
PCI_CACHELINE	kern/pcireg.h	326;"	d
PCI_CACHELINE_MASK	kern/pcireg.h	325;"	d
PCI_CACHELINE_SHIFT	kern/pcireg.h	324;"	d
PCI_CAPLISTPTR_REG	kern/pcireg.h	412;"	d
PCI_CAPLIST_CAP	kern/pcireg.h	416;"	d
PCI_CAPLIST_NEXT	kern/pcireg.h	415;"	d
PCI_CAPLIST_PTR	kern/pcireg.h	414;"	d
PCI_CAP_AGP	kern/pcireg.h	420;"	d
PCI_CAP_AGP8	kern/pcireg.h	433;"	d
PCI_CAP_AGP_MAJOR	kern/pcireg.h	421;"	d
PCI_CAP_AGP_MINOR	kern/pcireg.h	422;"	d
PCI_CAP_CPCI_HOTSWAP	kern/pcireg.h	426;"	d
PCI_CAP_CPCI_RSRCCTL	kern/pcireg.h	431;"	d
PCI_CAP_DEBUGPORT	kern/pcireg.h	430;"	d
PCI_CAP_HOTPLUG	kern/pcireg.h	432;"	d
PCI_CAP_LDT	kern/pcireg.h	428;"	d
PCI_CAP_MSI	kern/pcireg.h	425;"	d
PCI_CAP_MSIX	kern/pcireg.h	436;"	d
PCI_CAP_PCIEXPRESS	kern/pcireg.h	435;"	d
PCI_CAP_PCIX	kern/pcireg.h	427;"	d
PCI_CAP_PWRMGMT	kern/pcireg.h	419;"	d
PCI_CAP_RESERVED0	kern/pcireg.h	418;"	d
PCI_CAP_SECURE	kern/pcireg.h	434;"	d
PCI_CAP_SLOTID	kern/pcireg.h	424;"	d
PCI_CAP_VENDSPEC	kern/pcireg.h	429;"	d
PCI_CAP_VPD	kern/pcireg.h	423;"	d
PCI_CARDBUS_CAPLISTPTR_REG	kern/pcireg.h	413;"	d
PCI_CARDBUS_CIS_REG	kern/pcireg.h	400;"	d
PCI_CLASS	kern/pcireg.h	118;"	d
PCI_CLASS_BRIDGE	kern/pcireg.h	148;"	d
PCI_CLASS_CODE	kern/pcireg.h	136;"	d
PCI_CLASS_COMMUNICATIONS	kern/pcireg.h	149;"	d
PCI_CLASS_CRYPTO	kern/pcireg.h	158;"	d
PCI_CLASS_DASP	kern/pcireg.h	159;"	d
PCI_CLASS_DISPLAY	kern/pcireg.h	145;"	d
PCI_CLASS_DOCK	kern/pcireg.h	152;"	d
PCI_CLASS_I2O	kern/pcireg.h	156;"	d
PCI_CLASS_INPUT	kern/pcireg.h	151;"	d
PCI_CLASS_MASK	kern/pcireg.h	117;"	d
PCI_CLASS_MASS_STORAGE	kern/pcireg.h	143;"	d
PCI_CLASS_MEMORY	kern/pcireg.h	147;"	d
PCI_CLASS_MULTIMEDIA	kern/pcireg.h	146;"	d
PCI_CLASS_NETWORK	kern/pcireg.h	144;"	d
PCI_CLASS_PREHISTORIC	kern/pcireg.h	142;"	d
PCI_CLASS_PROCESSOR	kern/pcireg.h	153;"	d
PCI_CLASS_REG	kern/pcireg.h	109;"	d
PCI_CLASS_SATCOM	kern/pcireg.h	157;"	d
PCI_CLASS_SERIALBUS	kern/pcireg.h	154;"	d
PCI_CLASS_SHIFT	kern/pcireg.h	116;"	d
PCI_CLASS_SYSTEM	kern/pcireg.h	150;"	d
PCI_CLASS_UNDEFINED	kern/pcireg.h	160;"	d
PCI_CLASS_WIRELESS	kern/pcireg.h	155;"	d
PCI_COMMAND_BACKTOBACK_ENABLE	kern/pcireg.h	89;"	d
PCI_COMMAND_INVALIDATE_ENABLE	kern/pcireg.h	84;"	d
PCI_COMMAND_IO_ENABLE	kern/pcireg.h	80;"	d
PCI_COMMAND_MASK	kern/pcireg.h	72;"	d
PCI_COMMAND_MASTER_ENABLE	kern/pcireg.h	82;"	d
PCI_COMMAND_MEM_ENABLE	kern/pcireg.h	81;"	d
PCI_COMMAND_PALETTE_ENABLE	kern/pcireg.h	85;"	d
PCI_COMMAND_PARITY_ENABLE	kern/pcireg.h	86;"	d
PCI_COMMAND_SERR_ENABLE	kern/pcireg.h	88;"	d
PCI_COMMAND_SHIFT	kern/pcireg.h	71;"	d
PCI_COMMAND_SPECIAL_ENABLE	kern/pcireg.h	83;"	d
PCI_COMMAND_STATUS_CODE	kern/pcireg.h	76;"	d
PCI_COMMAND_STATUS_REG	kern/pcireg.h	70;"	d
PCI_COMMAND_STEPPING_ENABLE	kern/pcireg.h	87;"	d
PCI_HDRTYPE	kern/pcireg.h	311;"	d
PCI_HDRTYPE_DEVICE	kern/pcireg.h	339;"	d
PCI_HDRTYPE_MASK	kern/pcireg.h	310;"	d
PCI_HDRTYPE_MULTIFN	kern/pcireg.h	316;"	d
PCI_HDRTYPE_PCB	kern/pcireg.h	341;"	d
PCI_HDRTYPE_PPB	kern/pcireg.h	340;"	d
PCI_HDRTYPE_SHIFT	kern/pcireg.h	309;"	d
PCI_HDRTYPE_TYPE	kern/pcireg.h	314;"	d
PCI_ID_CODE	kern/pcireg.h	63;"	d
PCI_ID_REG	kern/pcireg.h	48;"	d
PCI_INTERFACE	kern/pcireg.h	128;"	d
PCI_INTERFACE_MASK	kern/pcireg.h	127;"	d
PCI_INTERFACE_SHIFT	kern/pcireg.h	126;"	d
PCI_INTERRUPT_CODE	kern/pcireg.h	575;"	d
PCI_INTERRUPT_GRANT	kern/pcireg.h	557;"	d
PCI_INTERRUPT_GRANT_MASK	kern/pcireg.h	556;"	d
PCI_INTERRUPT_GRANT_SHIFT	kern/pcireg.h	555;"	d
PCI_INTERRUPT_LATENCY	kern/pcireg.h	562;"	d
PCI_INTERRUPT_LATENCY_MASK	kern/pcireg.h	561;"	d
PCI_INTERRUPT_LATENCY_SHIFT	kern/pcireg.h	560;"	d
PCI_INTERRUPT_LINE	kern/pcireg.h	572;"	d
PCI_INTERRUPT_LINE_MASK	kern/pcireg.h	571;"	d
PCI_INTERRUPT_LINE_SHIFT	kern/pcireg.h	570;"	d
PCI_INTERRUPT_PIN	kern/pcireg.h	567;"	d
PCI_INTERRUPT_PIN_A	kern/pcireg.h	582;"	d
PCI_INTERRUPT_PIN_B	kern/pcireg.h	583;"	d
PCI_INTERRUPT_PIN_C	kern/pcireg.h	584;"	d
PCI_INTERRUPT_PIN_D	kern/pcireg.h	585;"	d
PCI_INTERRUPT_PIN_MASK	kern/pcireg.h	566;"	d
PCI_INTERRUPT_PIN_MAX	kern/pcireg.h	586;"	d
PCI_INTERRUPT_PIN_NONE	kern/pcireg.h	581;"	d
PCI_INTERRUPT_PIN_SHIFT	kern/pcireg.h	565;"	d
PCI_INTERRUPT_REG	kern/pcireg.h	538;"	d
PCI_LATTIMER	kern/pcireg.h	321;"	d
PCI_LATTIMER_MASK	kern/pcireg.h	320;"	d
PCI_LATTIMER_SHIFT	kern/pcireg.h	319;"	d
PCI_MAPREG_END	kern/pcireg.h	347;"	d
PCI_MAPREG_IO_ADDR	kern/pcireg.h	384;"	d
PCI_MAPREG_IO_ADDR_MASK	kern/pcireg.h	388;"	d
PCI_MAPREG_IO_SIZE	kern/pcireg.h	386;"	d
PCI_MAPREG_MEM64_ADDR	kern/pcireg.h	378;"	d
PCI_MAPREG_MEM64_ADDR_MASK	kern/pcireg.h	382;"	d
PCI_MAPREG_MEM64_SIZE	kern/pcireg.h	380;"	d
PCI_MAPREG_MEM_ADDR	kern/pcireg.h	372;"	d
PCI_MAPREG_MEM_ADDR_MASK	kern/pcireg.h	376;"	d
PCI_MAPREG_MEM_PREFETCHABLE	kern/pcireg.h	368;"	d
PCI_MAPREG_MEM_PREFETCHABLE_MASK	kern/pcireg.h	370;"	d
PCI_MAPREG_MEM_SIZE	kern/pcireg.h	374;"	d
PCI_MAPREG_MEM_TYPE	kern/pcireg.h	360;"	d
PCI_MAPREG_MEM_TYPE_32BIT	kern/pcireg.h	364;"	d
PCI_MAPREG_MEM_TYPE_32BIT_1M	kern/pcireg.h	365;"	d
PCI_MAPREG_MEM_TYPE_64BIT	kern/pcireg.h	366;"	d
PCI_MAPREG_MEM_TYPE_MASK	kern/pcireg.h	362;"	d
PCI_MAPREG_NUM	kern/pcireg.h	393;"	d
PCI_MAPREG_PCB_END	kern/pcireg.h	350;"	d
PCI_MAPREG_PPB_END	kern/pcireg.h	349;"	d
PCI_MAPREG_ROM	kern/pcireg.h	348;"	d
PCI_MAPREG_ROM_ENABLE	kern/pcireg.h	358;"	d
PCI_MAPREG_SIZE_TO_MASK	kern/pcireg.h	390;"	d
PCI_MAPREG_START	kern/pcireg.h	346;"	d
PCI_MAPREG_TYPE	kern/pcireg.h	352;"	d
PCI_MAPREG_TYPE_IO	kern/pcireg.h	357;"	d
PCI_MAPREG_TYPE_MASK	kern/pcireg.h	354;"	d
PCI_MAPREG_TYPE_MEM	kern/pcireg.h	356;"	d
PCI_MAX_LAT	kern/pcireg.h	547;"	d
PCI_MAX_LAT_MASK	kern/pcireg.h	546;"	d
PCI_MAX_LAT_SHIFT	kern/pcireg.h	545;"	d
PCI_MIN_GNT	kern/pcireg.h	552;"	d
PCI_MIN_GNT_MASK	kern/pcireg.h	551;"	d
PCI_MIN_GNT_SHIFT	kern/pcireg.h	550;"	d
PCI_PCIX_CMD	kern/pcireg.h	477;"	d
PCI_PCIX_CMD_BCNT_1024	kern/pcireg.h	483;"	d
PCI_PCIX_CMD_BCNT_2048	kern/pcireg.h	484;"	d
PCI_PCIX_CMD_BCNT_4096	kern/pcireg.h	485;"	d
PCI_PCIX_CMD_BCNT_512	kern/pcireg.h	482;"	d
PCI_PCIX_CMD_BYTECNT_MASK	kern/pcireg.h	480;"	d
PCI_PCIX_CMD_BYTECNT_SHIFT	kern/pcireg.h	481;"	d
PCI_PCIX_CMD_PERR_RECOVER	kern/pcireg.h	478;"	d
PCI_PCIX_CMD_RELAXED_ORDER	kern/pcireg.h	479;"	d
PCI_PCIX_CMD_SPLTRANS_1	kern/pcireg.h	487;"	d
PCI_PCIX_CMD_SPLTRANS_12	kern/pcireg.h	492;"	d
PCI_PCIX_CMD_SPLTRANS_16	kern/pcireg.h	493;"	d
PCI_PCIX_CMD_SPLTRANS_2	kern/pcireg.h	488;"	d
PCI_PCIX_CMD_SPLTRANS_3	kern/pcireg.h	489;"	d
PCI_PCIX_CMD_SPLTRANS_32	kern/pcireg.h	494;"	d
PCI_PCIX_CMD_SPLTRANS_4	kern/pcireg.h	490;"	d
PCI_PCIX_CMD_SPLTRANS_8	kern/pcireg.h	491;"	d
PCI_PCIX_CMD_SPLTRANS_MASK	kern/pcireg.h	486;"	d
PCI_PCIX_STATUS	kern/pcireg.h	499;"	d
PCI_PCIX_STATUS_133	kern/pcireg.h	504;"	d
PCI_PCIX_STATUS_64BIT	kern/pcireg.h	503;"	d
PCI_PCIX_STATUS_BUS_MASK	kern/pcireg.h	502;"	d
PCI_PCIX_STATUS_DEVCPLX	kern/pcireg.h	507;"	d
PCI_PCIX_STATUS_DEV_MASK	kern/pcireg.h	501;"	d
PCI_PCIX_STATUS_FN_MASK	kern/pcireg.h	500;"	d
PCI_PCIX_STATUS_MAXB_1024	kern/pcireg.h	511;"	d
PCI_PCIX_STATUS_MAXB_2048	kern/pcireg.h	512;"	d
PCI_PCIX_STATUS_MAXB_4096	kern/pcireg.h	513;"	d
PCI_PCIX_STATUS_MAXB_512	kern/pcireg.h	510;"	d
PCI_PCIX_STATUS_MAXB_MASK	kern/pcireg.h	508;"	d
PCI_PCIX_STATUS_MAXB_SHIFT	kern/pcireg.h	509;"	d
PCI_PCIX_STATUS_MAXRS_128K	kern/pcireg.h	531;"	d
PCI_PCIX_STATUS_MAXRS_16K	kern/pcireg.h	528;"	d
PCI_PCIX_STATUS_MAXRS_1K	kern/pcireg.h	524;"	d
PCI_PCIX_STATUS_MAXRS_2K	kern/pcireg.h	525;"	d
PCI_PCIX_STATUS_MAXRS_32K	kern/pcireg.h	529;"	d
PCI_PCIX_STATUS_MAXRS_4K	kern/pcireg.h	526;"	d
PCI_PCIX_STATUS_MAXRS_64K	kern/pcireg.h	530;"	d
PCI_PCIX_STATUS_MAXRS_8K	kern/pcireg.h	527;"	d
PCI_PCIX_STATUS_MAXRS_MASK	kern/pcireg.h	523;"	d
PCI_PCIX_STATUS_MAXST_1	kern/pcireg.h	515;"	d
PCI_PCIX_STATUS_MAXST_12	kern/pcireg.h	520;"	d
PCI_PCIX_STATUS_MAXST_16	kern/pcireg.h	521;"	d
PCI_PCIX_STATUS_MAXST_2	kern/pcireg.h	516;"	d
PCI_PCIX_STATUS_MAXST_3	kern/pcireg.h	517;"	d
PCI_PCIX_STATUS_MAXST_32	kern/pcireg.h	522;"	d
PCI_PCIX_STATUS_MAXST_4	kern/pcireg.h	518;"	d
PCI_PCIX_STATUS_MAXST_8	kern/pcireg.h	519;"	d
PCI_PCIX_STATUS_MAXST_MASK	kern/pcireg.h	514;"	d
PCI_PCIX_STATUS_SCERR	kern/pcireg.h	532;"	d
PCI_PCIX_STATUS_SPLDISC	kern/pcireg.h	505;"	d
PCI_PCIX_STATUS_SPLUNEX	kern/pcireg.h	506;"	d
PCI_PMCR	kern/pcireg.h	453;"	d
PCI_PMCR_D1SUPP	kern/pcireg.h	454;"	d
PCI_PMCR_D2SUPP	kern/pcireg.h	455;"	d
PCI_PMCSR	kern/pcireg.h	457;"	d
PCI_PMCSR_STATE_D0	kern/pcireg.h	459;"	d
PCI_PMCSR_STATE_D1	kern/pcireg.h	460;"	d
PCI_PMCSR_STATE_D2	kern/pcireg.h	461;"	d
PCI_PMCSR_STATE_D3	kern/pcireg.h	462;"	d
PCI_PMCSR_STATE_MASK	kern/pcireg.h	458;"	d
PCI_PRODUCT	kern/pcireg.h	60;"	d
PCI_PRODUCT_MASK	kern/pcireg.h	59;"	d
PCI_PRODUCT_SHIFT	kern/pcireg.h	58;"	d
PCI_REVISION	kern/pcireg.h	133;"	d
PCI_REVISION_MASK	kern/pcireg.h	132;"	d
PCI_REVISION_SHIFT	kern/pcireg.h	131;"	d
PCI_STATUS_66MHZ_SUPPORT	kern/pcireg.h	92;"	d
PCI_STATUS_BACKTOBACK_SUPPORT	kern/pcireg.h	94;"	d
PCI_STATUS_CAPLIST_SUPPORT	kern/pcireg.h	91;"	d
PCI_STATUS_DEVSEL_FAST	kern/pcireg.h	96;"	d
PCI_STATUS_DEVSEL_MASK	kern/pcireg.h	99;"	d
PCI_STATUS_DEVSEL_MEDIUM	kern/pcireg.h	97;"	d
PCI_STATUS_DEVSEL_SLOW	kern/pcireg.h	98;"	d
PCI_STATUS_MASK	kern/pcireg.h	74;"	d
PCI_STATUS_MASTER_ABORT	kern/pcireg.h	102;"	d
PCI_STATUS_MASTER_TARGET_ABORT	kern/pcireg.h	101;"	d
PCI_STATUS_PARITY_DETECT	kern/pcireg.h	104;"	d
PCI_STATUS_PARITY_ERROR	kern/pcireg.h	95;"	d
PCI_STATUS_SHIFT	kern/pcireg.h	73;"	d
PCI_STATUS_SPECIAL_ERROR	kern/pcireg.h	103;"	d
PCI_STATUS_TARGET_TARGET_ABORT	kern/pcireg.h	100;"	d
PCI_STATUS_UDF_SUPPORT	kern/pcireg.h	93;"	d
PCI_SUBCLASS	kern/pcireg.h	123;"	d
PCI_SUBCLASS_BRIDGE_CARDBUS	kern/pcireg.h	211;"	d
PCI_SUBCLASS_BRIDGE_EISA	kern/pcireg.h	206;"	d
PCI_SUBCLASS_BRIDGE_HOST	kern/pcireg.h	204;"	d
PCI_SUBCLASS_BRIDGE_INFINIBAND	kern/pcireg.h	214;"	d
PCI_SUBCLASS_BRIDGE_ISA	kern/pcireg.h	205;"	d
PCI_SUBCLASS_BRIDGE_MC	kern/pcireg.h	207;"	d
PCI_SUBCLASS_BRIDGE_MISC	kern/pcireg.h	215;"	d
PCI_SUBCLASS_BRIDGE_NUBUS	kern/pcireg.h	210;"	d
PCI_SUBCLASS_BRIDGE_PCI	kern/pcireg.h	208;"	d
PCI_SUBCLASS_BRIDGE_PCMCIA	kern/pcireg.h	209;"	d
PCI_SUBCLASS_BRIDGE_RACEWAY	kern/pcireg.h	212;"	d
PCI_SUBCLASS_BRIDGE_STPCI	kern/pcireg.h	213;"	d
PCI_SUBCLASS_COMMUNICATIONS_GPIB	kern/pcireg.h	222;"	d
PCI_SUBCLASS_COMMUNICATIONS_MISC	kern/pcireg.h	224;"	d
PCI_SUBCLASS_COMMUNICATIONS_MODEM	kern/pcireg.h	221;"	d
PCI_SUBCLASS_COMMUNICATIONS_MPSERIAL	kern/pcireg.h	220;"	d
PCI_SUBCLASS_COMMUNICATIONS_PARALLEL	kern/pcireg.h	219;"	d
PCI_SUBCLASS_COMMUNICATIONS_SERIAL	kern/pcireg.h	218;"	d
PCI_SUBCLASS_COMMUNICATIONS_SMARTCARD	kern/pcireg.h	223;"	d
PCI_SUBCLASS_CRYPTO_ENTERTAINMENT	kern/pcireg.h	289;"	d
PCI_SUBCLASS_CRYPTO_MISC	kern/pcireg.h	290;"	d
PCI_SUBCLASS_CRYPTO_NETCOMP	kern/pcireg.h	288;"	d
PCI_SUBCLASS_DASP_DPIO	kern/pcireg.h	293;"	d
PCI_SUBCLASS_DASP_MGMT	kern/pcireg.h	296;"	d
PCI_SUBCLASS_DASP_MISC	kern/pcireg.h	297;"	d
PCI_SUBCLASS_DASP_SYNC	kern/pcireg.h	295;"	d
PCI_SUBCLASS_DASP_TIMEFREQ	kern/pcireg.h	294;"	d
PCI_SUBCLASS_DISPLAY_3D	kern/pcireg.h	189;"	d
PCI_SUBCLASS_DISPLAY_MISC	kern/pcireg.h	190;"	d
PCI_SUBCLASS_DISPLAY_VGA	kern/pcireg.h	187;"	d
PCI_SUBCLASS_DISPLAY_XGA	kern/pcireg.h	188;"	d
PCI_SUBCLASS_DOCK_GENERIC	kern/pcireg.h	243;"	d
PCI_SUBCLASS_DOCK_MISC	kern/pcireg.h	244;"	d
PCI_SUBCLASS_I2O_STANDARD	kern/pcireg.h	278;"	d
PCI_SUBCLASS_INPUT_DIGITIZER	kern/pcireg.h	236;"	d
PCI_SUBCLASS_INPUT_GAMEPORT	kern/pcireg.h	239;"	d
PCI_SUBCLASS_INPUT_KEYBOARD	kern/pcireg.h	235;"	d
PCI_SUBCLASS_INPUT_MISC	kern/pcireg.h	240;"	d
PCI_SUBCLASS_INPUT_MOUSE	kern/pcireg.h	237;"	d
PCI_SUBCLASS_INPUT_SCANNER	kern/pcireg.h	238;"	d
PCI_SUBCLASS_MASK	kern/pcireg.h	122;"	d
PCI_SUBCLASS_MASS_STORAGE_ATA	kern/pcireg.h	172;"	d
PCI_SUBCLASS_MASS_STORAGE_FLOPPY	kern/pcireg.h	169;"	d
PCI_SUBCLASS_MASS_STORAGE_IDE	kern/pcireg.h	168;"	d
PCI_SUBCLASS_MASS_STORAGE_IPI	kern/pcireg.h	170;"	d
PCI_SUBCLASS_MASS_STORAGE_MISC	kern/pcireg.h	174;"	d
PCI_SUBCLASS_MASS_STORAGE_RAID	kern/pcireg.h	171;"	d
PCI_SUBCLASS_MASS_STORAGE_SATA	kern/pcireg.h	173;"	d
PCI_SUBCLASS_MASS_STORAGE_SCSI	kern/pcireg.h	167;"	d
PCI_SUBCLASS_MEMORY_FLASH	kern/pcireg.h	200;"	d
PCI_SUBCLASS_MEMORY_MISC	kern/pcireg.h	201;"	d
PCI_SUBCLASS_MEMORY_RAM	kern/pcireg.h	199;"	d
PCI_SUBCLASS_MULTIMEDIA_AUDIO	kern/pcireg.h	194;"	d
PCI_SUBCLASS_MULTIMEDIA_MISC	kern/pcireg.h	196;"	d
PCI_SUBCLASS_MULTIMEDIA_TELEPHONY	kern/pcireg.h	195;"	d
PCI_SUBCLASS_MULTIMEDIA_VIDEO	kern/pcireg.h	193;"	d
PCI_SUBCLASS_NETWORK_ATM	kern/pcireg.h	180;"	d
PCI_SUBCLASS_NETWORK_ETHERNET	kern/pcireg.h	177;"	d
PCI_SUBCLASS_NETWORK_FDDI	kern/pcireg.h	179;"	d
PCI_SUBCLASS_NETWORK_ISDN	kern/pcireg.h	181;"	d
PCI_SUBCLASS_NETWORK_MISC	kern/pcireg.h	184;"	d
PCI_SUBCLASS_NETWORK_PCIMGMULTICOMP	kern/pcireg.h	183;"	d
PCI_SUBCLASS_NETWORK_TOKENRING	kern/pcireg.h	178;"	d
PCI_SUBCLASS_NETWORK_WORLDFIP	kern/pcireg.h	182;"	d
PCI_SUBCLASS_PREHISTORIC_MISC	kern/pcireg.h	163;"	d
PCI_SUBCLASS_PREHISTORIC_VGA	kern/pcireg.h	164;"	d
PCI_SUBCLASS_PROCESSOR_386	kern/pcireg.h	247;"	d
PCI_SUBCLASS_PROCESSOR_486	kern/pcireg.h	248;"	d
PCI_SUBCLASS_PROCESSOR_ALPHA	kern/pcireg.h	250;"	d
PCI_SUBCLASS_PROCESSOR_COPROC	kern/pcireg.h	253;"	d
PCI_SUBCLASS_PROCESSOR_MIPS	kern/pcireg.h	252;"	d
PCI_SUBCLASS_PROCESSOR_PENTIUM	kern/pcireg.h	249;"	d
PCI_SUBCLASS_PROCESSOR_POWERPC	kern/pcireg.h	251;"	d
PCI_SUBCLASS_SATCOM_AUDIO	kern/pcireg.h	283;"	d
PCI_SUBCLASS_SATCOM_DATA	kern/pcireg.h	285;"	d
PCI_SUBCLASS_SATCOM_TV	kern/pcireg.h	282;"	d
PCI_SUBCLASS_SATCOM_VOICE	kern/pcireg.h	284;"	d
PCI_SUBCLASS_SERIALBUS_ACCESS	kern/pcireg.h	257;"	d
PCI_SUBCLASS_SERIALBUS_CANBUS	kern/pcireg.h	265;"	d
PCI_SUBCLASS_SERIALBUS_FIBER	kern/pcireg.h	260;"	d
PCI_SUBCLASS_SERIALBUS_FIREWIRE	kern/pcireg.h	256;"	d
PCI_SUBCLASS_SERIALBUS_INFINIBAND	kern/pcireg.h	262;"	d
PCI_SUBCLASS_SERIALBUS_IPMI	kern/pcireg.h	263;"	d
PCI_SUBCLASS_SERIALBUS_SERCOS	kern/pcireg.h	264;"	d
PCI_SUBCLASS_SERIALBUS_SMBUS	kern/pcireg.h	261;"	d
PCI_SUBCLASS_SERIALBUS_SSA	kern/pcireg.h	258;"	d
PCI_SUBCLASS_SERIALBUS_USB	kern/pcireg.h	259;"	d
PCI_SUBCLASS_SHIFT	kern/pcireg.h	121;"	d
PCI_SUBCLASS_SYSTEM_DMA	kern/pcireg.h	228;"	d
PCI_SUBCLASS_SYSTEM_MISC	kern/pcireg.h	232;"	d
PCI_SUBCLASS_SYSTEM_PCIHOTPLUG	kern/pcireg.h	231;"	d
PCI_SUBCLASS_SYSTEM_PIC	kern/pcireg.h	227;"	d
PCI_SUBCLASS_SYSTEM_RTC	kern/pcireg.h	230;"	d
PCI_SUBCLASS_SYSTEM_TIMER	kern/pcireg.h	229;"	d
PCI_SUBCLASS_WIRELESS_802_11A	kern/pcireg.h	273;"	d
PCI_SUBCLASS_WIRELESS_802_11B	kern/pcireg.h	274;"	d
PCI_SUBCLASS_WIRELESS_BLUETOOTH	kern/pcireg.h	271;"	d
PCI_SUBCLASS_WIRELESS_BROADBAND	kern/pcireg.h	272;"	d
PCI_SUBCLASS_WIRELESS_CONSUMERIR	kern/pcireg.h	269;"	d
PCI_SUBCLASS_WIRELESS_IRDA	kern/pcireg.h	268;"	d
PCI_SUBCLASS_WIRELESS_MISC	kern/pcireg.h	275;"	d
PCI_SUBCLASS_WIRELESS_RF	kern/pcireg.h	270;"	d
PCI_SUBSYS_ID_REG	kern/pcireg.h	407;"	d
PCI_VENDOR	kern/pcireg.h	55;"	d
PCI_VENDOR_MASK	kern/pcireg.h	54;"	d
PCI_VENDOR_SHIFT	kern/pcireg.h	53;"	d
PCI_VPDRES_ISLARGE	kern/pcireg.h	657;"	d
PCI_VPDRES_LARGE_NAME	kern/pcireg.h	662;"	d
PCI_VPDRES_SMALL_LENGTH	kern/pcireg.h	659;"	d
PCI_VPDRES_SMALL_NAME	kern/pcireg.h	660;"	d
PCI_VPDRES_TYPE_COMPATIBLE_DEVICE_ID	kern/pcireg.h	664;"	d
PCI_VPDRES_TYPE_END_TAG	kern/pcireg.h	666;"	d
PCI_VPDRES_TYPE_IDENTIFIER_STRING	kern/pcireg.h	668;"	d
PCI_VPDRES_TYPE_VENDOR_DEFINED	kern/pcireg.h	665;"	d
PCI_VPDRES_TYPE_VPD	kern/pcireg.h	669;"	d
PCI_VPD_ADDRESS	kern/pcireg.h	443;"	d
PCI_VPD_ADDRESS_MASK	kern/pcireg.h	441;"	d
PCI_VPD_ADDRESS_SHIFT	kern/pcireg.h	442;"	d
PCI_VPD_DATAREG	kern/pcireg.h	445;"	d
PCI_VPD_OPFLAG	kern/pcireg.h	446;"	d
PDADDRESS	net/lwip/netif/ppp/ppp.c	/^  PDADDRESS,   \/* Process address field. *\/$/;"	e	enum:__anon14	file:
PDCONTROL	net/lwip/netif/ppp/ppp.c	/^  PDCONTROL,   \/* Process control field. *\/$/;"	e	enum:__anon14	file:
PDDATA	net/lwip/netif/ppp/ppp.c	/^  PDDATA       \/* Process data byte. *\/$/;"	e	enum:__anon14	file:
PDIDLE	net/lwip/netif/ppp/ppp.c	/^  PDIDLE = 0,  \/* Idle state - waiting. *\/$/;"	e	enum:__anon14	file:
PDPE	inc/mmu.h	43;"	d
PDPESHIFT	inc/mmu.h	66;"	d
PDPROTOCOL1	net/lwip/netif/ppp/ppp.c	/^  PDPROTOCOL1, \/* Process protocol field 1. *\/$/;"	e	enum:__anon14	file:
PDPROTOCOL2	net/lwip/netif/ppp/ppp.c	/^  PDPROTOCOL2, \/* Process protocol field 2. *\/$/;"	e	enum:__anon14	file:
PDSTART	net/lwip/netif/ppp/ppp.c	/^  PDSTART,     \/* Process start flag. *\/$/;"	e	enum:__anon14	file:
PDX	inc/mmu.h	34;"	d
PDXSHIFT	inc/mmu.h	65;"	d
PERF_START	net/lwip/jos/arch/perf.h	4;"	d
PERF_STOP	net/lwip/jos/arch/perf.h	5;"	d
PERIODIC	kern/lapic.c	35;"	d	file:
PERL	GNUmakefile	/^PERL	:= perl$/;"	m
PER_TCP_PCB_BUFFER	net/lwip/jos/lwipopts.h	34;"	d
PFTEMP	inc/memlayout.h	139;"	d
PF_INET	net/lwip/include/lwip/sockets.h	119;"	d
PF_UNSPEC	net/lwip/include/lwip/sockets.h	120;"	d
PGADDR	inc/mmu.h	50;"	d
PGOFF	inc/mmu.h	47;"	d
PGSHIFT	inc/mmu.h	59;"	d
PGSIZE	inc/mmu.h	58;"	d
PHASE_AUTHENTICATE	net/lwip/netif/ppp/lcp.h	/^  PHASE_AUTHENTICATE,$/;"	e	enum:__anon17
PHASE_CALLBACK	net/lwip/netif/ppp/lcp.h	/^  PHASE_CALLBACK,$/;"	e	enum:__anon17
PHASE_DEAD	net/lwip/netif/ppp/lcp.h	/^  PHASE_DEAD = 0,$/;"	e	enum:__anon17
PHASE_ESTABLISH	net/lwip/netif/ppp/lcp.h	/^  PHASE_ESTABLISH,$/;"	e	enum:__anon17
PHASE_INITIALIZE	net/lwip/netif/ppp/lcp.h	/^  PHASE_INITIALIZE,$/;"	e	enum:__anon17
PHASE_NETWORK	net/lwip/netif/ppp/lcp.h	/^  PHASE_NETWORK,$/;"	e	enum:__anon17
PHASE_TERMINATE	net/lwip/netif/ppp/lcp.h	/^  PHASE_TERMINATE$/;"	e	enum:__anon17
PKTMAP	net/lwip/jos/jif/jif.c	47;"	d	file:
PML4	inc/mmu.h	39;"	d
PML4SHIFT	inc/mmu.h	67;"	d
POPA	kern/macro.h	19;"	d
POPA_	kern/macro.h	37;"	d
PORT	user/echosrv.c	5;"	d	file:
PORT	user/echotest.c	7;"	d	file:
PORT	user/httpd.c	5;"	d	file:
PORT7	GNUmakefile	/^PORT7	:= $(shell expr $(GDBPORT) + 1)$/;"	m
PORT80	GNUmakefile	/^PORT80	:= $(shell expr $(GDBPORT) + 2)$/;"	m
PPN	inc/mmu.h	30;"	d
PPPAUTHTYPE_ANY	net/lwip/netif/ppp/ppp.h	/^    PPPAUTHTYPE_ANY,$/;"	e	enum:pppAuthType
PPPAUTHTYPE_CHAP	net/lwip/netif/ppp/ppp.h	/^    PPPAUTHTYPE_CHAP$/;"	e	enum:pppAuthType
PPPAUTHTYPE_NONE	net/lwip/netif/ppp/ppp.h	/^    PPPAUTHTYPE_NONE,$/;"	e	enum:pppAuthType
PPPAUTHTYPE_PAP	net/lwip/netif/ppp/ppp.h	/^    PPPAUTHTYPE_PAP,$/;"	e	enum:pppAuthType
PPPCTLG_ERRCODE	net/lwip/netif/ppp/ppp.h	252;"	d
PPPCTLG_FD	net/lwip/netif/ppp/ppp.h	253;"	d
PPPCTLG_UPSTATUS	net/lwip/netif/ppp/ppp.h	250;"	d
PPPCTLS_ERRCODE	net/lwip/netif/ppp/ppp.h	251;"	d
PPPControl	net/lwip/netif/ppp/ppp.c	/^} PPPControl;$/;"	t	typeref:struct:PPPControl_s	file:
PPPControl_s	net/lwip/netif/ppp/ppp.c	/^typedef struct PPPControl_s {$/;"	s	file:
PPPDEBUG	net/lwip/netif/ppp/pppdebug.h	72;"	d
PPPDEBUG	net/lwip/netif/ppp/pppdebug.h	82;"	d
PPPDEBUG_H	net/lwip/netif/ppp/pppdebug.h	37;"	d
PPPDevStates	net/lwip/netif/ppp/ppp.c	/^} PPPDevStates;$/;"	t	typeref:enum:__anon14	file:
PPPERR_ALLOC	net/lwip/netif/ppp/ppp.h	237;"	d
PPPERR_AUTHFAIL	net/lwip/netif/ppp/ppp.h	240;"	d
PPPERR_CONNECT	net/lwip/netif/ppp/ppp.h	239;"	d
PPPERR_DEVICE	net/lwip/netif/ppp/ppp.h	236;"	d
PPPERR_NONE	net/lwip/netif/ppp/ppp.h	233;"	d
PPPERR_OPEN	net/lwip/netif/ppp/ppp.h	235;"	d
PPPERR_PARAM	net/lwip/netif/ppp/ppp.h	234;"	d
PPPERR_PROTOCOL	net/lwip/netif/ppp/ppp.h	241;"	d
PPPERR_USER	net/lwip/netif/ppp/ppp.h	238;"	d
PPPOE_ADD_16	net/lwip/netif/ppp/ppp_oe.c	170;"	d	file:
PPPOE_ADD_HEADER	net/lwip/netif/ppp/ppp_oe.c	175;"	d	file:
PPPOE_CODE_PADI	net/lwip/include/netif/ppp_oe.h	128;"	d
PPPOE_CODE_PADO	net/lwip/include/netif/ppp_oe.h	129;"	d
PPPOE_CODE_PADR	net/lwip/include/netif/ppp_oe.h	130;"	d
PPPOE_CODE_PADS	net/lwip/include/netif/ppp_oe.h	131;"	d
PPPOE_CODE_PADT	net/lwip/include/netif/ppp_oe.h	132;"	d
PPPOE_DISC_MAXPADI	net/lwip/netif/ppp/ppp_oe.c	183;"	d	file:
PPPOE_DISC_MAXPADR	net/lwip/netif/ppp/ppp_oe.c	184;"	d	file:
PPPOE_DISC_TIMEOUT	net/lwip/netif/ppp/ppp_oe.c	181;"	d	file:
PPPOE_HEADERLEN	net/lwip/include/netif/ppp_oe.h	114;"	d
PPPOE_MAXMTU	net/lwip/include/netif/ppp_oe.h	139;"	d
PPPOE_MAXMTU	net/lwip/netif/ppp/lcp.c	72;"	d	file:
PPPOE_SLOW_RETRY	net/lwip/netif/ppp/ppp_oe.c	182;"	d	file:
PPPOE_STATE_CLOSING	net/lwip/include/netif/ppp_oe.h	110;"	d
PPPOE_STATE_INITIAL	net/lwip/include/netif/ppp_oe.h	106;"	d
PPPOE_STATE_PADI_SENT	net/lwip/include/netif/ppp_oe.h	107;"	d
PPPOE_STATE_PADO_SENT	net/lwip/include/netif/ppp_oe.h	112;"	d
PPPOE_STATE_PADR_SENT	net/lwip/include/netif/ppp_oe.h	108;"	d
PPPOE_STATE_SESSION	net/lwip/include/netif/ppp_oe.h	109;"	d
PPPOE_SUPPORT	net/lwip/include/lwip/opt.h	1258;"	d
PPPOE_TAG_ACCOOKIE	net/lwip/include/netif/ppp_oe.h	121;"	d
PPPOE_TAG_ACNAME	net/lwip/include/netif/ppp_oe.h	119;"	d
PPPOE_TAG_ACSYS_ERR	net/lwip/include/netif/ppp_oe.h	125;"	d
PPPOE_TAG_EOL	net/lwip/include/netif/ppp_oe.h	117;"	d
PPPOE_TAG_GENERIC_ERR	net/lwip/include/netif/ppp_oe.h	126;"	d
PPPOE_TAG_HUNIQUE	net/lwip/include/netif/ppp_oe.h	120;"	d
PPPOE_TAG_RELAYSID	net/lwip/include/netif/ppp_oe.h	123;"	d
PPPOE_TAG_SNAME	net/lwip/include/netif/ppp_oe.h	118;"	d
PPPOE_TAG_SNAME_ERR	net/lwip/include/netif/ppp_oe.h	124;"	d
PPPOE_TAG_VENDOR	net/lwip/include/netif/ppp_oe.h	122;"	d
PPPOE_VERTYPE	net/lwip/include/netif/ppp_oe.h	115;"	d
PPPOS_SUPPORT	net/lwip/include/lwip/opt.h	1265;"	d
PPP_ADDRESS	net/lwip/netif/ppp/ppp.c	119;"	d	file:
PPP_ALLSTATIONS	net/lwip/netif/ppp/ppp.h	125;"	d
PPP_AT	net/lwip/netif/ppp/ppp.h	135;"	d
PPP_ATCP	net/lwip/netif/ppp/ppp.h	140;"	d
PPP_CBCP	net/lwip/netif/ppp/ppp.h	146;"	d
PPP_CCP	net/lwip/netif/ppp/ppp.h	141;"	d
PPP_CHAP	net/lwip/netif/ppp/ppp.h	145;"	d
PPP_COMP	net/lwip/netif/ppp/ppp.h	138;"	d
PPP_CONTROL	net/lwip/netif/ppp/ppp.c	120;"	d	file:
PPP_DEBUG	net/lwip/include/lwip/opt.h	1659;"	d
PPP_DEFMRU	net/lwip/include/lwip/opt.h	1393;"	d
PPP_ESCAPE	net/lwip/netif/ppp/ppp.h	128;"	d
PPP_FCS	net/lwip/netif/ppp/ppp.h	153;"	d
PPP_FCSLEN	net/lwip/netif/ppp/ppp.h	119;"	d
PPP_FLAG	net/lwip/netif/ppp/ppp.h	127;"	d
PPP_GOODFCS	net/lwip/netif/ppp/ppp.h	152;"	d
PPP_H	net/lwip/netif/ppp/ppp.h	35;"	d
PPP_HDRLEN	net/lwip/netif/ppp/ppp.h	118;"	d
PPP_INITFCS	net/lwip/netif/ppp/ppp.h	151;"	d
PPP_IP	net/lwip/netif/ppp/ppp.h	134;"	d
PPP_IPCP	net/lwip/netif/ppp/ppp.h	139;"	d
PPP_LCP	net/lwip/netif/ppp/ppp.h	142;"	d
PPP_LQR	net/lwip/netif/ppp/ppp.h	144;"	d
PPP_MAXIDLEFLAG	net/lwip/include/lwip/opt.h	1373;"	d
PPP_MAXMRU	net/lwip/include/lwip/opt.h	1391;"	d
PPP_MAXMTU	net/lwip/include/lwip/opt.h	1387;"	d
PPP_MINMRU	net/lwip/include/lwip/opt.h	1395;"	d
PPP_MINMTU	net/lwip/include/lwip/opt.h	1389;"	d
PPP_MRU	net/lwip/include/lwip/opt.h	1390;"	d
PPP_MTU	net/lwip/include/lwip/opt.h	1384;"	d
PPP_OE_H	net/lwip/include/netif/ppp_oe.h	71;"	d
PPP_PAP	net/lwip/netif/ppp/ppp.h	143;"	d
PPP_PROTOCOL	net/lwip/netif/ppp/ppp.c	121;"	d	file:
PPP_SUPPORT	net/lwip/include/lwip/opt.h	1251;"	d
PPP_THREAD_NAME	net/lwip/include/lwip/opt.h	964;"	d
PPP_THREAD_PRIO	net/lwip/include/lwip/opt.h	982;"	d
PPP_THREAD_STACKSIZE	net/lwip/include/lwip/opt.h	973;"	d
PPP_TRANS	net/lwip/netif/ppp/ppp.h	129;"	d
PPP_UI	net/lwip/netif/ppp/ppp.h	126;"	d
PPP_VJC_COMP	net/lwip/netif/ppp/ppp.h	136;"	d
PPP_VJC_UNCOMP	net/lwip/netif/ppp/ppp.h	137;"	d
PRINTMSG	net/lwip/netif/ppp/ppp.h	215;"	d
PRINTMSG	net/lwip/netif/ppp/ppp.h	217;"	d
PROBE_MAX	net/lwip/include/ipv4/lwip/autoip.h	62;"	d
PROBE_MIN	net/lwip/include/ipv4/lwip/autoip.h	61;"	d
PROBE_NUM	net/lwip/include/ipv4/lwip/autoip.h	63;"	d
PROBE_WAIT	net/lwip/include/ipv4/lwip/autoip.h	60;"	d
PROTO_NAME	net/lwip/netif/ppp/fsm.c	106;"	d	file:
PROTREJ	net/lwip/netif/ppp/lcp.h	78;"	d
PTE_A	inc/mmu.h	75;"	d
PTE_ADDR	inc/mmu.h	91;"	d
PTE_AVAIL	inc/mmu.h	82;"	d
PTE_CONTINUED	lib/malloc.c	23;"	d	file:
PTE_COW	lib/fork.c	7;"	d	file:
PTE_D	inc/mmu.h	76;"	d
PTE_MBZ	inc/mmu.h	78;"	d
PTE_P	inc/mmu.h	70;"	d
PTE_PCD	inc/mmu.h	74;"	d
PTE_PS	inc/mmu.h	77;"	d
PTE_PWT	inc/mmu.h	73;"	d
PTE_SHARE	inc/lib.h	93;"	d
PTE_SYSCALL	inc/mmu.h	85;"	d
PTE_U	inc/mmu.h	72;"	d
PTE_USER	inc/mmu.h	88;"	d
PTE_W	inc/mmu.h	71;"	d
PTSHIFT	inc/mmu.h	62;"	d
PTSIZE	inc/mmu.h	61;"	d
PTX	inc/mmu.h	42;"	d
PTXSHIFT	inc/mmu.h	64;"	d
PUSHA	kern/macro.h	1;"	d
PUSHA	kern/trapentry.S	/^PUSHA$/;"	l
PUSHA	obj/kern/kernel.asm	/^PUSHA$/;"	l
PUTCHAR	net/lwip/netif/ppp/ppp.h	179;"	d
PUTLONG	net/lwip/netif/ppp/ppp.h	199;"	d
PUTSHORT	net/lwip/netif/ppp/ppp.h	188;"	d
Page	inc/memlayout.h	/^struct Page {$/;"	s
Page_LIST_entry_t	inc/memlayout.h	/^typedef LIST_ENTRY(Page) Page_LIST_entry_t;$/;"	t
Popen	gradelib.py	/^from subprocess import check_call, Popen$/;"	i
Proghdr	inc/elf.h	/^struct Proghdr {$/;"	s
Pseudodesc	inc/mmu.h	/^struct Pseudodesc {$/;"	s
PushRegs	inc/trap.h	/^struct PushRegs {$/;"	s
QEMU	GNUmakefile	/^QEMU := $(shell if which qemu-system-x86_64 > \/dev\/null; \\$/;"	m
QEMU	gradelib.py	/^class QEMU(object):$/;"	c
QEMUOPTS	GNUmakefile	/^QEMUOPTS = -hda $(OBJDIR)\/kern\/kernel.img -serial mon:stdio -gdb tcp::$(GDBPORT)$/;"	m
QUEUE_SIZE	net/ns.h	11;"	d
RANDM_H	net/lwip/netif/ppp/randm.h	35;"	d
RANDPOOLSZ	net/lwip/netif/ppp/randm.c	46;"	d	file:
RATE_LIMIT_INTERVAL	net/lwip/include/ipv4/lwip/autoip.h	68;"	d
RAW_DEBUG	net/lwip/include/lwip/opt.h	1553;"	d
RAW_TTL	net/lwip/include/lwip/opt.h	471;"	d
RCV_PKT_SIZE	kern/e1000.h	20;"	d
REJCIADDR	net/lwip/netif/ppp/ipcp.c	793;"	d	file:
REJCICBCP	net/lwip/netif/ppp/lcp.c	1138;"	d	file:
REJCICHAP	net/lwip/netif/ppp/lcp.c	1090;"	d	file:
REJCIDNS	net/lwip/netif/ppp/ipcp.c	843;"	d	file:
REJCILONG	net/lwip/netif/ppp/lcp.c	1107;"	d	file:
REJCILQR	net/lwip/netif/ppp/lcp.c	1122;"	d	file:
REJCISHORT	net/lwip/netif/ppp/lcp.c	1075;"	d	file:
REJCIVJ	net/lwip/netif/ppp/ipcp.c	818;"	d	file:
REJCIVOID	net/lwip/netif/ppp/lcp.c	1065;"	d	file:
RELOC	kern/entry.S	/^#define	RELOC(x) ((x) - KERNBASE)$/;"	d
RELOC	kern/mpentry.S	/^#define RELOC(x) ((x) - KERNBASE)$/;"	d
REQVA	lib/nsipc.c	8;"	d	file:
REQVA	net/ns.h	12;"	d
ROTATE_LEFT	net/lwip/netif/ppp/md5.c	77;"	d	file:
ROUNDDOWN	inc/types.h	58;"	d
ROUNDUP	fs/fsformat.c	34;"	d	file:
ROUNDUP	inc/types.h	64;"	d
ROUTER_ALERT	net/lwip/include/ipv4/lwip/igmp.h	55;"	d
ROUTER_ALERTLEN	net/lwip/include/ipv4/lwip/igmp.h	56;"	d
Ripdebuginfo	kern/kdebug.h	/^struct Ripdebuginfo {$/;"	s
Runner	gradelib.py	/^class Runner():$/;"	c
S11	net/lwip/netif/ppp/md5.c	223;"	d	file:
S12	net/lwip/netif/ppp/md5.c	224;"	d	file:
S13	net/lwip/netif/ppp/md5.c	225;"	d	file:
S14	net/lwip/netif/ppp/md5.c	226;"	d	file:
S16_F	net/lwip/jos/arch/cc.h	26;"	d
S21	net/lwip/netif/ppp/md5.c	245;"	d	file:
S22	net/lwip/netif/ppp/md5.c	246;"	d	file:
S23	net/lwip/netif/ppp/md5.c	247;"	d	file:
S24	net/lwip/netif/ppp/md5.c	248;"	d	file:
S31	net/lwip/netif/ppp/md5.c	267;"	d	file:
S32	net/lwip/netif/ppp/md5.c	268;"	d	file:
S32_F	net/lwip/jos/arch/cc.h	30;"	d
S33	net/lwip/netif/ppp/md5.c	269;"	d	file:
S34	net/lwip/netif/ppp/md5.c	270;"	d	file:
S41	net/lwip/netif/ppp/md5.c	289;"	d	file:
S42	net/lwip/netif/ppp/md5.c	290;"	d	file:
S43	net/lwip/netif/ppp/md5.c	291;"	d	file:
S44	net/lwip/netif/ppp/md5.c	292;"	d	file:
SAVE_REGS	user/faultregs.c	13;"	d	file:
SCROLLLOCK	kern/console.c	223;"	d	file:
SECTSIZE	boot/main.c	32;"	d	file:
SECTSIZE	boot1/main.c	32;"	d	file:
SECTSIZE	fs/fs.h	4;"	d
SEG	inc/mmu.h	162;"	d
SEG	inc/mmu.h	219;"	d
SEG16	inc/mmu.h	228;"	d
SEG64	inc/mmu.h	167;"	d
SEG64	inc/mmu.h	223;"	d
SEG64USER	inc/mmu.h	172;"	d
SEG_FAULT	inc/mmu.h	217;"	d
SEG_NULL	inc/mmu.h	159;"	d
SEG_NULL	inc/mmu.h	215;"	d
SETCALLGATE	inc/mmu.h	349;"	d
SETGATE	inc/mmu.h	333;"	d
SETTSS	inc/mmu.h	300;"	d
SHIFT	kern/console.c	217;"	d	file:
SIOCATMARK	net/lwip/include/lwip/sockets.h	263;"	d
SIOCGHIWAT	net/lwip/include/lwip/sockets.h	260;"	d
SIOCGLOWAT	net/lwip/include/lwip/sockets.h	262;"	d
SIOCSHIWAT	net/lwip/include/lwip/sockets.h	259;"	d
SIOCSLOWAT	net/lwip/include/lwip/sockets.h	261;"	d
SIZEOF_STRUCT_MEM	net/lwip/core/mem.c	169;"	d	file:
SIZEOF_STRUCT_PBUF	net/lwip/core/pbuf.c	76;"	d	file:
SLIPIF_THREAD_NAME	net/lwip/include/lwip/opt.h	939;"	d
SLIPIF_THREAD_PRIO	net/lwip/include/lwip/opt.h	957;"	d
SLIPIF_THREAD_STACKSIZE	net/lwip/include/lwip/opt.h	948;"	d
SLIP_DEBUG	net/lwip/include/lwip/opt.h	1666;"	d
SLIP_END	net/lwip/netif/slipif.c	57;"	d	file:
SLIP_ESC	net/lwip/netif/slipif.c	58;"	d	file:
SLIP_ESC_END	net/lwip/netif/slipif.c	59;"	d	file:
SLIP_ESC_ESC	net/lwip/netif/slipif.c	60;"	d	file:
SMEMCPY	net/lwip/include/lwip/opt.h	84;"	d
SNMP_ASN1_APPLIC	net/lwip/include/lwip/snmp_asn1.h	48;"	d
SNMP_ASN1_CONSTR	net/lwip/include/lwip/snmp_asn1.h	51;"	d
SNMP_ASN1_CONTXT	net/lwip/include/lwip/snmp_asn1.h	49;"	d
SNMP_ASN1_COUNTER	net/lwip/include/lwip/snmp_asn1.h	63;"	d
SNMP_ASN1_GAUGE	net/lwip/include/lwip/snmp_asn1.h	64;"	d
SNMP_ASN1_INTEG	net/lwip/include/lwip/snmp_asn1.h	55;"	d
SNMP_ASN1_IPADDR	net/lwip/include/lwip/snmp_asn1.h	62;"	d
SNMP_ASN1_NUL	net/lwip/include/lwip/snmp_asn1.h	57;"	d
SNMP_ASN1_OBJ_ID	net/lwip/include/lwip/snmp_asn1.h	58;"	d
SNMP_ASN1_OC_STR	net/lwip/include/lwip/snmp_asn1.h	56;"	d
SNMP_ASN1_OPAQUE	net/lwip/include/lwip/snmp_asn1.h	66;"	d
SNMP_ASN1_PDU_GET_NEXT_REQ	net/lwip/include/lwip/snmp_asn1.h	70;"	d
SNMP_ASN1_PDU_GET_REQ	net/lwip/include/lwip/snmp_asn1.h	69;"	d
SNMP_ASN1_PDU_GET_RESP	net/lwip/include/lwip/snmp_asn1.h	71;"	d
SNMP_ASN1_PDU_SET_REQ	net/lwip/include/lwip/snmp_asn1.h	72;"	d
SNMP_ASN1_PDU_TRAP	net/lwip/include/lwip/snmp_asn1.h	73;"	d
SNMP_ASN1_PRIMIT	net/lwip/include/lwip/snmp_asn1.h	52;"	d
SNMP_ASN1_SEQ	net/lwip/include/lwip/snmp_asn1.h	59;"	d
SNMP_ASN1_TIMETICKS	net/lwip/include/lwip/snmp_asn1.h	65;"	d
SNMP_ASN1_UNIV	net/lwip/include/lwip/snmp_asn1.h	47;"	d
SNMP_COMMUNITY_STR_LEN	net/lwip/include/lwip/snmp_msg.h	214;"	d
SNMP_CONCURRENT_REQUESTS	net/lwip/include/lwip/opt.h	531;"	d
SNMP_ENTERPRISE_ID	net/lwip/core/snmp/mib2.c	65;"	d	file:
SNMP_ES_BADVALUE	net/lwip/include/lwip/snmp_msg.h	64;"	d
SNMP_ES_GENERROR	net/lwip/include/lwip/snmp_msg.h	66;"	d
SNMP_ES_NOERROR	net/lwip/include/lwip/snmp_msg.h	61;"	d
SNMP_ES_NOSUCHNAME	net/lwip/include/lwip/snmp_msg.h	63;"	d
SNMP_ES_READONLY	net/lwip/include/lwip/snmp_msg.h	65;"	d
SNMP_ES_TOOBIG	net/lwip/include/lwip/snmp_msg.h	62;"	d
SNMP_GENTRAP_AUTHFAIL	net/lwip/include/lwip/snmp_msg.h	70;"	d
SNMP_GENTRAP_COLDSTART	net/lwip/include/lwip/snmp_msg.h	68;"	d
SNMP_GENTRAP_ENTERPRISESPC	net/lwip/include/lwip/snmp_msg.h	71;"	d
SNMP_GENTRAP_WARMSTART	net/lwip/include/lwip/snmp_msg.h	69;"	d
SNMP_GET_SYSUPTIME	net/lwip/core/snmp/mib2.c	74;"	d	file:
SNMP_IN_PORT	net/lwip/include/lwip/snmp_msg.h	53;"	d
SNMP_MIB_DEBUG	net/lwip/include/lwip/opt.h	1694;"	d
SNMP_MSG_DEBUG	net/lwip/include/lwip/opt.h	1687;"	d
SNMP_MSG_EMPTY	net/lwip/include/lwip/snmp_msg.h	195;"	d
SNMP_MSG_EXTERNAL_GET_OBJDEF	net/lwip/include/lwip/snmp_msg.h	208;"	d
SNMP_MSG_EXTERNAL_GET_OBJDEF_S	net/lwip/include/lwip/snmp_msg.h	211;"	d
SNMP_MSG_EXTERNAL_GET_VALUE	net/lwip/include/lwip/snmp_msg.h	209;"	d
SNMP_MSG_EXTERNAL_SET_TEST	net/lwip/include/lwip/snmp_msg.h	210;"	d
SNMP_MSG_EXTERNAL_SET_VALUE	net/lwip/include/lwip/snmp_msg.h	212;"	d
SNMP_MSG_INTERNAL_GET_OBJDEF	net/lwip/include/lwip/snmp_msg.h	200;"	d
SNMP_MSG_INTERNAL_GET_OBJDEF_S	net/lwip/include/lwip/snmp_msg.h	203;"	d
SNMP_MSG_INTERNAL_GET_VALUE	net/lwip/include/lwip/snmp_msg.h	201;"	d
SNMP_MSG_INTERNAL_SET_TEST	net/lwip/include/lwip/snmp_msg.h	202;"	d
SNMP_MSG_INTERNAL_SET_VALUE	net/lwip/include/lwip/snmp_msg.h	204;"	d
SNMP_MSG_SEARCH_OBJ	net/lwip/include/lwip/snmp_msg.h	197;"	d
SNMP_PRIVATE_MIB	net/lwip/include/lwip/opt.h	546;"	d
SNMP_SAFE_REQUESTS	net/lwip/include/lwip/opt.h	555;"	d
SNMP_SYSOBJID	net/lwip/core/snmp/mib2.c	67;"	d	file:
SNMP_SYSOBJID_LEN	net/lwip/core/snmp/mib2.c	66;"	d	file:
SNMP_SYSSERVICES	net/lwip/core/snmp/mib2.c	70;"	d	file:
SNMP_SYSUPTIME_INTERVAL	net/lwip/include/lwip/snmp.h	85;"	d
SNMP_TRAP_DESTINATIONS	net/lwip/include/lwip/opt.h	539;"	d
SNMP_TRAP_PORT	net/lwip/include/lwip/snmp_msg.h	58;"	d
SOCKETS_DEBUG	net/lwip/include/lwip/opt.h	1511;"	d
SOCK_DGRAM	net/lwip/include/lwip/sockets.h	69;"	d
SOCK_RAW	net/lwip/include/lwip/sockets.h	70;"	d
SOCK_STREAM	net/lwip/include/lwip/sockets.h	68;"	d
SOF_ACCEPTCONN	net/lwip/include/ipv4/lwip/ip.h	102;"	d
SOF_BROADCAST	net/lwip/include/ipv4/lwip/ip.h	106;"	d
SOF_DEBUG	net/lwip/include/ipv4/lwip/ip.h	101;"	d
SOF_DONTROUTE	net/lwip/include/ipv4/lwip/ip.h	105;"	d
SOF_KEEPALIVE	net/lwip/include/ipv4/lwip/ip.h	104;"	d
SOF_LINGER	net/lwip/include/ipv4/lwip/ip.h	108;"	d
SOF_OOBINLINE	net/lwip/include/ipv4/lwip/ip.h	109;"	d
SOF_REUSEADDR	net/lwip/include/ipv4/lwip/ip.h	103;"	d
SOF_REUSEPORT	net/lwip/include/ipv4/lwip/ip.h	110;"	d
SOF_USELOOPBACK	net/lwip/include/ipv4/lwip/ip.h	107;"	d
SOL_SOCKET	net/lwip/include/lwip/sockets.h	114;"	d
SO_ACCEPTCONN	net/lwip/include/lwip/sockets.h	76;"	d
SO_BROADCAST	net/lwip/include/lwip/sockets.h	80;"	d
SO_CONTIMEO	net/lwip/include/lwip/sockets.h	99;"	d
SO_DEBUG	net/lwip/include/lwip/sockets.h	75;"	d
SO_DONTLINGER	net/lwip/include/lwip/sockets.h	86;"	d
SO_DONTROUTE	net/lwip/include/lwip/sockets.h	79;"	d
SO_ERROR	net/lwip/include/lwip/sockets.h	97;"	d
SO_KEEPALIVE	net/lwip/include/lwip/sockets.h	78;"	d
SO_LINGER	net/lwip/include/lwip/sockets.h	82;"	d
SO_NO_CHECK	net/lwip/include/lwip/sockets.h	100;"	d
SO_OOBINLINE	net/lwip/include/lwip/sockets.h	83;"	d
SO_RCVBUF	net/lwip/include/lwip/sockets.h	92;"	d
SO_RCVLOWAT	net/lwip/include/lwip/sockets.h	94;"	d
SO_RCVTIMEO	net/lwip/include/lwip/sockets.h	96;"	d
SO_REUSE	net/lwip/include/lwip/opt.h	1122;"	d
SO_REUSEADDR	net/lwip/include/lwip/sockets.h	77;"	d
SO_REUSEPORT	net/lwip/include/lwip/sockets.h	84;"	d
SO_SNDBUF	net/lwip/include/lwip/sockets.h	91;"	d
SO_SNDLOWAT	net/lwip/include/lwip/sockets.h	93;"	d
SO_SNDTIMEO	net/lwip/include/lwip/sockets.h	95;"	d
SO_TYPE	net/lwip/include/lwip/sockets.h	98;"	d
SO_USELOOPBACK	net/lwip/include/lwip/sockets.h	81;"	d
SPECIALS_MASK	net/lwip/netif/ppp/vj.h	93;"	d
SPECIAL_D	net/lwip/netif/ppp/vj.h	92;"	d
SPECIAL_I	net/lwip/netif/ppp/vj.h	91;"	d
SRL	kern/entry.S	/^#define SRL(val, shamt)		(((val) >> (shamt)) & ~(-1 << (32 - (shamt))))$/;"	d
STARTUP	kern/lapic.c	23;"	d	file:
STATS_DEC	net/lwip/include/lwip/stats.h	145;"	d
STATS_DEC	net/lwip/include/lwip/stats.h	149;"	d
STATS_INC	net/lwip/include/lwip/stats.h	144;"	d
STATS_INC	net/lwip/include/lwip/stats.h	148;"	d
STAT_COUNTER	net/lwip/include/lwip/stats.h	51;"	d
STAT_COUNTER	net/lwip/include/lwip/stats.h	54;"	d
STAT_COUNTER_F	net/lwip/include/lwip/stats.h	52;"	d
STAT_COUNTER_F	net/lwip/include/lwip/stats.h	55;"	d
STA_A	inc/mmu.h	241;"	d
STA_C	inc/mmu.h	238;"	d
STA_E	inc/mmu.h	237;"	d
STA_R	inc/mmu.h	240;"	d
STA_W	inc/mmu.h	239;"	d
STA_X	inc/mmu.h	236;"	d
STS_CG64	inc/mmu.h	253;"	d
STS_IG64	inc/mmu.h	254;"	d
STS_LDT	inc/mmu.h	245;"	d
STS_T64A	inc/mmu.h	251;"	d
STS_T64B	inc/mmu.h	252;"	d
STS_TG64	inc/mmu.h	255;"	d
SVR	kern/lapic.c	18;"	d	file:
SWAP_BYTES_IN_WORD	net/lwip/core/ipv4/inet_chksum.c	67;"	d	file:
SYN_RCVD	net/lwip/include/lwip/tcp.h	/^  SYN_RCVD    = 3,$/;"	e	enum:tcp_state
SYN_SENT	net/lwip/include/lwip/tcp.h	/^  SYN_SENT    = 2,$/;"	e	enum:tcp_state
SYS_ARCH_DEC	net/lwip/include/lwip/sys.h	215;"	d
SYS_ARCH_DECL_PROTECT	net/lwip/include/lwip/sys.h	167;"	d
SYS_ARCH_DECL_PROTECT	net/lwip/include/lwip/sys.h	192;"	d
SYS_ARCH_DECL_PROTECT	net/lwip/jos/arch/sys_arch.h	17;"	d
SYS_ARCH_GET	net/lwip/include/lwip/sys.h	224;"	d
SYS_ARCH_INC	net/lwip/include/lwip/sys.h	206;"	d
SYS_ARCH_NOWAIT	net/lwip/jos/arch/sys_arch.h	21;"	d
SYS_ARCH_PROTECT	net/lwip/include/lwip/sys.h	177;"	d
SYS_ARCH_PROTECT	net/lwip/include/lwip/sys.h	193;"	d
SYS_ARCH_PROTECT	net/lwip/jos/arch/sys_arch.h	18;"	d
SYS_ARCH_SET	net/lwip/include/lwip/sys.h	233;"	d
SYS_ARCH_TIMEOUT	net/lwip/include/lwip/sys.h	71;"	d
SYS_ARCH_UNPROTECT	net/lwip/include/lwip/sys.h	186;"	d
SYS_ARCH_UNPROTECT	net/lwip/include/lwip/sys.h	194;"	d
SYS_ARCH_UNPROTECT	net/lwip/jos/arch/sys_arch.h	19;"	d
SYS_DEBUG	net/lwip/include/lwip/opt.h	1574;"	d
SYS_LIGHTWEIGHT_PROT	net/lwip/include/lwip/opt.h	60;"	d
SYS_MBOX_EMPTY	net/lwip/include/lwip/sys.h	76;"	d
SYS_MBOX_NULL	net/lwip/jos/arch/sys_arch.h	10;"	d
SYS_SEM_NULL	net/lwip/jos/arch/sys_arch.h	11;"	d
SYS_STATS	net/lwip/include/lwip/opt.h	1223;"	d
SYS_STATS	net/lwip/include/lwip/opt.h	1237;"	d
SYS_STATS_DEC	net/lwip/include/lwip/stats.h	254;"	d
SYS_STATS_DEC	net/lwip/include/lwip/stats.h	258;"	d
SYS_STATS_DISPLAY	net/lwip/include/lwip/stats.h	255;"	d
SYS_STATS_DISPLAY	net/lwip/include/lwip/stats.h	259;"	d
SYS_STATS_INC	net/lwip/include/lwip/stats.h	253;"	d
SYS_STATS_INC	net/lwip/include/lwip/stats.h	257;"	d
SYS_cgetc	inc/syscall.h	/^	SYS_cgetc,$/;"	e	enum:__anon5
SYS_cputs	inc/syscall.h	/^	SYS_cputs = 0,$/;"	e	enum:__anon5
SYS_env_destroy	inc/syscall.h	/^	SYS_env_destroy,$/;"	e	enum:__anon5
SYS_env_set_pgfault_upcall	inc/syscall.h	/^	SYS_env_set_pgfault_upcall,$/;"	e	enum:__anon5
SYS_env_set_status	inc/syscall.h	/^	SYS_env_set_status,$/;"	e	enum:__anon5
SYS_env_set_trapframe	inc/syscall.h	/^	SYS_env_set_trapframe,$/;"	e	enum:__anon5
SYS_exofork	inc/syscall.h	/^	SYS_exofork,$/;"	e	enum:__anon5
SYS_getenvid	inc/syscall.h	/^	SYS_getenvid,$/;"	e	enum:__anon5
SYS_ipc_recv	inc/syscall.h	/^	SYS_ipc_recv,$/;"	e	enum:__anon5
SYS_ipc_try_send	inc/syscall.h	/^	SYS_ipc_try_send,$/;"	e	enum:__anon5
SYS_net_try_receive	inc/syscall.h	/^	SYS_net_try_receive,$/;"	e	enum:__anon5
SYS_net_try_send	inc/syscall.h	/^	SYS_net_try_send,$/;"	e	enum:__anon5
SYS_page_alloc	inc/syscall.h	/^	SYS_page_alloc,$/;"	e	enum:__anon5
SYS_page_map	inc/syscall.h	/^	SYS_page_map,$/;"	e	enum:__anon5
SYS_page_unmap	inc/syscall.h	/^	SYS_page_unmap,$/;"	e	enum:__anon5
SYS_time_msec	inc/syscall.h	/^	SYS_time_msec,$/;"	e	enum:__anon5
SYS_yield	inc/syscall.h	/^	SYS_yield,$/;"	e	enum:__anon5
Secthdr	inc/elf.h	/^struct Secthdr {$/;"	s
Segdesc	inc/mmu.h	/^struct Segdesc {$/;"	s
Stab	inc/stab.h	/^struct Stab {$/;"	s
Stat	inc/fd.h	/^struct Stat {$/;"	s
StdText	net/lwip/netif/ppp/chpms.c	/^static u_char *StdText = (u_char *)"KGS!@#$%"; \/* key from rasapi32.dll *\/$/;"	v	file:
Super	inc/fs.h	/^struct Super {$/;"	s
SystemSegdesc64	inc/mmu.h	/^struct SystemSegdesc64{$/;"	s
TAR	GNUmakefile	/^TAR	:= gtar$/;"	m
TCCR	kern/lapic.c	42;"	d	file:
TCPH_FLAGS	net/lwip/include/lwip/tcp.h	230;"	d
TCPH_FLAGS_SET	net/lwip/include/lwip/tcp.h	234;"	d
TCPH_HDRLEN	net/lwip/include/lwip/tcp.h	229;"	d
TCPH_HDRLEN_SET	net/lwip/include/lwip/tcp.h	233;"	d
TCPH_OFFSET	net/lwip/include/lwip/tcp.h	228;"	d
TCPH_OFFSET_SET	net/lwip/include/lwip/tcp.h	232;"	d
TCPH_SET_FLAG	net/lwip/include/lwip/tcp.h	235;"	d
TCPH_UNSET_FLAG	net/lwip/include/lwip/tcp.h	236;"	d
TCPIP_APIMSG	net/lwip/include/lwip/tcpip.h	54;"	d
TCPIP_APIMSG	net/lwip/include/lwip/tcpip.h	61;"	d
TCPIP_APIMSG_ACK	net/lwip/include/lwip/tcpip.h	55;"	d
TCPIP_APIMSG_ACK	net/lwip/include/lwip/tcpip.h	62;"	d
TCPIP_DEBUG	net/lwip/include/lwip/opt.h	1652;"	d
TCPIP_MBOX_SIZE	net/lwip/include/lwip/opt.h	932;"	d
TCPIP_MSG_API	net/lwip/include/lwip/tcpip.h	/^  TCPIP_MSG_API,$/;"	e	enum:tcpip_msg_type
TCPIP_MSG_CALLBACK	net/lwip/include/lwip/tcpip.h	/^  TCPIP_MSG_CALLBACK,$/;"	e	enum:tcpip_msg_type
TCPIP_MSG_INPKT	net/lwip/include/lwip/tcpip.h	/^  TCPIP_MSG_INPKT,$/;"	e	enum:tcpip_msg_type
TCPIP_MSG_NETIFAPI	net/lwip/include/lwip/tcpip.h	/^  TCPIP_MSG_NETIFAPI,$/;"	e	enum:tcpip_msg_type
TCPIP_MSG_TIMEOUT	net/lwip/include/lwip/tcpip.h	/^  TCPIP_MSG_TIMEOUT$/;"	e	enum:tcpip_msg_type
TCPIP_NETIFAPI	net/lwip/include/lwip/tcpip.h	56;"	d
TCPIP_NETIFAPI	net/lwip/include/lwip/tcpip.h	63;"	d
TCPIP_NETIFAPI_ACK	net/lwip/include/lwip/tcpip.h	57;"	d
TCPIP_NETIFAPI_ACK	net/lwip/include/lwip/tcpip.h	64;"	d
TCPIP_THREAD_NAME	net/lwip/include/lwip/opt.h	905;"	d
TCPIP_THREAD_PRIO	net/lwip/include/lwip/opt.h	923;"	d
TCPIP_THREAD_STACKSIZE	net/lwip/include/lwip/opt.h	914;"	d
TCP_ACK	net/lwip/include/lwip/tcp.h	160;"	d
TCP_BUILD_MSS_OPTION	net/lwip/include/lwip/tcp.h	142;"	d
TCP_CALCULATE_EFF_SEND_MSS	net/lwip/include/lwip/opt.h	709;"	d
TCP_CWND_DEBUG	net/lwip/include/lwip/opt.h	1610;"	d
TCP_CWR	net/lwip/include/lwip/tcp.h	163;"	d
TCP_DEBUG	net/lwip/include/lwip/opt.h	1581;"	d
TCP_DEFAULT_LISTEN_BACKLOG	net/lwip/include/lwip/opt.h	750;"	d
TCP_ECE	net/lwip/include/lwip/tcp.h	162;"	d
TCP_EVENT_ACCEPT	net/lwip/include/lwip/tcp.h	456;"	d
TCP_EVENT_ACCEPT	net/lwip/include/lwip/tcp.h	469;"	d
TCP_EVENT_CONNECTED	net/lwip/include/lwip/tcp.h	462;"	d
TCP_EVENT_CONNECTED	net/lwip/include/lwip/tcp.h	480;"	d
TCP_EVENT_ERR	net/lwip/include/lwip/tcp.h	466;"	d
TCP_EVENT_ERR	net/lwip/include/lwip/tcp.h	486;"	d
TCP_EVENT_POLL	net/lwip/include/lwip/tcp.h	464;"	d
TCP_EVENT_POLL	net/lwip/include/lwip/tcp.h	483;"	d
TCP_EVENT_RECV	net/lwip/include/lwip/tcp.h	460;"	d
TCP_EVENT_RECV	net/lwip/include/lwip/tcp.h	475;"	d
TCP_EVENT_SENT	net/lwip/include/lwip/tcp.h	458;"	d
TCP_EVENT_SENT	net/lwip/include/lwip/tcp.h	472;"	d
TCP_FAST_INTERVAL	net/lwip/include/lwip/tcp.h	175;"	d
TCP_FIN	net/lwip/include/lwip/tcp.h	156;"	d
TCP_FIN_WAIT_TIMEOUT	net/lwip/include/lwip/tcp.h	182;"	d
TCP_FLAGS	net/lwip/include/lwip/tcp.h	165;"	d
TCP_FR_DEBUG	net/lwip/include/lwip/opt.h	1595;"	d
TCP_HLEN	net/lwip/include/lwip/tcp.h	168;"	d
TCP_INPUT_DEBUG	net/lwip/include/lwip/opt.h	1588;"	d
TCP_KEEPALIVE	net/lwip/include/lwip/sockets.h	149;"	d
TCP_KEEPCNT	net/lwip/include/lwip/sockets.h	152;"	d
TCP_KEEPCNT_DEFAULT	net/lwip/include/lwip/tcp.h	201;"	d
TCP_KEEPIDLE	net/lwip/include/lwip/sockets.h	150;"	d
TCP_KEEPIDLE_DEFAULT	net/lwip/include/lwip/tcp.h	193;"	d
TCP_KEEPINTVL	net/lwip/include/lwip/sockets.h	151;"	d
TCP_KEEPINTVL_DEFAULT	net/lwip/include/lwip/tcp.h	197;"	d
TCP_LISTEN_BACKLOG	net/lwip/include/lwip/opt.h	741;"	d
TCP_LOCAL_PORT_RANGE_END	net/lwip/core/tcp.c	445;"	d	file:
TCP_LOCAL_PORT_RANGE_END	obj/net/ns.asm	/^#define TCP_LOCAL_PORT_RANGE_END   0x7fff$/;"	d
TCP_LOCAL_PORT_RANGE_START	net/lwip/core/tcp.c	444;"	d	file:
TCP_MAXIDLE	net/lwip/include/lwip/tcp.h	204;"	d
TCP_MAXRTX	net/lwip/include/lwip/opt.h	671;"	d
TCP_MSL	net/lwip/include/lwip/tcp.h	188;"	d
TCP_MSS	net/lwip/include/lwip/opt.h	697;"	d
TCP_MSS	net/lwip/jos/lwipopts.h	40;"	d
TCP_NODELAY	net/lwip/include/lwip/sockets.h	148;"	d
TCP_OOSEQ_TIMEOUT	net/lwip/include/lwip/tcp.h	185;"	d
TCP_OUTPUT_DEBUG	net/lwip/include/lwip/opt.h	1624;"	d
TCP_PCB_COMMON	net/lwip/include/lwip/tcp.h	264;"	d
TCP_PRIO_MAX	net/lwip/include/lwip/tcp.h	113;"	d
TCP_PRIO_MIN	net/lwip/include/lwip/tcp.h	111;"	d
TCP_PRIO_NORMAL	net/lwip/include/lwip/tcp.h	112;"	d
TCP_PSH	net/lwip/include/lwip/tcp.h	159;"	d
TCP_PUSH_BIT	net/lwip/netif/ppp/vj.h	95;"	d
TCP_QLEN_DEBUG	net/lwip/include/lwip/opt.h	1638;"	d
TCP_QUEUE_OOSEQ	net/lwip/include/lwip/opt.h	686;"	d
TCP_REG	net/lwip/include/lwip/tcp.h	617;"	d
TCP_RMV	net/lwip/include/lwip/tcp.h	622;"	d
TCP_RST	net/lwip/include/lwip/tcp.h	158;"	d
TCP_RST_DEBUG	net/lwip/include/lwip/opt.h	1631;"	d
TCP_RTO_DEBUG	net/lwip/include/lwip/opt.h	1603;"	d
TCP_SEQ_BETWEEN	net/lwip/include/lwip/tcp.h	155;"	d
TCP_SEQ_GEQ	net/lwip/include/lwip/tcp.h	150;"	d
TCP_SEQ_GT	net/lwip/include/lwip/tcp.h	149;"	d
TCP_SEQ_LEQ	net/lwip/include/lwip/tcp.h	148;"	d
TCP_SEQ_LT	net/lwip/include/lwip/tcp.h	147;"	d
TCP_SLOW_INTERVAL	net/lwip/include/lwip/tcp.h	179;"	d
TCP_SNDLOWAT	net/lwip/include/lwip/opt.h	734;"	d
TCP_SNDQUEUELEN_OVERFLOW	net/lwip/include/lwip/tcp.h	333;"	d
TCP_SND_BUF	net/lwip/include/lwip/opt.h	717;"	d
TCP_SND_BUF	net/lwip/jos/lwipopts.h	42;"	d
TCP_SND_QUEUELEN	net/lwip/include/lwip/opt.h	725;"	d
TCP_SND_QUEUELEN	net/lwip/jos/lwipopts.h	45;"	d
TCP_STATS	net/lwip/include/lwip/opt.h	1202;"	d
TCP_STATS	net/lwip/include/lwip/opt.h	1234;"	d
TCP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	154;"	d
TCP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	157;"	d
TCP_STATS_INC	net/lwip/include/lwip/stats.h	153;"	d
TCP_STATS_INC	net/lwip/include/lwip/stats.h	156;"	d
TCP_SYN	net/lwip/include/lwip/tcp.h	157;"	d
TCP_SYNMAXRTX	net/lwip/include/lwip/opt.h	678;"	d
TCP_SYN_RCVD_TIMEOUT	net/lwip/include/lwip/tcp.h	183;"	d
TCP_TCPLEN	net/lwip/include/lwip/tcp.h	238;"	d
TCP_TMR_INTERVAL	net/lwip/include/lwip/tcp.h	171;"	d
TCP_TTL	net/lwip/include/lwip/opt.h	657;"	d
TCP_URG	net/lwip/include/lwip/tcp.h	161;"	d
TCP_WND	net/lwip/include/lwip/opt.h	664;"	d
TCP_WND	net/lwip/jos/lwipopts.h	41;"	d
TCP_WND_DEBUG	net/lwip/include/lwip/opt.h	1617;"	d
TCP_WRITE_FLAG_COPY	net/lwip/include/lwip/tcp.h	103;"	d
TCP_WRITE_FLAG_MORE	net/lwip/include/lwip/tcp.h	104;"	d
TDCR	kern/lapic.c	43;"	d	file:
TERMACK	net/lwip/netif/ppp/fsm.h	74;"	d
TERMREQ	net/lwip/netif/ppp/fsm.h	73;"	d
TESTOUTPUT_COUNT	net/testoutput.c	4;"	d	file:
TESTS	gradelib.py	/^TESTS = []$/;"	v
TF_ACK_DELAY	net/lwip/include/lwip/tcp.h	283;"	d
TF_ACK_NOW	net/lwip/include/lwip/tcp.h	284;"	d
TF_CLOSED	net/lwip/include/lwip/tcp.h	258;"	d
TF_FIN	net/lwip/include/lwip/tcp.h	286;"	d
TF_GOT_FIN	net/lwip/include/lwip/tcp.h	259;"	d
TF_INFR	net/lwip/include/lwip/tcp.h	285;"	d
TF_NAGLEMEMERR	net/lwip/include/lwip/tcp.h	288;"	d
TF_NODELAY	net/lwip/include/lwip/tcp.h	287;"	d
TF_RESET	net/lwip/include/lwip/tcp.h	257;"	d
THREAD_NUM_ONHALT	net/lwip/jos/arch/threadq.h	7;"	d
TICR	kern/lapic.c	41;"	d	file:
TIMEOUT	net/lwip/netif/ppp/ppp.h	96;"	d
TIMER	kern/lapic.c	33;"	d	file:
TIMER_INTERVAL	net/ns.h	8;"	d
TIME_WAIT	net/lwip/include/lwip/tcp.h	/^  TIME_WAIT   = 10$/;"	e	enum:tcp_state
TOP	GNUmakefile	/^TOP = .$/;"	m
TPR	kern/lapic.c	16;"	d	file:
TRACELCP	net/lwip/netif/ppp/pppdebug.h	62;"	d
TRAPHANDLER	kern/trapentry.S	/^#define TRAPHANDLER(name, num)						\\$/;"	d
TRAPHANDLER_NOEC	kern/trapentry.S	/^#define TRAPHANDLER_NOEC(name, num)					\\$/;"	d
TRY_AGAIN	net/lwip/include/lwip/netdb.h	59;"	d
TX_PKT_SIZE	kern/e1000.h	19;"	d
TYPE_COMPRESSED_TCP	net/lwip/netif/ppp/vj.h	79;"	d
TYPE_ERROR	net/lwip/netif/ppp/vj.h	80;"	d
TYPE_IP	net/lwip/netif/ppp/vj.h	77;"	d
TYPE_UNCOMPRESSED_TCP	net/lwip/netif/ppp/vj.h	78;"	d
T_ALIGN	inc/trap.h	23;"	d
T_BOUND	inc/trap.h	11;"	d
T_BRKPT	inc/trap.h	9;"	d
T_DBLFLT	inc/trap.h	14;"	d
T_DEBUG	inc/trap.h	7;"	d
T_DEFAULT	inc/trap.h	30;"	d
T_DEVICE	inc/trap.h	13;"	d
T_DIVIDE	inc/trap.h	6;"	d
T_FPERR	inc/trap.h	22;"	d
T_GPFLT	inc/trap.h	19;"	d
T_ILLOP	inc/trap.h	12;"	d
T_MCHK	inc/trap.h	24;"	d
T_NMI	inc/trap.h	8;"	d
T_OFLOW	inc/trap.h	10;"	d
T_PGFLT	inc/trap.h	20;"	d
T_SEGNP	inc/trap.h	17;"	d
T_SIMDERR	inc/trap.h	25;"	d
T_STACK	inc/trap.h	18;"	d
T_SYSCALL	inc/trap.h	29;"	d
T_TSS	inc/trap.h	16;"	d
Taskstate	inc/mmu.h	/^struct Taskstate {$/;"	s
TerminateTest	gradelib.py	/^class TerminateTest(Exception):$/;"	c
Transform	net/lwip/netif/ppp/md5.c	/^Transform (u32_t *buf, u32_t *in)$/;"	f	file:
Trapframe	inc/trap.h	/^struct Trapframe {$/;"	s
U16_F	net/lwip/jos/arch/cc.h	27;"	d
U32_F	net/lwip/jos/arch/cc.h	31;"	d
UDPLITE_RECV_CSCOV	net/lwip/include/lwip/sockets.h	160;"	d
UDPLITE_SEND_CSCOV	net/lwip/include/lwip/sockets.h	159;"	d
UDP_DEBUG	net/lwip/include/lwip/opt.h	1645;"	d
UDP_FLAGS_CONNECTED	net/lwip/include/lwip/udp.h	68;"	d
UDP_FLAGS_NOCHKSUM	net/lwip/include/lwip/udp.h	66;"	d
UDP_FLAGS_UDPLITE	net/lwip/include/lwip/udp.h	67;"	d
UDP_HLEN	net/lwip/include/lwip/udp.h	48;"	d
UDP_LOCAL_PORT_RANGE_END	net/lwip/core/udp.c	608;"	d	file:
UDP_LOCAL_PORT_RANGE_END	obj/net/ns.asm	/^#define UDP_LOCAL_PORT_RANGE_END   0x7fff$/;"	d
UDP_LOCAL_PORT_RANGE_START	net/lwip/core/udp.c	607;"	d	file:
UDP_LOCAL_PORT_RANGE_START	obj/net/ns.asm	/^#define UDP_LOCAL_PORT_RANGE_START 4096$/;"	d
UDP_STATS	net/lwip/include/lwip/opt.h	1194;"	d
UDP_STATS	net/lwip/include/lwip/opt.h	1233;"	d
UDP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	162;"	d
UDP_STATS_DISPLAY	net/lwip/include/lwip/stats.h	165;"	d
UDP_STATS_INC	net/lwip/include/lwip/stats.h	161;"	d
UDP_STATS_INC	net/lwip/include/lwip/stats.h	164;"	d
UDP_TTL	net/lwip/include/lwip/opt.h	638;"	d
UENVS	inc/memlayout.h	117;"	d
UL	net/lwip/netif/ppp/md5.c	103;"	d	file:
UL	net/lwip/netif/ppp/md5.c	106;"	d	file:
UL	net/lwip/netif/ppp/md5.c	108;"	d	file:
ULDFLAGS	GNUmakefile	/^ULDFLAGS := -T user\/user.ld$/;"	m
ULIM	inc/memlayout.h	104;"	d
UNLOCK_TCPIP_CORE	net/lwip/include/lwip/tcpip.h	53;"	d
UNLOCK_TCPIP_CORE	net/lwip/include/lwip/tcpip.h	60;"	d
UNTIMEOUT	net/lwip/netif/ppp/ppp.h	97;"	d
UPAGES	inc/memlayout.h	115;"	d
UPAPCS_AUTHREQ	net/lwip/netif/ppp/pap.h	79;"	d
UPAPCS_BADAUTH	net/lwip/netif/ppp/pap.h	81;"	d
UPAPCS_CLOSED	net/lwip/netif/ppp/pap.h	77;"	d
UPAPCS_INITIAL	net/lwip/netif/ppp/pap.h	76;"	d
UPAPCS_OPEN	net/lwip/netif/ppp/pap.h	80;"	d
UPAPCS_PENDING	net/lwip/netif/ppp/pap.h	78;"	d
UPAPDEBUG	net/lwip/netif/ppp/pppdebug.h	68;"	d
UPAPDEBUG	net/lwip/netif/ppp/pppdebug.h	78;"	d
UPAPSS_BADAUTH	net/lwip/netif/ppp/pap.h	91;"	d
UPAPSS_CLOSED	net/lwip/netif/ppp/pap.h	87;"	d
UPAPSS_INITIAL	net/lwip/netif/ppp/pap.h	86;"	d
UPAPSS_LISTEN	net/lwip/netif/ppp/pap.h	89;"	d
UPAPSS_OPEN	net/lwip/netif/ppp/pap.h	90;"	d
UPAPSS_PENDING	net/lwip/netif/ppp/pap.h	88;"	d
UPAP_AUTHACK	net/lwip/netif/ppp/pap.h	70;"	d
UPAP_AUTHNAK	net/lwip/netif/ppp/pap.h	71;"	d
UPAP_AUTHREQ	net/lwip/netif/ppp/pap.h	69;"	d
UPAP_DEFREQTIME	net/lwip/include/lwip/opt.h	1350;"	d
UPAP_DEFTIMEOUT	net/lwip/include/lwip/opt.h	1346;"	d
UPAP_HEADERLEN	net/lwip/netif/ppp/pap.h	63;"	d
USED	inc/lib.h	26;"	d
USER_CFLAGS	GNUmakefile	/^USER_CFLAGS := $(CFLAGS) -DJOS_USER -gstabs -mcmodel=large -m64$/;"	m
USE_CRYPT	net/lwip/netif/ppp/chpms.c	67;"	d	file:
USTABDATA	inc/memlayout.h	141;"	d
USTACKTOP	inc/memlayout.h	129;"	d
UTEMP	inc/memlayout.h	136;"	d
UTEMP2	lib/spawn.c	5;"	d	file:
UTEMP2USTACK	lib/spawn.c	4;"	d	file:
UTEMP3	lib/spawn.c	6;"	d	file:
UTEXT	inc/memlayout.h	132;"	d
UTOP	inc/memlayout.h	124;"	d
UTrapframe	inc/trap.h	/^struct UTrapframe {$/;"	s
UVPT	inc/memlayout.h	113;"	d
UXSTACKTOP	inc/memlayout.h	126;"	d
UseNT	net/lwip/netif/ppp/chpms.c	/^    u_char UseNT; \/* If 1, ignore the LANMan response field *\/$/;"	m	struct:__anon16	file:
UserStabData	kern/kdebug.c	/^struct UserStabData {$/;"	s	file:
V	conf/env.mk	/^V = @$/;"	m
VER	kern/lapic.c	15;"	d	file:
VERSION	user/httpd.c	6;"	d	file:
VJBSDHDR_H	net/lwip/netif/ppp/vjbsdhdr.h	2;"	d
VJF_TOSS	net/lwip/netif/ppp/vj.h	147;"	d
VJ_H	net/lwip/netif/ppp/vj.h	26;"	d
VJ_SUPPORT	net/lwip/include/lwip/opt.h	1316;"	d
VPD	inc/mmu.h	35;"	d
VPDPE	inc/mmu.h	36;"	d
VPML4E	inc/mmu.h	37;"	d
VPN	inc/mmu.h	31;"	d
WHITESPACE	kern/monitor.c	106;"	d	file:
WHITESPACE	obj/kern/kernel.asm	/^#define WHITESPACE "\\t\\r\\n "$/;"	d
X1	kern/lapic.c	34;"	d	file:
X16_F	net/lwip/jos/arch/cc.h	28;"	d
X32_F	net/lwip/jos/arch/cc.h	32;"	d
_ALIGN_TEXT	net/lwip/jos/arch/longjmp.S	/^#define _ALIGN_TEXT .align 16, 0x90$/;"	d
_CONSOLE_H_	kern/console.h	4;"	d
_DEV_PCI_PCIREG_H_	kern/pcireg.h	35;"	d
_GDBPORT	gradelib.py	/^    _GDBPORT = None$/;"	v	class:QEMU
_IO	net/lwip/include/lwip/sockets.h	243;"	d
_IOR	net/lwip/include/lwip/sockets.h	245;"	d
_IOW	net/lwip/include/lwip/sockets.h	247;"	d
_SYS_QUEUE_H_	net/lwip/netif/ppp/ppp_oe.c	88;"	d	file:
__LWIP_API_H__	net/lwip/include/lwip/api.h	33;"	d
__LWIP_API_MSG_H__	net/lwip/include/lwip/api_msg.h	33;"	d
__LWIP_ARCH_H__	net/lwip/include/lwip/arch.h	33;"	d
__LWIP_AUTOIP_H__	net/lwip/include/ipv4/lwip/autoip.h	45;"	d
__LWIP_DEBUG_H__	net/lwip/include/lwip/debug.h	33;"	d
__LWIP_DEF_H__	net/lwip/include/lwip/def.h	33;"	d
__LWIP_DHCP_H__	net/lwip/include/lwip/dhcp.h	5;"	d
__LWIP_DNS_H__	net/lwip/include/lwip/dns.h	35;"	d
__LWIP_ERR_H__	net/lwip/include/lwip/err.h	33;"	d
__LWIP_ICMP_H__	net/lwip/include/ipv4/lwip/icmp.h	33;"	d
__LWIP_ICMP_H__	net/lwip/include/ipv6/lwip/icmp.h	33;"	d
__LWIP_IGMP_H__	net/lwip/include/ipv4/lwip/igmp.h	36;"	d
__LWIP_INET_CHKSUM_H__	net/lwip/include/ipv4/lwip/inet_chksum.h	33;"	d
__LWIP_INET_H__	net/lwip/include/ipv4/lwip/inet.h	33;"	d
__LWIP_INET_H__	net/lwip/include/ipv6/lwip/inet.h	33;"	d
__LWIP_INIT_H__	net/lwip/include/lwip/init.h	33;"	d
__LWIP_IP_ADDR_H__	net/lwip/include/ipv4/lwip/ip_addr.h	33;"	d
__LWIP_IP_ADDR_H__	net/lwip/include/ipv6/lwip/ip_addr.h	33;"	d
__LWIP_IP_FRAG_H__	net/lwip/include/ipv4/lwip/ip_frag.h	34;"	d
__LWIP_IP_H__	net/lwip/include/ipv4/lwip/ip.h	33;"	d
__LWIP_IP_H__	net/lwip/include/ipv6/lwip/ip.h	33;"	d
__LWIP_MEMP_H__	net/lwip/include/lwip/memp.h	34;"	d
__LWIP_MEM_H__	net/lwip/include/lwip/mem.h	33;"	d
__LWIP_NETBUF_H__	net/lwip/include/lwip/netbuf.h	33;"	d
__LWIP_NETIFAPI_H__	net/lwip/include/lwip/netifapi.h	29;"	d
__LWIP_NETIF_H__	net/lwip/include/lwip/netif.h	33;"	d
__LWIP_OPT_H__	net/lwip/include/lwip/opt.h	39;"	d
__LWIP_PBUF_H__	net/lwip/include/lwip/pbuf.h	34;"	d
__LWIP_RAW_H__	net/lwip/include/lwip/raw.h	33;"	d
__LWIP_SNMP_ASN1_H__	net/lwip/include/lwip/snmp_asn1.h	36;"	d
__LWIP_SNMP_H__	net/lwip/include/lwip/snmp.h	34;"	d
__LWIP_SNMP_MSG_H__	net/lwip/include/lwip/snmp_msg.h	36;"	d
__LWIP_SNMP_STRUCTS_H__	net/lwip/include/lwip/snmp_structs.h	38;"	d
__LWIP_SOCKETS_H__	net/lwip/include/lwip/sockets.h	35;"	d
__LWIP_STATS_H__	net/lwip/include/lwip/stats.h	33;"	d
__LWIP_SYS_H__	net/lwip/include/lwip/sys.h	33;"	d
__LWIP_TCPIP_H__	net/lwip/include/lwip/tcpip.h	33;"	d
__LWIP_TCP_H__	net/lwip/include/lwip/tcp.h	33;"	d
__LWIP_UDP_H__	net/lwip/include/lwip/udp.h	33;"	d
__NETIF_ETHARP_H__	net/lwip/include/netif/etharp.h	36;"	d
__NETIF_LOOPIF_H__	net/lwip/include/netif/loopif.h	33;"	d
__NETIF_SLIPIF_H__	net/lwip/include/netif/slipif.h	35;"	d
__SIO_H__	net/lwip/include/lwip/sio.h	36;"	d
__all__	gradelib.py	/^__all__ = []$/;"	v
__init__	gradelib.py	/^    def __init__(self, *default_monitors):$/;"	m	class:Runner
__init__	gradelib.py	/^    def __init__(self, *make_args):$/;"	m	class:QEMU
__init__	gradelib.py	/^    def __init__(self, port, timeout=15):$/;"	m	class:GDBClient
__monitor_start	gradelib.py	/^    def __monitor_start(self, output):$/;"	m	class:Runner	file:
__react	gradelib.py	/^    def __react(self, reactors, timeout):$/;"	m	class:Runner	file:
__send	gradelib.py	/^    def __send(self, cmd):$/;"	m	class:GDBClient	file:
__send_break	gradelib.py	/^    def __send_break(self):$/;"	m	class:GDBClient	file:
__spin_initlock	kern/spinlock.c	/^__spin_initlock(struct spinlock *lk, char *name)$/;"	f
_alltraps	kern/trapentry.S	/^_alltraps:$/;"	l
_head64	boot1/head64.S	/^_head64 :$/;"	l
_head64	obj/boot1/boot.asm	/^_head64 :$/;"	l
_inet_ntoa	net/lwip/netif/ppp/ipcp.c	/^_inet_ntoa(u32_t n)$/;"	f
_pad	inc/fs.h	/^	char _pad[PGSIZE];$/;"	m	union:Fsipc
_pad	inc/ns.h	/^	char _pad[PGSIZE];$/;"	m	union:Nsipc
_panic	init.s	/^_panic:$/;"	l
_panic	kern/init.c	/^_panic(const char *file, int line, const char *fmt,...)$/;"	f
_panic	lib/panic.c	/^_panic(const char *file, int line, const char *fmt, ...)$/;"	f
_pgfault_handler	lib/pgfault.c	/^void (*_pgfault_handler)(struct UTrapframe *utf);$/;"	v
_pgfault_handler	obj/fs/fs.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/net/ns.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/net/testinput.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/net/testoutput.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/forktree.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/pingpong.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_handler	obj/user/primes.asm	/^	_pgfault_handler = handler;$/;"	d
_pgfault_upcall	lib/pfentry.S	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/fs/fs.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/net/ns.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/net/testinput.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/net/testoutput.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/forktree.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/pingpong.asm	/^_pgfault_upcall:$/;"	l
_pgfault_upcall	obj/user/primes.asm	/^_pgfault_upcall:$/;"	l
_start	kern/entry.S	/^_start = RELOC(entry)$/;"	d
_start	lib/entry.S	/^_start:$/;"	l
_start	obj/fs/fs.asm	/^_start:$/;"	l
_start	obj/kern/kernel.asm	/^_start = RELOC(entry)$/;"	d
_start	obj/net/ns.asm	/^_start:$/;"	l
_start	obj/net/testinput.asm	/^_start:$/;"	l
_start	obj/net/testoutput.asm	/^_start:$/;"	l
_start	obj/user/echosrv.asm	/^_start:$/;"	l
_start	obj/user/echotest.asm	/^_start:$/;"	l
_start	obj/user/forktree.asm	/^_start:$/;"	l
_start	obj/user/hello.asm	/^_start:$/;"	l
_start	obj/user/httpd.asm	/^_start:$/;"	l
_start	obj/user/icode.asm	/^_start:$/;"	l
_start	obj/user/idle.asm	/^_start:$/;"	l
_start	obj/user/init.asm	/^_start:$/;"	l
_start	obj/user/pingpong.asm	/^_start:$/;"	l
_start	obj/user/primes.asm	/^_start:$/;"	l
_start	obj/user/testfile.asm	/^_start:$/;"	l
_start	obj/user/testtime.asm	/^_start:$/;"	l
_start	obj/user/writemotd.asm	/^_start:$/;"	l
_warn	init.s	/^_warn:$/;"	l
_warn	kern/init.c	/^_warn(const char *file, int line, const char *fmt,...)$/;"	f
aaddrlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t aaddrlen;$/;"	m	struct:snmp_trap_header_lengths
aaddrlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t aaddrlenlen;$/;"	m	struct:snmp_trap_header_lengths
acc	obj/net/ns.asm	/^      acc = SWAP_BYTES_IN_WORD(acc);$/;"	d
acc	obj/net/ns.asm	/^    acc = (acc >> 16) + (acc & 0x0000ffffUL);$/;"	d
acc	obj/net/ns.asm	/^    acc = FOLD_U32T(acc);$/;"	d
acc	obj/net/ns.asm	/^    acc = SWAP_BYTES_IN_WORD(acc);$/;"	d
acc	obj/net/ns.asm	/^  acc = (acc >> 16) + (acc & 0x0000ffffUL);$/;"	d
acc	obj/net/ns.asm	/^  acc = 0;$/;"	d
acc	obj/net/ns.asm	/^  acc = FOLD_U32T(acc);$/;"	d
accept	inc/ns.h	/^	} accept;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_accept
accept	lib/sockets.c	/^accept(int s, struct sockaddr *addr, socklen_t *addrlen)$/;"	f
accept	net/lwip/include/lwip/sockets.h	326;"	d
accept	net/lwip/include/lwip/tcp.h	/^  err_t (* accept)(void *arg, struct tcp_pcb *newpcb, err_t err);$/;"	m	struct:tcp_pcb
accept	net/lwip/include/lwip/tcp.h	/^  err_t (* accept)(void *arg, struct tcp_pcb *newpcb, err_t err);$/;"	m	struct:tcp_pcb_listen
acceptRet	inc/ns.h	/^	} acceptRet;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsret_accept
accept_function	net/lwip/api/api_msg.c	/^accept_function(void *arg, struct tcp_pcb *newpcb, err_t err)$/;"	f	file:
accept_local	net/lwip/netif/ppp/ipcp.h	/^  u_int   accept_local  : 1; \/* accept peer's value for ouraddr *\/$/;"	m	struct:ipcp_options
accept_remote	net/lwip/netif/ppp/ipcp.h	/^  u_int   accept_remote : 1; \/* accept peer's value for hisaddr *\/$/;"	m	struct:ipcp_options
acceptable	obj/net/ns.asm	/^        acceptable = 1;$/;"	d
accepted_inseq	obj/net/ns.asm	/^        accepted_inseq = 1; $/;"	d
accepted_inseq	obj/net/ns.asm	/^        accepted_inseq = tcp_receive(pcb);$/;"	d
accepted_inseq	obj/net/ns.asm	/^    accepted_inseq = tcp_receive(pcb);$/;"	d
acceptmbox	net/lwip/include/lwip/api.h	/^  sys_mbox_t acceptmbox;$/;"	m	struct:netconn
accepts_pending	net/lwip/include/lwip/tcp.h	/^  u8_t accepts_pending;$/;"	m	struct:tcp_pcb_listen
access	net/lwip/include/lwip/snmp_structs.h	/^  u8_t access;$/;"	m	struct:obj_def
accomp	net/lwip/netif/ppp/ppp.c	/^  int  accomp;                  \/* Does peer accept addr\/ctl compression? *\/$/;"	m	struct:PPPControl_s	file:
ackci	net/lwip/netif/ppp/fsm.h	/^  int  (*ackci)(fsm*, u_char*, int);                \/* ACK our Configuration Information *\/$/;"	m	struct:fsm_callbacks
acked	net/lwip/include/lwip/tcp.h	/^  u16_t acked;$/;"	m	struct:tcp_pcb
ackno	net/lwip/core/tcp_in.c	/^static u32_t seqno, ackno;$/;"	v	file:
ackno	obj/net/ns.asm	/^    ackno = pcb->rcv_nxt;$/;"	d
ackno	obj/net/ns.asm	/^  ackno = tcphdr->ackno = ntohl(tcphdr->ackno);$/;"	d
ad	net/lwip/include/lwip/api_msg.h	/^    } ad;$/;"	m	union:api_msg_msg::__anon25	typeref:struct:api_msg_msg::__anon25::__anon28
add	net/lwip/include/lwip/netifapi.h	/^    } add;$/;"	m	union:netifapi_msg_msg::__anon20	typeref:struct:netifapi_msg_msg::__anon20::__anon21
addci	net/lwip/netif/ppp/fsm.h	/^  void (*addci)(fsm*, u_char*, int*);               \/* Add our Configuration Information *\/$/;"	m	struct:fsm_callbacks
addr	kern/e1000.h	/^        uint64_t addr;$/;"	m	struct:rcv_desc
addr	kern/e1000.h	/^        uint64_t addr;$/;"	m	struct:tx_desc
addr	net/lwip/api/netdb.c	/^  struct ip_addr addr;$/;"	m	struct:gethostbyname_r_helper	typeref:struct:gethostbyname_r_helper::ip_addr	file:
addr	net/lwip/include/lwip/api_msg.h	/^  struct ip_addr *addr;$/;"	m	struct:dns_api_msg	typeref:struct:dns_api_msg::ip_addr
addr	net/lwip/include/lwip/netbuf.h	/^  struct ip_addr *addr;$/;"	m	struct:netbuf	typeref:struct:netbuf::ip_addr
addr	obj/fs/fs.asm	/^		addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/fs/fs.asm	/^	addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr	obj/fs/fs.asm	/^	addr = diskaddr(blockno);$/;"	d
addr	obj/net/ns.asm	/^      addr = (struct ip_addr*)&(sin.sin_addr.s_addr);$/;"	d
addr	obj/net/ns.asm	/^      addr = netbuf_fromaddr(buf);$/;"	d
addr2test	obj/net/ns.asm	/^  addr2test = addr->addr;$/;"	d
addr_6845	kern/console.c	/^static unsigned addr_6845;$/;"	v	file:
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = CGA_BASE;$/;"	d
addr_6845	obj/kern/kernel.asm	/^		addr_6845 = MONO_BASE;$/;"	d
addr_hint	net/lwip/include/lwip/netif.h	/^  u8_t *addr_hint;$/;"	m	struct:netif
addr_inf	net/lwip/include/lwip/snmp_structs.h	/^  void* addr_inf;$/;"	m	struct:mib_external_node
addresses	net/lwip/netif/ppp/auth.c	/^static struct wordlist *addresses[NUM_PPP];$/;"	v	typeref:struct:wordlist	file:
addrinfo	net/lwip/include/lwip/netdb.h	/^struct addrinfo {$/;"	s
addrs	net/lwip/api/netdb.c	/^  struct ip_addr *addrs;$/;"	m	struct:gethostbyname_r_helper	typeref:struct:gethostbyname_r_helper::ip_addr	file:
addrs	net/lwip/netif/ppp/ppp.c	/^  struct ppp_addrs addrs;$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::ppp_addrs	file:
after	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
again	obj/net/ns.asm	/^ again:$/;"	l
age_pending	obj/net/ns.asm	/^          age_pending = arp_table[i].ctime;$/;"	d
age_queue	obj/net/ns.asm	/^          age_queue = arp_table[i].ctime;$/;"	d
age_stable	obj/net/ns.asm	/^        age_stable = arp_table[i].ctime;$/;"	d
ai_addr	net/lwip/include/lwip/netdb.h	/^    struct sockaddr  *ai_addr;       \/* Socket address of socket. *\/$/;"	m	struct:addrinfo	typeref:struct:addrinfo::sockaddr
ai_addrlen	net/lwip/include/lwip/netdb.h	/^    socklen_t         ai_addrlen;    \/* Length of socket address. *\/$/;"	m	struct:addrinfo
ai_canonname	net/lwip/include/lwip/netdb.h	/^    char             *ai_canonname;  \/* Canonical name of service location. *\/$/;"	m	struct:addrinfo
ai_family	net/lwip/include/lwip/netdb.h	/^    int               ai_family;     \/* Address family of socket. *\/$/;"	m	struct:addrinfo
ai_flags	net/lwip/include/lwip/netdb.h	/^    int               ai_flags;      \/* Input flags. *\/$/;"	m	struct:addrinfo
ai_next	net/lwip/include/lwip/netdb.h	/^    struct addrinfo  *ai_next;       \/* Pointer to next in list. *\/$/;"	m	struct:addrinfo	typeref:struct:addrinfo::addrinfo
ai_protocol	net/lwip/include/lwip/netdb.h	/^    int               ai_protocol;   \/* Protocol of socket. *\/$/;"	m	struct:addrinfo
ai_socktype	net/lwip/include/lwip/netdb.h	/^    int               ai_socktype;   \/* Socket type. *\/$/;"	m	struct:addrinfo
aliases	net/lwip/api/netdb.c	/^  char *aliases;$/;"	m	struct:gethostbyname_r_helper	file:
alloc	fs/fsformat.c	/^alloc(uint32_t bytes)$/;"	f
alloc_block	fs/fs.c	/^alloc_block(void)$/;"	f
alloc_socket	net/lwip/api/sockets.c	/^alloc_socket(struct netconn *newconn)$/;"	f	file:
alloc_sockfd	lib/sockets.c	/^alloc_sockfd(int sockid)$/;"	f	file:
alloc_tid	net/lwip/jos/arch/thread.c	/^alloc_tid(void) {$/;"	f	file:
allrouters	net/lwip/core/ipv4/igmp.c	/^static struct ip_addr     allrouters;$/;"	v	typeref:struct:ip_addr	file:
allsystems	net/lwip/core/ipv4/igmp.c	/^static struct ip_addr     allsystems;$/;"	v	typeref:struct:ip_addr	file:
altflag	obj/fs/fs.asm	/^			altflag = 1;$/;"	d
altflag	obj/fs/fs.asm	/^		altflag = 0;$/;"	d
altflag	obj/kern/kernel.asm	/^			altflag = 1;$/;"	d
altflag	obj/kern/kernel.asm	/^		altflag = 0;$/;"	d
altflag	obj/net/ns.asm	/^			altflag = 1;$/;"	d
altflag	obj/net/ns.asm	/^		altflag = 0;$/;"	d
altflag	obj/net/testinput.asm	/^			altflag = 1;$/;"	d
altflag	obj/net/testinput.asm	/^		altflag = 0;$/;"	d
altflag	obj/net/testoutput.asm	/^			altflag = 1;$/;"	d
altflag	obj/net/testoutput.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/echosrv.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/echosrv.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/echotest.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/echotest.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/forktree.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/forktree.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/hello.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/hello.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/httpd.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/httpd.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/icode.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/icode.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/idle.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/idle.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/init.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/init.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/pingpong.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/pingpong.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/primes.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/primes.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testfile.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testfile.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/testtime.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/testtime.asm	/^		altflag = 0;$/;"	d
altflag	obj/user/writemotd.asm	/^			altflag = 1;$/;"	d
altflag	obj/user/writemotd.asm	/^		altflag = 0;$/;"	d
announce	net/testinput.c	/^announce(void)$/;"	f	file:
any_matches	obj/kern/kernel.asm	/^		any_matches = 1;$/;"	d
ap	obj/net/ns.asm	/^  ap = (u8_t *)&s_addr;$/;"	d
ap	obj/net/testinput.asm	/^  ap = (u8_t *)&s_addr;$/;"	d
ap	obj/user/echosrv.asm	/^  ap = (u8_t *)&s_addr;$/;"	d
ap	obj/user/echotest.asm	/^  ap = (u8_t *)&s_addr;$/;"	d
ap	obj/user/httpd.asm	/^  ap = (u8_t *)&s_addr;$/;"	d
api_msg	net/lwip/include/lwip/api_msg.h	/^struct api_msg {$/;"	s
api_msg_msg	net/lwip/include/lwip/api_msg.h	/^struct api_msg_msg {$/;"	s
apicid	kern/mpconfig.c	/^	uint8_t apicid;                 \/\/ local APIC id$/;"	m	struct:mpproc	file:
apiflags	net/lwip/include/lwip/api_msg.h	/^      u8_t apiflags;$/;"	m	struct:api_msg_msg::__anon25::__anon29
apimsg	net/lwip/include/lwip/tcpip.h	/^    struct api_msg *apimsg;$/;"	m	union:tcpip_msg::__anon33	typeref:struct:tcpip_msg::__anon33::api_msg
arg	net/lwip/core/dns.c	/^  void *arg;$/;"	m	struct:dns_table_entry	file:
arg	net/lwip/include/lwip/sys.h	/^  void *arg;$/;"	m	struct:sys_timeo
arg	net/lwip/include/lwip/tcpip.h	/^      void *arg;$/;"	m	struct:tcpip_msg::__anon33::__anon36
arg	net/lwip/jos/arch/sys_arch.c	/^    void *arg;$/;"	m	struct:lwip_thread	file:
arg	obj/net/ns.asm	/^      arg = tmptimeout->arg;$/;"	d
arg	obj/net/ns.asm	/^  arg = arg;$/;"	d
argc	inc/args.h	/^	int *argc;$/;"	m	struct:Argstate
argc	obj/kern/kernel.asm	/^	argc = 0;$/;"	d
argnext	lib/args.c	/^argnext(struct Argstate *args)$/;"	f
argnextvalue	lib/args.c	/^argnextvalue(struct Argstate *args)$/;"	f
args_exist	lib/entry.S	/^args_exist:$/;"	l
args_exist	obj/fs/fs.asm	/^args_exist:$/;"	l
args_exist	obj/net/ns.asm	/^args_exist:$/;"	l
args_exist	obj/net/testinput.asm	/^args_exist:$/;"	l
args_exist	obj/net/testoutput.asm	/^args_exist:$/;"	l
args_exist	obj/user/echosrv.asm	/^args_exist:$/;"	l
args_exist	obj/user/echotest.asm	/^args_exist:$/;"	l
args_exist	obj/user/forktree.asm	/^args_exist:$/;"	l
args_exist	obj/user/hello.asm	/^args_exist:$/;"	l
args_exist	obj/user/httpd.asm	/^args_exist:$/;"	l
args_exist	obj/user/icode.asm	/^args_exist:$/;"	l
args_exist	obj/user/idle.asm	/^args_exist:$/;"	l
args_exist	obj/user/init.asm	/^args_exist:$/;"	l
args_exist	obj/user/pingpong.asm	/^args_exist:$/;"	l
args_exist	obj/user/primes.asm	/^args_exist:$/;"	l
args_exist	obj/user/testfile.asm	/^args_exist:$/;"	l
args_exist	obj/user/testtime.asm	/^args_exist:$/;"	l
args_exist	obj/user/writemotd.asm	/^args_exist:$/;"	l
argstart	lib/args.c	/^argstart(int *argc, char **argv, struct Argstate *args)$/;"	f
argv	inc/args.h	/^	const char **argv;$/;"	m	struct:Argstate
argv_store	obj/user/icode.asm	/^	argv_store = (uintptr_t*) (ROUNDDOWN(string_store, 8) - 8 * (argc + 1));$/;"	d
argvalue	inc/args.h	/^	const char *argvalue;$/;"	m	struct:Argstate
argvalue	lib/args.c	/^argvalue(struct Argstate *args)$/;"	f
arp_table	net/lwip/netif/etharp.c	/^static struct etharp_entry arp_table[ARP_TABLE_SIZE];$/;"	v	typeref:struct:etharp_entry	file:
arp_timer	net/lwip/api/tcpip.c	/^arp_timer(void *arg)$/;"	f	file:
arptree_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode arptree_root = {$/;"	v	typeref:struct:mib_list_rootnode
asm	obj/kern/kernel.asm	/^asm volatile("movw %%ax,%%ds" :: "a" (GD_KD));$/;"	l
asm	obj/kern/kernel.asm	/^asm volatile("movw %%ax,%%es" :: "a" (GD_KD));$/;"	l
asm	obj/kern/kernel.asm	/^asm volatile("movw %%ax,%%fs" :: "a" (GD_UD|3));$/;"	l
asm	obj/kern/kernel.asm	/^asm volatile("movw %%ax,%%gs" :: "a" (GD_UD|3));$/;"	l
asm	obj/kern/kernel.asm	/^asm volatile("movw %%ax,%%ss" :: "a" (GD_KD));$/;"	l
asm	obj/kern/kernel.asm	/^asm volatile("pushq %%rbx \\n \\t movabs $1f,%%rax \\n \\t pushq %%rax \\n\\t lretq \\n 1:\\n" :: "b" (GD_KT):"cc","memory");$/;"	l
asn_type	net/lwip/include/lwip/snmp_structs.h	/^  u8_t asn_type;$/;"	m	struct:obj_def
assert	inc/assert.h	14;"	d
assert_equal	gradelib.py	/^def assert_equal(got, expect, msg=""):$/;"	f
assert_lines_match	gradelib.py	/^def assert_lines_match(text, *regexps, **kw):$/;"	f
assert_lines_match_kw	gradelib.py	/^    def assert_lines_match_kw(no=[]):$/;"	f	function:assert_lines_match
asyncmap	net/lwip/netif/ppp/lcp.h	/^    u32_t asyncmap;              \/* Value of async map *\/$/;"	m	struct:lcp_options
at	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node at = {$/;"	v	typeref:struct:mib_ram_array_node
at_id	net/lwip/core/snmp/mib2.c	/^s32_t at_id = 1;$/;"	v
atentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node atentry = {$/;"	v	typeref:struct:mib_array_node
atentry_get_object_def	net/lwip/core/snmp/mib2.c	/^atentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
atentry_get_value	net/lwip/core/snmp/mib2.c	/^atentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
atentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t atentry_ids[3] = { 1, 2, 3 };$/;"	v
atentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const atentry_nodes[3] = {$/;"	v
attable	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node attable = {$/;"	v	typeref:struct:mib_array_node
attable_id	net/lwip/core/snmp/mib2.c	/^const s32_t attable_id = 1;$/;"	v
attable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* const attable_node = (struct mib_node* const)&atentry;$/;"	v
attachfn	kern/pci.c	/^	int (*attachfn) (struct pci_func *pcif);$/;"	m	struct:pci_driver	file:
auth_ip_addr	net/lwip/netif/ppp/auth.c	/^auth_ip_addr(int unit, u32_t addr)$/;"	f
auth_peer_fail	net/lwip/netif/ppp/auth.c	/^auth_peer_fail(int unit, u16_t protocol)$/;"	f
auth_peer_success	net/lwip/netif/ppp/auth.c	/^auth_peer_success(int unit, u16_t protocol, char *name, int namelen)$/;"	f
auth_pending	net/lwip/netif/ppp/auth.c	/^static int auth_pending[NUM_PPP];$/;"	v	file:
auth_required	net/lwip/netif/ppp/ppp.h	/^  u_int  auth_required     : 1;       \/* Peer is required to authenticate *\/$/;"	m	struct:ppp_settings
auth_reset	net/lwip/netif/ppp/auth.c	/^auth_reset(int unit)$/;"	f
auth_withpeer_fail	net/lwip/netif/ppp/auth.c	/^auth_withpeer_fail(int unit, u16_t protocol)$/;"	f
auth_withpeer_success	net/lwip/netif/ppp/auth.c	/^auth_withpeer_success(int unit, u16_t protocol)$/;"	f
autoip	net/lwip/include/ipv4/lwip/autoip.h	/^struct autoip$/;"	s
autoip	net/lwip/include/lwip/netif.h	/^  struct autoip *autoip;$/;"	m	struct:netif	typeref:struct:netif::autoip
autoip_arp_announce	net/lwip/core/ipv4/autoip.c	/^autoip_arp_announce(struct netif *netif)$/;"	f	file:
autoip_arp_reply	net/lwip/core/ipv4/autoip.c	/^autoip_arp_reply(struct netif *netif, struct etharp_hdr *hdr)$/;"	f
autoip_bind	net/lwip/core/ipv4/autoip.c	/^autoip_bind(struct netif *netif)$/;"	f	file:
autoip_coop_state	net/lwip/include/lwip/dhcp.h	/^  u8_t autoip_coop_state;$/;"	m	struct:dhcp
autoip_create_rand_addr	net/lwip/core/ipv4/autoip.c	/^autoip_create_rand_addr(struct netif *netif, struct ip_addr *RandomIPAddr)$/;"	f	file:
autoip_handle_arp_conflict	net/lwip/core/ipv4/autoip.c	/^autoip_handle_arp_conflict(struct netif *netif)$/;"	f	file:
autoip_init	net/lwip/core/ipv4/autoip.c	/^autoip_init(void)$/;"	f
autoip_start	net/lwip/core/ipv4/autoip.c	/^autoip_start(struct netif *netif)$/;"	f
autoip_stop	net/lwip/core/ipv4/autoip.c	/^autoip_stop(struct netif *netif)$/;"	f
autoip_timer	net/lwip/api/tcpip.c	/^autoip_timer(void *arg)$/;"	f	file:
autoip_tmr	net/lwip/core/ipv4/autoip.c	/^autoip_tmr()$/;"	f
avChurnRand	net/lwip/netif/ppp/randm.c	/^avChurnRand(char *randData, u32_t randLen)$/;"	f
avGenRand	net/lwip/netif/ppp/randm.c	/^avGenRand(char *buf, u32_t bufLen)$/;"	f
avRandom	net/lwip/netif/ppp/randm.c	/^avRandom()$/;"	f
avRandomInit	net/lwip/netif/ppp/randm.c	/^avRandomInit()$/;"	f
avRandomSeed	net/lwip/netif/ppp/randm.c	/^static u32_t avRandomSeed = 0;      \/* Seed used for random number generation. *\/$/;"	v	file:
avRandomize	net/lwip/netif/ppp/randm.c	/^avRandomize(void)$/;"	f
avRandomize	net/lwip/netif/ppp/randm.h	60;"	d
avRandomized	net/lwip/netif/ppp/randm.c	/^static int  avRandomized = 0;       \/* Set when truely randomized. *\/$/;"	v	file:
avail	net/lwip/include/lwip/stats.h	/^  mem_size_t avail;$/;"	m	struct:stats_mem
available	obj/net/ns.asm	/^  available = tcp_sndbuf(conn->pcb.tcp);$/;"	d
b	net/lwip/include/lwip/api_msg.h	/^    struct netbuf *b;$/;"	m	union:api_msg_msg::__anon25	typeref:struct:api_msg_msg::__anon25::netbuf
backlog	net/lwip/include/lwip/api_msg.h	/^      u8_t backlog;$/;"	m	struct:api_msg_msg::__anon25::__anon32
backlog	net/lwip/include/lwip/tcp.h	/^  u8_t backlog;$/;"	m	struct:tcp_pcb_listen
backlog	obj/net/ns.asm	/^    backlog = 0;$/;"	d
backlog	obj/net/ns.asm	/^    backlog = 0xff;$/;"	d
bad_ip_adrs	net/lwip/netif/ppp/auth.c	/^bad_ip_adrs(u32_t addr)$/;"	f
bar_width	obj/kern/kernel.asm	/^				bar_width = 8;$/;"	d
bar_width	obj/kern/kernel.asm	/^		bar_width = 4;$/;"	d
base	obj/fs/fs.asm	/^			base = 10;$/;"	d
base	obj/fs/fs.asm	/^			base = 16;$/;"	d
base	obj/fs/fs.asm	/^		base = 10;$/;"	d
base	obj/fs/fs.asm	/^                        base = 8;$/;"	d
base	obj/kern/kernel.asm	/^			base = 10;$/;"	d
base	obj/kern/kernel.asm	/^			base = 16;$/;"	d
base	obj/kern/kernel.asm	/^			base = PCI_MAPREG_IO_ADDR(oldv);$/;"	d
base	obj/kern/kernel.asm	/^			base = PCI_MAPREG_MEM_ADDR(oldv);$/;"	d
base	obj/kern/kernel.asm	/^		base = 10;$/;"	d
base	obj/kern/kernel.asm	/^	base = base + size;$/;"	d
base	obj/kern/kernel.asm	/^                        base = 8;$/;"	d
base	obj/net/ns.asm	/^			base = 10;$/;"	d
base	obj/net/ns.asm	/^			base = 16;$/;"	d
base	obj/net/ns.asm	/^		base = 10;$/;"	d
base	obj/net/ns.asm	/^                        base = 8;$/;"	d
base	obj/net/ns.asm	/^        base = 16;$/;"	d
base	obj/net/ns.asm	/^        base = 8;$/;"	d
base	obj/net/ns.asm	/^    base = 10;$/;"	d
base	obj/net/testinput.asm	/^			base = 10;$/;"	d
base	obj/net/testinput.asm	/^			base = 16;$/;"	d
base	obj/net/testinput.asm	/^		base = 10;$/;"	d
base	obj/net/testinput.asm	/^                        base = 8;$/;"	d
base	obj/net/testinput.asm	/^        base = 16;$/;"	d
base	obj/net/testinput.asm	/^        base = 8;$/;"	d
base	obj/net/testinput.asm	/^    base = 10;$/;"	d
base	obj/net/testoutput.asm	/^			base = 10;$/;"	d
base	obj/net/testoutput.asm	/^			base = 16;$/;"	d
base	obj/net/testoutput.asm	/^		base = 10;$/;"	d
base	obj/net/testoutput.asm	/^                        base = 8;$/;"	d
base	obj/user/echosrv.asm	/^			base = 10;$/;"	d
base	obj/user/echosrv.asm	/^			base = 16;$/;"	d
base	obj/user/echosrv.asm	/^		base = 10;$/;"	d
base	obj/user/echosrv.asm	/^                        base = 8;$/;"	d
base	obj/user/echosrv.asm	/^        base = 16;$/;"	d
base	obj/user/echosrv.asm	/^        base = 8;$/;"	d
base	obj/user/echosrv.asm	/^    base = 10;$/;"	d
base	obj/user/echotest.asm	/^			base = 10;$/;"	d
base	obj/user/echotest.asm	/^			base = 16;$/;"	d
base	obj/user/echotest.asm	/^		base = 10;$/;"	d
base	obj/user/echotest.asm	/^                        base = 8;$/;"	d
base	obj/user/echotest.asm	/^        base = 16;$/;"	d
base	obj/user/echotest.asm	/^        base = 8;$/;"	d
base	obj/user/echotest.asm	/^    base = 10;$/;"	d
base	obj/user/forktree.asm	/^			base = 10;$/;"	d
base	obj/user/forktree.asm	/^			base = 16;$/;"	d
base	obj/user/forktree.asm	/^		base = 10;$/;"	d
base	obj/user/forktree.asm	/^                        base = 8;$/;"	d
base	obj/user/hello.asm	/^			base = 10;$/;"	d
base	obj/user/hello.asm	/^			base = 16;$/;"	d
base	obj/user/hello.asm	/^		base = 10;$/;"	d
base	obj/user/hello.asm	/^                        base = 8;$/;"	d
base	obj/user/httpd.asm	/^			base = 10;$/;"	d
base	obj/user/httpd.asm	/^			base = 16;$/;"	d
base	obj/user/httpd.asm	/^		base = 10;$/;"	d
base	obj/user/httpd.asm	/^                        base = 8;$/;"	d
base	obj/user/httpd.asm	/^        base = 16;$/;"	d
base	obj/user/httpd.asm	/^        base = 8;$/;"	d
base	obj/user/httpd.asm	/^    base = 10;$/;"	d
base	obj/user/icode.asm	/^			base = 10;$/;"	d
base	obj/user/icode.asm	/^			base = 16;$/;"	d
base	obj/user/icode.asm	/^		base = 10;$/;"	d
base	obj/user/icode.asm	/^                        base = 8;$/;"	d
base	obj/user/idle.asm	/^			base = 10;$/;"	d
base	obj/user/idle.asm	/^			base = 16;$/;"	d
base	obj/user/idle.asm	/^		base = 10;$/;"	d
base	obj/user/idle.asm	/^                        base = 8;$/;"	d
base	obj/user/init.asm	/^			base = 10;$/;"	d
base	obj/user/init.asm	/^			base = 16;$/;"	d
base	obj/user/init.asm	/^		base = 10;$/;"	d
base	obj/user/init.asm	/^                        base = 8;$/;"	d
base	obj/user/pingpong.asm	/^			base = 10;$/;"	d
base	obj/user/pingpong.asm	/^			base = 16;$/;"	d
base	obj/user/pingpong.asm	/^		base = 10;$/;"	d
base	obj/user/pingpong.asm	/^                        base = 8;$/;"	d
base	obj/user/primes.asm	/^			base = 10;$/;"	d
base	obj/user/primes.asm	/^			base = 16;$/;"	d
base	obj/user/primes.asm	/^		base = 10;$/;"	d
base	obj/user/primes.asm	/^                        base = 8;$/;"	d
base	obj/user/testfile.asm	/^			base = 10;$/;"	d
base	obj/user/testfile.asm	/^			base = 16;$/;"	d
base	obj/user/testfile.asm	/^		base = 10;$/;"	d
base	obj/user/testfile.asm	/^                        base = 8;$/;"	d
base	obj/user/testtime.asm	/^			base = 10;$/;"	d
base	obj/user/testtime.asm	/^			base = 16;$/;"	d
base	obj/user/testtime.asm	/^		base = 10;$/;"	d
base	obj/user/testtime.asm	/^                        base = 8;$/;"	d
base	obj/user/writemotd.asm	/^			base = 10;$/;"	d
base	obj/user/writemotd.asm	/^			base = 16;$/;"	d
base	obj/user/writemotd.asm	/^		base = 10;$/;"	d
base	obj/user/writemotd.asm	/^                        base = 8;$/;"	d
bc	net/lwip/include/lwip/api_msg.h	/^    } bc;$/;"	m	union:api_msg_msg::__anon25	typeref:struct:api_msg_msg::__anon25::__anon27
bc_init	fs/bc.c	/^bc_init(void)$/;"	f
bc_pgfault	fs/bc.c	/^bc_pgfault(struct UTrapframe *utf)$/;"	f	file:
bda	obj/kern/kernel.asm	/^	bda = (uint8_t *) KADDR(0x40 << 4);$/;"	d
before	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:regs	file:
bigarray	user/testbss.c	/^uint32_t bigarray[ARRAYSIZE];$/;"	v
binaryname	lib/libmain.c	/^const char *binaryname = "<unknown>";$/;"	v
binaryname	obj/fs/fs.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/fs/fs.asm	/^	binaryname = "fs";$/;"	d
binaryname	obj/net/ns.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/net/ns.asm	/^	binaryname = "ns";$/;"	d
binaryname	obj/net/ns.asm	/^	binaryname = "ns_input";$/;"	d
binaryname	obj/net/ns.asm	/^	binaryname = "ns_output";$/;"	d
binaryname	obj/net/ns.asm	/^	binaryname = "ns_timer";$/;"	d
binaryname	obj/net/testinput.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/net/testinput.asm	/^	binaryname = "ns_input";$/;"	d
binaryname	obj/net/testinput.asm	/^	binaryname = "ns_output";$/;"	d
binaryname	obj/net/testinput.asm	/^	binaryname = "ns_timer";$/;"	d
binaryname	obj/net/testinput.asm	/^	binaryname = "testinput";$/;"	d
binaryname	obj/net/testoutput.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/net/testoutput.asm	/^	binaryname = "ns_input";$/;"	d
binaryname	obj/net/testoutput.asm	/^	binaryname = "ns_output";$/;"	d
binaryname	obj/net/testoutput.asm	/^	binaryname = "ns_timer";$/;"	d
binaryname	obj/net/testoutput.asm	/^	binaryname = "testoutput";$/;"	d
binaryname	obj/user/echosrv.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/echotest.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/forktree.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/hello.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/httpd.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/httpd.asm	/^	binaryname = "jhttpd";$/;"	d
binaryname	obj/user/icode.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/icode.asm	/^	binaryname = "icode";$/;"	d
binaryname	obj/user/idle.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/idle.asm	/^	binaryname = "idle";$/;"	d
binaryname	obj/user/init.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/pingpong.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/primes.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testfile.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/testtime.asm	/^		binaryname = argv[0];$/;"	d
binaryname	obj/user/writemotd.asm	/^		binaryname = argv[0];$/;"	d
bind	inc/ns.h	/^	} bind;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_bind
bind	lib/sockets.c	/^bind(int s, struct sockaddr *name, socklen_t namelen)$/;"	f
bind	net/lwip/include/lwip/sockets.h	327;"	d
bitmap	fs/fs.h	/^uint32_t *bitmap;		\/\/ bitmap blocks mapped in memory$/;"	v
bitmap	fs/fsformat.c	/^uint32_t *bitmap;$/;"	v
bitmap	obj/fs/fs.asm	/^	bitmap = diskaddr(2);$/;"	d
bits	obj/fs/fs.asm	/^	bits = (uint32_t*) PGSIZE;$/;"	d
block_is_free	fs/fs.c	/^block_is_free(uint32_t blockno)$/;"	f
block_is_mapped	fs/fs.c	/^block_is_mapped(uint32_t blockno)$/;"	f
blockof	fs/fsformat.c	/^blockof(void *pos)$/;"	f
bn	obj/fs/fs.asm	/^		bn = MIN(BLKSIZE - pos % BLKSIZE, offset + count - pos);$/;"	d
bool	fs/fsformat.c	/^typedef int bool;$/;"	t	file:
bool	fs/fsformat.c	21;"	d	file:
bool	fs/fsformat.c	7;"	d	file:
bool	inc/types.h	/^typedef _Bool bool;$/;"	t
bool	obj/fs/fs.asm	/^bool$/;"	l
boot_alloc	kern/pmap.c	/^boot_alloc(uint32_t n)$/;"	f	file:
boot_alloc	kern/pmap.c.BACKUP.24152.c	/^boot_alloc(uint32_t n)$/;"	f	file:
boot_alloc	kern/pmap.c.BASE.24152.c	/^boot_alloc(uint32_t n)$/;"	f	file:
boot_alloc	kern/pmap.c.LOCAL.24152.c	/^boot_alloc(uint32_t n)$/;"	f	file:
boot_alloc	kern/pmap.c.REMOTE.24152.c	/^boot_alloc(uint32_t n)$/;"	f	file:
boot_alloc	kern/pmap1.c	/^boot_alloc(uint32_t n)$/;"	f	file:
boot_aps	kern/init.c	/^boot_aps(void)$/;"	f	file:
boot_cr3	kern/pmap.c	/^physaddr_t boot_cr3;		\/\/ Physical address of boot time page directory$/;"	v
boot_cr3	kern/pmap.c.BACKUP.24152.c	/^physaddr_t boot_cr3;		\/\/ Physical address of boot time page directory$/;"	v
boot_cr3	kern/pmap.c.BASE.24152.c	/^physaddr_t boot_cr3;		\/\/ Physical address of boot time page directory$/;"	v
boot_cr3	kern/pmap.c.LOCAL.24152.c	/^physaddr_t boot_cr3;		\/\/ Physical address of boot time page directory$/;"	v
boot_cr3	kern/pmap.c.REMOTE.24152.c	/^physaddr_t boot_cr3;		\/\/ Physical address of boot time page directory$/;"	v
boot_cr3	kern/pmap1.c	/^physaddr_t boot_cr3;		\/\/ Physical address of boot time page directory$/;"	v
boot_cr3	obj/kern/kernel.asm	/^	boot_cr3 = PADDR(pml4e);$/;"	d
boot_map_segment	kern/pmap.c	/^boot_map_segment(pml4e_t *pml4e, uintptr_t la, size_t size, physaddr_t pa, int perm)$/;"	f
boot_map_segment	kern/pmap.c.BACKUP.24152.c	/^boot_map_segment(pml4e_t *pml4e, uintptr_t la, size_t size, physaddr_t pa, int perm)$/;"	f	file:
boot_map_segment	kern/pmap.c.BASE.24152.c	/^boot_map_segment(pml4e_t *pml4e, uintptr_t la, size_t size, physaddr_t pa, int perm)$/;"	f	file:
boot_map_segment	kern/pmap.c.LOCAL.24152.c	/^boot_map_segment(pml4e_t *pml4e, uintptr_t la, size_t size, physaddr_t pa, int perm)$/;"	f	file:
boot_map_segment	kern/pmap.c.REMOTE.24152.c	/^boot_map_segment(pml4e_t *pml4e, uintptr_t la, size_t size, physaddr_t pa, int perm)$/;"	f	file:
boot_map_segment	kern/pmap1.c	/^boot_map_segment(pml4e_t *pml4e, uintptr_t la, size_t size, physaddr_t pa, int perm)$/;"	f	file:
boot_pml4e	kern/pmap.c	/^pml4e_t *boot_pml4e;		\/\/ Kernel's initial page directory$/;"	v
boot_pml4e	kern/pmap.c.BACKUP.24152.c	/^pml4e_t *boot_pml4e;		\/\/ Kernel's initial page directory$/;"	v
boot_pml4e	kern/pmap.c.BASE.24152.c	/^pml4e_t *boot_pml4e;		\/\/ Kernel's initial page directory$/;"	v
boot_pml4e	kern/pmap.c.LOCAL.24152.c	/^pml4e_t *boot_pml4e;		\/\/ Kernel's initial page directory$/;"	v
boot_pml4e	kern/pmap.c.REMOTE.24152.c	/^pml4e_t *boot_pml4e;		\/\/ Kernel's initial page directory$/;"	v
boot_pml4e	kern/pmap1.c	/^pml4e_t *boot_pml4e;		\/\/ Kernel's initial page directory$/;"	v
boot_pml4e	obj/kern/kernel.asm	/^	boot_pml4e = pml4e;$/;"	d
bootcpu	kern/mpconfig.c	/^struct Cpu *bootcpu;$/;"	v	typeref:struct:Cpu
bootcpu	obj/kern/kernel.asm	/^				bootcpu = &cpus[ncpu];$/;"	d
bootcpu	obj/kern/kernel.asm	/^	bootcpu = &cpus[0];$/;"	d
bootmain	boot/main.c	/^bootmain(void)$/;"	f
bootmain	boot1/main.c	/^bootmain(void)$/;"	f
bootstack	kern/entry.S	/^bootstack:$/;"	l
bootstacktop	kern/entry.S	/^bootstacktop:$/;"	l
breakpoint	gradelib.py	/^    def breakpoint(self, addr):$/;"	m	class:GDBClient
breakpoint	inc/x86.h	/^breakpoint(void)$/;"	f
breakpoint_handler	kern/trap.c	/^breakpoint_handler(struct Trapframe* tf){$/;"	f
bss	user/init.c	/^char bss[6000];$/;"	v
buf	kern/console.c	/^	uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon9	file:
buf	kern/e1000.h	/^        uint8_t buf[RCV_PKT_SIZE];$/;"	m	struct:rcv_pkt
buf	kern/e1000.h	/^        uint8_t buf[TX_PKT_SIZE];$/;"	m	struct:tx_pkt
buf	lib/fprintf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:
buf	lib/printf.c	/^	char buf[256];$/;"	m	struct:printbuf	file:
buf	lib/printfmt.c	/^	char *buf;$/;"	m	struct:sprintbuf	file:
buf	lib/readline.c	/^static char buf[BUFLEN];$/;"	v	file:
buf	net/lwip/core/ipv4/ip_frag.c	/^static u8_t buf[LWIP_MEM_ALIGN_SIZE(IP_FRAG_MAX_MTU)];$/;"	v	file:
buf	net/lwip/netif/ppp/md5.h	/^  u32_t buf[4];             \/* scratch buffer *\/$/;"	m	struct:__anon13
buf	obj/kern/kernel.asm	/^		buf = readline("K> ");$/;"	d
buf	obj/net/ns.asm	/^      buf = NULL;$/;"	d
buf	obj/net/ns.asm	/^      buf = memp_malloc(MEMP_NETBUF);$/;"	d
buf	obj/net/ns.asm	/^      buf = sock->lastdata;$/;"	d
buf	obj/net/ns.asm	/^    buf = memp_malloc(MEMP_NETBUF);$/;"	d
buf	obj/net/ns.asm	/^  buf = memp_malloc(MEMP_NETBUF);$/;"	d
buf_copy_len	obj/net/ns.asm	/^          buf_copy_len = len;$/;"	d
buf_copy_len	obj/net/ns.asm	/^      buf_copy_len = p->len - offset;$/;"	d
buflen	obj/net/ns.asm	/^      buflen = netbuf_len(sock->lastdata);$/;"	d
buflen	obj/net/ns.asm	/^    buflen = netbuf_len(buf);$/;"	d
bus	kern/pci.h	/^    struct pci_bus *bus;	\/\/ Primary bus for bridges$/;"	m	struct:pci_func	typeref:struct:pci_func::pci_bus
buse	net/serv.c	/^static bool buse[QUEUE_SIZE];$/;"	v	file:
busno	kern/pci.h	/^    uint32_t busno;$/;"	m	struct:pci_bus
bytes	obj/net/ns.asm	/^	    bytes = len - copied;$/;"	d
c	obj/fs/fs.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/kern/kernel.asm	/^		c = cons.buf[cons.rpos++];$/;"	d
c	obj/kern/kernel.asm	/^		c = getchar();$/;"	d
c	obj/kern/kernel.asm	/^	c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
c	obj/kern/kernel.asm	/^	c = page2kva(pp);$/;"	d
c	obj/net/ns.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/net/ns.asm	/^	c = ROUNDDOWN(v, PGSIZE);$/;"	d
c	obj/net/ns.asm	/^        c = *++cp;$/;"	d
c	obj/net/ns.asm	/^      c = *++cp;$/;"	d
c	obj/net/ns.asm	/^  c = *cp;$/;"	d
c	obj/net/testinput.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/net/testinput.asm	/^        c = *++cp;$/;"	d
c	obj/net/testinput.asm	/^      c = *++cp;$/;"	d
c	obj/net/testinput.asm	/^  c = *cp;$/;"	d
c	obj/net/testoutput.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/echosrv.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/echosrv.asm	/^        c = *++cp;$/;"	d
c	obj/user/echosrv.asm	/^      c = *++cp;$/;"	d
c	obj/user/echosrv.asm	/^  c = *cp;$/;"	d
c	obj/user/echotest.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/echotest.asm	/^        c = *++cp;$/;"	d
c	obj/user/echotest.asm	/^      c = *++cp;$/;"	d
c	obj/user/echotest.asm	/^  c = *cp;$/;"	d
c	obj/user/forktree.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/hello.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/httpd.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/httpd.asm	/^	c = ROUNDDOWN(v, PGSIZE);$/;"	d
c	obj/user/httpd.asm	/^        c = *++cp;$/;"	d
c	obj/user/httpd.asm	/^      c = *++cp;$/;"	d
c	obj/user/httpd.asm	/^  c = *cp;$/;"	d
c	obj/user/icode.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/idle.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/init.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/pingpong.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/primes.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testfile.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/testtime.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
c	obj/user/writemotd.asm	/^		c = (c<<24)|(c<<16)|(c<<8)|c;$/;"	d
cachehit	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER cachehit;$/;"	m	struct:stats_proto
call	kern/trapentry.S	/^call trap$/;"	l
call	obj/kern/kernel.asm	/^call trap$/;"	l
call_on_line	gradelib.py	/^def call_on_line(regexp, callback):$/;"	f
callback	net/lwip/include/lwip/api.h	/^  netconn_callback callback;$/;"	m	struct:netconn
callbacks	net/lwip/netif/ppp/fsm.h	/^  struct fsm_callbacks* callbacks; \/* Callback routines *\/$/;"	m	struct:fsm	typeref:struct:fsm::fsm_callbacks
cb	net/lwip/include/lwip/tcpip.h	/^    } cb;$/;"	m	union:tcpip_msg::__anon33	typeref:struct:tcpip_msg::__anon33::__anon35
cflag	net/lwip/netif/ppp/ipcp.h	/^  u_char  cflag;             \/* VJ slot compression flag. *\/$/;"	m	struct:ipcp_options
cga_init	kern/console.c	/^cga_init(void)$/;"	f	file:
cga_putc	kern/console.c	/^cga_putc(int c)$/;"	f	file:
ch	obj/fs/fs.asm	/^				ch = *fmt;$/;"	d
ch	obj/kern/kernel.asm	/^				ch = *fmt;$/;"	d
ch	obj/net/ns.asm	/^				ch = *fmt;$/;"	d
ch	obj/net/testinput.asm	/^				ch = *fmt;$/;"	d
ch	obj/net/testoutput.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/echosrv.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/echotest.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/forktree.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/hello.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/httpd.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/icode.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/idle.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/init.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/pingpong.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/primes.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testfile.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/testtime.asm	/^				ch = *fmt;$/;"	d
ch	obj/user/writemotd.asm	/^				ch = *fmt;$/;"	d
chal_id	net/lwip/netif/ppp/chap.h	/^  u_char chal_id;                         \/* ID of last challenge *\/$/;"	m	struct:chap_state
chal_interval	net/lwip/netif/ppp/chap.h	/^  int chal_interval;                      \/* Time until we challenge peer again *\/$/;"	m	struct:chap_state
chal_len	net/lwip/netif/ppp/chap.h	/^  u_char chal_len;                        \/* challenge length *\/$/;"	m	struct:chap_state
chal_name	net/lwip/netif/ppp/chap.h	/^  char *chal_name;                        \/* Our name to use with challenge *\/$/;"	m	struct:chap_state
chal_transmits	net/lwip/netif/ppp/chap.h	/^  int chal_transmits;                     \/* Number of transmissions of challenge *\/$/;"	m	struct:chap_state
chal_type	net/lwip/netif/ppp/chap.h	/^  u_char chal_type;                       \/* hash algorithm for challenges *\/$/;"	m	struct:chap_state
challenge	net/lwip/netif/ppp/chap.h	/^  u_char challenge[MAX_CHALLENGE_LENGTH]; \/* last challenge string sent *\/$/;"	m	struct:chap_state
chap	net/lwip/netif/ppp/chap.c	/^chap_state chap[NUM_PPP]; \/* CHAP state; one for each unit *\/$/;"	v
chap_mdtype	net/lwip/netif/ppp/lcp.h	/^    u_char chap_mdtype;          \/* which MD type (hashing algorithm) *\/$/;"	m	struct:lcp_options
chap_protent	net/lwip/netif/ppp/chap.c	/^struct protent chap_protent = {$/;"	v	typeref:struct:protent
chap_state	net/lwip/netif/ppp/chap.h	/^typedef struct chap_state {$/;"	s
chap_state	net/lwip/netif/ppp/chap.h	/^} chap_state;$/;"	t	typeref:struct:chap_state
char	obj/fs/fs.asm	/^char *$/;"	l
char	obj/kern/kernel.asm	/^char *$/;"	l
char	obj/net/ns.asm	/^char *$/;"	l
char	obj/net/testinput.asm	/^char *$/;"	l
char	obj/net/testoutput.asm	/^char *$/;"	l
char	obj/user/echosrv.asm	/^char *$/;"	l
char	obj/user/echotest.asm	/^char *$/;"	l
char	obj/user/forktree.asm	/^char *$/;"	l
char	obj/user/hello.asm	/^char *$/;"	l
char	obj/user/httpd.asm	/^char *$/;"	l
char	obj/user/icode.asm	/^char *$/;"	l
char	obj/user/idle.asm	/^char *$/;"	l
char	obj/user/init.asm	/^char *$/;"	l
char	obj/user/init.asm	/^char bss[6000];$/;"	l
char	obj/user/pingpong.asm	/^char *$/;"	l
char	obj/user/primes.asm	/^char *$/;"	l
char	obj/user/testfile.asm	/^char *$/;"	l
char	obj/user/testtime.asm	/^char *$/;"	l
char	obj/user/writemotd.asm	/^char *$/;"	l
charcode	kern/console.c	/^static uint8_t *charcode[4] = {$/;"	v	file:
check_bc	fs/bc.c	/^check_bc(void)$/;"	f	file:
check_bitmap	fs/fs.c	/^check_bitmap(void)$/;"	f
check_boot_pml4e	kern/pmap.c	/^check_boot_pml4e(pml4e_t *pml4e)$/;"	f	file:
check_boot_pml4e	kern/pmap.c.BACKUP.24152.c	/^check_boot_pml4e(pml4e_t *pml4e)$/;"	f	file:
check_boot_pml4e	kern/pmap.c.BASE.24152.c	/^check_boot_pml4e(pml4e_t *pml4e)$/;"	f	file:
check_boot_pml4e	kern/pmap.c.LOCAL.24152.c	/^check_boot_pml4e(pml4e_t *pml4e)$/;"	f	file:
check_boot_pml4e	kern/pmap.c.REMOTE.24152.c	/^check_boot_pml4e(pml4e_t *pml4e)$/;"	f	file:
check_boot_pml4e	kern/pmap1.c	/^check_boot_pml4e(pml4e_t *pml4e)$/;"	f	file:
check_call	gradelib.py	/^from subprocess import check_call, Popen$/;"	i
check_idle	net/lwip/netif/ppp/auth.c	/^check_idle(void *arg)$/;"	f	file:
check_ip_src	obj/net/ns.asm	/^        check_ip_src = 0;$/;"	d
check_page_alloc	kern/pmap.c	/^check_page_alloc(void)$/;"	f	file:
check_page_alloc	kern/pmap.c.BACKUP.24152.c	/^check_page_alloc(void)$/;"	f	file:
check_page_alloc	kern/pmap.c.BASE.24152.c	/^check_page_alloc(void)$/;"	f	file:
check_page_alloc	kern/pmap.c.LOCAL.24152.c	/^check_page_alloc(void)$/;"	f	file:
check_page_alloc	kern/pmap.c.REMOTE.24152.c	/^check_page_alloc(void)$/;"	f	file:
check_page_alloc	kern/pmap1.c	/^check_page_alloc(void)$/;"	f	file:
check_page_free_list	kern/pmap.c	/^check_page_free_list(bool only_low_memory)$/;"	f	file:
check_page_free_list	kern/pmap.c.BACKUP.24152.c	/^check_page_free_list(bool only_low_memory)$/;"	f	file:
check_page_free_list	kern/pmap.c.LOCAL.24152.c	/^check_page_free_list(bool only_low_memory)$/;"	f	file:
check_page_free_list	kern/pmap.c.REMOTE.24152.c	/^check_page_free_list(bool only_low_memory)$/;"	f	file:
check_page_free_list	kern/pmap1.c	/^check_page_free_list(bool only_low_memory)$/;"	f	file:
check_passwd	net/lwip/netif/ppp/auth.c	/^check_passwd( int unit, char *auser, int userlen, char *apasswd, int passwdlen, char **msg, int *msglen)$/;"	f
check_regs	user/faultregs.c	/^check_regs(struct regs* a, const char *an, struct regs* b, const char *bn,$/;"	f	file:
check_super	fs/fs.c	/^check_super(void)$/;"	f
check_va2pa	kern/pmap.c	/^check_va2pa(pml4e_t *pml4e, uintptr_t va)$/;"	f	file:
check_va2pa	kern/pmap.c.BACKUP.24152.c	/^check_va2pa(pml4e_t *pml4e, uintptr_t va)$/;"	f	file:
check_va2pa	kern/pmap.c.BASE.24152.c	/^check_va2pa(pml4e_t *pml4e, uintptr_t va)$/;"	f	file:
check_va2pa	kern/pmap.c.LOCAL.24152.c	/^check_va2pa(pml4e_t *pml4e, uintptr_t va)$/;"	f	file:
check_va2pa	kern/pmap.c.REMOTE.24152.c	/^check_va2pa(pml4e_t *pml4e, uintptr_t va)$/;"	f	file:
check_va2pa	kern/pmap1.c	/^check_va2pa(pml4e_t *pml4e, uintptr_t va)$/;"	f	file:
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mp	file:
checksum	kern/mpconfig.c	/^	uint8_t checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mpconf	file:
child	obj/user/icode.asm	/^	child = r;$/;"	d
child_tf	obj/user/icode.asm	/^	child_tf = envs[ENVX(child)].env_tf;$/;"	d
chkerr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER chkerr;           \/* Checksum error. *\/$/;"	m	struct:stats_igmp
chkerr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER chkerr;           \/* Checksum error. *\/$/;"	m	struct:stats_proto
chklen	obj/net/ns.asm	/^      chklen = chksum_len;$/;"	d
chklen	obj/net/ns.asm	/^    chklen = q->len;$/;"	d
chksum	kern/e1000.h	/^        uint16_t chksum;$/;"	m	struct:rcv_desc
chksum	net/lwip/core/ipv6/inet6.c	/^chksum(void *dataptr, u16_t len)$/;"	f	file:
chksum	net/lwip/include/ipv6/lwip/icmp.h	/^  u16_t chksum;$/;"	m	struct:icmp_dur_hdr
chksum	net/lwip/include/ipv6/lwip/icmp.h	/^  u16_t chksum;$/;"	m	struct:icmp_echo_hdr
chksum	net/lwip/include/ipv6/lwip/icmp.h	/^  u16_t chksum;$/;"	m	struct:icmp_te_hdr
chksum_len_rx	net/lwip/include/lwip/udp.h	/^  u16_t chksum_len_rx, chksum_len_tx;$/;"	m	struct:udp_pcb
chksum_len_tx	net/lwip/include/lwip/udp.h	/^  u16_t chksum_len_rx, chksum_len_tx;$/;"	m	struct:udp_pcb
cifaddr	net/lwip/netif/ppp/ppp.c	/^cifaddr( int pd, u32_t o, u32_t h)$/;"	f
cifdefaultroute	net/lwip/netif/ppp/ppp.c	/^cifdefaultroute(int pd, u32_t l, u32_t g)$/;"	f
cilen	net/lwip/netif/ppp/fsm.h	/^  int  (*cilen)(fsm*);                              \/* Length of our Configuration Information *\/$/;"	m	struct:fsm_callbacks
cis_received	net/lwip/netif/ppp/ipcp.c	/^static int cis_received[NUM_PPP];      \/* # Conf-Reqs received *\/$/;"	v	file:
class	net/lwip/core/dns.c	/^  u16_t class;$/;"	m	struct:dns_answer	file:
class	net/lwip/core/dns.c	/^  u16_t class;$/;"	m	struct:dns_query	file:
class	obj/kern/kernel.asm	/^		class = pci_class[PCI_CLASS(f->dev_class)];$/;"	d
clen	obj/net/ns.asm	/^  clen = pbuf_clen(p);$/;"	d
clientstate	net/lwip/netif/ppp/chap.h	/^  int clientstate;                        \/* Client state *\/$/;"	m	struct:chap_state
close	gradelib.py	/^    def close(self):$/;"	m	class:GDBClient
close	inc/ns.h	/^	} close;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_close
close	lib/fd.c	/^close(int fdnum)$/;"	f
close	net/lwip/include/lwip/sockets.h	347;"	d
close	net/lwip/netif/ppp/ppp.h	/^    void (*close) (int unit, char *reason);$/;"	m	struct:protent
close_all	lib/fd.c	/^close_all(void)$/;"	f
closesocket	net/lwip/include/lwip/sockets.h	329;"	d
cmd	kern/e1000.h	/^        uint8_t cmd;$/;"	m	struct:tx_desc
cnt	lib/printf.c	/^	int cnt;	\/\/ total bytes printed so far$/;"	m	struct:printbuf	file:
cnt	lib/printfmt.c	/^	int cnt;$/;"	m	struct:sprintbuf	file:
cnt	obj/fs/fs.asm	/^	cnt = vcprintf(fmt, aq);$/;"	d
cnt	obj/kern/kernel.asm	/^	cnt = vcprintf(fmt, aq);$/;"	d
cnt	obj/net/ns.asm	/^	cnt = vcprintf(fmt, aq);$/;"	d
cnt	obj/net/testinput.asm	/^	cnt = vcprintf(fmt, aq);$/;"	d
cnt	obj/net/testoutput.asm	/^	cnt = vcprintf(fmt, aq);$/;"	d
cnt	obj/user/echosrv.asm	/^	cnt = vcprintf(fmt, aq);$/;"	d
cnt	obj/user/echotest.asm	/^	cnt = vcprintf(fmt, aq);$/;"	d
cnt	obj/user/forktree.asm	/^	cnt = vcprintf(fmt, aq);$/;"	d
cnt	obj/user/hello.asm	/^	cnt = vcprintf(fmt, aq);$/;"	d
cnt	obj/user/httpd.asm	/^	cnt = vcprintf(fmt, aq);$/;"	d
cnt	obj/user/icode.asm	/^	cnt = vcprintf(fmt, aq);$/;"	d
cnt	obj/user/idle.asm	/^	cnt = vcprintf(fmt, aq);$/;"	d
cnt	obj/user/init.asm	/^	cnt = vcprintf(fmt, aq);$/;"	d
cnt	obj/user/pingpong.asm	/^	cnt = vcprintf(fmt, aq);$/;"	d
cnt	obj/user/primes.asm	/^	cnt = vcprintf(fmt, aq);$/;"	d
cnt	obj/user/testfile.asm	/^	cnt = vcprintf(fmt, aq);$/;"	d
cnt	obj/user/testtime.asm	/^	cnt = vcprintf(fmt, aq);$/;"	d
cnt	obj/user/writemotd.asm	/^	cnt = vcprintf(fmt, aq);$/;"	d
code	obj/kern/kernel.asm	/^	code = KADDR(MPENTRY_PADDR);$/;"	d
code	obj/net/ns.asm	/^  code = *(((u8_t *)p->payload)+1);$/;"	d
code	user/httpd.c	/^	int code;$/;"	m	struct:error_messages	file:
code	user/httpd.c	/^	int code;$/;"	m	struct:responce_header	file:
color	gradelib.py	/^def color(name, text):$/;"	f
com_strlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t com_strlen;$/;"	m	struct:snmp_msg_pstat
comlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t comlen;$/;"	m	struct:snmp_resp_header_lengths
comlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t comlen;$/;"	m	struct:snmp_trap_header_lengths
comlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t comlenlen;$/;"	m	struct:snmp_resp_header_lengths
comlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t comlenlen;$/;"	m	struct:snmp_trap_header_lengths
commands	kern/monitor.c	/^static struct Command commands[] = {$/;"	v	typeref:struct:Command	file:
common	net/lwip/include/lwip/netifapi.h	/^    } common;$/;"	m	union:netifapi_msg_msg::__anon20	typeref:struct:netifapi_msg_msg::__anon20::__anon22
community	net/lwip/include/lwip/snmp_msg.h	/^  u8_t community[SNMP_COMMUNITY_STR_LEN + 1];$/;"	m	struct:snmp_msg_pstat
compressSlot	net/lwip/netif/ppp/vj.h	/^  u_char compressSlot;             \/* Flag indicating OK to compress slot ID. *\/$/;"	m	struct:vjcompress
conf	obj/kern/kernel.asm	/^	conf = (struct mpconf *) KADDR(mp->physaddr);$/;"	d
conn	net/lwip/api/sockets.c	/^  struct netconn *conn;$/;"	m	struct:lwip_socket	typeref:struct:lwip_socket::netconn	file:
conn	net/lwip/include/lwip/api_msg.h	/^  struct netconn *conn;$/;"	m	struct:api_msg_msg	typeref:struct:api_msg_msg::netconn
conn	obj/net/ns.asm	/^    conn = netconn_new_with_callback( (protocol == IPPROTO_UDPLITE) ?$/;"	d
conn	obj/net/ns.asm	/^    conn = netconn_new_with_callback(NETCONN_TCP, event_callback);$/;"	d
conn	obj/net/ns.asm	/^    conn = netconn_new_with_proto_and_callback(NETCONN_RAW, (u8_t)protocol, event_callback);$/;"	d
conn	obj/net/ns.asm	/^  conn = (struct netconn *)arg;$/;"	d
conn	obj/net/ns.asm	/^  conn = arg;$/;"	d
conn	obj/net/ns.asm	/^  conn = memp_malloc(MEMP_NETCONN);$/;"	d
conn	obj/net/ns.asm	/^  conn = netconn_alloc(t, callback);$/;"	d
connect	inc/ns.h	/^	} connect;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_connect
connect	lib/sockets.c	/^connect(int s, const struct sockaddr *name, socklen_t namelen)$/;"	f
connect	net/lwip/include/lwip/sockets.h	330;"	d
connect_time_expired	net/lwip/netif/ppp/auth.c	/^connect_time_expired(void *arg)$/;"	f	file:
connected	net/lwip/include/lwip/tcp.h	/^  err_t (* connected)(void *arg, struct tcp_pcb *pcb, err_t err);$/;"	m	struct:tcp_pcb
cons	kern/console.c	/^} cons;$/;"	v	typeref:struct:__anon9	file:
cons_getc	kern/console.c	/^cons_getc(void)$/;"	f
cons_init	kern/console.c	/^cons_init(void)$/;"	f
cons_intr	kern/console.c	/^cons_intr(int (*proc)(void))$/;"	f	file:
cons_putc	kern/console.c	/^cons_putc(int c)$/;"	f	file:
const	obj/fs/fs.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/fs/fs.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/kern/kernel.asm	/^		const struct UserStabData *usd = (const struct UserStabData *) USTABDATA;$/;"	t
const	obj/kern/kernel.asm	/^	const struct Stab *stabs, *stab_end;$/;"	t
const	obj/net/ns.asm	/^           const struct eth_addr *ethdst_addr,$/;"	t
const	obj/net/ns.asm	/^           const struct eth_addr *hwdst_addr, const struct ip_addr *ipdst_addr,$/;"	t
const	obj/net/ns.asm	/^           const struct eth_addr *hwsrc_addr, const struct ip_addr *ipsrc_addr,$/;"	t
const	obj/net/ns.asm	/^const char *$/;"	l
const	obj/net/ns.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/net/ns.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/net/testinput.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/net/testinput.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/net/testoutput.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/net/testoutput.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/echosrv.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/echosrv.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/echotest.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/echotest.asm	/^const char *msg = "Hello world!\\n";$/;"	l
const	obj/user/echotest.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/forktree.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/forktree.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/hello.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/hello.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/httpd.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/httpd.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/icode.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/icode.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/idle.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/idle.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/init.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/init.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/pingpong.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/pingpong.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/primes.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/primes.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testfile.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testfile.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/testtime.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/testtime.asm	/^const volatile struct Env *thisenv;$/;"	l
const	obj/user/writemotd.asm	/^const char *binaryname = "<unknown>";$/;"	l
const	obj/user/writemotd.asm	/^const volatile struct Env *thisenv;$/;"	l
cont	gradelib.py	/^    def cont(self):$/;"	m	class:GDBClient
cont	obj/net/ns.asm	/^		cont = (i + PGSIZE < n + 4) ? PTE_CONTINUED : 0;$/;"	d
cont	obj/user/httpd.asm	/^		cont = (i + PGSIZE < n + 4) ? PTE_CONTINUED : 0;$/;"	d
cop	obj/net/ns.asm	/^    cop = last ? left : nfb * 8;$/;"	d
copy_needed	obj/net/ns.asm	/^          copy_needed = 1;$/;"	d
copylen	obj/net/ns.asm	/^      copylen = buflen;$/;"	d
copylen	obj/net/ns.asm	/^      copylen = len;$/;"	d
count	net/lwip/include/lwip/snmp_msg.h	/^  u8_t count;$/;"	m	struct:snmp_varbind_root
count	net/lwip/include/lwip/snmp_structs.h	/^  u16_t count;$/;"	m	struct:mib_list_rootnode
count	obj/fs/fs.asm	/^	count = MIN(count, f->f_size - offset);$/;"	d
count	obj/net/ns.asm	/^      count = pbuf_free(seg->p);$/;"	d
count	obj/net/ns.asm	/^  count = 0;$/;"	d
counter	net/lwip/jos/arch/sys_arch.c	/^	    uint16_t counter;$/;"	m	struct:sys_sem_entry::__anon39::__anon40	file:
counter	user/stresssched.c	/^volatile int counter;$/;"	v
cp	obj/kern/kernel.asm	/^		cp = (uint16_t*) (KERNBASE + MONO_BUF);$/;"	d
cp	obj/kern/kernel.asm	/^	cp = (uint16_t*) (KERNBASE + CGA_BUF);$/;"	d
cprintf	kern/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
cprintf	lib/printf.c	/^cprintf(const char *fmt, ...)$/;"	f
cpu	kern/spinlock.h	/^	struct Cpu *cpu;   \/\/ The CPU holding the lock.$/;"	m	struct:spinlock	typeref:struct:spinlock::Cpu
cpu_env	kern/cpu.h	/^	struct Env *cpu_env;            \/\/ The currently-running environment.$/;"	m	struct:Cpu	typeref:struct:Cpu::Env
cpu_id	kern/cpu.h	/^	uint8_t cpu_id;                 \/\/ Local APIC ID; index into cpus[] below$/;"	m	struct:Cpu
cpu_status	kern/cpu.h	/^	volatile unsigned cpu_status;   \/\/ The status of the CPU$/;"	m	struct:Cpu
cpu_ts	kern/cpu.h	/^	struct Taskstate cpu_ts;        \/\/ Used by x86 to find stack for interrupt$/;"	m	struct:Cpu	typeref:struct:Cpu::Taskstate
cpuid	inc/x86.h	/^cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)$/;"	f
cpunum	kern/lapic.c	/^cpunum(void)$/;"	f
cpus	kern/mpconfig.c	/^struct Cpu cpus[NCPU];$/;"	v	typeref:struct:Cpu
cputchar	kern/console.c	/^cputchar(int c)$/;"	f
cputchar	lib/console.c	/^cputchar(int ch)$/;"	f
crt_buf	kern/console.c	/^static uint16_t *crt_buf;$/;"	v	file:
crt_buf	obj/kern/kernel.asm	/^	crt_buf = (uint16_t*) cp;$/;"	d
crt_pos	kern/console.c	/^static uint16_t crt_pos;$/;"	v	file:
crt_pos	obj/kern/kernel.asm	/^	crt_pos = pos;$/;"	d
cs_filler	net/lwip/netif/ppp/vj.h	/^  u_char cs_filler;$/;"	m	struct:cstate
cs_hdr	net/lwip/netif/ppp/vj.h	115;"	d
cs_hlen	net/lwip/netif/ppp/vj.h	/^  u_short cs_hlen;        \/* size of hdr (receive only) *\/$/;"	m	struct:cstate
cs_id	net/lwip/netif/ppp/vj.h	/^  u_char cs_id;           \/* connection # associated with this state *\/$/;"	m	struct:cstate
cs_ip	net/lwip/netif/ppp/vj.h	114;"	d
cs_next	net/lwip/netif/ppp/vj.h	/^  struct cstate *cs_next; \/* next most recently used state (xmit only) *\/$/;"	m	struct:cstate	typeref:struct:cstate::cstate
cseg	obj/net/ns.asm	/^                  cseg = tcp_seg_copy(&inseg);$/;"	d
cseg	obj/net/ns.asm	/^                cseg = tcp_seg_copy(&inseg);$/;"	d
cseg	obj/net/ns.asm	/^          cseg = pcb->ooseq;$/;"	d
cseg	obj/net/ns.asm	/^  cseg = memp_malloc(MEMP_TCP_SEG);$/;"	d
cso	kern/e1000.h	/^        uint8_t cso;$/;"	m	struct:tx_desc
css	kern/e1000.h	/^        uint8_t css;$/;"	m	struct:tx_desc
cstate	net/lwip/netif/ppp/vj.h	/^struct cstate {$/;"	s
csu_hdr	net/lwip/netif/ppp/vj.h	/^    char csu_hdr[MAX_HDR];$/;"	m	union:cstate::__anon15
csu_ip	net/lwip/netif/ppp/vj.h	/^    struct ip csu_ip;     \/* ip\/tcp hdr from most recent packet *\/$/;"	m	union:cstate::__anon15	typeref:struct:cstate::__anon15::ip
ctime	net/lwip/netif/etharp.c	/^  u8_t ctime;$/;"	m	struct:etharp_entry	file:
ctlmap	kern/console.c	/^static uint8_t ctlmap[256] =$/;"	v	file:
ctx	net/lwip/include/lwip/tcpip.h	/^      void *ctx;$/;"	m	struct:tcpip_msg::__anon33::__anon35
cur_tc	net/lwip/jos/arch/thread.c	/^static struct thread_context *cur_tc;$/;"	v	typeref:struct:thread_context	file:
cur_tc	obj/net/ns.asm	/^    cur_tc = NULL;$/;"	d
cur_tc	obj/net/ns.asm	/^    cur_tc = next_tc;$/;"	d
curarg	inc/args.h	/^	const char *curarg;$/;"	m	struct:Argstate
curenv	kern/env.h	10;"	d
curenv	obj/kern/kernel.asm	/^			curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^		curenv = NULL;$/;"	d
curenv	obj/kern/kernel.asm	/^	curenv = e;$/;"	d
cwnd	net/lwip/include/lwip/tcp.h	/^  u16_t cwnd;  $/;"	m	struct:tcp_pcb
d	obj/fs/fs.asm	/^	d = dst;$/;"	d
d	obj/kern/kernel.asm	/^	d = dst;$/;"	d
d	obj/net/ns.asm	/^	d = dst;$/;"	d
d	obj/net/testinput.asm	/^	d = dst;$/;"	d
d	obj/net/testoutput.asm	/^	d = dst;$/;"	d
d	obj/user/echosrv.asm	/^	d = dst;$/;"	d
d	obj/user/echotest.asm	/^	d = dst;$/;"	d
d	obj/user/forktree.asm	/^	d = dst;$/;"	d
d	obj/user/hello.asm	/^	d = dst;$/;"	d
d	obj/user/httpd.asm	/^	d = dst;$/;"	d
d	obj/user/icode.asm	/^	d = dst;$/;"	d
d	obj/user/idle.asm	/^	d = dst;$/;"	d
d	obj/user/init.asm	/^	d = dst;$/;"	d
d	obj/user/pingpong.asm	/^	d = dst;$/;"	d
d	obj/user/primes.asm	/^	d = dst;$/;"	d
d	obj/user/testfile.asm	/^	d = dst;$/;"	d
d	obj/user/testtime.asm	/^	d = dst;$/;"	d
d	obj/user/writemotd.asm	/^	d = dst;$/;"	d
data	obj/kern/kernel.asm	/^		data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
data	obj/kern/kernel.asm	/^	data = inb(KBDATAP);$/;"	d
data	obj/net/ns.asm	/^  data = (struct lwip_setgetsockopt_data*)arg;$/;"	d
data	user/init.c	/^} data = {$/;"	v	typeref:struct:__anon44
datagram_len	net/lwip/include/ipv4/lwip/ip_frag.h	/^  u16_t datagram_len;$/;"	m	struct:ip_reassdata
dataptr	net/lwip/include/lwip/api_msg.h	/^      const void *dataptr;$/;"	m	struct:api_msg_msg::__anon25::__anon29
dataptr	net/lwip/include/lwip/tcp.h	/^  void *dataptr;           \/* pointer to the TCP data in the pbuf *\/$/;"	m	struct:tcp_seg
dataptr	obj/net/ns.asm	/^  dataptr = (u8_t*)conn->write_msg->msg.w.dataptr + conn->write_offset;$/;"	d
dead	obj/kern/kernel.asm	/^dead:$/;"	l
debug	fs/serv.c	12;"	d	file:
debug	lib/fd.c	3;"	d	file:
debug	lib/file.c	5;"	d	file:
debug	lib/nsipc.c	5;"	d	file:
debug	net/lwip/jos/arch/sys_arch.c	10;"	d	file:
debug	net/serv.c	34;"	d	file:
debuginfo_rip	kern/kdebug.c	/^debuginfo_rip(uintptr_t addr, struct Ripdebuginfo *info)$/;"	f
default	obj/fs/fs.asm	/^		default:$/;"	l
default	obj/kern/kernel.asm	/^			default:$/;"	l
default	obj/kern/kernel.asm	/^		default:$/;"	l
default	obj/kern/kernel.asm	/^	default:$/;"	l
default	obj/net/ns.asm	/^		default:$/;"	l
default	obj/net/ns.asm	/^	default:$/;"	l
default	obj/net/ns.asm	/^      default: \/* unrecognized socket type *\/$/;"	l
default	obj/net/ns.asm	/^      default:$/;"	l
default	obj/net/ns.asm	/^    default:$/;"	l
default	obj/net/ns.asm	/^   default:$/;"	l
default	obj/net/ns.asm	/^  default:$/;"	l
default	obj/net/testinput.asm	/^		default:$/;"	l
default	obj/net/testoutput.asm	/^		default:$/;"	l
default	obj/user/echosrv.asm	/^		default:$/;"	l
default	obj/user/echotest.asm	/^		default:$/;"	l
default	obj/user/forktree.asm	/^		default:$/;"	l
default	obj/user/hello.asm	/^		default:$/;"	l
default	obj/user/httpd.asm	/^		default:$/;"	l
default	obj/user/icode.asm	/^		default:$/;"	l
default	obj/user/idle.asm	/^		default:$/;"	l
default	obj/user/init.asm	/^		default:$/;"	l
default	obj/user/pingpong.asm	/^		default:$/;"	l
default	obj/user/primes.asm	/^		default:$/;"	l
default	obj/user/testfile.asm	/^		default:$/;"	l
default	obj/user/testtime.asm	/^		default:$/;"	l
default	obj/user/writemotd.asm	/^		default:$/;"	l
default_route	net/lwip/netif/ppp/ipcp.h	/^  u_int   default_route : 1; \/* Assign default route through interface? *\/$/;"	m	struct:ipcp_options
default_route_set	net/lwip/netif/ppp/ipcp.c	/^static int default_route_set[NUM_PPP]; \/* Have set up a default route *\/$/;"	v	file:
delay	kern/console.c	/^delay(void)$/;"	f	file:
desc	kern/monitor.c	/^	const char *desc;$/;"	m	struct:Command	file:
dest	net/lwip/include/ipv6/lwip/ip.h	/^  struct ip_addr src, dest;          \/* source and destination IP addresses *\/$/;"	m	struct:ip_hdr	typeref:struct:ip_hdr::
dest	obj/net/ns.asm	/^    dest = &(iphdr->dest);$/;"	d
dest	obj/net/ns.asm	/^    dest = &mcastaddr;$/;"	d
dest	obj/net/ns.asm	/^    dest = (struct eth_addr *)&ethbroadcast;$/;"	d
dest	obj/net/ns.asm	/^  dest = NULL;$/;"	d
dest	obj/net/ns.asm	/^  dest = ntohs(udphdr->dest);$/;"	d
dev	kern/pci.h	/^    uint32_t dev;$/;"	m	struct:pci_func
dev_class	kern/pci.h	/^    uint32_t dev_class;$/;"	m	struct:pci_func
dev_close	inc/fd.h	/^	int (*dev_close)(struct Fd *fd);$/;"	m	struct:Dev
dev_id	inc/fd.h	/^	int dev_id;$/;"	m	struct:Dev
dev_id	kern/pci.h	/^    uint32_t dev_id;$/;"	m	struct:pci_func
dev_lookup	lib/fd.c	/^dev_lookup(int dev_id, struct Dev **dev)$/;"	f
dev_name	inc/fd.h	/^	const char *dev_name;$/;"	m	struct:Dev
dev_read	inc/fd.h	/^	ssize_t (*dev_read)(struct Fd *fd, void *buf, size_t len);$/;"	m	struct:Dev
dev_stat	inc/fd.h	/^	int (*dev_stat)(struct Fd *fd, struct Stat *stat);$/;"	m	struct:Dev
dev_trunc	inc/fd.h	/^	int (*dev_trunc)(struct Fd *fd, off_t length);$/;"	m	struct:Dev
dev_write	inc/fd.h	/^	ssize_t (*dev_write)(struct Fd *fd, const void *buf, size_t len);$/;"	m	struct:Dev
devfile	lib/file.c	/^struct Dev devfile =$/;"	v	typeref:struct:Dev
devfile_flush	lib/file.c	/^devfile_flush(struct Fd *fd)$/;"	f	file:
devfile_read	lib/file.c	/^devfile_read(struct Fd *fd, void *buf, size_t n)$/;"	f	file:
devfile_stat	lib/file.c	/^devfile_stat(struct Fd *fd, struct Stat *st)$/;"	f	file:
devfile_trunc	lib/file.c	/^devfile_trunc(struct Fd *fd, off_t newsize)$/;"	f	file:
devfile_write	lib/file.c	/^devfile_write(struct Fd *fd, const void *buf, size_t n)$/;"	f	file:
devsock	lib/sockets.c	/^struct Dev devsock =$/;"	v	typeref:struct:Dev
devsock_close	lib/sockets.c	/^devsock_close(struct Fd *fd)$/;"	f	file:
devsock_read	lib/sockets.c	/^devsock_read(struct Fd *fd, void *buf, size_t n)$/;"	f	file:
devsock_stat	lib/sockets.c	/^devsock_stat(struct Fd *fd, struct Stat *stat)$/;"	f	file:
devsock_write	lib/sockets.c	/^devsock_write(struct Fd *fd, const void *buf, size_t n)$/;"	f	file:
devtab	lib/fd.c	/^static struct Dev *devtab[] =$/;"	v	typeref:struct:Dev	file:
dhcp	net/lwip/include/lwip/dhcp.h	/^struct dhcp$/;"	s
dhcp	net/lwip/include/lwip/netif.h	/^  struct dhcp *dhcp;$/;"	m	struct:netif	typeref:struct:netif::dhcp
dhcp	obj/net/ns.asm	/^    dhcp = mem_malloc(sizeof(struct dhcp));$/;"	d
dhcp	obj/net/ns.asm	/^  dhcp = mem_malloc(sizeof(struct dhcp));$/;"	d
dhcp	obj/net/ns.asm	/^  dhcp = netif->dhcp;$/;"	d
dhcp_arp_reply	net/lwip/core/dhcp.c	/^void dhcp_arp_reply(struct netif *netif, struct ip_addr *addr)$/;"	f
dhcp_bind	net/lwip/core/dhcp.c	/^dhcp_bind(struct netif *netif)$/;"	f	file:
dhcp_check	net/lwip/core/dhcp.c	/^dhcp_check(struct netif *netif)$/;"	f	file:
dhcp_coarse_tmr	net/lwip/core/dhcp.c	/^dhcp_coarse_tmr()$/;"	f
dhcp_create_request	net/lwip/core/dhcp.c	/^dhcp_create_request(struct netif *netif)$/;"	f	file:
dhcp_decline	net/lwip/core/dhcp.c	/^dhcp_decline(struct netif *netif)$/;"	f	file:
dhcp_delete_request	net/lwip/core/dhcp.c	/^dhcp_delete_request(struct netif *netif)$/;"	f	file:
dhcp_discover	net/lwip/core/dhcp.c	/^dhcp_discover(struct netif *netif)$/;"	f	file:
dhcp_fine_tmr	net/lwip/core/dhcp.c	/^dhcp_fine_tmr()$/;"	f
dhcp_free_reply	net/lwip/core/dhcp.c	/^static void dhcp_free_reply(struct dhcp *dhcp)$/;"	f	file:
dhcp_get_option_byte	net/lwip/core/dhcp.c	/^dhcp_get_option_byte(u8_t *ptr)$/;"	f	file:
dhcp_get_option_long	net/lwip/core/dhcp.c	/^static u32_t dhcp_get_option_long(u8_t *ptr)$/;"	f	file:
dhcp_get_option_ptr	net/lwip/core/dhcp.c	/^static u8_t *dhcp_get_option_ptr(struct dhcp *dhcp, u8_t option_type)$/;"	f	file:
dhcp_handle_ack	net/lwip/core/dhcp.c	/^dhcp_handle_ack(struct netif *netif)$/;"	f	file:
dhcp_handle_nak	net/lwip/core/dhcp.c	/^dhcp_handle_nak(struct netif *netif)$/;"	f	file:
dhcp_handle_offer	net/lwip/core/dhcp.c	/^dhcp_handle_offer(struct netif *netif)$/;"	f	file:
dhcp_inform	net/lwip/core/dhcp.c	/^dhcp_inform(struct netif *netif)$/;"	f
dhcp_msg	net/lwip/include/lwip/dhcp.h	/^struct dhcp_msg$/;"	s
dhcp_option	net/lwip/core/dhcp.c	/^dhcp_option(struct dhcp *dhcp, u8_t option_type, u8_t option_len)$/;"	f	file:
dhcp_option_byte	net/lwip/core/dhcp.c	/^dhcp_option_byte(struct dhcp *dhcp, u8_t value)$/;"	f	file:
dhcp_option_long	net/lwip/core/dhcp.c	/^dhcp_option_long(struct dhcp *dhcp, u32_t value)$/;"	f	file:
dhcp_option_short	net/lwip/core/dhcp.c	/^dhcp_option_short(struct dhcp *dhcp, u16_t value)$/;"	f	file:
dhcp_option_trailer	net/lwip/core/dhcp.c	/^dhcp_option_trailer(struct dhcp *dhcp)$/;"	f	file:
dhcp_rebind	net/lwip/core/dhcp.c	/^dhcp_rebind(struct netif *netif)$/;"	f	file:
dhcp_recv	net/lwip/core/dhcp.c	/^static void dhcp_recv(void *arg, struct udp_pcb *pcb, struct pbuf *p, struct ip_addr *addr, u16_t port)$/;"	f	file:
dhcp_release	net/lwip/core/dhcp.c	/^dhcp_release(struct netif *netif)$/;"	f
dhcp_renew	net/lwip/core/dhcp.c	/^dhcp_renew(struct netif *netif)$/;"	f
dhcp_select	net/lwip/core/dhcp.c	/^dhcp_select(struct netif *netif)$/;"	f	file:
dhcp_set_state	net/lwip/core/dhcp.c	/^dhcp_set_state(struct dhcp *dhcp, u8_t new_state)$/;"	f	file:
dhcp_start	net/lwip/core/dhcp.c	/^dhcp_start(struct netif *netif)$/;"	f
dhcp_stop	net/lwip/core/dhcp.c	/^dhcp_stop(struct netif *netif)$/;"	f
dhcp_t1_timeout	net/lwip/core/dhcp.c	/^dhcp_t1_timeout(struct netif *netif)$/;"	f	file:
dhcp_t2_timeout	net/lwip/core/dhcp.c	/^dhcp_t2_timeout(struct netif *netif)$/;"	f	file:
dhcp_timeout	net/lwip/core/dhcp.c	/^dhcp_timeout(struct netif *netif)$/;"	f	file:
dhcp_timer_coarse	net/lwip/api/tcpip.c	/^dhcp_timer_coarse(void *arg)$/;"	f	file:
dhcp_timer_fine	net/lwip/api/tcpip.c	/^dhcp_timer_fine(void *arg)$/;"	f	file:
dhcp_unfold_reply	net/lwip/core/dhcp.c	/^dhcp_unfold_reply(struct dhcp *dhcp)$/;"	f	file:
did_authup	net/lwip/netif/ppp/auth.c	/^static int did_authup;$/;"	v	file:
didinit	kern/picirq.c	/^static bool didinit;$/;"	v	file:
didinit	obj/kern/kernel.asm	/^	didinit = 1;$/;"	d
die	user/echosrv.c	/^die(char *m)$/;"	f	file:
die	user/echotest.c	/^die(char *m)$/;"	f	file:
die	user/httpd.c	/^die(char *m)$/;"	f	file:
difflib	grade-lab6	/^import os, re, threading, socket, time, urllib2, shutil, struct, difflib$/;"	i
dig	obj/fs/fs.asm	/^			dig = *s - '0';$/;"	d
dig	obj/fs/fs.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/fs/fs.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - '0';$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/kern/kernel.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/net/ns.asm	/^			dig = *s - '0';$/;"	d
dig	obj/net/ns.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/net/ns.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/net/testinput.asm	/^			dig = *s - '0';$/;"	d
dig	obj/net/testinput.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/net/testinput.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/net/testoutput.asm	/^			dig = *s - '0';$/;"	d
dig	obj/net/testoutput.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/net/testoutput.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/echosrv.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/echosrv.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/echosrv.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/echotest.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/echotest.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/echotest.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/forktree.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/hello.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/httpd.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/httpd.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/httpd.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/icode.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/icode.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/icode.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/idle.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/init.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/init.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/init.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pingpong.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/primes.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testfile.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testfile.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testfile.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testtime.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/testtime.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testtime.asm	/^			dig = *s - 'a' + 10;$/;"	d
dig	obj/user/writemotd.asm	/^			dig = *s - '0';$/;"	d
dig	obj/user/writemotd.asm	/^			dig = *s - 'A' + 10;$/;"	d
dig	obj/user/writemotd.asm	/^			dig = *s - 'a' + 10;$/;"	d
digest	net/lwip/netif/ppp/md5.h	/^  unsigned char digest[16]; \/* actual digest after MD5Final call *\/$/;"	m	struct:__anon13
dip	net/lwip/core/snmp/msg_out.c	/^  struct ip_addr dip;$/;"	m	struct:snmp_trap_dst	typeref:struct:snmp_trap_dst::ip_addr	file:
dip	net/lwip/include/lwip/snmp_msg.h	/^  struct ip_addr dip;$/;"	m	struct:snmp_msg_trap	typeref:struct:snmp_msg_trap::ip_addr
dir	obj/fs/fs.asm	/^		dir = f;$/;"	d
dir	obj/fs/fs.asm	/^	dir = 0;$/;"	d
dir_alloc_file	fs/fs.c	/^dir_alloc_file(struct File *dir, struct File **file)$/;"	f	file:
dir_lookup	fs/fs.c	/^dir_lookup(struct File *dir, const char *name, struct File **file)$/;"	f	file:
diradd	fs/fsformat.c	/^diradd(struct Dir *d, uint32_t type, const char *name)$/;"	f
disable_defaultip	net/lwip/netif/ppp/ppp.h	/^  u_int  disable_defaultip : 1;       \/* Don't use hostname for default IP addrs *\/$/;"	m	struct:ppp_settings
disk_ready_loop	boot/boot.S	/^disk_ready_loop:$/;"	l
disk_ready_loop	obj/boot/boot.asm	/^disk_ready_loop:$/;"	l
diskaddr	fs/bc.c	/^diskaddr(uint64_t blockno)$/;"	f
diskmap	fs/fsformat.c	/^char *diskmap, *diskpos;$/;"	v
diskno	fs/ide.c	/^static int diskno = 1;$/;"	v	file:
diskno	obj/fs/fs.asm	/^	diskno = d;$/;"	d
diskpos	fs/fsformat.c	/^char *diskmap, *diskpos;$/;"	v
diskresetsuccess	boot/boot.S	/^diskresetsuccess:$/;"	l
displayError	boot/boot.S	/^displayError:    #just to test the 2nd stage is getting copied$/;"	l
displayError	obj/boot/boot.asm	/^displayError:    #just to test the 2nd stage is getting copied$/;"	l
displaySuccess	boot/boot.S	/^displaySuccess:    #just to test the 2nd stage is getting copies$/;"	l
displaySuccess	obj/boot/boot.asm	/^displaySuccess:    #just to test the 2nd stage is getting copies$/;"	l
divide_error_handler	kern/trap.c	/^divide_error_handler(struct Trapframe *tf)$/;"	f
dns1	net/lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ppp_addrs::
dns2	net/lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ppp_addrs::
dns_answer	net/lwip/core/dns.c	/^struct dns_answer {$/;"	s	file:
dns_api_msg	net/lwip/include/lwip/api_msg.h	/^struct dns_api_msg {$/;"	s
dns_check_entries	net/lwip/core/dns.c	/^dns_check_entries(void)$/;"	f	file:
dns_check_entry	net/lwip/core/dns.c	/^dns_check_entry(u8_t i)$/;"	f	file:
dns_compare_name	net/lwip/core/dns.c	/^dns_compare_name(unsigned char *query, unsigned char *response)$/;"	f	file:
dns_count	net/lwip/include/lwip/dhcp.h	/^  u32_t dns_count; \/* actual number of DNS servers obtained *\/$/;"	m	struct:dhcp
dns_enqueue	net/lwip/core/dns.c	/^dns_enqueue(const char *name, dns_found_callback found, void *callback_arg)$/;"	f	file:
dns_found_callback	net/lwip/include/lwip/dns.h	/^typedef void (*dns_found_callback)(const char *name, struct ip_addr *ipaddr, void *callback_arg);$/;"	t
dns_gethostbyname	net/lwip/core/dns.c	/^dns_gethostbyname(const char *hostname, struct ip_addr *addr, dns_found_callback found,$/;"	f
dns_getserver	net/lwip/core/dns.c	/^dns_getserver(u8_t numdns)$/;"	f
dns_hdr	net/lwip/core/dns.c	/^struct dns_hdr {$/;"	s	file:
dns_init	net/lwip/core/dns.c	/^dns_init()$/;"	f
dns_lookup	net/lwip/core/dns.c	/^dns_lookup(const char *name)$/;"	f	file:
dns_parse_name	net/lwip/core/dns.c	/^dns_parse_name(unsigned char *query)$/;"	f	file:
dns_payload	net/lwip/core/dns.c	/^static u8_t                   dns_payload[DNS_MSG_SIZE];$/;"	v	file:
dns_pcb	net/lwip/core/dns.c	/^static struct udp_pcb        *dns_pcb;$/;"	v	typeref:struct:udp_pcb	file:
dns_query	net/lwip/core/dns.c	/^struct dns_query {$/;"	s	file:
dns_recv	net/lwip/core/dns.c	/^dns_recv(void *arg, struct udp_pcb *pcb, struct pbuf *p, struct ip_addr *addr, u16_t port)$/;"	f	file:
dns_send	net/lwip/core/dns.c	/^dns_send(u8_t numdns, const char* name, u8_t id)$/;"	f	file:
dns_seqno	net/lwip/core/dns.c	/^static u8_t                   dns_seqno;$/;"	v	file:
dns_servers	net/lwip/core/dns.c	/^static struct ip_addr         dns_servers[DNS_MAX_SERVERS];$/;"	v	typeref:struct:ip_addr	file:
dns_setserver	net/lwip/core/dns.c	/^dns_setserver(u8_t numdns, struct ip_addr *dnsserver)$/;"	f
dns_table	net/lwip/core/dns.c	/^static struct dns_table_entry dns_table[DNS_TABLE_SIZE];$/;"	v	typeref:struct:dns_table_entry	file:
dns_table_entry	net/lwip/core/dns.c	/^struct dns_table_entry {$/;"	s	file:
dns_timer	net/lwip/api/tcpip.c	/^dns_timer(void *arg)$/;"	f	file:
dns_tmr	net/lwip/core/dns.c	/^dns_tmr(void)$/;"	f
dnsaddr	net/lwip/netif/ppp/ipcp.h	/^  u32_t   dnsaddr[2];        \/* Primary and secondary MS DNS entries *\/$/;"	m	struct:ipcp_options
do_bind	net/lwip/api/api_msg.c	/^do_bind(struct api_msg_msg *msg)$/;"	f
do_close	net/lwip/api/api_msg.c	/^do_close(struct api_msg_msg *msg)$/;"	f
do_close_internal	net/lwip/api/api_msg.c	/^do_close_internal(struct netconn *conn)$/;"	f	file:
do_connect	net/lwip/api/api_msg.c	/^do_connect(struct api_msg_msg *msg)$/;"	f
do_connected	net/lwip/api/api_msg.c	/^do_connected(void *arg, struct tcp_pcb *pcb, err_t err)$/;"	f	file:
do_delconn	net/lwip/api/api_msg.c	/^do_delconn(struct api_msg_msg *msg)$/;"	f
do_disconnect	net/lwip/api/api_msg.c	/^do_disconnect(struct api_msg_msg *msg)$/;"	f
do_dns_found	net/lwip/api/api_msg.c	/^do_dns_found(const char *name, struct ip_addr *ipaddr, void *arg)$/;"	f	file:
do_getaddr	net/lwip/api/api_msg.c	/^do_getaddr(struct api_msg_msg *msg)$/;"	f
do_gethostbyname	net/lwip/api/api_msg.c	/^do_gethostbyname(void *arg)$/;"	f
do_join_leave_group	net/lwip/api/api_msg.c	/^do_join_leave_group(struct api_msg_msg *msg)$/;"	f
do_listen	net/lwip/api/api_msg.c	/^do_listen(struct api_msg_msg *msg)$/;"	f
do_netifapi_netif_add	net/lwip/api/netifapi.c	/^do_netifapi_netif_add( struct netifapi_msg_msg *msg)$/;"	f
do_netifapi_netif_common	net/lwip/api/netifapi.c	/^do_netifapi_netif_common( struct netifapi_msg_msg *msg)$/;"	f
do_newconn	net/lwip/api/api_msg.c	/^do_newconn(struct api_msg_msg *msg)$/;"	f
do_recv	net/lwip/api/api_msg.c	/^do_recv(struct api_msg_msg *msg)$/;"	f
do_send	net/lwip/api/api_msg.c	/^do_send(struct api_msg_msg *msg)$/;"	f
do_test	grade-lab5	/^    def do_test():$/;"	f	function:matchtest
do_write	net/lwip/api/api_msg.c	/^do_write(struct api_msg_msg *msg)$/;"	f
do_writemore	net/lwip/api/api_msg.c	/^do_writemore(struct netconn *conn)$/;"	f	file:
done	obj/net/ns.asm	/^        done = 1;$/;"	d
done	obj/net/ns.asm	/^      done = 1;$/;"	d
done	obj/net/ns.asm	/^ done:$/;"	l
down	net/lwip/netif/ppp/fsm.h	/^  void (*down)(fsm*);                               \/* Called when fsm leaves LS_OPENED state *\/$/;"	m	struct:fsm_callbacks
drop	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER drop;             \/* Dropped packets. *\/$/;"	m	struct:stats_proto
dst_in	obj/fs/fs.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/kern/kernel.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/net/ns.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/net/testinput.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/net/testoutput.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/echosrv.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/echotest.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/forktree.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/hello.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/httpd.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/icode.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/idle.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/init.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/pingpong.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/primes.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testfile.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/testtime.asm	/^	dst_in = dst;$/;"	d
dst_in	obj/user/writemotd.asm	/^	dst_in = dst;$/;"	d
dumbfork	user/dumbfork.c	/^dumbfork(void)$/;"	f
dummy	net/lwip/include/lwip/sys.h	/^struct sys_timeo {u8_t dummy;};$/;"	m	struct:sys_timeo
dup	lib/fd.c	/^dup(int oldfdnum, int newfdnum)$/;"	f
dupacks	net/lwip/include/lwip/tcp.h	/^  u8_t dupacks;$/;"	m	struct:tcp_pcb
duppage	lib/fork.c	/^duppage(envid_t envid, unsigned pn)$/;"	f	file:
duppage	user/dumbfork.c	/^duppage(envid_t dstenv, void *addr)$/;"	f
during	user/faultregs.c	/^static struct regs before, during, after;$/;"	v	typeref:struct:	file:
e	obj/kern/kernel.asm	/^	e = &envs[ENVX(envid)];$/;"	d
e1000	kern/e1000.h	/^volatile uint32_t *e1000; \/\/ MMIO address to access E1000 BAR$/;"	v
e1000	obj/kern/kernel.asm	/^       	e1000 = (uint32_t *) E1000_MMIOADDR;$/;"	d
e1000_attach	kern/e1000.c	/^e1000_attach(struct pci_func *pcif)$/;"	f
e1000_receive	kern/e1000.c	/^e1000_receive(char *data)$/;"	f
e1000_transmit	kern/e1000.c	/^e1000_transmit(char *data, int len)$/;"	f
e2s	net/lwip/jos/arch/perror.c	/^e2s(int err) {$/;"	f
e_ehsize	inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf
e_elf	inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf
e_entry	inc/elf.h	/^	uint64_t e_entry;$/;"	m	struct:Elf
e_flags	inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf
e_machine	inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf
e_magic	inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf
e_phentsize	inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf
e_phnum	inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf
e_phoff	inc/elf.h	/^	uint64_t e_phoff;$/;"	m	struct:Elf
e_shentsize	inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf
e_shnum	inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf
e_shoff	inc/elf.h	/^	uint64_t e_shoff;$/;"	m	struct:Elf
e_shstrndx	inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf
e_type	inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf
e_version	inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf
eaten	obj/net/ns.asm	/^          eaten = 1;$/;"	d
ebuf	lib/printfmt.c	/^	char *ebuf;$/;"	m	struct:sprintbuf	file:
echo_port	grade-lab6	/^echo_port = QEMU.get_gdb_port() + 1$/;"	v
echoing	obj/kern/kernel.asm	/^	echoing = iscons(0);$/;"	d
echolen	obj/user/echotest.asm	/^	echolen = strlen(msg);$/;"	d
eff_wnd	obj/net/ns.asm	/^          eff_wnd = LWIP_MIN(pcb->cwnd, pcb->snd_wnd);$/;"	d
eflags	user/faultregs.c	/^	uint64_t eflags;$/;"	m	struct:regs	file:
eidlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t eidlen;$/;"	m	struct:snmp_trap_header_lengths
eidlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t eidlenlen;$/;"	m	struct:snmp_trap_header_lengths
eip	user/faultregs.c	/^	uintptr_t eip;$/;"	m	struct:regs	file:
elf	obj/user/icode.asm	/^	elf = (struct Elf*) elf_buf;$/;"	d
empty	obj/net/ns.asm	/^      empty = i;$/;"	d
empty_table	net/lwip/core/snmp/mib_structs.c	/^empty_table(struct mib_node *node)$/;"	f	file:
enable	net/lwip/core/snmp/msg_out.c	/^  u8_t enable;$/;"	m	struct:snmp_trap_dst	file:
enabled_flag	net/lwip/netif/ppp/ppp.h	/^    int  enabled_flag;      \/* 0 iff protocol is disabled *\/$/;"	m	struct:protent
end	net/lwip/core/ipv4/ip_frag.c	/^  u16_t end;$/;"	m	struct:ip_reass_helper	file:
end_pa	obj/boot1/boot.asm	/^	end_pa = pa + count;$/;"	d
end_part	gradelib.py	/^def end_part(name):$/;"	f
endpoint	net/lwip/netif/ppp/lcp.h	/^    struct epdisc endpoint;      \/* endpoint discriminator *\/$/;"	m	struct:lcp_options	typeref:struct:lcp_options::epdisc
enterprise	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_obj_id *enterprise;$/;"	m	struct:snmp_msg_trap	typeref:struct:snmp_msg_trap::snmp_obj_id
entries	kern/mpconfig.c	/^	uint8_t entries[0];             \/\/ table entries$/;"	m	struct:mpconf	file:
entry	kern/entry.S	/^entry:$/;"	l
entry	kern/mpconfig.c	/^	uint16_t entry;                 \/\/ entry count$/;"	m	struct:mpconf	file:
entry	obj/kern/kernel.asm	/^entry:$/;"	l
entry_pgdir	kern/entrypgdir.c	/^pde_t entry_pgdir[NPDENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES] = {$/;"	v
entry_pgtable	kern/entrypgdir.c	/^pte_t entry_pgtable[NPTENTRIES];$/;"	v
ents	fs/fsformat.c	/^	struct File *ents;$/;"	m	struct:Dir	typeref:struct:Dir::File	file:
enum	obj/net/ns.asm	/^enum netconn_type$/;"	l
enum	obj/net/ns.asm	/^enum { thread_hash_size = 257 };$/;"	l
env_alloc	kern/env.c	/^env_alloc(struct Env **newenv_store, envid_t parent_id)$/;"	f
env_cpunum	inc/env.h	/^	int env_cpunum;			\/\/ The CPU that the env is running on$/;"	m	struct:Env
env_cr3	inc/env.h	/^    physaddr_t env_cr3;$/;"	m	struct:Env
env_create	kern/env.c	/^env_create(uint8_t *binary, size_t size, enum EnvType type)$/;"	f
env_destroy	kern/env.c	/^env_destroy(struct Env *e)$/;"	f
env_free	kern/env.c	/^env_free(struct Env *e)$/;"	f
env_free_list	kern/env.c	/^static struct Env *env_free_list;	\/\/ Free environment list$/;"	v	typeref:struct:Env	file:
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e->env_link;$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = e;$/;"	d
env_free_list	obj/kern/kernel.asm	/^	env_free_list = envs;$/;"	d
env_id	inc/env.h	/^	envid_t env_id;			\/\/ Unique environment identifier$/;"	m	struct:Env
env_init	kern/env.c	/^env_init(void)$/;"	f
env_init_percpu	kern/env.c	/^env_init_percpu(void)$/;"	f
env_ipc_dstva	inc/env.h	/^	void *env_ipc_dstva;		\/\/ VA at which to map received page$/;"	m	struct:Env
env_ipc_from	inc/env.h	/^	envid_t env_ipc_from;		\/\/ envid of the sender$/;"	m	struct:Env
env_ipc_perm	inc/env.h	/^	int env_ipc_perm;		\/\/ Perm of page mapping received$/;"	m	struct:Env
env_ipc_recving	inc/env.h	/^	bool env_ipc_recving;		\/\/ Env is blocked receiving$/;"	m	struct:Env
env_ipc_value	inc/env.h	/^	uint32_t env_ipc_value;		\/\/ Data value sent to us$/;"	m	struct:Env
env_link	inc/env.h	/^	struct Env *env_link;   \/\/ Free list link pointers$/;"	m	struct:Env	typeref:struct:Env::Env
env_parent_id	inc/env.h	/^	envid_t env_parent_id;		\/\/ env_id of this env's parent$/;"	m	struct:Env
env_pgfault_upcall	inc/env.h	/^	void *env_pgfault_upcall;	\/\/ Page fault upcall entry point$/;"	m	struct:Env
env_pml4e	inc/env.h	/^	pml4e_t *env_pml4e;		\/\/ Kernel virtual address of page dir$/;"	m	struct:Env
env_pop_tf	kern/env.c	/^env_pop_tf(struct Trapframe *tf)$/;"	f
env_run	kern/env.c	/^env_run(struct Env *e)$/;"	f
env_runs	inc/env.h	/^	uint32_t env_runs;		\/\/ Number of times environment has run$/;"	m	struct:Env
env_setup_vm	kern/env.c	/^env_setup_vm(struct Env *e)$/;"	f	file:
env_status	inc/env.h	/^	unsigned env_status;		\/\/ Status of the environment$/;"	m	struct:Env
env_tf	inc/env.h	/^	struct Trapframe env_tf;	\/\/ Saved registers$/;"	m	struct:Env	typeref:struct:Env::Trapframe
env_type	inc/env.h	/^	enum EnvType env_type;		\/\/ Indicates special system environments$/;"	m	struct:Env	typeref:enum:Env::EnvType
envid	net/lwip/jos/jif/jif.c	/^    envid_t envid;$/;"	m	struct:jif	file:
envid2env	kern/env.c	/^envid2env(envid_t envid, struct Env **env_store, bool checkperm)$/;"	f
envid_t	inc/env.h	/^typedef int32_t envid_t;$/;"	t
envid_t	obj/fs/fs.asm	/^envid_t$/;"	l
envid_t	obj/net/ns.asm	/^envid_t$/;"	l
envid_t	obj/net/testinput.asm	/^envid_t$/;"	l
envid_t	obj/net/testoutput.asm	/^envid_t$/;"	l
envid_t	obj/user/echosrv.asm	/^envid_t$/;"	l
envid_t	obj/user/echotest.asm	/^envid_t$/;"	l
envid_t	obj/user/forktree.asm	/^envid_t$/;"	l
envid_t	obj/user/hello.asm	/^envid_t$/;"	l
envid_t	obj/user/httpd.asm	/^envid_t$/;"	l
envid_t	obj/user/icode.asm	/^envid_t$/;"	l
envid_t	obj/user/idle.asm	/^envid_t$/;"	l
envid_t	obj/user/init.asm	/^envid_t$/;"	l
envid_t	obj/user/pingpong.asm	/^envid_t$/;"	l
envid_t	obj/user/primes.asm	/^envid_t$/;"	l
envid_t	obj/user/testfile.asm	/^envid_t$/;"	l
envid_t	obj/user/testtime.asm	/^envid_t$/;"	l
envid_t	obj/user/writemotd.asm	/^envid_t$/;"	l
envs	kern/env.c	/^struct Env *envs = NULL;		\/\/ All environments$/;"	v	typeref:struct:Env
envs	obj/kern/kernel.asm	/^        envs = boot_alloc(NENV * sizeof(struct Env));$/;"	d
eph	obj/boot1/boot.asm	/^	eph = ph + ELFHDR->e_phnum;$/;"	d
err	net/lwip/api/sockets.c	/^  err_t err;$/;"	m	struct:lwip_setgetsockopt_data	file:
err	net/lwip/api/sockets.c	/^  int err;$/;"	m	struct:lwip_socket	file:
err	net/lwip/core/dns.c	/^  u8_t  err;$/;"	m	struct:dns_table_entry	file:
err	net/lwip/include/lwip/api.h	/^  err_t err;$/;"	m	struct:netconn
err	net/lwip/include/lwip/api_msg.h	/^  err_t *err;$/;"	m	struct:dns_api_msg
err	net/lwip/include/lwip/netifapi.h	/^  err_t err;$/;"	m	struct:netifapi_msg_msg
err	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER err;              \/* Misc error. *\/$/;"	m	struct:stats_proto
err	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER err;$/;"	m	struct:stats_mem
err	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER err;$/;"	m	struct:stats_syselem
err	obj/fs/fs.asm	/^				err = -err;$/;"	d
err	obj/fs/fs.asm	/^			err = va_arg(aq, int);$/;"	d
err	obj/fs/fs.asm	/^err:$/;"	l
err	obj/kern/kernel.asm	/^				err = -err;$/;"	d
err	obj/kern/kernel.asm	/^			err = va_arg(aq, int);$/;"	d
err	obj/net/ns.asm	/^				err = -err;$/;"	d
err	obj/net/ns.asm	/^			err = va_arg(aq, int);$/;"	d
err	obj/net/ns.asm	/^        err = EAFNOSUPPORT;$/;"	d
err	obj/net/ns.asm	/^        err = EINVAL;$/;"	d
err	obj/net/ns.asm	/^        err = ENOPROTOOPT;$/;"	d
err	obj/net/ns.asm	/^        err = ERR_OK;$/;"	d
err	obj/net/ns.asm	/^      err = EINVAL;$/;"	d
err	obj/net/ns.asm	/^      err = ENOPROTOOPT;$/;"	d
err	obj/net/ns.asm	/^    err = ENOPROTOOPT;$/;"	d
err	obj/net/ns.asm	/^    err = ERR_OK;$/;"	d
err	obj/net/ns.asm	/^    err = ip_output_if(q, src_ip, dst_ip, pcb->ttl, pcb->tos, IP_PROTO_UDP, netif);    $/;"	d
err	obj/net/ns.asm	/^    err = netconn_connect(sock->conn, &remote_addr, ntohs(remote_port));$/;"	d
err	obj/net/ns.asm	/^    err = netconn_disconnect(sock->conn);$/;"	d
err	obj/net/ns.asm	/^    err = netconn_send(sock->conn, &buf);$/;"	d
err	obj/net/ns.asm	/^    err = tcp_output(conn->pcb.tcp);$/;"	d
err	obj/net/ns.asm	/^    err = tcp_output_nagle(conn->pcb.tcp);$/;"	d
err	obj/net/ns.asm	/^    err = tcp_process(pcb);$/;"	d
err	obj/net/ns.asm	/^    err = tcp_send_ctrl(pcb, TCP_FIN);$/;"	d
err	obj/net/ns.asm	/^    err = udp_bind(pcb, &pcb->local_ip, pcb->local_port);$/;"	d
err	obj/net/ns.asm	/^  err = ERR_OK;$/;"	d
err	obj/net/ns.asm	/^  err = data.err;$/;"	d
err	obj/net/ns.asm	/^  err = ip_output_if (q, src_ip, ipaddr, pcb->ttl, pcb->tos, pcb->protocol, netif);$/;"	d
err	obj/net/ns.asm	/^  err = netconn_bind(sock->conn, &local_addr, ntohs(local_port));$/;"	d
err	obj/net/ns.asm	/^  err = netconn_listen_with_backlog(sock->conn, backlog);$/;"	d
err	obj/net/ns.asm	/^  err = netconn_peer(newconn, &naddr, &port);$/;"	d
err	obj/net/ns.asm	/^  err = netconn_write(sock->conn, data, size, NETCONN_COPY | ((flags & MSG_MORE)?NETCONN_MORE:0));$/;"	d
err	obj/net/ns.asm	/^  err = tcp_close(conn->pcb.tcp);$/;"	d
err	obj/net/ns.asm	/^  err = tcp_write(conn->pcb.tcp, dataptr, len, conn->write_msg->msg.w.apiflags);$/;"	d
err	obj/net/ns.asm	/^err:$/;"	l
err	obj/net/testinput.asm	/^				err = -err;$/;"	d
err	obj/net/testinput.asm	/^			err = va_arg(aq, int);$/;"	d
err	obj/net/testinput.asm	/^err:$/;"	l
err	obj/net/testoutput.asm	/^				err = -err;$/;"	d
err	obj/net/testoutput.asm	/^			err = va_arg(aq, int);$/;"	d
err	obj/net/testoutput.asm	/^err:$/;"	l
err	obj/user/echosrv.asm	/^				err = -err;$/;"	d
err	obj/user/echosrv.asm	/^			err = va_arg(aq, int);$/;"	d
err	obj/user/echosrv.asm	/^err:$/;"	l
err	obj/user/echotest.asm	/^				err = -err;$/;"	d
err	obj/user/echotest.asm	/^			err = va_arg(aq, int);$/;"	d
err	obj/user/echotest.asm	/^err:$/;"	l
err	obj/user/forktree.asm	/^				err = -err;$/;"	d
err	obj/user/forktree.asm	/^			err = va_arg(aq, int);$/;"	d
err	obj/user/forktree.asm	/^err:$/;"	l
err	obj/user/hello.asm	/^				err = -err;$/;"	d
err	obj/user/hello.asm	/^			err = va_arg(aq, int);$/;"	d
err	obj/user/hello.asm	/^err:$/;"	l
err	obj/user/httpd.asm	/^				err = -err;$/;"	d
err	obj/user/httpd.asm	/^			err = va_arg(aq, int);$/;"	d
err	obj/user/httpd.asm	/^err:$/;"	l
err	obj/user/icode.asm	/^				err = -err;$/;"	d
err	obj/user/icode.asm	/^			err = va_arg(aq, int);$/;"	d
err	obj/user/icode.asm	/^err:$/;"	l
err	obj/user/idle.asm	/^				err = -err;$/;"	d
err	obj/user/idle.asm	/^			err = va_arg(aq, int);$/;"	d
err	obj/user/idle.asm	/^err:$/;"	l
err	obj/user/init.asm	/^				err = -err;$/;"	d
err	obj/user/init.asm	/^			err = va_arg(aq, int);$/;"	d
err	obj/user/init.asm	/^err:$/;"	l
err	obj/user/pingpong.asm	/^				err = -err;$/;"	d
err	obj/user/pingpong.asm	/^			err = va_arg(aq, int);$/;"	d
err	obj/user/pingpong.asm	/^err:$/;"	l
err	obj/user/primes.asm	/^				err = -err;$/;"	d
err	obj/user/primes.asm	/^			err = va_arg(aq, int);$/;"	d
err	obj/user/primes.asm	/^err:$/;"	l
err	obj/user/testfile.asm	/^				err = -err;$/;"	d
err	obj/user/testfile.asm	/^			err = va_arg(aq, int);$/;"	d
err	obj/user/testfile.asm	/^err:$/;"	l
err	obj/user/testtime.asm	/^				err = -err;$/;"	d
err	obj/user/testtime.asm	/^			err = va_arg(aq, int);$/;"	d
err	obj/user/testtime.asm	/^err:$/;"	l
err	obj/user/writemotd.asm	/^				err = -err;$/;"	d
err	obj/user/writemotd.asm	/^			err = va_arg(aq, int);$/;"	d
err	obj/user/writemotd.asm	/^err:$/;"	l
errCode	net/lwip/netif/ppp/ppp.c	/^  int  errCode;                 \/* Code indicating why interface is down. *\/$/;"	m	struct:PPPControl_s	file:
err_strerr	net/lwip/api/err.c	/^static const char *err_strerr[] = {$/;"	v	file:
err_t	net/lwip/include/lwip/err.h	/^ typedef s8_t err_t;$/;"	t
err_t	net/lwip/include/lwip/err.h	/^typedef LWIP_ERR_T err_t;$/;"	t
err_t	obj/net/ns.asm	/^err_t $/;"	l
err_t	obj/net/ns.asm	/^err_t$/;"	l
err_tcp	net/lwip/api/api_msg.c	/^err_tcp(void *arg, err_t err)$/;"	f	file:
err_to_errno	net/lwip/api/sockets.c	148;"	d	file:
err_to_errno_table	net/lwip/api/sockets.c	/^static const int err_to_errno_table[] = {$/;"	v	file:
errf	net/lwip/include/lwip/tcp.h	/^  void (* errf)(void *arg, err_t err);$/;"	m	struct:tcp_pcb
errf	obj/net/ns.asm	/^    errf = pcb->errf;$/;"	d
errf_arg	obj/net/ns.asm	/^    errf_arg = pcb->callback_arg;$/;"	d
erridxlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t erridxlen;$/;"	m	struct:snmp_resp_header_lengths
erridxlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t erridxlenlen;$/;"	m	struct:snmp_resp_header_lengths
errno	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
errno	net/serv.c	/^int errno;$/;"	v
error	lib/fprintf.c	/^	int error;	\/\/ first error that occurred$/;"	m	struct:printbuf	file:
error	obj/user/icode.asm	/^error:$/;"	l
error_index	net/lwip/include/lwip/snmp_msg.h	/^  s32_t error_index;$/;"	m	struct:snmp_msg_pstat
error_messages	user/httpd.c	/^struct error_messages {$/;"	s	file:
error_status	net/lwip/include/lwip/snmp_msg.h	/^  s32_t error_status;$/;"	m	struct:snmp_msg_pstat
error_string	lib/printfmt.c	/^static const char * const error_string[MAXERROR] =$/;"	v	file:
errors	kern/e1000.h	/^        uint8_t errors;$/;"	m	struct:rcv_desc
errors	user/httpd.c	/^struct error_messages errors[] = {$/;"	v	typeref:struct:error_messages
errstatlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t errstatlen;$/;"	m	struct:snmp_resp_header_lengths
errstatlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t errstatlenlen;$/;"	m	struct:snmp_resp_header_lengths
errtfunc	net/lwip/include/lwip/netifapi.h	/^      err_t (* errtfunc)(struct netif *netif);$/;"	m	struct:netifapi_msg_msg::__anon20::__anon22
esp	user/faultregs.c	/^	uintptr_t esp;$/;"	m	struct:regs	file:
eth_addr	net/lwip/include/netif/etharp.h	/^struct eth_addr {$/;"	s
eth_addr_cmp	net/lwip/include/netif/etharp.h	165;"	d
eth_hdr	net/lwip/include/netif/etharp.h	/^struct eth_hdr {$/;"	s
ethaddr	net/lwip/jos/jif/jif.c	/^    struct eth_addr *ethaddr;$/;"	m	struct:jif	typeref:struct:jif::eth_addr	file:
ethaddr	net/lwip/netif/etharp.c	/^  struct eth_addr ethaddr;$/;"	m	struct:etharp_entry	typeref:struct:etharp_entry::eth_addr	file:
etharp	net/lwip/include/lwip/stats.h	/^  struct stats_proto etharp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
etharp_arp_input	net/lwip/netif/etharp.c	/^etharp_arp_input(struct netif *netif, struct eth_addr *ethaddr, struct pbuf *p)$/;"	f
etharp_cached_entry	net/lwip/netif/etharp.c	/^static u8_t etharp_cached_entry;$/;"	v	file:
etharp_cached_entry	obj/net/ns.asm	/^        etharp_cached_entry = i;$/;"	d
etharp_cached_entry	obj/net/ns.asm	/^  etharp_cached_entry = i;$/;"	d
etharp_entry	net/lwip/netif/etharp.c	/^struct etharp_entry {$/;"	s	file:
etharp_find_addr	net/lwip/netif/etharp.c	/^etharp_find_addr(struct netif *netif, struct ip_addr *ipaddr,$/;"	f
etharp_hdr	net/lwip/include/netif/etharp.h	/^struct etharp_hdr {$/;"	s
etharp_init	net/lwip/include/netif/etharp.h	144;"	d
etharp_ip_input	net/lwip/netif/etharp.c	/^etharp_ip_input(struct netif *netif, struct pbuf *p)$/;"	f
etharp_output	net/lwip/netif/etharp.c	/^etharp_output(struct netif *netif, struct pbuf *q, struct ip_addr *ipaddr)$/;"	f
etharp_q_entry	net/lwip/include/netif/etharp.h	/^struct etharp_q_entry {$/;"	s
etharp_query	net/lwip/netif/etharp.c	/^etharp_query(struct netif *netif, struct ip_addr *ipaddr, struct pbuf *q)$/;"	f
etharp_raw	net/lwip/netif/etharp.c	/^etharp_raw(struct netif *netif, const struct eth_addr *ethsrc_addr,$/;"	f	file:
etharp_request	net/lwip/netif/etharp.c	/^etharp_request(struct netif *netif, struct ip_addr *ipaddr)$/;"	f
etharp_send_ip	net/lwip/netif/etharp.c	/^etharp_send_ip(struct netif *netif, struct pbuf *p, struct eth_addr *src, struct eth_addr *dst)$/;"	f	file:
etharp_state	net/lwip/netif/etharp.c	/^enum etharp_state {$/;"	g	file:
etharp_tmr	net/lwip/netif/etharp.c	/^etharp_tmr(void)$/;"	f
ethbroadcast	net/lwip/netif/etharp.c	/^const struct eth_addr ethbroadcast = {{0xff,0xff,0xff,0xff,0xff,0xff}};$/;"	v	typeref:struct:eth_addr
ethdst_hwaddr	obj/net/ns.asm	/^      ethdst_hwaddr = ((netif->autoip != NULL) && (netif->autoip->state != AUTOIP_STATE_OFF)) ? (u8_t*)(ethbroadcast.addr) : hdr->shwaddr.addr;$/;"	d
ethdst_hwaddr	obj/net/ns.asm	/^  ethdst_hwaddr = ((netif->autoip != NULL) && (netif->autoip->state != AUTOIP_STATE_OFF)) ? (u8_t*)(ethbroadcast.addr) : ethdst_addr->addr;$/;"	d
ethernet_input	net/lwip/netif/etharp.c	/^ethernet_input(struct pbuf *p, struct netif *netif)$/;"	f
ethhdr	obj/net/ns.asm	/^    ethhdr = p->payload;$/;"	d
ethhdr	obj/net/ns.asm	/^  ethhdr = p->payload;$/;"	d
ethif	net/lwip/netif/ppp/ppp.c	/^  struct netif *ethif;$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::netif	file:
ethip_hdr	net/lwip/include/netif/etharp.h	/^struct ethip_hdr {$/;"	s
ethzero	net/lwip/netif/etharp.c	/^const struct eth_addr ethzero = {{0,0,0,0,0,0}};$/;"	v	typeref:struct:eth_addr
event_callback	net/lwip/api/sockets.c	/^event_callback(struct netconn *conn, enum netconn_evt evt, u16_t len)$/;"	f	file:
exceptset	net/lwip/api/sockets.c	/^  fd_set *exceptset;$/;"	m	struct:lwip_select_cb	file:
exit	lib/exit.c	/^exit(void)$/;"	f
explicit_remote	net/lwip/netif/ppp/ppp.h	/^  u_int  explicit_remote   : 1;       \/* remote_name specified with remotename opt *\/$/;"	m	struct:ppp_settings
ext_accm	net/lwip/netif/ppp/ppp.h	/^typedef u_char  ext_accm[32];$/;"	t
ext_mib_node	net/lwip/include/lwip/snmp_msg.h	/^  struct mib_external_node *ext_mib_node;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::mib_external_node
ext_name_ptr	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_name_ptr ext_name_ptr;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_name_ptr
ext_object_def	net/lwip/include/lwip/snmp_msg.h	/^  struct obj_def ext_object_def;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::obj_def
ext_oid	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_obj_id ext_oid;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_obj_id
extcode	net/lwip/netif/ppp/fsm.h	/^  int  (*extcode)(fsm*, int, u_char, u_char*, int); \/* Called when unknown code received *\/$/;"	m	struct:fsm_callbacks
extern	obj/kern/kernel.asm	/^	extern struct Segdesc gdt[];$/;"	t
extern	obj/kern/kernel.asm	/^extern struct spinlock kernel_lock;$/;"	t
extern	obj/kern/kernel.asm	/^extern uint32_t traphandler[];$/;"	l
extern	obj/net/ns.asm	/^extern union Nsipc nsipcbuf;$/;"	l
extern	obj/net/testinput.asm	/^extern union Nsipc nsipcbuf;$/;"	l
extern	obj/net/testoutput.asm	/^extern union Nsipc nsipcbuf;$/;"	l
f	fs/fsformat.c	/^	struct File *f;$/;"	m	struct:Dir	typeref:struct:Dir::File	file:
f	net/lwip/include/lwip/tcpip.h	/^      void (*f)(void *ctx);$/;"	m	struct:tcpip_msg::__anon33::__anon35
f	obj/fs/fs.asm	/^		f = (struct File*) blk;$/;"	d
f	obj/fs/fs.asm	/^	f = &super->s_root;$/;"	d
f	obj/fs/fs.asm	/^	f = (struct File*) blk;$/;"	d
f0100000	obj/kern/kernel.asm	/^    f0100000:	02 b0 ad 1b 00 00    	add    0x1bad(%rax),%dh$/;"	l
f0100006	obj/kern/kernel.asm	/^    f0100006:	00 00                	add    %al,(%rax)$/;"	l
f0100008	obj/kern/kernel.asm	/^    f0100008:	fe 4f 52             	decb   0x52(%rdi)$/;"	l
f010000b	obj/kern/kernel.asm	/^    f010000b:	e4 66                	in     $0x66,%al$/;"	l
f010000c	obj/kern/kernel.asm	/^    f010000c:	66 c7 04 25 72 04 00 	movw   $0x1234,0x472$/;"	l
f0100013	obj/kern/kernel.asm	/^    f0100013:	00 34 12 $/;"	l
f0100016	obj/kern/kernel.asm	/^    f0100016:	48 b8 38 00 13 f0 00 	mov    $0xf0130038,%rax$/;"	l
f010001d	obj/kern/kernel.asm	/^    f010001d:	00 00 00 $/;"	l
f0100020	obj/kern/kernel.asm	/^    f0100020:	0f 01 10             	lgdt   (%rax)$/;"	l
f0100023	obj/kern/kernel.asm	/^    f0100023:	66 b8 10 00          	mov    $0x10,%ax$/;"	l
f0100027	obj/kern/kernel.asm	/^    f0100027:	8e d8                	mov    %eax,%ds$/;"	l
f0100029	obj/kern/kernel.asm	/^    f0100029:	8e d0                	mov    %eax,%ss$/;"	l
f010002b	obj/kern/kernel.asm	/^    f010002b:	8e e0                	mov    %eax,%fs$/;"	l
f010002d	obj/kern/kernel.asm	/^    f010002d:	8e e8                	mov    %eax,%gs$/;"	l
f010002f	obj/kern/kernel.asm	/^    f010002f:	8e c0                	mov    %eax,%es$/;"	l
f0100031	obj/kern/kernel.asm	/^    f0100031:	6a 08                	pushq  $0x8$/;"	l
f0100033	obj/kern/kernel.asm	/^    f0100033:	48 b8 40 00 10 f0 00 	mov    $0xf0100040,%rax$/;"	l
f010003a	obj/kern/kernel.asm	/^    f010003a:	00 00 00 $/;"	l
f010003d	obj/kern/kernel.asm	/^    f010003d:	50                   	push   %rax$/;"	l
f010003e	obj/kern/kernel.asm	/^    f010003e:	48 cb                	lretq  $/;"	l
f0100040	obj/kern/kernel.asm	/^    f0100040:	48 c7 c5 00 00 00 00 	mov    $0x0,%rbp$/;"	l
f0100047	obj/kern/kernel.asm	/^    f0100047:	48 b8 00 00 13 f0 00 	mov    $0xf0130000,%rax$/;"	l
f010004e	obj/kern/kernel.asm	/^    f010004e:	00 00 00 $/;"	l
f0100051	obj/kern/kernel.asm	/^    f0100051:	48 89 c4             	mov    %rax,%rsp$/;"	l
f0100054	obj/kern/kernel.asm	/^    f0100054:	e8 44 00 00 00       	callq  fffffffff010009d <end+0xfffffffefe65ecfd>$/;"	l
f0100059	obj/kern/kernel.asm	/^    f0100059:	eb fe                	jmp    fffffffff0100059 <end+0xfffffffefe65ecb9>$/;"	l
f010005c	obj/kern/kernel.asm	/^    f010005c:	55                   	push   %rbp$/;"	l
f010005d	obj/kern/kernel.asm	/^    f010005d:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f0100060	obj/kern/kernel.asm	/^    f0100060:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
f0100064	obj/kern/kernel.asm	/^    f0100064:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
f0100068	obj/kern/kernel.asm	/^    f0100068:	89 75 e4             	mov    %esi,-0x1c(%rbp)$/;"	l
f010006b	obj/kern/kernel.asm	/^    f010006b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
f010006f	obj/kern/kernel.asm	/^    f010006f:	8b 45 e4             	mov    -0x1c(%rbp),%eax$/;"	l
f0100072	obj/kern/kernel.asm	/^    f0100072:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx$/;"	l
f0100076	obj/kern/kernel.asm	/^    f0100076:	f0 87 02             	lock xchg %eax,(%rdx)$/;"	l
f0100079	obj/kern/kernel.asm	/^    f0100079:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
f010007c	obj/kern/kernel.asm	/^    f010007c:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
f010007f	obj/kern/kernel.asm	/^    f010007f:	c9                   	leaveq $/;"	l
f0100080	obj/kern/kernel.asm	/^    f0100080:	c3                   	retq   $/;"	l
f0100081	obj/kern/kernel.asm	/^    f0100081:	55                   	push   %rbp$/;"	l
f0100082	obj/kern/kernel.asm	/^    f0100082:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f0100085	obj/kern/kernel.asm	/^    f0100085:	48 bf 80 06 13 f0 00 	mov    $0xf0130680,%rdi$/;"	l
f010008c	obj/kern/kernel.asm	/^    f010008c:	00 00 00 $/;"	l
f010008f	obj/kern/kernel.asm	/^    f010008f:	48 b8 da 00 11 f0 00 	mov    $0xf01100da,%rax$/;"	l
f0100096	obj/kern/kernel.asm	/^    f0100096:	00 00 00 $/;"	l
f0100099	obj/kern/kernel.asm	/^    f0100099:	ff d0                	callq  *%rax$/;"	l
f010009b	obj/kern/kernel.asm	/^    f010009b:	c9                   	leaveq $/;"	l
f010009c	obj/kern/kernel.asm	/^    f010009c:	c3                   	retq   $/;"	l
f010009d	obj/kern/kernel.asm	/^    f010009d:	55                   	push   %rbp$/;"	l
f010009e	obj/kern/kernel.asm	/^    f010009e:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f01000a1	obj/kern/kernel.asm	/^    f01000a1:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
f01000a5	obj/kern/kernel.asm	/^    f01000a5:	48 ba a0 13 aa f1 00 	mov    $0xf1aa13a0,%rdx$/;"	l
f01000ac	obj/kern/kernel.asm	/^    f01000ac:	00 00 00 $/;"	l
f01000af	obj/kern/kernel.asm	/^    f01000af:	48 b8 41 54 a2 f1 00 	mov    $0xf1a25441,%rax$/;"	l
f01000b6	obj/kern/kernel.asm	/^    f01000b6:	00 00 00 $/;"	l
f01000b9	obj/kern/kernel.asm	/^    f01000b9:	48 89 d1             	mov    %rdx,%rcx$/;"	l
f01000bc	obj/kern/kernel.asm	/^    f01000bc:	48 29 c1             	sub    %rax,%rcx$/;"	l
f01000bf	obj/kern/kernel.asm	/^    f01000bf:	48 89 c8             	mov    %rcx,%rax$/;"	l
f01000c2	obj/kern/kernel.asm	/^    f01000c2:	48 89 c2             	mov    %rax,%rdx$/;"	l
f01000c5	obj/kern/kernel.asm	/^    f01000c5:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01000ca	obj/kern/kernel.asm	/^    f01000ca:	48 bf 41 54 a2 f1 00 	mov    $0xf1a25441,%rdi$/;"	l
f01000d1	obj/kern/kernel.asm	/^    f01000d1:	00 00 00 $/;"	l
f01000d4	obj/kern/kernel.asm	/^    f01000d4:	48 b8 42 ee 10 f0 00 	mov    $0xf010ee42,%rax$/;"	l
f01000db	obj/kern/kernel.asm	/^    f01000db:	00 00 00 $/;"	l
f01000de	obj/kern/kernel.asm	/^    f01000de:	ff d0                	callq  *%rax$/;"	l
f01000e0	obj/kern/kernel.asm	/^    f01000e0:	48 b8 1e 12 10 f0 00 	mov    $0xf010121e,%rax$/;"	l
f01000e7	obj/kern/kernel.asm	/^    f01000e7:	00 00 00 $/;"	l
f01000ea	obj/kern/kernel.asm	/^    f01000ea:	ff d0                	callq  *%rax$/;"	l
f01000ec	obj/kern/kernel.asm	/^    f01000ec:	be ac 1a 00 00       	mov    $0x1aac,%esi$/;"	l
f01000f1	obj/kern/kernel.asm	/^    f01000f1:	48 bf e0 14 11 f0 00 	mov    $0xf01114e0,%rdi$/;"	l
f01000f8	obj/kern/kernel.asm	/^    f01000f8:	00 00 00 $/;"	l
f01000fb	obj/kern/kernel.asm	/^    f01000fb:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100100	obj/kern/kernel.asm	/^    f0100100:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f0100107	obj/kern/kernel.asm	/^    f0100107:	00 00 00 $/;"	l
f010010a	obj/kern/kernel.asm	/^    f010010a:	ff d2                	callq  *%rdx$/;"	l
f010010c	obj/kern/kernel.asm	/^    f010010c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100111	obj/kern/kernel.asm	/^    f0100111:	48 ba 2d 1d 10 f0 00 	mov    $0xf0101d2d,%rdx$/;"	l
f0100118	obj/kern/kernel.asm	/^    f0100118:	00 00 00 $/;"	l
f010011b	obj/kern/kernel.asm	/^    f010011b:	ff d2                	callq  *%rdx$/;"	l
f010011d	obj/kern/kernel.asm	/^    f010011d:	48 b8 a7 71 10 f0 00 	mov    $0xf01071a7,%rax$/;"	l
f0100124	obj/kern/kernel.asm	/^    f0100124:	00 00 00 $/;"	l
f0100127	obj/kern/kernel.asm	/^    f0100127:	ff d0                	callq  *%rax$/;"	l
f0100129	obj/kern/kernel.asm	/^    f0100129:	48 b8 67 8a 10 f0 00 	mov    $0xf0108a67,%rax$/;"	l
f0100130	obj/kern/kernel.asm	/^    f0100130:	00 00 00 $/;"	l
f0100133	obj/kern/kernel.asm	/^    f0100133:	ff d0                	callq  *%rax$/;"	l
f0100135	obj/kern/kernel.asm	/^    f0100135:	48 b8 1e f8 10 f0 00 	mov    $0xf010f81e,%rax$/;"	l
f010013c	obj/kern/kernel.asm	/^    f010013c:	00 00 00 $/;"	l
f010013f	obj/kern/kernel.asm	/^    f010013f:	ff d0                	callq  *%rax$/;"	l
f0100141	obj/kern/kernel.asm	/^    f0100141:	48 b8 63 fb 10 f0 00 	mov    $0xf010fb63,%rax$/;"	l
f0100148	obj/kern/kernel.asm	/^    f0100148:	00 00 00 $/;"	l
f010014b	obj/kern/kernel.asm	/^    f010014b:	ff d0                	callq  *%rax$/;"	l
f010014d	obj/kern/kernel.asm	/^    f010014d:	48 b8 dc 85 10 f0 00 	mov    $0xf01085dc,%rax$/;"	l
f0100154	obj/kern/kernel.asm	/^    f0100154:	00 00 00 $/;"	l
f0100157	obj/kern/kernel.asm	/^    f0100157:	ff d0                	callq  *%rax$/;"	l
f0100159	obj/kern/kernel.asm	/^    f0100159:	48 b8 24 14 11 f0 00 	mov    $0xf0111424,%rax$/;"	l
f0100160	obj/kern/kernel.asm	/^    f0100160:	00 00 00 $/;"	l
f0100163	obj/kern/kernel.asm	/^    f0100163:	ff d0                	callq  *%rax$/;"	l
f0100165	obj/kern/kernel.asm	/^    f0100165:	48 b8 e8 13 11 f0 00 	mov    $0xf01113e8,%rax$/;"	l
f010016c	obj/kern/kernel.asm	/^    f010016c:	00 00 00 $/;"	l
f010016f	obj/kern/kernel.asm	/^    f010016f:	ff d0                	callq  *%rax$/;"	l
f0100171	obj/kern/kernel.asm	/^    f0100171:	48 b8 81 00 10 f0 00 	mov    $0xf0100081,%rax$/;"	l
f0100178	obj/kern/kernel.asm	/^    f0100178:	00 00 00 $/;"	l
f010017b	obj/kern/kernel.asm	/^    f010017b:	ff d0                	callq  *%rax$/;"	l
f010017d	obj/kern/kernel.asm	/^    f010017d:	48 b8 50 02 10 f0 00 	mov    $0xf0100250,%rax$/;"	l
f0100184	obj/kern/kernel.asm	/^    f0100184:	00 00 00 $/;"	l
f0100187	obj/kern/kernel.asm	/^    f0100187:	ff d0                	callq  *%rax$/;"	l
f0100189	obj/kern/kernel.asm	/^    f0100189:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
f0100190	obj/kern/kernel.asm	/^    f0100190:	eb 2e                	jmp    fffffffff01001c0 <end+0xfffffffefe65ee20>$/;"	l
f0100192	obj/kern/kernel.asm	/^    f0100192:	48 b8 69 55 20 00 00 	mov    $0x205569,%rax$/;"	l
f0100199	obj/kern/kernel.asm	/^    f0100199:	00 00 00 $/;"	l
f010019c	obj/kern/kernel.asm	/^    f010019c:	48 98                	cltq   $/;"	l
f010019e	obj/kern/kernel.asm	/^    f010019e:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
f01001a3	obj/kern/kernel.asm	/^    f01001a3:	48 89 c6             	mov    %rax,%rsi$/;"	l
f01001a6	obj/kern/kernel.asm	/^    f01001a6:	48 bf 64 5d d5 f0 00 	mov    $0xf0d55d64,%rdi$/;"	l
f01001ad	obj/kern/kernel.asm	/^    f01001ad:	00 00 00 $/;"	l
f01001b0	obj/kern/kernel.asm	/^    f01001b0:	48 b8 20 7d 10 f0 00 	mov    $0xf0107d20,%rax$/;"	l
f01001b7	obj/kern/kernel.asm	/^    f01001b7:	00 00 00 $/;"	l
f01001ba	obj/kern/kernel.asm	/^    f01001ba:	ff d0                	callq  *%rax$/;"	l
f01001bc	obj/kern/kernel.asm	/^    f01001bc:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
f01001c0	obj/kern/kernel.asm	/^    f01001c0:	83 7d fc 07          	cmpl   $0x7,-0x4(%rbp)$/;"	l
f01001c4	obj/kern/kernel.asm	/^    f01001c4:	7e cc                	jle    fffffffff0100192 <end+0xfffffffefe65edf2>$/;"	l
f01001c6	obj/kern/kernel.asm	/^    f01001c6:	48 b8 c4 2f 02 00 00 	mov    $0x22fc4,%rax$/;"	l
f01001cd	obj/kern/kernel.asm	/^    f01001cd:	00 00 00 $/;"	l
f01001d0	obj/kern/kernel.asm	/^    f01001d0:	48 98                	cltq   $/;"	l
f01001d2	obj/kern/kernel.asm	/^    f01001d2:	ba 02 00 00 00       	mov    $0x2,%edx$/;"	l
f01001d7	obj/kern/kernel.asm	/^    f01001d7:	48 89 c6             	mov    %rax,%rsi$/;"	l
f01001da	obj/kern/kernel.asm	/^    f01001da:	48 bf 37 08 16 f1 00 	mov    $0xf1160837,%rdi$/;"	l
f01001e1	obj/kern/kernel.asm	/^    f01001e1:	00 00 00 $/;"	l
f01001e4	obj/kern/kernel.asm	/^    f01001e4:	48 b8 20 7d 10 f0 00 	mov    $0xf0107d20,%rax$/;"	l
f01001eb	obj/kern/kernel.asm	/^    f01001eb:	00 00 00 $/;"	l
f01001ee	obj/kern/kernel.asm	/^    f01001ee:	ff d0                	callq  *%rax$/;"	l
f01001f0	obj/kern/kernel.asm	/^    f01001f0:	48 b8 c1 ec 05 00 00 	mov    $0x5ecc1,%rax$/;"	l
f01001f7	obj/kern/kernel.asm	/^    f01001f7:	00 00 00 $/;"	l
f01001fa	obj/kern/kernel.asm	/^    f01001fa:	48 98                	cltq   $/;"	l
f01001fc	obj/kern/kernel.asm	/^    f01001fc:	ba 03 00 00 00       	mov    $0x3,%edx$/;"	l
f0100201	obj/kern/kernel.asm	/^    f0100201:	48 89 c6             	mov    %rax,%rsi$/;"	l
f0100204	obj/kern/kernel.asm	/^    f0100204:	48 bf 80 67 9c f1 00 	mov    $0xf19c6780,%rdi$/;"	l
f010020b	obj/kern/kernel.asm	/^    f010020b:	00 00 00 $/;"	l
f010020e	obj/kern/kernel.asm	/^    f010020e:	48 b8 20 7d 10 f0 00 	mov    $0xf0107d20,%rax$/;"	l
f0100215	obj/kern/kernel.asm	/^    f0100215:	00 00 00 $/;"	l
f0100218	obj/kern/kernel.asm	/^    f0100218:	ff d0                	callq  *%rax$/;"	l
f010021a	obj/kern/kernel.asm	/^    f010021a:	48 b8 8b 55 20 00 00 	mov    $0x20558b,%rax$/;"	l
f0100221	obj/kern/kernel.asm	/^    f0100221:	00 00 00 $/;"	l
f0100224	obj/kern/kernel.asm	/^    f0100224:	48 98                	cltq   $/;"	l
f0100226	obj/kern/kernel.asm	/^    f0100226:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010022b	obj/kern/kernel.asm	/^    f010022b:	48 89 c6             	mov    %rax,%rsi$/;"	l
f010022e	obj/kern/kernel.asm	/^    f010022e:	48 bf fb 37 18 f1 00 	mov    $0xf11837fb,%rdi$/;"	l
f0100235	obj/kern/kernel.asm	/^    f0100235:	00 00 00 $/;"	l
f0100238	obj/kern/kernel.asm	/^    f0100238:	48 b8 20 7d 10 f0 00 	mov    $0xf0107d20,%rax$/;"	l
f010023f	obj/kern/kernel.asm	/^    f010023f:	00 00 00 $/;"	l
f0100242	obj/kern/kernel.asm	/^    f0100242:	ff d0                	callq  *%rax$/;"	l
f0100244	obj/kern/kernel.asm	/^    f0100244:	48 b8 40 c8 10 f0 00 	mov    $0xf010c840,%rax$/;"	l
f010024b	obj/kern/kernel.asm	/^    f010024b:	00 00 00 $/;"	l
f010024e	obj/kern/kernel.asm	/^    f010024e:	ff d0                	callq  *%rax$/;"	l
f0100250	obj/kern/kernel.asm	/^    f0100250:	55                   	push   %rbp$/;"	l
f0100251	obj/kern/kernel.asm	/^    f0100251:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f0100254	obj/kern/kernel.asm	/^    f0100254:	53                   	push   %rbx$/;"	l
f0100255	obj/kern/kernel.asm	/^    f0100255:	48 83 ec 38          	sub    $0x38,%rsp$/;"	l
f0100259	obj/kern/kernel.asm	/^    f0100259:	48 c7 45 d8 00 70 00 	movq   $0x7000,-0x28(%rbp)$/;"	l
f0100260	obj/kern/kernel.asm	/^    f0100260:	00 $/;"	l
f0100261	obj/kern/kernel.asm	/^    f0100261:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f0100265	obj/kern/kernel.asm	/^    f0100265:	48 c1 e8 0c          	shr    $0xc,%rax$/;"	l
f0100269	obj/kern/kernel.asm	/^    f0100269:	89 45 e4             	mov    %eax,-0x1c(%rbp)$/;"	l
f010026c	obj/kern/kernel.asm	/^    f010026c:	8b 55 e4             	mov    -0x1c(%rbp),%edx$/;"	l
f010026f	obj/kern/kernel.asm	/^    f010026f:	48 b8 68 77 a2 f1 00 	mov    $0xf1a27768,%rax$/;"	l
f0100276	obj/kern/kernel.asm	/^    f0100276:	00 00 00 $/;"	l
f0100279	obj/kern/kernel.asm	/^    f0100279:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010027c	obj/kern/kernel.asm	/^    f010027c:	48 39 c2             	cmp    %rax,%rdx$/;"	l
f010027f	obj/kern/kernel.asm	/^    f010027f:	72 31                	jb     fffffffff01002b2 <end+0xfffffffefe65ef12>$/;"	l
f0100281	obj/kern/kernel.asm	/^    f0100281:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f0100285	obj/kern/kernel.asm	/^    f0100285:	48 89 c1             	mov    %rax,%rcx$/;"	l
f0100288	obj/kern/kernel.asm	/^    f0100288:	48 ba 00 15 11 f0 00 	mov    $0xf0111500,%rdx$/;"	l
f010028f	obj/kern/kernel.asm	/^    f010028f:	00 00 00 $/;"	l
f0100292	obj/kern/kernel.asm	/^    f0100292:	be 7a 00 00 00       	mov    $0x7a,%esi$/;"	l
f0100297	obj/kern/kernel.asm	/^    f0100297:	48 bf 23 15 11 f0 00 	mov    $0xf0111523,%rdi$/;"	l
f010029e	obj/kern/kernel.asm	/^    f010029e:	00 00 00 $/;"	l
f01002a1	obj/kern/kernel.asm	/^    f01002a1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01002a6	obj/kern/kernel.asm	/^    f01002a6:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f01002ad	obj/kern/kernel.asm	/^    f01002ad:	00 00 00 $/;"	l
f01002b0	obj/kern/kernel.asm	/^    f01002b0:	ff d3                	callq  *%rbx$/;"	l
f01002b2	obj/kern/kernel.asm	/^    f01002b2:	b8 00 00 00 f0       	mov    $0xf0000000,%eax$/;"	l
f01002b7	obj/kern/kernel.asm	/^    f01002b7:	48 03 45 d8          	add    -0x28(%rbp),%rax$/;"	l
f01002bb	obj/kern/kernel.asm	/^    f01002bb:	48 89 45 c8          	mov    %rax,-0x38(%rbp)$/;"	l
f01002bf	obj/kern/kernel.asm	/^    f01002bf:	48 ba 5e f3 10 f0 00 	mov    $0xf010f35e,%rdx$/;"	l
f01002c6	obj/kern/kernel.asm	/^    f01002c6:	00 00 00 $/;"	l
f01002c9	obj/kern/kernel.asm	/^    f01002c9:	48 b8 78 f2 10 f0 00 	mov    $0xf010f278,%rax$/;"	l
f01002d0	obj/kern/kernel.asm	/^    f01002d0:	00 00 00 $/;"	l
f01002d3	obj/kern/kernel.asm	/^    f01002d3:	48 89 d1             	mov    %rdx,%rcx$/;"	l
f01002d6	obj/kern/kernel.asm	/^    f01002d6:	48 29 c1             	sub    %rax,%rcx$/;"	l
f01002d9	obj/kern/kernel.asm	/^    f01002d9:	48 89 c8             	mov    %rcx,%rax$/;"	l
f01002dc	obj/kern/kernel.asm	/^    f01002dc:	48 89 c2             	mov    %rax,%rdx$/;"	l
f01002df	obj/kern/kernel.asm	/^    f01002df:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f01002e3	obj/kern/kernel.asm	/^    f01002e3:	48 be 78 f2 10 f0 00 	mov    $0xf010f278,%rsi$/;"	l
f01002ea	obj/kern/kernel.asm	/^    f01002ea:	00 00 00 $/;"	l
f01002ed	obj/kern/kernel.asm	/^    f01002ed:	48 89 c7             	mov    %rax,%rdi$/;"	l
f01002f0	obj/kern/kernel.asm	/^    f01002f0:	48 b8 cd ee 10 f0 00 	mov    $0xf010eecd,%rax$/;"	l
f01002f7	obj/kern/kernel.asm	/^    f01002f7:	00 00 00 $/;"	l
f01002fa	obj/kern/kernel.asm	/^    f01002fa:	ff d0                	callq  *%rax$/;"	l
f01002fc	obj/kern/kernel.asm	/^    f01002fc:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f0100303	obj/kern/kernel.asm	/^    f0100303:	00 00 00 $/;"	l
f0100306	obj/kern/kernel.asm	/^    f0100306:	48 89 45 d0          	mov    %rax,-0x30(%rbp)$/;"	l
f010030a	obj/kern/kernel.asm	/^    f010030a:	e9 07 01 00 00       	jmpq   fffffffff0100416 <end+0xfffffffefe65f076>$/;"	l
f010030f	obj/kern/kernel.asm	/^    f010030f:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f0100316	obj/kern/kernel.asm	/^    f0100316:	00 00 00 $/;"	l
f0100319	obj/kern/kernel.asm	/^    f0100319:	ff d0                	callq  *%rax$/;"	l
f010031b	obj/kern/kernel.asm	/^    f010031b:	48 98                	cltq   $/;"	l
f010031d	obj/kern/kernel.asm	/^    f010031d:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f0100321	obj/kern/kernel.asm	/^    f0100321:	48 89 c2             	mov    %rax,%rdx$/;"	l
f0100324	obj/kern/kernel.asm	/^    f0100324:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f0100328	obj/kern/kernel.asm	/^    f0100328:	48 29 c2             	sub    %rax,%rdx$/;"	l
f010032b	obj/kern/kernel.asm	/^    f010032b:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f0100332	obj/kern/kernel.asm	/^    f0100332:	00 00 00 $/;"	l
f0100335	obj/kern/kernel.asm	/^    f0100335:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f0100339	obj/kern/kernel.asm	/^    f0100339:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax$/;"	l
f010033d	obj/kern/kernel.asm	/^    f010033d:	0f 84 cd 00 00 00    	je     fffffffff0100410 <end+0xfffffffefe65f070>$/;"	l
f0100343	obj/kern/kernel.asm	/^    f0100343:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx$/;"	l
f0100347	obj/kern/kernel.asm	/^    f0100347:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f010034e	obj/kern/kernel.asm	/^    f010034e:	00 00 00 $/;"	l
f0100351	obj/kern/kernel.asm	/^    f0100351:	48 89 d1             	mov    %rdx,%rcx$/;"	l
f0100354	obj/kern/kernel.asm	/^    f0100354:	48 29 c1             	sub    %rax,%rcx$/;"	l
f0100357	obj/kern/kernel.asm	/^    f0100357:	48 89 c8             	mov    %rcx,%rax$/;"	l
f010035a	obj/kern/kernel.asm	/^    f010035a:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010035d	obj/kern/kernel.asm	/^    f010035d:	48 c1 fa 03          	sar    $0x3,%rdx$/;"	l
f0100361	obj/kern/kernel.asm	/^    f0100361:	48 b8 ef ee ee ee ee 	mov    $0xeeeeeeeeeeeeeeef,%rax$/;"	l
f0100368	obj/kern/kernel.asm	/^    f0100368:	ee ee ee $/;"	l
f010036b	obj/kern/kernel.asm	/^    f010036b:	48 0f af c2          	imul   %rdx,%rax$/;"	l
f010036f	obj/kern/kernel.asm	/^    f010036f:	48 83 c0 01          	add    $0x1,%rax$/;"	l
f0100373	obj/kern/kernel.asm	/^    f0100373:	48 89 c2             	mov    %rax,%rdx$/;"	l
f0100376	obj/kern/kernel.asm	/^    f0100376:	48 c1 e2 0f          	shl    $0xf,%rdx$/;"	l
f010037a	obj/kern/kernel.asm	/^    f010037a:	48 b8 00 90 a2 f1 00 	mov    $0xf1a29000,%rax$/;"	l
f0100381	obj/kern/kernel.asm	/^    f0100381:	00 00 00 $/;"	l
f0100384	obj/kern/kernel.asm	/^    f0100384:	48 01 c2             	add    %rax,%rdx$/;"	l
f0100387	obj/kern/kernel.asm	/^    f0100387:	48 b8 50 77 a2 f1 00 	mov    $0xf1a27750,%rax$/;"	l
f010038e	obj/kern/kernel.asm	/^    f010038e:	00 00 00 $/;"	l
f0100391	obj/kern/kernel.asm	/^    f0100391:	48 89 10             	mov    %rdx,(%rax)$/;"	l
f0100394	obj/kern/kernel.asm	/^    f0100394:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f0100398	obj/kern/kernel.asm	/^    f0100398:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
f010039c	obj/kern/kernel.asm	/^    f010039c:	b8 ff ff ff ef       	mov    $0xefffffff,%eax$/;"	l
f01003a1	obj/kern/kernel.asm	/^    f01003a1:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)$/;"	l
f01003a5	obj/kern/kernel.asm	/^    f01003a5:	77 31                	ja     fffffffff01003d8 <end+0xfffffffefe65f038>$/;"	l
f01003a7	obj/kern/kernel.asm	/^    f01003a7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f01003ab	obj/kern/kernel.asm	/^    f01003ab:	48 89 c1             	mov    %rax,%rcx$/;"	l
f01003ae	obj/kern/kernel.asm	/^    f01003ae:	48 ba 30 15 11 f0 00 	mov    $0xf0111530,%rdx$/;"	l
f01003b5	obj/kern/kernel.asm	/^    f01003b5:	00 00 00 $/;"	l
f01003b8	obj/kern/kernel.asm	/^    f01003b8:	be 84 00 00 00       	mov    $0x84,%esi$/;"	l
f01003bd	obj/kern/kernel.asm	/^    f01003bd:	48 bf 23 15 11 f0 00 	mov    $0xf0111523,%rdi$/;"	l
f01003c4	obj/kern/kernel.asm	/^    f01003c4:	00 00 00 $/;"	l
f01003c7	obj/kern/kernel.asm	/^    f01003c7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01003cc	obj/kern/kernel.asm	/^    f01003cc:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f01003d3	obj/kern/kernel.asm	/^    f01003d3:	00 00 00 $/;"	l
f01003d6	obj/kern/kernel.asm	/^    f01003d6:	ff d3                	callq  *%rbx$/;"	l
f01003d8	obj/kern/kernel.asm	/^    f01003d8:	48 b8 00 00 00 10 ff 	mov    $0xffffffff10000000,%rax$/;"	l
f01003df	obj/kern/kernel.asm	/^    f01003df:	ff ff ff $/;"	l
f01003e2	obj/kern/kernel.asm	/^    f01003e2:	48 03 45 e8          	add    -0x18(%rbp),%rax$/;"	l
f01003e6	obj/kern/kernel.asm	/^    f01003e6:	89 c2                	mov    %eax,%edx$/;"	l
f01003e8	obj/kern/kernel.asm	/^    f01003e8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f01003ec	obj/kern/kernel.asm	/^    f01003ec:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f01003ef	obj/kern/kernel.asm	/^    f01003ef:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01003f2	obj/kern/kernel.asm	/^    f01003f2:	89 d6                	mov    %edx,%esi$/;"	l
f01003f4	obj/kern/kernel.asm	/^    f01003f4:	89 c7                	mov    %eax,%edi$/;"	l
f01003f6	obj/kern/kernel.asm	/^    f01003f6:	48 b8 d0 fd 10 f0 00 	mov    $0xf010fdd0,%rax$/;"	l
f01003fd	obj/kern/kernel.asm	/^    f01003fd:	00 00 00 $/;"	l
f0100400	obj/kern/kernel.asm	/^    f0100400:	ff d0                	callq  *%rax$/;"	l
f0100402	obj/kern/kernel.asm	/^    f0100402:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f0100406	obj/kern/kernel.asm	/^    f0100406:	8b 40 04             	mov    0x4(%rax),%eax$/;"	l
f0100409	obj/kern/kernel.asm	/^    f0100409:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f010040c	obj/kern/kernel.asm	/^    f010040c:	75 f4                	jne    fffffffff0100402 <end+0xfffffffefe65f062>$/;"	l
f010040e	obj/kern/kernel.asm	/^    f010040e:	eb 01                	jmp    fffffffff0100411 <end+0xfffffffefe65f071>$/;"	l
f0100410	obj/kern/kernel.asm	/^    f0100410:	90                   	nop$/;"	l
f0100411	obj/kern/kernel.asm	/^    f0100411:	48 83 45 d0 78       	addq   $0x78,-0x30(%rbp)$/;"	l
f0100416	obj/kern/kernel.asm	/^    f0100416:	48 b8 e8 83 a2 f1 00 	mov    $0xf1a283e8,%rax$/;"	l
f010041d	obj/kern/kernel.asm	/^    f010041d:	00 00 00 $/;"	l
f0100420	obj/kern/kernel.asm	/^    f0100420:	8b 00                	mov    (%rax),%eax$/;"	l
f0100422	obj/kern/kernel.asm	/^    f0100422:	48 98                	cltq   $/;"	l
f0100424	obj/kern/kernel.asm	/^    f0100424:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f0100428	obj/kern/kernel.asm	/^    f0100428:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010042b	obj/kern/kernel.asm	/^    f010042b:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f010042f	obj/kern/kernel.asm	/^    f010042f:	48 29 c2             	sub    %rax,%rdx$/;"	l
f0100432	obj/kern/kernel.asm	/^    f0100432:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f0100439	obj/kern/kernel.asm	/^    f0100439:	00 00 00 $/;"	l
f010043c	obj/kern/kernel.asm	/^    f010043c:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f0100440	obj/kern/kernel.asm	/^    f0100440:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax$/;"	l
f0100444	obj/kern/kernel.asm	/^    f0100444:	0f 87 c5 fe ff ff    	ja     fffffffff010030f <end+0xfffffffefe65ef6f>$/;"	l
f010044a	obj/kern/kernel.asm	/^    f010044a:	48 83 c4 38          	add    $0x38,%rsp$/;"	l
f010044e	obj/kern/kernel.asm	/^    f010044e:	5b                   	pop    %rbx$/;"	l
f010044f	obj/kern/kernel.asm	/^    f010044f:	c9                   	leaveq $/;"	l
f0100450	obj/kern/kernel.asm	/^    f0100450:	c3                   	retq   $/;"	l
f0100451	obj/kern/kernel.asm	/^    f0100451:	55                   	push   %rbp$/;"	l
f0100452	obj/kern/kernel.asm	/^    f0100452:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f0100455	obj/kern/kernel.asm	/^    f0100455:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
f0100459	obj/kern/kernel.asm	/^    f0100459:	48 b8 58 77 a2 f1 00 	mov    $0xf1a27758,%rax$/;"	l
f0100460	obj/kern/kernel.asm	/^    f0100460:	00 00 00 $/;"	l
f0100463	obj/kern/kernel.asm	/^    f0100463:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0100466	obj/kern/kernel.asm	/^    f0100466:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
f010046a	obj/kern/kernel.asm	/^    f010046a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f010046e	obj/kern/kernel.asm	/^    f010046e:	0f 22 d8             	mov    %rax,%cr3$/;"	l
f0100471	obj/kern/kernel.asm	/^    f0100471:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f0100478	obj/kern/kernel.asm	/^    f0100478:	00 00 00 $/;"	l
f010047b	obj/kern/kernel.asm	/^    f010047b:	ff d0                	callq  *%rax$/;"	l
f010047d	obj/kern/kernel.asm	/^    f010047d:	89 c6                	mov    %eax,%esi$/;"	l
f010047f	obj/kern/kernel.asm	/^    f010047f:	48 bf 54 15 11 f0 00 	mov    $0xf0111554,%rdi$/;"	l
f0100486	obj/kern/kernel.asm	/^    f0100486:	00 00 00 $/;"	l
f0100489	obj/kern/kernel.asm	/^    f0100489:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010048e	obj/kern/kernel.asm	/^    f010048e:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f0100495	obj/kern/kernel.asm	/^    f0100495:	00 00 00 $/;"	l
f0100498	obj/kern/kernel.asm	/^    f0100498:	ff d2                	callq  *%rdx$/;"	l
f010049a	obj/kern/kernel.asm	/^    f010049a:	48 b8 63 fb 10 f0 00 	mov    $0xf010fb63,%rax$/;"	l
f01004a1	obj/kern/kernel.asm	/^    f01004a1:	00 00 00 $/;"	l
f01004a4	obj/kern/kernel.asm	/^    f01004a4:	ff d0                	callq  *%rax$/;"	l
f01004a6	obj/kern/kernel.asm	/^    f01004a6:	48 b8 11 73 10 f0 00 	mov    $0xf0107311,%rax$/;"	l
f01004ad	obj/kern/kernel.asm	/^    f01004ad:	00 00 00 $/;"	l
f01004b0	obj/kern/kernel.asm	/^    f01004b0:	ff d0                	callq  *%rax$/;"	l
f01004b2	obj/kern/kernel.asm	/^    f01004b2:	48 b8 c9 b0 10 f0 00 	mov    $0xf010b0c9,%rax$/;"	l
f01004b9	obj/kern/kernel.asm	/^    f01004b9:	00 00 00 $/;"	l
f01004bc	obj/kern/kernel.asm	/^    f01004bc:	ff d0                	callq  *%rax$/;"	l
f01004be	obj/kern/kernel.asm	/^    f01004be:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f01004c5	obj/kern/kernel.asm	/^    f01004c5:	00 00 00 $/;"	l
f01004c8	obj/kern/kernel.asm	/^    f01004c8:	ff d0                	callq  *%rax$/;"	l
f01004ca	obj/kern/kernel.asm	/^    f01004ca:	48 98                	cltq   $/;"	l
f01004cc	obj/kern/kernel.asm	/^    f01004cc:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f01004d0	obj/kern/kernel.asm	/^    f01004d0:	48 89 c2             	mov    %rax,%rdx$/;"	l
f01004d3	obj/kern/kernel.asm	/^    f01004d3:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f01004d7	obj/kern/kernel.asm	/^    f01004d7:	48 29 c2             	sub    %rax,%rdx$/;"	l
f01004da	obj/kern/kernel.asm	/^    f01004da:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f01004e1	obj/kern/kernel.asm	/^    f01004e1:	00 00 00 $/;"	l
f01004e4	obj/kern/kernel.asm	/^    f01004e4:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f01004e8	obj/kern/kernel.asm	/^    f01004e8:	48 83 c0 04          	add    $0x4,%rax$/;"	l
f01004ec	obj/kern/kernel.asm	/^    f01004ec:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
f01004f1	obj/kern/kernel.asm	/^    f01004f1:	48 89 c7             	mov    %rax,%rdi$/;"	l
f01004f4	obj/kern/kernel.asm	/^    f01004f4:	48 b8 5c 00 10 f0 00 	mov    $0xf010005c,%rax$/;"	l
f01004fb	obj/kern/kernel.asm	/^    f01004fb:	00 00 00 $/;"	l
f01004fe	obj/kern/kernel.asm	/^    f01004fe:	ff d0                	callq  *%rax$/;"	l
f0100500	obj/kern/kernel.asm	/^    f0100500:	48 b8 81 00 10 f0 00 	mov    $0xf0100081,%rax$/;"	l
f0100507	obj/kern/kernel.asm	/^    f0100507:	00 00 00 $/;"	l
f010050a	obj/kern/kernel.asm	/^    f010050a:	ff d0                	callq  *%rax$/;"	l
f010050c	obj/kern/kernel.asm	/^    f010050c:	48 b8 40 c8 10 f0 00 	mov    $0xf010c840,%rax$/;"	l
f0100513	obj/kern/kernel.asm	/^    f0100513:	00 00 00 $/;"	l
f0100516	obj/kern/kernel.asm	/^    f0100516:	ff d0                	callq  *%rax$/;"	l
f0100518	obj/kern/kernel.asm	/^    f0100518:	55                   	push   %rbp$/;"	l
f0100519	obj/kern/kernel.asm	/^    f0100519:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010051c	obj/kern/kernel.asm	/^    f010051c:	53                   	push   %rbx$/;"	l
f010051d	obj/kern/kernel.asm	/^    f010051d:	48 81 ec f8 00 00 00 	sub    $0xf8,%rsp$/;"	l
f0100524	obj/kern/kernel.asm	/^    f0100524:	48 89 bd 18 ff ff ff 	mov    %rdi,-0xe8(%rbp)$/;"	l
f010052b	obj/kern/kernel.asm	/^    f010052b:	89 b5 14 ff ff ff    	mov    %esi,-0xec(%rbp)$/;"	l
f0100531	obj/kern/kernel.asm	/^    f0100531:	48 89 8d 58 ff ff ff 	mov    %rcx,-0xa8(%rbp)$/;"	l
f0100538	obj/kern/kernel.asm	/^    f0100538:	4c 89 85 60 ff ff ff 	mov    %r8,-0xa0(%rbp)$/;"	l
f010053f	obj/kern/kernel.asm	/^    f010053f:	4c 89 8d 68 ff ff ff 	mov    %r9,-0x98(%rbp)$/;"	l
f0100546	obj/kern/kernel.asm	/^    f0100546:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100549	obj/kern/kernel.asm	/^    f0100549:	48 8d 0c 85 00 00 00 	lea    0x0(,%rax,4),%rcx$/;"	l
f0100550	obj/kern/kernel.asm	/^    f0100550:	00 $/;"	l
f0100551	obj/kern/kernel.asm	/^    f0100551:	48 b8 84 05 10 f0 00 	mov    $0xf0100584,%rax$/;"	l
f0100558	obj/kern/kernel.asm	/^    f0100558:	00 00 00 $/;"	l
f010055b	obj/kern/kernel.asm	/^    f010055b:	48 29 c8             	sub    %rcx,%rax$/;"	l
f010055e	obj/kern/kernel.asm	/^    f010055e:	48 8d 4d ef          	lea    -0x11(%rbp),%rcx$/;"	l
f0100562	obj/kern/kernel.asm	/^    f0100562:	ff e0                	jmpq   *%rax$/;"	l
f0100564	obj/kern/kernel.asm	/^    f0100564:	0f 29 79 f1          	movaps %xmm7,-0xf(%rcx)$/;"	l
f0100568	obj/kern/kernel.asm	/^    f0100568:	0f 29 71 e1          	movaps %xmm6,-0x1f(%rcx)$/;"	l
f010056c	obj/kern/kernel.asm	/^    f010056c:	0f 29 69 d1          	movaps %xmm5,-0x2f(%rcx)$/;"	l
f0100570	obj/kern/kernel.asm	/^    f0100570:	0f 29 61 c1          	movaps %xmm4,-0x3f(%rcx)$/;"	l
f0100574	obj/kern/kernel.asm	/^    f0100574:	0f 29 59 b1          	movaps %xmm3,-0x4f(%rcx)$/;"	l
f0100578	obj/kern/kernel.asm	/^    f0100578:	0f 29 51 a1          	movaps %xmm2,-0x5f(%rcx)$/;"	l
f010057c	obj/kern/kernel.asm	/^    f010057c:	0f 29 49 91          	movaps %xmm1,-0x6f(%rcx)$/;"	l
f0100580	obj/kern/kernel.asm	/^    f0100580:	0f 29 41 81          	movaps %xmm0,-0x7f(%rcx)$/;"	l
f0100584	obj/kern/kernel.asm	/^    f0100584:	48 89 95 08 ff ff ff 	mov    %rdx,-0xf8(%rbp)$/;"	l
f010058b	obj/kern/kernel.asm	/^    f010058b:	48 b8 48 77 a2 f1 00 	mov    $0xf1a27748,%rax$/;"	l
f0100592	obj/kern/kernel.asm	/^    f0100592:	00 00 00 $/;"	l
f0100595	obj/kern/kernel.asm	/^    f0100595:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0100598	obj/kern/kernel.asm	/^    f0100598:	48 85 c0             	test   %rax,%rax$/;"	l
f010059b	obj/kern/kernel.asm	/^    f010059b:	0f 85 c5 00 00 00    	jne    fffffffff0100666 <end+0xfffffffefe65f2c6>$/;"	l
f01005a1	obj/kern/kernel.asm	/^    f01005a1:	48 b8 48 77 a2 f1 00 	mov    $0xf1a27748,%rax$/;"	l
f01005a8	obj/kern/kernel.asm	/^    f01005a8:	00 00 00 $/;"	l
f01005ab	obj/kern/kernel.asm	/^    f01005ab:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx$/;"	l
f01005b2	obj/kern/kernel.asm	/^    f01005b2:	48 89 10             	mov    %rdx,(%rax)$/;"	l
f01005b5	obj/kern/kernel.asm	/^    f01005b5:	fa                   	cli    $/;"	l
f01005b6	obj/kern/kernel.asm	/^    f01005b6:	fc                   	cld    $/;"	l
f01005b7	obj/kern/kernel.asm	/^    f01005b7:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax$/;"	l
f01005be	obj/kern/kernel.asm	/^    f01005be:	c7 00 18 00 00 00    	movl   $0x18,(%rax)$/;"	l
f01005c4	obj/kern/kernel.asm	/^    f01005c4:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax$/;"	l
f01005cb	obj/kern/kernel.asm	/^    f01005cb:	c7 40 04 30 00 00 00 	movl   $0x30,0x4(%rax)$/;"	l
f01005d2	obj/kern/kernel.asm	/^    f01005d2:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax$/;"	l
f01005d9	obj/kern/kernel.asm	/^    f01005d9:	48 8d 55 10          	lea    0x10(%rbp),%rdx$/;"	l
f01005dd	obj/kern/kernel.asm	/^    f01005dd:	48 89 50 08          	mov    %rdx,0x8(%rax)$/;"	l
f01005e1	obj/kern/kernel.asm	/^    f01005e1:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax$/;"	l
f01005e8	obj/kern/kernel.asm	/^    f01005e8:	48 8d 95 40 ff ff ff 	lea    -0xc0(%rbp),%rdx$/;"	l
f01005ef	obj/kern/kernel.asm	/^    f01005ef:	48 89 50 10          	mov    %rdx,0x10(%rax)$/;"	l
f01005f3	obj/kern/kernel.asm	/^    f01005f3:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f01005fa	obj/kern/kernel.asm	/^    f01005fa:	00 00 00 $/;"	l
f01005fd	obj/kern/kernel.asm	/^    f01005fd:	ff d0                	callq  *%rax$/;"	l
f01005ff	obj/kern/kernel.asm	/^    f01005ff:	8b 8d 14 ff ff ff    	mov    -0xec(%rbp),%ecx$/;"	l
f0100605	obj/kern/kernel.asm	/^    f0100605:	48 8b 95 18 ff ff ff 	mov    -0xe8(%rbp),%rdx$/;"	l
f010060c	obj/kern/kernel.asm	/^    f010060c:	89 c6                	mov    %eax,%esi$/;"	l
f010060e	obj/kern/kernel.asm	/^    f010060e:	48 bf 70 15 11 f0 00 	mov    $0xf0111570,%rdi$/;"	l
f0100615	obj/kern/kernel.asm	/^    f0100615:	00 00 00 $/;"	l
f0100618	obj/kern/kernel.asm	/^    f0100618:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010061d	obj/kern/kernel.asm	/^    f010061d:	48 bb eb 88 10 f0 00 	mov    $0xf01088eb,%rbx$/;"	l
f0100624	obj/kern/kernel.asm	/^    f0100624:	00 00 00 $/;"	l
f0100627	obj/kern/kernel.asm	/^    f0100627:	ff d3                	callq  *%rbx$/;"	l
f0100629	obj/kern/kernel.asm	/^    f0100629:	48 8d 95 20 ff ff ff 	lea    -0xe0(%rbp),%rdx$/;"	l
f0100630	obj/kern/kernel.asm	/^    f0100630:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax$/;"	l
f0100637	obj/kern/kernel.asm	/^    f0100637:	48 89 d6             	mov    %rdx,%rsi$/;"	l
f010063a	obj/kern/kernel.asm	/^    f010063a:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010063d	obj/kern/kernel.asm	/^    f010063d:	48 b8 83 88 10 f0 00 	mov    $0xf0108883,%rax$/;"	l
f0100644	obj/kern/kernel.asm	/^    f0100644:	00 00 00 $/;"	l
f0100647	obj/kern/kernel.asm	/^    f0100647:	ff d0                	callq  *%rax$/;"	l
f0100649	obj/kern/kernel.asm	/^    f0100649:	48 bf 92 15 11 f0 00 	mov    $0xf0111592,%rdi$/;"	l
f0100650	obj/kern/kernel.asm	/^    f0100650:	00 00 00 $/;"	l
f0100653	obj/kern/kernel.asm	/^    f0100653:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100658	obj/kern/kernel.asm	/^    f0100658:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f010065f	obj/kern/kernel.asm	/^    f010065f:	00 00 00 $/;"	l
f0100662	obj/kern/kernel.asm	/^    f0100662:	ff d2                	callq  *%rdx$/;"	l
f0100664	obj/kern/kernel.asm	/^    f0100664:	eb 01                	jmp    fffffffff0100667 <end+0xfffffffefe65f2c7>$/;"	l
f0100666	obj/kern/kernel.asm	/^    f0100666:	90                   	nop$/;"	l
f0100667	obj/kern/kernel.asm	/^    f0100667:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f010066c	obj/kern/kernel.asm	/^    f010066c:	48 b8 2e 19 10 f0 00 	mov    $0xf010192e,%rax$/;"	l
f0100673	obj/kern/kernel.asm	/^    f0100673:	00 00 00 $/;"	l
f0100676	obj/kern/kernel.asm	/^    f0100676:	ff d0                	callq  *%rax$/;"	l
f0100678	obj/kern/kernel.asm	/^    f0100678:	eb ed                	jmp    fffffffff0100667 <end+0xfffffffefe65f2c7>$/;"	l
f010067a	obj/kern/kernel.asm	/^    f010067a:	55                   	push   %rbp$/;"	l
f010067b	obj/kern/kernel.asm	/^    f010067b:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010067e	obj/kern/kernel.asm	/^    f010067e:	48 81 ec f0 00 00 00 	sub    $0xf0,%rsp$/;"	l
f0100685	obj/kern/kernel.asm	/^    f0100685:	48 89 bd 28 ff ff ff 	mov    %rdi,-0xd8(%rbp)$/;"	l
f010068c	obj/kern/kernel.asm	/^    f010068c:	89 b5 24 ff ff ff    	mov    %esi,-0xdc(%rbp)$/;"	l
f0100692	obj/kern/kernel.asm	/^    f0100692:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)$/;"	l
f0100699	obj/kern/kernel.asm	/^    f0100699:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)$/;"	l
f01006a0	obj/kern/kernel.asm	/^    f01006a0:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)$/;"	l
f01006a7	obj/kern/kernel.asm	/^    f01006a7:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01006aa	obj/kern/kernel.asm	/^    f01006aa:	48 8d 0c 85 00 00 00 	lea    0x0(,%rax,4),%rcx$/;"	l
f01006b1	obj/kern/kernel.asm	/^    f01006b1:	00 $/;"	l
f01006b2	obj/kern/kernel.asm	/^    f01006b2:	48 b8 e5 06 10 f0 00 	mov    $0xf01006e5,%rax$/;"	l
f01006b9	obj/kern/kernel.asm	/^    f01006b9:	00 00 00 $/;"	l
f01006bc	obj/kern/kernel.asm	/^    f01006bc:	48 29 c8             	sub    %rcx,%rax$/;"	l
f01006bf	obj/kern/kernel.asm	/^    f01006bf:	48 8d 4d ff          	lea    -0x1(%rbp),%rcx$/;"	l
f01006c3	obj/kern/kernel.asm	/^    f01006c3:	ff e0                	jmpq   *%rax$/;"	l
f01006c5	obj/kern/kernel.asm	/^    f01006c5:	0f 29 79 f1          	movaps %xmm7,-0xf(%rcx)$/;"	l
f01006c9	obj/kern/kernel.asm	/^    f01006c9:	0f 29 71 e1          	movaps %xmm6,-0x1f(%rcx)$/;"	l
f01006cd	obj/kern/kernel.asm	/^    f01006cd:	0f 29 69 d1          	movaps %xmm5,-0x2f(%rcx)$/;"	l
f01006d1	obj/kern/kernel.asm	/^    f01006d1:	0f 29 61 c1          	movaps %xmm4,-0x3f(%rcx)$/;"	l
f01006d5	obj/kern/kernel.asm	/^    f01006d5:	0f 29 59 b1          	movaps %xmm3,-0x4f(%rcx)$/;"	l
f01006d9	obj/kern/kernel.asm	/^    f01006d9:	0f 29 51 a1          	movaps %xmm2,-0x5f(%rcx)$/;"	l
f01006dd	obj/kern/kernel.asm	/^    f01006dd:	0f 29 49 91          	movaps %xmm1,-0x6f(%rcx)$/;"	l
f01006e1	obj/kern/kernel.asm	/^    f01006e1:	0f 29 41 81          	movaps %xmm0,-0x7f(%rcx)$/;"	l
f01006e5	obj/kern/kernel.asm	/^    f01006e5:	48 89 95 18 ff ff ff 	mov    %rdx,-0xe8(%rbp)$/;"	l
f01006ec	obj/kern/kernel.asm	/^    f01006ec:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax$/;"	l
f01006f3	obj/kern/kernel.asm	/^    f01006f3:	c7 00 18 00 00 00    	movl   $0x18,(%rax)$/;"	l
f01006f9	obj/kern/kernel.asm	/^    f01006f9:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax$/;"	l
f0100700	obj/kern/kernel.asm	/^    f0100700:	c7 40 04 30 00 00 00 	movl   $0x30,0x4(%rax)$/;"	l
f0100707	obj/kern/kernel.asm	/^    f0100707:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax$/;"	l
f010070e	obj/kern/kernel.asm	/^    f010070e:	48 8d 55 10          	lea    0x10(%rbp),%rdx$/;"	l
f0100712	obj/kern/kernel.asm	/^    f0100712:	48 89 50 08          	mov    %rdx,0x8(%rax)$/;"	l
f0100716	obj/kern/kernel.asm	/^    f0100716:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax$/;"	l
f010071d	obj/kern/kernel.asm	/^    f010071d:	48 8d 95 50 ff ff ff 	lea    -0xb0(%rbp),%rdx$/;"	l
f0100724	obj/kern/kernel.asm	/^    f0100724:	48 89 50 10          	mov    %rdx,0x10(%rax)$/;"	l
f0100728	obj/kern/kernel.asm	/^    f0100728:	8b 95 24 ff ff ff    	mov    -0xdc(%rbp),%edx$/;"	l
f010072e	obj/kern/kernel.asm	/^    f010072e:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax$/;"	l
f0100735	obj/kern/kernel.asm	/^    f0100735:	48 89 c6             	mov    %rax,%rsi$/;"	l
f0100738	obj/kern/kernel.asm	/^    f0100738:	48 bf 94 15 11 f0 00 	mov    $0xf0111594,%rdi$/;"	l
f010073f	obj/kern/kernel.asm	/^    f010073f:	00 00 00 $/;"	l
f0100742	obj/kern/kernel.asm	/^    f0100742:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100747	obj/kern/kernel.asm	/^    f0100747:	48 b9 eb 88 10 f0 00 	mov    $0xf01088eb,%rcx$/;"	l
f010074e	obj/kern/kernel.asm	/^    f010074e:	00 00 00 $/;"	l
f0100751	obj/kern/kernel.asm	/^    f0100751:	ff d1                	callq  *%rcx$/;"	l
f0100753	obj/kern/kernel.asm	/^    f0100753:	48 8d 95 30 ff ff ff 	lea    -0xd0(%rbp),%rdx$/;"	l
f010075a	obj/kern/kernel.asm	/^    f010075a:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax$/;"	l
f0100761	obj/kern/kernel.asm	/^    f0100761:	48 89 d6             	mov    %rdx,%rsi$/;"	l
f0100764	obj/kern/kernel.asm	/^    f0100764:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0100767	obj/kern/kernel.asm	/^    f0100767:	48 b8 83 88 10 f0 00 	mov    $0xf0108883,%rax$/;"	l
f010076e	obj/kern/kernel.asm	/^    f010076e:	00 00 00 $/;"	l
f0100771	obj/kern/kernel.asm	/^    f0100771:	ff d0                	callq  *%rax$/;"	l
f0100773	obj/kern/kernel.asm	/^    f0100773:	48 bf 92 15 11 f0 00 	mov    $0xf0111592,%rdi$/;"	l
f010077a	obj/kern/kernel.asm	/^    f010077a:	00 00 00 $/;"	l
f010077d	obj/kern/kernel.asm	/^    f010077d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100782	obj/kern/kernel.asm	/^    f0100782:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f0100789	obj/kern/kernel.asm	/^    f0100789:	00 00 00 $/;"	l
f010078c	obj/kern/kernel.asm	/^    f010078c:	ff d2                	callq  *%rdx$/;"	l
f010078e	obj/kern/kernel.asm	/^    f010078e:	c9                   	leaveq $/;"	l
f010078f	obj/kern/kernel.asm	/^    f010078f:	c3                   	retq   $/;"	l
f0100790	obj/kern/kernel.asm	/^    f0100790:	55                   	push   %rbp$/;"	l
f0100791	obj/kern/kernel.asm	/^    f0100791:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f0100794	obj/kern/kernel.asm	/^    f0100794:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
f0100798	obj/kern/kernel.asm	/^    f0100798:	c7 45 e0 84 00 00 00 	movl   $0x84,-0x20(%rbp)$/;"	l
f010079f	obj/kern/kernel.asm	/^    f010079f:	8b 45 e0             	mov    -0x20(%rbp),%eax$/;"	l
f01007a2	obj/kern/kernel.asm	/^    f01007a2:	89 c2                	mov    %eax,%edx$/;"	l
f01007a4	obj/kern/kernel.asm	/^    f01007a4:	ec                   	in     (%dx),%al$/;"	l
f01007a5	obj/kern/kernel.asm	/^    f01007a5:	88 45 e7             	mov    %al,-0x19(%rbp)$/;"	l
f01007a8	obj/kern/kernel.asm	/^    f01007a8:	c7 45 e8 84 00 00 00 	movl   $0x84,-0x18(%rbp)$/;"	l
f01007af	obj/kern/kernel.asm	/^    f01007af:	8b 45 e8             	mov    -0x18(%rbp),%eax$/;"	l
f01007b2	obj/kern/kernel.asm	/^    f01007b2:	89 c2                	mov    %eax,%edx$/;"	l
f01007b4	obj/kern/kernel.asm	/^    f01007b4:	ec                   	in     (%dx),%al$/;"	l
f01007b5	obj/kern/kernel.asm	/^    f01007b5:	88 45 ef             	mov    %al,-0x11(%rbp)$/;"	l
f01007b8	obj/kern/kernel.asm	/^    f01007b8:	c7 45 f0 84 00 00 00 	movl   $0x84,-0x10(%rbp)$/;"	l
f01007bf	obj/kern/kernel.asm	/^    f01007bf:	8b 45 f0             	mov    -0x10(%rbp),%eax$/;"	l
f01007c2	obj/kern/kernel.asm	/^    f01007c2:	89 c2                	mov    %eax,%edx$/;"	l
f01007c4	obj/kern/kernel.asm	/^    f01007c4:	ec                   	in     (%dx),%al$/;"	l
f01007c5	obj/kern/kernel.asm	/^    f01007c5:	88 45 f7             	mov    %al,-0x9(%rbp)$/;"	l
f01007c8	obj/kern/kernel.asm	/^    f01007c8:	c7 45 f8 84 00 00 00 	movl   $0x84,-0x8(%rbp)$/;"	l
f01007cf	obj/kern/kernel.asm	/^    f01007cf:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
f01007d2	obj/kern/kernel.asm	/^    f01007d2:	89 c2                	mov    %eax,%edx$/;"	l
f01007d4	obj/kern/kernel.asm	/^    f01007d4:	ec                   	in     (%dx),%al$/;"	l
f01007d5	obj/kern/kernel.asm	/^    f01007d5:	88 45 ff             	mov    %al,-0x1(%rbp)$/;"	l
f01007d8	obj/kern/kernel.asm	/^    f01007d8:	c9                   	leaveq $/;"	l
f01007d9	obj/kern/kernel.asm	/^    f01007d9:	c3                   	retq   $/;"	l
f01007da	obj/kern/kernel.asm	/^    f01007da:	55                   	push   %rbp$/;"	l
f01007db	obj/kern/kernel.asm	/^    f01007db:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f01007de	obj/kern/kernel.asm	/^    f01007de:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
f01007e2	obj/kern/kernel.asm	/^    f01007e2:	c7 45 f0 fd 03 00 00 	movl   $0x3fd,-0x10(%rbp)$/;"	l
f01007e9	obj/kern/kernel.asm	/^    f01007e9:	8b 45 f0             	mov    -0x10(%rbp),%eax$/;"	l
f01007ec	obj/kern/kernel.asm	/^    f01007ec:	89 c2                	mov    %eax,%edx$/;"	l
f01007ee	obj/kern/kernel.asm	/^    f01007ee:	ec                   	in     (%dx),%al$/;"	l
f01007ef	obj/kern/kernel.asm	/^    f01007ef:	88 45 f7             	mov    %al,-0x9(%rbp)$/;"	l
f01007f2	obj/kern/kernel.asm	/^    f01007f2:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax$/;"	l
f01007f6	obj/kern/kernel.asm	/^    f01007f6:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01007f9	obj/kern/kernel.asm	/^    f01007f9:	83 e0 01             	and    $0x1,%eax$/;"	l
f01007fc	obj/kern/kernel.asm	/^    f01007fc:	85 c0                	test   %eax,%eax$/;"	l
f01007fe	obj/kern/kernel.asm	/^    f01007fe:	75 07                	jne    fffffffff0100807 <end+0xfffffffefe65f467>$/;"	l
f0100800	obj/kern/kernel.asm	/^    f0100800:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100805	obj/kern/kernel.asm	/^    f0100805:	eb 17                	jmp    fffffffff010081e <end+0xfffffffefe65f47e>$/;"	l
f0100807	obj/kern/kernel.asm	/^    f0100807:	c7 45 f8 f8 03 00 00 	movl   $0x3f8,-0x8(%rbp)$/;"	l
f010080e	obj/kern/kernel.asm	/^    f010080e:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
f0100811	obj/kern/kernel.asm	/^    f0100811:	89 c2                	mov    %eax,%edx$/;"	l
f0100813	obj/kern/kernel.asm	/^    f0100813:	ec                   	in     (%dx),%al$/;"	l
f0100814	obj/kern/kernel.asm	/^    f0100814:	88 45 ff             	mov    %al,-0x1(%rbp)$/;"	l
f0100817	obj/kern/kernel.asm	/^    f0100817:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax$/;"	l
f010081b	obj/kern/kernel.asm	/^    f010081b:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010081e	obj/kern/kernel.asm	/^    f010081e:	c9                   	leaveq $/;"	l
f010081f	obj/kern/kernel.asm	/^    f010081f:	c3                   	retq   $/;"	l
f0100820	obj/kern/kernel.asm	/^    f0100820:	55                   	push   %rbp$/;"	l
f0100821	obj/kern/kernel.asm	/^    f0100821:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f0100824	obj/kern/kernel.asm	/^    f0100824:	48 b8 00 60 a2 f1 00 	mov    $0xf1a26000,%rax$/;"	l
f010082b	obj/kern/kernel.asm	/^    f010082b:	00 00 00 $/;"	l
f010082e	obj/kern/kernel.asm	/^    f010082e:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f0100831	obj/kern/kernel.asm	/^    f0100831:	84 c0                	test   %al,%al$/;"	l
f0100833	obj/kern/kernel.asm	/^    f0100833:	74 16                	je     fffffffff010084b <end+0xfffffffefe65f4ab>$/;"	l
f0100835	obj/kern/kernel.asm	/^    f0100835:	48 bf da 07 10 f0 00 	mov    $0xf01007da,%rdi$/;"	l
f010083c	obj/kern/kernel.asm	/^    f010083c:	00 00 00 $/;"	l
f010083f	obj/kern/kernel.asm	/^    f010083f:	48 b8 9a 10 10 f0 00 	mov    $0xf010109a,%rax$/;"	l
f0100846	obj/kern/kernel.asm	/^    f0100846:	00 00 00 $/;"	l
f0100849	obj/kern/kernel.asm	/^    f0100849:	ff d0                	callq  *%rax$/;"	l
f010084b	obj/kern/kernel.asm	/^    f010084b:	c9                   	leaveq $/;"	l
f010084c	obj/kern/kernel.asm	/^    f010084c:	c3                   	retq   $/;"	l
f010084d	obj/kern/kernel.asm	/^    f010084d:	55                   	push   %rbp$/;"	l
f010084e	obj/kern/kernel.asm	/^    f010084e:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f0100851	obj/kern/kernel.asm	/^    f0100851:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
f0100855	obj/kern/kernel.asm	/^    f0100855:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
f0100858	obj/kern/kernel.asm	/^    f0100858:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)$/;"	l
f010085f	obj/kern/kernel.asm	/^    f010085f:	eb 10                	jmp    fffffffff0100871 <end+0xfffffffefe65f4d1>$/;"	l
f0100861	obj/kern/kernel.asm	/^    f0100861:	48 b8 90 07 10 f0 00 	mov    $0xf0100790,%rax$/;"	l
f0100868	obj/kern/kernel.asm	/^    f0100868:	00 00 00 $/;"	l
f010086b	obj/kern/kernel.asm	/^    f010086b:	ff d0                	callq  *%rax$/;"	l
f010086d	obj/kern/kernel.asm	/^    f010086d:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)$/;"	l
f0100871	obj/kern/kernel.asm	/^    f0100871:	c7 45 f4 fd 03 00 00 	movl   $0x3fd,-0xc(%rbp)$/;"	l
f0100878	obj/kern/kernel.asm	/^    f0100878:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
f010087b	obj/kern/kernel.asm	/^    f010087b:	89 c2                	mov    %eax,%edx$/;"	l
f010087d	obj/kern/kernel.asm	/^    f010087d:	ec                   	in     (%dx),%al$/;"	l
f010087e	obj/kern/kernel.asm	/^    f010087e:	88 45 fa             	mov    %al,-0x6(%rbp)$/;"	l
f0100881	obj/kern/kernel.asm	/^    f0100881:	0f b6 45 fa          	movzbl -0x6(%rbp),%eax$/;"	l
f0100885	obj/kern/kernel.asm	/^    f0100885:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100888	obj/kern/kernel.asm	/^    f0100888:	83 e0 20             	and    $0x20,%eax$/;"	l
f010088b	obj/kern/kernel.asm	/^    f010088b:	85 c0                	test   %eax,%eax$/;"	l
f010088d	obj/kern/kernel.asm	/^    f010088d:	75 09                	jne    fffffffff0100898 <end+0xfffffffefe65f4f8>$/;"	l
f010088f	obj/kern/kernel.asm	/^    f010088f:	81 7d f0 ff 31 00 00 	cmpl   $0x31ff,-0x10(%rbp)$/;"	l
f0100896	obj/kern/kernel.asm	/^    f0100896:	7e c9                	jle    fffffffff0100861 <end+0xfffffffefe65f4c1>$/;"	l
f0100898	obj/kern/kernel.asm	/^    f0100898:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
f010089b	obj/kern/kernel.asm	/^    f010089b:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010089e	obj/kern/kernel.asm	/^    f010089e:	c7 45 fc f8 03 00 00 	movl   $0x3f8,-0x4(%rbp)$/;"	l
f01008a5	obj/kern/kernel.asm	/^    f01008a5:	88 45 fb             	mov    %al,-0x5(%rbp)$/;"	l
f01008a8	obj/kern/kernel.asm	/^    f01008a8:	0f b6 45 fb          	movzbl -0x5(%rbp),%eax$/;"	l
f01008ac	obj/kern/kernel.asm	/^    f01008ac:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
f01008af	obj/kern/kernel.asm	/^    f01008af:	ee                   	out    %al,(%dx)$/;"	l
f01008b0	obj/kern/kernel.asm	/^    f01008b0:	c9                   	leaveq $/;"	l
f01008b1	obj/kern/kernel.asm	/^    f01008b1:	c3                   	retq   $/;"	l
f01008b2	obj/kern/kernel.asm	/^    f01008b2:	55                   	push   %rbp$/;"	l
f01008b3	obj/kern/kernel.asm	/^    f01008b3:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f01008b6	obj/kern/kernel.asm	/^    f01008b6:	48 83 ec 50          	sub    $0x50,%rsp$/;"	l
f01008ba	obj/kern/kernel.asm	/^    f01008ba:	c7 45 b4 fa 03 00 00 	movl   $0x3fa,-0x4c(%rbp)$/;"	l
f01008c1	obj/kern/kernel.asm	/^    f01008c1:	c6 45 b3 00          	movb   $0x0,-0x4d(%rbp)$/;"	l
f01008c5	obj/kern/kernel.asm	/^    f01008c5:	0f b6 45 b3          	movzbl -0x4d(%rbp),%eax$/;"	l
f01008c9	obj/kern/kernel.asm	/^    f01008c9:	8b 55 b4             	mov    -0x4c(%rbp),%edx$/;"	l
f01008cc	obj/kern/kernel.asm	/^    f01008cc:	ee                   	out    %al,(%dx)$/;"	l
f01008cd	obj/kern/kernel.asm	/^    f01008cd:	c7 45 bc fb 03 00 00 	movl   $0x3fb,-0x44(%rbp)$/;"	l
f01008d4	obj/kern/kernel.asm	/^    f01008d4:	c6 45 bb 80          	movb   $0x80,-0x45(%rbp)$/;"	l
f01008d8	obj/kern/kernel.asm	/^    f01008d8:	0f b6 45 bb          	movzbl -0x45(%rbp),%eax$/;"	l
f01008dc	obj/kern/kernel.asm	/^    f01008dc:	8b 55 bc             	mov    -0x44(%rbp),%edx$/;"	l
f01008df	obj/kern/kernel.asm	/^    f01008df:	ee                   	out    %al,(%dx)$/;"	l
f01008e0	obj/kern/kernel.asm	/^    f01008e0:	c7 45 c4 f8 03 00 00 	movl   $0x3f8,-0x3c(%rbp)$/;"	l
f01008e7	obj/kern/kernel.asm	/^    f01008e7:	c6 45 c3 0c          	movb   $0xc,-0x3d(%rbp)$/;"	l
f01008eb	obj/kern/kernel.asm	/^    f01008eb:	0f b6 45 c3          	movzbl -0x3d(%rbp),%eax$/;"	l
f01008ef	obj/kern/kernel.asm	/^    f01008ef:	8b 55 c4             	mov    -0x3c(%rbp),%edx$/;"	l
f01008f2	obj/kern/kernel.asm	/^    f01008f2:	ee                   	out    %al,(%dx)$/;"	l
f01008f3	obj/kern/kernel.asm	/^    f01008f3:	c7 45 cc f9 03 00 00 	movl   $0x3f9,-0x34(%rbp)$/;"	l
f01008fa	obj/kern/kernel.asm	/^    f01008fa:	c6 45 cb 00          	movb   $0x0,-0x35(%rbp)$/;"	l
f01008fe	obj/kern/kernel.asm	/^    f01008fe:	0f b6 45 cb          	movzbl -0x35(%rbp),%eax$/;"	l
f0100902	obj/kern/kernel.asm	/^    f0100902:	8b 55 cc             	mov    -0x34(%rbp),%edx$/;"	l
f0100905	obj/kern/kernel.asm	/^    f0100905:	ee                   	out    %al,(%dx)$/;"	l
f0100906	obj/kern/kernel.asm	/^    f0100906:	c7 45 d4 fb 03 00 00 	movl   $0x3fb,-0x2c(%rbp)$/;"	l
f010090d	obj/kern/kernel.asm	/^    f010090d:	c6 45 d3 03          	movb   $0x3,-0x2d(%rbp)$/;"	l
f0100911	obj/kern/kernel.asm	/^    f0100911:	0f b6 45 d3          	movzbl -0x2d(%rbp),%eax$/;"	l
f0100915	obj/kern/kernel.asm	/^    f0100915:	8b 55 d4             	mov    -0x2c(%rbp),%edx$/;"	l
f0100918	obj/kern/kernel.asm	/^    f0100918:	ee                   	out    %al,(%dx)$/;"	l
f0100919	obj/kern/kernel.asm	/^    f0100919:	c7 45 dc fc 03 00 00 	movl   $0x3fc,-0x24(%rbp)$/;"	l
f0100920	obj/kern/kernel.asm	/^    f0100920:	c6 45 db 00          	movb   $0x0,-0x25(%rbp)$/;"	l
f0100924	obj/kern/kernel.asm	/^    f0100924:	0f b6 45 db          	movzbl -0x25(%rbp),%eax$/;"	l
f0100928	obj/kern/kernel.asm	/^    f0100928:	8b 55 dc             	mov    -0x24(%rbp),%edx$/;"	l
f010092b	obj/kern/kernel.asm	/^    f010092b:	ee                   	out    %al,(%dx)$/;"	l
f010092c	obj/kern/kernel.asm	/^    f010092c:	c7 45 e4 f9 03 00 00 	movl   $0x3f9,-0x1c(%rbp)$/;"	l
f0100933	obj/kern/kernel.asm	/^    f0100933:	c6 45 e3 01          	movb   $0x1,-0x1d(%rbp)$/;"	l
f0100937	obj/kern/kernel.asm	/^    f0100937:	0f b6 45 e3          	movzbl -0x1d(%rbp),%eax$/;"	l
f010093b	obj/kern/kernel.asm	/^    f010093b:	8b 55 e4             	mov    -0x1c(%rbp),%edx$/;"	l
f010093e	obj/kern/kernel.asm	/^    f010093e:	ee                   	out    %al,(%dx)$/;"	l
f010093f	obj/kern/kernel.asm	/^    f010093f:	c7 45 e8 fd 03 00 00 	movl   $0x3fd,-0x18(%rbp)$/;"	l
f0100946	obj/kern/kernel.asm	/^    f0100946:	8b 45 e8             	mov    -0x18(%rbp),%eax$/;"	l
f0100949	obj/kern/kernel.asm	/^    f0100949:	89 c2                	mov    %eax,%edx$/;"	l
f010094b	obj/kern/kernel.asm	/^    f010094b:	ec                   	in     (%dx),%al$/;"	l
f010094c	obj/kern/kernel.asm	/^    f010094c:	88 45 ef             	mov    %al,-0x11(%rbp)$/;"	l
f010094f	obj/kern/kernel.asm	/^    f010094f:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax$/;"	l
f0100953	obj/kern/kernel.asm	/^    f0100953:	3c ff                	cmp    $0xff,%al$/;"	l
f0100955	obj/kern/kernel.asm	/^    f0100955:	0f 95 c2             	setne  %dl$/;"	l
f0100958	obj/kern/kernel.asm	/^    f0100958:	48 b8 00 60 a2 f1 00 	mov    $0xf1a26000,%rax$/;"	l
f010095f	obj/kern/kernel.asm	/^    f010095f:	00 00 00 $/;"	l
f0100962	obj/kern/kernel.asm	/^    f0100962:	88 10                	mov    %dl,(%rax)$/;"	l
f0100964	obj/kern/kernel.asm	/^    f0100964:	c7 45 f0 fa 03 00 00 	movl   $0x3fa,-0x10(%rbp)$/;"	l
f010096b	obj/kern/kernel.asm	/^    f010096b:	8b 45 f0             	mov    -0x10(%rbp),%eax$/;"	l
f010096e	obj/kern/kernel.asm	/^    f010096e:	89 c2                	mov    %eax,%edx$/;"	l
f0100970	obj/kern/kernel.asm	/^    f0100970:	ec                   	in     (%dx),%al$/;"	l
f0100971	obj/kern/kernel.asm	/^    f0100971:	88 45 f7             	mov    %al,-0x9(%rbp)$/;"	l
f0100974	obj/kern/kernel.asm	/^    f0100974:	c7 45 f8 f8 03 00 00 	movl   $0x3f8,-0x8(%rbp)$/;"	l
f010097b	obj/kern/kernel.asm	/^    f010097b:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
f010097e	obj/kern/kernel.asm	/^    f010097e:	89 c2                	mov    %eax,%edx$/;"	l
f0100980	obj/kern/kernel.asm	/^    f0100980:	ec                   	in     (%dx),%al$/;"	l
f0100981	obj/kern/kernel.asm	/^    f0100981:	88 45 ff             	mov    %al,-0x1(%rbp)$/;"	l
f0100984	obj/kern/kernel.asm	/^    f0100984:	c9                   	leaveq $/;"	l
f0100985	obj/kern/kernel.asm	/^    f0100985:	c3                   	retq   $/;"	l
f0100986	obj/kern/kernel.asm	/^    f0100986:	55                   	push   %rbp$/;"	l
f0100987	obj/kern/kernel.asm	/^    f0100987:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010098a	obj/kern/kernel.asm	/^    f010098a:	48 83 ec 28          	sub    $0x28,%rsp$/;"	l
f010098e	obj/kern/kernel.asm	/^    f010098e:	89 7d dc             	mov    %edi,-0x24(%rbp)$/;"	l
f0100991	obj/kern/kernel.asm	/^    f0100991:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%rbp)$/;"	l
f0100998	obj/kern/kernel.asm	/^    f0100998:	eb 10                	jmp    fffffffff01009aa <end+0xfffffffefe65f60a>$/;"	l
f010099a	obj/kern/kernel.asm	/^    f010099a:	48 b8 90 07 10 f0 00 	mov    $0xf0100790,%rax$/;"	l
f01009a1	obj/kern/kernel.asm	/^    f01009a1:	00 00 00 $/;"	l
f01009a4	obj/kern/kernel.asm	/^    f01009a4:	ff d0                	callq  *%rax$/;"	l
f01009a6	obj/kern/kernel.asm	/^    f01009a6:	83 45 e0 01          	addl   $0x1,-0x20(%rbp)$/;"	l
f01009aa	obj/kern/kernel.asm	/^    f01009aa:	c7 45 e4 79 03 00 00 	movl   $0x379,-0x1c(%rbp)$/;"	l
f01009b1	obj/kern/kernel.asm	/^    f01009b1:	8b 45 e4             	mov    -0x1c(%rbp),%eax$/;"	l
f01009b4	obj/kern/kernel.asm	/^    f01009b4:	89 c2                	mov    %eax,%edx$/;"	l
f01009b6	obj/kern/kernel.asm	/^    f01009b6:	ec                   	in     (%dx),%al$/;"	l
f01009b7	obj/kern/kernel.asm	/^    f01009b7:	88 45 ea             	mov    %al,-0x16(%rbp)$/;"	l
f01009ba	obj/kern/kernel.asm	/^    f01009ba:	0f b6 45 ea          	movzbl -0x16(%rbp),%eax$/;"	l
f01009be	obj/kern/kernel.asm	/^    f01009be:	84 c0                	test   %al,%al$/;"	l
f01009c0	obj/kern/kernel.asm	/^    f01009c0:	78 09                	js     fffffffff01009cb <end+0xfffffffefe65f62b>$/;"	l
f01009c2	obj/kern/kernel.asm	/^    f01009c2:	81 7d e0 ff 31 00 00 	cmpl   $0x31ff,-0x20(%rbp)$/;"	l
f01009c9	obj/kern/kernel.asm	/^    f01009c9:	7e cf                	jle    fffffffff010099a <end+0xfffffffefe65f5fa>$/;"	l
f01009cb	obj/kern/kernel.asm	/^    f01009cb:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
f01009ce	obj/kern/kernel.asm	/^    f01009ce:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01009d1	obj/kern/kernel.asm	/^    f01009d1:	c7 45 ec 78 03 00 00 	movl   $0x378,-0x14(%rbp)$/;"	l
f01009d8	obj/kern/kernel.asm	/^    f01009d8:	88 45 eb             	mov    %al,-0x15(%rbp)$/;"	l
f01009db	obj/kern/kernel.asm	/^    f01009db:	0f b6 45 eb          	movzbl -0x15(%rbp),%eax$/;"	l
f01009df	obj/kern/kernel.asm	/^    f01009df:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
f01009e2	obj/kern/kernel.asm	/^    f01009e2:	ee                   	out    %al,(%dx)$/;"	l
f01009e3	obj/kern/kernel.asm	/^    f01009e3:	c7 45 f4 7a 03 00 00 	movl   $0x37a,-0xc(%rbp)$/;"	l
f01009ea	obj/kern/kernel.asm	/^    f01009ea:	c6 45 f3 0d          	movb   $0xd,-0xd(%rbp)$/;"	l
f01009ee	obj/kern/kernel.asm	/^    f01009ee:	0f b6 45 f3          	movzbl -0xd(%rbp),%eax$/;"	l
f01009f2	obj/kern/kernel.asm	/^    f01009f2:	8b 55 f4             	mov    -0xc(%rbp),%edx$/;"	l
f01009f5	obj/kern/kernel.asm	/^    f01009f5:	ee                   	out    %al,(%dx)$/;"	l
f01009f6	obj/kern/kernel.asm	/^    f01009f6:	c7 45 fc 7a 03 00 00 	movl   $0x37a,-0x4(%rbp)$/;"	l
f01009fd	obj/kern/kernel.asm	/^    f01009fd:	c6 45 fb 08          	movb   $0x8,-0x5(%rbp)$/;"	l
f0100a01	obj/kern/kernel.asm	/^    f0100a01:	0f b6 45 fb          	movzbl -0x5(%rbp),%eax$/;"	l
f0100a05	obj/kern/kernel.asm	/^    f0100a05:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
f0100a08	obj/kern/kernel.asm	/^    f0100a08:	ee                   	out    %al,(%dx)$/;"	l
f0100a09	obj/kern/kernel.asm	/^    f0100a09:	c9                   	leaveq $/;"	l
f0100a0a	obj/kern/kernel.asm	/^    f0100a0a:	c3                   	retq   $/;"	l
f0100a0b	obj/kern/kernel.asm	/^    f0100a0b:	55                   	push   %rbp$/;"	l
f0100a0c	obj/kern/kernel.asm	/^    f0100a0c:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f0100a0f	obj/kern/kernel.asm	/^    f0100a0f:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
f0100a13	obj/kern/kernel.asm	/^    f0100a13:	c7 45 d0 00 80 0b f0 	movl   $0xf00b8000,-0x30(%rbp)$/;"	l
f0100a1a	obj/kern/kernel.asm	/^    f0100a1a:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)$/;"	l
f0100a21	obj/kern/kernel.asm	/^    f0100a21:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f0100a25	obj/kern/kernel.asm	/^    f0100a25:	0f b7 00             	movzwl (%rax),%eax$/;"	l
f0100a28	obj/kern/kernel.asm	/^    f0100a28:	66 89 45 de          	mov    %ax,-0x22(%rbp)$/;"	l
f0100a2c	obj/kern/kernel.asm	/^    f0100a2c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f0100a30	obj/kern/kernel.asm	/^    f0100a30:	66 c7 00 5a a5       	movw   $0xa55a,(%rax)$/;"	l
f0100a35	obj/kern/kernel.asm	/^    f0100a35:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f0100a39	obj/kern/kernel.asm	/^    f0100a39:	0f b7 00             	movzwl (%rax),%eax$/;"	l
f0100a3c	obj/kern/kernel.asm	/^    f0100a3c:	66 3d 5a a5          	cmp    $0xa55a,%ax$/;"	l
f0100a40	obj/kern/kernel.asm	/^    f0100a40:	74 20                	je     fffffffff0100a62 <end+0xfffffffefe65f6c2>$/;"	l
f0100a42	obj/kern/kernel.asm	/^    f0100a42:	c7 45 d0 00 00 0b f0 	movl   $0xf00b0000,-0x30(%rbp)$/;"	l
f0100a49	obj/kern/kernel.asm	/^    f0100a49:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)$/;"	l
f0100a50	obj/kern/kernel.asm	/^    f0100a50:	48 b8 04 60 a2 f1 00 	mov    $0xf1a26004,%rax$/;"	l
f0100a57	obj/kern/kernel.asm	/^    f0100a57:	00 00 00 $/;"	l
f0100a5a	obj/kern/kernel.asm	/^    f0100a5a:	c7 00 b4 03 00 00    	movl   $0x3b4,(%rax)$/;"	l
f0100a60	obj/kern/kernel.asm	/^    f0100a60:	eb 1b                	jmp    fffffffff0100a7d <end+0xfffffffefe65f6dd>$/;"	l
f0100a62	obj/kern/kernel.asm	/^    f0100a62:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f0100a66	obj/kern/kernel.asm	/^    f0100a66:	0f b7 55 de          	movzwl -0x22(%rbp),%edx$/;"	l
f0100a6a	obj/kern/kernel.asm	/^    f0100a6a:	66 89 10             	mov    %dx,(%rax)$/;"	l
f0100a6d	obj/kern/kernel.asm	/^    f0100a6d:	48 b8 04 60 a2 f1 00 	mov    $0xf1a26004,%rax$/;"	l
f0100a74	obj/kern/kernel.asm	/^    f0100a74:	00 00 00 $/;"	l
f0100a77	obj/kern/kernel.asm	/^    f0100a77:	c7 00 d4 03 00 00    	movl   $0x3d4,(%rax)$/;"	l
f0100a7d	obj/kern/kernel.asm	/^    f0100a7d:	48 b8 04 60 a2 f1 00 	mov    $0xf1a26004,%rax$/;"	l
f0100a84	obj/kern/kernel.asm	/^    f0100a84:	00 00 00 $/;"	l
f0100a87	obj/kern/kernel.asm	/^    f0100a87:	8b 00                	mov    (%rax),%eax$/;"	l
f0100a89	obj/kern/kernel.asm	/^    f0100a89:	89 45 e8             	mov    %eax,-0x18(%rbp)$/;"	l
f0100a8c	obj/kern/kernel.asm	/^    f0100a8c:	c6 45 e7 0e          	movb   $0xe,-0x19(%rbp)$/;"	l
f0100a90	obj/kern/kernel.asm	/^    f0100a90:	0f b6 45 e7          	movzbl -0x19(%rbp),%eax$/;"	l
f0100a94	obj/kern/kernel.asm	/^    f0100a94:	8b 55 e8             	mov    -0x18(%rbp),%edx$/;"	l
f0100a97	obj/kern/kernel.asm	/^    f0100a97:	ee                   	out    %al,(%dx)$/;"	l
f0100a98	obj/kern/kernel.asm	/^    f0100a98:	48 b8 04 60 a2 f1 00 	mov    $0xf1a26004,%rax$/;"	l
f0100a9f	obj/kern/kernel.asm	/^    f0100a9f:	00 00 00 $/;"	l
f0100aa2	obj/kern/kernel.asm	/^    f0100aa2:	8b 00                	mov    (%rax),%eax$/;"	l
f0100aa4	obj/kern/kernel.asm	/^    f0100aa4:	83 c0 01             	add    $0x1,%eax$/;"	l
f0100aa7	obj/kern/kernel.asm	/^    f0100aa7:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
f0100aaa	obj/kern/kernel.asm	/^    f0100aaa:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
f0100aad	obj/kern/kernel.asm	/^    f0100aad:	89 c2                	mov    %eax,%edx$/;"	l
f0100aaf	obj/kern/kernel.asm	/^    f0100aaf:	ec                   	in     (%dx),%al$/;"	l
f0100ab0	obj/kern/kernel.asm	/^    f0100ab0:	88 45 f2             	mov    %al,-0xe(%rbp)$/;"	l
f0100ab3	obj/kern/kernel.asm	/^    f0100ab3:	0f b6 45 f2          	movzbl -0xe(%rbp),%eax$/;"	l
f0100ab7	obj/kern/kernel.asm	/^    f0100ab7:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100aba	obj/kern/kernel.asm	/^    f0100aba:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f0100abd	obj/kern/kernel.asm	/^    f0100abd:	89 45 e0             	mov    %eax,-0x20(%rbp)$/;"	l
f0100ac0	obj/kern/kernel.asm	/^    f0100ac0:	48 b8 04 60 a2 f1 00 	mov    $0xf1a26004,%rax$/;"	l
f0100ac7	obj/kern/kernel.asm	/^    f0100ac7:	00 00 00 $/;"	l
f0100aca	obj/kern/kernel.asm	/^    f0100aca:	8b 00                	mov    (%rax),%eax$/;"	l
f0100acc	obj/kern/kernel.asm	/^    f0100acc:	89 45 f4             	mov    %eax,-0xc(%rbp)$/;"	l
f0100acf	obj/kern/kernel.asm	/^    f0100acf:	c6 45 f3 0f          	movb   $0xf,-0xd(%rbp)$/;"	l
f0100ad3	obj/kern/kernel.asm	/^    f0100ad3:	0f b6 45 f3          	movzbl -0xd(%rbp),%eax$/;"	l
f0100ad7	obj/kern/kernel.asm	/^    f0100ad7:	8b 55 f4             	mov    -0xc(%rbp),%edx$/;"	l
f0100ada	obj/kern/kernel.asm	/^    f0100ada:	ee                   	out    %al,(%dx)$/;"	l
f0100adb	obj/kern/kernel.asm	/^    f0100adb:	48 b8 04 60 a2 f1 00 	mov    $0xf1a26004,%rax$/;"	l
f0100ae2	obj/kern/kernel.asm	/^    f0100ae2:	00 00 00 $/;"	l
f0100ae5	obj/kern/kernel.asm	/^    f0100ae5:	8b 00                	mov    (%rax),%eax$/;"	l
f0100ae7	obj/kern/kernel.asm	/^    f0100ae7:	83 c0 01             	add    $0x1,%eax$/;"	l
f0100aea	obj/kern/kernel.asm	/^    f0100aea:	89 45 f8             	mov    %eax,-0x8(%rbp)$/;"	l
f0100aed	obj/kern/kernel.asm	/^    f0100aed:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
f0100af0	obj/kern/kernel.asm	/^    f0100af0:	89 c2                	mov    %eax,%edx$/;"	l
f0100af2	obj/kern/kernel.asm	/^    f0100af2:	ec                   	in     (%dx),%al$/;"	l
f0100af3	obj/kern/kernel.asm	/^    f0100af3:	88 45 ff             	mov    %al,-0x1(%rbp)$/;"	l
f0100af6	obj/kern/kernel.asm	/^    f0100af6:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax$/;"	l
f0100afa	obj/kern/kernel.asm	/^    f0100afa:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100afd	obj/kern/kernel.asm	/^    f0100afd:	09 45 e0             	or     %eax,-0x20(%rbp)$/;"	l
f0100b00	obj/kern/kernel.asm	/^    f0100b00:	48 b8 08 60 a2 f1 00 	mov    $0xf1a26008,%rax$/;"	l
f0100b07	obj/kern/kernel.asm	/^    f0100b07:	00 00 00 $/;"	l
f0100b0a	obj/kern/kernel.asm	/^    f0100b0a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx$/;"	l
f0100b0e	obj/kern/kernel.asm	/^    f0100b0e:	48 89 10             	mov    %rdx,(%rax)$/;"	l
f0100b11	obj/kern/kernel.asm	/^    f0100b11:	8b 45 e0             	mov    -0x20(%rbp),%eax$/;"	l
f0100b14	obj/kern/kernel.asm	/^    f0100b14:	89 c2                	mov    %eax,%edx$/;"	l
f0100b16	obj/kern/kernel.asm	/^    f0100b16:	48 b8 10 60 a2 f1 00 	mov    $0xf1a26010,%rax$/;"	l
f0100b1d	obj/kern/kernel.asm	/^    f0100b1d:	00 00 00 $/;"	l
f0100b20	obj/kern/kernel.asm	/^    f0100b20:	66 89 10             	mov    %dx,(%rax)$/;"	l
f0100b23	obj/kern/kernel.asm	/^    f0100b23:	c9                   	leaveq $/;"	l
f0100b24	obj/kern/kernel.asm	/^    f0100b24:	c3                   	retq   $/;"	l
f0100b25	obj/kern/kernel.asm	/^    f0100b25:	55                   	push   %rbp$/;"	l
f0100b26	obj/kern/kernel.asm	/^    f0100b26:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f0100b29	obj/kern/kernel.asm	/^    f0100b29:	53                   	push   %rbx$/;"	l
f0100b2a	obj/kern/kernel.asm	/^    f0100b2a:	48 83 ec 48          	sub    $0x48,%rsp$/;"	l
f0100b2e	obj/kern/kernel.asm	/^    f0100b2e:	89 7d bc             	mov    %edi,-0x44(%rbp)$/;"	l
f0100b31	obj/kern/kernel.asm	/^    f0100b31:	8b 45 bc             	mov    -0x44(%rbp),%eax$/;"	l
f0100b34	obj/kern/kernel.asm	/^    f0100b34:	b0 00                	mov    $0x0,%al$/;"	l
f0100b36	obj/kern/kernel.asm	/^    f0100b36:	85 c0                	test   %eax,%eax$/;"	l
f0100b38	obj/kern/kernel.asm	/^    f0100b38:	75 07                	jne    fffffffff0100b41 <end+0xfffffffefe65f7a1>$/;"	l
f0100b3a	obj/kern/kernel.asm	/^    f0100b3a:	81 4d bc 00 07 00 00 	orl    $0x700,-0x44(%rbp)$/;"	l
f0100b41	obj/kern/kernel.asm	/^    f0100b41:	8b 45 bc             	mov    -0x44(%rbp),%eax$/;"	l
f0100b44	obj/kern/kernel.asm	/^    f0100b44:	25 ff 00 00 00       	and    $0xff,%eax$/;"	l
f0100b49	obj/kern/kernel.asm	/^    f0100b49:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f0100b4c	obj/kern/kernel.asm	/^    f0100b4c:	0f 84 f9 00 00 00    	je     fffffffff0100c4b <end+0xfffffffefe65f8ab>$/;"	l
f0100b52	obj/kern/kernel.asm	/^    f0100b52:	83 f8 09             	cmp    $0x9,%eax$/;"	l
f0100b55	obj/kern/kernel.asm	/^    f0100b55:	7f 0a                	jg     fffffffff0100b61 <end+0xfffffffefe65f7c1>$/;"	l
f0100b57	obj/kern/kernel.asm	/^    f0100b57:	83 f8 08             	cmp    $0x8,%eax$/;"	l
f0100b5a	obj/kern/kernel.asm	/^    f0100b5a:	74 18                	je     fffffffff0100b74 <end+0xfffffffefe65f7d4>$/;"	l
f0100b5c	obj/kern/kernel.asm	/^    f0100b5c:	e9 41 01 00 00       	jmpq   fffffffff0100ca2 <end+0xfffffffefe65f902>$/;"	l
f0100b61	obj/kern/kernel.asm	/^    f0100b61:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
f0100b64	obj/kern/kernel.asm	/^    f0100b64:	74 74                	je     fffffffff0100bda <end+0xfffffffefe65f83a>$/;"	l
f0100b66	obj/kern/kernel.asm	/^    f0100b66:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
f0100b69	obj/kern/kernel.asm	/^    f0100b69:	0f 84 88 00 00 00    	je     fffffffff0100bf7 <end+0xfffffffefe65f857>$/;"	l
f0100b6f	obj/kern/kernel.asm	/^    f0100b6f:	e9 2e 01 00 00       	jmpq   fffffffff0100ca2 <end+0xfffffffefe65f902>$/;"	l
f0100b74	obj/kern/kernel.asm	/^    f0100b74:	48 b8 10 60 a2 f1 00 	mov    $0xf1a26010,%rax$/;"	l
f0100b7b	obj/kern/kernel.asm	/^    f0100b7b:	00 00 00 $/;"	l
f0100b7e	obj/kern/kernel.asm	/^    f0100b7e:	0f b7 00             	movzwl (%rax),%eax$/;"	l
f0100b81	obj/kern/kernel.asm	/^    f0100b81:	66 85 c0             	test   %ax,%ax$/;"	l
f0100b84	obj/kern/kernel.asm	/^    f0100b84:	0f 84 54 01 00 00    	je     fffffffff0100cde <end+0xfffffffefe65f93e>$/;"	l
f0100b8a	obj/kern/kernel.asm	/^    f0100b8a:	48 b8 10 60 a2 f1 00 	mov    $0xf1a26010,%rax$/;"	l
f0100b91	obj/kern/kernel.asm	/^    f0100b91:	00 00 00 $/;"	l
f0100b94	obj/kern/kernel.asm	/^    f0100b94:	0f b7 00             	movzwl (%rax),%eax$/;"	l
f0100b97	obj/kern/kernel.asm	/^    f0100b97:	8d 50 ff             	lea    -0x1(%rax),%edx$/;"	l
f0100b9a	obj/kern/kernel.asm	/^    f0100b9a:	48 b8 10 60 a2 f1 00 	mov    $0xf1a26010,%rax$/;"	l
f0100ba1	obj/kern/kernel.asm	/^    f0100ba1:	00 00 00 $/;"	l
f0100ba4	obj/kern/kernel.asm	/^    f0100ba4:	66 89 10             	mov    %dx,(%rax)$/;"	l
f0100ba7	obj/kern/kernel.asm	/^    f0100ba7:	48 b8 08 60 a2 f1 00 	mov    $0xf1a26008,%rax$/;"	l
f0100bae	obj/kern/kernel.asm	/^    f0100bae:	00 00 00 $/;"	l
f0100bb1	obj/kern/kernel.asm	/^    f0100bb1:	48 8b 10             	mov    (%rax),%rdx$/;"	l
f0100bb4	obj/kern/kernel.asm	/^    f0100bb4:	48 b8 10 60 a2 f1 00 	mov    $0xf1a26010,%rax$/;"	l
f0100bbb	obj/kern/kernel.asm	/^    f0100bbb:	00 00 00 $/;"	l
f0100bbe	obj/kern/kernel.asm	/^    f0100bbe:	0f b7 00             	movzwl (%rax),%eax$/;"	l
f0100bc1	obj/kern/kernel.asm	/^    f0100bc1:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0100bc4	obj/kern/kernel.asm	/^    f0100bc4:	48 01 c0             	add    %rax,%rax$/;"	l
f0100bc7	obj/kern/kernel.asm	/^    f0100bc7:	48 01 c2             	add    %rax,%rdx$/;"	l
f0100bca	obj/kern/kernel.asm	/^    f0100bca:	8b 45 bc             	mov    -0x44(%rbp),%eax$/;"	l
f0100bcd	obj/kern/kernel.asm	/^    f0100bcd:	b0 00                	mov    $0x0,%al$/;"	l
f0100bcf	obj/kern/kernel.asm	/^    f0100bcf:	83 c8 20             	or     $0x20,%eax$/;"	l
f0100bd2	obj/kern/kernel.asm	/^    f0100bd2:	66 89 02             	mov    %ax,(%rdx)$/;"	l
f0100bd5	obj/kern/kernel.asm	/^    f0100bd5:	e9 05 01 00 00       	jmpq   fffffffff0100cdf <end+0xfffffffefe65f93f>$/;"	l
f0100bda	obj/kern/kernel.asm	/^    f0100bda:	48 b8 10 60 a2 f1 00 	mov    $0xf1a26010,%rax$/;"	l
f0100be1	obj/kern/kernel.asm	/^    f0100be1:	00 00 00 $/;"	l
f0100be4	obj/kern/kernel.asm	/^    f0100be4:	0f b7 00             	movzwl (%rax),%eax$/;"	l
f0100be7	obj/kern/kernel.asm	/^    f0100be7:	8d 50 50             	lea    0x50(%rax),%edx$/;"	l
f0100bea	obj/kern/kernel.asm	/^    f0100bea:	48 b8 10 60 a2 f1 00 	mov    $0xf1a26010,%rax$/;"	l
f0100bf1	obj/kern/kernel.asm	/^    f0100bf1:	00 00 00 $/;"	l
f0100bf4	obj/kern/kernel.asm	/^    f0100bf4:	66 89 10             	mov    %dx,(%rax)$/;"	l
f0100bf7	obj/kern/kernel.asm	/^    f0100bf7:	48 b8 10 60 a2 f1 00 	mov    $0xf1a26010,%rax$/;"	l
f0100bfe	obj/kern/kernel.asm	/^    f0100bfe:	00 00 00 $/;"	l
f0100c01	obj/kern/kernel.asm	/^    f0100c01:	0f b7 18             	movzwl (%rax),%ebx$/;"	l
f0100c04	obj/kern/kernel.asm	/^    f0100c04:	48 b8 10 60 a2 f1 00 	mov    $0xf1a26010,%rax$/;"	l
f0100c0b	obj/kern/kernel.asm	/^    f0100c0b:	00 00 00 $/;"	l
f0100c0e	obj/kern/kernel.asm	/^    f0100c0e:	0f b7 08             	movzwl (%rax),%ecx$/;"	l
f0100c11	obj/kern/kernel.asm	/^    f0100c11:	0f b7 c1             	movzwl %cx,%eax$/;"	l
f0100c14	obj/kern/kernel.asm	/^    f0100c14:	69 c0 cd cc 00 00    	imul   $0xcccd,%eax,%eax$/;"	l
f0100c1a	obj/kern/kernel.asm	/^    f0100c1a:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0100c1d	obj/kern/kernel.asm	/^    f0100c1d:	89 c2                	mov    %eax,%edx$/;"	l
f0100c1f	obj/kern/kernel.asm	/^    f0100c1f:	66 c1 ea 06          	shr    $0x6,%dx$/;"	l
f0100c23	obj/kern/kernel.asm	/^    f0100c23:	89 d0                	mov    %edx,%eax$/;"	l
f0100c25	obj/kern/kernel.asm	/^    f0100c25:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f0100c28	obj/kern/kernel.asm	/^    f0100c28:	01 d0                	add    %edx,%eax$/;"	l
f0100c2a	obj/kern/kernel.asm	/^    f0100c2a:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f0100c2d	obj/kern/kernel.asm	/^    f0100c2d:	89 ca                	mov    %ecx,%edx$/;"	l
f0100c2f	obj/kern/kernel.asm	/^    f0100c2f:	66 29 c2             	sub    %ax,%dx$/;"	l
f0100c32	obj/kern/kernel.asm	/^    f0100c32:	89 d8                	mov    %ebx,%eax$/;"	l
f0100c34	obj/kern/kernel.asm	/^    f0100c34:	66 29 d0             	sub    %dx,%ax$/;"	l
f0100c37	obj/kern/kernel.asm	/^    f0100c37:	89 c2                	mov    %eax,%edx$/;"	l
f0100c39	obj/kern/kernel.asm	/^    f0100c39:	48 b8 10 60 a2 f1 00 	mov    $0xf1a26010,%rax$/;"	l
f0100c40	obj/kern/kernel.asm	/^    f0100c40:	00 00 00 $/;"	l
f0100c43	obj/kern/kernel.asm	/^    f0100c43:	66 89 10             	mov    %dx,(%rax)$/;"	l
f0100c46	obj/kern/kernel.asm	/^    f0100c46:	e9 94 00 00 00       	jmpq   fffffffff0100cdf <end+0xfffffffefe65f93f>$/;"	l
f0100c4b	obj/kern/kernel.asm	/^    f0100c4b:	bf 20 00 00 00       	mov    $0x20,%edi$/;"	l
f0100c50	obj/kern/kernel.asm	/^    f0100c50:	48 b8 de 11 10 f0 00 	mov    $0xf01011de,%rax$/;"	l
f0100c57	obj/kern/kernel.asm	/^    f0100c57:	00 00 00 $/;"	l
f0100c5a	obj/kern/kernel.asm	/^    f0100c5a:	ff d0                	callq  *%rax$/;"	l
f0100c5c	obj/kern/kernel.asm	/^    f0100c5c:	bf 20 00 00 00       	mov    $0x20,%edi$/;"	l
f0100c61	obj/kern/kernel.asm	/^    f0100c61:	48 b8 de 11 10 f0 00 	mov    $0xf01011de,%rax$/;"	l
f0100c68	obj/kern/kernel.asm	/^    f0100c68:	00 00 00 $/;"	l
f0100c6b	obj/kern/kernel.asm	/^    f0100c6b:	ff d0                	callq  *%rax$/;"	l
f0100c6d	obj/kern/kernel.asm	/^    f0100c6d:	bf 20 00 00 00       	mov    $0x20,%edi$/;"	l
f0100c72	obj/kern/kernel.asm	/^    f0100c72:	48 b8 de 11 10 f0 00 	mov    $0xf01011de,%rax$/;"	l
f0100c79	obj/kern/kernel.asm	/^    f0100c79:	00 00 00 $/;"	l
f0100c7c	obj/kern/kernel.asm	/^    f0100c7c:	ff d0                	callq  *%rax$/;"	l
f0100c7e	obj/kern/kernel.asm	/^    f0100c7e:	bf 20 00 00 00       	mov    $0x20,%edi$/;"	l
f0100c83	obj/kern/kernel.asm	/^    f0100c83:	48 b8 de 11 10 f0 00 	mov    $0xf01011de,%rax$/;"	l
f0100c8a	obj/kern/kernel.asm	/^    f0100c8a:	00 00 00 $/;"	l
f0100c8d	obj/kern/kernel.asm	/^    f0100c8d:	ff d0                	callq  *%rax$/;"	l
f0100c8f	obj/kern/kernel.asm	/^    f0100c8f:	bf 20 00 00 00       	mov    $0x20,%edi$/;"	l
f0100c94	obj/kern/kernel.asm	/^    f0100c94:	48 b8 de 11 10 f0 00 	mov    $0xf01011de,%rax$/;"	l
f0100c9b	obj/kern/kernel.asm	/^    f0100c9b:	00 00 00 $/;"	l
f0100c9e	obj/kern/kernel.asm	/^    f0100c9e:	ff d0                	callq  *%rax$/;"	l
f0100ca0	obj/kern/kernel.asm	/^    f0100ca0:	eb 3d                	jmp    fffffffff0100cdf <end+0xfffffffefe65f93f>$/;"	l
f0100ca2	obj/kern/kernel.asm	/^    f0100ca2:	48 b8 08 60 a2 f1 00 	mov    $0xf1a26008,%rax$/;"	l
f0100ca9	obj/kern/kernel.asm	/^    f0100ca9:	00 00 00 $/;"	l
f0100cac	obj/kern/kernel.asm	/^    f0100cac:	48 8b 10             	mov    (%rax),%rdx$/;"	l
f0100caf	obj/kern/kernel.asm	/^    f0100caf:	48 b8 10 60 a2 f1 00 	mov    $0xf1a26010,%rax$/;"	l
f0100cb6	obj/kern/kernel.asm	/^    f0100cb6:	00 00 00 $/;"	l
f0100cb9	obj/kern/kernel.asm	/^    f0100cb9:	0f b7 00             	movzwl (%rax),%eax$/;"	l
f0100cbc	obj/kern/kernel.asm	/^    f0100cbc:	0f b7 c8             	movzwl %ax,%ecx$/;"	l
f0100cbf	obj/kern/kernel.asm	/^    f0100cbf:	48 01 c9             	add    %rcx,%rcx$/;"	l
f0100cc2	obj/kern/kernel.asm	/^    f0100cc2:	48 8d 0c 0a          	lea    (%rdx,%rcx,1),%rcx$/;"	l
f0100cc6	obj/kern/kernel.asm	/^    f0100cc6:	8b 55 bc             	mov    -0x44(%rbp),%edx$/;"	l
f0100cc9	obj/kern/kernel.asm	/^    f0100cc9:	66 89 11             	mov    %dx,(%rcx)$/;"	l
f0100ccc	obj/kern/kernel.asm	/^    f0100ccc:	8d 50 01             	lea    0x1(%rax),%edx$/;"	l
f0100ccf	obj/kern/kernel.asm	/^    f0100ccf:	48 b8 10 60 a2 f1 00 	mov    $0xf1a26010,%rax$/;"	l
f0100cd6	obj/kern/kernel.asm	/^    f0100cd6:	00 00 00 $/;"	l
f0100cd9	obj/kern/kernel.asm	/^    f0100cd9:	66 89 10             	mov    %dx,(%rax)$/;"	l
f0100cdc	obj/kern/kernel.asm	/^    f0100cdc:	eb 01                	jmp    fffffffff0100cdf <end+0xfffffffefe65f93f>$/;"	l
f0100cde	obj/kern/kernel.asm	/^    f0100cde:	90                   	nop$/;"	l
f0100cdf	obj/kern/kernel.asm	/^    f0100cdf:	48 b8 10 60 a2 f1 00 	mov    $0xf1a26010,%rax$/;"	l
f0100ce6	obj/kern/kernel.asm	/^    f0100ce6:	00 00 00 $/;"	l
f0100ce9	obj/kern/kernel.asm	/^    f0100ce9:	0f b7 00             	movzwl (%rax),%eax$/;"	l
f0100cec	obj/kern/kernel.asm	/^    f0100cec:	66 3d cf 07          	cmp    $0x7cf,%ax$/;"	l
f0100cf0	obj/kern/kernel.asm	/^    f0100cf0:	0f 86 89 00 00 00    	jbe    fffffffff0100d7f <end+0xfffffffefe65f9df>$/;"	l
f0100cf6	obj/kern/kernel.asm	/^    f0100cf6:	48 b8 08 60 a2 f1 00 	mov    $0xf1a26008,%rax$/;"	l
f0100cfd	obj/kern/kernel.asm	/^    f0100cfd:	00 00 00 $/;"	l
f0100d00	obj/kern/kernel.asm	/^    f0100d00:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0100d03	obj/kern/kernel.asm	/^    f0100d03:	48 8d 88 a0 00 00 00 	lea    0xa0(%rax),%rcx$/;"	l
f0100d0a	obj/kern/kernel.asm	/^    f0100d0a:	48 b8 08 60 a2 f1 00 	mov    $0xf1a26008,%rax$/;"	l
f0100d11	obj/kern/kernel.asm	/^    f0100d11:	00 00 00 $/;"	l
f0100d14	obj/kern/kernel.asm	/^    f0100d14:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0100d17	obj/kern/kernel.asm	/^    f0100d17:	ba 00 0f 00 00       	mov    $0xf00,%edx$/;"	l
f0100d1c	obj/kern/kernel.asm	/^    f0100d1c:	48 89 ce             	mov    %rcx,%rsi$/;"	l
f0100d1f	obj/kern/kernel.asm	/^    f0100d1f:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0100d22	obj/kern/kernel.asm	/^    f0100d22:	48 b8 cd ee 10 f0 00 	mov    $0xf010eecd,%rax$/;"	l
f0100d29	obj/kern/kernel.asm	/^    f0100d29:	00 00 00 $/;"	l
f0100d2c	obj/kern/kernel.asm	/^    f0100d2c:	ff d0                	callq  *%rax$/;"	l
f0100d2e	obj/kern/kernel.asm	/^    f0100d2e:	c7 45 cc 80 07 00 00 	movl   $0x780,-0x34(%rbp)$/;"	l
f0100d35	obj/kern/kernel.asm	/^    f0100d35:	eb 22                	jmp    fffffffff0100d59 <end+0xfffffffefe65f9b9>$/;"	l
f0100d37	obj/kern/kernel.asm	/^    f0100d37:	48 b8 08 60 a2 f1 00 	mov    $0xf1a26008,%rax$/;"	l
f0100d3e	obj/kern/kernel.asm	/^    f0100d3e:	00 00 00 $/;"	l
f0100d41	obj/kern/kernel.asm	/^    f0100d41:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0100d44	obj/kern/kernel.asm	/^    f0100d44:	8b 55 cc             	mov    -0x34(%rbp),%edx$/;"	l
f0100d47	obj/kern/kernel.asm	/^    f0100d47:	48 63 d2             	movslq %edx,%rdx$/;"	l
f0100d4a	obj/kern/kernel.asm	/^    f0100d4a:	48 01 d2             	add    %rdx,%rdx$/;"	l
f0100d4d	obj/kern/kernel.asm	/^    f0100d4d:	48 01 d0             	add    %rdx,%rax$/;"	l
f0100d50	obj/kern/kernel.asm	/^    f0100d50:	66 c7 00 20 07       	movw   $0x720,(%rax)$/;"	l
f0100d55	obj/kern/kernel.asm	/^    f0100d55:	83 45 cc 01          	addl   $0x1,-0x34(%rbp)$/;"	l
f0100d59	obj/kern/kernel.asm	/^    f0100d59:	81 7d cc cf 07 00 00 	cmpl   $0x7cf,-0x34(%rbp)$/;"	l
f0100d60	obj/kern/kernel.asm	/^    f0100d60:	7e d5                	jle    fffffffff0100d37 <end+0xfffffffefe65f997>$/;"	l
f0100d62	obj/kern/kernel.asm	/^    f0100d62:	48 b8 10 60 a2 f1 00 	mov    $0xf1a26010,%rax$/;"	l
f0100d69	obj/kern/kernel.asm	/^    f0100d69:	00 00 00 $/;"	l
f0100d6c	obj/kern/kernel.asm	/^    f0100d6c:	0f b7 00             	movzwl (%rax),%eax$/;"	l
f0100d6f	obj/kern/kernel.asm	/^    f0100d6f:	8d 50 b0             	lea    -0x50(%rax),%edx$/;"	l
f0100d72	obj/kern/kernel.asm	/^    f0100d72:	48 b8 10 60 a2 f1 00 	mov    $0xf1a26010,%rax$/;"	l
f0100d79	obj/kern/kernel.asm	/^    f0100d79:	00 00 00 $/;"	l
f0100d7c	obj/kern/kernel.asm	/^    f0100d7c:	66 89 10             	mov    %dx,(%rax)$/;"	l
f0100d7f	obj/kern/kernel.asm	/^    f0100d7f:	48 b8 04 60 a2 f1 00 	mov    $0xf1a26004,%rax$/;"	l
f0100d86	obj/kern/kernel.asm	/^    f0100d86:	00 00 00 $/;"	l
f0100d89	obj/kern/kernel.asm	/^    f0100d89:	8b 00                	mov    (%rax),%eax$/;"	l
f0100d8b	obj/kern/kernel.asm	/^    f0100d8b:	89 45 d4             	mov    %eax,-0x2c(%rbp)$/;"	l
f0100d8e	obj/kern/kernel.asm	/^    f0100d8e:	c6 45 d3 0e          	movb   $0xe,-0x2d(%rbp)$/;"	l
f0100d92	obj/kern/kernel.asm	/^    f0100d92:	0f b6 45 d3          	movzbl -0x2d(%rbp),%eax$/;"	l
f0100d96	obj/kern/kernel.asm	/^    f0100d96:	8b 55 d4             	mov    -0x2c(%rbp),%edx$/;"	l
f0100d99	obj/kern/kernel.asm	/^    f0100d99:	ee                   	out    %al,(%dx)$/;"	l
f0100d9a	obj/kern/kernel.asm	/^    f0100d9a:	48 b8 10 60 a2 f1 00 	mov    $0xf1a26010,%rax$/;"	l
f0100da1	obj/kern/kernel.asm	/^    f0100da1:	00 00 00 $/;"	l
f0100da4	obj/kern/kernel.asm	/^    f0100da4:	0f b7 00             	movzwl (%rax),%eax$/;"	l
f0100da7	obj/kern/kernel.asm	/^    f0100da7:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f0100dab	obj/kern/kernel.asm	/^    f0100dab:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100dae	obj/kern/kernel.asm	/^    f0100dae:	48 ba 04 60 a2 f1 00 	mov    $0xf1a26004,%rdx$/;"	l
f0100db5	obj/kern/kernel.asm	/^    f0100db5:	00 00 00 $/;"	l
f0100db8	obj/kern/kernel.asm	/^    f0100db8:	8b 12                	mov    (%rdx),%edx$/;"	l
f0100dba	obj/kern/kernel.asm	/^    f0100dba:	83 c2 01             	add    $0x1,%edx$/;"	l
f0100dbd	obj/kern/kernel.asm	/^    f0100dbd:	89 55 dc             	mov    %edx,-0x24(%rbp)$/;"	l
f0100dc0	obj/kern/kernel.asm	/^    f0100dc0:	88 45 db             	mov    %al,-0x25(%rbp)$/;"	l
f0100dc3	obj/kern/kernel.asm	/^    f0100dc3:	0f b6 45 db          	movzbl -0x25(%rbp),%eax$/;"	l
f0100dc7	obj/kern/kernel.asm	/^    f0100dc7:	8b 55 dc             	mov    -0x24(%rbp),%edx$/;"	l
f0100dca	obj/kern/kernel.asm	/^    f0100dca:	ee                   	out    %al,(%dx)$/;"	l
f0100dcb	obj/kern/kernel.asm	/^    f0100dcb:	48 b8 04 60 a2 f1 00 	mov    $0xf1a26004,%rax$/;"	l
f0100dd2	obj/kern/kernel.asm	/^    f0100dd2:	00 00 00 $/;"	l
f0100dd5	obj/kern/kernel.asm	/^    f0100dd5:	8b 00                	mov    (%rax),%eax$/;"	l
f0100dd7	obj/kern/kernel.asm	/^    f0100dd7:	89 45 e4             	mov    %eax,-0x1c(%rbp)$/;"	l
f0100dda	obj/kern/kernel.asm	/^    f0100dda:	c6 45 e3 0f          	movb   $0xf,-0x1d(%rbp)$/;"	l
f0100dde	obj/kern/kernel.asm	/^    f0100dde:	0f b6 45 e3          	movzbl -0x1d(%rbp),%eax$/;"	l
f0100de2	obj/kern/kernel.asm	/^    f0100de2:	8b 55 e4             	mov    -0x1c(%rbp),%edx$/;"	l
f0100de5	obj/kern/kernel.asm	/^    f0100de5:	ee                   	out    %al,(%dx)$/;"	l
f0100de6	obj/kern/kernel.asm	/^    f0100de6:	48 b8 10 60 a2 f1 00 	mov    $0xf1a26010,%rax$/;"	l
f0100ded	obj/kern/kernel.asm	/^    f0100ded:	00 00 00 $/;"	l
f0100df0	obj/kern/kernel.asm	/^    f0100df0:	0f b7 00             	movzwl (%rax),%eax$/;"	l
f0100df3	obj/kern/kernel.asm	/^    f0100df3:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100df6	obj/kern/kernel.asm	/^    f0100df6:	48 ba 04 60 a2 f1 00 	mov    $0xf1a26004,%rdx$/;"	l
f0100dfd	obj/kern/kernel.asm	/^    f0100dfd:	00 00 00 $/;"	l
f0100e00	obj/kern/kernel.asm	/^    f0100e00:	8b 12                	mov    (%rdx),%edx$/;"	l
f0100e02	obj/kern/kernel.asm	/^    f0100e02:	83 c2 01             	add    $0x1,%edx$/;"	l
f0100e05	obj/kern/kernel.asm	/^    f0100e05:	89 55 ec             	mov    %edx,-0x14(%rbp)$/;"	l
f0100e08	obj/kern/kernel.asm	/^    f0100e08:	88 45 eb             	mov    %al,-0x15(%rbp)$/;"	l
f0100e0b	obj/kern/kernel.asm	/^    f0100e0b:	0f b6 45 eb          	movzbl -0x15(%rbp),%eax$/;"	l
f0100e0f	obj/kern/kernel.asm	/^    f0100e0f:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
f0100e12	obj/kern/kernel.asm	/^    f0100e12:	ee                   	out    %al,(%dx)$/;"	l
f0100e13	obj/kern/kernel.asm	/^    f0100e13:	48 83 c4 48          	add    $0x48,%rsp$/;"	l
f0100e17	obj/kern/kernel.asm	/^    f0100e17:	5b                   	pop    %rbx$/;"	l
f0100e18	obj/kern/kernel.asm	/^    f0100e18:	c9                   	leaveq $/;"	l
f0100e19	obj/kern/kernel.asm	/^    f0100e19:	c3                   	retq   $/;"	l
f0100e1a	obj/kern/kernel.asm	/^    f0100e1a:	55                   	push   %rbp$/;"	l
f0100e1b	obj/kern/kernel.asm	/^    f0100e1b:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f0100e1e	obj/kern/kernel.asm	/^    f0100e1e:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
f0100e22	obj/kern/kernel.asm	/^    f0100e22:	c7 45 ec 64 00 00 00 	movl   $0x64,-0x14(%rbp)$/;"	l
f0100e29	obj/kern/kernel.asm	/^    f0100e29:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
f0100e2c	obj/kern/kernel.asm	/^    f0100e2c:	89 c2                	mov    %eax,%edx$/;"	l
f0100e2e	obj/kern/kernel.asm	/^    f0100e2e:	ec                   	in     (%dx),%al$/;"	l
f0100e2f	obj/kern/kernel.asm	/^    f0100e2f:	88 45 f3             	mov    %al,-0xd(%rbp)$/;"	l
f0100e32	obj/kern/kernel.asm	/^    f0100e32:	0f b6 45 f3          	movzbl -0xd(%rbp),%eax$/;"	l
f0100e36	obj/kern/kernel.asm	/^    f0100e36:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100e39	obj/kern/kernel.asm	/^    f0100e39:	83 e0 01             	and    $0x1,%eax$/;"	l
f0100e3c	obj/kern/kernel.asm	/^    f0100e3c:	85 c0                	test   %eax,%eax$/;"	l
f0100e3e	obj/kern/kernel.asm	/^    f0100e3e:	75 0a                	jne    fffffffff0100e4a <end+0xfffffffefe65faaa>$/;"	l
f0100e40	obj/kern/kernel.asm	/^    f0100e40:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f0100e45	obj/kern/kernel.asm	/^    f0100e45:	e9 fd 01 00 00       	jmpq   fffffffff0101047 <end+0xfffffffefe65fca7>$/;"	l
f0100e4a	obj/kern/kernel.asm	/^    f0100e4a:	c7 45 f4 60 00 00 00 	movl   $0x60,-0xc(%rbp)$/;"	l
f0100e51	obj/kern/kernel.asm	/^    f0100e51:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
f0100e54	obj/kern/kernel.asm	/^    f0100e54:	89 c2                	mov    %eax,%edx$/;"	l
f0100e56	obj/kern/kernel.asm	/^    f0100e56:	ec                   	in     (%dx),%al$/;"	l
f0100e57	obj/kern/kernel.asm	/^    f0100e57:	88 45 fa             	mov    %al,-0x6(%rbp)$/;"	l
f0100e5a	obj/kern/kernel.asm	/^    f0100e5a:	0f b6 45 fa          	movzbl -0x6(%rbp),%eax$/;"	l
f0100e5e	obj/kern/kernel.asm	/^    f0100e5e:	88 45 eb             	mov    %al,-0x15(%rbp)$/;"	l
f0100e61	obj/kern/kernel.asm	/^    f0100e61:	80 7d eb e0          	cmpb   $0xe0,-0x15(%rbp)$/;"	l
f0100e65	obj/kern/kernel.asm	/^    f0100e65:	75 27                	jne    fffffffff0100e8e <end+0xfffffffefe65faee>$/;"	l
f0100e67	obj/kern/kernel.asm	/^    f0100e67:	48 b8 28 62 a2 f1 00 	mov    $0xf1a26228,%rax$/;"	l
f0100e6e	obj/kern/kernel.asm	/^    f0100e6e:	00 00 00 $/;"	l
f0100e71	obj/kern/kernel.asm	/^    f0100e71:	8b 00                	mov    (%rax),%eax$/;"	l
f0100e73	obj/kern/kernel.asm	/^    f0100e73:	89 c2                	mov    %eax,%edx$/;"	l
f0100e75	obj/kern/kernel.asm	/^    f0100e75:	83 ca 40             	or     $0x40,%edx$/;"	l
f0100e78	obj/kern/kernel.asm	/^    f0100e78:	48 b8 28 62 a2 f1 00 	mov    $0xf1a26228,%rax$/;"	l
f0100e7f	obj/kern/kernel.asm	/^    f0100e7f:	00 00 00 $/;"	l
f0100e82	obj/kern/kernel.asm	/^    f0100e82:	89 10                	mov    %edx,(%rax)$/;"	l
f0100e84	obj/kern/kernel.asm	/^    f0100e84:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100e89	obj/kern/kernel.asm	/^    f0100e89:	e9 b9 01 00 00       	jmpq   fffffffff0101047 <end+0xfffffffefe65fca7>$/;"	l
f0100e8e	obj/kern/kernel.asm	/^    f0100e8e:	0f b6 45 eb          	movzbl -0x15(%rbp),%eax$/;"	l
f0100e92	obj/kern/kernel.asm	/^    f0100e92:	84 c0                	test   %al,%al$/;"	l
f0100e94	obj/kern/kernel.asm	/^    f0100e94:	79 65                	jns    fffffffff0100efb <end+0xfffffffefe65fb5b>$/;"	l
f0100e96	obj/kern/kernel.asm	/^    f0100e96:	48 b8 28 62 a2 f1 00 	mov    $0xf1a26228,%rax$/;"	l
f0100e9d	obj/kern/kernel.asm	/^    f0100e9d:	00 00 00 $/;"	l
f0100ea0	obj/kern/kernel.asm	/^    f0100ea0:	8b 00                	mov    (%rax),%eax$/;"	l
f0100ea2	obj/kern/kernel.asm	/^    f0100ea2:	83 e0 40             	and    $0x40,%eax$/;"	l
f0100ea5	obj/kern/kernel.asm	/^    f0100ea5:	85 c0                	test   %eax,%eax$/;"	l
f0100ea7	obj/kern/kernel.asm	/^    f0100ea7:	75 09                	jne    fffffffff0100eb2 <end+0xfffffffefe65fb12>$/;"	l
f0100ea9	obj/kern/kernel.asm	/^    f0100ea9:	0f b6 45 eb          	movzbl -0x15(%rbp),%eax$/;"	l
f0100ead	obj/kern/kernel.asm	/^    f0100ead:	83 e0 7f             	and    $0x7f,%eax$/;"	l
f0100eb0	obj/kern/kernel.asm	/^    f0100eb0:	eb 04                	jmp    fffffffff0100eb6 <end+0xfffffffefe65fb16>$/;"	l
f0100eb2	obj/kern/kernel.asm	/^    f0100eb2:	0f b6 45 eb          	movzbl -0x15(%rbp),%eax$/;"	l
f0100eb6	obj/kern/kernel.asm	/^    f0100eb6:	88 45 eb             	mov    %al,-0x15(%rbp)$/;"	l
f0100eb9	obj/kern/kernel.asm	/^    f0100eb9:	0f b6 45 eb          	movzbl -0x15(%rbp),%eax$/;"	l
f0100ebd	obj/kern/kernel.asm	/^    f0100ebd:	48 ba 40 00 13 f0 00 	mov    $0xf0130040,%rdx$/;"	l
f0100ec4	obj/kern/kernel.asm	/^    f0100ec4:	00 00 00 $/;"	l
f0100ec7	obj/kern/kernel.asm	/^    f0100ec7:	48 98                	cltq   $/;"	l
f0100ec9	obj/kern/kernel.asm	/^    f0100ec9:	0f b6 04 02          	movzbl (%rdx,%rax,1),%eax$/;"	l
f0100ecd	obj/kern/kernel.asm	/^    f0100ecd:	83 c8 40             	or     $0x40,%eax$/;"	l
f0100ed0	obj/kern/kernel.asm	/^    f0100ed0:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100ed3	obj/kern/kernel.asm	/^    f0100ed3:	f7 d0                	not    %eax$/;"	l
f0100ed5	obj/kern/kernel.asm	/^    f0100ed5:	89 c2                	mov    %eax,%edx$/;"	l
f0100ed7	obj/kern/kernel.asm	/^    f0100ed7:	48 b8 28 62 a2 f1 00 	mov    $0xf1a26228,%rax$/;"	l
f0100ede	obj/kern/kernel.asm	/^    f0100ede:	00 00 00 $/;"	l
f0100ee1	obj/kern/kernel.asm	/^    f0100ee1:	8b 00                	mov    (%rax),%eax$/;"	l
f0100ee3	obj/kern/kernel.asm	/^    f0100ee3:	21 c2                	and    %eax,%edx$/;"	l
f0100ee5	obj/kern/kernel.asm	/^    f0100ee5:	48 b8 28 62 a2 f1 00 	mov    $0xf1a26228,%rax$/;"	l
f0100eec	obj/kern/kernel.asm	/^    f0100eec:	00 00 00 $/;"	l
f0100eef	obj/kern/kernel.asm	/^    f0100eef:	89 10                	mov    %edx,(%rax)$/;"	l
f0100ef1	obj/kern/kernel.asm	/^    f0100ef1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0100ef6	obj/kern/kernel.asm	/^    f0100ef6:	e9 4c 01 00 00       	jmpq   fffffffff0101047 <end+0xfffffffefe65fca7>$/;"	l
f0100efb	obj/kern/kernel.asm	/^    f0100efb:	48 b8 28 62 a2 f1 00 	mov    $0xf1a26228,%rax$/;"	l
f0100f02	obj/kern/kernel.asm	/^    f0100f02:	00 00 00 $/;"	l
f0100f05	obj/kern/kernel.asm	/^    f0100f05:	8b 00                	mov    (%rax),%eax$/;"	l
f0100f07	obj/kern/kernel.asm	/^    f0100f07:	83 e0 40             	and    $0x40,%eax$/;"	l
f0100f0a	obj/kern/kernel.asm	/^    f0100f0a:	85 c0                	test   %eax,%eax$/;"	l
f0100f0c	obj/kern/kernel.asm	/^    f0100f0c:	74 21                	je     fffffffff0100f2f <end+0xfffffffefe65fb8f>$/;"	l
f0100f0e	obj/kern/kernel.asm	/^    f0100f0e:	80 4d eb 80          	orb    $0x80,-0x15(%rbp)$/;"	l
f0100f12	obj/kern/kernel.asm	/^    f0100f12:	48 b8 28 62 a2 f1 00 	mov    $0xf1a26228,%rax$/;"	l
f0100f19	obj/kern/kernel.asm	/^    f0100f19:	00 00 00 $/;"	l
f0100f1c	obj/kern/kernel.asm	/^    f0100f1c:	8b 00                	mov    (%rax),%eax$/;"	l
f0100f1e	obj/kern/kernel.asm	/^    f0100f1e:	89 c2                	mov    %eax,%edx$/;"	l
f0100f20	obj/kern/kernel.asm	/^    f0100f20:	83 e2 bf             	and    $0xffffffffffffffbf,%edx$/;"	l
f0100f23	obj/kern/kernel.asm	/^    f0100f23:	48 b8 28 62 a2 f1 00 	mov    $0xf1a26228,%rax$/;"	l
f0100f2a	obj/kern/kernel.asm	/^    f0100f2a:	00 00 00 $/;"	l
f0100f2d	obj/kern/kernel.asm	/^    f0100f2d:	89 10                	mov    %edx,(%rax)$/;"	l
f0100f2f	obj/kern/kernel.asm	/^    f0100f2f:	0f b6 45 eb          	movzbl -0x15(%rbp),%eax$/;"	l
f0100f33	obj/kern/kernel.asm	/^    f0100f33:	48 ba 40 00 13 f0 00 	mov    $0xf0130040,%rdx$/;"	l
f0100f3a	obj/kern/kernel.asm	/^    f0100f3a:	00 00 00 $/;"	l
f0100f3d	obj/kern/kernel.asm	/^    f0100f3d:	48 98                	cltq   $/;"	l
f0100f3f	obj/kern/kernel.asm	/^    f0100f3f:	0f b6 04 02          	movzbl (%rdx,%rax,1),%eax$/;"	l
f0100f43	obj/kern/kernel.asm	/^    f0100f43:	0f b6 d0             	movzbl %al,%edx$/;"	l
f0100f46	obj/kern/kernel.asm	/^    f0100f46:	48 b8 28 62 a2 f1 00 	mov    $0xf1a26228,%rax$/;"	l
f0100f4d	obj/kern/kernel.asm	/^    f0100f4d:	00 00 00 $/;"	l
f0100f50	obj/kern/kernel.asm	/^    f0100f50:	8b 00                	mov    (%rax),%eax$/;"	l
f0100f52	obj/kern/kernel.asm	/^    f0100f52:	09 c2                	or     %eax,%edx$/;"	l
f0100f54	obj/kern/kernel.asm	/^    f0100f54:	48 b8 28 62 a2 f1 00 	mov    $0xf1a26228,%rax$/;"	l
f0100f5b	obj/kern/kernel.asm	/^    f0100f5b:	00 00 00 $/;"	l
f0100f5e	obj/kern/kernel.asm	/^    f0100f5e:	89 10                	mov    %edx,(%rax)$/;"	l
f0100f60	obj/kern/kernel.asm	/^    f0100f60:	0f b6 45 eb          	movzbl -0x15(%rbp),%eax$/;"	l
f0100f64	obj/kern/kernel.asm	/^    f0100f64:	48 ba 40 01 13 f0 00 	mov    $0xf0130140,%rdx$/;"	l
f0100f6b	obj/kern/kernel.asm	/^    f0100f6b:	00 00 00 $/;"	l
f0100f6e	obj/kern/kernel.asm	/^    f0100f6e:	48 98                	cltq   $/;"	l
f0100f70	obj/kern/kernel.asm	/^    f0100f70:	0f b6 04 02          	movzbl (%rdx,%rax,1),%eax$/;"	l
f0100f74	obj/kern/kernel.asm	/^    f0100f74:	0f b6 d0             	movzbl %al,%edx$/;"	l
f0100f77	obj/kern/kernel.asm	/^    f0100f77:	48 b8 28 62 a2 f1 00 	mov    $0xf1a26228,%rax$/;"	l
f0100f7e	obj/kern/kernel.asm	/^    f0100f7e:	00 00 00 $/;"	l
f0100f81	obj/kern/kernel.asm	/^    f0100f81:	8b 00                	mov    (%rax),%eax$/;"	l
f0100f83	obj/kern/kernel.asm	/^    f0100f83:	31 c2                	xor    %eax,%edx$/;"	l
f0100f85	obj/kern/kernel.asm	/^    f0100f85:	48 b8 28 62 a2 f1 00 	mov    $0xf1a26228,%rax$/;"	l
f0100f8c	obj/kern/kernel.asm	/^    f0100f8c:	00 00 00 $/;"	l
f0100f8f	obj/kern/kernel.asm	/^    f0100f8f:	89 10                	mov    %edx,(%rax)$/;"	l
f0100f91	obj/kern/kernel.asm	/^    f0100f91:	48 b8 28 62 a2 f1 00 	mov    $0xf1a26228,%rax$/;"	l
f0100f98	obj/kern/kernel.asm	/^    f0100f98:	00 00 00 $/;"	l
f0100f9b	obj/kern/kernel.asm	/^    f0100f9b:	8b 00                	mov    (%rax),%eax$/;"	l
f0100f9d	obj/kern/kernel.asm	/^    f0100f9d:	89 c2                	mov    %eax,%edx$/;"	l
f0100f9f	obj/kern/kernel.asm	/^    f0100f9f:	83 e2 03             	and    $0x3,%edx$/;"	l
f0100fa2	obj/kern/kernel.asm	/^    f0100fa2:	48 b8 40 05 13 f0 00 	mov    $0xf0130540,%rax$/;"	l
f0100fa9	obj/kern/kernel.asm	/^    f0100fa9:	00 00 00 $/;"	l
f0100fac	obj/kern/kernel.asm	/^    f0100fac:	89 d2                	mov    %edx,%edx$/;"	l
f0100fae	obj/kern/kernel.asm	/^    f0100fae:	48 8b 14 d0          	mov    (%rax,%rdx,8),%rdx$/;"	l
f0100fb2	obj/kern/kernel.asm	/^    f0100fb2:	0f b6 45 eb          	movzbl -0x15(%rbp),%eax$/;"	l
f0100fb6	obj/kern/kernel.asm	/^    f0100fb6:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f0100fba	obj/kern/kernel.asm	/^    f0100fba:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f0100fbd	obj/kern/kernel.asm	/^    f0100fbd:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0100fc0	obj/kern/kernel.asm	/^    f0100fc0:	89 45 e4             	mov    %eax,-0x1c(%rbp)$/;"	l
f0100fc3	obj/kern/kernel.asm	/^    f0100fc3:	48 b8 28 62 a2 f1 00 	mov    $0xf1a26228,%rax$/;"	l
f0100fca	obj/kern/kernel.asm	/^    f0100fca:	00 00 00 $/;"	l
f0100fcd	obj/kern/kernel.asm	/^    f0100fcd:	8b 00                	mov    (%rax),%eax$/;"	l
f0100fcf	obj/kern/kernel.asm	/^    f0100fcf:	83 e0 08             	and    $0x8,%eax$/;"	l
f0100fd2	obj/kern/kernel.asm	/^    f0100fd2:	85 c0                	test   %eax,%eax$/;"	l
f0100fd4	obj/kern/kernel.asm	/^    f0100fd4:	74 22                	je     fffffffff0100ff8 <end+0xfffffffefe65fc58>$/;"	l
f0100fd6	obj/kern/kernel.asm	/^    f0100fd6:	83 7d e4 60          	cmpl   $0x60,-0x1c(%rbp)$/;"	l
f0100fda	obj/kern/kernel.asm	/^    f0100fda:	7e 0c                	jle    fffffffff0100fe8 <end+0xfffffffefe65fc48>$/;"	l
f0100fdc	obj/kern/kernel.asm	/^    f0100fdc:	83 7d e4 7a          	cmpl   $0x7a,-0x1c(%rbp)$/;"	l
f0100fe0	obj/kern/kernel.asm	/^    f0100fe0:	7f 06                	jg     fffffffff0100fe8 <end+0xfffffffefe65fc48>$/;"	l
f0100fe2	obj/kern/kernel.asm	/^    f0100fe2:	83 6d e4 20          	subl   $0x20,-0x1c(%rbp)$/;"	l
f0100fe6	obj/kern/kernel.asm	/^    f0100fe6:	eb 10                	jmp    fffffffff0100ff8 <end+0xfffffffefe65fc58>$/;"	l
f0100fe8	obj/kern/kernel.asm	/^    f0100fe8:	83 7d e4 40          	cmpl   $0x40,-0x1c(%rbp)$/;"	l
f0100fec	obj/kern/kernel.asm	/^    f0100fec:	7e 0a                	jle    fffffffff0100ff8 <end+0xfffffffefe65fc58>$/;"	l
f0100fee	obj/kern/kernel.asm	/^    f0100fee:	83 7d e4 5a          	cmpl   $0x5a,-0x1c(%rbp)$/;"	l
f0100ff2	obj/kern/kernel.asm	/^    f0100ff2:	7f 04                	jg     fffffffff0100ff8 <end+0xfffffffefe65fc58>$/;"	l
f0100ff4	obj/kern/kernel.asm	/^    f0100ff4:	83 45 e4 20          	addl   $0x20,-0x1c(%rbp)$/;"	l
f0100ff8	obj/kern/kernel.asm	/^    f0100ff8:	48 b8 28 62 a2 f1 00 	mov    $0xf1a26228,%rax$/;"	l
f0100fff	obj/kern/kernel.asm	/^    f0100fff:	00 00 00 $/;"	l
f0101002	obj/kern/kernel.asm	/^    f0101002:	8b 00                	mov    (%rax),%eax$/;"	l
f0101004	obj/kern/kernel.asm	/^    f0101004:	f7 d0                	not    %eax$/;"	l
f0101006	obj/kern/kernel.asm	/^    f0101006:	83 e0 06             	and    $0x6,%eax$/;"	l
f0101009	obj/kern/kernel.asm	/^    f0101009:	85 c0                	test   %eax,%eax$/;"	l
f010100b	obj/kern/kernel.asm	/^    f010100b:	75 37                	jne    fffffffff0101044 <end+0xfffffffefe65fca4>$/;"	l
f010100d	obj/kern/kernel.asm	/^    f010100d:	81 7d e4 e9 00 00 00 	cmpl   $0xe9,-0x1c(%rbp)$/;"	l
f0101014	obj/kern/kernel.asm	/^    f0101014:	75 2e                	jne    fffffffff0101044 <end+0xfffffffefe65fca4>$/;"	l
f0101016	obj/kern/kernel.asm	/^    f0101016:	48 bf ae 15 11 f0 00 	mov    $0xf01115ae,%rdi$/;"	l
f010101d	obj/kern/kernel.asm	/^    f010101d:	00 00 00 $/;"	l
f0101020	obj/kern/kernel.asm	/^    f0101020:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101025	obj/kern/kernel.asm	/^    f0101025:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f010102c	obj/kern/kernel.asm	/^    f010102c:	00 00 00 $/;"	l
f010102f	obj/kern/kernel.asm	/^    f010102f:	ff d2                	callq  *%rdx$/;"	l
f0101031	obj/kern/kernel.asm	/^    f0101031:	c7 45 fc 92 00 00 00 	movl   $0x92,-0x4(%rbp)$/;"	l
f0101038	obj/kern/kernel.asm	/^    f0101038:	c6 45 fb 03          	movb   $0x3,-0x5(%rbp)$/;"	l
f010103c	obj/kern/kernel.asm	/^    f010103c:	0f b6 45 fb          	movzbl -0x5(%rbp),%eax$/;"	l
f0101040	obj/kern/kernel.asm	/^    f0101040:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
f0101043	obj/kern/kernel.asm	/^    f0101043:	ee                   	out    %al,(%dx)$/;"	l
f0101044	obj/kern/kernel.asm	/^    f0101044:	8b 45 e4             	mov    -0x1c(%rbp),%eax$/;"	l
f0101047	obj/kern/kernel.asm	/^    f0101047:	c9                   	leaveq $/;"	l
f0101048	obj/kern/kernel.asm	/^    f0101048:	c3                   	retq   $/;"	l
f0101049	obj/kern/kernel.asm	/^    f0101049:	55                   	push   %rbp$/;"	l
f010104a	obj/kern/kernel.asm	/^    f010104a:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010104d	obj/kern/kernel.asm	/^    f010104d:	48 bf 1a 0e 10 f0 00 	mov    $0xf0100e1a,%rdi$/;"	l
f0101054	obj/kern/kernel.asm	/^    f0101054:	00 00 00 $/;"	l
f0101057	obj/kern/kernel.asm	/^    f0101057:	48 b8 9a 10 10 f0 00 	mov    $0xf010109a,%rax$/;"	l
f010105e	obj/kern/kernel.asm	/^    f010105e:	00 00 00 $/;"	l
f0101061	obj/kern/kernel.asm	/^    f0101061:	ff d0                	callq  *%rax$/;"	l
f0101063	obj/kern/kernel.asm	/^    f0101063:	c9                   	leaveq $/;"	l
f0101064	obj/kern/kernel.asm	/^    f0101064:	c3                   	retq   $/;"	l
f0101065	obj/kern/kernel.asm	/^    f0101065:	55                   	push   %rbp$/;"	l
f0101066	obj/kern/kernel.asm	/^    f0101066:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f0101069	obj/kern/kernel.asm	/^    f0101069:	48 b8 49 10 10 f0 00 	mov    $0xf0101049,%rax$/;"	l
f0101070	obj/kern/kernel.asm	/^    f0101070:	00 00 00 $/;"	l
f0101073	obj/kern/kernel.asm	/^    f0101073:	ff d0                	callq  *%rax$/;"	l
f0101075	obj/kern/kernel.asm	/^    f0101075:	48 b8 74 06 13 f0 00 	mov    $0xf0130674,%rax$/;"	l
f010107c	obj/kern/kernel.asm	/^    f010107c:	00 00 00 $/;"	l
f010107f	obj/kern/kernel.asm	/^    f010107f:	0f b7 00             	movzwl (%rax),%eax$/;"	l
f0101082	obj/kern/kernel.asm	/^    f0101082:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0101085	obj/kern/kernel.asm	/^    f0101085:	25 fd ff 00 00       	and    $0xfffd,%eax$/;"	l
f010108a	obj/kern/kernel.asm	/^    f010108a:	89 c7                	mov    %eax,%edi$/;"	l
f010108c	obj/kern/kernel.asm	/^    f010108c:	48 b8 2e 87 10 f0 00 	mov    $0xf010872e,%rax$/;"	l
f0101093	obj/kern/kernel.asm	/^    f0101093:	00 00 00 $/;"	l
f0101096	obj/kern/kernel.asm	/^    f0101096:	ff d0                	callq  *%rax$/;"	l
f0101098	obj/kern/kernel.asm	/^    f0101098:	c9                   	leaveq $/;"	l
f0101099	obj/kern/kernel.asm	/^    f0101099:	c3                   	retq   $/;"	l
f010109a	obj/kern/kernel.asm	/^    f010109a:	55                   	push   %rbp$/;"	l
f010109b	obj/kern/kernel.asm	/^    f010109b:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010109e	obj/kern/kernel.asm	/^    f010109e:	53                   	push   %rbx$/;"	l
f010109f	obj/kern/kernel.asm	/^    f010109f:	48 83 ec 28          	sub    $0x28,%rsp$/;"	l
f01010a3	obj/kern/kernel.asm	/^    f01010a3:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)$/;"	l
f01010a7	obj/kern/kernel.asm	/^    f01010a7:	eb 6b                	jmp    fffffffff0101114 <end+0xfffffffefe65fd74>$/;"	l
f01010a9	obj/kern/kernel.asm	/^    f01010a9:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)$/;"	l
f01010ad	obj/kern/kernel.asm	/^    f01010ad:	74 64                	je     fffffffff0101113 <end+0xfffffffefe65fd73>$/;"	l
f01010af	obj/kern/kernel.asm	/^    f01010af:	48 b8 20 60 a2 f1 00 	mov    $0xf1a26020,%rax$/;"	l
f01010b6	obj/kern/kernel.asm	/^    f01010b6:	00 00 00 $/;"	l
f01010b9	obj/kern/kernel.asm	/^    f01010b9:	8b 80 04 02 00 00    	mov    0x204(%rax),%eax$/;"	l
f01010bf	obj/kern/kernel.asm	/^    f01010bf:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
f01010c2	obj/kern/kernel.asm	/^    f01010c2:	89 d3                	mov    %edx,%ebx$/;"	l
f01010c4	obj/kern/kernel.asm	/^    f01010c4:	48 b9 20 60 a2 f1 00 	mov    $0xf1a26020,%rcx$/;"	l
f01010cb	obj/kern/kernel.asm	/^    f01010cb:	00 00 00 $/;"	l
f01010ce	obj/kern/kernel.asm	/^    f01010ce:	89 c2                	mov    %eax,%edx$/;"	l
f01010d0	obj/kern/kernel.asm	/^    f01010d0:	88 1c 11             	mov    %bl,(%rcx,%rdx,1)$/;"	l
f01010d3	obj/kern/kernel.asm	/^    f01010d3:	8d 50 01             	lea    0x1(%rax),%edx$/;"	l
f01010d6	obj/kern/kernel.asm	/^    f01010d6:	48 b8 20 60 a2 f1 00 	mov    $0xf1a26020,%rax$/;"	l
f01010dd	obj/kern/kernel.asm	/^    f01010dd:	00 00 00 $/;"	l
f01010e0	obj/kern/kernel.asm	/^    f01010e0:	89 90 04 02 00 00    	mov    %edx,0x204(%rax)$/;"	l
f01010e6	obj/kern/kernel.asm	/^    f01010e6:	48 b8 20 60 a2 f1 00 	mov    $0xf1a26020,%rax$/;"	l
f01010ed	obj/kern/kernel.asm	/^    f01010ed:	00 00 00 $/;"	l
f01010f0	obj/kern/kernel.asm	/^    f01010f0:	8b 80 04 02 00 00    	mov    0x204(%rax),%eax$/;"	l
f01010f6	obj/kern/kernel.asm	/^    f01010f6:	3d 00 02 00 00       	cmp    $0x200,%eax$/;"	l
f01010fb	obj/kern/kernel.asm	/^    f01010fb:	75 17                	jne    fffffffff0101114 <end+0xfffffffefe65fd74>$/;"	l
f01010fd	obj/kern/kernel.asm	/^    f01010fd:	48 b8 20 60 a2 f1 00 	mov    $0xf1a26020,%rax$/;"	l
f0101104	obj/kern/kernel.asm	/^    f0101104:	00 00 00 $/;"	l
f0101107	obj/kern/kernel.asm	/^    f0101107:	c7 80 04 02 00 00 00 	movl   $0x0,0x204(%rax)$/;"	l
f010110e	obj/kern/kernel.asm	/^    f010110e:	00 00 00 $/;"	l
f0101111	obj/kern/kernel.asm	/^    f0101111:	eb 01                	jmp    fffffffff0101114 <end+0xfffffffefe65fd74>$/;"	l
f0101113	obj/kern/kernel.asm	/^    f0101113:	90                   	nop$/;"	l
f0101114	obj/kern/kernel.asm	/^    f0101114:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f0101118	obj/kern/kernel.asm	/^    f0101118:	ff d0                	callq  *%rax$/;"	l
f010111a	obj/kern/kernel.asm	/^    f010111a:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
f010111d	obj/kern/kernel.asm	/^    f010111d:	83 7d ec ff          	cmpl   $0xffffffffffffffff,-0x14(%rbp)$/;"	l
f0101121	obj/kern/kernel.asm	/^    f0101121:	75 86                	jne    fffffffff01010a9 <end+0xfffffffefe65fd09>$/;"	l
f0101123	obj/kern/kernel.asm	/^    f0101123:	48 83 c4 28          	add    $0x28,%rsp$/;"	l
f0101127	obj/kern/kernel.asm	/^    f0101127:	5b                   	pop    %rbx$/;"	l
f0101128	obj/kern/kernel.asm	/^    f0101128:	c9                   	leaveq $/;"	l
f0101129	obj/kern/kernel.asm	/^    f0101129:	c3                   	retq   $/;"	l
f010112a	obj/kern/kernel.asm	/^    f010112a:	55                   	push   %rbp$/;"	l
f010112b	obj/kern/kernel.asm	/^    f010112b:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010112e	obj/kern/kernel.asm	/^    f010112e:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
f0101132	obj/kern/kernel.asm	/^    f0101132:	48 b8 20 08 10 f0 00 	mov    $0xf0100820,%rax$/;"	l
f0101139	obj/kern/kernel.asm	/^    f0101139:	00 00 00 $/;"	l
f010113c	obj/kern/kernel.asm	/^    f010113c:	ff d0                	callq  *%rax$/;"	l
f010113e	obj/kern/kernel.asm	/^    f010113e:	48 b8 49 10 10 f0 00 	mov    $0xf0101049,%rax$/;"	l
f0101145	obj/kern/kernel.asm	/^    f0101145:	00 00 00 $/;"	l
f0101148	obj/kern/kernel.asm	/^    f0101148:	ff d0                	callq  *%rax$/;"	l
f010114a	obj/kern/kernel.asm	/^    f010114a:	48 b8 20 60 a2 f1 00 	mov    $0xf1a26020,%rax$/;"	l
f0101151	obj/kern/kernel.asm	/^    f0101151:	00 00 00 $/;"	l
f0101154	obj/kern/kernel.asm	/^    f0101154:	8b 90 00 02 00 00    	mov    0x200(%rax),%edx$/;"	l
f010115a	obj/kern/kernel.asm	/^    f010115a:	48 b8 20 60 a2 f1 00 	mov    $0xf1a26020,%rax$/;"	l
f0101161	obj/kern/kernel.asm	/^    f0101161:	00 00 00 $/;"	l
f0101164	obj/kern/kernel.asm	/^    f0101164:	8b 80 04 02 00 00    	mov    0x204(%rax),%eax$/;"	l
f010116a	obj/kern/kernel.asm	/^    f010116a:	39 c2                	cmp    %eax,%edx$/;"	l
f010116c	obj/kern/kernel.asm	/^    f010116c:	74 69                	je     fffffffff01011d7 <end+0xfffffffefe65fe37>$/;"	l
f010116e	obj/kern/kernel.asm	/^    f010116e:	48 b8 20 60 a2 f1 00 	mov    $0xf1a26020,%rax$/;"	l
f0101175	obj/kern/kernel.asm	/^    f0101175:	00 00 00 $/;"	l
f0101178	obj/kern/kernel.asm	/^    f0101178:	8b 80 00 02 00 00    	mov    0x200(%rax),%eax$/;"	l
f010117e	obj/kern/kernel.asm	/^    f010117e:	48 b9 20 60 a2 f1 00 	mov    $0xf1a26020,%rcx$/;"	l
f0101185	obj/kern/kernel.asm	/^    f0101185:	00 00 00 $/;"	l
f0101188	obj/kern/kernel.asm	/^    f0101188:	89 c2                	mov    %eax,%edx$/;"	l
f010118a	obj/kern/kernel.asm	/^    f010118a:	0f b6 14 11          	movzbl (%rcx,%rdx,1),%edx$/;"	l
f010118e	obj/kern/kernel.asm	/^    f010118e:	0f b6 d2             	movzbl %dl,%edx$/;"	l
f0101191	obj/kern/kernel.asm	/^    f0101191:	89 55 fc             	mov    %edx,-0x4(%rbp)$/;"	l
f0101194	obj/kern/kernel.asm	/^    f0101194:	8d 50 01             	lea    0x1(%rax),%edx$/;"	l
f0101197	obj/kern/kernel.asm	/^    f0101197:	48 b8 20 60 a2 f1 00 	mov    $0xf1a26020,%rax$/;"	l
f010119e	obj/kern/kernel.asm	/^    f010119e:	00 00 00 $/;"	l
f01011a1	obj/kern/kernel.asm	/^    f01011a1:	89 90 00 02 00 00    	mov    %edx,0x200(%rax)$/;"	l
f01011a7	obj/kern/kernel.asm	/^    f01011a7:	48 b8 20 60 a2 f1 00 	mov    $0xf1a26020,%rax$/;"	l
f01011ae	obj/kern/kernel.asm	/^    f01011ae:	00 00 00 $/;"	l
f01011b1	obj/kern/kernel.asm	/^    f01011b1:	8b 80 00 02 00 00    	mov    0x200(%rax),%eax$/;"	l
f01011b7	obj/kern/kernel.asm	/^    f01011b7:	3d 00 02 00 00       	cmp    $0x200,%eax$/;"	l
f01011bc	obj/kern/kernel.asm	/^    f01011bc:	75 14                	jne    fffffffff01011d2 <end+0xfffffffefe65fe32>$/;"	l
f01011be	obj/kern/kernel.asm	/^    f01011be:	48 b8 20 60 a2 f1 00 	mov    $0xf1a26020,%rax$/;"	l
f01011c5	obj/kern/kernel.asm	/^    f01011c5:	00 00 00 $/;"	l
f01011c8	obj/kern/kernel.asm	/^    f01011c8:	c7 80 00 02 00 00 00 	movl   $0x0,0x200(%rax)$/;"	l
f01011cf	obj/kern/kernel.asm	/^    f01011cf:	00 00 00 $/;"	l
f01011d2	obj/kern/kernel.asm	/^    f01011d2:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
f01011d5	obj/kern/kernel.asm	/^    f01011d5:	eb 05                	jmp    fffffffff01011dc <end+0xfffffffefe65fe3c>$/;"	l
f01011d7	obj/kern/kernel.asm	/^    f01011d7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01011dc	obj/kern/kernel.asm	/^    f01011dc:	c9                   	leaveq $/;"	l
f01011dd	obj/kern/kernel.asm	/^    f01011dd:	c3                   	retq   $/;"	l
f01011de	obj/kern/kernel.asm	/^    f01011de:	55                   	push   %rbp$/;"	l
f01011df	obj/kern/kernel.asm	/^    f01011df:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f01011e2	obj/kern/kernel.asm	/^    f01011e2:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
f01011e6	obj/kern/kernel.asm	/^    f01011e6:	89 7d fc             	mov    %edi,-0x4(%rbp)$/;"	l
f01011e9	obj/kern/kernel.asm	/^    f01011e9:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
f01011ec	obj/kern/kernel.asm	/^    f01011ec:	89 c7                	mov    %eax,%edi$/;"	l
f01011ee	obj/kern/kernel.asm	/^    f01011ee:	48 b8 4d 08 10 f0 00 	mov    $0xf010084d,%rax$/;"	l
f01011f5	obj/kern/kernel.asm	/^    f01011f5:	00 00 00 $/;"	l
f01011f8	obj/kern/kernel.asm	/^    f01011f8:	ff d0                	callq  *%rax$/;"	l
f01011fa	obj/kern/kernel.asm	/^    f01011fa:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
f01011fd	obj/kern/kernel.asm	/^    f01011fd:	89 c7                	mov    %eax,%edi$/;"	l
f01011ff	obj/kern/kernel.asm	/^    f01011ff:	48 b8 86 09 10 f0 00 	mov    $0xf0100986,%rax$/;"	l
f0101206	obj/kern/kernel.asm	/^    f0101206:	00 00 00 $/;"	l
f0101209	obj/kern/kernel.asm	/^    f0101209:	ff d0                	callq  *%rax$/;"	l
f010120b	obj/kern/kernel.asm	/^    f010120b:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
f010120e	obj/kern/kernel.asm	/^    f010120e:	89 c7                	mov    %eax,%edi$/;"	l
f0101210	obj/kern/kernel.asm	/^    f0101210:	48 b8 25 0b 10 f0 00 	mov    $0xf0100b25,%rax$/;"	l
f0101217	obj/kern/kernel.asm	/^    f0101217:	00 00 00 $/;"	l
f010121a	obj/kern/kernel.asm	/^    f010121a:	ff d0                	callq  *%rax$/;"	l
f010121c	obj/kern/kernel.asm	/^    f010121c:	c9                   	leaveq $/;"	l
f010121d	obj/kern/kernel.asm	/^    f010121d:	c3                   	retq   $/;"	l
f010121e	obj/kern/kernel.asm	/^    f010121e:	55                   	push   %rbp$/;"	l
f010121f	obj/kern/kernel.asm	/^    f010121f:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f0101222	obj/kern/kernel.asm	/^    f0101222:	48 b8 0b 0a 10 f0 00 	mov    $0xf0100a0b,%rax$/;"	l
f0101229	obj/kern/kernel.asm	/^    f0101229:	00 00 00 $/;"	l
f010122c	obj/kern/kernel.asm	/^    f010122c:	ff d0                	callq  *%rax$/;"	l
f010122e	obj/kern/kernel.asm	/^    f010122e:	48 b8 65 10 10 f0 00 	mov    $0xf0101065,%rax$/;"	l
f0101235	obj/kern/kernel.asm	/^    f0101235:	00 00 00 $/;"	l
f0101238	obj/kern/kernel.asm	/^    f0101238:	ff d0                	callq  *%rax$/;"	l
f010123a	obj/kern/kernel.asm	/^    f010123a:	48 b8 b2 08 10 f0 00 	mov    $0xf01008b2,%rax$/;"	l
f0101241	obj/kern/kernel.asm	/^    f0101241:	00 00 00 $/;"	l
f0101244	obj/kern/kernel.asm	/^    f0101244:	ff d0                	callq  *%rax$/;"	l
f0101246	obj/kern/kernel.asm	/^    f0101246:	48 b8 00 60 a2 f1 00 	mov    $0xf1a26000,%rax$/;"	l
f010124d	obj/kern/kernel.asm	/^    f010124d:	00 00 00 $/;"	l
f0101250	obj/kern/kernel.asm	/^    f0101250:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f0101253	obj/kern/kernel.asm	/^    f0101253:	83 f0 01             	xor    $0x1,%eax$/;"	l
f0101256	obj/kern/kernel.asm	/^    f0101256:	84 c0                	test   %al,%al$/;"	l
f0101258	obj/kern/kernel.asm	/^    f0101258:	74 1b                	je     fffffffff0101275 <end+0xfffffffefe65fed5>$/;"	l
f010125a	obj/kern/kernel.asm	/^    f010125a:	48 bf ba 15 11 f0 00 	mov    $0xf01115ba,%rdi$/;"	l
f0101261	obj/kern/kernel.asm	/^    f0101261:	00 00 00 $/;"	l
f0101264	obj/kern/kernel.asm	/^    f0101264:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101269	obj/kern/kernel.asm	/^    f0101269:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f0101270	obj/kern/kernel.asm	/^    f0101270:	00 00 00 $/;"	l
f0101273	obj/kern/kernel.asm	/^    f0101273:	ff d2                	callq  *%rdx$/;"	l
f0101275	obj/kern/kernel.asm	/^    f0101275:	c9                   	leaveq $/;"	l
f0101276	obj/kern/kernel.asm	/^    f0101276:	c3                   	retq   $/;"	l
f0101277	obj/kern/kernel.asm	/^    f0101277:	55                   	push   %rbp$/;"	l
f0101278	obj/kern/kernel.asm	/^    f0101278:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010127b	obj/kern/kernel.asm	/^    f010127b:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
f010127f	obj/kern/kernel.asm	/^    f010127f:	89 7d fc             	mov    %edi,-0x4(%rbp)$/;"	l
f0101282	obj/kern/kernel.asm	/^    f0101282:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
f0101285	obj/kern/kernel.asm	/^    f0101285:	89 c7                	mov    %eax,%edi$/;"	l
f0101287	obj/kern/kernel.asm	/^    f0101287:	48 b8 de 11 10 f0 00 	mov    $0xf01011de,%rax$/;"	l
f010128e	obj/kern/kernel.asm	/^    f010128e:	00 00 00 $/;"	l
f0101291	obj/kern/kernel.asm	/^    f0101291:	ff d0                	callq  *%rax$/;"	l
f0101293	obj/kern/kernel.asm	/^    f0101293:	c9                   	leaveq $/;"	l
f0101294	obj/kern/kernel.asm	/^    f0101294:	c3                   	retq   $/;"	l
f0101295	obj/kern/kernel.asm	/^    f0101295:	55                   	push   %rbp$/;"	l
f0101296	obj/kern/kernel.asm	/^    f0101296:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f0101299	obj/kern/kernel.asm	/^    f0101299:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
f010129d	obj/kern/kernel.asm	/^    f010129d:	48 b8 2a 11 10 f0 00 	mov    $0xf010112a,%rax$/;"	l
f01012a4	obj/kern/kernel.asm	/^    f01012a4:	00 00 00 $/;"	l
f01012a7	obj/kern/kernel.asm	/^    f01012a7:	ff d0                	callq  *%rax$/;"	l
f01012a9	obj/kern/kernel.asm	/^    f01012a9:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
f01012ac	obj/kern/kernel.asm	/^    f01012ac:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)$/;"	l
f01012b0	obj/kern/kernel.asm	/^    f01012b0:	74 eb                	je     fffffffff010129d <end+0xfffffffefe65fefd>$/;"	l
f01012b2	obj/kern/kernel.asm	/^    f01012b2:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
f01012b5	obj/kern/kernel.asm	/^    f01012b5:	c9                   	leaveq $/;"	l
f01012b6	obj/kern/kernel.asm	/^    f01012b6:	c3                   	retq   $/;"	l
f01012b7	obj/kern/kernel.asm	/^    f01012b7:	55                   	push   %rbp$/;"	l
f01012b8	obj/kern/kernel.asm	/^    f01012b8:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f01012bb	obj/kern/kernel.asm	/^    f01012bb:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
f01012bf	obj/kern/kernel.asm	/^    f01012bf:	89 7d fc             	mov    %edi,-0x4(%rbp)$/;"	l
f01012c2	obj/kern/kernel.asm	/^    f01012c2:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f01012c7	obj/kern/kernel.asm	/^    f01012c7:	c9                   	leaveq $/;"	l
f01012c8	obj/kern/kernel.asm	/^    f01012c8:	c3                   	retq   $/;"	l
f01012c9	obj/kern/kernel.asm	/^    f01012c9:	00 00                	add    %al,(%rax)$/;"	l
f01012cc	obj/kern/kernel.asm	/^    f01012cc:	55                   	push   %rbp$/;"	l
f01012cd	obj/kern/kernel.asm	/^    f01012cd:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f01012d0	obj/kern/kernel.asm	/^    f01012d0:	53                   	push   %rbx$/;"	l
f01012d1	obj/kern/kernel.asm	/^    f01012d1:	48 83 ec 38          	sub    $0x38,%rsp$/;"	l
f01012d5	obj/kern/kernel.asm	/^    f01012d5:	89 7d dc             	mov    %edi,-0x24(%rbp)$/;"	l
f01012d8	obj/kern/kernel.asm	/^    f01012d8:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)$/;"	l
f01012dc	obj/kern/kernel.asm	/^    f01012dc:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)$/;"	l
f01012e0	obj/kern/kernel.asm	/^    f01012e0:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)$/;"	l
f01012e7	obj/kern/kernel.asm	/^    f01012e7:	eb 68                	jmp    fffffffff0101351 <end+0xfffffffefe65ffb1>$/;"	l
f01012e9	obj/kern/kernel.asm	/^    f01012e9:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
f01012ec	obj/kern/kernel.asm	/^    f01012ec:	48 b9 60 05 13 f0 00 	mov    $0xf0130560,%rcx$/;"	l
f01012f3	obj/kern/kernel.asm	/^    f01012f3:	00 00 00 $/;"	l
f01012f6	obj/kern/kernel.asm	/^    f01012f6:	48 63 d0             	movslq %eax,%rdx$/;"	l
f01012f9	obj/kern/kernel.asm	/^    f01012f9:	48 89 d0             	mov    %rdx,%rax$/;"	l
f01012fc	obj/kern/kernel.asm	/^    f01012fc:	48 01 c0             	add    %rax,%rax$/;"	l
f01012ff	obj/kern/kernel.asm	/^    f01012ff:	48 01 d0             	add    %rdx,%rax$/;"	l
f0101302	obj/kern/kernel.asm	/^    f0101302:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f0101306	obj/kern/kernel.asm	/^    f0101306:	48 8b 4c 08 08       	mov    0x8(%rax,%rcx,1),%rcx$/;"	l
f010130b	obj/kern/kernel.asm	/^    f010130b:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
f010130e	obj/kern/kernel.asm	/^    f010130e:	48 bb 60 05 13 f0 00 	mov    $0xf0130560,%rbx$/;"	l
f0101315	obj/kern/kernel.asm	/^    f0101315:	00 00 00 $/;"	l
f0101318	obj/kern/kernel.asm	/^    f0101318:	48 63 d0             	movslq %eax,%rdx$/;"	l
f010131b	obj/kern/kernel.asm	/^    f010131b:	48 89 d0             	mov    %rdx,%rax$/;"	l
f010131e	obj/kern/kernel.asm	/^    f010131e:	48 01 c0             	add    %rax,%rax$/;"	l
f0101321	obj/kern/kernel.asm	/^    f0101321:	48 01 d0             	add    %rdx,%rax$/;"	l
f0101324	obj/kern/kernel.asm	/^    f0101324:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f0101328	obj/kern/kernel.asm	/^    f0101328:	48 8b 04 18          	mov    (%rax,%rbx,1),%rax$/;"	l
f010132c	obj/kern/kernel.asm	/^    f010132c:	48 89 ca             	mov    %rcx,%rdx$/;"	l
f010132f	obj/kern/kernel.asm	/^    f010132f:	48 89 c6             	mov    %rax,%rsi$/;"	l
f0101332	obj/kern/kernel.asm	/^    f0101332:	48 bf 4f 16 11 f0 00 	mov    $0xf011164f,%rdi$/;"	l
f0101339	obj/kern/kernel.asm	/^    f0101339:	00 00 00 $/;"	l
f010133c	obj/kern/kernel.asm	/^    f010133c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101341	obj/kern/kernel.asm	/^    f0101341:	48 b9 eb 88 10 f0 00 	mov    $0xf01088eb,%rcx$/;"	l
f0101348	obj/kern/kernel.asm	/^    f0101348:	00 00 00 $/;"	l
f010134b	obj/kern/kernel.asm	/^    f010134b:	ff d1                	callq  *%rcx$/;"	l
f010134d	obj/kern/kernel.asm	/^    f010134d:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)$/;"	l
f0101351	obj/kern/kernel.asm	/^    f0101351:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
f0101354	obj/kern/kernel.asm	/^    f0101354:	83 f8 02             	cmp    $0x2,%eax$/;"	l
f0101357	obj/kern/kernel.asm	/^    f0101357:	76 90                	jbe    fffffffff01012e9 <end+0xfffffffefe65ff49>$/;"	l
f0101359	obj/kern/kernel.asm	/^    f0101359:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010135e	obj/kern/kernel.asm	/^    f010135e:	48 83 c4 38          	add    $0x38,%rsp$/;"	l
f0101362	obj/kern/kernel.asm	/^    f0101362:	5b                   	pop    %rbx$/;"	l
f0101363	obj/kern/kernel.asm	/^    f0101363:	c9                   	leaveq $/;"	l
f0101364	obj/kern/kernel.asm	/^    f0101364:	c3                   	retq   $/;"	l
f0101365	obj/kern/kernel.asm	/^    f0101365:	55                   	push   %rbp$/;"	l
f0101366	obj/kern/kernel.asm	/^    f0101366:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f0101369	obj/kern/kernel.asm	/^    f0101369:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
f010136d	obj/kern/kernel.asm	/^    f010136d:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
f0101370	obj/kern/kernel.asm	/^    f0101370:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
f0101374	obj/kern/kernel.asm	/^    f0101374:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)$/;"	l
f0101378	obj/kern/kernel.asm	/^    f0101378:	48 bf 58 16 11 f0 00 	mov    $0xf0111658,%rdi$/;"	l
f010137f	obj/kern/kernel.asm	/^    f010137f:	00 00 00 $/;"	l
f0101382	obj/kern/kernel.asm	/^    f0101382:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101387	obj/kern/kernel.asm	/^    f0101387:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f010138e	obj/kern/kernel.asm	/^    f010138e:	00 00 00 $/;"	l
f0101391	obj/kern/kernel.asm	/^    f0101391:	ff d2                	callq  *%rdx$/;"	l
f0101393	obj/kern/kernel.asm	/^    f0101393:	48 be 0c 00 10 00 00 	mov    $0x10000c,%rsi$/;"	l
f010139a	obj/kern/kernel.asm	/^    f010139a:	00 00 00 $/;"	l
f010139d	obj/kern/kernel.asm	/^    f010139d:	48 bf 78 16 11 f0 00 	mov    $0xf0111678,%rdi$/;"	l
f01013a4	obj/kern/kernel.asm	/^    f01013a4:	00 00 00 $/;"	l
f01013a7	obj/kern/kernel.asm	/^    f01013a7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01013ac	obj/kern/kernel.asm	/^    f01013ac:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f01013b3	obj/kern/kernel.asm	/^    f01013b3:	00 00 00 $/;"	l
f01013b6	obj/kern/kernel.asm	/^    f01013b6:	ff d2                	callq  *%rdx$/;"	l
f01013b8	obj/kern/kernel.asm	/^    f01013b8:	48 ba 0c 00 10 00 00 	mov    $0x10000c,%rdx$/;"	l
f01013bf	obj/kern/kernel.asm	/^    f01013bf:	00 00 00 $/;"	l
f01013c2	obj/kern/kernel.asm	/^    f01013c2:	48 be 0c 00 10 f0 00 	mov    $0xf010000c,%rsi$/;"	l
f01013c9	obj/kern/kernel.asm	/^    f01013c9:	00 00 00 $/;"	l
f01013cc	obj/kern/kernel.asm	/^    f01013cc:	48 bf a0 16 11 f0 00 	mov    $0xf01116a0,%rdi$/;"	l
f01013d3	obj/kern/kernel.asm	/^    f01013d3:	00 00 00 $/;"	l
f01013d6	obj/kern/kernel.asm	/^    f01013d6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01013db	obj/kern/kernel.asm	/^    f01013db:	48 b9 eb 88 10 f0 00 	mov    $0xf01088eb,%rcx$/;"	l
f01013e2	obj/kern/kernel.asm	/^    f01013e2:	00 00 00 $/;"	l
f01013e5	obj/kern/kernel.asm	/^    f01013e5:	ff d1                	callq  *%rcx$/;"	l
f01013e7	obj/kern/kernel.asm	/^    f01013e7:	48 ba c7 14 11 00 00 	mov    $0x1114c7,%rdx$/;"	l
f01013ee	obj/kern/kernel.asm	/^    f01013ee:	00 00 00 $/;"	l
f01013f1	obj/kern/kernel.asm	/^    f01013f1:	48 be c7 14 11 f0 00 	mov    $0xf01114c7,%rsi$/;"	l
f01013f8	obj/kern/kernel.asm	/^    f01013f8:	00 00 00 $/;"	l
f01013fb	obj/kern/kernel.asm	/^    f01013fb:	48 bf c8 16 11 f0 00 	mov    $0xf01116c8,%rdi$/;"	l
f0101402	obj/kern/kernel.asm	/^    f0101402:	00 00 00 $/;"	l
f0101405	obj/kern/kernel.asm	/^    f0101405:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010140a	obj/kern/kernel.asm	/^    f010140a:	48 b9 eb 88 10 f0 00 	mov    $0xf01088eb,%rcx$/;"	l
f0101411	obj/kern/kernel.asm	/^    f0101411:	00 00 00 $/;"	l
f0101414	obj/kern/kernel.asm	/^    f0101414:	ff d1                	callq  *%rcx$/;"	l
f0101416	obj/kern/kernel.asm	/^    f0101416:	48 ba 41 54 a2 01 00 	mov    $0x1a25441,%rdx$/;"	l
f010141d	obj/kern/kernel.asm	/^    f010141d:	00 00 00 $/;"	l
f0101420	obj/kern/kernel.asm	/^    f0101420:	48 be 41 54 a2 f1 00 	mov    $0xf1a25441,%rsi$/;"	l
f0101427	obj/kern/kernel.asm	/^    f0101427:	00 00 00 $/;"	l
f010142a	obj/kern/kernel.asm	/^    f010142a:	48 bf f0 16 11 f0 00 	mov    $0xf01116f0,%rdi$/;"	l
f0101431	obj/kern/kernel.asm	/^    f0101431:	00 00 00 $/;"	l
f0101434	obj/kern/kernel.asm	/^    f0101434:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101439	obj/kern/kernel.asm	/^    f0101439:	48 b9 eb 88 10 f0 00 	mov    $0xf01088eb,%rcx$/;"	l
f0101440	obj/kern/kernel.asm	/^    f0101440:	00 00 00 $/;"	l
f0101443	obj/kern/kernel.asm	/^    f0101443:	ff d1                	callq  *%rcx$/;"	l
f0101445	obj/kern/kernel.asm	/^    f0101445:	48 ba a0 13 aa 01 00 	mov    $0x1aa13a0,%rdx$/;"	l
f010144c	obj/kern/kernel.asm	/^    f010144c:	00 00 00 $/;"	l
f010144f	obj/kern/kernel.asm	/^    f010144f:	48 be a0 13 aa f1 00 	mov    $0xf1aa13a0,%rsi$/;"	l
f0101456	obj/kern/kernel.asm	/^    f0101456:	00 00 00 $/;"	l
f0101459	obj/kern/kernel.asm	/^    f0101459:	48 bf 18 17 11 f0 00 	mov    $0xf0111718,%rdi$/;"	l
f0101460	obj/kern/kernel.asm	/^    f0101460:	00 00 00 $/;"	l
f0101463	obj/kern/kernel.asm	/^    f0101463:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101468	obj/kern/kernel.asm	/^    f0101468:	48 b9 eb 88 10 f0 00 	mov    $0xf01088eb,%rcx$/;"	l
f010146f	obj/kern/kernel.asm	/^    f010146f:	00 00 00 $/;"	l
f0101472	obj/kern/kernel.asm	/^    f0101472:	ff d1                	callq  *%rcx$/;"	l
f0101474	obj/kern/kernel.asm	/^    f0101474:	48 c7 45 f0 00 04 00 	movq   $0x400,-0x10(%rbp)$/;"	l
f010147b	obj/kern/kernel.asm	/^    f010147b:	00 $/;"	l
f010147c	obj/kern/kernel.asm	/^    f010147c:	48 ba a0 13 aa f1 00 	mov    $0xf1aa13a0,%rdx$/;"	l
f0101483	obj/kern/kernel.asm	/^    f0101483:	00 00 00 $/;"	l
f0101486	obj/kern/kernel.asm	/^    f0101486:	48 b8 0c 00 10 f0 00 	mov    $0xf010000c,%rax$/;"	l
f010148d	obj/kern/kernel.asm	/^    f010148d:	00 00 00 $/;"	l
f0101490	obj/kern/kernel.asm	/^    f0101490:	48 89 d1             	mov    %rdx,%rcx$/;"	l
f0101493	obj/kern/kernel.asm	/^    f0101493:	48 29 c1             	sub    %rax,%rcx$/;"	l
f0101496	obj/kern/kernel.asm	/^    f0101496:	48 89 c8             	mov    %rcx,%rax$/;"	l
f0101499	obj/kern/kernel.asm	/^    f0101499:	48 83 e8 01          	sub    $0x1,%rax$/;"	l
f010149d	obj/kern/kernel.asm	/^    f010149d:	48 03 45 f0          	add    -0x10(%rbp),%rax$/;"	l
f01014a1	obj/kern/kernel.asm	/^    f01014a1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
f01014a5	obj/kern/kernel.asm	/^    f01014a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f01014a9	obj/kern/kernel.asm	/^    f01014a9:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01014ae	obj/kern/kernel.asm	/^    f01014ae:	48 f7 75 f0          	divq   -0x10(%rbp)$/;"	l
f01014b2	obj/kern/kernel.asm	/^    f01014b2:	48 89 d0             	mov    %rdx,%rax$/;"	l
f01014b5	obj/kern/kernel.asm	/^    f01014b5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
f01014b9	obj/kern/kernel.asm	/^    f01014b9:	48 89 d1             	mov    %rdx,%rcx$/;"	l
f01014bc	obj/kern/kernel.asm	/^    f01014bc:	48 29 c1             	sub    %rax,%rcx$/;"	l
f01014bf	obj/kern/kernel.asm	/^    f01014bf:	48 89 c8             	mov    %rcx,%rax$/;"	l
f01014c2	obj/kern/kernel.asm	/^    f01014c2:	48 8d 90 ff 03 00 00 	lea    0x3ff(%rax),%rdx$/;"	l
f01014c9	obj/kern/kernel.asm	/^    f01014c9:	48 85 c0             	test   %rax,%rax$/;"	l
f01014cc	obj/kern/kernel.asm	/^    f01014cc:	48 0f 48 c2          	cmovs  %rdx,%rax$/;"	l
f01014d0	obj/kern/kernel.asm	/^    f01014d0:	48 c1 f8 0a          	sar    $0xa,%rax$/;"	l
f01014d4	obj/kern/kernel.asm	/^    f01014d4:	48 89 c6             	mov    %rax,%rsi$/;"	l
f01014d7	obj/kern/kernel.asm	/^    f01014d7:	48 bf 40 17 11 f0 00 	mov    $0xf0111740,%rdi$/;"	l
f01014de	obj/kern/kernel.asm	/^    f01014de:	00 00 00 $/;"	l
f01014e1	obj/kern/kernel.asm	/^    f01014e1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01014e6	obj/kern/kernel.asm	/^    f01014e6:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f01014ed	obj/kern/kernel.asm	/^    f01014ed:	00 00 00 $/;"	l
f01014f0	obj/kern/kernel.asm	/^    f01014f0:	ff d2                	callq  *%rdx$/;"	l
f01014f2	obj/kern/kernel.asm	/^    f01014f2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01014f7	obj/kern/kernel.asm	/^    f01014f7:	c9                   	leaveq $/;"	l
f01014f8	obj/kern/kernel.asm	/^    f01014f8:	c3                   	retq   $/;"	l
f01014f9	obj/kern/kernel.asm	/^    f01014f9:	55                   	push   %rbp$/;"	l
f01014fa	obj/kern/kernel.asm	/^    f01014fa:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f01014fd	obj/kern/kernel.asm	/^    f01014fd:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp$/;"	l
f0101501	obj/kern/kernel.asm	/^    f0101501:	89 7d 9c             	mov    %edi,-0x64(%rbp)$/;"	l
f0101504	obj/kern/kernel.asm	/^    f0101504:	48 89 75 90          	mov    %rsi,-0x70(%rbp)$/;"	l
f0101508	obj/kern/kernel.asm	/^    f0101508:	48 89 55 88          	mov    %rdx,-0x78(%rbp)$/;"	l
f010150c	obj/kern/kernel.asm	/^    f010150c:	48 bf 6a 17 11 f0 00 	mov    $0xf011176a,%rdi$/;"	l
f0101513	obj/kern/kernel.asm	/^    f0101513:	00 00 00 $/;"	l
f0101516	obj/kern/kernel.asm	/^    f0101516:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010151b	obj/kern/kernel.asm	/^    f010151b:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f0101522	obj/kern/kernel.asm	/^    f0101522:	00 00 00 $/;"	l
f0101525	obj/kern/kernel.asm	/^    f0101525:	ff d2                	callq  *%rdx$/;"	l
f0101527	obj/kern/kernel.asm	/^    f0101527:	48 bf 6c 17 11 f0 00 	mov    $0xf011176c,%rdi$/;"	l
f010152e	obj/kern/kernel.asm	/^    f010152e:	00 00 00 $/;"	l
f0101531	obj/kern/kernel.asm	/^    f0101531:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101536	obj/kern/kernel.asm	/^    f0101536:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f010153d	obj/kern/kernel.asm	/^    f010153d:	00 00 00 $/;"	l
f0101540	obj/kern/kernel.asm	/^    f0101540:	ff d2                	callq  *%rdx$/;"	l
f0101542	obj/kern/kernel.asm	/^    f0101542:	48 89 e8             	mov    %rbp,%rax$/;"	l
f0101545	obj/kern/kernel.asm	/^    f0101545:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
f0101549	obj/kern/kernel.asm	/^    f0101549:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f010154d	obj/kern/kernel.asm	/^    f010154d:	48 89 45 d0          	mov    %rax,-0x30(%rbp)$/;"	l
f0101551	obj/kern/kernel.asm	/^    f0101551:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f0101555	obj/kern/kernel.asm	/^    f0101555:	48 89 45 d8          	mov    %rax,-0x28(%rbp)$/;"	l
f0101559	obj/kern/kernel.asm	/^    f0101559:	e9 8d 01 00 00       	jmpq   fffffffff01016eb <end+0xfffffffefe66034b>$/;"	l
f010155e	obj/kern/kernel.asm	/^    f010155e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f0101562	obj/kern/kernel.asm	/^    f0101562:	48 89 c6             	mov    %rax,%rsi$/;"	l
f0101565	obj/kern/kernel.asm	/^    f0101565:	48 bf 7e 17 11 f0 00 	mov    $0xf011177e,%rdi$/;"	l
f010156c	obj/kern/kernel.asm	/^    f010156c:	00 00 00 $/;"	l
f010156f	obj/kern/kernel.asm	/^    f010156f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101574	obj/kern/kernel.asm	/^    f0101574:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f010157b	obj/kern/kernel.asm	/^    f010157b:	00 00 00 $/;"	l
f010157e	obj/kern/kernel.asm	/^    f010157e:	ff d2                	callq  *%rdx$/;"	l
f0101580	obj/kern/kernel.asm	/^    f0101580:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f0101584	obj/kern/kernel.asm	/^    f0101584:	48 83 c0 08          	add    $0x8,%rax$/;"	l
f0101588	obj/kern/kernel.asm	/^    f0101588:	48 89 45 e0          	mov    %rax,-0x20(%rbp)$/;"	l
f010158c	obj/kern/kernel.asm	/^    f010158c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
f0101590	obj/kern/kernel.asm	/^    f0101590:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0101593	obj/kern/kernel.asm	/^    f0101593:	48 89 c6             	mov    %rax,%rsi$/;"	l
f0101596	obj/kern/kernel.asm	/^    f0101596:	48 bf 8a 17 11 f0 00 	mov    $0xf011178a,%rdi$/;"	l
f010159d	obj/kern/kernel.asm	/^    f010159d:	00 00 00 $/;"	l
f01015a0	obj/kern/kernel.asm	/^    f01015a0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01015a5	obj/kern/kernel.asm	/^    f01015a5:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f01015ac	obj/kern/kernel.asm	/^    f01015ac:	00 00 00 $/;"	l
f01015af	obj/kern/kernel.asm	/^    f01015af:	ff d2                	callq  *%rdx$/;"	l
f01015b1	obj/kern/kernel.asm	/^    f01015b1:	48 bf 96 17 11 f0 00 	mov    $0xf0111796,%rdi$/;"	l
f01015b8	obj/kern/kernel.asm	/^    f01015b8:	00 00 00 $/;"	l
f01015bb	obj/kern/kernel.asm	/^    f01015bb:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01015c0	obj/kern/kernel.asm	/^    f01015c0:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f01015c7	obj/kern/kernel.asm	/^    f01015c7:	00 00 00 $/;"	l
f01015ca	obj/kern/kernel.asm	/^    f01015ca:	ff d2                	callq  *%rdx$/;"	l
f01015cc	obj/kern/kernel.asm	/^    f01015cc:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)$/;"	l
f01015d3	obj/kern/kernel.asm	/^    f01015d3:	eb 45                	jmp    fffffffff010161a <end+0xfffffffefe66027a>$/;"	l
f01015d5	obj/kern/kernel.asm	/^    f01015d5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx$/;"	l
f01015d9	obj/kern/kernel.asm	/^    f01015d9:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
f01015dc	obj/kern/kernel.asm	/^    f01015dc:	83 c0 01             	add    $0x1,%eax$/;"	l
f01015df	obj/kern/kernel.asm	/^    f01015df:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f01015e2	obj/kern/kernel.asm	/^    f01015e2:	48 98                	cltq   $/;"	l
f01015e4	obj/kern/kernel.asm	/^    f01015e4:	48 89 d1             	mov    %rdx,%rcx$/;"	l
f01015e7	obj/kern/kernel.asm	/^    f01015e7:	48 29 c1             	sub    %rax,%rcx$/;"	l
f01015ea	obj/kern/kernel.asm	/^    f01015ea:	48 89 c8             	mov    %rcx,%rax$/;"	l
f01015ed	obj/kern/kernel.asm	/^    f01015ed:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
f01015f1	obj/kern/kernel.asm	/^    f01015f1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
f01015f5	obj/kern/kernel.asm	/^    f01015f5:	48 8b 00             	mov    (%rax),%rax$/;"	l
f01015f8	obj/kern/kernel.asm	/^    f01015f8:	48 89 c6             	mov    %rax,%rsi$/;"	l
f01015fb	obj/kern/kernel.asm	/^    f01015fb:	48 bf 9d 17 11 f0 00 	mov    $0xf011179d,%rdi$/;"	l
f0101602	obj/kern/kernel.asm	/^    f0101602:	00 00 00 $/;"	l
f0101605	obj/kern/kernel.asm	/^    f0101605:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010160a	obj/kern/kernel.asm	/^    f010160a:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f0101611	obj/kern/kernel.asm	/^    f0101611:	00 00 00 $/;"	l
f0101614	obj/kern/kernel.asm	/^    f0101614:	ff d2                	callq  *%rdx$/;"	l
f0101616	obj/kern/kernel.asm	/^    f0101616:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)$/;"	l
f010161a	obj/kern/kernel.asm	/^    f010161a:	83 7d ec 03          	cmpl   $0x3,-0x14(%rbp)$/;"	l
f010161e	obj/kern/kernel.asm	/^    f010161e:	7e b5                	jle    fffffffff01015d5 <end+0xfffffffefe660235>$/;"	l
f0101620	obj/kern/kernel.asm	/^    f0101620:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
f0101624	obj/kern/kernel.asm	/^    f0101624:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0101627	obj/kern/kernel.asm	/^    f0101627:	48 8d 55 a0          	lea    -0x60(%rbp),%rdx$/;"	l
f010162b	obj/kern/kernel.asm	/^    f010162b:	48 89 d6             	mov    %rdx,%rsi$/;"	l
f010162e	obj/kern/kernel.asm	/^    f010162e:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0101631	obj/kern/kernel.asm	/^    f0101631:	48 b8 31 db 10 f0 00 	mov    $0xf010db31,%rax$/;"	l
f0101638	obj/kern/kernel.asm	/^    f0101638:	00 00 00 $/;"	l
f010163b	obj/kern/kernel.asm	/^    f010163b:	ff d0                	callq  *%rax$/;"	l
f010163d	obj/kern/kernel.asm	/^    f010163d:	8b 55 a8             	mov    -0x58(%rbp),%edx$/;"	l
f0101640	obj/kern/kernel.asm	/^    f0101640:	48 8b 45 a0          	mov    -0x60(%rbp),%rax$/;"	l
f0101644	obj/kern/kernel.asm	/^    f0101644:	48 89 c6             	mov    %rax,%rsi$/;"	l
f0101647	obj/kern/kernel.asm	/^    f0101647:	48 bf a4 17 11 f0 00 	mov    $0xf01117a4,%rdi$/;"	l
f010164e	obj/kern/kernel.asm	/^    f010164e:	00 00 00 $/;"	l
f0101651	obj/kern/kernel.asm	/^    f0101651:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101656	obj/kern/kernel.asm	/^    f0101656:	48 b9 eb 88 10 f0 00 	mov    $0xf01088eb,%rcx$/;"	l
f010165d	obj/kern/kernel.asm	/^    f010165d:	00 00 00 $/;"	l
f0101660	obj/kern/kernel.asm	/^    f0101660:	ff d1                	callq  *%rcx$/;"	l
f0101662	obj/kern/kernel.asm	/^    f0101662:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)$/;"	l
f0101669	obj/kern/kernel.asm	/^    f0101669:	eb 25                	jmp    fffffffff0101690 <end+0xfffffffefe6602f0>$/;"	l
f010166b	obj/kern/kernel.asm	/^    f010166b:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx$/;"	l
f010166f	obj/kern/kernel.asm	/^    f010166f:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
f0101672	obj/kern/kernel.asm	/^    f0101672:	48 98                	cltq   $/;"	l
f0101674	obj/kern/kernel.asm	/^    f0101674:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f0101678	obj/kern/kernel.asm	/^    f0101678:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f010167b	obj/kern/kernel.asm	/^    f010167b:	0f be c0             	movsbl %al,%eax$/;"	l
f010167e	obj/kern/kernel.asm	/^    f010167e:	89 c7                	mov    %eax,%edi$/;"	l
f0101680	obj/kern/kernel.asm	/^    f0101680:	48 b8 77 12 10 f0 00 	mov    $0xf0101277,%rax$/;"	l
f0101687	obj/kern/kernel.asm	/^    f0101687:	00 00 00 $/;"	l
f010168a	obj/kern/kernel.asm	/^    f010168a:	ff d0                	callq  *%rax$/;"	l
f010168c	obj/kern/kernel.asm	/^    f010168c:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)$/;"	l
f0101690	obj/kern/kernel.asm	/^    f0101690:	8b 45 b8             	mov    -0x48(%rbp),%eax$/;"	l
f0101693	obj/kern/kernel.asm	/^    f0101693:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
f0101696	obj/kern/kernel.asm	/^    f0101696:	7f d3                	jg     fffffffff010166b <end+0xfffffffefe6602cb>$/;"	l
f0101698	obj/kern/kernel.asm	/^    f0101698:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
f010169c	obj/kern/kernel.asm	/^    f010169c:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f01016a0	obj/kern/kernel.asm	/^    f01016a0:	48 f7 d8             	neg    %rax$/;"	l
f01016a3	obj/kern/kernel.asm	/^    f01016a3:	48 03 45 e0          	add    -0x20(%rbp),%rax$/;"	l
f01016a7	obj/kern/kernel.asm	/^    f01016a7:	48 89 c6             	mov    %rax,%rsi$/;"	l
f01016aa	obj/kern/kernel.asm	/^    f01016aa:	48 bf ae 17 11 f0 00 	mov    $0xf01117ae,%rdi$/;"	l
f01016b1	obj/kern/kernel.asm	/^    f01016b1:	00 00 00 $/;"	l
f01016b4	obj/kern/kernel.asm	/^    f01016b4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01016b9	obj/kern/kernel.asm	/^    f01016b9:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f01016c0	obj/kern/kernel.asm	/^    f01016c0:	00 00 00 $/;"	l
f01016c3	obj/kern/kernel.asm	/^    f01016c3:	ff d2                	callq  *%rdx$/;"	l
f01016c5	obj/kern/kernel.asm	/^    f01016c5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f01016c9	obj/kern/kernel.asm	/^    f01016c9:	48 8b 00             	mov    (%rax),%rax$/;"	l
f01016cc	obj/kern/kernel.asm	/^    f01016cc:	48 89 45 d8          	mov    %rax,-0x28(%rbp)$/;"	l
f01016d0	obj/kern/kernel.asm	/^    f01016d0:	48 bf 6a 17 11 f0 00 	mov    $0xf011176a,%rdi$/;"	l
f01016d7	obj/kern/kernel.asm	/^    f01016d7:	00 00 00 $/;"	l
f01016da	obj/kern/kernel.asm	/^    f01016da:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01016df	obj/kern/kernel.asm	/^    f01016df:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f01016e6	obj/kern/kernel.asm	/^    f01016e6:	00 00 00 $/;"	l
f01016e9	obj/kern/kernel.asm	/^    f01016e9:	ff d2                	callq  *%rdx$/;"	l
f01016eb	obj/kern/kernel.asm	/^    f01016eb:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)$/;"	l
f01016f0	obj/kern/kernel.asm	/^    f01016f0:	0f 85 68 fe ff ff    	jne    fffffffff010155e <end+0xfffffffefe6601be>$/;"	l
f01016f6	obj/kern/kernel.asm	/^    f01016f6:	48 bf 6a 17 11 f0 00 	mov    $0xf011176a,%rdi$/;"	l
f01016fd	obj/kern/kernel.asm	/^    f01016fd:	00 00 00 $/;"	l
f0101700	obj/kern/kernel.asm	/^    f0101700:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101705	obj/kern/kernel.asm	/^    f0101705:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f010170c	obj/kern/kernel.asm	/^    f010170c:	00 00 00 $/;"	l
f010170f	obj/kern/kernel.asm	/^    f010170f:	ff d2                	callq  *%rdx$/;"	l
f0101711	obj/kern/kernel.asm	/^    f0101711:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101716	obj/kern/kernel.asm	/^    f0101716:	c9                   	leaveq $/;"	l
f0101717	obj/kern/kernel.asm	/^    f0101717:	c3                   	retq   $/;"	l
f0101718	obj/kern/kernel.asm	/^    f0101718:	55                   	push   %rbp$/;"	l
f0101719	obj/kern/kernel.asm	/^    f0101719:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010171c	obj/kern/kernel.asm	/^    f010171c:	53                   	push   %rbx$/;"	l
f010171d	obj/kern/kernel.asm	/^    f010171d:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp$/;"	l
f0101724	obj/kern/kernel.asm	/^    f0101724:	48 89 bd 58 ff ff ff 	mov    %rdi,-0xa8(%rbp)$/;"	l
f010172b	obj/kern/kernel.asm	/^    f010172b:	48 89 b5 50 ff ff ff 	mov    %rsi,-0xb0(%rbp)$/;"	l
f0101732	obj/kern/kernel.asm	/^    f0101732:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)$/;"	l
f0101739	obj/kern/kernel.asm	/^    f0101739:	8b 45 e8             	mov    -0x18(%rbp),%eax$/;"	l
f010173c	obj/kern/kernel.asm	/^    f010173c:	48 98                	cltq   $/;"	l
f010173e	obj/kern/kernel.asm	/^    f010173e:	48 c7 84 c5 60 ff ff 	movq   $0x0,-0xa0(%rbp,%rax,8)$/;"	l
f0101745	obj/kern/kernel.asm	/^    f0101745:	ff 00 00 00 00 $/;"	l
f010174a	obj/kern/kernel.asm	/^    f010174a:	eb 12                	jmp    fffffffff010175e <end+0xfffffffefe6603be>$/;"	l
f010174c	obj/kern/kernel.asm	/^    f010174c:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax$/;"	l
f0101753	obj/kern/kernel.asm	/^    f0101753:	c6 00 00             	movb   $0x0,(%rax)$/;"	l
f0101756	obj/kern/kernel.asm	/^    f0101756:	48 83 85 58 ff ff ff 	addq   $0x1,-0xa8(%rbp)$/;"	l
f010175d	obj/kern/kernel.asm	/^    f010175d:	01 $/;"	l
f010175e	obj/kern/kernel.asm	/^    f010175e:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax$/;"	l
f0101765	obj/kern/kernel.asm	/^    f0101765:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f0101768	obj/kern/kernel.asm	/^    f0101768:	84 c0                	test   %al,%al$/;"	l
f010176a	obj/kern/kernel.asm	/^    f010176a:	74 2a                	je     fffffffff0101796 <end+0xfffffffefe6603f6>$/;"	l
f010176c	obj/kern/kernel.asm	/^    f010176c:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax$/;"	l
f0101773	obj/kern/kernel.asm	/^    f0101773:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f0101776	obj/kern/kernel.asm	/^    f0101776:	0f be c0             	movsbl %al,%eax$/;"	l
f0101779	obj/kern/kernel.asm	/^    f0101779:	89 c6                	mov    %eax,%esi$/;"	l
f010177b	obj/kern/kernel.asm	/^    f010177b:	48 bf b3 17 11 f0 00 	mov    $0xf01117b3,%rdi$/;"	l
f0101782	obj/kern/kernel.asm	/^    f0101782:	00 00 00 $/;"	l
f0101785	obj/kern/kernel.asm	/^    f0101785:	48 b8 ce ed 10 f0 00 	mov    $0xf010edce,%rax$/;"	l
f010178c	obj/kern/kernel.asm	/^    f010178c:	00 00 00 $/;"	l
f010178f	obj/kern/kernel.asm	/^    f010178f:	ff d0                	callq  *%rax$/;"	l
f0101791	obj/kern/kernel.asm	/^    f0101791:	48 85 c0             	test   %rax,%rax$/;"	l
f0101794	obj/kern/kernel.asm	/^    f0101794:	75 b6                	jne    fffffffff010174c <end+0xfffffffefe6603ac>$/;"	l
f0101796	obj/kern/kernel.asm	/^    f0101796:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax$/;"	l
f010179d	obj/kern/kernel.asm	/^    f010179d:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f01017a0	obj/kern/kernel.asm	/^    f01017a0:	84 c0                	test   %al,%al$/;"	l
f01017a2	obj/kern/kernel.asm	/^    f01017a2:	75 20                	jne    fffffffff01017c4 <end+0xfffffffefe660424>$/;"	l
f01017a4	obj/kern/kernel.asm	/^    f01017a4:	8b 45 e8             	mov    -0x18(%rbp),%eax$/;"	l
f01017a7	obj/kern/kernel.asm	/^    f01017a7:	48 98                	cltq   $/;"	l
f01017a9	obj/kern/kernel.asm	/^    f01017a9:	48 c7 84 c5 60 ff ff 	movq   $0x0,-0xa0(%rbp,%rax,8)$/;"	l
f01017b0	obj/kern/kernel.asm	/^    f01017b0:	ff 00 00 00 00 $/;"	l
f01017b5	obj/kern/kernel.asm	/^    f01017b5:	83 7d e8 00          	cmpl   $0x0,-0x18(%rbp)$/;"	l
f01017b9	obj/kern/kernel.asm	/^    f01017b9:	0f 84 95 00 00 00    	je     fffffffff0101854 <end+0xfffffffefe6604b4>$/;"	l
f01017bf	obj/kern/kernel.asm	/^    f01017bf:	e9 9a 00 00 00       	jmpq   fffffffff010185e <end+0xfffffffefe6604be>$/;"	l
f01017c4	obj/kern/kernel.asm	/^    f01017c4:	83 7d e8 0f          	cmpl   $0xf,-0x18(%rbp)$/;"	l
f01017c8	obj/kern/kernel.asm	/^    f01017c8:	75 2a                	jne    fffffffff01017f4 <end+0xfffffffefe660454>$/;"	l
f01017ca	obj/kern/kernel.asm	/^    f01017ca:	be 10 00 00 00       	mov    $0x10,%esi$/;"	l
f01017cf	obj/kern/kernel.asm	/^    f01017cf:	48 bf b8 17 11 f0 00 	mov    $0xf01117b8,%rdi$/;"	l
f01017d6	obj/kern/kernel.asm	/^    f01017d6:	00 00 00 $/;"	l
f01017d9	obj/kern/kernel.asm	/^    f01017d9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01017de	obj/kern/kernel.asm	/^    f01017de:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f01017e5	obj/kern/kernel.asm	/^    f01017e5:	00 00 00 $/;"	l
f01017e8	obj/kern/kernel.asm	/^    f01017e8:	ff d2                	callq  *%rdx$/;"	l
f01017ea	obj/kern/kernel.asm	/^    f01017ea:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01017ef	obj/kern/kernel.asm	/^    f01017ef:	e9 30 01 00 00       	jmpq   fffffffff0101924 <end+0xfffffffefe660584>$/;"	l
f01017f4	obj/kern/kernel.asm	/^    f01017f4:	8b 45 e8             	mov    -0x18(%rbp),%eax$/;"	l
f01017f7	obj/kern/kernel.asm	/^    f01017f7:	48 98                	cltq   $/;"	l
f01017f9	obj/kern/kernel.asm	/^    f01017f9:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx$/;"	l
f0101800	obj/kern/kernel.asm	/^    f0101800:	48 89 94 c5 60 ff ff 	mov    %rdx,-0xa0(%rbp,%rax,8)$/;"	l
f0101807	obj/kern/kernel.asm	/^    f0101807:	ff $/;"	l
f0101808	obj/kern/kernel.asm	/^    f0101808:	83 45 e8 01          	addl   $0x1,-0x18(%rbp)$/;"	l
f010180c	obj/kern/kernel.asm	/^    f010180c:	eb 08                	jmp    fffffffff0101816 <end+0xfffffffefe660476>$/;"	l
f010180e	obj/kern/kernel.asm	/^    f010180e:	48 83 85 58 ff ff ff 	addq   $0x1,-0xa8(%rbp)$/;"	l
f0101815	obj/kern/kernel.asm	/^    f0101815:	01 $/;"	l
f0101816	obj/kern/kernel.asm	/^    f0101816:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax$/;"	l
f010181d	obj/kern/kernel.asm	/^    f010181d:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f0101820	obj/kern/kernel.asm	/^    f0101820:	84 c0                	test   %al,%al$/;"	l
f0101822	obj/kern/kernel.asm	/^    f0101822:	74 2a                	je     fffffffff010184e <end+0xfffffffefe6604ae>$/;"	l
f0101824	obj/kern/kernel.asm	/^    f0101824:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax$/;"	l
f010182b	obj/kern/kernel.asm	/^    f010182b:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f010182e	obj/kern/kernel.asm	/^    f010182e:	0f be c0             	movsbl %al,%eax$/;"	l
f0101831	obj/kern/kernel.asm	/^    f0101831:	89 c6                	mov    %eax,%esi$/;"	l
f0101833	obj/kern/kernel.asm	/^    f0101833:	48 bf b3 17 11 f0 00 	mov    $0xf01117b3,%rdi$/;"	l
f010183a	obj/kern/kernel.asm	/^    f010183a:	00 00 00 $/;"	l
f010183d	obj/kern/kernel.asm	/^    f010183d:	48 b8 ce ed 10 f0 00 	mov    $0xf010edce,%rax$/;"	l
f0101844	obj/kern/kernel.asm	/^    f0101844:	00 00 00 $/;"	l
f0101847	obj/kern/kernel.asm	/^    f0101847:	ff d0                	callq  *%rax$/;"	l
f0101849	obj/kern/kernel.asm	/^    f0101849:	48 85 c0             	test   %rax,%rax$/;"	l
f010184c	obj/kern/kernel.asm	/^    f010184c:	74 c0                	je     fffffffff010180e <end+0xfffffffefe66046e>$/;"	l
f010184e	obj/kern/kernel.asm	/^    f010184e:	90                   	nop$/;"	l
f010184f	obj/kern/kernel.asm	/^    f010184f:	e9 0a ff ff ff       	jmpq   fffffffff010175e <end+0xfffffffefe6603be>$/;"	l
f0101854	obj/kern/kernel.asm	/^    f0101854:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101859	obj/kern/kernel.asm	/^    f0101859:	e9 c6 00 00 00       	jmpq   fffffffff0101924 <end+0xfffffffefe660584>$/;"	l
f010185e	obj/kern/kernel.asm	/^    f010185e:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)$/;"	l
f0101865	obj/kern/kernel.asm	/^    f0101865:	e9 84 00 00 00       	jmpq   fffffffff01018ee <end+0xfffffffefe66054e>$/;"	l
f010186a	obj/kern/kernel.asm	/^    f010186a:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
f010186d	obj/kern/kernel.asm	/^    f010186d:	48 b9 60 05 13 f0 00 	mov    $0xf0130560,%rcx$/;"	l
f0101874	obj/kern/kernel.asm	/^    f0101874:	00 00 00 $/;"	l
f0101877	obj/kern/kernel.asm	/^    f0101877:	48 63 d0             	movslq %eax,%rdx$/;"	l
f010187a	obj/kern/kernel.asm	/^    f010187a:	48 89 d0             	mov    %rdx,%rax$/;"	l
f010187d	obj/kern/kernel.asm	/^    f010187d:	48 01 c0             	add    %rax,%rax$/;"	l
f0101880	obj/kern/kernel.asm	/^    f0101880:	48 01 d0             	add    %rdx,%rax$/;"	l
f0101883	obj/kern/kernel.asm	/^    f0101883:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f0101887	obj/kern/kernel.asm	/^    f0101887:	48 8b 14 08          	mov    (%rax,%rcx,1),%rdx$/;"	l
f010188b	obj/kern/kernel.asm	/^    f010188b:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax$/;"	l
f0101892	obj/kern/kernel.asm	/^    f0101892:	48 89 d6             	mov    %rdx,%rsi$/;"	l
f0101895	obj/kern/kernel.asm	/^    f0101895:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0101898	obj/kern/kernel.asm	/^    f0101898:	48 b8 06 ed 10 f0 00 	mov    $0xf010ed06,%rax$/;"	l
f010189f	obj/kern/kernel.asm	/^    f010189f:	00 00 00 $/;"	l
f01018a2	obj/kern/kernel.asm	/^    f01018a2:	ff d0                	callq  *%rax$/;"	l
f01018a4	obj/kern/kernel.asm	/^    f01018a4:	85 c0                	test   %eax,%eax$/;"	l
f01018a6	obj/kern/kernel.asm	/^    f01018a6:	75 42                	jne    fffffffff01018ea <end+0xfffffffefe66054a>$/;"	l
f01018a8	obj/kern/kernel.asm	/^    f01018a8:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
f01018ab	obj/kern/kernel.asm	/^    f01018ab:	48 b9 60 05 13 f0 00 	mov    $0xf0130560,%rcx$/;"	l
f01018b2	obj/kern/kernel.asm	/^    f01018b2:	00 00 00 $/;"	l
f01018b5	obj/kern/kernel.asm	/^    f01018b5:	48 63 d0             	movslq %eax,%rdx$/;"	l
f01018b8	obj/kern/kernel.asm	/^    f01018b8:	48 89 d0             	mov    %rdx,%rax$/;"	l
f01018bb	obj/kern/kernel.asm	/^    f01018bb:	48 01 c0             	add    %rax,%rax$/;"	l
f01018be	obj/kern/kernel.asm	/^    f01018be:	48 01 d0             	add    %rdx,%rax$/;"	l
f01018c1	obj/kern/kernel.asm	/^    f01018c1:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f01018c5	obj/kern/kernel.asm	/^    f01018c5:	48 8d 04 01          	lea    (%rcx,%rax,1),%rax$/;"	l
f01018c9	obj/kern/kernel.asm	/^    f01018c9:	48 83 c0 10          	add    $0x10,%rax$/;"	l
f01018cd	obj/kern/kernel.asm	/^    f01018cd:	48 8b 18             	mov    (%rax),%rbx$/;"	l
f01018d0	obj/kern/kernel.asm	/^    f01018d0:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx$/;"	l
f01018d7	obj/kern/kernel.asm	/^    f01018d7:	48 8d 8d 60 ff ff ff 	lea    -0xa0(%rbp),%rcx$/;"	l
f01018de	obj/kern/kernel.asm	/^    f01018de:	8b 45 e8             	mov    -0x18(%rbp),%eax$/;"	l
f01018e1	obj/kern/kernel.asm	/^    f01018e1:	48 89 ce             	mov    %rcx,%rsi$/;"	l
f01018e4	obj/kern/kernel.asm	/^    f01018e4:	89 c7                	mov    %eax,%edi$/;"	l
f01018e6	obj/kern/kernel.asm	/^    f01018e6:	ff d3                	callq  *%rbx$/;"	l
f01018e8	obj/kern/kernel.asm	/^    f01018e8:	eb 3a                	jmp    fffffffff0101924 <end+0xfffffffefe660584>$/;"	l
f01018ea	obj/kern/kernel.asm	/^    f01018ea:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)$/;"	l
f01018ee	obj/kern/kernel.asm	/^    f01018ee:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
f01018f1	obj/kern/kernel.asm	/^    f01018f1:	83 f8 02             	cmp    $0x2,%eax$/;"	l
f01018f4	obj/kern/kernel.asm	/^    f01018f4:	0f 86 70 ff ff ff    	jbe    fffffffff010186a <end+0xfffffffefe6604ca>$/;"	l
f01018fa	obj/kern/kernel.asm	/^    f01018fa:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax$/;"	l
f0101901	obj/kern/kernel.asm	/^    f0101901:	48 89 c6             	mov    %rax,%rsi$/;"	l
f0101904	obj/kern/kernel.asm	/^    f0101904:	48 bf d5 17 11 f0 00 	mov    $0xf01117d5,%rdi$/;"	l
f010190b	obj/kern/kernel.asm	/^    f010190b:	00 00 00 $/;"	l
f010190e	obj/kern/kernel.asm	/^    f010190e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101913	obj/kern/kernel.asm	/^    f0101913:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f010191a	obj/kern/kernel.asm	/^    f010191a:	00 00 00 $/;"	l
f010191d	obj/kern/kernel.asm	/^    f010191d:	ff d2                	callq  *%rdx$/;"	l
f010191f	obj/kern/kernel.asm	/^    f010191f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101924	obj/kern/kernel.asm	/^    f0101924:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp$/;"	l
f010192b	obj/kern/kernel.asm	/^    f010192b:	5b                   	pop    %rbx$/;"	l
f010192c	obj/kern/kernel.asm	/^    f010192c:	c9                   	leaveq $/;"	l
f010192d	obj/kern/kernel.asm	/^    f010192d:	c3                   	retq   $/;"	l
f010192e	obj/kern/kernel.asm	/^    f010192e:	55                   	push   %rbp$/;"	l
f010192f	obj/kern/kernel.asm	/^    f010192f:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f0101932	obj/kern/kernel.asm	/^    f0101932:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
f0101936	obj/kern/kernel.asm	/^    f0101936:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
f010193a	obj/kern/kernel.asm	/^    f010193a:	48 bf f0 17 11 f0 00 	mov    $0xf01117f0,%rdi$/;"	l
f0101941	obj/kern/kernel.asm	/^    f0101941:	00 00 00 $/;"	l
f0101944	obj/kern/kernel.asm	/^    f0101944:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101949	obj/kern/kernel.asm	/^    f0101949:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f0101950	obj/kern/kernel.asm	/^    f0101950:	00 00 00 $/;"	l
f0101953	obj/kern/kernel.asm	/^    f0101953:	ff d2                	callq  *%rdx$/;"	l
f0101955	obj/kern/kernel.asm	/^    f0101955:	48 bf 18 18 11 f0 00 	mov    $0xf0111818,%rdi$/;"	l
f010195c	obj/kern/kernel.asm	/^    f010195c:	00 00 00 $/;"	l
f010195f	obj/kern/kernel.asm	/^    f010195f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101964	obj/kern/kernel.asm	/^    f0101964:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f010196b	obj/kern/kernel.asm	/^    f010196b:	00 00 00 $/;"	l
f010196e	obj/kern/kernel.asm	/^    f010196e:	ff d2                	callq  *%rdx$/;"	l
f0101970	obj/kern/kernel.asm	/^    f0101970:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)$/;"	l
f0101975	obj/kern/kernel.asm	/^    f0101975:	74 19                	je     fffffffff0101990 <end+0xfffffffefe6605f0>$/;"	l
f0101977	obj/kern/kernel.asm	/^    f0101977:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010197b	obj/kern/kernel.asm	/^    f010197b:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010197e	obj/kern/kernel.asm	/^    f010197e:	48 b8 bf b7 10 f0 00 	mov    $0xf010b7bf,%rax$/;"	l
f0101985	obj/kern/kernel.asm	/^    f0101985:	00 00 00 $/;"	l
f0101988	obj/kern/kernel.asm	/^    f0101988:	ff d0                	callq  *%rax$/;"	l
f010198a	obj/kern/kernel.asm	/^    f010198a:	eb 04                	jmp    fffffffff0101990 <end+0xfffffffefe6605f0>$/;"	l
f010198c	obj/kern/kernel.asm	/^    f010198c:	90                   	nop$/;"	l
f010198d	obj/kern/kernel.asm	/^    f010198d:	eb 01                	jmp    fffffffff0101990 <end+0xfffffffefe6605f0>$/;"	l
f010198f	obj/kern/kernel.asm	/^    f010198f:	90                   	nop$/;"	l
f0101990	obj/kern/kernel.asm	/^    f0101990:	48 bf 3d 18 11 f0 00 	mov    $0xf011183d,%rdi$/;"	l
f0101997	obj/kern/kernel.asm	/^    f0101997:	00 00 00 $/;"	l
f010199a	obj/kern/kernel.asm	/^    f010199a:	48 b8 ec e9 10 f0 00 	mov    $0xf010e9ec,%rax$/;"	l
f01019a1	obj/kern/kernel.asm	/^    f01019a1:	00 00 00 $/;"	l
f01019a4	obj/kern/kernel.asm	/^    f01019a4:	ff d0                	callq  *%rax$/;"	l
f01019a6	obj/kern/kernel.asm	/^    f01019a6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
f01019aa	obj/kern/kernel.asm	/^    f01019aa:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
f01019af	obj/kern/kernel.asm	/^    f01019af:	74 db                	je     fffffffff010198c <end+0xfffffffefe6605ec>$/;"	l
f01019b1	obj/kern/kernel.asm	/^    f01019b1:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
f01019b5	obj/kern/kernel.asm	/^    f01019b5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f01019b9	obj/kern/kernel.asm	/^    f01019b9:	48 89 d6             	mov    %rdx,%rsi$/;"	l
f01019bc	obj/kern/kernel.asm	/^    f01019bc:	48 89 c7             	mov    %rax,%rdi$/;"	l
f01019bf	obj/kern/kernel.asm	/^    f01019bf:	48 b8 18 17 10 f0 00 	mov    $0xf0101718,%rax$/;"	l
f01019c6	obj/kern/kernel.asm	/^    f01019c6:	00 00 00 $/;"	l
f01019c9	obj/kern/kernel.asm	/^    f01019c9:	ff d0                	callq  *%rax$/;"	l
f01019cb	obj/kern/kernel.asm	/^    f01019cb:	85 c0                	test   %eax,%eax$/;"	l
f01019cd	obj/kern/kernel.asm	/^    f01019cd:	79 c0                	jns    fffffffff010198f <end+0xfffffffefe6605ef>$/;"	l
f01019cf	obj/kern/kernel.asm	/^    f01019cf:	90                   	nop$/;"	l
f01019d0	obj/kern/kernel.asm	/^    f01019d0:	c9                   	leaveq $/;"	l
f01019d1	obj/kern/kernel.asm	/^    f01019d1:	c3                   	retq   $/;"	l
f01019d4	obj/kern/kernel.asm	/^    f01019d4:	55                   	push   %rbp$/;"	l
f01019d5	obj/kern/kernel.asm	/^    f01019d5:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f01019d8	obj/kern/kernel.asm	/^    f01019d8:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
f01019dc	obj/kern/kernel.asm	/^    f01019dc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
f01019e0	obj/kern/kernel.asm	/^    f01019e0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
f01019e4	obj/kern/kernel.asm	/^    f01019e4:	48 b8 70 77 a2 f1 00 	mov    $0xf1a27770,%rax$/;"	l
f01019eb	obj/kern/kernel.asm	/^    f01019eb:	00 00 00 $/;"	l
f01019ee	obj/kern/kernel.asm	/^    f01019ee:	48 8b 00             	mov    (%rax),%rax$/;"	l
f01019f1	obj/kern/kernel.asm	/^    f01019f1:	48 89 d1             	mov    %rdx,%rcx$/;"	l
f01019f4	obj/kern/kernel.asm	/^    f01019f4:	48 29 c1             	sub    %rax,%rcx$/;"	l
f01019f7	obj/kern/kernel.asm	/^    f01019f7:	48 89 c8             	mov    %rcx,%rax$/;"	l
f01019fa	obj/kern/kernel.asm	/^    f01019fa:	48 c1 f8 04          	sar    $0x4,%rax$/;"	l
f01019fe	obj/kern/kernel.asm	/^    f01019fe:	c9                   	leaveq $/;"	l
f01019ff	obj/kern/kernel.asm	/^    f01019ff:	c3                   	retq   $/;"	l
f0101a00	obj/kern/kernel.asm	/^    f0101a00:	55                   	push   %rbp$/;"	l
f0101a01	obj/kern/kernel.asm	/^    f0101a01:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f0101a04	obj/kern/kernel.asm	/^    f0101a04:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
f0101a08	obj/kern/kernel.asm	/^    f0101a08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
f0101a0c	obj/kern/kernel.asm	/^    f0101a0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f0101a10	obj/kern/kernel.asm	/^    f0101a10:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0101a13	obj/kern/kernel.asm	/^    f0101a13:	48 b8 d4 19 10 f0 00 	mov    $0xf01019d4,%rax$/;"	l
f0101a1a	obj/kern/kernel.asm	/^    f0101a1a:	00 00 00 $/;"	l
f0101a1d	obj/kern/kernel.asm	/^    f0101a1d:	ff d0                	callq  *%rax$/;"	l
f0101a1f	obj/kern/kernel.asm	/^    f0101a1f:	48 c1 e0 0c          	shl    $0xc,%rax$/;"	l
f0101a23	obj/kern/kernel.asm	/^    f0101a23:	c9                   	leaveq $/;"	l
f0101a24	obj/kern/kernel.asm	/^    f0101a24:	c3                   	retq   $/;"	l
f0101a25	obj/kern/kernel.asm	/^    f0101a25:	55                   	push   %rbp$/;"	l
f0101a26	obj/kern/kernel.asm	/^    f0101a26:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f0101a29	obj/kern/kernel.asm	/^    f0101a29:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
f0101a2d	obj/kern/kernel.asm	/^    f0101a2d:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
f0101a31	obj/kern/kernel.asm	/^    f0101a31:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f0101a35	obj/kern/kernel.asm	/^    f0101a35:	48 89 c2             	mov    %rax,%rdx$/;"	l
f0101a38	obj/kern/kernel.asm	/^    f0101a38:	48 c1 ea 0c          	shr    $0xc,%rdx$/;"	l
f0101a3c	obj/kern/kernel.asm	/^    f0101a3c:	48 b8 68 77 a2 f1 00 	mov    $0xf1a27768,%rax$/;"	l
f0101a43	obj/kern/kernel.asm	/^    f0101a43:	00 00 00 $/;"	l
f0101a46	obj/kern/kernel.asm	/^    f0101a46:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0101a49	obj/kern/kernel.asm	/^    f0101a49:	48 39 c2             	cmp    %rax,%rdx$/;"	l
f0101a4c	obj/kern/kernel.asm	/^    f0101a4c:	72 2a                	jb     fffffffff0101a78 <end+0xfffffffefe6606d8>$/;"	l
f0101a4e	obj/kern/kernel.asm	/^    f0101a4e:	48 ba 48 18 11 f0 00 	mov    $0xf0111848,%rdx$/;"	l
f0101a55	obj/kern/kernel.asm	/^    f0101a55:	00 00 00 $/;"	l
f0101a58	obj/kern/kernel.asm	/^    f0101a58:	be 56 00 00 00       	mov    $0x56,%esi$/;"	l
f0101a5d	obj/kern/kernel.asm	/^    f0101a5d:	48 bf 67 18 11 f0 00 	mov    $0xf0111867,%rdi$/;"	l
f0101a64	obj/kern/kernel.asm	/^    f0101a64:	00 00 00 $/;"	l
f0101a67	obj/kern/kernel.asm	/^    f0101a67:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101a6c	obj/kern/kernel.asm	/^    f0101a6c:	48 b9 18 05 10 f0 00 	mov    $0xf0100518,%rcx$/;"	l
f0101a73	obj/kern/kernel.asm	/^    f0101a73:	00 00 00 $/;"	l
f0101a76	obj/kern/kernel.asm	/^    f0101a76:	ff d1                	callq  *%rcx$/;"	l
f0101a78	obj/kern/kernel.asm	/^    f0101a78:	48 b8 70 77 a2 f1 00 	mov    $0xf1a27770,%rax$/;"	l
f0101a7f	obj/kern/kernel.asm	/^    f0101a7f:	00 00 00 $/;"	l
f0101a82	obj/kern/kernel.asm	/^    f0101a82:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0101a85	obj/kern/kernel.asm	/^    f0101a85:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
f0101a89	obj/kern/kernel.asm	/^    f0101a89:	48 c1 ea 0c          	shr    $0xc,%rdx$/;"	l
f0101a8d	obj/kern/kernel.asm	/^    f0101a8d:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f0101a91	obj/kern/kernel.asm	/^    f0101a91:	48 01 d0             	add    %rdx,%rax$/;"	l
f0101a94	obj/kern/kernel.asm	/^    f0101a94:	c9                   	leaveq $/;"	l
f0101a95	obj/kern/kernel.asm	/^    f0101a95:	c3                   	retq   $/;"	l
f0101a96	obj/kern/kernel.asm	/^    f0101a96:	55                   	push   %rbp$/;"	l
f0101a97	obj/kern/kernel.asm	/^    f0101a97:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f0101a9a	obj/kern/kernel.asm	/^    f0101a9a:	53                   	push   %rbx$/;"	l
f0101a9b	obj/kern/kernel.asm	/^    f0101a9b:	48 83 ec 28          	sub    $0x28,%rsp$/;"	l
f0101a9f	obj/kern/kernel.asm	/^    f0101a9f:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)$/;"	l
f0101aa3	obj/kern/kernel.asm	/^    f0101aa3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f0101aa7	obj/kern/kernel.asm	/^    f0101aa7:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0101aaa	obj/kern/kernel.asm	/^    f0101aaa:	48 b8 00 1a 10 f0 00 	mov    $0xf0101a00,%rax$/;"	l
f0101ab1	obj/kern/kernel.asm	/^    f0101ab1:	00 00 00 $/;"	l
f0101ab4	obj/kern/kernel.asm	/^    f0101ab4:	ff d0                	callq  *%rax$/;"	l
f0101ab6	obj/kern/kernel.asm	/^    f0101ab6:	48 89 45 e0          	mov    %rax,-0x20(%rbp)$/;"	l
f0101aba	obj/kern/kernel.asm	/^    f0101aba:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
f0101abe	obj/kern/kernel.asm	/^    f0101abe:	48 c1 e8 0c          	shr    $0xc,%rax$/;"	l
f0101ac2	obj/kern/kernel.asm	/^    f0101ac2:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
f0101ac5	obj/kern/kernel.asm	/^    f0101ac5:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
f0101ac8	obj/kern/kernel.asm	/^    f0101ac8:	48 b8 68 77 a2 f1 00 	mov    $0xf1a27768,%rax$/;"	l
f0101acf	obj/kern/kernel.asm	/^    f0101acf:	00 00 00 $/;"	l
f0101ad2	obj/kern/kernel.asm	/^    f0101ad2:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0101ad5	obj/kern/kernel.asm	/^    f0101ad5:	48 39 c2             	cmp    %rax,%rdx$/;"	l
f0101ad8	obj/kern/kernel.asm	/^    f0101ad8:	72 31                	jb     fffffffff0101b0b <end+0xfffffffefe66076b>$/;"	l
f0101ada	obj/kern/kernel.asm	/^    f0101ada:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
f0101ade	obj/kern/kernel.asm	/^    f0101ade:	48 89 c1             	mov    %rax,%rcx$/;"	l
f0101ae1	obj/kern/kernel.asm	/^    f0101ae1:	48 ba 78 18 11 f0 00 	mov    $0xf0111878,%rdx$/;"	l
f0101ae8	obj/kern/kernel.asm	/^    f0101ae8:	00 00 00 $/;"	l
f0101aeb	obj/kern/kernel.asm	/^    f0101aeb:	be 5d 00 00 00       	mov    $0x5d,%esi$/;"	l
f0101af0	obj/kern/kernel.asm	/^    f0101af0:	48 bf 67 18 11 f0 00 	mov    $0xf0111867,%rdi$/;"	l
f0101af7	obj/kern/kernel.asm	/^    f0101af7:	00 00 00 $/;"	l
f0101afa	obj/kern/kernel.asm	/^    f0101afa:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101aff	obj/kern/kernel.asm	/^    f0101aff:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0101b06	obj/kern/kernel.asm	/^    f0101b06:	00 00 00 $/;"	l
f0101b09	obj/kern/kernel.asm	/^    f0101b09:	ff d3                	callq  *%rbx$/;"	l
f0101b0b	obj/kern/kernel.asm	/^    f0101b0b:	b8 00 00 00 f0       	mov    $0xf0000000,%eax$/;"	l
f0101b10	obj/kern/kernel.asm	/^    f0101b10:	48 03 45 e0          	add    -0x20(%rbp),%rax$/;"	l
f0101b14	obj/kern/kernel.asm	/^    f0101b14:	48 83 c4 28          	add    $0x28,%rsp$/;"	l
f0101b18	obj/kern/kernel.asm	/^    f0101b18:	5b                   	pop    %rbx$/;"	l
f0101b19	obj/kern/kernel.asm	/^    f0101b19:	c9                   	leaveq $/;"	l
f0101b1a	obj/kern/kernel.asm	/^    f0101b1a:	c3                   	retq   $/;"	l
f0101b1b	obj/kern/kernel.asm	/^    f0101b1b:	55                   	push   %rbp$/;"	l
f0101b1c	obj/kern/kernel.asm	/^    f0101b1c:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f0101b1f	obj/kern/kernel.asm	/^    f0101b1f:	53                   	push   %rbx$/;"	l
f0101b20	obj/kern/kernel.asm	/^    f0101b20:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
f0101b24	obj/kern/kernel.asm	/^    f0101b24:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
f0101b27	obj/kern/kernel.asm	/^    f0101b27:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
f0101b2a	obj/kern/kernel.asm	/^    f0101b2a:	89 c7                	mov    %eax,%edi$/;"	l
f0101b2c	obj/kern/kernel.asm	/^    f0101b2c:	48 b8 60 85 10 f0 00 	mov    $0xf0108560,%rax$/;"	l
f0101b33	obj/kern/kernel.asm	/^    f0101b33:	00 00 00 $/;"	l
f0101b36	obj/kern/kernel.asm	/^    f0101b36:	ff d0                	callq  *%rax$/;"	l
f0101b38	obj/kern/kernel.asm	/^    f0101b38:	89 c3                	mov    %eax,%ebx$/;"	l
f0101b3a	obj/kern/kernel.asm	/^    f0101b3a:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
f0101b3d	obj/kern/kernel.asm	/^    f0101b3d:	83 c0 01             	add    $0x1,%eax$/;"	l
f0101b40	obj/kern/kernel.asm	/^    f0101b40:	89 c7                	mov    %eax,%edi$/;"	l
f0101b42	obj/kern/kernel.asm	/^    f0101b42:	48 b8 60 85 10 f0 00 	mov    $0xf0108560,%rax$/;"	l
f0101b49	obj/kern/kernel.asm	/^    f0101b49:	00 00 00 $/;"	l
f0101b4c	obj/kern/kernel.asm	/^    f0101b4c:	ff d0                	callq  *%rax$/;"	l
f0101b4e	obj/kern/kernel.asm	/^    f0101b4e:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f0101b51	obj/kern/kernel.asm	/^    f0101b51:	09 d8                	or     %ebx,%eax$/;"	l
f0101b53	obj/kern/kernel.asm	/^    f0101b53:	48 83 c4 18          	add    $0x18,%rsp$/;"	l
f0101b57	obj/kern/kernel.asm	/^    f0101b57:	5b                   	pop    %rbx$/;"	l
f0101b58	obj/kern/kernel.asm	/^    f0101b58:	c9                   	leaveq $/;"	l
f0101b59	obj/kern/kernel.asm	/^    f0101b59:	c3                   	retq   $/;"	l
f0101b5a	obj/kern/kernel.asm	/^    f0101b5a:	55                   	push   %rbp$/;"	l
f0101b5b	obj/kern/kernel.asm	/^    f0101b5b:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f0101b5e	obj/kern/kernel.asm	/^    f0101b5e:	53                   	push   %rbx$/;"	l
f0101b5f	obj/kern/kernel.asm	/^    f0101b5f:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
f0101b63	obj/kern/kernel.asm	/^    f0101b63:	bf 15 00 00 00       	mov    $0x15,%edi$/;"	l
f0101b68	obj/kern/kernel.asm	/^    f0101b68:	48 b8 1b 1b 10 f0 00 	mov    $0xf0101b1b,%rax$/;"	l
f0101b6f	obj/kern/kernel.asm	/^    f0101b6f:	00 00 00 $/;"	l
f0101b72	obj/kern/kernel.asm	/^    f0101b72:	ff d0                	callq  *%rax$/;"	l
f0101b74	obj/kern/kernel.asm	/^    f0101b74:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f0101b77	obj/kern/kernel.asm	/^    f0101b77:	8d 90 ff 0f 00 00    	lea    0xfff(%rax),%edx$/;"	l
f0101b7d	obj/kern/kernel.asm	/^    f0101b7d:	85 c0                	test   %eax,%eax$/;"	l
f0101b7f	obj/kern/kernel.asm	/^    f0101b7f:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f0101b82	obj/kern/kernel.asm	/^    f0101b82:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
f0101b85	obj/kern/kernel.asm	/^    f0101b85:	48 63 d0             	movslq %eax,%rdx$/;"	l
f0101b88	obj/kern/kernel.asm	/^    f0101b88:	48 b8 30 62 a2 f1 00 	mov    $0xf1a26230,%rax$/;"	l
f0101b8f	obj/kern/kernel.asm	/^    f0101b8f:	00 00 00 $/;"	l
f0101b92	obj/kern/kernel.asm	/^    f0101b92:	48 89 10             	mov    %rdx,(%rax)$/;"	l
f0101b95	obj/kern/kernel.asm	/^    f0101b95:	bf 17 00 00 00       	mov    $0x17,%edi$/;"	l
f0101b9a	obj/kern/kernel.asm	/^    f0101b9a:	48 b8 1b 1b 10 f0 00 	mov    $0xf0101b1b,%rax$/;"	l
f0101ba1	obj/kern/kernel.asm	/^    f0101ba1:	00 00 00 $/;"	l
f0101ba4	obj/kern/kernel.asm	/^    f0101ba4:	ff d0                	callq  *%rax$/;"	l
f0101ba6	obj/kern/kernel.asm	/^    f0101ba6:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f0101ba9	obj/kern/kernel.asm	/^    f0101ba9:	8d 90 ff 0f 00 00    	lea    0xfff(%rax),%edx$/;"	l
f0101baf	obj/kern/kernel.asm	/^    f0101baf:	85 c0                	test   %eax,%eax$/;"	l
f0101bb1	obj/kern/kernel.asm	/^    f0101bb1:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
f0101bb4	obj/kern/kernel.asm	/^    f0101bb4:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
f0101bb7	obj/kern/kernel.asm	/^    f0101bb7:	48 98                	cltq   $/;"	l
f0101bb9	obj/kern/kernel.asm	/^    f0101bb9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
f0101bbd	obj/kern/kernel.asm	/^    f0101bbd:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)$/;"	l
f0101bc2	obj/kern/kernel.asm	/^    f0101bc2:	74 1a                	je     fffffffff0101bde <end+0xfffffffefe66083e>$/;"	l
f0101bc4	obj/kern/kernel.asm	/^    f0101bc4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f0101bc8	obj/kern/kernel.asm	/^    f0101bc8:	48 8d 90 00 01 00 00 	lea    0x100(%rax),%rdx$/;"	l
f0101bcf	obj/kern/kernel.asm	/^    f0101bcf:	48 b8 68 77 a2 f1 00 	mov    $0xf1a27768,%rax$/;"	l
f0101bd6	obj/kern/kernel.asm	/^    f0101bd6:	00 00 00 $/;"	l
f0101bd9	obj/kern/kernel.asm	/^    f0101bd9:	48 89 10             	mov    %rdx,(%rax)$/;"	l
f0101bdc	obj/kern/kernel.asm	/^    f0101bdc:	eb 1a                	jmp    fffffffff0101bf8 <end+0xfffffffefe660858>$/;"	l
f0101bde	obj/kern/kernel.asm	/^    f0101bde:	48 b8 30 62 a2 f1 00 	mov    $0xf1a26230,%rax$/;"	l
f0101be5	obj/kern/kernel.asm	/^    f0101be5:	00 00 00 $/;"	l
f0101be8	obj/kern/kernel.asm	/^    f0101be8:	48 8b 10             	mov    (%rax),%rdx$/;"	l
f0101beb	obj/kern/kernel.asm	/^    f0101beb:	48 b8 68 77 a2 f1 00 	mov    $0xf1a27768,%rax$/;"	l
f0101bf2	obj/kern/kernel.asm	/^    f0101bf2:	00 00 00 $/;"	l
f0101bf5	obj/kern/kernel.asm	/^    f0101bf5:	48 89 10             	mov    %rdx,(%rax)$/;"	l
f0101bf8	obj/kern/kernel.asm	/^    f0101bf8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f0101bfc	obj/kern/kernel.asm	/^    f0101bfc:	48 c1 e0 0c          	shl    $0xc,%rax$/;"	l
f0101c00	obj/kern/kernel.asm	/^    f0101c00:	48 89 c1             	mov    %rax,%rcx$/;"	l
f0101c03	obj/kern/kernel.asm	/^    f0101c03:	48 c1 e9 0a          	shr    $0xa,%rcx$/;"	l
f0101c07	obj/kern/kernel.asm	/^    f0101c07:	48 b8 30 62 a2 f1 00 	mov    $0xf1a26230,%rax$/;"	l
f0101c0e	obj/kern/kernel.asm	/^    f0101c0e:	00 00 00 $/;"	l
f0101c11	obj/kern/kernel.asm	/^    f0101c11:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0101c14	obj/kern/kernel.asm	/^    f0101c14:	48 c1 e0 0c          	shl    $0xc,%rax$/;"	l
f0101c18	obj/kern/kernel.asm	/^    f0101c18:	48 89 c2             	mov    %rax,%rdx$/;"	l
f0101c1b	obj/kern/kernel.asm	/^    f0101c1b:	48 c1 ea 0a          	shr    $0xa,%rdx$/;"	l
f0101c1f	obj/kern/kernel.asm	/^    f0101c1f:	48 b8 68 77 a2 f1 00 	mov    $0xf1a27768,%rax$/;"	l
f0101c26	obj/kern/kernel.asm	/^    f0101c26:	00 00 00 $/;"	l
f0101c29	obj/kern/kernel.asm	/^    f0101c29:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0101c2c	obj/kern/kernel.asm	/^    f0101c2c:	48 c1 e0 0c          	shl    $0xc,%rax$/;"	l
f0101c30	obj/kern/kernel.asm	/^    f0101c30:	48 c1 e8 0a          	shr    $0xa,%rax$/;"	l
f0101c34	obj/kern/kernel.asm	/^    f0101c34:	48 89 c6             	mov    %rax,%rsi$/;"	l
f0101c37	obj/kern/kernel.asm	/^    f0101c37:	48 bf a0 18 11 f0 00 	mov    $0xf01118a0,%rdi$/;"	l
f0101c3e	obj/kern/kernel.asm	/^    f0101c3e:	00 00 00 $/;"	l
f0101c41	obj/kern/kernel.asm	/^    f0101c41:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101c46	obj/kern/kernel.asm	/^    f0101c46:	48 bb eb 88 10 f0 00 	mov    $0xf01088eb,%rbx$/;"	l
f0101c4d	obj/kern/kernel.asm	/^    f0101c4d:	00 00 00 $/;"	l
f0101c50	obj/kern/kernel.asm	/^    f0101c50:	ff d3                	callq  *%rbx$/;"	l
f0101c52	obj/kern/kernel.asm	/^    f0101c52:	48 83 c4 18          	add    $0x18,%rsp$/;"	l
f0101c56	obj/kern/kernel.asm	/^    f0101c56:	5b                   	pop    %rbx$/;"	l
f0101c57	obj/kern/kernel.asm	/^    f0101c57:	c9                   	leaveq $/;"	l
f0101c58	obj/kern/kernel.asm	/^    f0101c58:	c3                   	retq   $/;"	l
f0101c59	obj/kern/kernel.asm	/^    f0101c59:	55                   	push   %rbp$/;"	l
f0101c5a	obj/kern/kernel.asm	/^    f0101c5a:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f0101c5d	obj/kern/kernel.asm	/^    f0101c5d:	48 83 ec 38          	sub    $0x38,%rsp$/;"	l
f0101c61	obj/kern/kernel.asm	/^    f0101c61:	89 7d cc             	mov    %edi,-0x34(%rbp)$/;"	l
f0101c64	obj/kern/kernel.asm	/^    f0101c64:	48 b8 40 62 a2 f1 00 	mov    $0xf1a26240,%rax$/;"	l
f0101c6b	obj/kern/kernel.asm	/^    f0101c6b:	00 00 00 $/;"	l
f0101c6e	obj/kern/kernel.asm	/^    f0101c6e:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0101c71	obj/kern/kernel.asm	/^    f0101c71:	48 85 c0             	test   %rax,%rax$/;"	l
f0101c74	obj/kern/kernel.asm	/^    f0101c74:	75 4b                	jne    fffffffff0101cc1 <end+0xfffffffefe660921>$/;"	l
f0101c76	obj/kern/kernel.asm	/^    f0101c76:	48 c7 45 e0 00 10 00 	movq   $0x1000,-0x20(%rbp)$/;"	l
f0101c7d	obj/kern/kernel.asm	/^    f0101c7d:	00 $/;"	l
f0101c7e	obj/kern/kernel.asm	/^    f0101c7e:	48 b8 a0 13 aa f1 00 	mov    $0xf1aa13a0,%rax$/;"	l
f0101c85	obj/kern/kernel.asm	/^    f0101c85:	00 00 00 $/;"	l
f0101c88	obj/kern/kernel.asm	/^    f0101c88:	48 83 e8 01          	sub    $0x1,%rax$/;"	l
f0101c8c	obj/kern/kernel.asm	/^    f0101c8c:	48 03 45 e0          	add    -0x20(%rbp),%rax$/;"	l
f0101c90	obj/kern/kernel.asm	/^    f0101c90:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
f0101c94	obj/kern/kernel.asm	/^    f0101c94:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f0101c98	obj/kern/kernel.asm	/^    f0101c98:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101c9d	obj/kern/kernel.asm	/^    f0101c9d:	48 f7 75 e0          	divq   -0x20(%rbp)$/;"	l
f0101ca1	obj/kern/kernel.asm	/^    f0101ca1:	48 89 d0             	mov    %rdx,%rax$/;"	l
f0101ca4	obj/kern/kernel.asm	/^    f0101ca4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
f0101ca8	obj/kern/kernel.asm	/^    f0101ca8:	48 89 d1             	mov    %rdx,%rcx$/;"	l
f0101cab	obj/kern/kernel.asm	/^    f0101cab:	48 29 c1             	sub    %rax,%rcx$/;"	l
f0101cae	obj/kern/kernel.asm	/^    f0101cae:	48 89 c8             	mov    %rcx,%rax$/;"	l
f0101cb1	obj/kern/kernel.asm	/^    f0101cb1:	48 89 c2             	mov    %rax,%rdx$/;"	l
f0101cb4	obj/kern/kernel.asm	/^    f0101cb4:	48 b8 40 62 a2 f1 00 	mov    $0xf1a26240,%rax$/;"	l
f0101cbb	obj/kern/kernel.asm	/^    f0101cbb:	00 00 00 $/;"	l
f0101cbe	obj/kern/kernel.asm	/^    f0101cbe:	48 89 10             	mov    %rdx,(%rax)$/;"	l
f0101cc1	obj/kern/kernel.asm	/^    f0101cc1:	48 b8 40 62 a2 f1 00 	mov    $0xf1a26240,%rax$/;"	l
f0101cc8	obj/kern/kernel.asm	/^    f0101cc8:	00 00 00 $/;"	l
f0101ccb	obj/kern/kernel.asm	/^    f0101ccb:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0101cce	obj/kern/kernel.asm	/^    f0101cce:	48 89 45 d0          	mov    %rax,-0x30(%rbp)$/;"	l
f0101cd2	obj/kern/kernel.asm	/^    f0101cd2:	48 c7 45 f0 00 10 00 	movq   $0x1000,-0x10(%rbp)$/;"	l
f0101cd9	obj/kern/kernel.asm	/^    f0101cd9:	00 $/;"	l
f0101cda	obj/kern/kernel.asm	/^    f0101cda:	48 b8 40 62 a2 f1 00 	mov    $0xf1a26240,%rax$/;"	l
f0101ce1	obj/kern/kernel.asm	/^    f0101ce1:	00 00 00 $/;"	l
f0101ce4	obj/kern/kernel.asm	/^    f0101ce4:	48 8b 10             	mov    (%rax),%rdx$/;"	l
f0101ce7	obj/kern/kernel.asm	/^    f0101ce7:	8b 45 cc             	mov    -0x34(%rbp),%eax$/;"	l
f0101cea	obj/kern/kernel.asm	/^    f0101cea:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f0101cee	obj/kern/kernel.asm	/^    f0101cee:	48 03 45 f0          	add    -0x10(%rbp),%rax$/;"	l
f0101cf2	obj/kern/kernel.asm	/^    f0101cf2:	48 83 e8 01          	sub    $0x1,%rax$/;"	l
f0101cf6	obj/kern/kernel.asm	/^    f0101cf6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
f0101cfa	obj/kern/kernel.asm	/^    f0101cfa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f0101cfe	obj/kern/kernel.asm	/^    f0101cfe:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101d03	obj/kern/kernel.asm	/^    f0101d03:	48 f7 75 f0          	divq   -0x10(%rbp)$/;"	l
f0101d07	obj/kern/kernel.asm	/^    f0101d07:	48 89 d0             	mov    %rdx,%rax$/;"	l
f0101d0a	obj/kern/kernel.asm	/^    f0101d0a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
f0101d0e	obj/kern/kernel.asm	/^    f0101d0e:	48 89 d1             	mov    %rdx,%rcx$/;"	l
f0101d11	obj/kern/kernel.asm	/^    f0101d11:	48 29 c1             	sub    %rax,%rcx$/;"	l
f0101d14	obj/kern/kernel.asm	/^    f0101d14:	48 89 c8             	mov    %rcx,%rax$/;"	l
f0101d17	obj/kern/kernel.asm	/^    f0101d17:	48 89 c2             	mov    %rax,%rdx$/;"	l
f0101d1a	obj/kern/kernel.asm	/^    f0101d1a:	48 b8 40 62 a2 f1 00 	mov    $0xf1a26240,%rax$/;"	l
f0101d21	obj/kern/kernel.asm	/^    f0101d21:	00 00 00 $/;"	l
f0101d24	obj/kern/kernel.asm	/^    f0101d24:	48 89 10             	mov    %rdx,(%rax)$/;"	l
f0101d27	obj/kern/kernel.asm	/^    f0101d27:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f0101d2b	obj/kern/kernel.asm	/^    f0101d2b:	c9                   	leaveq $/;"	l
f0101d2c	obj/kern/kernel.asm	/^    f0101d2c:	c3                   	retq   $/;"	l
f0101d2d	obj/kern/kernel.asm	/^    f0101d2d:	55                   	push   %rbp$/;"	l
f0101d2e	obj/kern/kernel.asm	/^    f0101d2e:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f0101d31	obj/kern/kernel.asm	/^    f0101d31:	53                   	push   %rbx$/;"	l
f0101d32	obj/kern/kernel.asm	/^    f0101d32:	48 81 ec d8 00 00 00 	sub    $0xd8,%rsp$/;"	l
f0101d39	obj/kern/kernel.asm	/^    f0101d39:	48 b8 5a 1b 10 f0 00 	mov    $0xf0101b5a,%rax$/;"	l
f0101d40	obj/kern/kernel.asm	/^    f0101d40:	00 00 00 $/;"	l
f0101d43	obj/kern/kernel.asm	/^    f0101d43:	ff d0                	callq  *%rax$/;"	l
f0101d45	obj/kern/kernel.asm	/^    f0101d45:	bf 00 10 00 00       	mov    $0x1000,%edi$/;"	l
f0101d4a	obj/kern/kernel.asm	/^    f0101d4a:	48 b8 59 1c 10 f0 00 	mov    $0xf0101c59,%rax$/;"	l
f0101d51	obj/kern/kernel.asm	/^    f0101d51:	00 00 00 $/;"	l
f0101d54	obj/kern/kernel.asm	/^    f0101d54:	ff d0                	callq  *%rax$/;"	l
f0101d56	obj/kern/kernel.asm	/^    f0101d56:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)$/;"	l
f0101d5d	obj/kern/kernel.asm	/^    f0101d5d:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax$/;"	l
f0101d64	obj/kern/kernel.asm	/^    f0101d64:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0101d69	obj/kern/kernel.asm	/^    f0101d69:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0101d6e	obj/kern/kernel.asm	/^    f0101d6e:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0101d71	obj/kern/kernel.asm	/^    f0101d71:	48 b8 42 ee 10 f0 00 	mov    $0xf010ee42,%rax$/;"	l
f0101d78	obj/kern/kernel.asm	/^    f0101d78:	00 00 00 $/;"	l
f0101d7b	obj/kern/kernel.asm	/^    f0101d7b:	ff d0                	callq  *%rax$/;"	l
f0101d7d	obj/kern/kernel.asm	/^    f0101d7d:	48 b8 60 77 a2 f1 00 	mov    $0xf1a27760,%rax$/;"	l
f0101d84	obj/kern/kernel.asm	/^    f0101d84:	00 00 00 $/;"	l
f0101d87	obj/kern/kernel.asm	/^    f0101d87:	48 8b 95 20 ff ff ff 	mov    -0xe0(%rbp),%rdx$/;"	l
f0101d8e	obj/kern/kernel.asm	/^    f0101d8e:	48 89 10             	mov    %rdx,(%rax)$/;"	l
f0101d91	obj/kern/kernel.asm	/^    f0101d91:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax$/;"	l
f0101d98	obj/kern/kernel.asm	/^    f0101d98:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)$/;"	l
f0101d9f	obj/kern/kernel.asm	/^    f0101d9f:	b8 ff ff ff ef       	mov    $0xefffffff,%eax$/;"	l
f0101da4	obj/kern/kernel.asm	/^    f0101da4:	48 39 85 58 ff ff ff 	cmp    %rax,-0xa8(%rbp)$/;"	l
f0101dab	obj/kern/kernel.asm	/^    f0101dab:	77 34                	ja     fffffffff0101de1 <end+0xfffffffefe660a41>$/;"	l
f0101dad	obj/kern/kernel.asm	/^    f0101dad:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax$/;"	l
f0101db4	obj/kern/kernel.asm	/^    f0101db4:	48 89 c1             	mov    %rax,%rcx$/;"	l
f0101db7	obj/kern/kernel.asm	/^    f0101db7:	48 ba e0 18 11 f0 00 	mov    $0xf01118e0,%rdx$/;"	l
f0101dbe	obj/kern/kernel.asm	/^    f0101dbe:	00 00 00 $/;"	l
f0101dc1	obj/kern/kernel.asm	/^    f0101dc1:	be 8a 00 00 00       	mov    $0x8a,%esi$/;"	l
f0101dc6	obj/kern/kernel.asm	/^    f0101dc6:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0101dcd	obj/kern/kernel.asm	/^    f0101dcd:	00 00 00 $/;"	l
f0101dd0	obj/kern/kernel.asm	/^    f0101dd0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101dd5	obj/kern/kernel.asm	/^    f0101dd5:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0101ddc	obj/kern/kernel.asm	/^    f0101ddc:	00 00 00 $/;"	l
f0101ddf	obj/kern/kernel.asm	/^    f0101ddf:	ff d3                	callq  *%rbx$/;"	l
f0101de1	obj/kern/kernel.asm	/^    f0101de1:	48 b8 00 00 00 10 ff 	mov    $0xffffffff10000000,%rax$/;"	l
f0101de8	obj/kern/kernel.asm	/^    f0101de8:	ff ff ff $/;"	l
f0101deb	obj/kern/kernel.asm	/^    f0101deb:	48 89 c2             	mov    %rax,%rdx$/;"	l
f0101dee	obj/kern/kernel.asm	/^    f0101dee:	48 03 95 58 ff ff ff 	add    -0xa8(%rbp),%rdx$/;"	l
f0101df5	obj/kern/kernel.asm	/^    f0101df5:	48 b8 58 77 a2 f1 00 	mov    $0xf1a27758,%rax$/;"	l
f0101dfc	obj/kern/kernel.asm	/^    f0101dfc:	00 00 00 $/;"	l
f0101dff	obj/kern/kernel.asm	/^    f0101dff:	48 89 10             	mov    %rdx,(%rax)$/;"	l
f0101e02	obj/kern/kernel.asm	/^    f0101e02:	48 b8 68 77 a2 f1 00 	mov    $0xf1a27768,%rax$/;"	l
f0101e09	obj/kern/kernel.asm	/^    f0101e09:	00 00 00 $/;"	l
f0101e0c	obj/kern/kernel.asm	/^    f0101e0c:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0101e0f	obj/kern/kernel.asm	/^    f0101e0f:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f0101e12	obj/kern/kernel.asm	/^    f0101e12:	89 c7                	mov    %eax,%edi$/;"	l
f0101e14	obj/kern/kernel.asm	/^    f0101e14:	48 b8 59 1c 10 f0 00 	mov    $0xf0101c59,%rax$/;"	l
f0101e1b	obj/kern/kernel.asm	/^    f0101e1b:	00 00 00 $/;"	l
f0101e1e	obj/kern/kernel.asm	/^    f0101e1e:	ff d0                	callq  *%rax$/;"	l
f0101e20	obj/kern/kernel.asm	/^    f0101e20:	48 89 c2             	mov    %rax,%rdx$/;"	l
f0101e23	obj/kern/kernel.asm	/^    f0101e23:	48 b8 70 77 a2 f1 00 	mov    $0xf1a27770,%rax$/;"	l
f0101e2a	obj/kern/kernel.asm	/^    f0101e2a:	00 00 00 $/;"	l
f0101e2d	obj/kern/kernel.asm	/^    f0101e2d:	48 89 10             	mov    %rdx,(%rax)$/;"	l
f0101e30	obj/kern/kernel.asm	/^    f0101e30:	bf 00 60 04 00       	mov    $0x46000,%edi$/;"	l
f0101e35	obj/kern/kernel.asm	/^    f0101e35:	48 b8 59 1c 10 f0 00 	mov    $0xf0101c59,%rax$/;"	l
f0101e3c	obj/kern/kernel.asm	/^    f0101e3c:	00 00 00 $/;"	l
f0101e3f	obj/kern/kernel.asm	/^    f0101e3f:	ff d0                	callq  *%rax$/;"	l
f0101e41	obj/kern/kernel.asm	/^    f0101e41:	48 89 c2             	mov    %rax,%rdx$/;"	l
f0101e44	obj/kern/kernel.asm	/^    f0101e44:	48 b8 50 62 a2 f1 00 	mov    $0xf1a26250,%rax$/;"	l
f0101e4b	obj/kern/kernel.asm	/^    f0101e4b:	00 00 00 $/;"	l
f0101e4e	obj/kern/kernel.asm	/^    f0101e4e:	48 89 10             	mov    %rdx,(%rax)$/;"	l
f0101e51	obj/kern/kernel.asm	/^    f0101e51:	48 b8 ba 24 10 f0 00 	mov    $0xf01024ba,%rax$/;"	l
f0101e58	obj/kern/kernel.asm	/^    f0101e58:	00 00 00 $/;"	l
f0101e5b	obj/kern/kernel.asm	/^    f0101e5b:	ff d0                	callq  *%rax$/;"	l
f0101e5d	obj/kern/kernel.asm	/^    f0101e5d:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
f0101e62	obj/kern/kernel.asm	/^    f0101e62:	48 b8 42 35 10 f0 00 	mov    $0xf0103542,%rax$/;"	l
f0101e69	obj/kern/kernel.asm	/^    f0101e69:	00 00 00 $/;"	l
f0101e6c	obj/kern/kernel.asm	/^    f0101e6c:	ff d0                	callq  *%rax$/;"	l
f0101e6e	obj/kern/kernel.asm	/^    f0101e6e:	48 b8 a6 3a 10 f0 00 	mov    $0xf0103aa6,%rax$/;"	l
f0101e75	obj/kern/kernel.asm	/^    f0101e75:	00 00 00 $/;"	l
f0101e78	obj/kern/kernel.asm	/^    f0101e78:	ff d0                	callq  *%rax$/;"	l
f0101e7a	obj/kern/kernel.asm	/^    f0101e7a:	48 b8 2a 4e 10 f0 00 	mov    $0xf0104e2a,%rax$/;"	l
f0101e81	obj/kern/kernel.asm	/^    f0101e81:	00 00 00 $/;"	l
f0101e84	obj/kern/kernel.asm	/^    f0101e84:	ff d0                	callq  *%rax$/;"	l
f0101e86	obj/kern/kernel.asm	/^    f0101e86:	48 b8 70 77 a2 f1 00 	mov    $0xf1a27770,%rax$/;"	l
f0101e8d	obj/kern/kernel.asm	/^    f0101e8d:	00 00 00 $/;"	l
f0101e90	obj/kern/kernel.asm	/^    f0101e90:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0101e93	obj/kern/kernel.asm	/^    f0101e93:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)$/;"	l
f0101e9a	obj/kern/kernel.asm	/^    f0101e9a:	b8 ff ff ff ef       	mov    $0xefffffff,%eax$/;"	l
f0101e9f	obj/kern/kernel.asm	/^    f0101e9f:	48 39 85 60 ff ff ff 	cmp    %rax,-0xa0(%rbp)$/;"	l
f0101ea6	obj/kern/kernel.asm	/^    f0101ea6:	77 34                	ja     fffffffff0101edc <end+0xfffffffefe660b3c>$/;"	l
f0101ea8	obj/kern/kernel.asm	/^    f0101ea8:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax$/;"	l
f0101eaf	obj/kern/kernel.asm	/^    f0101eaf:	48 89 c1             	mov    %rax,%rcx$/;"	l
f0101eb2	obj/kern/kernel.asm	/^    f0101eb2:	48 ba e0 18 11 f0 00 	mov    $0xf01118e0,%rdx$/;"	l
f0101eb9	obj/kern/kernel.asm	/^    f0101eb9:	00 00 00 $/;"	l
f0101ebc	obj/kern/kernel.asm	/^    f0101ebc:	be b5 00 00 00       	mov    $0xb5,%esi$/;"	l
f0101ec1	obj/kern/kernel.asm	/^    f0101ec1:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0101ec8	obj/kern/kernel.asm	/^    f0101ec8:	00 00 00 $/;"	l
f0101ecb	obj/kern/kernel.asm	/^    f0101ecb:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101ed0	obj/kern/kernel.asm	/^    f0101ed0:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0101ed7	obj/kern/kernel.asm	/^    f0101ed7:	00 00 00 $/;"	l
f0101eda	obj/kern/kernel.asm	/^    f0101eda:	ff d3                	callq  *%rbx$/;"	l
f0101edc	obj/kern/kernel.asm	/^    f0101edc:	48 b8 00 00 00 10 ff 	mov    $0xffffffff10000000,%rax$/;"	l
f0101ee3	obj/kern/kernel.asm	/^    f0101ee3:	ff ff ff $/;"	l
f0101ee6	obj/kern/kernel.asm	/^    f0101ee6:	48 89 c1             	mov    %rax,%rcx$/;"	l
f0101ee9	obj/kern/kernel.asm	/^    f0101ee9:	48 03 8d 60 ff ff ff 	add    -0xa0(%rbp),%rcx$/;"	l
f0101ef0	obj/kern/kernel.asm	/^    f0101ef0:	48 c7 85 68 ff ff ff 	movq   $0x1000,-0x98(%rbp)$/;"	l
f0101ef7	obj/kern/kernel.asm	/^    f0101ef7:	00 10 00 00 $/;"	l
f0101efb	obj/kern/kernel.asm	/^    f0101efb:	48 b8 68 77 a2 f1 00 	mov    $0xf1a27768,%rax$/;"	l
f0101f02	obj/kern/kernel.asm	/^    f0101f02:	00 00 00 $/;"	l
f0101f05	obj/kern/kernel.asm	/^    f0101f05:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0101f08	obj/kern/kernel.asm	/^    f0101f08:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
f0101f0c	obj/kern/kernel.asm	/^    f0101f0c:	48 03 85 68 ff ff ff 	add    -0x98(%rbp),%rax$/;"	l
f0101f13	obj/kern/kernel.asm	/^    f0101f13:	48 83 e8 01          	sub    $0x1,%rax$/;"	l
f0101f17	obj/kern/kernel.asm	/^    f0101f17:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)$/;"	l
f0101f1e	obj/kern/kernel.asm	/^    f0101f1e:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax$/;"	l
f0101f25	obj/kern/kernel.asm	/^    f0101f25:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0101f2a	obj/kern/kernel.asm	/^    f0101f2a:	48 f7 b5 68 ff ff ff 	divq   -0x98(%rbp)$/;"	l
f0101f31	obj/kern/kernel.asm	/^    f0101f31:	48 89 d0             	mov    %rdx,%rax$/;"	l
f0101f34	obj/kern/kernel.asm	/^    f0101f34:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx$/;"	l
f0101f3b	obj/kern/kernel.asm	/^    f0101f3b:	48 89 d3             	mov    %rdx,%rbx$/;"	l
f0101f3e	obj/kern/kernel.asm	/^    f0101f3e:	48 29 c3             	sub    %rax,%rbx$/;"	l
f0101f41	obj/kern/kernel.asm	/^    f0101f41:	48 89 d8             	mov    %rbx,%rax$/;"	l
f0101f44	obj/kern/kernel.asm	/^    f0101f44:	48 89 c2             	mov    %rax,%rdx$/;"	l
f0101f47	obj/kern/kernel.asm	/^    f0101f47:	48 b8 60 77 a2 f1 00 	mov    $0xf1a27760,%rax$/;"	l
f0101f4e	obj/kern/kernel.asm	/^    f0101f4e:	00 00 00 $/;"	l
f0101f51	obj/kern/kernel.asm	/^    f0101f51:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0101f54	obj/kern/kernel.asm	/^    f0101f54:	41 b8 05 00 00 00    	mov    $0x5,%r8d$/;"	l
f0101f5a	obj/kern/kernel.asm	/^    f0101f5a:	be 00 00 a0 ef       	mov    $0xefa00000,%esi$/;"	l
f0101f5f	obj/kern/kernel.asm	/^    f0101f5f:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0101f62	obj/kern/kernel.asm	/^    f0101f62:	48 b8 ee 2e 10 f0 00 	mov    $0xf0102eee,%rax$/;"	l
f0101f69	obj/kern/kernel.asm	/^    f0101f69:	00 00 00 $/;"	l
f0101f6c	obj/kern/kernel.asm	/^    f0101f6c:	ff d0                	callq  *%rax$/;"	l
f0101f6e	obj/kern/kernel.asm	/^    f0101f6e:	48 b8 70 77 a2 f1 00 	mov    $0xf1a27770,%rax$/;"	l
f0101f75	obj/kern/kernel.asm	/^    f0101f75:	00 00 00 $/;"	l
f0101f78	obj/kern/kernel.asm	/^    f0101f78:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0101f7b	obj/kern/kernel.asm	/^    f0101f7b:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)$/;"	l
f0101f82	obj/kern/kernel.asm	/^    f0101f82:	b8 ff ff ff ef       	mov    $0xefffffff,%eax$/;"	l
f0101f87	obj/kern/kernel.asm	/^    f0101f87:	48 39 85 78 ff ff ff 	cmp    %rax,-0x88(%rbp)$/;"	l
f0101f8e	obj/kern/kernel.asm	/^    f0101f8e:	77 34                	ja     fffffffff0101fc4 <end+0xfffffffefe660c24>$/;"	l
f0101f90	obj/kern/kernel.asm	/^    f0101f90:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax$/;"	l
f0101f97	obj/kern/kernel.asm	/^    f0101f97:	48 89 c1             	mov    %rax,%rcx$/;"	l
f0101f9a	obj/kern/kernel.asm	/^    f0101f9a:	48 ba e0 18 11 f0 00 	mov    $0xf01118e0,%rdx$/;"	l
f0101fa1	obj/kern/kernel.asm	/^    f0101fa1:	00 00 00 $/;"	l
f0101fa4	obj/kern/kernel.asm	/^    f0101fa4:	be b6 00 00 00       	mov    $0xb6,%esi$/;"	l
f0101fa9	obj/kern/kernel.asm	/^    f0101fa9:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0101fb0	obj/kern/kernel.asm	/^    f0101fb0:	00 00 00 $/;"	l
f0101fb3	obj/kern/kernel.asm	/^    f0101fb3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0101fb8	obj/kern/kernel.asm	/^    f0101fb8:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0101fbf	obj/kern/kernel.asm	/^    f0101fbf:	00 00 00 $/;"	l
f0101fc2	obj/kern/kernel.asm	/^    f0101fc2:	ff d3                	callq  *%rbx$/;"	l
f0101fc4	obj/kern/kernel.asm	/^    f0101fc4:	48 b8 00 00 00 10 ff 	mov    $0xffffffff10000000,%rax$/;"	l
f0101fcb	obj/kern/kernel.asm	/^    f0101fcb:	ff ff ff $/;"	l
f0101fce	obj/kern/kernel.asm	/^    f0101fce:	48 89 c1             	mov    %rax,%rcx$/;"	l
f0101fd1	obj/kern/kernel.asm	/^    f0101fd1:	48 03 8d 78 ff ff ff 	add    -0x88(%rbp),%rcx$/;"	l
f0101fd8	obj/kern/kernel.asm	/^    f0101fd8:	48 c7 45 80 00 10 00 	movq   $0x1000,-0x80(%rbp)$/;"	l
f0101fdf	obj/kern/kernel.asm	/^    f0101fdf:	00 $/;"	l
f0101fe0	obj/kern/kernel.asm	/^    f0101fe0:	48 b8 68 77 a2 f1 00 	mov    $0xf1a27768,%rax$/;"	l
f0101fe7	obj/kern/kernel.asm	/^    f0101fe7:	00 00 00 $/;"	l
f0101fea	obj/kern/kernel.asm	/^    f0101fea:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0101fed	obj/kern/kernel.asm	/^    f0101fed:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
f0101ff1	obj/kern/kernel.asm	/^    f0101ff1:	48 03 45 80          	add    -0x80(%rbp),%rax$/;"	l
f0101ff5	obj/kern/kernel.asm	/^    f0101ff5:	48 83 e8 01          	sub    $0x1,%rax$/;"	l
f0101ff9	obj/kern/kernel.asm	/^    f0101ff9:	48 89 45 88          	mov    %rax,-0x78(%rbp)$/;"	l
f0101ffd	obj/kern/kernel.asm	/^    f0101ffd:	48 8b 45 88          	mov    -0x78(%rbp),%rax$/;"	l
f0102001	obj/kern/kernel.asm	/^    f0102001:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0102006	obj/kern/kernel.asm	/^    f0102006:	48 f7 75 80          	divq   -0x80(%rbp)$/;"	l
f010200a	obj/kern/kernel.asm	/^    f010200a:	48 89 d0             	mov    %rdx,%rax$/;"	l
f010200d	obj/kern/kernel.asm	/^    f010200d:	48 8b 55 88          	mov    -0x78(%rbp),%rdx$/;"	l
f0102011	obj/kern/kernel.asm	/^    f0102011:	48 89 d3             	mov    %rdx,%rbx$/;"	l
f0102014	obj/kern/kernel.asm	/^    f0102014:	48 29 c3             	sub    %rax,%rbx$/;"	l
f0102017	obj/kern/kernel.asm	/^    f0102017:	48 89 d8             	mov    %rbx,%rax$/;"	l
f010201a	obj/kern/kernel.asm	/^    f010201a:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010201d	obj/kern/kernel.asm	/^    f010201d:	48 b8 70 77 a2 f1 00 	mov    $0xf1a27770,%rax$/;"	l
f0102024	obj/kern/kernel.asm	/^    f0102024:	00 00 00 $/;"	l
f0102027	obj/kern/kernel.asm	/^    f0102027:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010202a	obj/kern/kernel.asm	/^    f010202a:	48 89 c3             	mov    %rax,%rbx$/;"	l
f010202d	obj/kern/kernel.asm	/^    f010202d:	48 b8 60 77 a2 f1 00 	mov    $0xf1a27760,%rax$/;"	l
f0102034	obj/kern/kernel.asm	/^    f0102034:	00 00 00 $/;"	l
f0102037	obj/kern/kernel.asm	/^    f0102037:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010203a	obj/kern/kernel.asm	/^    f010203a:	41 b8 03 00 00 00    	mov    $0x3,%r8d$/;"	l
f0102040	obj/kern/kernel.asm	/^    f0102040:	48 89 de             	mov    %rbx,%rsi$/;"	l
f0102043	obj/kern/kernel.asm	/^    f0102043:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0102046	obj/kern/kernel.asm	/^    f0102046:	48 b8 ee 2e 10 f0 00 	mov    $0xf0102eee,%rax$/;"	l
f010204d	obj/kern/kernel.asm	/^    f010204d:	00 00 00 $/;"	l
f0102050	obj/kern/kernel.asm	/^    f0102050:	ff d0                	callq  *%rax$/;"	l
f0102052	obj/kern/kernel.asm	/^    f0102052:	48 b8 50 62 a2 f1 00 	mov    $0xf1a26250,%rax$/;"	l
f0102059	obj/kern/kernel.asm	/^    f0102059:	00 00 00 $/;"	l
f010205c	obj/kern/kernel.asm	/^    f010205c:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010205f	obj/kern/kernel.asm	/^    f010205f:	48 89 45 90          	mov    %rax,-0x70(%rbp)$/;"	l
f0102063	obj/kern/kernel.asm	/^    f0102063:	b8 ff ff ff ef       	mov    $0xefffffff,%eax$/;"	l
f0102068	obj/kern/kernel.asm	/^    f0102068:	48 39 45 90          	cmp    %rax,-0x70(%rbp)$/;"	l
f010206c	obj/kern/kernel.asm	/^    f010206c:	77 31                	ja     fffffffff010209f <end+0xfffffffefe660cff>$/;"	l
f010206e	obj/kern/kernel.asm	/^    f010206e:	48 8b 45 90          	mov    -0x70(%rbp),%rax$/;"	l
f0102072	obj/kern/kernel.asm	/^    f0102072:	48 89 c1             	mov    %rax,%rcx$/;"	l
f0102075	obj/kern/kernel.asm	/^    f0102075:	48 ba e0 18 11 f0 00 	mov    $0xf01118e0,%rdx$/;"	l
f010207c	obj/kern/kernel.asm	/^    f010207c:	00 00 00 $/;"	l
f010207f	obj/kern/kernel.asm	/^    f010207f:	be b8 00 00 00       	mov    $0xb8,%esi$/;"	l
f0102084	obj/kern/kernel.asm	/^    f0102084:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f010208b	obj/kern/kernel.asm	/^    f010208b:	00 00 00 $/;"	l
f010208e	obj/kern/kernel.asm	/^    f010208e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102093	obj/kern/kernel.asm	/^    f0102093:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f010209a	obj/kern/kernel.asm	/^    f010209a:	00 00 00 $/;"	l
f010209d	obj/kern/kernel.asm	/^    f010209d:	ff d3                	callq  *%rbx$/;"	l
f010209f	obj/kern/kernel.asm	/^    f010209f:	48 b8 00 00 00 10 ff 	mov    $0xffffffff10000000,%rax$/;"	l
f01020a6	obj/kern/kernel.asm	/^    f01020a6:	ff ff ff $/;"	l
f01020a9	obj/kern/kernel.asm	/^    f01020a9:	48 89 c1             	mov    %rax,%rcx$/;"	l
f01020ac	obj/kern/kernel.asm	/^    f01020ac:	48 03 4d 90          	add    -0x70(%rbp),%rcx$/;"	l
f01020b0	obj/kern/kernel.asm	/^    f01020b0:	48 c7 45 98 00 10 00 	movq   $0x1000,-0x68(%rbp)$/;"	l
f01020b7	obj/kern/kernel.asm	/^    f01020b7:	00 $/;"	l
f01020b8	obj/kern/kernel.asm	/^    f01020b8:	48 8b 45 98          	mov    -0x68(%rbp),%rax$/;"	l
f01020bc	obj/kern/kernel.asm	/^    f01020bc:	48 05 ff 5f 04 00    	add    $0x45fff,%rax$/;"	l
f01020c2	obj/kern/kernel.asm	/^    f01020c2:	48 89 45 a0          	mov    %rax,-0x60(%rbp)$/;"	l
f01020c6	obj/kern/kernel.asm	/^    f01020c6:	48 8b 45 a0          	mov    -0x60(%rbp),%rax$/;"	l
f01020ca	obj/kern/kernel.asm	/^    f01020ca:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01020cf	obj/kern/kernel.asm	/^    f01020cf:	48 f7 75 98          	divq   -0x68(%rbp)$/;"	l
f01020d3	obj/kern/kernel.asm	/^    f01020d3:	48 89 d0             	mov    %rdx,%rax$/;"	l
f01020d6	obj/kern/kernel.asm	/^    f01020d6:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx$/;"	l
f01020da	obj/kern/kernel.asm	/^    f01020da:	48 89 d3             	mov    %rdx,%rbx$/;"	l
f01020dd	obj/kern/kernel.asm	/^    f01020dd:	48 29 c3             	sub    %rax,%rbx$/;"	l
f01020e0	obj/kern/kernel.asm	/^    f01020e0:	48 89 d8             	mov    %rbx,%rax$/;"	l
f01020e3	obj/kern/kernel.asm	/^    f01020e3:	48 89 c2             	mov    %rax,%rdx$/;"	l
f01020e6	obj/kern/kernel.asm	/^    f01020e6:	48 b8 60 77 a2 f1 00 	mov    $0xf1a27760,%rax$/;"	l
f01020ed	obj/kern/kernel.asm	/^    f01020ed:	00 00 00 $/;"	l
f01020f0	obj/kern/kernel.asm	/^    f01020f0:	48 8b 00             	mov    (%rax),%rax$/;"	l
f01020f3	obj/kern/kernel.asm	/^    f01020f3:	41 b8 05 00 00 00    	mov    $0x5,%r8d$/;"	l
f01020f9	obj/kern/kernel.asm	/^    f01020f9:	be 00 00 80 ef       	mov    $0xef800000,%esi$/;"	l
f01020fe	obj/kern/kernel.asm	/^    f01020fe:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0102101	obj/kern/kernel.asm	/^    f0102101:	48 b8 ee 2e 10 f0 00 	mov    $0xf0102eee,%rax$/;"	l
f0102108	obj/kern/kernel.asm	/^    f0102108:	00 00 00 $/;"	l
f010210b	obj/kern/kernel.asm	/^    f010210b:	ff d0                	callq  *%rax$/;"	l
f010210d	obj/kern/kernel.asm	/^    f010210d:	48 b8 50 62 a2 f1 00 	mov    $0xf1a26250,%rax$/;"	l
f0102114	obj/kern/kernel.asm	/^    f0102114:	00 00 00 $/;"	l
f0102117	obj/kern/kernel.asm	/^    f0102117:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010211a	obj/kern/kernel.asm	/^    f010211a:	48 89 45 a8          	mov    %rax,-0x58(%rbp)$/;"	l
f010211e	obj/kern/kernel.asm	/^    f010211e:	b8 ff ff ff ef       	mov    $0xefffffff,%eax$/;"	l
f0102123	obj/kern/kernel.asm	/^    f0102123:	48 39 45 a8          	cmp    %rax,-0x58(%rbp)$/;"	l
f0102127	obj/kern/kernel.asm	/^    f0102127:	77 31                	ja     fffffffff010215a <end+0xfffffffefe660dba>$/;"	l
f0102129	obj/kern/kernel.asm	/^    f0102129:	48 8b 45 a8          	mov    -0x58(%rbp),%rax$/;"	l
f010212d	obj/kern/kernel.asm	/^    f010212d:	48 89 c1             	mov    %rax,%rcx$/;"	l
f0102130	obj/kern/kernel.asm	/^    f0102130:	48 ba e0 18 11 f0 00 	mov    $0xf01118e0,%rdx$/;"	l
f0102137	obj/kern/kernel.asm	/^    f0102137:	00 00 00 $/;"	l
f010213a	obj/kern/kernel.asm	/^    f010213a:	be b9 00 00 00       	mov    $0xb9,%esi$/;"	l
f010213f	obj/kern/kernel.asm	/^    f010213f:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0102146	obj/kern/kernel.asm	/^    f0102146:	00 00 00 $/;"	l
f0102149	obj/kern/kernel.asm	/^    f0102149:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010214e	obj/kern/kernel.asm	/^    f010214e:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0102155	obj/kern/kernel.asm	/^    f0102155:	00 00 00 $/;"	l
f0102158	obj/kern/kernel.asm	/^    f0102158:	ff d3                	callq  *%rbx$/;"	l
f010215a	obj/kern/kernel.asm	/^    f010215a:	48 b8 00 00 00 10 ff 	mov    $0xffffffff10000000,%rax$/;"	l
f0102161	obj/kern/kernel.asm	/^    f0102161:	ff ff ff $/;"	l
f0102164	obj/kern/kernel.asm	/^    f0102164:	48 89 c1             	mov    %rax,%rcx$/;"	l
f0102167	obj/kern/kernel.asm	/^    f0102167:	48 03 4d a8          	add    -0x58(%rbp),%rcx$/;"	l
f010216b	obj/kern/kernel.asm	/^    f010216b:	48 c7 45 b0 00 10 00 	movq   $0x1000,-0x50(%rbp)$/;"	l
f0102172	obj/kern/kernel.asm	/^    f0102172:	00 $/;"	l
f0102173	obj/kern/kernel.asm	/^    f0102173:	48 8b 45 b0          	mov    -0x50(%rbp),%rax$/;"	l
f0102177	obj/kern/kernel.asm	/^    f0102177:	48 05 ff 5f 04 00    	add    $0x45fff,%rax$/;"	l
f010217d	obj/kern/kernel.asm	/^    f010217d:	48 89 45 b8          	mov    %rax,-0x48(%rbp)$/;"	l
f0102181	obj/kern/kernel.asm	/^    f0102181:	48 8b 45 b8          	mov    -0x48(%rbp),%rax$/;"	l
f0102185	obj/kern/kernel.asm	/^    f0102185:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010218a	obj/kern/kernel.asm	/^    f010218a:	48 f7 75 b0          	divq   -0x50(%rbp)$/;"	l
f010218e	obj/kern/kernel.asm	/^    f010218e:	48 89 d0             	mov    %rdx,%rax$/;"	l
f0102191	obj/kern/kernel.asm	/^    f0102191:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx$/;"	l
f0102195	obj/kern/kernel.asm	/^    f0102195:	48 89 d3             	mov    %rdx,%rbx$/;"	l
f0102198	obj/kern/kernel.asm	/^    f0102198:	48 29 c3             	sub    %rax,%rbx$/;"	l
f010219b	obj/kern/kernel.asm	/^    f010219b:	48 89 d8             	mov    %rbx,%rax$/;"	l
f010219e	obj/kern/kernel.asm	/^    f010219e:	48 89 c2             	mov    %rax,%rdx$/;"	l
f01021a1	obj/kern/kernel.asm	/^    f01021a1:	48 b8 50 62 a2 f1 00 	mov    $0xf1a26250,%rax$/;"	l
f01021a8	obj/kern/kernel.asm	/^    f01021a8:	00 00 00 $/;"	l
f01021ab	obj/kern/kernel.asm	/^    f01021ab:	48 8b 00             	mov    (%rax),%rax$/;"	l
f01021ae	obj/kern/kernel.asm	/^    f01021ae:	48 89 c3             	mov    %rax,%rbx$/;"	l
f01021b1	obj/kern/kernel.asm	/^    f01021b1:	48 b8 60 77 a2 f1 00 	mov    $0xf1a27760,%rax$/;"	l
f01021b8	obj/kern/kernel.asm	/^    f01021b8:	00 00 00 $/;"	l
f01021bb	obj/kern/kernel.asm	/^    f01021bb:	48 8b 00             	mov    (%rax),%rax$/;"	l
f01021be	obj/kern/kernel.asm	/^    f01021be:	41 b8 03 00 00 00    	mov    $0x3,%r8d$/;"	l
f01021c4	obj/kern/kernel.asm	/^    f01021c4:	48 89 de             	mov    %rbx,%rsi$/;"	l
f01021c7	obj/kern/kernel.asm	/^    f01021c7:	48 89 c7             	mov    %rax,%rdi$/;"	l
f01021ca	obj/kern/kernel.asm	/^    f01021ca:	48 b8 ee 2e 10 f0 00 	mov    $0xf0102eee,%rax$/;"	l
f01021d1	obj/kern/kernel.asm	/^    f01021d1:	00 00 00 $/;"	l
f01021d4	obj/kern/kernel.asm	/^    f01021d4:	ff d0                	callq  *%rax$/;"	l
f01021d6	obj/kern/kernel.asm	/^    f01021d6:	48 b8 00 80 12 f0 00 	mov    $0xf0128000,%rax$/;"	l
f01021dd	obj/kern/kernel.asm	/^    f01021dd:	00 00 00 $/;"	l
f01021e0	obj/kern/kernel.asm	/^    f01021e0:	48 89 45 c0          	mov    %rax,-0x40(%rbp)$/;"	l
f01021e4	obj/kern/kernel.asm	/^    f01021e4:	b8 ff ff ff ef       	mov    $0xefffffff,%eax$/;"	l
f01021e9	obj/kern/kernel.asm	/^    f01021e9:	48 39 45 c0          	cmp    %rax,-0x40(%rbp)$/;"	l
f01021ed	obj/kern/kernel.asm	/^    f01021ed:	77 31                	ja     fffffffff0102220 <end+0xfffffffefe660e80>$/;"	l
f01021ef	obj/kern/kernel.asm	/^    f01021ef:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
f01021f3	obj/kern/kernel.asm	/^    f01021f3:	48 89 c1             	mov    %rax,%rcx$/;"	l
f01021f6	obj/kern/kernel.asm	/^    f01021f6:	48 ba e0 18 11 f0 00 	mov    $0xf01118e0,%rdx$/;"	l
f01021fd	obj/kern/kernel.asm	/^    f01021fd:	00 00 00 $/;"	l
f0102200	obj/kern/kernel.asm	/^    f0102200:	be c6 00 00 00       	mov    $0xc6,%esi$/;"	l
f0102205	obj/kern/kernel.asm	/^    f0102205:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f010220c	obj/kern/kernel.asm	/^    f010220c:	00 00 00 $/;"	l
f010220f	obj/kern/kernel.asm	/^    f010220f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102214	obj/kern/kernel.asm	/^    f0102214:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f010221b	obj/kern/kernel.asm	/^    f010221b:	00 00 00 $/;"	l
f010221e	obj/kern/kernel.asm	/^    f010221e:	ff d3                	callq  *%rbx$/;"	l
f0102220	obj/kern/kernel.asm	/^    f0102220:	48 b8 00 00 00 10 ff 	mov    $0xffffffff10000000,%rax$/;"	l
f0102227	obj/kern/kernel.asm	/^    f0102227:	ff ff ff $/;"	l
f010222a	obj/kern/kernel.asm	/^    f010222a:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010222d	obj/kern/kernel.asm	/^    f010222d:	48 03 55 c0          	add    -0x40(%rbp),%rdx$/;"	l
f0102231	obj/kern/kernel.asm	/^    f0102231:	48 b8 60 77 a2 f1 00 	mov    $0xf1a27760,%rax$/;"	l
f0102238	obj/kern/kernel.asm	/^    f0102238:	00 00 00 $/;"	l
f010223b	obj/kern/kernel.asm	/^    f010223b:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010223e	obj/kern/kernel.asm	/^    f010223e:	41 b8 03 00 00 00    	mov    $0x3,%r8d$/;"	l
f0102244	obj/kern/kernel.asm	/^    f0102244:	48 89 d1             	mov    %rdx,%rcx$/;"	l
f0102247	obj/kern/kernel.asm	/^    f0102247:	ba 00 80 00 00       	mov    $0x8000,%edx$/;"	l
f010224c	obj/kern/kernel.asm	/^    f010224c:	be 00 80 ff ef       	mov    $0xefff8000,%esi$/;"	l
f0102251	obj/kern/kernel.asm	/^    f0102251:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0102254	obj/kern/kernel.asm	/^    f0102254:	48 b8 ee 2e 10 f0 00 	mov    $0xf0102eee,%rax$/;"	l
f010225b	obj/kern/kernel.asm	/^    f010225b:	00 00 00 $/;"	l
f010225e	obj/kern/kernel.asm	/^    f010225e:	ff d0                	callq  *%rax$/;"	l
f0102260	obj/kern/kernel.asm	/^    f0102260:	48 b8 60 77 a2 f1 00 	mov    $0xf1a27760,%rax$/;"	l
f0102267	obj/kern/kernel.asm	/^    f0102267:	00 00 00 $/;"	l
f010226a	obj/kern/kernel.asm	/^    f010226a:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010226d	obj/kern/kernel.asm	/^    f010226d:	41 b8 03 00 00 00    	mov    $0x3,%r8d$/;"	l
f0102273	obj/kern/kernel.asm	/^    f0102273:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0102278	obj/kern/kernel.asm	/^    f0102278:	ba 00 00 00 10       	mov    $0x10000000,%edx$/;"	l
f010227d	obj/kern/kernel.asm	/^    f010227d:	be 00 00 00 f0       	mov    $0xf0000000,%esi$/;"	l
f0102282	obj/kern/kernel.asm	/^    f0102282:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0102285	obj/kern/kernel.asm	/^    f0102285:	48 b8 ee 2e 10 f0 00 	mov    $0xf0102eee,%rax$/;"	l
f010228c	obj/kern/kernel.asm	/^    f010228c:	00 00 00 $/;"	l
f010228f	obj/kern/kernel.asm	/^    f010228f:	ff d0                	callq  *%rax$/;"	l
f0102291	obj/kern/kernel.asm	/^    f0102291:	48 b8 da 23 10 f0 00 	mov    $0xf01023da,%rax$/;"	l
f0102298	obj/kern/kernel.asm	/^    f0102298:	00 00 00 $/;"	l
f010229b	obj/kern/kernel.asm	/^    f010229b:	ff d0                	callq  *%rax$/;"	l
f010229d	obj/kern/kernel.asm	/^    f010229d:	48 b8 60 77 a2 f1 00 	mov    $0xf1a27760,%rax$/;"	l
f01022a4	obj/kern/kernel.asm	/^    f01022a4:	00 00 00 $/;"	l
f01022a7	obj/kern/kernel.asm	/^    f01022a7:	48 8b 00             	mov    (%rax),%rax$/;"	l
f01022aa	obj/kern/kernel.asm	/^    f01022aa:	48 89 c7             	mov    %rax,%rdi$/;"	l
f01022ad	obj/kern/kernel.asm	/^    f01022ad:	48 b8 7b 44 10 f0 00 	mov    $0xf010447b,%rax$/;"	l
f01022b4	obj/kern/kernel.asm	/^    f01022b4:	00 00 00 $/;"	l
f01022b7	obj/kern/kernel.asm	/^    f01022b7:	ff d0                	callq  *%rax$/;"	l
f01022b9	obj/kern/kernel.asm	/^    f01022b9:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax$/;"	l
f01022c0	obj/kern/kernel.asm	/^    f01022c0:	48 8b 00             	mov    (%rax),%rax$/;"	l
f01022c3	obj/kern/kernel.asm	/^    f01022c3:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
f01022c9	obj/kern/kernel.asm	/^    f01022c9:	48 89 45 c8          	mov    %rax,-0x38(%rbp)$/;"	l
f01022cd	obj/kern/kernel.asm	/^    f01022cd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f01022d1	obj/kern/kernel.asm	/^    f01022d1:	48 c1 e8 0c          	shr    $0xc,%rax$/;"	l
f01022d5	obj/kern/kernel.asm	/^    f01022d5:	89 45 d4             	mov    %eax,-0x2c(%rbp)$/;"	l
f01022d8	obj/kern/kernel.asm	/^    f01022d8:	8b 55 d4             	mov    -0x2c(%rbp),%edx$/;"	l
f01022db	obj/kern/kernel.asm	/^    f01022db:	48 b8 68 77 a2 f1 00 	mov    $0xf1a27768,%rax$/;"	l
f01022e2	obj/kern/kernel.asm	/^    f01022e2:	00 00 00 $/;"	l
f01022e5	obj/kern/kernel.asm	/^    f01022e5:	48 8b 00             	mov    (%rax),%rax$/;"	l
f01022e8	obj/kern/kernel.asm	/^    f01022e8:	48 39 c2             	cmp    %rax,%rdx$/;"	l
f01022eb	obj/kern/kernel.asm	/^    f01022eb:	72 31                	jb     fffffffff010231e <end+0xfffffffefe660f7e>$/;"	l
f01022ed	obj/kern/kernel.asm	/^    f01022ed:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f01022f1	obj/kern/kernel.asm	/^    f01022f1:	48 89 c1             	mov    %rax,%rcx$/;"	l
f01022f4	obj/kern/kernel.asm	/^    f01022f4:	48 ba 78 18 11 f0 00 	mov    $0xf0111878,%rdx$/;"	l
f01022fb	obj/kern/kernel.asm	/^    f01022fb:	00 00 00 $/;"	l
f01022fe	obj/kern/kernel.asm	/^    f01022fe:	be da 00 00 00       	mov    $0xda,%esi$/;"	l
f0102303	obj/kern/kernel.asm	/^    f0102303:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f010230a	obj/kern/kernel.asm	/^    f010230a:	00 00 00 $/;"	l
f010230d	obj/kern/kernel.asm	/^    f010230d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102312	obj/kern/kernel.asm	/^    f0102312:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0102319	obj/kern/kernel.asm	/^    f0102319:	00 00 00 $/;"	l
f010231c	obj/kern/kernel.asm	/^    f010231c:	ff d3                	callq  *%rbx$/;"	l
f010231e	obj/kern/kernel.asm	/^    f010231e:	b8 00 00 00 f0       	mov    $0xf0000000,%eax$/;"	l
f0102323	obj/kern/kernel.asm	/^    f0102323:	48 03 45 c8          	add    -0x38(%rbp),%rax$/;"	l
f0102327	obj/kern/kernel.asm	/^    f0102327:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)$/;"	l
f010232e	obj/kern/kernel.asm	/^    f010232e:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax$/;"	l
f0102335	obj/kern/kernel.asm	/^    f0102335:	48 83 c0 18          	add    $0x18,%rax$/;"	l
f0102339	obj/kern/kernel.asm	/^    f0102339:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010233c	obj/kern/kernel.asm	/^    f010233c:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
f0102342	obj/kern/kernel.asm	/^    f0102342:	48 89 45 d8          	mov    %rax,-0x28(%rbp)$/;"	l
f0102346	obj/kern/kernel.asm	/^    f0102346:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f010234a	obj/kern/kernel.asm	/^    f010234a:	48 c1 e8 0c          	shr    $0xc,%rax$/;"	l
f010234e	obj/kern/kernel.asm	/^    f010234e:	89 45 e4             	mov    %eax,-0x1c(%rbp)$/;"	l
f0102351	obj/kern/kernel.asm	/^    f0102351:	8b 55 e4             	mov    -0x1c(%rbp),%edx$/;"	l
f0102354	obj/kern/kernel.asm	/^    f0102354:	48 b8 68 77 a2 f1 00 	mov    $0xf1a27768,%rax$/;"	l
f010235b	obj/kern/kernel.asm	/^    f010235b:	00 00 00 $/;"	l
f010235e	obj/kern/kernel.asm	/^    f010235e:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0102361	obj/kern/kernel.asm	/^    f0102361:	48 39 c2             	cmp    %rax,%rdx$/;"	l
f0102364	obj/kern/kernel.asm	/^    f0102364:	72 31                	jb     fffffffff0102397 <end+0xfffffffefe660ff7>$/;"	l
f0102366	obj/kern/kernel.asm	/^    f0102366:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f010236a	obj/kern/kernel.asm	/^    f010236a:	48 89 c1             	mov    %rax,%rcx$/;"	l
f010236d	obj/kern/kernel.asm	/^    f010236d:	48 ba 78 18 11 f0 00 	mov    $0xf0111878,%rdx$/;"	l
f0102374	obj/kern/kernel.asm	/^    f0102374:	00 00 00 $/;"	l
f0102377	obj/kern/kernel.asm	/^    f0102377:	be db 00 00 00       	mov    $0xdb,%esi$/;"	l
f010237c	obj/kern/kernel.asm	/^    f010237c:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0102383	obj/kern/kernel.asm	/^    f0102383:	00 00 00 $/;"	l
f0102386	obj/kern/kernel.asm	/^    f0102386:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010238b	obj/kern/kernel.asm	/^    f010238b:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0102392	obj/kern/kernel.asm	/^    f0102392:	00 00 00 $/;"	l
f0102395	obj/kern/kernel.asm	/^    f0102395:	ff d3                	callq  *%rbx$/;"	l
f0102397	obj/kern/kernel.asm	/^    f0102397:	b8 00 00 00 f0       	mov    $0xf0000000,%eax$/;"	l
f010239c	obj/kern/kernel.asm	/^    f010239c:	48 03 45 d8          	add    -0x28(%rbp),%rax$/;"	l
f01023a0	obj/kern/kernel.asm	/^    f01023a0:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)$/;"	l
f01023a7	obj/kern/kernel.asm	/^    f01023a7:	48 b8 58 77 a2 f1 00 	mov    $0xf1a27758,%rax$/;"	l
f01023ae	obj/kern/kernel.asm	/^    f01023ae:	00 00 00 $/;"	l
f01023b1	obj/kern/kernel.asm	/^    f01023b1:	48 8b 00             	mov    (%rax),%rax$/;"	l
f01023b4	obj/kern/kernel.asm	/^    f01023b4:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
f01023b8	obj/kern/kernel.asm	/^    f01023b8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f01023bc	obj/kern/kernel.asm	/^    f01023bc:	0f 22 d8             	mov    %rax,%cr3$/;"	l
f01023bf	obj/kern/kernel.asm	/^    f01023bf:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f01023c4	obj/kern/kernel.asm	/^    f01023c4:	48 b8 42 35 10 f0 00 	mov    $0xf0103542,%rax$/;"	l
f01023cb	obj/kern/kernel.asm	/^    f01023cb:	00 00 00 $/;"	l
f01023ce	obj/kern/kernel.asm	/^    f01023ce:	ff d0                	callq  *%rax$/;"	l
f01023d0	obj/kern/kernel.asm	/^    f01023d0:	48 81 c4 d8 00 00 00 	add    $0xd8,%rsp$/;"	l
f01023d7	obj/kern/kernel.asm	/^    f01023d7:	5b                   	pop    %rbx$/;"	l
f01023d8	obj/kern/kernel.asm	/^    f01023d8:	c9                   	leaveq $/;"	l
f01023d9	obj/kern/kernel.asm	/^    f01023d9:	c3                   	retq   $/;"	l
f01023da	obj/kern/kernel.asm	/^    f01023da:	55                   	push   %rbp$/;"	l
f01023db	obj/kern/kernel.asm	/^    f01023db:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f01023de	obj/kern/kernel.asm	/^    f01023de:	53                   	push   %rbx$/;"	l
f01023df	obj/kern/kernel.asm	/^    f01023df:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
f01023e3	obj/kern/kernel.asm	/^    f01023e3:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%rbp)$/;"	l
f01023ea	obj/kern/kernel.asm	/^    f01023ea:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%rbp)$/;"	l
f01023f1	obj/kern/kernel.asm	/^    f01023f1:	e9 b3 00 00 00       	jmpq   fffffffff01024a9 <end+0xfffffffefe661109>$/;"	l
f01023f6	obj/kern/kernel.asm	/^    f01023f6:	8b 45 e0             	mov    -0x20(%rbp),%eax$/;"	l
f01023f9	obj/kern/kernel.asm	/^    f01023f9:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f01023fc	obj/kern/kernel.asm	/^    f01023fc:	f7 d8                	neg    %eax$/;"	l
f01023fe	obj/kern/kernel.asm	/^    f01023fe:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f0102403	obj/kern/kernel.asm	/^    f0102403:	89 45 e4             	mov    %eax,-0x1c(%rbp)$/;"	l
f0102406	obj/kern/kernel.asm	/^    f0102406:	48 b8 00 90 a2 f1 00 	mov    $0xf1a29000,%rax$/;"	l
f010240d	obj/kern/kernel.asm	/^    f010240d:	00 00 00 $/;"	l
f0102410	obj/kern/kernel.asm	/^    f0102410:	8b 55 e0             	mov    -0x20(%rbp),%edx$/;"	l
f0102413	obj/kern/kernel.asm	/^    f0102413:	48 63 d2             	movslq %edx,%rdx$/;"	l
f0102416	obj/kern/kernel.asm	/^    f0102416:	48 c1 e2 0f          	shl    $0xf,%rdx$/;"	l
f010241a	obj/kern/kernel.asm	/^    f010241a:	48 01 d0             	add    %rdx,%rax$/;"	l
f010241d	obj/kern/kernel.asm	/^    f010241d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
f0102421	obj/kern/kernel.asm	/^    f0102421:	b8 ff ff ff ef       	mov    $0xefffffff,%eax$/;"	l
f0102426	obj/kern/kernel.asm	/^    f0102426:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)$/;"	l
f010242a	obj/kern/kernel.asm	/^    f010242a:	77 31                	ja     fffffffff010245d <end+0xfffffffefe6610bd>$/;"	l
f010242c	obj/kern/kernel.asm	/^    f010242c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f0102430	obj/kern/kernel.asm	/^    f0102430:	48 89 c1             	mov    %rax,%rcx$/;"	l
f0102433	obj/kern/kernel.asm	/^    f0102433:	48 ba e0 18 11 f0 00 	mov    $0xf01118e0,%rdx$/;"	l
f010243a	obj/kern/kernel.asm	/^    f010243a:	00 00 00 $/;"	l
f010243d	obj/kern/kernel.asm	/^    f010243d:	be fd 00 00 00       	mov    $0xfd,%esi$/;"	l
f0102442	obj/kern/kernel.asm	/^    f0102442:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0102449	obj/kern/kernel.asm	/^    f0102449:	00 00 00 $/;"	l
f010244c	obj/kern/kernel.asm	/^    f010244c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102451	obj/kern/kernel.asm	/^    f0102451:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0102458	obj/kern/kernel.asm	/^    f0102458:	00 00 00 $/;"	l
f010245b	obj/kern/kernel.asm	/^    f010245b:	ff d3                	callq  *%rbx$/;"	l
f010245d	obj/kern/kernel.asm	/^    f010245d:	48 b8 00 00 00 10 ff 	mov    $0xffffffff10000000,%rax$/;"	l
f0102464	obj/kern/kernel.asm	/^    f0102464:	ff ff ff $/;"	l
f0102467	obj/kern/kernel.asm	/^    f0102467:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010246a	obj/kern/kernel.asm	/^    f010246a:	48 03 55 e8          	add    -0x18(%rbp),%rdx$/;"	l
f010246e	obj/kern/kernel.asm	/^    f010246e:	8b 45 e4             	mov    -0x1c(%rbp),%eax$/;"	l
f0102471	obj/kern/kernel.asm	/^    f0102471:	2d 00 80 00 00       	sub    $0x8000,%eax$/;"	l
f0102476	obj/kern/kernel.asm	/^    f0102476:	89 c3                	mov    %eax,%ebx$/;"	l
f0102478	obj/kern/kernel.asm	/^    f0102478:	48 b8 60 77 a2 f1 00 	mov    $0xf1a27760,%rax$/;"	l
f010247f	obj/kern/kernel.asm	/^    f010247f:	00 00 00 $/;"	l
f0102482	obj/kern/kernel.asm	/^    f0102482:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0102485	obj/kern/kernel.asm	/^    f0102485:	41 b8 02 00 00 00    	mov    $0x2,%r8d$/;"	l
f010248b	obj/kern/kernel.asm	/^    f010248b:	48 89 d1             	mov    %rdx,%rcx$/;"	l
f010248e	obj/kern/kernel.asm	/^    f010248e:	ba 00 80 00 00       	mov    $0x8000,%edx$/;"	l
f0102493	obj/kern/kernel.asm	/^    f0102493:	48 89 de             	mov    %rbx,%rsi$/;"	l
f0102496	obj/kern/kernel.asm	/^    f0102496:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0102499	obj/kern/kernel.asm	/^    f0102499:	48 b8 ee 2e 10 f0 00 	mov    $0xf0102eee,%rax$/;"	l
f01024a0	obj/kern/kernel.asm	/^    f01024a0:	00 00 00 $/;"	l
f01024a3	obj/kern/kernel.asm	/^    f01024a3:	ff d0                	callq  *%rax$/;"	l
f01024a5	obj/kern/kernel.asm	/^    f01024a5:	83 45 e0 01          	addl   $0x1,-0x20(%rbp)$/;"	l
f01024a9	obj/kern/kernel.asm	/^    f01024a9:	83 7d e0 07          	cmpl   $0x7,-0x20(%rbp)$/;"	l
f01024ad	obj/kern/kernel.asm	/^    f01024ad:	0f 8e 43 ff ff ff    	jle    fffffffff01023f6 <end+0xfffffffefe661056>$/;"	l
f01024b3	obj/kern/kernel.asm	/^    f01024b3:	48 83 c4 18          	add    $0x18,%rsp$/;"	l
f01024b7	obj/kern/kernel.asm	/^    f01024b7:	5b                   	pop    %rbx$/;"	l
f01024b8	obj/kern/kernel.asm	/^    f01024b8:	c9                   	leaveq $/;"	l
f01024b9	obj/kern/kernel.asm	/^    f01024b9:	c3                   	retq   $/;"	l
f01024ba	obj/kern/kernel.asm	/^    f01024ba:	55                   	push   %rbp$/;"	l
f01024bb	obj/kern/kernel.asm	/^    f01024bb:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f01024be	obj/kern/kernel.asm	/^    f01024be:	53                   	push   %rbx$/;"	l
f01024bf	obj/kern/kernel.asm	/^    f01024bf:	48 83 ec 58          	sub    $0x58,%rsp$/;"	l
f01024c3	obj/kern/kernel.asm	/^    f01024c3:	c7 45 a4 00 00 00 00 	movl   $0x0,-0x5c(%rbp)$/;"	l
f01024ca	obj/kern/kernel.asm	/^    f01024ca:	c7 45 a8 ff 0f 00 00 	movl   $0xfff,-0x58(%rbp)$/;"	l
f01024d1	obj/kern/kernel.asm	/^    f01024d1:	c7 45 ac 00 00 10 00 	movl   $0x100000,-0x54(%rbp)$/;"	l
f01024d8	obj/kern/kernel.asm	/^    f01024d8:	48 b8 40 62 a2 f1 00 	mov    $0xf1a26240,%rax$/;"	l
f01024df	obj/kern/kernel.asm	/^    f01024df:	00 00 00 $/;"	l
f01024e2	obj/kern/kernel.asm	/^    f01024e2:	48 8b 00             	mov    (%rax),%rax$/;"	l
f01024e5	obj/kern/kernel.asm	/^    f01024e5:	48 89 45 c8          	mov    %rax,-0x38(%rbp)$/;"	l
f01024e9	obj/kern/kernel.asm	/^    f01024e9:	b8 ff ff ff ef       	mov    $0xefffffff,%eax$/;"	l
f01024ee	obj/kern/kernel.asm	/^    f01024ee:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)$/;"	l
f01024f2	obj/kern/kernel.asm	/^    f01024f2:	77 31                	ja     fffffffff0102525 <end+0xfffffffefe661185>$/;"	l
f01024f4	obj/kern/kernel.asm	/^    f01024f4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f01024f8	obj/kern/kernel.asm	/^    f01024f8:	48 89 c1             	mov    %rax,%rcx$/;"	l
f01024fb	obj/kern/kernel.asm	/^    f01024fb:	48 ba e0 18 11 f0 00 	mov    $0xf01118e0,%rdx$/;"	l
f0102502	obj/kern/kernel.asm	/^    f0102502:	00 00 00 $/;"	l
f0102505	obj/kern/kernel.asm	/^    f0102505:	be 34 01 00 00       	mov    $0x134,%esi$/;"	l
f010250a	obj/kern/kernel.asm	/^    f010250a:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0102511	obj/kern/kernel.asm	/^    f0102511:	00 00 00 $/;"	l
f0102514	obj/kern/kernel.asm	/^    f0102514:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102519	obj/kern/kernel.asm	/^    f0102519:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0102520	obj/kern/kernel.asm	/^    f0102520:	00 00 00 $/;"	l
f0102523	obj/kern/kernel.asm	/^    f0102523:	ff d3                	callq  *%rbx$/;"	l
f0102525	obj/kern/kernel.asm	/^    f0102525:	48 b8 00 00 00 10 ff 	mov    $0xffffffff10000000,%rax$/;"	l
f010252c	obj/kern/kernel.asm	/^    f010252c:	ff ff ff $/;"	l
f010252f	obj/kern/kernel.asm	/^    f010252f:	48 03 45 c8          	add    -0x38(%rbp),%rax$/;"	l
f0102533	obj/kern/kernel.asm	/^    f0102533:	89 45 b0             	mov    %eax,-0x50(%rbp)$/;"	l
f0102536	obj/kern/kernel.asm	/^    f0102536:	c7 45 b8 00 00 00 00 	movl   $0x0,-0x48(%rbp)$/;"	l
f010253d	obj/kern/kernel.asm	/^    f010253d:	c7 45 bc 00 00 00 00 	movl   $0x0,-0x44(%rbp)$/;"	l
f0102544	obj/kern/kernel.asm	/^    f0102544:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%rbp)$/;"	l
f010254b	obj/kern/kernel.asm	/^    f010254b:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%rbp)$/;"	l
f0102552	obj/kern/kernel.asm	/^    f0102552:	c7 45 b4 00 00 00 00 	movl   $0x0,-0x4c(%rbp)$/;"	l
f0102559	obj/kern/kernel.asm	/^    f0102559:	e9 7c 02 00 00       	jmpq   fffffffff01027da <end+0xfffffffefe66143a>$/;"	l
f010255e	obj/kern/kernel.asm	/^    f010255e:	48 b8 70 77 a2 f1 00 	mov    $0xf1a27770,%rax$/;"	l
f0102565	obj/kern/kernel.asm	/^    f0102565:	00 00 00 $/;"	l
f0102568	obj/kern/kernel.asm	/^    f0102568:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010256b	obj/kern/kernel.asm	/^    f010256b:	8b 55 b4             	mov    -0x4c(%rbp),%edx$/;"	l
f010256e	obj/kern/kernel.asm	/^    f010256e:	48 63 d2             	movslq %edx,%rdx$/;"	l
f0102571	obj/kern/kernel.asm	/^    f0102571:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f0102575	obj/kern/kernel.asm	/^    f0102575:	48 01 d0             	add    %rdx,%rax$/;"	l
f0102578	obj/kern/kernel.asm	/^    f0102578:	66 c7 40 08 00 00    	movw   $0x0,0x8(%rax)$/;"	l
f010257e	obj/kern/kernel.asm	/^    f010257e:	83 7d b4 00          	cmpl   $0x0,-0x4c(%rbp)$/;"	l
f0102582	obj/kern/kernel.asm	/^    f0102582:	0f 84 40 02 00 00    	je     fffffffff01027c8 <end+0xfffffffefe661428>$/;"	l
f0102588	obj/kern/kernel.asm	/^    f0102588:	81 7d a4 ff ff 09 00 	cmpl   $0x9ffff,-0x5c(%rbp)$/;"	l
f010258f	obj/kern/kernel.asm	/^    f010258f:	76 09                	jbe    fffffffff010259a <end+0xfffffffefe6611fa>$/;"	l
f0102591	obj/kern/kernel.asm	/^    f0102591:	81 7d a4 ff ff 0f 00 	cmpl   $0xfffff,-0x5c(%rbp)$/;"	l
f0102598	obj/kern/kernel.asm	/^    f0102598:	76 12                	jbe    fffffffff01025ac <end+0xfffffffefe66120c>$/;"	l
f010259a	obj/kern/kernel.asm	/^    f010259a:	81 7d a8 ff ff 09 00 	cmpl   $0x9ffff,-0x58(%rbp)$/;"	l
f01025a1	obj/kern/kernel.asm	/^    f01025a1:	76 12                	jbe    fffffffff01025b5 <end+0xfffffffefe661215>$/;"	l
f01025a3	obj/kern/kernel.asm	/^    f01025a3:	81 7d a8 ff ff 0f 00 	cmpl   $0xfffff,-0x58(%rbp)$/;"	l
f01025aa	obj/kern/kernel.asm	/^    f01025aa:	77 09                	ja     fffffffff01025b5 <end+0xfffffffefe661215>$/;"	l
f01025ac	obj/kern/kernel.asm	/^    f01025ac:	83 45 bc 01          	addl   $0x1,-0x44(%rbp)$/;"	l
f01025b0	obj/kern/kernel.asm	/^    f01025b0:	e9 13 02 00 00       	jmpq   fffffffff01027c8 <end+0xfffffffefe661428>$/;"	l
f01025b5	obj/kern/kernel.asm	/^    f01025b5:	8b 45 a4             	mov    -0x5c(%rbp),%eax$/;"	l
f01025b8	obj/kern/kernel.asm	/^    f01025b8:	3b 45 ac             	cmp    -0x54(%rbp),%eax$/;"	l
f01025bb	obj/kern/kernel.asm	/^    f01025bb:	72 08                	jb     fffffffff01025c5 <end+0xfffffffefe661225>$/;"	l
f01025bd	obj/kern/kernel.asm	/^    f01025bd:	8b 45 a4             	mov    -0x5c(%rbp),%eax$/;"	l
f01025c0	obj/kern/kernel.asm	/^    f01025c0:	3b 45 b0             	cmp    -0x50(%rbp),%eax$/;"	l
f01025c3	obj/kern/kernel.asm	/^    f01025c3:	72 10                	jb     fffffffff01025d5 <end+0xfffffffefe661235>$/;"	l
f01025c5	obj/kern/kernel.asm	/^    f01025c5:	8b 45 a8             	mov    -0x58(%rbp),%eax$/;"	l
f01025c8	obj/kern/kernel.asm	/^    f01025c8:	3b 45 ac             	cmp    -0x54(%rbp),%eax$/;"	l
f01025cb	obj/kern/kernel.asm	/^    f01025cb:	72 11                	jb     fffffffff01025de <end+0xfffffffefe66123e>$/;"	l
f01025cd	obj/kern/kernel.asm	/^    f01025cd:	8b 45 a8             	mov    -0x58(%rbp),%eax$/;"	l
f01025d0	obj/kern/kernel.asm	/^    f01025d0:	3b 45 b0             	cmp    -0x50(%rbp),%eax$/;"	l
f01025d3	obj/kern/kernel.asm	/^    f01025d3:	73 09                	jae    fffffffff01025de <end+0xfffffffefe66123e>$/;"	l
f01025d5	obj/kern/kernel.asm	/^    f01025d5:	83 45 c0 01          	addl   $0x1,-0x40(%rbp)$/;"	l
f01025d9	obj/kern/kernel.asm	/^    f01025d9:	e9 ea 01 00 00       	jmpq   fffffffff01027c8 <end+0xfffffffefe661428>$/;"	l
f01025de	obj/kern/kernel.asm	/^    f01025de:	8b 55 a4             	mov    -0x5c(%rbp),%edx$/;"	l
f01025e1	obj/kern/kernel.asm	/^    f01025e1:	c7 45 d0 00 80 00 f0 	movl   $0xf0008000,-0x30(%rbp)$/;"	l
f01025e8	obj/kern/kernel.asm	/^    f01025e8:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)$/;"	l
f01025ef	obj/kern/kernel.asm	/^    f01025ef:	b8 ff ff ff ef       	mov    $0xefffffff,%eax$/;"	l
f01025f4	obj/kern/kernel.asm	/^    f01025f4:	48 39 45 d0          	cmp    %rax,-0x30(%rbp)$/;"	l
f01025f8	obj/kern/kernel.asm	/^    f01025f8:	77 31                	ja     fffffffff010262b <end+0xfffffffefe66128b>$/;"	l
f01025fa	obj/kern/kernel.asm	/^    f01025fa:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f01025fe	obj/kern/kernel.asm	/^    f01025fe:	48 89 c1             	mov    %rax,%rcx$/;"	l
f0102601	obj/kern/kernel.asm	/^    f0102601:	48 ba e0 18 11 f0 00 	mov    $0xf01118e0,%rdx$/;"	l
f0102608	obj/kern/kernel.asm	/^    f0102608:	00 00 00 $/;"	l
f010260b	obj/kern/kernel.asm	/^    f010260b:	be 44 01 00 00       	mov    $0x144,%esi$/;"	l
f0102610	obj/kern/kernel.asm	/^    f0102610:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0102617	obj/kern/kernel.asm	/^    f0102617:	00 00 00 $/;"	l
f010261a	obj/kern/kernel.asm	/^    f010261a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010261f	obj/kern/kernel.asm	/^    f010261f:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0102626	obj/kern/kernel.asm	/^    f0102626:	00 00 00 $/;"	l
f0102629	obj/kern/kernel.asm	/^    f0102629:	ff d3                	callq  *%rbx$/;"	l
f010262b	obj/kern/kernel.asm	/^    f010262b:	48 b8 00 00 00 10 ff 	mov    $0xffffffff10000000,%rax$/;"	l
f0102632	obj/kern/kernel.asm	/^    f0102632:	ff ff ff $/;"	l
f0102635	obj/kern/kernel.asm	/^    f0102635:	48 03 45 d0          	add    -0x30(%rbp),%rax$/;"	l
f0102639	obj/kern/kernel.asm	/^    f0102639:	48 39 c2             	cmp    %rax,%rdx$/;"	l
f010263c	obj/kern/kernel.asm	/^    f010263c:	72 64                	jb     fffffffff01026a2 <end+0xfffffffefe661302>$/;"	l
f010263e	obj/kern/kernel.asm	/^    f010263e:	8b 55 a4             	mov    -0x5c(%rbp),%edx$/;"	l
f0102641	obj/kern/kernel.asm	/^    f0102641:	c7 45 d8 00 e0 00 f0 	movl   $0xf000e000,-0x28(%rbp)$/;"	l
f0102648	obj/kern/kernel.asm	/^    f0102648:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)$/;"	l
f010264f	obj/kern/kernel.asm	/^    f010264f:	b8 ff ff ff ef       	mov    $0xefffffff,%eax$/;"	l
f0102654	obj/kern/kernel.asm	/^    f0102654:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)$/;"	l
f0102658	obj/kern/kernel.asm	/^    f0102658:	77 31                	ja     fffffffff010268b <end+0xfffffffefe6612eb>$/;"	l
f010265a	obj/kern/kernel.asm	/^    f010265a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f010265e	obj/kern/kernel.asm	/^    f010265e:	48 89 c1             	mov    %rax,%rcx$/;"	l
f0102661	obj/kern/kernel.asm	/^    f0102661:	48 ba e0 18 11 f0 00 	mov    $0xf01118e0,%rdx$/;"	l
f0102668	obj/kern/kernel.asm	/^    f0102668:	00 00 00 $/;"	l
f010266b	obj/kern/kernel.asm	/^    f010266b:	be 44 01 00 00       	mov    $0x144,%esi$/;"	l
f0102670	obj/kern/kernel.asm	/^    f0102670:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0102677	obj/kern/kernel.asm	/^    f0102677:	00 00 00 $/;"	l
f010267a	obj/kern/kernel.asm	/^    f010267a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010267f	obj/kern/kernel.asm	/^    f010267f:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0102686	obj/kern/kernel.asm	/^    f0102686:	00 00 00 $/;"	l
f0102689	obj/kern/kernel.asm	/^    f0102689:	ff d3                	callq  *%rbx$/;"	l
f010268b	obj/kern/kernel.asm	/^    f010268b:	48 b8 00 00 00 10 ff 	mov    $0xffffffff10000000,%rax$/;"	l
f0102692	obj/kern/kernel.asm	/^    f0102692:	ff ff ff $/;"	l
f0102695	obj/kern/kernel.asm	/^    f0102695:	48 03 45 d8          	add    -0x28(%rbp),%rax$/;"	l
f0102699	obj/kern/kernel.asm	/^    f0102699:	48 39 c2             	cmp    %rax,%rdx$/;"	l
f010269c	obj/kern/kernel.asm	/^    f010269c:	0f 82 c0 00 00 00    	jb     fffffffff0102762 <end+0xfffffffefe6613c2>$/;"	l
f01026a2	obj/kern/kernel.asm	/^    f01026a2:	8b 55 a8             	mov    -0x58(%rbp),%edx$/;"	l
f01026a5	obj/kern/kernel.asm	/^    f01026a5:	c7 45 e0 00 80 00 f0 	movl   $0xf0008000,-0x20(%rbp)$/;"	l
f01026ac	obj/kern/kernel.asm	/^    f01026ac:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)$/;"	l
f01026b3	obj/kern/kernel.asm	/^    f01026b3:	b8 ff ff ff ef       	mov    $0xefffffff,%eax$/;"	l
f01026b8	obj/kern/kernel.asm	/^    f01026b8:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)$/;"	l
f01026bc	obj/kern/kernel.asm	/^    f01026bc:	77 31                	ja     fffffffff01026ef <end+0xfffffffefe66134f>$/;"	l
f01026be	obj/kern/kernel.asm	/^    f01026be:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
f01026c2	obj/kern/kernel.asm	/^    f01026c2:	48 89 c1             	mov    %rax,%rcx$/;"	l
f01026c5	obj/kern/kernel.asm	/^    f01026c5:	48 ba e0 18 11 f0 00 	mov    $0xf01118e0,%rdx$/;"	l
f01026cc	obj/kern/kernel.asm	/^    f01026cc:	00 00 00 $/;"	l
f01026cf	obj/kern/kernel.asm	/^    f01026cf:	be 45 01 00 00       	mov    $0x145,%esi$/;"	l
f01026d4	obj/kern/kernel.asm	/^    f01026d4:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f01026db	obj/kern/kernel.asm	/^    f01026db:	00 00 00 $/;"	l
f01026de	obj/kern/kernel.asm	/^    f01026de:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01026e3	obj/kern/kernel.asm	/^    f01026e3:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f01026ea	obj/kern/kernel.asm	/^    f01026ea:	00 00 00 $/;"	l
f01026ed	obj/kern/kernel.asm	/^    f01026ed:	ff d3                	callq  *%rbx$/;"	l
f01026ef	obj/kern/kernel.asm	/^    f01026ef:	48 b8 00 00 00 10 ff 	mov    $0xffffffff10000000,%rax$/;"	l
f01026f6	obj/kern/kernel.asm	/^    f01026f6:	ff ff ff $/;"	l
f01026f9	obj/kern/kernel.asm	/^    f01026f9:	48 03 45 e0          	add    -0x20(%rbp),%rax$/;"	l
f01026fd	obj/kern/kernel.asm	/^    f01026fd:	48 39 c2             	cmp    %rax,%rdx$/;"	l
f0102700	obj/kern/kernel.asm	/^    f0102700:	72 66                	jb     fffffffff0102768 <end+0xfffffffefe6613c8>$/;"	l
f0102702	obj/kern/kernel.asm	/^    f0102702:	8b 55 a8             	mov    -0x58(%rbp),%edx$/;"	l
f0102705	obj/kern/kernel.asm	/^    f0102705:	c7 45 e8 00 e0 00 f0 	movl   $0xf000e000,-0x18(%rbp)$/;"	l
f010270c	obj/kern/kernel.asm	/^    f010270c:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)$/;"	l
f0102713	obj/kern/kernel.asm	/^    f0102713:	b8 ff ff ff ef       	mov    $0xefffffff,%eax$/;"	l
f0102718	obj/kern/kernel.asm	/^    f0102718:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)$/;"	l
f010271c	obj/kern/kernel.asm	/^    f010271c:	77 31                	ja     fffffffff010274f <end+0xfffffffefe6613af>$/;"	l
f010271e	obj/kern/kernel.asm	/^    f010271e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f0102722	obj/kern/kernel.asm	/^    f0102722:	48 89 c1             	mov    %rax,%rcx$/;"	l
f0102725	obj/kern/kernel.asm	/^    f0102725:	48 ba e0 18 11 f0 00 	mov    $0xf01118e0,%rdx$/;"	l
f010272c	obj/kern/kernel.asm	/^    f010272c:	00 00 00 $/;"	l
f010272f	obj/kern/kernel.asm	/^    f010272f:	be 45 01 00 00       	mov    $0x145,%esi$/;"	l
f0102734	obj/kern/kernel.asm	/^    f0102734:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f010273b	obj/kern/kernel.asm	/^    f010273b:	00 00 00 $/;"	l
f010273e	obj/kern/kernel.asm	/^    f010273e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102743	obj/kern/kernel.asm	/^    f0102743:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f010274a	obj/kern/kernel.asm	/^    f010274a:	00 00 00 $/;"	l
f010274d	obj/kern/kernel.asm	/^    f010274d:	ff d3                	callq  *%rbx$/;"	l
f010274f	obj/kern/kernel.asm	/^    f010274f:	48 b8 00 00 00 10 ff 	mov    $0xffffffff10000000,%rax$/;"	l
f0102756	obj/kern/kernel.asm	/^    f0102756:	ff ff ff $/;"	l
f0102759	obj/kern/kernel.asm	/^    f0102759:	48 03 45 e8          	add    -0x18(%rbp),%rax$/;"	l
f010275d	obj/kern/kernel.asm	/^    f010275d:	48 39 c2             	cmp    %rax,%rdx$/;"	l
f0102760	obj/kern/kernel.asm	/^    f0102760:	73 06                	jae    fffffffff0102768 <end+0xfffffffefe6613c8>$/;"	l
f0102762	obj/kern/kernel.asm	/^    f0102762:	83 45 c4 01          	addl   $0x1,-0x3c(%rbp)$/;"	l
f0102766	obj/kern/kernel.asm	/^    f0102766:	eb 60                	jmp    fffffffff01027c8 <end+0xfffffffefe661428>$/;"	l
f0102768	obj/kern/kernel.asm	/^    f0102768:	81 7d a4 00 70 00 00 	cmpl   $0x7000,-0x5c(%rbp)$/;"	l
f010276f	obj/kern/kernel.asm	/^    f010276f:	74 57                	je     fffffffff01027c8 <end+0xfffffffefe661428>$/;"	l
f0102771	obj/kern/kernel.asm	/^    f0102771:	48 b8 70 77 a2 f1 00 	mov    $0xf1a27770,%rax$/;"	l
f0102778	obj/kern/kernel.asm	/^    f0102778:	00 00 00 $/;"	l
f010277b	obj/kern/kernel.asm	/^    f010277b:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010277e	obj/kern/kernel.asm	/^    f010277e:	8b 55 b4             	mov    -0x4c(%rbp),%edx$/;"	l
f0102781	obj/kern/kernel.asm	/^    f0102781:	48 63 d2             	movslq %edx,%rdx$/;"	l
f0102784	obj/kern/kernel.asm	/^    f0102784:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f0102788	obj/kern/kernel.asm	/^    f0102788:	48 8d 14 10          	lea    (%rax,%rdx,1),%rdx$/;"	l
f010278c	obj/kern/kernel.asm	/^    f010278c:	48 b8 38 62 a2 f1 00 	mov    $0xf1a26238,%rax$/;"	l
f0102793	obj/kern/kernel.asm	/^    f0102793:	00 00 00 $/;"	l
f0102796	obj/kern/kernel.asm	/^    f0102796:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0102799	obj/kern/kernel.asm	/^    f0102799:	48 89 02             	mov    %rax,(%rdx)$/;"	l
f010279c	obj/kern/kernel.asm	/^    f010279c:	48 b8 70 77 a2 f1 00 	mov    $0xf1a27770,%rax$/;"	l
f01027a3	obj/kern/kernel.asm	/^    f01027a3:	00 00 00 $/;"	l
f01027a6	obj/kern/kernel.asm	/^    f01027a6:	48 8b 00             	mov    (%rax),%rax$/;"	l
f01027a9	obj/kern/kernel.asm	/^    f01027a9:	8b 55 b4             	mov    -0x4c(%rbp),%edx$/;"	l
f01027ac	obj/kern/kernel.asm	/^    f01027ac:	48 63 d2             	movslq %edx,%rdx$/;"	l
f01027af	obj/kern/kernel.asm	/^    f01027af:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f01027b3	obj/kern/kernel.asm	/^    f01027b3:	48 8d 14 10          	lea    (%rax,%rdx,1),%rdx$/;"	l
f01027b7	obj/kern/kernel.asm	/^    f01027b7:	48 b8 38 62 a2 f1 00 	mov    $0xf1a26238,%rax$/;"	l
f01027be	obj/kern/kernel.asm	/^    f01027be:	00 00 00 $/;"	l
f01027c1	obj/kern/kernel.asm	/^    f01027c1:	48 89 10             	mov    %rdx,(%rax)$/;"	l
f01027c4	obj/kern/kernel.asm	/^    f01027c4:	83 45 b8 01          	addl   $0x1,-0x48(%rbp)$/;"	l
f01027c8	obj/kern/kernel.asm	/^    f01027c8:	81 45 a4 00 10 00 00 	addl   $0x1000,-0x5c(%rbp)$/;"	l
f01027cf	obj/kern/kernel.asm	/^    f01027cf:	81 45 a8 00 10 00 00 	addl   $0x1000,-0x58(%rbp)$/;"	l
f01027d6	obj/kern/kernel.asm	/^    f01027d6:	83 45 b4 01          	addl   $0x1,-0x4c(%rbp)$/;"	l
f01027da	obj/kern/kernel.asm	/^    f01027da:	8b 45 b4             	mov    -0x4c(%rbp),%eax$/;"	l
f01027dd	obj/kern/kernel.asm	/^    f01027dd:	48 63 d0             	movslq %eax,%rdx$/;"	l
f01027e0	obj/kern/kernel.asm	/^    f01027e0:	48 b8 68 77 a2 f1 00 	mov    $0xf1a27768,%rax$/;"	l
f01027e7	obj/kern/kernel.asm	/^    f01027e7:	00 00 00 $/;"	l
f01027ea	obj/kern/kernel.asm	/^    f01027ea:	48 8b 00             	mov    (%rax),%rax$/;"	l
f01027ed	obj/kern/kernel.asm	/^    f01027ed:	48 39 c2             	cmp    %rax,%rdx$/;"	l
f01027f0	obj/kern/kernel.asm	/^    f01027f0:	0f 82 68 fd ff ff    	jb     fffffffff010255e <end+0xfffffffefe6611be>$/;"	l
f01027f6	obj/kern/kernel.asm	/^    f01027f6:	48 83 c4 58          	add    $0x58,%rsp$/;"	l
f01027fa	obj/kern/kernel.asm	/^    f01027fa:	5b                   	pop    %rbx$/;"	l
f01027fb	obj/kern/kernel.asm	/^    f01027fb:	c9                   	leaveq $/;"	l
f01027fc	obj/kern/kernel.asm	/^    f01027fc:	c3                   	retq   $/;"	l
f01027fd	obj/kern/kernel.asm	/^    f01027fd:	55                   	push   %rbp$/;"	l
f01027fe	obj/kern/kernel.asm	/^    f01027fe:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f0102801	obj/kern/kernel.asm	/^    f0102801:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
f0102805	obj/kern/kernel.asm	/^    f0102805:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
f0102808	obj/kern/kernel.asm	/^    f0102808:	48 b8 38 62 a2 f1 00 	mov    $0xf1a26238,%rax$/;"	l
f010280f	obj/kern/kernel.asm	/^    f010280f:	00 00 00 $/;"	l
f0102812	obj/kern/kernel.asm	/^    f0102812:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0102815	obj/kern/kernel.asm	/^    f0102815:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
f0102819	obj/kern/kernel.asm	/^    f0102819:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
f010281e	obj/kern/kernel.asm	/^    f010281e:	75 07                	jne    fffffffff0102827 <end+0xfffffffefe661487>$/;"	l
f0102820	obj/kern/kernel.asm	/^    f0102820:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102825	obj/kern/kernel.asm	/^    f0102825:	eb 62                	jmp    fffffffff0102889 <end+0xfffffffefe6614e9>$/;"	l
f0102827	obj/kern/kernel.asm	/^    f0102827:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
f010282a	obj/kern/kernel.asm	/^    f010282a:	83 e0 01             	and    $0x1,%eax$/;"	l
f010282d	obj/kern/kernel.asm	/^    f010282d:	84 c0                	test   %al,%al$/;"	l
f010282f	obj/kern/kernel.asm	/^    f010282f:	74 2c                	je     fffffffff010285d <end+0xfffffffefe6614bd>$/;"	l
f0102831	obj/kern/kernel.asm	/^    f0102831:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f0102835	obj/kern/kernel.asm	/^    f0102835:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0102838	obj/kern/kernel.asm	/^    f0102838:	48 b8 96 1a 10 f0 00 	mov    $0xf0101a96,%rax$/;"	l
f010283f	obj/kern/kernel.asm	/^    f010283f:	00 00 00 $/;"	l
f0102842	obj/kern/kernel.asm	/^    f0102842:	ff d0                	callq  *%rax$/;"	l
f0102844	obj/kern/kernel.asm	/^    f0102844:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102849	obj/kern/kernel.asm	/^    f0102849:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f010284e	obj/kern/kernel.asm	/^    f010284e:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0102851	obj/kern/kernel.asm	/^    f0102851:	48 b8 42 ee 10 f0 00 	mov    $0xf010ee42,%rax$/;"	l
f0102858	obj/kern/kernel.asm	/^    f0102858:	00 00 00 $/;"	l
f010285b	obj/kern/kernel.asm	/^    f010285b:	ff d0                	callq  *%rax$/;"	l
f010285d	obj/kern/kernel.asm	/^    f010285d:	48 b8 38 62 a2 f1 00 	mov    $0xf1a26238,%rax$/;"	l
f0102864	obj/kern/kernel.asm	/^    f0102864:	00 00 00 $/;"	l
f0102867	obj/kern/kernel.asm	/^    f0102867:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010286a	obj/kern/kernel.asm	/^    f010286a:	48 8b 10             	mov    (%rax),%rdx$/;"	l
f010286d	obj/kern/kernel.asm	/^    f010286d:	48 b8 38 62 a2 f1 00 	mov    $0xf1a26238,%rax$/;"	l
f0102874	obj/kern/kernel.asm	/^    f0102874:	00 00 00 $/;"	l
f0102877	obj/kern/kernel.asm	/^    f0102877:	48 89 10             	mov    %rdx,(%rax)$/;"	l
f010287a	obj/kern/kernel.asm	/^    f010287a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f010287e	obj/kern/kernel.asm	/^    f010287e:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)$/;"	l
f0102885	obj/kern/kernel.asm	/^    f0102885:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f0102889	obj/kern/kernel.asm	/^    f0102889:	c9                   	leaveq $/;"	l
f010288a	obj/kern/kernel.asm	/^    f010288a:	c3                   	retq   $/;"	l
f010288b	obj/kern/kernel.asm	/^    f010288b:	55                   	push   %rbp$/;"	l
f010288c	obj/kern/kernel.asm	/^    f010288c:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010288f	obj/kern/kernel.asm	/^    f010288f:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
f0102893	obj/kern/kernel.asm	/^    f0102893:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
f0102897	obj/kern/kernel.asm	/^    f0102897:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f010289b	obj/kern/kernel.asm	/^    f010289b:	ba 10 00 00 00       	mov    $0x10,%edx$/;"	l
f01028a0	obj/kern/kernel.asm	/^    f01028a0:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01028a5	obj/kern/kernel.asm	/^    f01028a5:	48 89 c7             	mov    %rax,%rdi$/;"	l
f01028a8	obj/kern/kernel.asm	/^    f01028a8:	48 b8 42 ee 10 f0 00 	mov    $0xf010ee42,%rax$/;"	l
f01028af	obj/kern/kernel.asm	/^    f01028af:	00 00 00 $/;"	l
f01028b2	obj/kern/kernel.asm	/^    f01028b2:	ff d0                	callq  *%rax$/;"	l
f01028b4	obj/kern/kernel.asm	/^    f01028b4:	c9                   	leaveq $/;"	l
f01028b5	obj/kern/kernel.asm	/^    f01028b5:	c3                   	retq   $/;"	l
f01028b6	obj/kern/kernel.asm	/^    f01028b6:	55                   	push   %rbp$/;"	l
f01028b7	obj/kern/kernel.asm	/^    f01028b7:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f01028ba	obj/kern/kernel.asm	/^    f01028ba:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
f01028be	obj/kern/kernel.asm	/^    f01028be:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
f01028c2	obj/kern/kernel.asm	/^    f01028c2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f01028c6	obj/kern/kernel.asm	/^    f01028c6:	0f b7 40 08          	movzwl 0x8(%rax),%eax$/;"	l
f01028ca	obj/kern/kernel.asm	/^    f01028ca:	66 85 c0             	test   %ax,%ax$/;"	l
f01028cd	obj/kern/kernel.asm	/^    f01028cd:	75 56                	jne    fffffffff0102925 <end+0xfffffffefe661585>$/;"	l
f01028cf	obj/kern/kernel.asm	/^    f01028cf:	48 b8 38 62 a2 f1 00 	mov    $0xf1a26238,%rax$/;"	l
f01028d6	obj/kern/kernel.asm	/^    f01028d6:	00 00 00 $/;"	l
f01028d9	obj/kern/kernel.asm	/^    f01028d9:	48 8b 00             	mov    (%rax),%rax$/;"	l
f01028dc	obj/kern/kernel.asm	/^    f01028dc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
f01028e0	obj/kern/kernel.asm	/^    f01028e0:	eb 15                	jmp    fffffffff01028f7 <end+0xfffffffefe661557>$/;"	l
f01028e2	obj/kern/kernel.asm	/^    f01028e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f01028e6	obj/kern/kernel.asm	/^    f01028e6:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax$/;"	l
f01028ea	obj/kern/kernel.asm	/^    f01028ea:	74 3c                	je     fffffffff0102928 <end+0xfffffffefe661588>$/;"	l
f01028ec	obj/kern/kernel.asm	/^    f01028ec:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f01028f0	obj/kern/kernel.asm	/^    f01028f0:	48 8b 00             	mov    (%rax),%rax$/;"	l
f01028f3	obj/kern/kernel.asm	/^    f01028f3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
f01028f7	obj/kern/kernel.asm	/^    f01028f7:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
f01028fc	obj/kern/kernel.asm	/^    f01028fc:	75 e4                	jne    fffffffff01028e2 <end+0xfffffffefe661542>$/;"	l
f01028fe	obj/kern/kernel.asm	/^    f01028fe:	48 b8 38 62 a2 f1 00 	mov    $0xf1a26238,%rax$/;"	l
f0102905	obj/kern/kernel.asm	/^    f0102905:	00 00 00 $/;"	l
f0102908	obj/kern/kernel.asm	/^    f0102908:	48 8b 10             	mov    (%rax),%rdx$/;"	l
f010290b	obj/kern/kernel.asm	/^    f010290b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010290f	obj/kern/kernel.asm	/^    f010290f:	48 89 10             	mov    %rdx,(%rax)$/;"	l
f0102912	obj/kern/kernel.asm	/^    f0102912:	48 b8 38 62 a2 f1 00 	mov    $0xf1a26238,%rax$/;"	l
f0102919	obj/kern/kernel.asm	/^    f0102919:	00 00 00 $/;"	l
f010291c	obj/kern/kernel.asm	/^    f010291c:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
f0102920	obj/kern/kernel.asm	/^    f0102920:	48 89 10             	mov    %rdx,(%rax)$/;"	l
f0102923	obj/kern/kernel.asm	/^    f0102923:	eb 04                	jmp    fffffffff0102929 <end+0xfffffffefe661589>$/;"	l
f0102925	obj/kern/kernel.asm	/^    f0102925:	90                   	nop$/;"	l
f0102926	obj/kern/kernel.asm	/^    f0102926:	eb 01                	jmp    fffffffff0102929 <end+0xfffffffefe661589>$/;"	l
f0102928	obj/kern/kernel.asm	/^    f0102928:	90                   	nop$/;"	l
f0102929	obj/kern/kernel.asm	/^    f0102929:	c9                   	leaveq $/;"	l
f010292a	obj/kern/kernel.asm	/^    f010292a:	c3                   	retq   $/;"	l
f010292b	obj/kern/kernel.asm	/^    f010292b:	55                   	push   %rbp$/;"	l
f010292c	obj/kern/kernel.asm	/^    f010292c:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010292f	obj/kern/kernel.asm	/^    f010292f:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
f0102933	obj/kern/kernel.asm	/^    f0102933:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
f0102937	obj/kern/kernel.asm	/^    f0102937:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f010293b	obj/kern/kernel.asm	/^    f010293b:	0f b7 40 08          	movzwl 0x8(%rax),%eax$/;"	l
f010293f	obj/kern/kernel.asm	/^    f010293f:	8d 50 ff             	lea    -0x1(%rax),%edx$/;"	l
f0102942	obj/kern/kernel.asm	/^    f0102942:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f0102946	obj/kern/kernel.asm	/^    f0102946:	66 89 50 08          	mov    %dx,0x8(%rax)$/;"	l
f010294a	obj/kern/kernel.asm	/^    f010294a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f010294e	obj/kern/kernel.asm	/^    f010294e:	0f b7 40 08          	movzwl 0x8(%rax),%eax$/;"	l
f0102952	obj/kern/kernel.asm	/^    f0102952:	66 85 c0             	test   %ax,%ax$/;"	l
f0102955	obj/kern/kernel.asm	/^    f0102955:	75 13                	jne    fffffffff010296a <end+0xfffffffefe6615ca>$/;"	l
f0102957	obj/kern/kernel.asm	/^    f0102957:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f010295b	obj/kern/kernel.asm	/^    f010295b:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010295e	obj/kern/kernel.asm	/^    f010295e:	48 b8 b6 28 10 f0 00 	mov    $0xf01028b6,%rax$/;"	l
f0102965	obj/kern/kernel.asm	/^    f0102965:	00 00 00 $/;"	l
f0102968	obj/kern/kernel.asm	/^    f0102968:	ff d0                	callq  *%rax$/;"	l
f010296a	obj/kern/kernel.asm	/^    f010296a:	c9                   	leaveq $/;"	l
f010296b	obj/kern/kernel.asm	/^    f010296b:	c3                   	retq   $/;"	l
f010296c	obj/kern/kernel.asm	/^    f010296c:	55                   	push   %rbp$/;"	l
f010296d	obj/kern/kernel.asm	/^    f010296d:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f0102970	obj/kern/kernel.asm	/^    f0102970:	53                   	push   %rbx$/;"	l
f0102971	obj/kern/kernel.asm	/^    f0102971:	48 83 ec 58          	sub    $0x58,%rsp$/;"	l
f0102975	obj/kern/kernel.asm	/^    f0102975:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)$/;"	l
f0102979	obj/kern/kernel.asm	/^    f0102979:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)$/;"	l
f010297d	obj/kern/kernel.asm	/^    f010297d:	89 55 ac             	mov    %edx,-0x54(%rbp)$/;"	l
f0102980	obj/kern/kernel.asm	/^    f0102980:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)$/;"	l
f0102987	obj/kern/kernel.asm	/^    f0102987:	00 $/;"	l
f0102988	obj/kern/kernel.asm	/^    f0102988:	48 8b 45 b0          	mov    -0x50(%rbp),%rax$/;"	l
f010298c	obj/kern/kernel.asm	/^    f010298c:	48 c1 e8 27          	shr    $0x27,%rax$/;"	l
f0102990	obj/kern/kernel.asm	/^    f0102990:	25 ff 01 00 00       	and    $0x1ff,%eax$/;"	l
f0102995	obj/kern/kernel.asm	/^    f0102995:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f0102999	obj/kern/kernel.asm	/^    f0102999:	48 03 45 b8          	add    -0x48(%rbp),%rax$/;"	l
f010299d	obj/kern/kernel.asm	/^    f010299d:	48 8b 00             	mov    (%rax),%rax$/;"	l
f01029a0	obj/kern/kernel.asm	/^    f01029a0:	48 85 c0             	test   %rax,%rax$/;"	l
f01029a3	obj/kern/kernel.asm	/^    f01029a3:	0f 85 a7 00 00 00    	jne    fffffffff0102a50 <end+0xfffffffefe6616b0>$/;"	l
f01029a9	obj/kern/kernel.asm	/^    f01029a9:	83 7d ac 00          	cmpl   $0x0,-0x54(%rbp)$/;"	l
f01029ad	obj/kern/kernel.asm	/^    f01029ad:	75 0a                	jne    fffffffff01029b9 <end+0xfffffffefe661619>$/;"	l
f01029af	obj/kern/kernel.asm	/^    f01029af:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01029b4	obj/kern/kernel.asm	/^    f01029b4:	e9 a1 01 00 00       	jmpq   fffffffff0102b5a <end+0xfffffffefe6617ba>$/;"	l
f01029b9	obj/kern/kernel.asm	/^    f01029b9:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f01029be	obj/kern/kernel.asm	/^    f01029be:	48 b8 fd 27 10 f0 00 	mov    $0xf01027fd,%rax$/;"	l
f01029c5	obj/kern/kernel.asm	/^    f01029c5:	00 00 00 $/;"	l
f01029c8	obj/kern/kernel.asm	/^    f01029c8:	ff d0                	callq  *%rax$/;"	l
f01029ca	obj/kern/kernel.asm	/^    f01029ca:	48 89 45 c8          	mov    %rax,-0x38(%rbp)$/;"	l
f01029ce	obj/kern/kernel.asm	/^    f01029ce:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)$/;"	l
f01029d3	obj/kern/kernel.asm	/^    f01029d3:	75 0a                	jne    fffffffff01029df <end+0xfffffffefe66163f>$/;"	l
f01029d5	obj/kern/kernel.asm	/^    f01029d5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01029da	obj/kern/kernel.asm	/^    f01029da:	e9 7b 01 00 00       	jmpq   fffffffff0102b5a <end+0xfffffffefe6617ba>$/;"	l
f01029df	obj/kern/kernel.asm	/^    f01029df:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f01029e3	obj/kern/kernel.asm	/^    f01029e3:	0f b7 40 08          	movzwl 0x8(%rax),%eax$/;"	l
f01029e7	obj/kern/kernel.asm	/^    f01029e7:	8d 50 01             	lea    0x1(%rax),%edx$/;"	l
f01029ea	obj/kern/kernel.asm	/^    f01029ea:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f01029ee	obj/kern/kernel.asm	/^    f01029ee:	66 89 50 08          	mov    %dx,0x8(%rax)$/;"	l
f01029f2	obj/kern/kernel.asm	/^    f01029f2:	48 8b 45 b0          	mov    -0x50(%rbp),%rax$/;"	l
f01029f6	obj/kern/kernel.asm	/^    f01029f6:	48 c1 e8 27          	shr    $0x27,%rax$/;"	l
f01029fa	obj/kern/kernel.asm	/^    f01029fa:	25 ff 01 00 00       	and    $0x1ff,%eax$/;"	l
f01029ff	obj/kern/kernel.asm	/^    f01029ff:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f0102a03	obj/kern/kernel.asm	/^    f0102a03:	48 89 c3             	mov    %rax,%rbx$/;"	l
f0102a06	obj/kern/kernel.asm	/^    f0102a06:	48 03 5d b8          	add    -0x48(%rbp),%rbx$/;"	l
f0102a0a	obj/kern/kernel.asm	/^    f0102a0a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f0102a0e	obj/kern/kernel.asm	/^    f0102a0e:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0102a11	obj/kern/kernel.asm	/^    f0102a11:	48 b8 00 1a 10 f0 00 	mov    $0xf0101a00,%rax$/;"	l
f0102a18	obj/kern/kernel.asm	/^    f0102a18:	00 00 00 $/;"	l
f0102a1b	obj/kern/kernel.asm	/^    f0102a1b:	ff d0                	callq  *%rax$/;"	l
f0102a1d	obj/kern/kernel.asm	/^    f0102a1d:	48 83 c8 07          	or     $0x7,%rax$/;"	l
f0102a21	obj/kern/kernel.asm	/^    f0102a21:	48 89 03             	mov    %rax,(%rbx)$/;"	l
f0102a24	obj/kern/kernel.asm	/^    f0102a24:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f0102a28	obj/kern/kernel.asm	/^    f0102a28:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0102a2b	obj/kern/kernel.asm	/^    f0102a2b:	48 b8 96 1a 10 f0 00 	mov    $0xf0101a96,%rax$/;"	l
f0102a32	obj/kern/kernel.asm	/^    f0102a32:	00 00 00 $/;"	l
f0102a35	obj/kern/kernel.asm	/^    f0102a35:	ff d0                	callq  *%rax$/;"	l
f0102a37	obj/kern/kernel.asm	/^    f0102a37:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102a3c	obj/kern/kernel.asm	/^    f0102a3c:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0102a41	obj/kern/kernel.asm	/^    f0102a41:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0102a44	obj/kern/kernel.asm	/^    f0102a44:	48 b8 42 ee 10 f0 00 	mov    $0xf010ee42,%rax$/;"	l
f0102a4b	obj/kern/kernel.asm	/^    f0102a4b:	00 00 00 $/;"	l
f0102a4e	obj/kern/kernel.asm	/^    f0102a4e:	ff d0                	callq  *%rax$/;"	l
f0102a50	obj/kern/kernel.asm	/^    f0102a50:	48 8b 45 b0          	mov    -0x50(%rbp),%rax$/;"	l
f0102a54	obj/kern/kernel.asm	/^    f0102a54:	48 c1 e8 27          	shr    $0x27,%rax$/;"	l
f0102a58	obj/kern/kernel.asm	/^    f0102a58:	25 ff 01 00 00       	and    $0x1ff,%eax$/;"	l
f0102a5d	obj/kern/kernel.asm	/^    f0102a5d:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f0102a61	obj/kern/kernel.asm	/^    f0102a61:	48 03 45 b8          	add    -0x48(%rbp),%rax$/;"	l
f0102a65	obj/kern/kernel.asm	/^    f0102a65:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0102a68	obj/kern/kernel.asm	/^    f0102a68:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
f0102a6e	obj/kern/kernel.asm	/^    f0102a6e:	48 89 45 e0          	mov    %rax,-0x20(%rbp)$/;"	l
f0102a72	obj/kern/kernel.asm	/^    f0102a72:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
f0102a76	obj/kern/kernel.asm	/^    f0102a76:	48 c1 e8 0c          	shr    $0xc,%rax$/;"	l
f0102a7a	obj/kern/kernel.asm	/^    f0102a7a:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
f0102a7d	obj/kern/kernel.asm	/^    f0102a7d:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
f0102a80	obj/kern/kernel.asm	/^    f0102a80:	48 b8 68 77 a2 f1 00 	mov    $0xf1a27768,%rax$/;"	l
f0102a87	obj/kern/kernel.asm	/^    f0102a87:	00 00 00 $/;"	l
f0102a8a	obj/kern/kernel.asm	/^    f0102a8a:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0102a8d	obj/kern/kernel.asm	/^    f0102a8d:	48 39 c2             	cmp    %rax,%rdx$/;"	l
f0102a90	obj/kern/kernel.asm	/^    f0102a90:	72 31                	jb     fffffffff0102ac3 <end+0xfffffffefe661723>$/;"	l
f0102a92	obj/kern/kernel.asm	/^    f0102a92:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
f0102a96	obj/kern/kernel.asm	/^    f0102a96:	48 89 c1             	mov    %rax,%rcx$/;"	l
f0102a99	obj/kern/kernel.asm	/^    f0102a99:	48 ba 78 18 11 f0 00 	mov    $0xf0111878,%rdx$/;"	l
f0102aa0	obj/kern/kernel.asm	/^    f0102aa0:	00 00 00 $/;"	l
f0102aa3	obj/kern/kernel.asm	/^    f0102aa3:	be cb 01 00 00       	mov    $0x1cb,%esi$/;"	l
f0102aa8	obj/kern/kernel.asm	/^    f0102aa8:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0102aaf	obj/kern/kernel.asm	/^    f0102aaf:	00 00 00 $/;"	l
f0102ab2	obj/kern/kernel.asm	/^    f0102ab2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102ab7	obj/kern/kernel.asm	/^    f0102ab7:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0102abe	obj/kern/kernel.asm	/^    f0102abe:	00 00 00 $/;"	l
f0102ac1	obj/kern/kernel.asm	/^    f0102ac1:	ff d3                	callq  *%rbx$/;"	l
f0102ac3	obj/kern/kernel.asm	/^    f0102ac3:	b8 00 00 00 f0       	mov    $0xf0000000,%eax$/;"	l
f0102ac8	obj/kern/kernel.asm	/^    f0102ac8:	48 03 45 e0          	add    -0x20(%rbp),%rax$/;"	l
f0102acc	obj/kern/kernel.asm	/^    f0102acc:	48 89 45 d0          	mov    %rax,-0x30(%rbp)$/;"	l
f0102ad0	obj/kern/kernel.asm	/^    f0102ad0:	8b 55 ac             	mov    -0x54(%rbp),%edx$/;"	l
f0102ad3	obj/kern/kernel.asm	/^    f0102ad3:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx$/;"	l
f0102ad7	obj/kern/kernel.asm	/^    f0102ad7:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f0102adb	obj/kern/kernel.asm	/^    f0102adb:	48 89 ce             	mov    %rcx,%rsi$/;"	l
f0102ade	obj/kern/kernel.asm	/^    f0102ade:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0102ae1	obj/kern/kernel.asm	/^    f0102ae1:	48 b8 61 2b 10 f0 00 	mov    $0xf0102b61,%rax$/;"	l
f0102ae8	obj/kern/kernel.asm	/^    f0102ae8:	00 00 00 $/;"	l
f0102aeb	obj/kern/kernel.asm	/^    f0102aeb:	ff d0                	callq  *%rax$/;"	l
f0102aed	obj/kern/kernel.asm	/^    f0102aed:	48 89 45 d8          	mov    %rax,-0x28(%rbp)$/;"	l
f0102af1	obj/kern/kernel.asm	/^    f0102af1:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)$/;"	l
f0102af6	obj/kern/kernel.asm	/^    f0102af6:	75 40                	jne    fffffffff0102b38 <end+0xfffffffefe661798>$/;"	l
f0102af8	obj/kern/kernel.asm	/^    f0102af8:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)$/;"	l
f0102afd	obj/kern/kernel.asm	/^    f0102afd:	74 39                	je     fffffffff0102b38 <end+0xfffffffefe661798>$/;"	l
f0102aff	obj/kern/kernel.asm	/^    f0102aff:	48 8b 45 b0          	mov    -0x50(%rbp),%rax$/;"	l
f0102b03	obj/kern/kernel.asm	/^    f0102b03:	48 c1 e8 27          	shr    $0x27,%rax$/;"	l
f0102b07	obj/kern/kernel.asm	/^    f0102b07:	25 ff 01 00 00       	and    $0x1ff,%eax$/;"	l
f0102b0c	obj/kern/kernel.asm	/^    f0102b0c:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f0102b10	obj/kern/kernel.asm	/^    f0102b10:	48 03 45 b8          	add    -0x48(%rbp),%rax$/;"	l
f0102b14	obj/kern/kernel.asm	/^    f0102b14:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)$/;"	l
f0102b1b	obj/kern/kernel.asm	/^    f0102b1b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f0102b1f	obj/kern/kernel.asm	/^    f0102b1f:	66 c7 40 08 00 00    	movw   $0x0,0x8(%rax)$/;"	l
f0102b25	obj/kern/kernel.asm	/^    f0102b25:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f0102b29	obj/kern/kernel.asm	/^    f0102b29:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0102b2c	obj/kern/kernel.asm	/^    f0102b2c:	48 b8 b6 28 10 f0 00 	mov    $0xf01028b6,%rax$/;"	l
f0102b33	obj/kern/kernel.asm	/^    f0102b33:	00 00 00 $/;"	l
f0102b36	obj/kern/kernel.asm	/^    f0102b36:	ff d0                	callq  *%rax$/;"	l
f0102b38	obj/kern/kernel.asm	/^    f0102b38:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)$/;"	l
f0102b3d	obj/kern/kernel.asm	/^    f0102b3d:	74 17                	je     fffffffff0102b56 <end+0xfffffffefe6617b6>$/;"	l
f0102b3f	obj/kern/kernel.asm	/^    f0102b3f:	48 8b 45 b0          	mov    -0x50(%rbp),%rax$/;"	l
f0102b43	obj/kern/kernel.asm	/^    f0102b43:	48 c1 e8 0c          	shr    $0xc,%rax$/;"	l
f0102b47	obj/kern/kernel.asm	/^    f0102b47:	25 ff 01 00 00       	and    $0x1ff,%eax$/;"	l
f0102b4c	obj/kern/kernel.asm	/^    f0102b4c:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f0102b50	obj/kern/kernel.asm	/^    f0102b50:	48 03 45 d8          	add    -0x28(%rbp),%rax$/;"	l
f0102b54	obj/kern/kernel.asm	/^    f0102b54:	eb 04                	jmp    fffffffff0102b5a <end+0xfffffffefe6617ba>$/;"	l
f0102b56	obj/kern/kernel.asm	/^    f0102b56:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f0102b5a	obj/kern/kernel.asm	/^    f0102b5a:	48 83 c4 58          	add    $0x58,%rsp$/;"	l
f0102b5e	obj/kern/kernel.asm	/^    f0102b5e:	5b                   	pop    %rbx$/;"	l
f0102b5f	obj/kern/kernel.asm	/^    f0102b5f:	c9                   	leaveq $/;"	l
f0102b60	obj/kern/kernel.asm	/^    f0102b60:	c3                   	retq   $/;"	l
f0102b61	obj/kern/kernel.asm	/^    f0102b61:	55                   	push   %rbp$/;"	l
f0102b62	obj/kern/kernel.asm	/^    f0102b62:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f0102b65	obj/kern/kernel.asm	/^    f0102b65:	53                   	push   %rbx$/;"	l
f0102b66	obj/kern/kernel.asm	/^    f0102b66:	48 83 ec 58          	sub    $0x58,%rsp$/;"	l
f0102b6a	obj/kern/kernel.asm	/^    f0102b6a:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)$/;"	l
f0102b6e	obj/kern/kernel.asm	/^    f0102b6e:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)$/;"	l
f0102b72	obj/kern/kernel.asm	/^    f0102b72:	89 55 ac             	mov    %edx,-0x54(%rbp)$/;"	l
f0102b75	obj/kern/kernel.asm	/^    f0102b75:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)$/;"	l
f0102b7c	obj/kern/kernel.asm	/^    f0102b7c:	00 $/;"	l
f0102b7d	obj/kern/kernel.asm	/^    f0102b7d:	48 8b 45 b0          	mov    -0x50(%rbp),%rax$/;"	l
f0102b81	obj/kern/kernel.asm	/^    f0102b81:	48 c1 e8 1e          	shr    $0x1e,%rax$/;"	l
f0102b85	obj/kern/kernel.asm	/^    f0102b85:	25 ff 01 00 00       	and    $0x1ff,%eax$/;"	l
f0102b8a	obj/kern/kernel.asm	/^    f0102b8a:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f0102b8e	obj/kern/kernel.asm	/^    f0102b8e:	48 03 45 b8          	add    -0x48(%rbp),%rax$/;"	l
f0102b92	obj/kern/kernel.asm	/^    f0102b92:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0102b95	obj/kern/kernel.asm	/^    f0102b95:	48 85 c0             	test   %rax,%rax$/;"	l
f0102b98	obj/kern/kernel.asm	/^    f0102b98:	0f 85 a7 00 00 00    	jne    fffffffff0102c45 <end+0xfffffffefe6618a5>$/;"	l
f0102b9e	obj/kern/kernel.asm	/^    f0102b9e:	83 7d ac 00          	cmpl   $0x0,-0x54(%rbp)$/;"	l
f0102ba2	obj/kern/kernel.asm	/^    f0102ba2:	75 0a                	jne    fffffffff0102bae <end+0xfffffffefe66180e>$/;"	l
f0102ba4	obj/kern/kernel.asm	/^    f0102ba4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102ba9	obj/kern/kernel.asm	/^    f0102ba9:	e9 83 01 00 00       	jmpq   fffffffff0102d31 <end+0xfffffffefe661991>$/;"	l
f0102bae	obj/kern/kernel.asm	/^    f0102bae:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0102bb3	obj/kern/kernel.asm	/^    f0102bb3:	48 b8 fd 27 10 f0 00 	mov    $0xf01027fd,%rax$/;"	l
f0102bba	obj/kern/kernel.asm	/^    f0102bba:	00 00 00 $/;"	l
f0102bbd	obj/kern/kernel.asm	/^    f0102bbd:	ff d0                	callq  *%rax$/;"	l
f0102bbf	obj/kern/kernel.asm	/^    f0102bbf:	48 89 45 c8          	mov    %rax,-0x38(%rbp)$/;"	l
f0102bc3	obj/kern/kernel.asm	/^    f0102bc3:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)$/;"	l
f0102bc8	obj/kern/kernel.asm	/^    f0102bc8:	75 0a                	jne    fffffffff0102bd4 <end+0xfffffffefe661834>$/;"	l
f0102bca	obj/kern/kernel.asm	/^    f0102bca:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102bcf	obj/kern/kernel.asm	/^    f0102bcf:	e9 5d 01 00 00       	jmpq   fffffffff0102d31 <end+0xfffffffefe661991>$/;"	l
f0102bd4	obj/kern/kernel.asm	/^    f0102bd4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f0102bd8	obj/kern/kernel.asm	/^    f0102bd8:	0f b7 40 08          	movzwl 0x8(%rax),%eax$/;"	l
f0102bdc	obj/kern/kernel.asm	/^    f0102bdc:	8d 50 01             	lea    0x1(%rax),%edx$/;"	l
f0102bdf	obj/kern/kernel.asm	/^    f0102bdf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f0102be3	obj/kern/kernel.asm	/^    f0102be3:	66 89 50 08          	mov    %dx,0x8(%rax)$/;"	l
f0102be7	obj/kern/kernel.asm	/^    f0102be7:	48 8b 45 b0          	mov    -0x50(%rbp),%rax$/;"	l
f0102beb	obj/kern/kernel.asm	/^    f0102beb:	48 c1 e8 1e          	shr    $0x1e,%rax$/;"	l
f0102bef	obj/kern/kernel.asm	/^    f0102bef:	25 ff 01 00 00       	and    $0x1ff,%eax$/;"	l
f0102bf4	obj/kern/kernel.asm	/^    f0102bf4:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f0102bf8	obj/kern/kernel.asm	/^    f0102bf8:	48 89 c3             	mov    %rax,%rbx$/;"	l
f0102bfb	obj/kern/kernel.asm	/^    f0102bfb:	48 03 5d b8          	add    -0x48(%rbp),%rbx$/;"	l
f0102bff	obj/kern/kernel.asm	/^    f0102bff:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f0102c03	obj/kern/kernel.asm	/^    f0102c03:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0102c06	obj/kern/kernel.asm	/^    f0102c06:	48 b8 00 1a 10 f0 00 	mov    $0xf0101a00,%rax$/;"	l
f0102c0d	obj/kern/kernel.asm	/^    f0102c0d:	00 00 00 $/;"	l
f0102c10	obj/kern/kernel.asm	/^    f0102c10:	ff d0                	callq  *%rax$/;"	l
f0102c12	obj/kern/kernel.asm	/^    f0102c12:	48 83 c8 07          	or     $0x7,%rax$/;"	l
f0102c16	obj/kern/kernel.asm	/^    f0102c16:	48 89 03             	mov    %rax,(%rbx)$/;"	l
f0102c19	obj/kern/kernel.asm	/^    f0102c19:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f0102c1d	obj/kern/kernel.asm	/^    f0102c1d:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0102c20	obj/kern/kernel.asm	/^    f0102c20:	48 b8 96 1a 10 f0 00 	mov    $0xf0101a96,%rax$/;"	l
f0102c27	obj/kern/kernel.asm	/^    f0102c27:	00 00 00 $/;"	l
f0102c2a	obj/kern/kernel.asm	/^    f0102c2a:	ff d0                	callq  *%rax$/;"	l
f0102c2c	obj/kern/kernel.asm	/^    f0102c2c:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102c31	obj/kern/kernel.asm	/^    f0102c31:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0102c36	obj/kern/kernel.asm	/^    f0102c36:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0102c39	obj/kern/kernel.asm	/^    f0102c39:	48 b8 42 ee 10 f0 00 	mov    $0xf010ee42,%rax$/;"	l
f0102c40	obj/kern/kernel.asm	/^    f0102c40:	00 00 00 $/;"	l
f0102c43	obj/kern/kernel.asm	/^    f0102c43:	ff d0                	callq  *%rax$/;"	l
f0102c45	obj/kern/kernel.asm	/^    f0102c45:	48 8b 45 b0          	mov    -0x50(%rbp),%rax$/;"	l
f0102c49	obj/kern/kernel.asm	/^    f0102c49:	48 c1 e8 1e          	shr    $0x1e,%rax$/;"	l
f0102c4d	obj/kern/kernel.asm	/^    f0102c4d:	25 ff 01 00 00       	and    $0x1ff,%eax$/;"	l
f0102c52	obj/kern/kernel.asm	/^    f0102c52:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f0102c56	obj/kern/kernel.asm	/^    f0102c56:	48 03 45 b8          	add    -0x48(%rbp),%rax$/;"	l
f0102c5a	obj/kern/kernel.asm	/^    f0102c5a:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0102c5d	obj/kern/kernel.asm	/^    f0102c5d:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
f0102c63	obj/kern/kernel.asm	/^    f0102c63:	48 89 45 e0          	mov    %rax,-0x20(%rbp)$/;"	l
f0102c67	obj/kern/kernel.asm	/^    f0102c67:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
f0102c6b	obj/kern/kernel.asm	/^    f0102c6b:	48 c1 e8 0c          	shr    $0xc,%rax$/;"	l
f0102c6f	obj/kern/kernel.asm	/^    f0102c6f:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
f0102c72	obj/kern/kernel.asm	/^    f0102c72:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
f0102c75	obj/kern/kernel.asm	/^    f0102c75:	48 b8 68 77 a2 f1 00 	mov    $0xf1a27768,%rax$/;"	l
f0102c7c	obj/kern/kernel.asm	/^    f0102c7c:	00 00 00 $/;"	l
f0102c7f	obj/kern/kernel.asm	/^    f0102c7f:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0102c82	obj/kern/kernel.asm	/^    f0102c82:	48 39 c2             	cmp    %rax,%rdx$/;"	l
f0102c85	obj/kern/kernel.asm	/^    f0102c85:	72 31                	jb     fffffffff0102cb8 <end+0xfffffffefe661918>$/;"	l
f0102c87	obj/kern/kernel.asm	/^    f0102c87:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
f0102c8b	obj/kern/kernel.asm	/^    f0102c8b:	48 89 c1             	mov    %rax,%rcx$/;"	l
f0102c8e	obj/kern/kernel.asm	/^    f0102c8e:	48 ba 78 18 11 f0 00 	mov    $0xf0111878,%rdx$/;"	l
f0102c95	obj/kern/kernel.asm	/^    f0102c95:	00 00 00 $/;"	l
f0102c98	obj/kern/kernel.asm	/^    f0102c98:	be fa 01 00 00       	mov    $0x1fa,%esi$/;"	l
f0102c9d	obj/kern/kernel.asm	/^    f0102c9d:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0102ca4	obj/kern/kernel.asm	/^    f0102ca4:	00 00 00 $/;"	l
f0102ca7	obj/kern/kernel.asm	/^    f0102ca7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102cac	obj/kern/kernel.asm	/^    f0102cac:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0102cb3	obj/kern/kernel.asm	/^    f0102cb3:	00 00 00 $/;"	l
f0102cb6	obj/kern/kernel.asm	/^    f0102cb6:	ff d3                	callq  *%rbx$/;"	l
f0102cb8	obj/kern/kernel.asm	/^    f0102cb8:	b8 00 00 00 f0       	mov    $0xf0000000,%eax$/;"	l
f0102cbd	obj/kern/kernel.asm	/^    f0102cbd:	48 03 45 e0          	add    -0x20(%rbp),%rax$/;"	l
f0102cc1	obj/kern/kernel.asm	/^    f0102cc1:	48 89 45 d0          	mov    %rax,-0x30(%rbp)$/;"	l
f0102cc5	obj/kern/kernel.asm	/^    f0102cc5:	8b 55 ac             	mov    -0x54(%rbp),%edx$/;"	l
f0102cc8	obj/kern/kernel.asm	/^    f0102cc8:	48 8b 4d b0          	mov    -0x50(%rbp),%rcx$/;"	l
f0102ccc	obj/kern/kernel.asm	/^    f0102ccc:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f0102cd0	obj/kern/kernel.asm	/^    f0102cd0:	48 89 ce             	mov    %rcx,%rsi$/;"	l
f0102cd3	obj/kern/kernel.asm	/^    f0102cd3:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0102cd6	obj/kern/kernel.asm	/^    f0102cd6:	48 b8 38 2d 10 f0 00 	mov    $0xf0102d38,%rax$/;"	l
f0102cdd	obj/kern/kernel.asm	/^    f0102cdd:	00 00 00 $/;"	l
f0102ce0	obj/kern/kernel.asm	/^    f0102ce0:	ff d0                	callq  *%rax$/;"	l
f0102ce2	obj/kern/kernel.asm	/^    f0102ce2:	48 89 45 d8          	mov    %rax,-0x28(%rbp)$/;"	l
f0102ce6	obj/kern/kernel.asm	/^    f0102ce6:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)$/;"	l
f0102ceb	obj/kern/kernel.asm	/^    f0102ceb:	75 40                	jne    fffffffff0102d2d <end+0xfffffffefe66198d>$/;"	l
f0102ced	obj/kern/kernel.asm	/^    f0102ced:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)$/;"	l
f0102cf2	obj/kern/kernel.asm	/^    f0102cf2:	74 39                	je     fffffffff0102d2d <end+0xfffffffefe66198d>$/;"	l
f0102cf4	obj/kern/kernel.asm	/^    f0102cf4:	48 8b 45 b0          	mov    -0x50(%rbp),%rax$/;"	l
f0102cf8	obj/kern/kernel.asm	/^    f0102cf8:	48 c1 e8 1e          	shr    $0x1e,%rax$/;"	l
f0102cfc	obj/kern/kernel.asm	/^    f0102cfc:	25 ff 01 00 00       	and    $0x1ff,%eax$/;"	l
f0102d01	obj/kern/kernel.asm	/^    f0102d01:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f0102d05	obj/kern/kernel.asm	/^    f0102d05:	48 03 45 b8          	add    -0x48(%rbp),%rax$/;"	l
f0102d09	obj/kern/kernel.asm	/^    f0102d09:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)$/;"	l
f0102d10	obj/kern/kernel.asm	/^    f0102d10:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f0102d14	obj/kern/kernel.asm	/^    f0102d14:	66 c7 40 08 00 00    	movw   $0x0,0x8(%rax)$/;"	l
f0102d1a	obj/kern/kernel.asm	/^    f0102d1a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f0102d1e	obj/kern/kernel.asm	/^    f0102d1e:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0102d21	obj/kern/kernel.asm	/^    f0102d21:	48 b8 b6 28 10 f0 00 	mov    $0xf01028b6,%rax$/;"	l
f0102d28	obj/kern/kernel.asm	/^    f0102d28:	00 00 00 $/;"	l
f0102d2b	obj/kern/kernel.asm	/^    f0102d2b:	ff d0                	callq  *%rax$/;"	l
f0102d2d	obj/kern/kernel.asm	/^    f0102d2d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f0102d31	obj/kern/kernel.asm	/^    f0102d31:	48 83 c4 58          	add    $0x58,%rsp$/;"	l
f0102d35	obj/kern/kernel.asm	/^    f0102d35:	5b                   	pop    %rbx$/;"	l
f0102d36	obj/kern/kernel.asm	/^    f0102d36:	c9                   	leaveq $/;"	l
f0102d37	obj/kern/kernel.asm	/^    f0102d37:	c3                   	retq   $/;"	l
f0102d38	obj/kern/kernel.asm	/^    f0102d38:	55                   	push   %rbp$/;"	l
f0102d39	obj/kern/kernel.asm	/^    f0102d39:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f0102d3c	obj/kern/kernel.asm	/^    f0102d3c:	53                   	push   %rbx$/;"	l
f0102d3d	obj/kern/kernel.asm	/^    f0102d3d:	48 83 ec 58          	sub    $0x58,%rsp$/;"	l
f0102d41	obj/kern/kernel.asm	/^    f0102d41:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)$/;"	l
f0102d45	obj/kern/kernel.asm	/^    f0102d45:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)$/;"	l
f0102d49	obj/kern/kernel.asm	/^    f0102d49:	89 55 ac             	mov    %edx,-0x54(%rbp)$/;"	l
f0102d4c	obj/kern/kernel.asm	/^    f0102d4c:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)$/;"	l
f0102d53	obj/kern/kernel.asm	/^    f0102d53:	00 $/;"	l
f0102d54	obj/kern/kernel.asm	/^    f0102d54:	48 8b 45 b0          	mov    -0x50(%rbp),%rax$/;"	l
f0102d58	obj/kern/kernel.asm	/^    f0102d58:	48 c1 e8 15          	shr    $0x15,%rax$/;"	l
f0102d5c	obj/kern/kernel.asm	/^    f0102d5c:	25 ff 01 00 00       	and    $0x1ff,%eax$/;"	l
f0102d61	obj/kern/kernel.asm	/^    f0102d61:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f0102d65	obj/kern/kernel.asm	/^    f0102d65:	48 03 45 b8          	add    -0x48(%rbp),%rax$/;"	l
f0102d69	obj/kern/kernel.asm	/^    f0102d69:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0102d6c	obj/kern/kernel.asm	/^    f0102d6c:	48 85 c0             	test   %rax,%rax$/;"	l
f0102d6f	obj/kern/kernel.asm	/^    f0102d6f:	0f 85 a7 00 00 00    	jne    fffffffff0102e1c <end+0xfffffffefe661a7c>$/;"	l
f0102d75	obj/kern/kernel.asm	/^    f0102d75:	83 7d ac 00          	cmpl   $0x0,-0x54(%rbp)$/;"	l
f0102d79	obj/kern/kernel.asm	/^    f0102d79:	75 0a                	jne    fffffffff0102d85 <end+0xfffffffefe6619e5>$/;"	l
f0102d7b	obj/kern/kernel.asm	/^    f0102d7b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102d80	obj/kern/kernel.asm	/^    f0102d80:	e9 62 01 00 00       	jmpq   fffffffff0102ee7 <end+0xfffffffefe661b47>$/;"	l
f0102d85	obj/kern/kernel.asm	/^    f0102d85:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0102d8a	obj/kern/kernel.asm	/^    f0102d8a:	48 b8 fd 27 10 f0 00 	mov    $0xf01027fd,%rax$/;"	l
f0102d91	obj/kern/kernel.asm	/^    f0102d91:	00 00 00 $/;"	l
f0102d94	obj/kern/kernel.asm	/^    f0102d94:	ff d0                	callq  *%rax$/;"	l
f0102d96	obj/kern/kernel.asm	/^    f0102d96:	48 89 45 d0          	mov    %rax,-0x30(%rbp)$/;"	l
f0102d9a	obj/kern/kernel.asm	/^    f0102d9a:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)$/;"	l
f0102d9f	obj/kern/kernel.asm	/^    f0102d9f:	75 0a                	jne    fffffffff0102dab <end+0xfffffffefe661a0b>$/;"	l
f0102da1	obj/kern/kernel.asm	/^    f0102da1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102da6	obj/kern/kernel.asm	/^    f0102da6:	e9 3c 01 00 00       	jmpq   fffffffff0102ee7 <end+0xfffffffefe661b47>$/;"	l
f0102dab	obj/kern/kernel.asm	/^    f0102dab:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f0102daf	obj/kern/kernel.asm	/^    f0102daf:	0f b7 40 08          	movzwl 0x8(%rax),%eax$/;"	l
f0102db3	obj/kern/kernel.asm	/^    f0102db3:	8d 50 01             	lea    0x1(%rax),%edx$/;"	l
f0102db6	obj/kern/kernel.asm	/^    f0102db6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f0102dba	obj/kern/kernel.asm	/^    f0102dba:	66 89 50 08          	mov    %dx,0x8(%rax)$/;"	l
f0102dbe	obj/kern/kernel.asm	/^    f0102dbe:	48 8b 45 b0          	mov    -0x50(%rbp),%rax$/;"	l
f0102dc2	obj/kern/kernel.asm	/^    f0102dc2:	48 c1 e8 15          	shr    $0x15,%rax$/;"	l
f0102dc6	obj/kern/kernel.asm	/^    f0102dc6:	25 ff 01 00 00       	and    $0x1ff,%eax$/;"	l
f0102dcb	obj/kern/kernel.asm	/^    f0102dcb:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f0102dcf	obj/kern/kernel.asm	/^    f0102dcf:	48 89 c3             	mov    %rax,%rbx$/;"	l
f0102dd2	obj/kern/kernel.asm	/^    f0102dd2:	48 03 5d b8          	add    -0x48(%rbp),%rbx$/;"	l
f0102dd6	obj/kern/kernel.asm	/^    f0102dd6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f0102dda	obj/kern/kernel.asm	/^    f0102dda:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0102ddd	obj/kern/kernel.asm	/^    f0102ddd:	48 b8 00 1a 10 f0 00 	mov    $0xf0101a00,%rax$/;"	l
f0102de4	obj/kern/kernel.asm	/^    f0102de4:	00 00 00 $/;"	l
f0102de7	obj/kern/kernel.asm	/^    f0102de7:	ff d0                	callq  *%rax$/;"	l
f0102de9	obj/kern/kernel.asm	/^    f0102de9:	48 83 c8 07          	or     $0x7,%rax$/;"	l
f0102ded	obj/kern/kernel.asm	/^    f0102ded:	48 89 03             	mov    %rax,(%rbx)$/;"	l
f0102df0	obj/kern/kernel.asm	/^    f0102df0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f0102df4	obj/kern/kernel.asm	/^    f0102df4:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0102df7	obj/kern/kernel.asm	/^    f0102df7:	48 b8 96 1a 10 f0 00 	mov    $0xf0101a96,%rax$/;"	l
f0102dfe	obj/kern/kernel.asm	/^    f0102dfe:	00 00 00 $/;"	l
f0102e01	obj/kern/kernel.asm	/^    f0102e01:	ff d0                	callq  *%rax$/;"	l
f0102e03	obj/kern/kernel.asm	/^    f0102e03:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0102e08	obj/kern/kernel.asm	/^    f0102e08:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0102e0d	obj/kern/kernel.asm	/^    f0102e0d:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0102e10	obj/kern/kernel.asm	/^    f0102e10:	48 b8 42 ee 10 f0 00 	mov    $0xf010ee42,%rax$/;"	l
f0102e17	obj/kern/kernel.asm	/^    f0102e17:	00 00 00 $/;"	l
f0102e1a	obj/kern/kernel.asm	/^    f0102e1a:	ff d0                	callq  *%rax$/;"	l
f0102e1c	obj/kern/kernel.asm	/^    f0102e1c:	48 8b 45 b0          	mov    -0x50(%rbp),%rax$/;"	l
f0102e20	obj/kern/kernel.asm	/^    f0102e20:	48 c1 e8 15          	shr    $0x15,%rax$/;"	l
f0102e24	obj/kern/kernel.asm	/^    f0102e24:	25 ff 01 00 00       	and    $0x1ff,%eax$/;"	l
f0102e29	obj/kern/kernel.asm	/^    f0102e29:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f0102e2d	obj/kern/kernel.asm	/^    f0102e2d:	48 03 45 b8          	add    -0x48(%rbp),%rax$/;"	l
f0102e31	obj/kern/kernel.asm	/^    f0102e31:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0102e34	obj/kern/kernel.asm	/^    f0102e34:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
f0102e3a	obj/kern/kernel.asm	/^    f0102e3a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)$/;"	l
f0102e3e	obj/kern/kernel.asm	/^    f0102e3e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
f0102e42	obj/kern/kernel.asm	/^    f0102e42:	48 c1 e8 0c          	shr    $0xc,%rax$/;"	l
f0102e46	obj/kern/kernel.asm	/^    f0102e46:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
f0102e49	obj/kern/kernel.asm	/^    f0102e49:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
f0102e4c	obj/kern/kernel.asm	/^    f0102e4c:	48 b8 68 77 a2 f1 00 	mov    $0xf1a27768,%rax$/;"	l
f0102e53	obj/kern/kernel.asm	/^    f0102e53:	00 00 00 $/;"	l
f0102e56	obj/kern/kernel.asm	/^    f0102e56:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0102e59	obj/kern/kernel.asm	/^    f0102e59:	48 39 c2             	cmp    %rax,%rdx$/;"	l
f0102e5c	obj/kern/kernel.asm	/^    f0102e5c:	72 31                	jb     fffffffff0102e8f <end+0xfffffffefe661aef>$/;"	l
f0102e5e	obj/kern/kernel.asm	/^    f0102e5e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
f0102e62	obj/kern/kernel.asm	/^    f0102e62:	48 89 c1             	mov    %rax,%rcx$/;"	l
f0102e65	obj/kern/kernel.asm	/^    f0102e65:	48 ba 78 18 11 f0 00 	mov    $0xf0111878,%rdx$/;"	l
f0102e6c	obj/kern/kernel.asm	/^    f0102e6c:	00 00 00 $/;"	l
f0102e6f	obj/kern/kernel.asm	/^    f0102e6f:	be 21 02 00 00       	mov    $0x221,%esi$/;"	l
f0102e74	obj/kern/kernel.asm	/^    f0102e74:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0102e7b	obj/kern/kernel.asm	/^    f0102e7b:	00 00 00 $/;"	l
f0102e7e	obj/kern/kernel.asm	/^    f0102e7e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0102e83	obj/kern/kernel.asm	/^    f0102e83:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0102e8a	obj/kern/kernel.asm	/^    f0102e8a:	00 00 00 $/;"	l
f0102e8d	obj/kern/kernel.asm	/^    f0102e8d:	ff d3                	callq  *%rbx$/;"	l
f0102e8f	obj/kern/kernel.asm	/^    f0102e8f:	b8 00 00 00 f0       	mov    $0xf0000000,%eax$/;"	l
f0102e94	obj/kern/kernel.asm	/^    f0102e94:	48 03 45 e0          	add    -0x20(%rbp),%rax$/;"	l
f0102e98	obj/kern/kernel.asm	/^    f0102e98:	48 89 45 d8          	mov    %rax,-0x28(%rbp)$/;"	l
f0102e9c	obj/kern/kernel.asm	/^    f0102e9c:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)$/;"	l
f0102ea1	obj/kern/kernel.asm	/^    f0102ea1:	75 40                	jne    fffffffff0102ee3 <end+0xfffffffefe661b43>$/;"	l
f0102ea3	obj/kern/kernel.asm	/^    f0102ea3:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)$/;"	l
f0102ea8	obj/kern/kernel.asm	/^    f0102ea8:	74 39                	je     fffffffff0102ee3 <end+0xfffffffefe661b43>$/;"	l
f0102eaa	obj/kern/kernel.asm	/^    f0102eaa:	48 8b 45 b0          	mov    -0x50(%rbp),%rax$/;"	l
f0102eae	obj/kern/kernel.asm	/^    f0102eae:	48 c1 e8 15          	shr    $0x15,%rax$/;"	l
f0102eb2	obj/kern/kernel.asm	/^    f0102eb2:	25 ff 01 00 00       	and    $0x1ff,%eax$/;"	l
f0102eb7	obj/kern/kernel.asm	/^    f0102eb7:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f0102ebb	obj/kern/kernel.asm	/^    f0102ebb:	48 03 45 b8          	add    -0x48(%rbp),%rax$/;"	l
f0102ebf	obj/kern/kernel.asm	/^    f0102ebf:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)$/;"	l
f0102ec6	obj/kern/kernel.asm	/^    f0102ec6:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f0102eca	obj/kern/kernel.asm	/^    f0102eca:	66 c7 40 08 00 00    	movw   $0x0,0x8(%rax)$/;"	l
f0102ed0	obj/kern/kernel.asm	/^    f0102ed0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f0102ed4	obj/kern/kernel.asm	/^    f0102ed4:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0102ed7	obj/kern/kernel.asm	/^    f0102ed7:	48 b8 b6 28 10 f0 00 	mov    $0xf01028b6,%rax$/;"	l
f0102ede	obj/kern/kernel.asm	/^    f0102ede:	00 00 00 $/;"	l
f0102ee1	obj/kern/kernel.asm	/^    f0102ee1:	ff d0                	callq  *%rax$/;"	l
f0102ee3	obj/kern/kernel.asm	/^    f0102ee3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f0102ee7	obj/kern/kernel.asm	/^    f0102ee7:	48 83 c4 58          	add    $0x58,%rsp$/;"	l
f0102eeb	obj/kern/kernel.asm	/^    f0102eeb:	5b                   	pop    %rbx$/;"	l
f0102eec	obj/kern/kernel.asm	/^    f0102eec:	c9                   	leaveq $/;"	l
f0102eed	obj/kern/kernel.asm	/^    f0102eed:	c3                   	retq   $/;"	l
f0102eee	obj/kern/kernel.asm	/^    f0102eee:	55                   	push   %rbp$/;"	l
f0102eef	obj/kern/kernel.asm	/^    f0102eef:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f0102ef2	obj/kern/kernel.asm	/^    f0102ef2:	48 83 ec 50          	sub    $0x50,%rsp$/;"	l
f0102ef6	obj/kern/kernel.asm	/^    f0102ef6:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)$/;"	l
f0102efa	obj/kern/kernel.asm	/^    f0102efa:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)$/;"	l
f0102efe	obj/kern/kernel.asm	/^    f0102efe:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)$/;"	l
f0102f02	obj/kern/kernel.asm	/^    f0102f02:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)$/;"	l
f0102f06	obj/kern/kernel.asm	/^    f0102f06:	44 89 45 bc          	mov    %r8d,-0x44(%rbp)$/;"	l
f0102f0a	obj/kern/kernel.asm	/^    f0102f0a:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)$/;"	l
f0102f11	obj/kern/kernel.asm	/^    f0102f11:	00 $/;"	l
f0102f12	obj/kern/kernel.asm	/^    f0102f12:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)$/;"	l
f0102f19	obj/kern/kernel.asm	/^    f0102f19:	00 $/;"	l
f0102f1a	obj/kern/kernel.asm	/^    f0102f1a:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)$/;"	l
f0102f21	obj/kern/kernel.asm	/^    f0102f21:	00 $/;"	l
f0102f22	obj/kern/kernel.asm	/^    f0102f22:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f0102f26	obj/kern/kernel.asm	/^    f0102f26:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
f0102f2a	obj/kern/kernel.asm	/^    f0102f2a:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
f0102f2e	obj/kern/kernel.asm	/^    f0102f2e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
f0102f32	obj/kern/kernel.asm	/^    f0102f32:	eb 4a                	jmp    fffffffff0102f7e <end+0xfffffffefe661bde>$/;"	l
f0102f34	obj/kern/kernel.asm	/^    f0102f34:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx$/;"	l
f0102f38	obj/kern/kernel.asm	/^    f0102f38:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f0102f3c	obj/kern/kernel.asm	/^    f0102f3c:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
f0102f41	obj/kern/kernel.asm	/^    f0102f41:	48 89 ce             	mov    %rcx,%rsi$/;"	l
f0102f44	obj/kern/kernel.asm	/^    f0102f44:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0102f47	obj/kern/kernel.asm	/^    f0102f47:	48 b8 6c 29 10 f0 00 	mov    $0xf010296c,%rax$/;"	l
f0102f4e	obj/kern/kernel.asm	/^    f0102f4e:	00 00 00 $/;"	l
f0102f51	obj/kern/kernel.asm	/^    f0102f51:	ff d0                	callq  *%rax$/;"	l
f0102f53	obj/kern/kernel.asm	/^    f0102f53:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
f0102f57	obj/kern/kernel.asm	/^    f0102f57:	8b 45 bc             	mov    -0x44(%rbp),%eax$/;"	l
f0102f5a	obj/kern/kernel.asm	/^    f0102f5a:	48 98                	cltq   $/;"	l
f0102f5c	obj/kern/kernel.asm	/^    f0102f5c:	48 0b 45 f8          	or     -0x8(%rbp),%rax$/;"	l
f0102f60	obj/kern/kernel.asm	/^    f0102f60:	48 89 c2             	mov    %rax,%rdx$/;"	l
f0102f63	obj/kern/kernel.asm	/^    f0102f63:	48 83 ca 01          	or     $0x1,%rdx$/;"	l
f0102f67	obj/kern/kernel.asm	/^    f0102f67:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f0102f6b	obj/kern/kernel.asm	/^    f0102f6b:	48 89 10             	mov    %rdx,(%rax)$/;"	l
f0102f6e	obj/kern/kernel.asm	/^    f0102f6e:	48 81 45 f0 00 10 00 	addq   $0x1000,-0x10(%rbp)$/;"	l
f0102f75	obj/kern/kernel.asm	/^    f0102f75:	00 $/;"	l
f0102f76	obj/kern/kernel.asm	/^    f0102f76:	48 81 45 f8 00 10 00 	addq   $0x1000,-0x8(%rbp)$/;"	l
f0102f7d	obj/kern/kernel.asm	/^    f0102f7d:	00 $/;"	l
f0102f7e	obj/kern/kernel.asm	/^    f0102f7e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f0102f82	obj/kern/kernel.asm	/^    f0102f82:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
f0102f86	obj/kern/kernel.asm	/^    f0102f86:	48 89 d1             	mov    %rdx,%rcx$/;"	l
f0102f89	obj/kern/kernel.asm	/^    f0102f89:	48 29 c1             	sub    %rax,%rcx$/;"	l
f0102f8c	obj/kern/kernel.asm	/^    f0102f8c:	48 89 c8             	mov    %rcx,%rax$/;"	l
f0102f8f	obj/kern/kernel.asm	/^    f0102f8f:	48 3b 45 c8          	cmp    -0x38(%rbp),%rax$/;"	l
f0102f93	obj/kern/kernel.asm	/^    f0102f93:	72 9f                	jb     fffffffff0102f34 <end+0xfffffffefe661b94>$/;"	l
f0102f95	obj/kern/kernel.asm	/^    f0102f95:	c9                   	leaveq $/;"	l
f0102f96	obj/kern/kernel.asm	/^    f0102f96:	c3                   	retq   $/;"	l
f0102f97	obj/kern/kernel.asm	/^    f0102f97:	55                   	push   %rbp$/;"	l
f0102f98	obj/kern/kernel.asm	/^    f0102f98:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f0102f9b	obj/kern/kernel.asm	/^    f0102f9b:	53                   	push   %rbx$/;"	l
f0102f9c	obj/kern/kernel.asm	/^    f0102f9c:	48 83 ec 38          	sub    $0x38,%rsp$/;"	l
f0102fa0	obj/kern/kernel.asm	/^    f0102fa0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)$/;"	l
f0102fa4	obj/kern/kernel.asm	/^    f0102fa4:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)$/;"	l
f0102fa8	obj/kern/kernel.asm	/^    f0102fa8:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)$/;"	l
f0102fac	obj/kern/kernel.asm	/^    f0102fac:	89 4d c4             	mov    %ecx,-0x3c(%rbp)$/;"	l
f0102faf	obj/kern/kernel.asm	/^    f0102faf:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx$/;"	l
f0102fb3	obj/kern/kernel.asm	/^    f0102fb3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f0102fb7	obj/kern/kernel.asm	/^    f0102fb7:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
f0102fbc	obj/kern/kernel.asm	/^    f0102fbc:	48 89 ce             	mov    %rcx,%rsi$/;"	l
f0102fbf	obj/kern/kernel.asm	/^    f0102fbf:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0102fc2	obj/kern/kernel.asm	/^    f0102fc2:	48 b8 6c 29 10 f0 00 	mov    $0xf010296c,%rax$/;"	l
f0102fc9	obj/kern/kernel.asm	/^    f0102fc9:	00 00 00 $/;"	l
f0102fcc	obj/kern/kernel.asm	/^    f0102fcc:	ff d0                	callq  *%rax$/;"	l
f0102fce	obj/kern/kernel.asm	/^    f0102fce:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
f0102fd2	obj/kern/kernel.asm	/^    f0102fd2:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)$/;"	l
f0102fd7	obj/kern/kernel.asm	/^    f0102fd7:	75 0a                	jne    fffffffff0102fe3 <end+0xfffffffefe661c43>$/;"	l
f0102fd9	obj/kern/kernel.asm	/^    f0102fd9:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f0102fde	obj/kern/kernel.asm	/^    f0102fde:	e9 b4 00 00 00       	jmpq   fffffffff0103097 <end+0xfffffffefe661cf7>$/;"	l
f0102fe3	obj/kern/kernel.asm	/^    f0102fe3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f0102fe7	obj/kern/kernel.asm	/^    f0102fe7:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0102fea	obj/kern/kernel.asm	/^    f0102fea:	48 89 c3             	mov    %rax,%rbx$/;"	l
f0102fed	obj/kern/kernel.asm	/^    f0102fed:	48 81 e3 00 f0 ff ff 	and    $0xfffffffffffff000,%rbx$/;"	l
f0102ff4	obj/kern/kernel.asm	/^    f0102ff4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f0102ff8	obj/kern/kernel.asm	/^    f0102ff8:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0102ffb	obj/kern/kernel.asm	/^    f0102ffb:	48 b8 00 1a 10 f0 00 	mov    $0xf0101a00,%rax$/;"	l
f0103002	obj/kern/kernel.asm	/^    f0103002:	00 00 00 $/;"	l
f0103005	obj/kern/kernel.asm	/^    f0103005:	ff d0                	callq  *%rax$/;"	l
f0103007	obj/kern/kernel.asm	/^    f0103007:	48 39 c3             	cmp    %rax,%rbx$/;"	l
f010300a	obj/kern/kernel.asm	/^    f010300a:	74 55                	je     fffffffff0103061 <end+0xfffffffefe661cc1>$/;"	l
f010300c	obj/kern/kernel.asm	/^    f010300c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f0103010	obj/kern/kernel.asm	/^    f0103010:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0103013	obj/kern/kernel.asm	/^    f0103013:	48 85 c0             	test   %rax,%rax$/;"	l
f0103016	obj/kern/kernel.asm	/^    f0103016:	74 1a                	je     fffffffff0103032 <end+0xfffffffefe661c92>$/;"	l
f0103018	obj/kern/kernel.asm	/^    f0103018:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx$/;"	l
f010301c	obj/kern/kernel.asm	/^    f010301c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f0103020	obj/kern/kernel.asm	/^    f0103020:	48 89 d6             	mov    %rdx,%rsi$/;"	l
f0103023	obj/kern/kernel.asm	/^    f0103023:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0103026	obj/kern/kernel.asm	/^    f0103026:	48 b8 16 31 10 f0 00 	mov    $0xf0103116,%rax$/;"	l
f010302d	obj/kern/kernel.asm	/^    f010302d:	00 00 00 $/;"	l
f0103030	obj/kern/kernel.asm	/^    f0103030:	ff d0                	callq  *%rax$/;"	l
f0103032	obj/kern/kernel.asm	/^    f0103032:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f0103036	obj/kern/kernel.asm	/^    f0103036:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0103039	obj/kern/kernel.asm	/^    f0103039:	48 b8 00 1a 10 f0 00 	mov    $0xf0101a00,%rax$/;"	l
f0103040	obj/kern/kernel.asm	/^    f0103040:	00 00 00 $/;"	l
f0103043	obj/kern/kernel.asm	/^    f0103043:	ff d0                	callq  *%rax$/;"	l
f0103045	obj/kern/kernel.asm	/^    f0103045:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
f0103049	obj/kern/kernel.asm	/^    f0103049:	48 89 02             	mov    %rax,(%rdx)$/;"	l
f010304c	obj/kern/kernel.asm	/^    f010304c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f0103050	obj/kern/kernel.asm	/^    f0103050:	0f b7 40 08          	movzwl 0x8(%rax),%eax$/;"	l
f0103054	obj/kern/kernel.asm	/^    f0103054:	8d 50 01             	lea    0x1(%rax),%edx$/;"	l
f0103057	obj/kern/kernel.asm	/^    f0103057:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f010305b	obj/kern/kernel.asm	/^    f010305b:	66 89 50 08          	mov    %dx,0x8(%rax)$/;"	l
f010305f	obj/kern/kernel.asm	/^    f010305f:	eb 18                	jmp    fffffffff0103079 <end+0xfffffffefe661cd9>$/;"	l
f0103061	obj/kern/kernel.asm	/^    f0103061:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f0103065	obj/kern/kernel.asm	/^    f0103065:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0103068	obj/kern/kernel.asm	/^    f0103068:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010306b	obj/kern/kernel.asm	/^    f010306b:	48 81 e2 00 f0 ff ff 	and    $0xfffffffffffff000,%rdx$/;"	l
f0103072	obj/kern/kernel.asm	/^    f0103072:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f0103076	obj/kern/kernel.asm	/^    f0103076:	48 89 10             	mov    %rdx,(%rax)$/;"	l
f0103079	obj/kern/kernel.asm	/^    f0103079:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010307d	obj/kern/kernel.asm	/^    f010307d:	48 8b 10             	mov    (%rax),%rdx$/;"	l
f0103080	obj/kern/kernel.asm	/^    f0103080:	8b 45 c4             	mov    -0x3c(%rbp),%eax$/;"	l
f0103083	obj/kern/kernel.asm	/^    f0103083:	83 c8 01             	or     $0x1,%eax$/;"	l
f0103086	obj/kern/kernel.asm	/^    f0103086:	48 98                	cltq   $/;"	l
f0103088	obj/kern/kernel.asm	/^    f0103088:	48 09 c2             	or     %rax,%rdx$/;"	l
f010308b	obj/kern/kernel.asm	/^    f010308b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010308f	obj/kern/kernel.asm	/^    f010308f:	48 89 10             	mov    %rdx,(%rax)$/;"	l
f0103092	obj/kern/kernel.asm	/^    f0103092:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103097	obj/kern/kernel.asm	/^    f0103097:	48 83 c4 38          	add    $0x38,%rsp$/;"	l
f010309b	obj/kern/kernel.asm	/^    f010309b:	5b                   	pop    %rbx$/;"	l
f010309c	obj/kern/kernel.asm	/^    f010309c:	c9                   	leaveq $/;"	l
f010309d	obj/kern/kernel.asm	/^    f010309d:	c3                   	retq   $/;"	l
f010309e	obj/kern/kernel.asm	/^    f010309e:	55                   	push   %rbp$/;"	l
f010309f	obj/kern/kernel.asm	/^    f010309f:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f01030a2	obj/kern/kernel.asm	/^    f01030a2:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
f01030a6	obj/kern/kernel.asm	/^    f01030a6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
f01030aa	obj/kern/kernel.asm	/^    f01030aa:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
f01030ae	obj/kern/kernel.asm	/^    f01030ae:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)$/;"	l
f01030b2	obj/kern/kernel.asm	/^    f01030b2:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx$/;"	l
f01030b6	obj/kern/kernel.asm	/^    f01030b6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f01030ba	obj/kern/kernel.asm	/^    f01030ba:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01030bf	obj/kern/kernel.asm	/^    f01030bf:	48 89 ce             	mov    %rcx,%rsi$/;"	l
f01030c2	obj/kern/kernel.asm	/^    f01030c2:	48 89 c7             	mov    %rax,%rdi$/;"	l
f01030c5	obj/kern/kernel.asm	/^    f01030c5:	48 b8 6c 29 10 f0 00 	mov    $0xf010296c,%rax$/;"	l
f01030cc	obj/kern/kernel.asm	/^    f01030cc:	00 00 00 $/;"	l
f01030cf	obj/kern/kernel.asm	/^    f01030cf:	ff d0                	callq  *%rax$/;"	l
f01030d1	obj/kern/kernel.asm	/^    f01030d1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
f01030d5	obj/kern/kernel.asm	/^    f01030d5:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)$/;"	l
f01030dc	obj/kern/kernel.asm	/^    f01030dc:	00 $/;"	l
f01030dd	obj/kern/kernel.asm	/^    f01030dd:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)$/;"	l
f01030e2	obj/kern/kernel.asm	/^    f01030e2:	74 2c                	je     fffffffff0103110 <end+0xfffffffefe661d70>$/;"	l
f01030e4	obj/kern/kernel.asm	/^    f01030e4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
f01030e8	obj/kern/kernel.asm	/^    f01030e8:	48 8b 00             	mov    (%rax),%rax$/;"	l
f01030eb	obj/kern/kernel.asm	/^    f01030eb:	48 89 c7             	mov    %rax,%rdi$/;"	l
f01030ee	obj/kern/kernel.asm	/^    f01030ee:	48 b8 25 1a 10 f0 00 	mov    $0xf0101a25,%rax$/;"	l
f01030f5	obj/kern/kernel.asm	/^    f01030f5:	00 00 00 $/;"	l
f01030f8	obj/kern/kernel.asm	/^    f01030f8:	ff d0                	callq  *%rax$/;"	l
f01030fa	obj/kern/kernel.asm	/^    f01030fa:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
f01030fe	obj/kern/kernel.asm	/^    f01030fe:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)$/;"	l
f0103103	obj/kern/kernel.asm	/^    f0103103:	74 0b                	je     fffffffff0103110 <end+0xfffffffefe661d70>$/;"	l
f0103105	obj/kern/kernel.asm	/^    f0103105:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f0103109	obj/kern/kernel.asm	/^    f0103109:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
f010310d	obj/kern/kernel.asm	/^    f010310d:	48 89 10             	mov    %rdx,(%rax)$/;"	l
f0103110	obj/kern/kernel.asm	/^    f0103110:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f0103114	obj/kern/kernel.asm	/^    f0103114:	c9                   	leaveq $/;"	l
f0103115	obj/kern/kernel.asm	/^    f0103115:	c3                   	retq   $/;"	l
f0103116	obj/kern/kernel.asm	/^    f0103116:	55                   	push   %rbp$/;"	l
f0103117	obj/kern/kernel.asm	/^    f0103117:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010311a	obj/kern/kernel.asm	/^    f010311a:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
f010311e	obj/kern/kernel.asm	/^    f010311e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
f0103122	obj/kern/kernel.asm	/^    f0103122:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
f0103126	obj/kern/kernel.asm	/^    f0103126:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)$/;"	l
f010312d	obj/kern/kernel.asm	/^    f010312d:	00 $/;"	l
f010312e	obj/kern/kernel.asm	/^    f010312e:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx$/;"	l
f0103132	obj/kern/kernel.asm	/^    f0103132:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx$/;"	l
f0103136	obj/kern/kernel.asm	/^    f0103136:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010313a	obj/kern/kernel.asm	/^    f010313a:	48 89 ce             	mov    %rcx,%rsi$/;"	l
f010313d	obj/kern/kernel.asm	/^    f010313d:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0103140	obj/kern/kernel.asm	/^    f0103140:	48 b8 9e 30 10 f0 00 	mov    $0xf010309e,%rax$/;"	l
f0103147	obj/kern/kernel.asm	/^    f0103147:	00 00 00 $/;"	l
f010314a	obj/kern/kernel.asm	/^    f010314a:	ff d0                	callq  *%rax$/;"	l
f010314c	obj/kern/kernel.asm	/^    f010314c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
f0103150	obj/kern/kernel.asm	/^    f0103150:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)$/;"	l
f0103155	obj/kern/kernel.asm	/^    f0103155:	74 38                	je     fffffffff010318f <end+0xfffffffefe661def>$/;"	l
f0103157	obj/kern/kernel.asm	/^    f0103157:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f010315b	obj/kern/kernel.asm	/^    f010315b:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010315e	obj/kern/kernel.asm	/^    f010315e:	48 b8 2b 29 10 f0 00 	mov    $0xf010292b,%rax$/;"	l
f0103165	obj/kern/kernel.asm	/^    f0103165:	00 00 00 $/;"	l
f0103168	obj/kern/kernel.asm	/^    f0103168:	ff d0                	callq  *%rax$/;"	l
f010316a	obj/kern/kernel.asm	/^    f010316a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
f010316e	obj/kern/kernel.asm	/^    f010316e:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)$/;"	l
f0103175	obj/kern/kernel.asm	/^    f0103175:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx$/;"	l
f0103179	obj/kern/kernel.asm	/^    f0103179:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010317d	obj/kern/kernel.asm	/^    f010317d:	48 89 d6             	mov    %rdx,%rsi$/;"	l
f0103180	obj/kern/kernel.asm	/^    f0103180:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0103183	obj/kern/kernel.asm	/^    f0103183:	48 b8 91 31 10 f0 00 	mov    $0xf0103191,%rax$/;"	l
f010318a	obj/kern/kernel.asm	/^    f010318a:	00 00 00 $/;"	l
f010318d	obj/kern/kernel.asm	/^    f010318d:	ff d0                	callq  *%rax$/;"	l
f010318f	obj/kern/kernel.asm	/^    f010318f:	c9                   	leaveq $/;"	l
f0103190	obj/kern/kernel.asm	/^    f0103190:	c3                   	retq   $/;"	l
f0103191	obj/kern/kernel.asm	/^    f0103191:	55                   	push   %rbp$/;"	l
f0103192	obj/kern/kernel.asm	/^    f0103192:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f0103195	obj/kern/kernel.asm	/^    f0103195:	53                   	push   %rbx$/;"	l
f0103196	obj/kern/kernel.asm	/^    f0103196:	48 83 ec 28          	sub    $0x28,%rsp$/;"	l
f010319a	obj/kern/kernel.asm	/^    f010319a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)$/;"	l
f010319e	obj/kern/kernel.asm	/^    f010319e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)$/;"	l
f01031a2	obj/kern/kernel.asm	/^    f01031a2:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)$/;"	l
f01031a7	obj/kern/kernel.asm	/^    f01031a7:	75 34                	jne    fffffffff01031dd <end+0xfffffffefe661e3d>$/;"	l
f01031a9	obj/kern/kernel.asm	/^    f01031a9:	48 b9 10 19 11 f0 00 	mov    $0xf0111910,%rcx$/;"	l
f01031b0	obj/kern/kernel.asm	/^    f01031b0:	00 00 00 $/;"	l
f01031b3	obj/kern/kernel.asm	/^    f01031b3:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f01031ba	obj/kern/kernel.asm	/^    f01031ba:	00 00 00 $/;"	l
f01031bd	obj/kern/kernel.asm	/^    f01031bd:	be be 02 00 00       	mov    $0x2be,%esi$/;"	l
f01031c2	obj/kern/kernel.asm	/^    f01031c2:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f01031c9	obj/kern/kernel.asm	/^    f01031c9:	00 00 00 $/;"	l
f01031cc	obj/kern/kernel.asm	/^    f01031cc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01031d1	obj/kern/kernel.asm	/^    f01031d1:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f01031d8	obj/kern/kernel.asm	/^    f01031d8:	00 00 00 $/;"	l
f01031db	obj/kern/kernel.asm	/^    f01031db:	ff d3                	callq  *%rbx$/;"	l
f01031dd	obj/kern/kernel.asm	/^    f01031dd:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f01031e4	obj/kern/kernel.asm	/^    f01031e4:	00 00 00 $/;"	l
f01031e7	obj/kern/kernel.asm	/^    f01031e7:	ff d0                	callq  *%rax$/;"	l
f01031e9	obj/kern/kernel.asm	/^    f01031e9:	48 98                	cltq   $/;"	l
f01031eb	obj/kern/kernel.asm	/^    f01031eb:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f01031ef	obj/kern/kernel.asm	/^    f01031ef:	48 89 c2             	mov    %rax,%rdx$/;"	l
f01031f2	obj/kern/kernel.asm	/^    f01031f2:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f01031f6	obj/kern/kernel.asm	/^    f01031f6:	48 29 c2             	sub    %rax,%rdx$/;"	l
f01031f9	obj/kern/kernel.asm	/^    f01031f9:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f0103200	obj/kern/kernel.asm	/^    f0103200:	00 00 00 $/;"	l
f0103203	obj/kern/kernel.asm	/^    f0103203:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f0103207	obj/kern/kernel.asm	/^    f0103207:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
f010320b	obj/kern/kernel.asm	/^    f010320b:	48 85 c0             	test   %rax,%rax$/;"	l
f010320e	obj/kern/kernel.asm	/^    f010320e:	74 3b                	je     fffffffff010324b <end+0xfffffffefe661eab>$/;"	l
f0103210	obj/kern/kernel.asm	/^    f0103210:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f0103217	obj/kern/kernel.asm	/^    f0103217:	00 00 00 $/;"	l
f010321a	obj/kern/kernel.asm	/^    f010321a:	ff d0                	callq  *%rax$/;"	l
f010321c	obj/kern/kernel.asm	/^    f010321c:	48 98                	cltq   $/;"	l
f010321e	obj/kern/kernel.asm	/^    f010321e:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f0103222	obj/kern/kernel.asm	/^    f0103222:	48 89 c2             	mov    %rax,%rdx$/;"	l
f0103225	obj/kern/kernel.asm	/^    f0103225:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f0103229	obj/kern/kernel.asm	/^    f0103229:	48 29 c2             	sub    %rax,%rdx$/;"	l
f010322c	obj/kern/kernel.asm	/^    f010322c:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f0103233	obj/kern/kernel.asm	/^    f0103233:	00 00 00 $/;"	l
f0103236	obj/kern/kernel.asm	/^    f0103236:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010323a	obj/kern/kernel.asm	/^    f010323a:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
f010323e	obj/kern/kernel.asm	/^    f010323e:	48 8b 80 e0 00 00 00 	mov    0xe0(%rax),%rax$/;"	l
f0103245	obj/kern/kernel.asm	/^    f0103245:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax$/;"	l
f0103249	obj/kern/kernel.asm	/^    f0103249:	75 0f                	jne    fffffffff010325a <end+0xfffffffefe661eba>$/;"	l
f010324b	obj/kern/kernel.asm	/^    f010324b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f010324f	obj/kern/kernel.asm	/^    f010324f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
f0103253	obj/kern/kernel.asm	/^    f0103253:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f0103257	obj/kern/kernel.asm	/^    f0103257:	0f 01 38             	invlpg (%rax)$/;"	l
f010325a	obj/kern/kernel.asm	/^    f010325a:	48 83 c4 28          	add    $0x28,%rsp$/;"	l
f010325e	obj/kern/kernel.asm	/^    f010325e:	5b                   	pop    %rbx$/;"	l
f010325f	obj/kern/kernel.asm	/^    f010325f:	c9                   	leaveq $/;"	l
f0103260	obj/kern/kernel.asm	/^    f0103260:	c3                   	retq   $/;"	l
f0103261	obj/kern/kernel.asm	/^    f0103261:	55                   	push   %rbp$/;"	l
f0103262	obj/kern/kernel.asm	/^    f0103262:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f0103265	obj/kern/kernel.asm	/^    f0103265:	53                   	push   %rbx$/;"	l
f0103266	obj/kern/kernel.asm	/^    f0103266:	48 83 ec 38          	sub    $0x38,%rsp$/;"	l
f010326a	obj/kern/kernel.asm	/^    f010326a:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)$/;"	l
f010326e	obj/kern/kernel.asm	/^    f010326e:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)$/;"	l
f0103272	obj/kern/kernel.asm	/^    f0103272:	48 c7 45 e0 00 10 00 	movq   $0x1000,-0x20(%rbp)$/;"	l
f0103279	obj/kern/kernel.asm	/^    f0103279:	00 $/;"	l
f010327a	obj/kern/kernel.asm	/^    f010327a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
f010327e	obj/kern/kernel.asm	/^    f010327e:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx$/;"	l
f0103282	obj/kern/kernel.asm	/^    f0103282:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f0103286	obj/kern/kernel.asm	/^    f0103286:	48 83 e8 01          	sub    $0x1,%rax$/;"	l
f010328a	obj/kern/kernel.asm	/^    f010328a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
f010328e	obj/kern/kernel.asm	/^    f010328e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f0103292	obj/kern/kernel.asm	/^    f0103292:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0103297	obj/kern/kernel.asm	/^    f0103297:	48 f7 75 e0          	divq   -0x20(%rbp)$/;"	l
f010329b	obj/kern/kernel.asm	/^    f010329b:	48 89 d0             	mov    %rdx,%rax$/;"	l
f010329e	obj/kern/kernel.asm	/^    f010329e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
f01032a2	obj/kern/kernel.asm	/^    f01032a2:	48 89 d1             	mov    %rdx,%rcx$/;"	l
f01032a5	obj/kern/kernel.asm	/^    f01032a5:	48 29 c1             	sub    %rax,%rcx$/;"	l
f01032a8	obj/kern/kernel.asm	/^    f01032a8:	48 89 c8             	mov    %rcx,%rax$/;"	l
f01032ab	obj/kern/kernel.asm	/^    f01032ab:	48 89 45 c0          	mov    %rax,-0x40(%rbp)$/;"	l
f01032af	obj/kern/kernel.asm	/^    f01032af:	48 b8 a8 05 13 f0 00 	mov    $0xf01305a8,%rax$/;"	l
f01032b6	obj/kern/kernel.asm	/^    f01032b6:	00 00 00 $/;"	l
f01032b9	obj/kern/kernel.asm	/^    f01032b9:	48 8b 00             	mov    (%rax),%rax$/;"	l
f01032bc	obj/kern/kernel.asm	/^    f01032bc:	48 89 c2             	mov    %rax,%rdx$/;"	l
f01032bf	obj/kern/kernel.asm	/^    f01032bf:	48 03 55 c0          	add    -0x40(%rbp),%rdx$/;"	l
f01032c3	obj/kern/kernel.asm	/^    f01032c3:	b8 ff ff df ef       	mov    $0xefdfffff,%eax$/;"	l
f01032c8	obj/kern/kernel.asm	/^    f01032c8:	48 39 c2             	cmp    %rax,%rdx$/;"	l
f01032cb	obj/kern/kernel.asm	/^    f01032cb:	76 2a                	jbe    fffffffff01032f7 <end+0xfffffffefe661f57>$/;"	l
f01032cd	obj/kern/kernel.asm	/^    f01032cd:	48 ba 38 19 11 f0 00 	mov    $0xf0111938,%rdx$/;"	l
f01032d4	obj/kern/kernel.asm	/^    f01032d4:	00 00 00 $/;"	l
f01032d7	obj/kern/kernel.asm	/^    f01032d7:	be e7 02 00 00       	mov    $0x2e7,%esi$/;"	l
f01032dc	obj/kern/kernel.asm	/^    f01032dc:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f01032e3	obj/kern/kernel.asm	/^    f01032e3:	00 00 00 $/;"	l
f01032e6	obj/kern/kernel.asm	/^    f01032e6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01032eb	obj/kern/kernel.asm	/^    f01032eb:	48 b9 18 05 10 f0 00 	mov    $0xf0100518,%rcx$/;"	l
f01032f2	obj/kern/kernel.asm	/^    f01032f2:	00 00 00 $/;"	l
f01032f5	obj/kern/kernel.asm	/^    f01032f5:	ff d1                	callq  *%rcx$/;"	l
f01032f7	obj/kern/kernel.asm	/^    f01032f7:	48 b8 a8 05 13 f0 00 	mov    $0xf01305a8,%rax$/;"	l
f01032fe	obj/kern/kernel.asm	/^    f01032fe:	00 00 00 $/;"	l
f0103301	obj/kern/kernel.asm	/^    f0103301:	48 8b 18             	mov    (%rax),%rbx$/;"	l
f0103304	obj/kern/kernel.asm	/^    f0103304:	48 b8 60 77 a2 f1 00 	mov    $0xf1a27760,%rax$/;"	l
f010330b	obj/kern/kernel.asm	/^    f010330b:	00 00 00 $/;"	l
f010330e	obj/kern/kernel.asm	/^    f010330e:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0103311	obj/kern/kernel.asm	/^    f0103311:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx$/;"	l
f0103315	obj/kern/kernel.asm	/^    f0103315:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx$/;"	l
f0103319	obj/kern/kernel.asm	/^    f0103319:	41 b8 1a 00 00 00    	mov    $0x1a,%r8d$/;"	l
f010331f	obj/kern/kernel.asm	/^    f010331f:	48 89 de             	mov    %rbx,%rsi$/;"	l
f0103322	obj/kern/kernel.asm	/^    f0103322:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0103325	obj/kern/kernel.asm	/^    f0103325:	48 b8 ee 2e 10 f0 00 	mov    $0xf0102eee,%rax$/;"	l
f010332c	obj/kern/kernel.asm	/^    f010332c:	00 00 00 $/;"	l
f010332f	obj/kern/kernel.asm	/^    f010332f:	ff d0                	callq  *%rax$/;"	l
f0103331	obj/kern/kernel.asm	/^    f0103331:	48 b8 a8 05 13 f0 00 	mov    $0xf01305a8,%rax$/;"	l
f0103338	obj/kern/kernel.asm	/^    f0103338:	00 00 00 $/;"	l
f010333b	obj/kern/kernel.asm	/^    f010333b:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010333e	obj/kern/kernel.asm	/^    f010333e:	48 89 45 d8          	mov    %rax,-0x28(%rbp)$/;"	l
f0103342	obj/kern/kernel.asm	/^    f0103342:	48 b8 a8 05 13 f0 00 	mov    $0xf01305a8,%rax$/;"	l
f0103349	obj/kern/kernel.asm	/^    f0103349:	00 00 00 $/;"	l
f010334c	obj/kern/kernel.asm	/^    f010334c:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010334f	obj/kern/kernel.asm	/^    f010334f:	48 89 c2             	mov    %rax,%rdx$/;"	l
f0103352	obj/kern/kernel.asm	/^    f0103352:	48 03 55 c0          	add    -0x40(%rbp),%rdx$/;"	l
f0103356	obj/kern/kernel.asm	/^    f0103356:	48 b8 a8 05 13 f0 00 	mov    $0xf01305a8,%rax$/;"	l
f010335d	obj/kern/kernel.asm	/^    f010335d:	00 00 00 $/;"	l
f0103360	obj/kern/kernel.asm	/^    f0103360:	48 89 10             	mov    %rdx,(%rax)$/;"	l
f0103363	obj/kern/kernel.asm	/^    f0103363:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f0103367	obj/kern/kernel.asm	/^    f0103367:	48 83 c4 38          	add    $0x38,%rsp$/;"	l
f010336b	obj/kern/kernel.asm	/^    f010336b:	5b                   	pop    %rbx$/;"	l
f010336c	obj/kern/kernel.asm	/^    f010336c:	c9                   	leaveq $/;"	l
f010336d	obj/kern/kernel.asm	/^    f010336d:	c3                   	retq   $/;"	l
f010336e	obj/kern/kernel.asm	/^    f010336e:	55                   	push   %rbp$/;"	l
f010336f	obj/kern/kernel.asm	/^    f010336f:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f0103372	obj/kern/kernel.asm	/^    f0103372:	48 83 ec 50          	sub    $0x50,%rsp$/;"	l
f0103376	obj/kern/kernel.asm	/^    f0103376:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)$/;"	l
f010337a	obj/kern/kernel.asm	/^    f010337a:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)$/;"	l
f010337e	obj/kern/kernel.asm	/^    f010337e:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)$/;"	l
f0103382	obj/kern/kernel.asm	/^    f0103382:	89 4d b4             	mov    %ecx,-0x4c(%rbp)$/;"	l
f0103385	obj/kern/kernel.asm	/^    f0103385:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)$/;"	l
f010338c	obj/kern/kernel.asm	/^    f010338c:	00 $/;"	l
f010338d	obj/kern/kernel.asm	/^    f010338d:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)$/;"	l
f0103394	obj/kern/kernel.asm	/^    f0103394:	00 $/;"	l
f0103395	obj/kern/kernel.asm	/^    f0103395:	48 c7 45 e8 00 10 00 	movq   $0x1000,-0x18(%rbp)$/;"	l
f010339c	obj/kern/kernel.asm	/^    f010339c:	00 $/;"	l
f010339d	obj/kern/kernel.asm	/^    f010339d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
f01033a1	obj/kern/kernel.asm	/^    f01033a1:	48 03 45 b8          	add    -0x48(%rbp),%rax$/;"	l
f01033a5	obj/kern/kernel.asm	/^    f01033a5:	48 03 45 e8          	add    -0x18(%rbp),%rax$/;"	l
f01033a9	obj/kern/kernel.asm	/^    f01033a9:	48 83 e8 01          	sub    $0x1,%rax$/;"	l
f01033ad	obj/kern/kernel.asm	/^    f01033ad:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
f01033b1	obj/kern/kernel.asm	/^    f01033b1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
f01033b5	obj/kern/kernel.asm	/^    f01033b5:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01033ba	obj/kern/kernel.asm	/^    f01033ba:	48 f7 75 e8          	divq   -0x18(%rbp)$/;"	l
f01033be	obj/kern/kernel.asm	/^    f01033be:	48 89 d0             	mov    %rdx,%rax$/;"	l
f01033c1	obj/kern/kernel.asm	/^    f01033c1:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
f01033c5	obj/kern/kernel.asm	/^    f01033c5:	48 89 d1             	mov    %rdx,%rcx$/;"	l
f01033c8	obj/kern/kernel.asm	/^    f01033c8:	48 29 c1             	sub    %rax,%rcx$/;"	l
f01033cb	obj/kern/kernel.asm	/^    f01033cb:	48 89 c8             	mov    %rcx,%rax$/;"	l
f01033ce	obj/kern/kernel.asm	/^    f01033ce:	48 89 45 e0          	mov    %rax,-0x20(%rbp)$/;"	l
f01033d2	obj/kern/kernel.asm	/^    f01033d2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
f01033d6	obj/kern/kernel.asm	/^    f01033d6:	48 89 c2             	mov    %rax,%rdx$/;"	l
f01033d9	obj/kern/kernel.asm	/^    f01033d9:	48 03 55 b8          	add    -0x48(%rbp),%rdx$/;"	l
f01033dd	obj/kern/kernel.asm	/^    f01033dd:	b8 ff ff bf ef       	mov    $0xefbfffff,%eax$/;"	l
f01033e2	obj/kern/kernel.asm	/^    f01033e2:	48 39 c2             	cmp    %rax,%rdx$/;"	l
f01033e5	obj/kern/kernel.asm	/^    f01033e5:	76 1b                	jbe    fffffffff0103402 <end+0xfffffffefe662062>$/;"	l
f01033e7	obj/kern/kernel.asm	/^    f01033e7:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx$/;"	l
f01033eb	obj/kern/kernel.asm	/^    f01033eb:	48 b8 48 62 a2 f1 00 	mov    $0xf1a26248,%rax$/;"	l
f01033f2	obj/kern/kernel.asm	/^    f01033f2:	00 00 00 $/;"	l
f01033f5	obj/kern/kernel.asm	/^    f01033f5:	48 89 10             	mov    %rdx,(%rax)$/;"	l
f01033f8	obj/kern/kernel.asm	/^    f01033f8:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f01033fd	obj/kern/kernel.asm	/^    f01033fd:	e9 ae 00 00 00       	jmpq   fffffffff01034b0 <end+0xfffffffefe662110>$/;"	l
f0103402	obj/kern/kernel.asm	/^    f0103402:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
f0103406	obj/kern/kernel.asm	/^    f0103406:	48 89 45 d8          	mov    %rax,-0x28(%rbp)$/;"	l
f010340a	obj/kern/kernel.asm	/^    f010340a:	e9 8e 00 00 00       	jmpq   fffffffff010349d <end+0xfffffffefe6620fd>$/;"	l
f010340f	obj/kern/kernel.asm	/^    f010340f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f0103413	obj/kern/kernel.asm	/^    f0103413:	48 8b 80 e0 00 00 00 	mov    0xe0(%rax),%rax$/;"	l
f010341a	obj/kern/kernel.asm	/^    f010341a:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx$/;"	l
f010341e	obj/kern/kernel.asm	/^    f010341e:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0103423	obj/kern/kernel.asm	/^    f0103423:	48 89 ce             	mov    %rcx,%rsi$/;"	l
f0103426	obj/kern/kernel.asm	/^    f0103426:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0103429	obj/kern/kernel.asm	/^    f0103429:	48 b8 6c 29 10 f0 00 	mov    $0xf010296c,%rax$/;"	l
f0103430	obj/kern/kernel.asm	/^    f0103430:	00 00 00 $/;"	l
f0103433	obj/kern/kernel.asm	/^    f0103433:	ff d0                	callq  *%rax$/;"	l
f0103435	obj/kern/kernel.asm	/^    f0103435:	48 89 45 d0          	mov    %rax,-0x30(%rbp)$/;"	l
f0103439	obj/kern/kernel.asm	/^    f0103439:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)$/;"	l
f010343e	obj/kern/kernel.asm	/^    f010343e:	74 1f                	je     fffffffff010345f <end+0xfffffffefe6620bf>$/;"	l
f0103440	obj/kern/kernel.asm	/^    f0103440:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f0103444	obj/kern/kernel.asm	/^    f0103444:	48 8b 10             	mov    (%rax),%rdx$/;"	l
f0103447	obj/kern/kernel.asm	/^    f0103447:	8b 45 b4             	mov    -0x4c(%rbp),%eax$/;"	l
f010344a	obj/kern/kernel.asm	/^    f010344a:	83 c8 01             	or     $0x1,%eax$/;"	l
f010344d	obj/kern/kernel.asm	/^    f010344d:	48 98                	cltq   $/;"	l
f010344f	obj/kern/kernel.asm	/^    f010344f:	48 21 c2             	and    %rax,%rdx$/;"	l
f0103452	obj/kern/kernel.asm	/^    f0103452:	8b 45 b4             	mov    -0x4c(%rbp),%eax$/;"	l
f0103455	obj/kern/kernel.asm	/^    f0103455:	83 c8 01             	or     $0x1,%eax$/;"	l
f0103458	obj/kern/kernel.asm	/^    f0103458:	48 98                	cltq   $/;"	l
f010345a	obj/kern/kernel.asm	/^    f010345a:	48 39 c2             	cmp    %rax,%rdx$/;"	l
f010345d	obj/kern/kernel.asm	/^    f010345d:	74 36                	je     fffffffff0103495 <end+0xfffffffefe6620f5>$/;"	l
f010345f	obj/kern/kernel.asm	/^    f010345f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f0103463	obj/kern/kernel.asm	/^    f0103463:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax$/;"	l
f0103467	obj/kern/kernel.asm	/^    f0103467:	75 06                	jne    fffffffff010346f <end+0xfffffffefe6620cf>$/;"	l
f0103469	obj/kern/kernel.asm	/^    f0103469:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
f010346d	obj/kern/kernel.asm	/^    f010346d:	eb 12                	jmp    fffffffff0103481 <end+0xfffffffefe6620e1>$/;"	l
f010346f	obj/kern/kernel.asm	/^    f010346f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f0103473	obj/kern/kernel.asm	/^    f0103473:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
f0103477	obj/kern/kernel.asm	/^    f0103477:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f010347b	obj/kern/kernel.asm	/^    f010347b:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
f0103481	obj/kern/kernel.asm	/^    f0103481:	48 ba 48 62 a2 f1 00 	mov    $0xf1a26248,%rdx$/;"	l
f0103488	obj/kern/kernel.asm	/^    f0103488:	00 00 00 $/;"	l
f010348b	obj/kern/kernel.asm	/^    f010348b:	48 89 02             	mov    %rax,(%rdx)$/;"	l
f010348e	obj/kern/kernel.asm	/^    f010348e:	b8 fa ff ff ff       	mov    $0xfffffffa,%eax$/;"	l
f0103493	obj/kern/kernel.asm	/^    f0103493:	eb 1b                	jmp    fffffffff01034b0 <end+0xfffffffefe662110>$/;"	l
f0103495	obj/kern/kernel.asm	/^    f0103495:	48 81 45 d8 00 10 00 	addq   $0x1000,-0x28(%rbp)$/;"	l
f010349c	obj/kern/kernel.asm	/^    f010349c:	00 $/;"	l
f010349d	obj/kern/kernel.asm	/^    f010349d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f01034a1	obj/kern/kernel.asm	/^    f01034a1:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax$/;"	l
f01034a5	obj/kern/kernel.asm	/^    f01034a5:	0f 82 64 ff ff ff    	jb     fffffffff010340f <end+0xfffffffefe66206f>$/;"	l
f01034ab	obj/kern/kernel.asm	/^    f01034ab:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01034b0	obj/kern/kernel.asm	/^    f01034b0:	c9                   	leaveq $/;"	l
f01034b1	obj/kern/kernel.asm	/^    f01034b1:	c3                   	retq   $/;"	l
f01034b2	obj/kern/kernel.asm	/^    f01034b2:	55                   	push   %rbp$/;"	l
f01034b3	obj/kern/kernel.asm	/^    f01034b3:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f01034b6	obj/kern/kernel.asm	/^    f01034b6:	53                   	push   %rbx$/;"	l
f01034b7	obj/kern/kernel.asm	/^    f01034b7:	48 83 ec 28          	sub    $0x28,%rsp$/;"	l
f01034bb	obj/kern/kernel.asm	/^    f01034bb:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
f01034bf	obj/kern/kernel.asm	/^    f01034bf:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
f01034c3	obj/kern/kernel.asm	/^    f01034c3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)$/;"	l
f01034c7	obj/kern/kernel.asm	/^    f01034c7:	89 4d d4             	mov    %ecx,-0x2c(%rbp)$/;"	l
f01034ca	obj/kern/kernel.asm	/^    f01034ca:	8b 45 d4             	mov    -0x2c(%rbp),%eax$/;"	l
f01034cd	obj/kern/kernel.asm	/^    f01034cd:	89 c1                	mov    %eax,%ecx$/;"	l
f01034cf	obj/kern/kernel.asm	/^    f01034cf:	83 c9 04             	or     $0x4,%ecx$/;"	l
f01034d2	obj/kern/kernel.asm	/^    f01034d2:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx$/;"	l
f01034d6	obj/kern/kernel.asm	/^    f01034d6:	48 8b 5d e0          	mov    -0x20(%rbp),%rbx$/;"	l
f01034da	obj/kern/kernel.asm	/^    f01034da:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f01034de	obj/kern/kernel.asm	/^    f01034de:	48 89 de             	mov    %rbx,%rsi$/;"	l
f01034e1	obj/kern/kernel.asm	/^    f01034e1:	48 89 c7             	mov    %rax,%rdi$/;"	l
f01034e4	obj/kern/kernel.asm	/^    f01034e4:	48 b8 6e 33 10 f0 00 	mov    $0xf010336e,%rax$/;"	l
f01034eb	obj/kern/kernel.asm	/^    f01034eb:	00 00 00 $/;"	l
f01034ee	obj/kern/kernel.asm	/^    f01034ee:	ff d0                	callq  *%rax$/;"	l
f01034f0	obj/kern/kernel.asm	/^    f01034f0:	85 c0                	test   %eax,%eax$/;"	l
f01034f2	obj/kern/kernel.asm	/^    f01034f2:	79 47                	jns    fffffffff010353b <end+0xfffffffefe66219b>$/;"	l
f01034f4	obj/kern/kernel.asm	/^    f01034f4:	48 b8 48 62 a2 f1 00 	mov    $0xf1a26248,%rax$/;"	l
f01034fb	obj/kern/kernel.asm	/^    f01034fb:	00 00 00 $/;"	l
f01034fe	obj/kern/kernel.asm	/^    f01034fe:	48 8b 10             	mov    (%rax),%rdx$/;"	l
f0103501	obj/kern/kernel.asm	/^    f0103501:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f0103505	obj/kern/kernel.asm	/^    f0103505:	8b 80 c8 00 00 00    	mov    0xc8(%rax),%eax$/;"	l
f010350b	obj/kern/kernel.asm	/^    f010350b:	89 c6                	mov    %eax,%esi$/;"	l
f010350d	obj/kern/kernel.asm	/^    f010350d:	48 bf 68 19 11 f0 00 	mov    $0xf0111968,%rdi$/;"	l
f0103514	obj/kern/kernel.asm	/^    f0103514:	00 00 00 $/;"	l
f0103517	obj/kern/kernel.asm	/^    f0103517:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010351c	obj/kern/kernel.asm	/^    f010351c:	48 b9 eb 88 10 f0 00 	mov    $0xf01088eb,%rcx$/;"	l
f0103523	obj/kern/kernel.asm	/^    f0103523:	00 00 00 $/;"	l
f0103526	obj/kern/kernel.asm	/^    f0103526:	ff d1                	callq  *%rcx$/;"	l
f0103528	obj/kern/kernel.asm	/^    f0103528:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010352c	obj/kern/kernel.asm	/^    f010352c:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010352f	obj/kern/kernel.asm	/^    f010352f:	48 b8 e6 81 10 f0 00 	mov    $0xf01081e6,%rax$/;"	l
f0103536	obj/kern/kernel.asm	/^    f0103536:	00 00 00 $/;"	l
f0103539	obj/kern/kernel.asm	/^    f0103539:	ff d0                	callq  *%rax$/;"	l
f010353b	obj/kern/kernel.asm	/^    f010353b:	48 83 c4 28          	add    $0x28,%rsp$/;"	l
f010353f	obj/kern/kernel.asm	/^    f010353f:	5b                   	pop    %rbx$/;"	l
f0103540	obj/kern/kernel.asm	/^    f0103540:	c9                   	leaveq $/;"	l
f0103541	obj/kern/kernel.asm	/^    f0103541:	c3                   	retq   $/;"	l
f0103542	obj/kern/kernel.asm	/^    f0103542:	55                   	push   %rbp$/;"	l
f0103543	obj/kern/kernel.asm	/^    f0103543:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f0103546	obj/kern/kernel.asm	/^    f0103546:	53                   	push   %rbx$/;"	l
f0103547	obj/kern/kernel.asm	/^    f0103547:	48 83 ec 68          	sub    $0x68,%rsp$/;"	l
f010354b	obj/kern/kernel.asm	/^    f010354b:	89 f8                	mov    %edi,%eax$/;"	l
f010354d	obj/kern/kernel.asm	/^    f010354d:	88 45 9c             	mov    %al,-0x64(%rbp)$/;"	l
f0103550	obj/kern/kernel.asm	/^    f0103550:	80 7d 9c 00          	cmpb   $0x0,-0x64(%rbp)$/;"	l
f0103554	obj/kern/kernel.asm	/^    f0103554:	74 07                	je     fffffffff010355d <end+0xfffffffefe6621bd>$/;"	l
f0103556	obj/kern/kernel.asm	/^    f0103556:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f010355b	obj/kern/kernel.asm	/^    f010355b:	eb 05                	jmp    fffffffff0103562 <end+0xfffffffefe6621c2>$/;"	l
f010355d	obj/kern/kernel.asm	/^    f010355d:	b8 00 02 00 00       	mov    $0x200,%eax$/;"	l
f0103562	obj/kern/kernel.asm	/^    f0103562:	89 45 d4             	mov    %eax,-0x2c(%rbp)$/;"	l
f0103565	obj/kern/kernel.asm	/^    f0103565:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%rbp)$/;"	l
f010356c	obj/kern/kernel.asm	/^    f010356c:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)$/;"	l
f0103573	obj/kern/kernel.asm	/^    f0103573:	48 b8 38 62 a2 f1 00 	mov    $0xf1a26238,%rax$/;"	l
f010357a	obj/kern/kernel.asm	/^    f010357a:	00 00 00 $/;"	l
f010357d	obj/kern/kernel.asm	/^    f010357d:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0103580	obj/kern/kernel.asm	/^    f0103580:	48 85 c0             	test   %rax,%rax$/;"	l
f0103583	obj/kern/kernel.asm	/^    f0103583:	75 2a                	jne    fffffffff01035af <end+0xfffffffefe66220f>$/;"	l
f0103585	obj/kern/kernel.asm	/^    f0103585:	48 ba a0 19 11 f0 00 	mov    $0xf01119a0,%rdx$/;"	l
f010358c	obj/kern/kernel.asm	/^    f010358c:	00 00 00 $/;"	l
f010358f	obj/kern/kernel.asm	/^    f010358f:	be 69 03 00 00       	mov    $0x369,%esi$/;"	l
f0103594	obj/kern/kernel.asm	/^    f0103594:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f010359b	obj/kern/kernel.asm	/^    f010359b:	00 00 00 $/;"	l
f010359e	obj/kern/kernel.asm	/^    f010359e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01035a3	obj/kern/kernel.asm	/^    f01035a3:	48 b9 18 05 10 f0 00 	mov    $0xf0100518,%rcx$/;"	l
f01035aa	obj/kern/kernel.asm	/^    f01035aa:	00 00 00 $/;"	l
f01035ad	obj/kern/kernel.asm	/^    f01035ad:	ff d1                	callq  *%rcx$/;"	l
f01035af	obj/kern/kernel.asm	/^    f01035af:	80 7d 9c 00          	cmpb   $0x0,-0x64(%rbp)$/;"	l
f01035b3	obj/kern/kernel.asm	/^    f01035b3:	0f 84 aa 00 00 00    	je     fffffffff0103663 <end+0xfffffffefe6622c3>$/;"	l
f01035b9	obj/kern/kernel.asm	/^    f01035b9:	48 8d 45 c0          	lea    -0x40(%rbp),%rax$/;"	l
f01035bd	obj/kern/kernel.asm	/^    f01035bd:	48 89 45 a0          	mov    %rax,-0x60(%rbp)$/;"	l
f01035c1	obj/kern/kernel.asm	/^    f01035c1:	48 8d 45 b8          	lea    -0x48(%rbp),%rax$/;"	l
f01035c5	obj/kern/kernel.asm	/^    f01035c5:	48 89 45 a8          	mov    %rax,-0x58(%rbp)$/;"	l
f01035c9	obj/kern/kernel.asm	/^    f01035c9:	48 b8 38 62 a2 f1 00 	mov    $0xf1a26238,%rax$/;"	l
f01035d0	obj/kern/kernel.asm	/^    f01035d0:	00 00 00 $/;"	l
f01035d3	obj/kern/kernel.asm	/^    f01035d3:	48 8b 00             	mov    (%rax),%rax$/;"	l
f01035d6	obj/kern/kernel.asm	/^    f01035d6:	48 89 45 c8          	mov    %rax,-0x38(%rbp)$/;"	l
f01035da	obj/kern/kernel.asm	/^    f01035da:	eb 59                	jmp    fffffffff0103635 <end+0xfffffffefe662295>$/;"	l
f01035dc	obj/kern/kernel.asm	/^    f01035dc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f01035e0	obj/kern/kernel.asm	/^    f01035e0:	48 89 c7             	mov    %rax,%rdi$/;"	l
f01035e3	obj/kern/kernel.asm	/^    f01035e3:	48 b8 00 1a 10 f0 00 	mov    $0xf0101a00,%rax$/;"	l
f01035ea	obj/kern/kernel.asm	/^    f01035ea:	00 00 00 $/;"	l
f01035ed	obj/kern/kernel.asm	/^    f01035ed:	ff d0                	callq  *%rax$/;"	l
f01035ef	obj/kern/kernel.asm	/^    f01035ef:	48 c1 e8 15          	shr    $0x15,%rax$/;"	l
f01035f3	obj/kern/kernel.asm	/^    f01035f3:	48 89 c2             	mov    %rax,%rdx$/;"	l
f01035f6	obj/kern/kernel.asm	/^    f01035f6:	81 e2 ff 01 00 00    	and    $0x1ff,%edx$/;"	l
f01035fc	obj/kern/kernel.asm	/^    f01035fc:	8b 45 d4             	mov    -0x2c(%rbp),%eax$/;"	l
f01035ff	obj/kern/kernel.asm	/^    f01035ff:	48 39 c2             	cmp    %rax,%rdx$/;"	l
f0103602	obj/kern/kernel.asm	/^    f0103602:	0f 93 c0             	setae  %al$/;"	l
f0103605	obj/kern/kernel.asm	/^    f0103605:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0103608	obj/kern/kernel.asm	/^    f0103608:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
f010360b	obj/kern/kernel.asm	/^    f010360b:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
f010360e	obj/kern/kernel.asm	/^    f010360e:	48 98                	cltq   $/;"	l
f0103610	obj/kern/kernel.asm	/^    f0103610:	48 8b 44 c5 a0       	mov    -0x60(%rbp,%rax,8),%rax$/;"	l
f0103615	obj/kern/kernel.asm	/^    f0103615:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx$/;"	l
f0103619	obj/kern/kernel.asm	/^    f0103619:	48 89 10             	mov    %rdx,(%rax)$/;"	l
f010361c	obj/kern/kernel.asm	/^    f010361c:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
f010361f	obj/kern/kernel.asm	/^    f010361f:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx$/;"	l
f0103623	obj/kern/kernel.asm	/^    f0103623:	48 98                	cltq   $/;"	l
f0103625	obj/kern/kernel.asm	/^    f0103625:	48 89 54 c5 a0       	mov    %rdx,-0x60(%rbp,%rax,8)$/;"	l
f010362a	obj/kern/kernel.asm	/^    f010362a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f010362e	obj/kern/kernel.asm	/^    f010362e:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0103631	obj/kern/kernel.asm	/^    f0103631:	48 89 45 c8          	mov    %rax,-0x38(%rbp)$/;"	l
f0103635	obj/kern/kernel.asm	/^    f0103635:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)$/;"	l
f010363a	obj/kern/kernel.asm	/^    f010363a:	75 a0                	jne    fffffffff01035dc <end+0xfffffffefe66223c>$/;"	l
f010363c	obj/kern/kernel.asm	/^    f010363c:	48 8b 45 a8          	mov    -0x58(%rbp),%rax$/;"	l
f0103640	obj/kern/kernel.asm	/^    f0103640:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)$/;"	l
f0103647	obj/kern/kernel.asm	/^    f0103647:	48 8b 45 a0          	mov    -0x60(%rbp),%rax$/;"	l
f010364b	obj/kern/kernel.asm	/^    f010364b:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx$/;"	l
f010364f	obj/kern/kernel.asm	/^    f010364f:	48 89 10             	mov    %rdx,(%rax)$/;"	l
f0103652	obj/kern/kernel.asm	/^    f0103652:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx$/;"	l
f0103656	obj/kern/kernel.asm	/^    f0103656:	48 b8 38 62 a2 f1 00 	mov    $0xf1a26238,%rax$/;"	l
f010365d	obj/kern/kernel.asm	/^    f010365d:	00 00 00 $/;"	l
f0103660	obj/kern/kernel.asm	/^    f0103660:	48 89 10             	mov    %rdx,(%rax)$/;"	l
f0103663	obj/kern/kernel.asm	/^    f0103663:	48 b8 38 62 a2 f1 00 	mov    $0xf1a26238,%rax$/;"	l
f010366a	obj/kern/kernel.asm	/^    f010366a:	00 00 00 $/;"	l
f010366d	obj/kern/kernel.asm	/^    f010366d:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0103670	obj/kern/kernel.asm	/^    f0103670:	48 89 45 c8          	mov    %rax,-0x38(%rbp)$/;"	l
f0103674	obj/kern/kernel.asm	/^    f0103674:	eb 5f                	jmp    fffffffff01036d5 <end+0xfffffffefe662335>$/;"	l
f0103676	obj/kern/kernel.asm	/^    f0103676:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f010367a	obj/kern/kernel.asm	/^    f010367a:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010367d	obj/kern/kernel.asm	/^    f010367d:	48 b8 00 1a 10 f0 00 	mov    $0xf0101a00,%rax$/;"	l
f0103684	obj/kern/kernel.asm	/^    f0103684:	00 00 00 $/;"	l
f0103687	obj/kern/kernel.asm	/^    f0103687:	ff d0                	callq  *%rax$/;"	l
f0103689	obj/kern/kernel.asm	/^    f0103689:	48 c1 e8 15          	shr    $0x15,%rax$/;"	l
f010368d	obj/kern/kernel.asm	/^    f010368d:	48 89 c2             	mov    %rax,%rdx$/;"	l
f0103690	obj/kern/kernel.asm	/^    f0103690:	81 e2 ff 01 00 00    	and    $0x1ff,%edx$/;"	l
f0103696	obj/kern/kernel.asm	/^    f0103696:	8b 45 d4             	mov    -0x2c(%rbp),%eax$/;"	l
f0103699	obj/kern/kernel.asm	/^    f0103699:	48 39 c2             	cmp    %rax,%rdx$/;"	l
f010369c	obj/kern/kernel.asm	/^    f010369c:	73 2c                	jae    fffffffff01036ca <end+0xfffffffefe66232a>$/;"	l
f010369e	obj/kern/kernel.asm	/^    f010369e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f01036a2	obj/kern/kernel.asm	/^    f01036a2:	48 89 c7             	mov    %rax,%rdi$/;"	l
f01036a5	obj/kern/kernel.asm	/^    f01036a5:	48 b8 96 1a 10 f0 00 	mov    $0xf0101a96,%rax$/;"	l
f01036ac	obj/kern/kernel.asm	/^    f01036ac:	00 00 00 $/;"	l
f01036af	obj/kern/kernel.asm	/^    f01036af:	ff d0                	callq  *%rax$/;"	l
f01036b1	obj/kern/kernel.asm	/^    f01036b1:	ba 80 00 00 00       	mov    $0x80,%edx$/;"	l
f01036b6	obj/kern/kernel.asm	/^    f01036b6:	be 97 00 00 00       	mov    $0x97,%esi$/;"	l
f01036bb	obj/kern/kernel.asm	/^    f01036bb:	48 89 c7             	mov    %rax,%rdi$/;"	l
f01036be	obj/kern/kernel.asm	/^    f01036be:	48 b8 42 ee 10 f0 00 	mov    $0xf010ee42,%rax$/;"	l
f01036c5	obj/kern/kernel.asm	/^    f01036c5:	00 00 00 $/;"	l
f01036c8	obj/kern/kernel.asm	/^    f01036c8:	ff d0                	callq  *%rax$/;"	l
f01036ca	obj/kern/kernel.asm	/^    f01036ca:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f01036ce	obj/kern/kernel.asm	/^    f01036ce:	48 8b 00             	mov    (%rax),%rax$/;"	l
f01036d1	obj/kern/kernel.asm	/^    f01036d1:	48 89 45 c8          	mov    %rax,-0x38(%rbp)$/;"	l
f01036d5	obj/kern/kernel.asm	/^    f01036d5:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)$/;"	l
f01036da	obj/kern/kernel.asm	/^    f01036da:	75 9a                	jne    fffffffff0103676 <end+0xfffffffefe6622d6>$/;"	l
f01036dc	obj/kern/kernel.asm	/^    f01036dc:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f01036e1	obj/kern/kernel.asm	/^    f01036e1:	48 b8 59 1c 10 f0 00 	mov    $0xf0101c59,%rax$/;"	l
f01036e8	obj/kern/kernel.asm	/^    f01036e8:	00 00 00 $/;"	l
f01036eb	obj/kern/kernel.asm	/^    f01036eb:	ff d0                	callq  *%rax$/;"	l
f01036ed	obj/kern/kernel.asm	/^    f01036ed:	48 89 45 e0          	mov    %rax,-0x20(%rbp)$/;"	l
f01036f1	obj/kern/kernel.asm	/^    f01036f1:	48 b8 38 62 a2 f1 00 	mov    $0xf1a26238,%rax$/;"	l
f01036f8	obj/kern/kernel.asm	/^    f01036f8:	00 00 00 $/;"	l
f01036fb	obj/kern/kernel.asm	/^    f01036fb:	48 8b 00             	mov    (%rax),%rax$/;"	l
f01036fe	obj/kern/kernel.asm	/^    f01036fe:	48 89 45 c8          	mov    %rax,-0x38(%rbp)$/;"	l
f0103702	obj/kern/kernel.asm	/^    f0103702:	e9 19 03 00 00       	jmpq   fffffffff0103a20 <end+0xfffffffefe662680>$/;"	l
f0103707	obj/kern/kernel.asm	/^    f0103707:	48 b8 70 77 a2 f1 00 	mov    $0xf1a27770,%rax$/;"	l
f010370e	obj/kern/kernel.asm	/^    f010370e:	00 00 00 $/;"	l
f0103711	obj/kern/kernel.asm	/^    f0103711:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0103714	obj/kern/kernel.asm	/^    f0103714:	48 39 45 c8          	cmp    %rax,-0x38(%rbp)$/;"	l
f0103718	obj/kern/kernel.asm	/^    f0103718:	73 34                	jae    fffffffff010374e <end+0xfffffffefe6623ae>$/;"	l
f010371a	obj/kern/kernel.asm	/^    f010371a:	48 b9 c4 19 11 f0 00 	mov    $0xf01119c4,%rcx$/;"	l
f0103721	obj/kern/kernel.asm	/^    f0103721:	00 00 00 $/;"	l
f0103724	obj/kern/kernel.asm	/^    f0103724:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f010372b	obj/kern/kernel.asm	/^    f010372b:	00 00 00 $/;"	l
f010372e	obj/kern/kernel.asm	/^    f010372e:	be 85 03 00 00       	mov    $0x385,%esi$/;"	l
f0103733	obj/kern/kernel.asm	/^    f0103733:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f010373a	obj/kern/kernel.asm	/^    f010373a:	00 00 00 $/;"	l
f010373d	obj/kern/kernel.asm	/^    f010373d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103742	obj/kern/kernel.asm	/^    f0103742:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0103749	obj/kern/kernel.asm	/^    f0103749:	00 00 00 $/;"	l
f010374c	obj/kern/kernel.asm	/^    f010374c:	ff d3                	callq  *%rbx$/;"	l
f010374e	obj/kern/kernel.asm	/^    f010374e:	48 b8 70 77 a2 f1 00 	mov    $0xf1a27770,%rax$/;"	l
f0103755	obj/kern/kernel.asm	/^    f0103755:	00 00 00 $/;"	l
f0103758	obj/kern/kernel.asm	/^    f0103758:	48 8b 10             	mov    (%rax),%rdx$/;"	l
f010375b	obj/kern/kernel.asm	/^    f010375b:	48 b8 68 77 a2 f1 00 	mov    $0xf1a27768,%rax$/;"	l
f0103762	obj/kern/kernel.asm	/^    f0103762:	00 00 00 $/;"	l
f0103765	obj/kern/kernel.asm	/^    f0103765:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0103768	obj/kern/kernel.asm	/^    f0103768:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
f010376c	obj/kern/kernel.asm	/^    f010376c:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f0103770	obj/kern/kernel.asm	/^    f0103770:	48 3b 45 c8          	cmp    -0x38(%rbp),%rax$/;"	l
f0103774	obj/kern/kernel.asm	/^    f0103774:	77 34                	ja     fffffffff01037aa <end+0xfffffffefe66240a>$/;"	l
f0103776	obj/kern/kernel.asm	/^    f0103776:	48 b9 d0 19 11 f0 00 	mov    $0xf01119d0,%rcx$/;"	l
f010377d	obj/kern/kernel.asm	/^    f010377d:	00 00 00 $/;"	l
f0103780	obj/kern/kernel.asm	/^    f0103780:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0103787	obj/kern/kernel.asm	/^    f0103787:	00 00 00 $/;"	l
f010378a	obj/kern/kernel.asm	/^    f010378a:	be 86 03 00 00       	mov    $0x386,%esi$/;"	l
f010378f	obj/kern/kernel.asm	/^    f010378f:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0103796	obj/kern/kernel.asm	/^    f0103796:	00 00 00 $/;"	l
f0103799	obj/kern/kernel.asm	/^    f0103799:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010379e	obj/kern/kernel.asm	/^    f010379e:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f01037a5	obj/kern/kernel.asm	/^    f01037a5:	00 00 00 $/;"	l
f01037a8	obj/kern/kernel.asm	/^    f01037a8:	ff d3                	callq  *%rbx$/;"	l
f01037aa	obj/kern/kernel.asm	/^    f01037aa:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx$/;"	l
f01037ae	obj/kern/kernel.asm	/^    f01037ae:	48 b8 70 77 a2 f1 00 	mov    $0xf1a27770,%rax$/;"	l
f01037b5	obj/kern/kernel.asm	/^    f01037b5:	00 00 00 $/;"	l
f01037b8	obj/kern/kernel.asm	/^    f01037b8:	48 8b 00             	mov    (%rax),%rax$/;"	l
f01037bb	obj/kern/kernel.asm	/^    f01037bb:	48 89 d1             	mov    %rdx,%rcx$/;"	l
f01037be	obj/kern/kernel.asm	/^    f01037be:	48 29 c1             	sub    %rax,%rcx$/;"	l
f01037c1	obj/kern/kernel.asm	/^    f01037c1:	48 89 c8             	mov    %rcx,%rax$/;"	l
f01037c4	obj/kern/kernel.asm	/^    f01037c4:	83 e0 0f             	and    $0xf,%eax$/;"	l
f01037c7	obj/kern/kernel.asm	/^    f01037c7:	48 85 c0             	test   %rax,%rax$/;"	l
f01037ca	obj/kern/kernel.asm	/^    f01037ca:	74 34                	je     fffffffff0103800 <end+0xfffffffefe662460>$/;"	l
f01037cc	obj/kern/kernel.asm	/^    f01037cc:	48 b9 e8 19 11 f0 00 	mov    $0xf01119e8,%rcx$/;"	l
f01037d3	obj/kern/kernel.asm	/^    f01037d3:	00 00 00 $/;"	l
f01037d6	obj/kern/kernel.asm	/^    f01037d6:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f01037dd	obj/kern/kernel.asm	/^    f01037dd:	00 00 00 $/;"	l
f01037e0	obj/kern/kernel.asm	/^    f01037e0:	be 87 03 00 00       	mov    $0x387,%esi$/;"	l
f01037e5	obj/kern/kernel.asm	/^    f01037e5:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f01037ec	obj/kern/kernel.asm	/^    f01037ec:	00 00 00 $/;"	l
f01037ef	obj/kern/kernel.asm	/^    f01037ef:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01037f4	obj/kern/kernel.asm	/^    f01037f4:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f01037fb	obj/kern/kernel.asm	/^    f01037fb:	00 00 00 $/;"	l
f01037fe	obj/kern/kernel.asm	/^    f01037fe:	ff d3                	callq  *%rbx$/;"	l
f0103800	obj/kern/kernel.asm	/^    f0103800:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f0103804	obj/kern/kernel.asm	/^    f0103804:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0103807	obj/kern/kernel.asm	/^    f0103807:	48 b8 00 1a 10 f0 00 	mov    $0xf0101a00,%rax$/;"	l
f010380e	obj/kern/kernel.asm	/^    f010380e:	00 00 00 $/;"	l
f0103811	obj/kern/kernel.asm	/^    f0103811:	ff d0                	callq  *%rax$/;"	l
f0103813	obj/kern/kernel.asm	/^    f0103813:	48 85 c0             	test   %rax,%rax$/;"	l
f0103816	obj/kern/kernel.asm	/^    f0103816:	75 34                	jne    fffffffff010384c <end+0xfffffffefe6624ac>$/;"	l
f0103818	obj/kern/kernel.asm	/^    f0103818:	48 b9 1a 1a 11 f0 00 	mov    $0xf0111a1a,%rcx$/;"	l
f010381f	obj/kern/kernel.asm	/^    f010381f:	00 00 00 $/;"	l
f0103822	obj/kern/kernel.asm	/^    f0103822:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0103829	obj/kern/kernel.asm	/^    f0103829:	00 00 00 $/;"	l
f010382c	obj/kern/kernel.asm	/^    f010382c:	be 8a 03 00 00       	mov    $0x38a,%esi$/;"	l
f0103831	obj/kern/kernel.asm	/^    f0103831:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0103838	obj/kern/kernel.asm	/^    f0103838:	00 00 00 $/;"	l
f010383b	obj/kern/kernel.asm	/^    f010383b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103840	obj/kern/kernel.asm	/^    f0103840:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0103847	obj/kern/kernel.asm	/^    f0103847:	00 00 00 $/;"	l
f010384a	obj/kern/kernel.asm	/^    f010384a:	ff d3                	callq  *%rbx$/;"	l
f010384c	obj/kern/kernel.asm	/^    f010384c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f0103850	obj/kern/kernel.asm	/^    f0103850:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0103853	obj/kern/kernel.asm	/^    f0103853:	48 b8 00 1a 10 f0 00 	mov    $0xf0101a00,%rax$/;"	l
f010385a	obj/kern/kernel.asm	/^    f010385a:	00 00 00 $/;"	l
f010385d	obj/kern/kernel.asm	/^    f010385d:	ff d0                	callq  *%rax$/;"	l
f010385f	obj/kern/kernel.asm	/^    f010385f:	48 3d 00 00 0a 00    	cmp    $0xa0000,%rax$/;"	l
f0103865	obj/kern/kernel.asm	/^    f0103865:	75 34                	jne    fffffffff010389b <end+0xfffffffefe6624fb>$/;"	l
f0103867	obj/kern/kernel.asm	/^    f0103867:	48 b9 2b 1a 11 f0 00 	mov    $0xf0111a2b,%rcx$/;"	l
f010386e	obj/kern/kernel.asm	/^    f010386e:	00 00 00 $/;"	l
f0103871	obj/kern/kernel.asm	/^    f0103871:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0103878	obj/kern/kernel.asm	/^    f0103878:	00 00 00 $/;"	l
f010387b	obj/kern/kernel.asm	/^    f010387b:	be 8b 03 00 00       	mov    $0x38b,%esi$/;"	l
f0103880	obj/kern/kernel.asm	/^    f0103880:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0103887	obj/kern/kernel.asm	/^    f0103887:	00 00 00 $/;"	l
f010388a	obj/kern/kernel.asm	/^    f010388a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010388f	obj/kern/kernel.asm	/^    f010388f:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0103896	obj/kern/kernel.asm	/^    f0103896:	00 00 00 $/;"	l
f0103899	obj/kern/kernel.asm	/^    f0103899:	ff d3                	callq  *%rbx$/;"	l
f010389b	obj/kern/kernel.asm	/^    f010389b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f010389f	obj/kern/kernel.asm	/^    f010389f:	48 89 c7             	mov    %rax,%rdi$/;"	l
f01038a2	obj/kern/kernel.asm	/^    f01038a2:	48 b8 00 1a 10 f0 00 	mov    $0xf0101a00,%rax$/;"	l
f01038a9	obj/kern/kernel.asm	/^    f01038a9:	00 00 00 $/;"	l
f01038ac	obj/kern/kernel.asm	/^    f01038ac:	ff d0                	callq  *%rax$/;"	l
f01038ae	obj/kern/kernel.asm	/^    f01038ae:	48 3d 00 f0 0f 00    	cmp    $0xff000,%rax$/;"	l
f01038b4	obj/kern/kernel.asm	/^    f01038b4:	75 34                	jne    fffffffff01038ea <end+0xfffffffefe66254a>$/;"	l
f01038b6	obj/kern/kernel.asm	/^    f01038b6:	48 b9 48 1a 11 f0 00 	mov    $0xf0111a48,%rcx$/;"	l
f01038bd	obj/kern/kernel.asm	/^    f01038bd:	00 00 00 $/;"	l
f01038c0	obj/kern/kernel.asm	/^    f01038c0:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f01038c7	obj/kern/kernel.asm	/^    f01038c7:	00 00 00 $/;"	l
f01038ca	obj/kern/kernel.asm	/^    f01038ca:	be 8c 03 00 00       	mov    $0x38c,%esi$/;"	l
f01038cf	obj/kern/kernel.asm	/^    f01038cf:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f01038d6	obj/kern/kernel.asm	/^    f01038d6:	00 00 00 $/;"	l
f01038d9	obj/kern/kernel.asm	/^    f01038d9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01038de	obj/kern/kernel.asm	/^    f01038de:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f01038e5	obj/kern/kernel.asm	/^    f01038e5:	00 00 00 $/;"	l
f01038e8	obj/kern/kernel.asm	/^    f01038e8:	ff d3                	callq  *%rbx$/;"	l
f01038ea	obj/kern/kernel.asm	/^    f01038ea:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f01038ee	obj/kern/kernel.asm	/^    f01038ee:	48 89 c7             	mov    %rax,%rdi$/;"	l
f01038f1	obj/kern/kernel.asm	/^    f01038f1:	48 b8 00 1a 10 f0 00 	mov    $0xf0101a00,%rax$/;"	l
f01038f8	obj/kern/kernel.asm	/^    f01038f8:	00 00 00 $/;"	l
f01038fb	obj/kern/kernel.asm	/^    f01038fb:	ff d0                	callq  *%rax$/;"	l
f01038fd	obj/kern/kernel.asm	/^    f01038fd:	48 3d 00 00 10 00    	cmp    $0x100000,%rax$/;"	l
f0103903	obj/kern/kernel.asm	/^    f0103903:	75 34                	jne    fffffffff0103939 <end+0xfffffffefe662599>$/;"	l
f0103905	obj/kern/kernel.asm	/^    f0103905:	48 b9 6b 1a 11 f0 00 	mov    $0xf0111a6b,%rcx$/;"	l
f010390c	obj/kern/kernel.asm	/^    f010390c:	00 00 00 $/;"	l
f010390f	obj/kern/kernel.asm	/^    f010390f:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0103916	obj/kern/kernel.asm	/^    f0103916:	00 00 00 $/;"	l
f0103919	obj/kern/kernel.asm	/^    f0103919:	be 8d 03 00 00       	mov    $0x38d,%esi$/;"	l
f010391e	obj/kern/kernel.asm	/^    f010391e:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0103925	obj/kern/kernel.asm	/^    f0103925:	00 00 00 $/;"	l
f0103928	obj/kern/kernel.asm	/^    f0103928:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010392d	obj/kern/kernel.asm	/^    f010392d:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0103934	obj/kern/kernel.asm	/^    f0103934:	00 00 00 $/;"	l
f0103937	obj/kern/kernel.asm	/^    f0103937:	ff d3                	callq  *%rbx$/;"	l
f0103939	obj/kern/kernel.asm	/^    f0103939:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f010393d	obj/kern/kernel.asm	/^    f010393d:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0103940	obj/kern/kernel.asm	/^    f0103940:	48 b8 00 1a 10 f0 00 	mov    $0xf0101a00,%rax$/;"	l
f0103947	obj/kern/kernel.asm	/^    f0103947:	00 00 00 $/;"	l
f010394a	obj/kern/kernel.asm	/^    f010394a:	ff d0                	callq  *%rax$/;"	l
f010394c	obj/kern/kernel.asm	/^    f010394c:	48 3d ff ff 0f 00    	cmp    $0xfffff,%rax$/;"	l
f0103952	obj/kern/kernel.asm	/^    f0103952:	76 4d                	jbe    fffffffff01039a1 <end+0xfffffffefe662601>$/;"	l
f0103954	obj/kern/kernel.asm	/^    f0103954:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f0103958	obj/kern/kernel.asm	/^    f0103958:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010395b	obj/kern/kernel.asm	/^    f010395b:	48 b8 96 1a 10 f0 00 	mov    $0xf0101a96,%rax$/;"	l
f0103962	obj/kern/kernel.asm	/^    f0103962:	00 00 00 $/;"	l
f0103965	obj/kern/kernel.asm	/^    f0103965:	ff d0                	callq  *%rax$/;"	l
f0103967	obj/kern/kernel.asm	/^    f0103967:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax$/;"	l
f010396b	obj/kern/kernel.asm	/^    f010396b:	73 34                	jae    fffffffff01039a1 <end+0xfffffffefe662601>$/;"	l
f010396d	obj/kern/kernel.asm	/^    f010396d:	48 b9 88 1a 11 f0 00 	mov    $0xf0111a88,%rcx$/;"	l
f0103974	obj/kern/kernel.asm	/^    f0103974:	00 00 00 $/;"	l
f0103977	obj/kern/kernel.asm	/^    f0103977:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f010397e	obj/kern/kernel.asm	/^    f010397e:	00 00 00 $/;"	l
f0103981	obj/kern/kernel.asm	/^    f0103981:	be 8e 03 00 00       	mov    $0x38e,%esi$/;"	l
f0103986	obj/kern/kernel.asm	/^    f0103986:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f010398d	obj/kern/kernel.asm	/^    f010398d:	00 00 00 $/;"	l
f0103990	obj/kern/kernel.asm	/^    f0103990:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103995	obj/kern/kernel.asm	/^    f0103995:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f010399c	obj/kern/kernel.asm	/^    f010399c:	00 00 00 $/;"	l
f010399f	obj/kern/kernel.asm	/^    f010399f:	ff d3                	callq  *%rbx$/;"	l
f01039a1	obj/kern/kernel.asm	/^    f01039a1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f01039a5	obj/kern/kernel.asm	/^    f01039a5:	48 89 c7             	mov    %rax,%rdi$/;"	l
f01039a8	obj/kern/kernel.asm	/^    f01039a8:	48 b8 00 1a 10 f0 00 	mov    $0xf0101a00,%rax$/;"	l
f01039af	obj/kern/kernel.asm	/^    f01039af:	00 00 00 $/;"	l
f01039b2	obj/kern/kernel.asm	/^    f01039b2:	ff d0                	callq  *%rax$/;"	l
f01039b4	obj/kern/kernel.asm	/^    f01039b4:	48 3d 00 70 00 00    	cmp    $0x7000,%rax$/;"	l
f01039ba	obj/kern/kernel.asm	/^    f01039ba:	75 34                	jne    fffffffff01039f0 <end+0xfffffffefe662650>$/;"	l
f01039bc	obj/kern/kernel.asm	/^    f01039bc:	48 b9 cd 1a 11 f0 00 	mov    $0xf0111acd,%rcx$/;"	l
f01039c3	obj/kern/kernel.asm	/^    f01039c3:	00 00 00 $/;"	l
f01039c6	obj/kern/kernel.asm	/^    f01039c6:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f01039cd	obj/kern/kernel.asm	/^    f01039cd:	00 00 00 $/;"	l
f01039d0	obj/kern/kernel.asm	/^    f01039d0:	be 90 03 00 00       	mov    $0x390,%esi$/;"	l
f01039d5	obj/kern/kernel.asm	/^    f01039d5:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f01039dc	obj/kern/kernel.asm	/^    f01039dc:	00 00 00 $/;"	l
f01039df	obj/kern/kernel.asm	/^    f01039df:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01039e4	obj/kern/kernel.asm	/^    f01039e4:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f01039eb	obj/kern/kernel.asm	/^    f01039eb:	00 00 00 $/;"	l
f01039ee	obj/kern/kernel.asm	/^    f01039ee:	ff d3                	callq  *%rbx$/;"	l
f01039f0	obj/kern/kernel.asm	/^    f01039f0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f01039f4	obj/kern/kernel.asm	/^    f01039f4:	48 89 c7             	mov    %rax,%rdi$/;"	l
f01039f7	obj/kern/kernel.asm	/^    f01039f7:	48 b8 00 1a 10 f0 00 	mov    $0xf0101a00,%rax$/;"	l
f01039fe	obj/kern/kernel.asm	/^    f01039fe:	00 00 00 $/;"	l
f0103a01	obj/kern/kernel.asm	/^    f0103a01:	ff d0                	callq  *%rax$/;"	l
f0103a03	obj/kern/kernel.asm	/^    f0103a03:	48 3d ff ff 0f 00    	cmp    $0xfffff,%rax$/;"	l
f0103a09	obj/kern/kernel.asm	/^    f0103a09:	77 06                	ja     fffffffff0103a11 <end+0xfffffffefe662671>$/;"	l
f0103a0b	obj/kern/kernel.asm	/^    f0103a0b:	83 45 d8 01          	addl   $0x1,-0x28(%rbp)$/;"	l
f0103a0f	obj/kern/kernel.asm	/^    f0103a0f:	eb 04                	jmp    fffffffff0103a15 <end+0xfffffffefe662675>$/;"	l
f0103a11	obj/kern/kernel.asm	/^    f0103a11:	83 45 dc 01          	addl   $0x1,-0x24(%rbp)$/;"	l
f0103a15	obj/kern/kernel.asm	/^    f0103a15:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f0103a19	obj/kern/kernel.asm	/^    f0103a19:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0103a1c	obj/kern/kernel.asm	/^    f0103a1c:	48 89 45 c8          	mov    %rax,-0x38(%rbp)$/;"	l
f0103a20	obj/kern/kernel.asm	/^    f0103a20:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)$/;"	l
f0103a25	obj/kern/kernel.asm	/^    f0103a25:	0f 85 dc fc ff ff    	jne    fffffffff0103707 <end+0xfffffffefe662367>$/;"	l
f0103a2b	obj/kern/kernel.asm	/^    f0103a2b:	83 7d d8 00          	cmpl   $0x0,-0x28(%rbp)$/;"	l
f0103a2f	obj/kern/kernel.asm	/^    f0103a2f:	7f 34                	jg     fffffffff0103a65 <end+0xfffffffefe6626c5>$/;"	l
f0103a31	obj/kern/kernel.asm	/^    f0103a31:	48 b9 ea 1a 11 f0 00 	mov    $0xf0111aea,%rcx$/;"	l
f0103a38	obj/kern/kernel.asm	/^    f0103a38:	00 00 00 $/;"	l
f0103a3b	obj/kern/kernel.asm	/^    f0103a3b:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0103a42	obj/kern/kernel.asm	/^    f0103a42:	00 00 00 $/;"	l
f0103a45	obj/kern/kernel.asm	/^    f0103a45:	be 98 03 00 00       	mov    $0x398,%esi$/;"	l
f0103a4a	obj/kern/kernel.asm	/^    f0103a4a:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0103a51	obj/kern/kernel.asm	/^    f0103a51:	00 00 00 $/;"	l
f0103a54	obj/kern/kernel.asm	/^    f0103a54:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103a59	obj/kern/kernel.asm	/^    f0103a59:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0103a60	obj/kern/kernel.asm	/^    f0103a60:	00 00 00 $/;"	l
f0103a63	obj/kern/kernel.asm	/^    f0103a63:	ff d3                	callq  *%rbx$/;"	l
f0103a65	obj/kern/kernel.asm	/^    f0103a65:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)$/;"	l
f0103a69	obj/kern/kernel.asm	/^    f0103a69:	7f 34                	jg     fffffffff0103a9f <end+0xfffffffefe6626ff>$/;"	l
f0103a6b	obj/kern/kernel.asm	/^    f0103a6b:	48 b9 fc 1a 11 f0 00 	mov    $0xf0111afc,%rcx$/;"	l
f0103a72	obj/kern/kernel.asm	/^    f0103a72:	00 00 00 $/;"	l
f0103a75	obj/kern/kernel.asm	/^    f0103a75:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0103a7c	obj/kern/kernel.asm	/^    f0103a7c:	00 00 00 $/;"	l
f0103a7f	obj/kern/kernel.asm	/^    f0103a7f:	be 99 03 00 00       	mov    $0x399,%esi$/;"	l
f0103a84	obj/kern/kernel.asm	/^    f0103a84:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0103a8b	obj/kern/kernel.asm	/^    f0103a8b:	00 00 00 $/;"	l
f0103a8e	obj/kern/kernel.asm	/^    f0103a8e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103a93	obj/kern/kernel.asm	/^    f0103a93:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0103a9a	obj/kern/kernel.asm	/^    f0103a9a:	00 00 00 $/;"	l
f0103a9d	obj/kern/kernel.asm	/^    f0103a9d:	ff d3                	callq  *%rbx$/;"	l
f0103a9f	obj/kern/kernel.asm	/^    f0103a9f:	48 83 c4 68          	add    $0x68,%rsp$/;"	l
f0103aa3	obj/kern/kernel.asm	/^    f0103aa3:	5b                   	pop    %rbx$/;"	l
f0103aa4	obj/kern/kernel.asm	/^    f0103aa4:	c9                   	leaveq $/;"	l
f0103aa5	obj/kern/kernel.asm	/^    f0103aa5:	c3                   	retq   $/;"	l
f0103aa6	obj/kern/kernel.asm	/^    f0103aa6:	55                   	push   %rbp$/;"	l
f0103aa7	obj/kern/kernel.asm	/^    f0103aa7:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f0103aaa	obj/kern/kernel.asm	/^    f0103aaa:	53                   	push   %rbx$/;"	l
f0103aab	obj/kern/kernel.asm	/^    f0103aab:	48 83 ec 58          	sub    $0x58,%rsp$/;"	l
f0103aaf	obj/kern/kernel.asm	/^    f0103aaf:	48 b8 38 62 a2 f1 00 	mov    $0xf1a26238,%rax$/;"	l
f0103ab6	obj/kern/kernel.asm	/^    f0103ab6:	00 00 00 $/;"	l
f0103ab9	obj/kern/kernel.asm	/^    f0103ab9:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0103abc	obj/kern/kernel.asm	/^    f0103abc:	48 89 45 b0          	mov    %rax,-0x50(%rbp)$/;"	l
f0103ac0	obj/kern/kernel.asm	/^    f0103ac0:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)$/;"	l
f0103ac7	obj/kern/kernel.asm	/^    f0103ac7:	eb 37                	jmp    fffffffff0103b00 <end+0xfffffffefe662760>$/;"	l
f0103ac9	obj/kern/kernel.asm	/^    f0103ac9:	48 8b 45 b0          	mov    -0x50(%rbp),%rax$/;"	l
f0103acd	obj/kern/kernel.asm	/^    f0103acd:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0103ad0	obj/kern/kernel.asm	/^    f0103ad0:	48 b8 96 1a 10 f0 00 	mov    $0xf0101a96,%rax$/;"	l
f0103ad7	obj/kern/kernel.asm	/^    f0103ad7:	00 00 00 $/;"	l
f0103ada	obj/kern/kernel.asm	/^    f0103ada:	ff d0                	callq  *%rax$/;"	l
f0103adc	obj/kern/kernel.asm	/^    f0103adc:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0103ae1	obj/kern/kernel.asm	/^    f0103ae1:	be 97 00 00 00       	mov    $0x97,%esi$/;"	l
f0103ae6	obj/kern/kernel.asm	/^    f0103ae6:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0103ae9	obj/kern/kernel.asm	/^    f0103ae9:	48 b8 42 ee 10 f0 00 	mov    $0xf010ee42,%rax$/;"	l
f0103af0	obj/kern/kernel.asm	/^    f0103af0:	00 00 00 $/;"	l
f0103af3	obj/kern/kernel.asm	/^    f0103af3:	ff d0                	callq  *%rax$/;"	l
f0103af5	obj/kern/kernel.asm	/^    f0103af5:	48 8b 45 b0          	mov    -0x50(%rbp),%rax$/;"	l
f0103af9	obj/kern/kernel.asm	/^    f0103af9:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0103afc	obj/kern/kernel.asm	/^    f0103afc:	48 89 45 b0          	mov    %rax,-0x50(%rbp)$/;"	l
f0103b00	obj/kern/kernel.asm	/^    f0103b00:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)$/;"	l
f0103b05	obj/kern/kernel.asm	/^    f0103b05:	75 c2                	jne    fffffffff0103ac9 <end+0xfffffffefe662729>$/;"	l
f0103b07	obj/kern/kernel.asm	/^    f0103b07:	48 b8 38 62 a2 f1 00 	mov    $0xf1a26238,%rax$/;"	l
f0103b0e	obj/kern/kernel.asm	/^    f0103b0e:	00 00 00 $/;"	l
f0103b11	obj/kern/kernel.asm	/^    f0103b11:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0103b14	obj/kern/kernel.asm	/^    f0103b14:	48 89 45 b0          	mov    %rax,-0x50(%rbp)$/;"	l
f0103b18	obj/kern/kernel.asm	/^    f0103b18:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%rbp)$/;"	l
f0103b1f	obj/kern/kernel.asm	/^    f0103b1f:	e9 e7 01 00 00       	jmpq   fffffffff0103d0b <end+0xfffffffefe66296b>$/;"	l
f0103b24	obj/kern/kernel.asm	/^    f0103b24:	48 b8 70 77 a2 f1 00 	mov    $0xf1a27770,%rax$/;"	l
f0103b2b	obj/kern/kernel.asm	/^    f0103b2b:	00 00 00 $/;"	l
f0103b2e	obj/kern/kernel.asm	/^    f0103b2e:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0103b31	obj/kern/kernel.asm	/^    f0103b31:	48 39 45 b0          	cmp    %rax,-0x50(%rbp)$/;"	l
f0103b35	obj/kern/kernel.asm	/^    f0103b35:	73 34                	jae    fffffffff0103b6b <end+0xfffffffefe6627cb>$/;"	l
f0103b37	obj/kern/kernel.asm	/^    f0103b37:	48 b9 0d 1b 11 f0 00 	mov    $0xf0111b0d,%rcx$/;"	l
f0103b3e	obj/kern/kernel.asm	/^    f0103b3e:	00 00 00 $/;"	l
f0103b41	obj/kern/kernel.asm	/^    f0103b41:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0103b48	obj/kern/kernel.asm	/^    f0103b48:	00 00 00 $/;"	l
f0103b4b	obj/kern/kernel.asm	/^    f0103b4b:	be b4 03 00 00       	mov    $0x3b4,%esi$/;"	l
f0103b50	obj/kern/kernel.asm	/^    f0103b50:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0103b57	obj/kern/kernel.asm	/^    f0103b57:	00 00 00 $/;"	l
f0103b5a	obj/kern/kernel.asm	/^    f0103b5a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103b5f	obj/kern/kernel.asm	/^    f0103b5f:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0103b66	obj/kern/kernel.asm	/^    f0103b66:	00 00 00 $/;"	l
f0103b69	obj/kern/kernel.asm	/^    f0103b69:	ff d3                	callq  *%rbx$/;"	l
f0103b6b	obj/kern/kernel.asm	/^    f0103b6b:	48 b8 70 77 a2 f1 00 	mov    $0xf1a27770,%rax$/;"	l
f0103b72	obj/kern/kernel.asm	/^    f0103b72:	00 00 00 $/;"	l
f0103b75	obj/kern/kernel.asm	/^    f0103b75:	48 8b 10             	mov    (%rax),%rdx$/;"	l
f0103b78	obj/kern/kernel.asm	/^    f0103b78:	48 b8 68 77 a2 f1 00 	mov    $0xf1a27768,%rax$/;"	l
f0103b7f	obj/kern/kernel.asm	/^    f0103b7f:	00 00 00 $/;"	l
f0103b82	obj/kern/kernel.asm	/^    f0103b82:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0103b85	obj/kern/kernel.asm	/^    f0103b85:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
f0103b89	obj/kern/kernel.asm	/^    f0103b89:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f0103b8d	obj/kern/kernel.asm	/^    f0103b8d:	48 3b 45 b0          	cmp    -0x50(%rbp),%rax$/;"	l
f0103b91	obj/kern/kernel.asm	/^    f0103b91:	77 34                	ja     fffffffff0103bc7 <end+0xfffffffefe662827>$/;"	l
f0103b93	obj/kern/kernel.asm	/^    f0103b93:	48 b9 1a 1b 11 f0 00 	mov    $0xf0111b1a,%rcx$/;"	l
f0103b9a	obj/kern/kernel.asm	/^    f0103b9a:	00 00 00 $/;"	l
f0103b9d	obj/kern/kernel.asm	/^    f0103b9d:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0103ba4	obj/kern/kernel.asm	/^    f0103ba4:	00 00 00 $/;"	l
f0103ba7	obj/kern/kernel.asm	/^    f0103ba7:	be b5 03 00 00       	mov    $0x3b5,%esi$/;"	l
f0103bac	obj/kern/kernel.asm	/^    f0103bac:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0103bb3	obj/kern/kernel.asm	/^    f0103bb3:	00 00 00 $/;"	l
f0103bb6	obj/kern/kernel.asm	/^    f0103bb6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103bbb	obj/kern/kernel.asm	/^    f0103bbb:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0103bc2	obj/kern/kernel.asm	/^    f0103bc2:	00 00 00 $/;"	l
f0103bc5	obj/kern/kernel.asm	/^    f0103bc5:	ff d3                	callq  *%rbx$/;"	l
f0103bc7	obj/kern/kernel.asm	/^    f0103bc7:	48 8b 45 b0          	mov    -0x50(%rbp),%rax$/;"	l
f0103bcb	obj/kern/kernel.asm	/^    f0103bcb:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0103bce	obj/kern/kernel.asm	/^    f0103bce:	48 b8 00 1a 10 f0 00 	mov    $0xf0101a00,%rax$/;"	l
f0103bd5	obj/kern/kernel.asm	/^    f0103bd5:	00 00 00 $/;"	l
f0103bd8	obj/kern/kernel.asm	/^    f0103bd8:	ff d0                	callq  *%rax$/;"	l
f0103bda	obj/kern/kernel.asm	/^    f0103bda:	48 85 c0             	test   %rax,%rax$/;"	l
f0103bdd	obj/kern/kernel.asm	/^    f0103bdd:	75 34                	jne    fffffffff0103c13 <end+0xfffffffefe662873>$/;"	l
f0103bdf	obj/kern/kernel.asm	/^    f0103bdf:	48 b9 2f 1b 11 f0 00 	mov    $0xf0111b2f,%rcx$/;"	l
f0103be6	obj/kern/kernel.asm	/^    f0103be6:	00 00 00 $/;"	l
f0103be9	obj/kern/kernel.asm	/^    f0103be9:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0103bf0	obj/kern/kernel.asm	/^    f0103bf0:	00 00 00 $/;"	l
f0103bf3	obj/kern/kernel.asm	/^    f0103bf3:	be b8 03 00 00       	mov    $0x3b8,%esi$/;"	l
f0103bf8	obj/kern/kernel.asm	/^    f0103bf8:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0103bff	obj/kern/kernel.asm	/^    f0103bff:	00 00 00 $/;"	l
f0103c02	obj/kern/kernel.asm	/^    f0103c02:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103c07	obj/kern/kernel.asm	/^    f0103c07:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0103c0e	obj/kern/kernel.asm	/^    f0103c0e:	00 00 00 $/;"	l
f0103c11	obj/kern/kernel.asm	/^    f0103c11:	ff d3                	callq  *%rbx$/;"	l
f0103c13	obj/kern/kernel.asm	/^    f0103c13:	48 8b 45 b0          	mov    -0x50(%rbp),%rax$/;"	l
f0103c17	obj/kern/kernel.asm	/^    f0103c17:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0103c1a	obj/kern/kernel.asm	/^    f0103c1a:	48 b8 00 1a 10 f0 00 	mov    $0xf0101a00,%rax$/;"	l
f0103c21	obj/kern/kernel.asm	/^    f0103c21:	00 00 00 $/;"	l
f0103c24	obj/kern/kernel.asm	/^    f0103c24:	ff d0                	callq  *%rax$/;"	l
f0103c26	obj/kern/kernel.asm	/^    f0103c26:	48 3d 00 00 0a 00    	cmp    $0xa0000,%rax$/;"	l
f0103c2c	obj/kern/kernel.asm	/^    f0103c2c:	75 34                	jne    fffffffff0103c62 <end+0xfffffffefe6628c2>$/;"	l
f0103c2e	obj/kern/kernel.asm	/^    f0103c2e:	48 b9 41 1b 11 f0 00 	mov    $0xf0111b41,%rcx$/;"	l
f0103c35	obj/kern/kernel.asm	/^    f0103c35:	00 00 00 $/;"	l
f0103c38	obj/kern/kernel.asm	/^    f0103c38:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0103c3f	obj/kern/kernel.asm	/^    f0103c3f:	00 00 00 $/;"	l
f0103c42	obj/kern/kernel.asm	/^    f0103c42:	be b9 03 00 00       	mov    $0x3b9,%esi$/;"	l
f0103c47	obj/kern/kernel.asm	/^    f0103c47:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0103c4e	obj/kern/kernel.asm	/^    f0103c4e:	00 00 00 $/;"	l
f0103c51	obj/kern/kernel.asm	/^    f0103c51:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103c56	obj/kern/kernel.asm	/^    f0103c56:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0103c5d	obj/kern/kernel.asm	/^    f0103c5d:	00 00 00 $/;"	l
f0103c60	obj/kern/kernel.asm	/^    f0103c60:	ff d3                	callq  *%rbx$/;"	l
f0103c62	obj/kern/kernel.asm	/^    f0103c62:	48 8b 45 b0          	mov    -0x50(%rbp),%rax$/;"	l
f0103c66	obj/kern/kernel.asm	/^    f0103c66:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0103c69	obj/kern/kernel.asm	/^    f0103c69:	48 b8 00 1a 10 f0 00 	mov    $0xf0101a00,%rax$/;"	l
f0103c70	obj/kern/kernel.asm	/^    f0103c70:	00 00 00 $/;"	l
f0103c73	obj/kern/kernel.asm	/^    f0103c73:	ff d0                	callq  *%rax$/;"	l
f0103c75	obj/kern/kernel.asm	/^    f0103c75:	48 3d 00 f0 0f 00    	cmp    $0xff000,%rax$/;"	l
f0103c7b	obj/kern/kernel.asm	/^    f0103c7b:	75 34                	jne    fffffffff0103cb1 <end+0xfffffffefe662911>$/;"	l
f0103c7d	obj/kern/kernel.asm	/^    f0103c7d:	48 b9 60 1b 11 f0 00 	mov    $0xf0111b60,%rcx$/;"	l
f0103c84	obj/kern/kernel.asm	/^    f0103c84:	00 00 00 $/;"	l
f0103c87	obj/kern/kernel.asm	/^    f0103c87:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0103c8e	obj/kern/kernel.asm	/^    f0103c8e:	00 00 00 $/;"	l
f0103c91	obj/kern/kernel.asm	/^    f0103c91:	be ba 03 00 00       	mov    $0x3ba,%esi$/;"	l
f0103c96	obj/kern/kernel.asm	/^    f0103c96:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0103c9d	obj/kern/kernel.asm	/^    f0103c9d:	00 00 00 $/;"	l
f0103ca0	obj/kern/kernel.asm	/^    f0103ca0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103ca5	obj/kern/kernel.asm	/^    f0103ca5:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0103cac	obj/kern/kernel.asm	/^    f0103cac:	00 00 00 $/;"	l
f0103caf	obj/kern/kernel.asm	/^    f0103caf:	ff d3                	callq  *%rbx$/;"	l
f0103cb1	obj/kern/kernel.asm	/^    f0103cb1:	48 8b 45 b0          	mov    -0x50(%rbp),%rax$/;"	l
f0103cb5	obj/kern/kernel.asm	/^    f0103cb5:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0103cb8	obj/kern/kernel.asm	/^    f0103cb8:	48 b8 00 1a 10 f0 00 	mov    $0xf0101a00,%rax$/;"	l
f0103cbf	obj/kern/kernel.asm	/^    f0103cbf:	00 00 00 $/;"	l
f0103cc2	obj/kern/kernel.asm	/^    f0103cc2:	ff d0                	callq  *%rax$/;"	l
f0103cc4	obj/kern/kernel.asm	/^    f0103cc4:	48 3d 00 00 10 00    	cmp    $0x100000,%rax$/;"	l
f0103cca	obj/kern/kernel.asm	/^    f0103cca:	75 34                	jne    fffffffff0103d00 <end+0xfffffffefe662960>$/;"	l
f0103ccc	obj/kern/kernel.asm	/^    f0103ccc:	48 b9 84 1b 11 f0 00 	mov    $0xf0111b84,%rcx$/;"	l
f0103cd3	obj/kern/kernel.asm	/^    f0103cd3:	00 00 00 $/;"	l
f0103cd6	obj/kern/kernel.asm	/^    f0103cd6:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0103cdd	obj/kern/kernel.asm	/^    f0103cdd:	00 00 00 $/;"	l
f0103ce0	obj/kern/kernel.asm	/^    f0103ce0:	be bb 03 00 00       	mov    $0x3bb,%esi$/;"	l
f0103ce5	obj/kern/kernel.asm	/^    f0103ce5:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0103cec	obj/kern/kernel.asm	/^    f0103cec:	00 00 00 $/;"	l
f0103cef	obj/kern/kernel.asm	/^    f0103cef:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103cf4	obj/kern/kernel.asm	/^    f0103cf4:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0103cfb	obj/kern/kernel.asm	/^    f0103cfb:	00 00 00 $/;"	l
f0103cfe	obj/kern/kernel.asm	/^    f0103cfe:	ff d3                	callq  *%rbx$/;"	l
f0103d00	obj/kern/kernel.asm	/^    f0103d00:	48 8b 45 b0          	mov    -0x50(%rbp),%rax$/;"	l
f0103d04	obj/kern/kernel.asm	/^    f0103d04:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0103d07	obj/kern/kernel.asm	/^    f0103d07:	48 89 45 b0          	mov    %rax,-0x50(%rbp)$/;"	l
f0103d0b	obj/kern/kernel.asm	/^    f0103d0b:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)$/;"	l
f0103d10	obj/kern/kernel.asm	/^    f0103d10:	0f 85 0e fe ff ff    	jne    fffffffff0103b24 <end+0xfffffffefe662784>$/;"	l
f0103d16	obj/kern/kernel.asm	/^    f0103d16:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)$/;"	l
f0103d1d	obj/kern/kernel.asm	/^    f0103d1d:	00 $/;"	l
f0103d1e	obj/kern/kernel.asm	/^    f0103d1e:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
f0103d22	obj/kern/kernel.asm	/^    f0103d22:	48 89 45 b8          	mov    %rax,-0x48(%rbp)$/;"	l
f0103d26	obj/kern/kernel.asm	/^    f0103d26:	48 8b 45 b8          	mov    -0x48(%rbp),%rax$/;"	l
f0103d2a	obj/kern/kernel.asm	/^    f0103d2a:	48 89 45 b0          	mov    %rax,-0x50(%rbp)$/;"	l
f0103d2e	obj/kern/kernel.asm	/^    f0103d2e:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0103d33	obj/kern/kernel.asm	/^    f0103d33:	48 b8 fd 27 10 f0 00 	mov    $0xf01027fd,%rax$/;"	l
f0103d3a	obj/kern/kernel.asm	/^    f0103d3a:	00 00 00 $/;"	l
f0103d3d	obj/kern/kernel.asm	/^    f0103d3d:	ff d0                	callq  *%rax$/;"	l
f0103d3f	obj/kern/kernel.asm	/^    f0103d3f:	48 89 45 b0          	mov    %rax,-0x50(%rbp)$/;"	l
f0103d43	obj/kern/kernel.asm	/^    f0103d43:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)$/;"	l
f0103d48	obj/kern/kernel.asm	/^    f0103d48:	75 34                	jne    fffffffff0103d7e <end+0xfffffffefe6629de>$/;"	l
f0103d4a	obj/kern/kernel.asm	/^    f0103d4a:	48 b9 9f 1b 11 f0 00 	mov    $0xf0111b9f,%rcx$/;"	l
f0103d51	obj/kern/kernel.asm	/^    f0103d51:	00 00 00 $/;"	l
f0103d54	obj/kern/kernel.asm	/^    f0103d54:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0103d5b	obj/kern/kernel.asm	/^    f0103d5b:	00 00 00 $/;"	l
f0103d5e	obj/kern/kernel.asm	/^    f0103d5e:	be c0 03 00 00       	mov    $0x3c0,%esi$/;"	l
f0103d63	obj/kern/kernel.asm	/^    f0103d63:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0103d6a	obj/kern/kernel.asm	/^    f0103d6a:	00 00 00 $/;"	l
f0103d6d	obj/kern/kernel.asm	/^    f0103d6d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103d72	obj/kern/kernel.asm	/^    f0103d72:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0103d79	obj/kern/kernel.asm	/^    f0103d79:	00 00 00 $/;"	l
f0103d7c	obj/kern/kernel.asm	/^    f0103d7c:	ff d3                	callq  *%rbx$/;"	l
f0103d7e	obj/kern/kernel.asm	/^    f0103d7e:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0103d83	obj/kern/kernel.asm	/^    f0103d83:	48 b8 fd 27 10 f0 00 	mov    $0xf01027fd,%rax$/;"	l
f0103d8a	obj/kern/kernel.asm	/^    f0103d8a:	00 00 00 $/;"	l
f0103d8d	obj/kern/kernel.asm	/^    f0103d8d:	ff d0                	callq  *%rax$/;"	l
f0103d8f	obj/kern/kernel.asm	/^    f0103d8f:	48 89 45 b8          	mov    %rax,-0x48(%rbp)$/;"	l
f0103d93	obj/kern/kernel.asm	/^    f0103d93:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)$/;"	l
f0103d98	obj/kern/kernel.asm	/^    f0103d98:	75 34                	jne    fffffffff0103dce <end+0xfffffffefe662a2e>$/;"	l
f0103d9a	obj/kern/kernel.asm	/^    f0103d9a:	48 b9 b5 1b 11 f0 00 	mov    $0xf0111bb5,%rcx$/;"	l
f0103da1	obj/kern/kernel.asm	/^    f0103da1:	00 00 00 $/;"	l
f0103da4	obj/kern/kernel.asm	/^    f0103da4:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0103dab	obj/kern/kernel.asm	/^    f0103dab:	00 00 00 $/;"	l
f0103dae	obj/kern/kernel.asm	/^    f0103dae:	be c1 03 00 00       	mov    $0x3c1,%esi$/;"	l
f0103db3	obj/kern/kernel.asm	/^    f0103db3:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0103dba	obj/kern/kernel.asm	/^    f0103dba:	00 00 00 $/;"	l
f0103dbd	obj/kern/kernel.asm	/^    f0103dbd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103dc2	obj/kern/kernel.asm	/^    f0103dc2:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0103dc9	obj/kern/kernel.asm	/^    f0103dc9:	00 00 00 $/;"	l
f0103dcc	obj/kern/kernel.asm	/^    f0103dcc:	ff d3                	callq  *%rbx$/;"	l
f0103dce	obj/kern/kernel.asm	/^    f0103dce:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0103dd3	obj/kern/kernel.asm	/^    f0103dd3:	48 b8 fd 27 10 f0 00 	mov    $0xf01027fd,%rax$/;"	l
f0103dda	obj/kern/kernel.asm	/^    f0103dda:	00 00 00 $/;"	l
f0103ddd	obj/kern/kernel.asm	/^    f0103ddd:	ff d0                	callq  *%rax$/;"	l
f0103ddf	obj/kern/kernel.asm	/^    f0103ddf:	48 89 45 c0          	mov    %rax,-0x40(%rbp)$/;"	l
f0103de3	obj/kern/kernel.asm	/^    f0103de3:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)$/;"	l
f0103de8	obj/kern/kernel.asm	/^    f0103de8:	75 34                	jne    fffffffff0103e1e <end+0xfffffffefe662a7e>$/;"	l
f0103dea	obj/kern/kernel.asm	/^    f0103dea:	48 b9 cb 1b 11 f0 00 	mov    $0xf0111bcb,%rcx$/;"	l
f0103df1	obj/kern/kernel.asm	/^    f0103df1:	00 00 00 $/;"	l
f0103df4	obj/kern/kernel.asm	/^    f0103df4:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0103dfb	obj/kern/kernel.asm	/^    f0103dfb:	00 00 00 $/;"	l
f0103dfe	obj/kern/kernel.asm	/^    f0103dfe:	be c2 03 00 00       	mov    $0x3c2,%esi$/;"	l
f0103e03	obj/kern/kernel.asm	/^    f0103e03:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0103e0a	obj/kern/kernel.asm	/^    f0103e0a:	00 00 00 $/;"	l
f0103e0d	obj/kern/kernel.asm	/^    f0103e0d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103e12	obj/kern/kernel.asm	/^    f0103e12:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0103e19	obj/kern/kernel.asm	/^    f0103e19:	00 00 00 $/;"	l
f0103e1c	obj/kern/kernel.asm	/^    f0103e1c:	ff d3                	callq  *%rbx$/;"	l
f0103e1e	obj/kern/kernel.asm	/^    f0103e1e:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)$/;"	l
f0103e23	obj/kern/kernel.asm	/^    f0103e23:	75 34                	jne    fffffffff0103e59 <end+0xfffffffefe662ab9>$/;"	l
f0103e25	obj/kern/kernel.asm	/^    f0103e25:	48 b9 e1 1b 11 f0 00 	mov    $0xf0111be1,%rcx$/;"	l
f0103e2c	obj/kern/kernel.asm	/^    f0103e2c:	00 00 00 $/;"	l
f0103e2f	obj/kern/kernel.asm	/^    f0103e2f:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0103e36	obj/kern/kernel.asm	/^    f0103e36:	00 00 00 $/;"	l
f0103e39	obj/kern/kernel.asm	/^    f0103e39:	be c3 03 00 00       	mov    $0x3c3,%esi$/;"	l
f0103e3e	obj/kern/kernel.asm	/^    f0103e3e:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0103e45	obj/kern/kernel.asm	/^    f0103e45:	00 00 00 $/;"	l
f0103e48	obj/kern/kernel.asm	/^    f0103e48:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103e4d	obj/kern/kernel.asm	/^    f0103e4d:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0103e54	obj/kern/kernel.asm	/^    f0103e54:	00 00 00 $/;"	l
f0103e57	obj/kern/kernel.asm	/^    f0103e57:	ff d3                	callq  *%rbx$/;"	l
f0103e59	obj/kern/kernel.asm	/^    f0103e59:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)$/;"	l
f0103e5e	obj/kern/kernel.asm	/^    f0103e5e:	74 0a                	je     fffffffff0103e6a <end+0xfffffffefe662aca>$/;"	l
f0103e60	obj/kern/kernel.asm	/^    f0103e60:	48 8b 45 b8          	mov    -0x48(%rbp),%rax$/;"	l
f0103e64	obj/kern/kernel.asm	/^    f0103e64:	48 3b 45 b0          	cmp    -0x50(%rbp),%rax$/;"	l
f0103e68	obj/kern/kernel.asm	/^    f0103e68:	75 34                	jne    fffffffff0103e9e <end+0xfffffffefe662afe>$/;"	l
f0103e6a	obj/kern/kernel.asm	/^    f0103e6a:	48 b9 e5 1b 11 f0 00 	mov    $0xf0111be5,%rcx$/;"	l
f0103e71	obj/kern/kernel.asm	/^    f0103e71:	00 00 00 $/;"	l
f0103e74	obj/kern/kernel.asm	/^    f0103e74:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0103e7b	obj/kern/kernel.asm	/^    f0103e7b:	00 00 00 $/;"	l
f0103e7e	obj/kern/kernel.asm	/^    f0103e7e:	be c4 03 00 00       	mov    $0x3c4,%esi$/;"	l
f0103e83	obj/kern/kernel.asm	/^    f0103e83:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0103e8a	obj/kern/kernel.asm	/^    f0103e8a:	00 00 00 $/;"	l
f0103e8d	obj/kern/kernel.asm	/^    f0103e8d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103e92	obj/kern/kernel.asm	/^    f0103e92:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0103e99	obj/kern/kernel.asm	/^    f0103e99:	00 00 00 $/;"	l
f0103e9c	obj/kern/kernel.asm	/^    f0103e9c:	ff d3                	callq  *%rbx$/;"	l
f0103e9e	obj/kern/kernel.asm	/^    f0103e9e:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)$/;"	l
f0103ea3	obj/kern/kernel.asm	/^    f0103ea3:	74 14                	je     fffffffff0103eb9 <end+0xfffffffefe662b19>$/;"	l
f0103ea5	obj/kern/kernel.asm	/^    f0103ea5:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
f0103ea9	obj/kern/kernel.asm	/^    f0103ea9:	48 3b 45 b8          	cmp    -0x48(%rbp),%rax$/;"	l
f0103ead	obj/kern/kernel.asm	/^    f0103ead:	74 0a                	je     fffffffff0103eb9 <end+0xfffffffefe662b19>$/;"	l
f0103eaf	obj/kern/kernel.asm	/^    f0103eaf:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
f0103eb3	obj/kern/kernel.asm	/^    f0103eb3:	48 3b 45 b0          	cmp    -0x50(%rbp),%rax$/;"	l
f0103eb7	obj/kern/kernel.asm	/^    f0103eb7:	75 34                	jne    fffffffff0103eed <end+0xfffffffefe662b4d>$/;"	l
f0103eb9	obj/kern/kernel.asm	/^    f0103eb9:	48 b9 f8 1b 11 f0 00 	mov    $0xf0111bf8,%rcx$/;"	l
f0103ec0	obj/kern/kernel.asm	/^    f0103ec0:	00 00 00 $/;"	l
f0103ec3	obj/kern/kernel.asm	/^    f0103ec3:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0103eca	obj/kern/kernel.asm	/^    f0103eca:	00 00 00 $/;"	l
f0103ecd	obj/kern/kernel.asm	/^    f0103ecd:	be c5 03 00 00       	mov    $0x3c5,%esi$/;"	l
f0103ed2	obj/kern/kernel.asm	/^    f0103ed2:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0103ed9	obj/kern/kernel.asm	/^    f0103ed9:	00 00 00 $/;"	l
f0103edc	obj/kern/kernel.asm	/^    f0103edc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103ee1	obj/kern/kernel.asm	/^    f0103ee1:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0103ee8	obj/kern/kernel.asm	/^    f0103ee8:	00 00 00 $/;"	l
f0103eeb	obj/kern/kernel.asm	/^    f0103eeb:	ff d3                	callq  *%rbx$/;"	l
f0103eed	obj/kern/kernel.asm	/^    f0103eed:	48 8b 45 b0          	mov    -0x50(%rbp),%rax$/;"	l
f0103ef1	obj/kern/kernel.asm	/^    f0103ef1:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0103ef4	obj/kern/kernel.asm	/^    f0103ef4:	48 b8 00 1a 10 f0 00 	mov    $0xf0101a00,%rax$/;"	l
f0103efb	obj/kern/kernel.asm	/^    f0103efb:	00 00 00 $/;"	l
f0103efe	obj/kern/kernel.asm	/^    f0103efe:	ff d0                	callq  *%rax$/;"	l
f0103f00	obj/kern/kernel.asm	/^    f0103f00:	48 ba 68 77 a2 f1 00 	mov    $0xf1a27768,%rdx$/;"	l
f0103f07	obj/kern/kernel.asm	/^    f0103f07:	00 00 00 $/;"	l
f0103f0a	obj/kern/kernel.asm	/^    f0103f0a:	48 8b 12             	mov    (%rdx),%rdx$/;"	l
f0103f0d	obj/kern/kernel.asm	/^    f0103f0d:	48 c1 e2 0c          	shl    $0xc,%rdx$/;"	l
f0103f11	obj/kern/kernel.asm	/^    f0103f11:	48 39 d0             	cmp    %rdx,%rax$/;"	l
f0103f14	obj/kern/kernel.asm	/^    f0103f14:	72 34                	jb     fffffffff0103f4a <end+0xfffffffefe662baa>$/;"	l
f0103f16	obj/kern/kernel.asm	/^    f0103f16:	48 b9 18 1c 11 f0 00 	mov    $0xf0111c18,%rcx$/;"	l
f0103f1d	obj/kern/kernel.asm	/^    f0103f1d:	00 00 00 $/;"	l
f0103f20	obj/kern/kernel.asm	/^    f0103f20:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0103f27	obj/kern/kernel.asm	/^    f0103f27:	00 00 00 $/;"	l
f0103f2a	obj/kern/kernel.asm	/^    f0103f2a:	be c6 03 00 00       	mov    $0x3c6,%esi$/;"	l
f0103f2f	obj/kern/kernel.asm	/^    f0103f2f:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0103f36	obj/kern/kernel.asm	/^    f0103f36:	00 00 00 $/;"	l
f0103f39	obj/kern/kernel.asm	/^    f0103f39:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103f3e	obj/kern/kernel.asm	/^    f0103f3e:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0103f45	obj/kern/kernel.asm	/^    f0103f45:	00 00 00 $/;"	l
f0103f48	obj/kern/kernel.asm	/^    f0103f48:	ff d3                	callq  *%rbx$/;"	l
f0103f4a	obj/kern/kernel.asm	/^    f0103f4a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax$/;"	l
f0103f4e	obj/kern/kernel.asm	/^    f0103f4e:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0103f51	obj/kern/kernel.asm	/^    f0103f51:	48 b8 00 1a 10 f0 00 	mov    $0xf0101a00,%rax$/;"	l
f0103f58	obj/kern/kernel.asm	/^    f0103f58:	00 00 00 $/;"	l
f0103f5b	obj/kern/kernel.asm	/^    f0103f5b:	ff d0                	callq  *%rax$/;"	l
f0103f5d	obj/kern/kernel.asm	/^    f0103f5d:	48 ba 68 77 a2 f1 00 	mov    $0xf1a27768,%rdx$/;"	l
f0103f64	obj/kern/kernel.asm	/^    f0103f64:	00 00 00 $/;"	l
f0103f67	obj/kern/kernel.asm	/^    f0103f67:	48 8b 12             	mov    (%rdx),%rdx$/;"	l
f0103f6a	obj/kern/kernel.asm	/^    f0103f6a:	48 c1 e2 0c          	shl    $0xc,%rdx$/;"	l
f0103f6e	obj/kern/kernel.asm	/^    f0103f6e:	48 39 d0             	cmp    %rdx,%rax$/;"	l
f0103f71	obj/kern/kernel.asm	/^    f0103f71:	72 34                	jb     fffffffff0103fa7 <end+0xfffffffefe662c07>$/;"	l
f0103f73	obj/kern/kernel.asm	/^    f0103f73:	48 b9 35 1c 11 f0 00 	mov    $0xf0111c35,%rcx$/;"	l
f0103f7a	obj/kern/kernel.asm	/^    f0103f7a:	00 00 00 $/;"	l
f0103f7d	obj/kern/kernel.asm	/^    f0103f7d:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0103f84	obj/kern/kernel.asm	/^    f0103f84:	00 00 00 $/;"	l
f0103f87	obj/kern/kernel.asm	/^    f0103f87:	be c7 03 00 00       	mov    $0x3c7,%esi$/;"	l
f0103f8c	obj/kern/kernel.asm	/^    f0103f8c:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0103f93	obj/kern/kernel.asm	/^    f0103f93:	00 00 00 $/;"	l
f0103f96	obj/kern/kernel.asm	/^    f0103f96:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103f9b	obj/kern/kernel.asm	/^    f0103f9b:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0103fa2	obj/kern/kernel.asm	/^    f0103fa2:	00 00 00 $/;"	l
f0103fa5	obj/kern/kernel.asm	/^    f0103fa5:	ff d3                	callq  *%rbx$/;"	l
f0103fa7	obj/kern/kernel.asm	/^    f0103fa7:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
f0103fab	obj/kern/kernel.asm	/^    f0103fab:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0103fae	obj/kern/kernel.asm	/^    f0103fae:	48 b8 00 1a 10 f0 00 	mov    $0xf0101a00,%rax$/;"	l
f0103fb5	obj/kern/kernel.asm	/^    f0103fb5:	00 00 00 $/;"	l
f0103fb8	obj/kern/kernel.asm	/^    f0103fb8:	ff d0                	callq  *%rax$/;"	l
f0103fba	obj/kern/kernel.asm	/^    f0103fba:	48 ba 68 77 a2 f1 00 	mov    $0xf1a27768,%rdx$/;"	l
f0103fc1	obj/kern/kernel.asm	/^    f0103fc1:	00 00 00 $/;"	l
f0103fc4	obj/kern/kernel.asm	/^    f0103fc4:	48 8b 12             	mov    (%rdx),%rdx$/;"	l
f0103fc7	obj/kern/kernel.asm	/^    f0103fc7:	48 c1 e2 0c          	shl    $0xc,%rdx$/;"	l
f0103fcb	obj/kern/kernel.asm	/^    f0103fcb:	48 39 d0             	cmp    %rdx,%rax$/;"	l
f0103fce	obj/kern/kernel.asm	/^    f0103fce:	72 34                	jb     fffffffff0104004 <end+0xfffffffefe662c64>$/;"	l
f0103fd0	obj/kern/kernel.asm	/^    f0103fd0:	48 b9 52 1c 11 f0 00 	mov    $0xf0111c52,%rcx$/;"	l
f0103fd7	obj/kern/kernel.asm	/^    f0103fd7:	00 00 00 $/;"	l
f0103fda	obj/kern/kernel.asm	/^    f0103fda:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0103fe1	obj/kern/kernel.asm	/^    f0103fe1:	00 00 00 $/;"	l
f0103fe4	obj/kern/kernel.asm	/^    f0103fe4:	be c8 03 00 00       	mov    $0x3c8,%esi$/;"	l
f0103fe9	obj/kern/kernel.asm	/^    f0103fe9:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0103ff0	obj/kern/kernel.asm	/^    f0103ff0:	00 00 00 $/;"	l
f0103ff3	obj/kern/kernel.asm	/^    f0103ff3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0103ff8	obj/kern/kernel.asm	/^    f0103ff8:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0103fff	obj/kern/kernel.asm	/^    f0103fff:	00 00 00 $/;"	l
f0104002	obj/kern/kernel.asm	/^    f0104002:	ff d3                	callq  *%rbx$/;"	l
f0104004	obj/kern/kernel.asm	/^    f0104004:	48 b8 38 62 a2 f1 00 	mov    $0xf1a26238,%rax$/;"	l
f010400b	obj/kern/kernel.asm	/^    f010400b:	00 00 00 $/;"	l
f010400e	obj/kern/kernel.asm	/^    f010400e:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0104011	obj/kern/kernel.asm	/^    f0104011:	48 89 45 d0          	mov    %rax,-0x30(%rbp)$/;"	l
f0104015	obj/kern/kernel.asm	/^    f0104015:	48 b8 38 62 a2 f1 00 	mov    $0xf1a26238,%rax$/;"	l
f010401c	obj/kern/kernel.asm	/^    f010401c:	00 00 00 $/;"	l
f010401f	obj/kern/kernel.asm	/^    f010401f:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)$/;"	l
f0104026	obj/kern/kernel.asm	/^    f0104026:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f010402b	obj/kern/kernel.asm	/^    f010402b:	48 b8 fd 27 10 f0 00 	mov    $0xf01027fd,%rax$/;"	l
f0104032	obj/kern/kernel.asm	/^    f0104032:	00 00 00 $/;"	l
f0104035	obj/kern/kernel.asm	/^    f0104035:	ff d0                	callq  *%rax$/;"	l
f0104037	obj/kern/kernel.asm	/^    f0104037:	48 85 c0             	test   %rax,%rax$/;"	l
f010403a	obj/kern/kernel.asm	/^    f010403a:	74 34                	je     fffffffff0104070 <end+0xfffffffefe662cd0>$/;"	l
f010403c	obj/kern/kernel.asm	/^    f010403c:	48 b9 6f 1c 11 f0 00 	mov    $0xf0111c6f,%rcx$/;"	l
f0104043	obj/kern/kernel.asm	/^    f0104043:	00 00 00 $/;"	l
f0104046	obj/kern/kernel.asm	/^    f0104046:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f010404d	obj/kern/kernel.asm	/^    f010404d:	00 00 00 $/;"	l
f0104050	obj/kern/kernel.asm	/^    f0104050:	be cf 03 00 00       	mov    $0x3cf,%esi$/;"	l
f0104055	obj/kern/kernel.asm	/^    f0104055:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f010405c	obj/kern/kernel.asm	/^    f010405c:	00 00 00 $/;"	l
f010405f	obj/kern/kernel.asm	/^    f010405f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104064	obj/kern/kernel.asm	/^    f0104064:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f010406b	obj/kern/kernel.asm	/^    f010406b:	00 00 00 $/;"	l
f010406e	obj/kern/kernel.asm	/^    f010406e:	ff d3                	callq  *%rbx$/;"	l
f0104070	obj/kern/kernel.asm	/^    f0104070:	48 8b 45 b0          	mov    -0x50(%rbp),%rax$/;"	l
f0104074	obj/kern/kernel.asm	/^    f0104074:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0104077	obj/kern/kernel.asm	/^    f0104077:	48 b8 b6 28 10 f0 00 	mov    $0xf01028b6,%rax$/;"	l
f010407e	obj/kern/kernel.asm	/^    f010407e:	00 00 00 $/;"	l
f0104081	obj/kern/kernel.asm	/^    f0104081:	ff d0                	callq  *%rax$/;"	l
f0104083	obj/kern/kernel.asm	/^    f0104083:	48 8b 45 b8          	mov    -0x48(%rbp),%rax$/;"	l
f0104087	obj/kern/kernel.asm	/^    f0104087:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010408a	obj/kern/kernel.asm	/^    f010408a:	48 b8 b6 28 10 f0 00 	mov    $0xf01028b6,%rax$/;"	l
f0104091	obj/kern/kernel.asm	/^    f0104091:	00 00 00 $/;"	l
f0104094	obj/kern/kernel.asm	/^    f0104094:	ff d0                	callq  *%rax$/;"	l
f0104096	obj/kern/kernel.asm	/^    f0104096:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
f010409a	obj/kern/kernel.asm	/^    f010409a:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010409d	obj/kern/kernel.asm	/^    f010409d:	48 b8 b6 28 10 f0 00 	mov    $0xf01028b6,%rax$/;"	l
f01040a4	obj/kern/kernel.asm	/^    f01040a4:	00 00 00 $/;"	l
f01040a7	obj/kern/kernel.asm	/^    f01040a7:	ff d0                	callq  *%rax$/;"	l
f01040a9	obj/kern/kernel.asm	/^    f01040a9:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)$/;"	l
f01040b0	obj/kern/kernel.asm	/^    f01040b0:	00 $/;"	l
f01040b1	obj/kern/kernel.asm	/^    f01040b1:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
f01040b5	obj/kern/kernel.asm	/^    f01040b5:	48 89 45 b8          	mov    %rax,-0x48(%rbp)$/;"	l
f01040b9	obj/kern/kernel.asm	/^    f01040b9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax$/;"	l
f01040bd	obj/kern/kernel.asm	/^    f01040bd:	48 89 45 b0          	mov    %rax,-0x50(%rbp)$/;"	l
f01040c1	obj/kern/kernel.asm	/^    f01040c1:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f01040c6	obj/kern/kernel.asm	/^    f01040c6:	48 b8 fd 27 10 f0 00 	mov    $0xf01027fd,%rax$/;"	l
f01040cd	obj/kern/kernel.asm	/^    f01040cd:	00 00 00 $/;"	l
f01040d0	obj/kern/kernel.asm	/^    f01040d0:	ff d0                	callq  *%rax$/;"	l
f01040d2	obj/kern/kernel.asm	/^    f01040d2:	48 89 45 b0          	mov    %rax,-0x50(%rbp)$/;"	l
f01040d6	obj/kern/kernel.asm	/^    f01040d6:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)$/;"	l
f01040db	obj/kern/kernel.asm	/^    f01040db:	75 34                	jne    fffffffff0104111 <end+0xfffffffefe662d71>$/;"	l
f01040dd	obj/kern/kernel.asm	/^    f01040dd:	48 b9 9f 1b 11 f0 00 	mov    $0xf0111b9f,%rcx$/;"	l
f01040e4	obj/kern/kernel.asm	/^    f01040e4:	00 00 00 $/;"	l
f01040e7	obj/kern/kernel.asm	/^    f01040e7:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f01040ee	obj/kern/kernel.asm	/^    f01040ee:	00 00 00 $/;"	l
f01040f1	obj/kern/kernel.asm	/^    f01040f1:	be d6 03 00 00       	mov    $0x3d6,%esi$/;"	l
f01040f6	obj/kern/kernel.asm	/^    f01040f6:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f01040fd	obj/kern/kernel.asm	/^    f01040fd:	00 00 00 $/;"	l
f0104100	obj/kern/kernel.asm	/^    f0104100:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104105	obj/kern/kernel.asm	/^    f0104105:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f010410c	obj/kern/kernel.asm	/^    f010410c:	00 00 00 $/;"	l
f010410f	obj/kern/kernel.asm	/^    f010410f:	ff d3                	callq  *%rbx$/;"	l
f0104111	obj/kern/kernel.asm	/^    f0104111:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0104116	obj/kern/kernel.asm	/^    f0104116:	48 b8 fd 27 10 f0 00 	mov    $0xf01027fd,%rax$/;"	l
f010411d	obj/kern/kernel.asm	/^    f010411d:	00 00 00 $/;"	l
f0104120	obj/kern/kernel.asm	/^    f0104120:	ff d0                	callq  *%rax$/;"	l
f0104122	obj/kern/kernel.asm	/^    f0104122:	48 89 45 b8          	mov    %rax,-0x48(%rbp)$/;"	l
f0104126	obj/kern/kernel.asm	/^    f0104126:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)$/;"	l
f010412b	obj/kern/kernel.asm	/^    f010412b:	75 34                	jne    fffffffff0104161 <end+0xfffffffefe662dc1>$/;"	l
f010412d	obj/kern/kernel.asm	/^    f010412d:	48 b9 b5 1b 11 f0 00 	mov    $0xf0111bb5,%rcx$/;"	l
f0104134	obj/kern/kernel.asm	/^    f0104134:	00 00 00 $/;"	l
f0104137	obj/kern/kernel.asm	/^    f0104137:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f010413e	obj/kern/kernel.asm	/^    f010413e:	00 00 00 $/;"	l
f0104141	obj/kern/kernel.asm	/^    f0104141:	be d7 03 00 00       	mov    $0x3d7,%esi$/;"	l
f0104146	obj/kern/kernel.asm	/^    f0104146:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f010414d	obj/kern/kernel.asm	/^    f010414d:	00 00 00 $/;"	l
f0104150	obj/kern/kernel.asm	/^    f0104150:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104155	obj/kern/kernel.asm	/^    f0104155:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f010415c	obj/kern/kernel.asm	/^    f010415c:	00 00 00 $/;"	l
f010415f	obj/kern/kernel.asm	/^    f010415f:	ff d3                	callq  *%rbx$/;"	l
f0104161	obj/kern/kernel.asm	/^    f0104161:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0104166	obj/kern/kernel.asm	/^    f0104166:	48 b8 fd 27 10 f0 00 	mov    $0xf01027fd,%rax$/;"	l
f010416d	obj/kern/kernel.asm	/^    f010416d:	00 00 00 $/;"	l
f0104170	obj/kern/kernel.asm	/^    f0104170:	ff d0                	callq  *%rax$/;"	l
f0104172	obj/kern/kernel.asm	/^    f0104172:	48 89 45 c0          	mov    %rax,-0x40(%rbp)$/;"	l
f0104176	obj/kern/kernel.asm	/^    f0104176:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)$/;"	l
f010417b	obj/kern/kernel.asm	/^    f010417b:	75 34                	jne    fffffffff01041b1 <end+0xfffffffefe662e11>$/;"	l
f010417d	obj/kern/kernel.asm	/^    f010417d:	48 b9 cb 1b 11 f0 00 	mov    $0xf0111bcb,%rcx$/;"	l
f0104184	obj/kern/kernel.asm	/^    f0104184:	00 00 00 $/;"	l
f0104187	obj/kern/kernel.asm	/^    f0104187:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f010418e	obj/kern/kernel.asm	/^    f010418e:	00 00 00 $/;"	l
f0104191	obj/kern/kernel.asm	/^    f0104191:	be d8 03 00 00       	mov    $0x3d8,%esi$/;"	l
f0104196	obj/kern/kernel.asm	/^    f0104196:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f010419d	obj/kern/kernel.asm	/^    f010419d:	00 00 00 $/;"	l
f01041a0	obj/kern/kernel.asm	/^    f01041a0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01041a5	obj/kern/kernel.asm	/^    f01041a5:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f01041ac	obj/kern/kernel.asm	/^    f01041ac:	00 00 00 $/;"	l
f01041af	obj/kern/kernel.asm	/^    f01041af:	ff d3                	callq  *%rbx$/;"	l
f01041b1	obj/kern/kernel.asm	/^    f01041b1:	48 83 7d b0 00       	cmpq   $0x0,-0x50(%rbp)$/;"	l
f01041b6	obj/kern/kernel.asm	/^    f01041b6:	75 34                	jne    fffffffff01041ec <end+0xfffffffefe662e4c>$/;"	l
f01041b8	obj/kern/kernel.asm	/^    f01041b8:	48 b9 e1 1b 11 f0 00 	mov    $0xf0111be1,%rcx$/;"	l
f01041bf	obj/kern/kernel.asm	/^    f01041bf:	00 00 00 $/;"	l
f01041c2	obj/kern/kernel.asm	/^    f01041c2:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f01041c9	obj/kern/kernel.asm	/^    f01041c9:	00 00 00 $/;"	l
f01041cc	obj/kern/kernel.asm	/^    f01041cc:	be d9 03 00 00       	mov    $0x3d9,%esi$/;"	l
f01041d1	obj/kern/kernel.asm	/^    f01041d1:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f01041d8	obj/kern/kernel.asm	/^    f01041d8:	00 00 00 $/;"	l
f01041db	obj/kern/kernel.asm	/^    f01041db:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01041e0	obj/kern/kernel.asm	/^    f01041e0:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f01041e7	obj/kern/kernel.asm	/^    f01041e7:	00 00 00 $/;"	l
f01041ea	obj/kern/kernel.asm	/^    f01041ea:	ff d3                	callq  *%rbx$/;"	l
f01041ec	obj/kern/kernel.asm	/^    f01041ec:	48 83 7d b8 00       	cmpq   $0x0,-0x48(%rbp)$/;"	l
f01041f1	obj/kern/kernel.asm	/^    f01041f1:	74 0a                	je     fffffffff01041fd <end+0xfffffffefe662e5d>$/;"	l
f01041f3	obj/kern/kernel.asm	/^    f01041f3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax$/;"	l
f01041f7	obj/kern/kernel.asm	/^    f01041f7:	48 3b 45 b0          	cmp    -0x50(%rbp),%rax$/;"	l
f01041fb	obj/kern/kernel.asm	/^    f01041fb:	75 34                	jne    fffffffff0104231 <end+0xfffffffefe662e91>$/;"	l
f01041fd	obj/kern/kernel.asm	/^    f01041fd:	48 b9 e5 1b 11 f0 00 	mov    $0xf0111be5,%rcx$/;"	l
f0104204	obj/kern/kernel.asm	/^    f0104204:	00 00 00 $/;"	l
f0104207	obj/kern/kernel.asm	/^    f0104207:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f010420e	obj/kern/kernel.asm	/^    f010420e:	00 00 00 $/;"	l
f0104211	obj/kern/kernel.asm	/^    f0104211:	be da 03 00 00       	mov    $0x3da,%esi$/;"	l
f0104216	obj/kern/kernel.asm	/^    f0104216:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f010421d	obj/kern/kernel.asm	/^    f010421d:	00 00 00 $/;"	l
f0104220	obj/kern/kernel.asm	/^    f0104220:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104225	obj/kern/kernel.asm	/^    f0104225:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f010422c	obj/kern/kernel.asm	/^    f010422c:	00 00 00 $/;"	l
f010422f	obj/kern/kernel.asm	/^    f010422f:	ff d3                	callq  *%rbx$/;"	l
f0104231	obj/kern/kernel.asm	/^    f0104231:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)$/;"	l
f0104236	obj/kern/kernel.asm	/^    f0104236:	74 14                	je     fffffffff010424c <end+0xfffffffefe662eac>$/;"	l
f0104238	obj/kern/kernel.asm	/^    f0104238:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
f010423c	obj/kern/kernel.asm	/^    f010423c:	48 3b 45 b8          	cmp    -0x48(%rbp),%rax$/;"	l
f0104240	obj/kern/kernel.asm	/^    f0104240:	74 0a                	je     fffffffff010424c <end+0xfffffffefe662eac>$/;"	l
f0104242	obj/kern/kernel.asm	/^    f0104242:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
f0104246	obj/kern/kernel.asm	/^    f0104246:	48 3b 45 b0          	cmp    -0x50(%rbp),%rax$/;"	l
f010424a	obj/kern/kernel.asm	/^    f010424a:	75 34                	jne    fffffffff0104280 <end+0xfffffffefe662ee0>$/;"	l
f010424c	obj/kern/kernel.asm	/^    f010424c:	48 b9 f8 1b 11 f0 00 	mov    $0xf0111bf8,%rcx$/;"	l
f0104253	obj/kern/kernel.asm	/^    f0104253:	00 00 00 $/;"	l
f0104256	obj/kern/kernel.asm	/^    f0104256:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f010425d	obj/kern/kernel.asm	/^    f010425d:	00 00 00 $/;"	l
f0104260	obj/kern/kernel.asm	/^    f0104260:	be db 03 00 00       	mov    $0x3db,%esi$/;"	l
f0104265	obj/kern/kernel.asm	/^    f0104265:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f010426c	obj/kern/kernel.asm	/^    f010426c:	00 00 00 $/;"	l
f010426f	obj/kern/kernel.asm	/^    f010426f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104274	obj/kern/kernel.asm	/^    f0104274:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f010427b	obj/kern/kernel.asm	/^    f010427b:	00 00 00 $/;"	l
f010427e	obj/kern/kernel.asm	/^    f010427e:	ff d3                	callq  *%rbx$/;"	l
f0104280	obj/kern/kernel.asm	/^    f0104280:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0104285	obj/kern/kernel.asm	/^    f0104285:	48 b8 fd 27 10 f0 00 	mov    $0xf01027fd,%rax$/;"	l
f010428c	obj/kern/kernel.asm	/^    f010428c:	00 00 00 $/;"	l
f010428f	obj/kern/kernel.asm	/^    f010428f:	ff d0                	callq  *%rax$/;"	l
f0104291	obj/kern/kernel.asm	/^    f0104291:	48 85 c0             	test   %rax,%rax$/;"	l
f0104294	obj/kern/kernel.asm	/^    f0104294:	74 34                	je     fffffffff01042ca <end+0xfffffffefe662f2a>$/;"	l
f0104296	obj/kern/kernel.asm	/^    f0104296:	48 b9 6f 1c 11 f0 00 	mov    $0xf0111c6f,%rcx$/;"	l
f010429d	obj/kern/kernel.asm	/^    f010429d:	00 00 00 $/;"	l
f01042a0	obj/kern/kernel.asm	/^    f01042a0:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f01042a7	obj/kern/kernel.asm	/^    f01042a7:	00 00 00 $/;"	l
f01042aa	obj/kern/kernel.asm	/^    f01042aa:	be dc 03 00 00       	mov    $0x3dc,%esi$/;"	l
f01042af	obj/kern/kernel.asm	/^    f01042af:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f01042b6	obj/kern/kernel.asm	/^    f01042b6:	00 00 00 $/;"	l
f01042b9	obj/kern/kernel.asm	/^    f01042b9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01042be	obj/kern/kernel.asm	/^    f01042be:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f01042c5	obj/kern/kernel.asm	/^    f01042c5:	00 00 00 $/;"	l
f01042c8	obj/kern/kernel.asm	/^    f01042c8:	ff d3                	callq  *%rbx$/;"	l
f01042ca	obj/kern/kernel.asm	/^    f01042ca:	48 8b 45 b0          	mov    -0x50(%rbp),%rax$/;"	l
f01042ce	obj/kern/kernel.asm	/^    f01042ce:	48 89 c7             	mov    %rax,%rdi$/;"	l
f01042d1	obj/kern/kernel.asm	/^    f01042d1:	48 b8 96 1a 10 f0 00 	mov    $0xf0101a96,%rax$/;"	l
f01042d8	obj/kern/kernel.asm	/^    f01042d8:	00 00 00 $/;"	l
f01042db	obj/kern/kernel.asm	/^    f01042db:	ff d0                	callq  *%rax$/;"	l
f01042dd	obj/kern/kernel.asm	/^    f01042dd:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f01042e2	obj/kern/kernel.asm	/^    f01042e2:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
f01042e7	obj/kern/kernel.asm	/^    f01042e7:	48 89 c7             	mov    %rax,%rdi$/;"	l
f01042ea	obj/kern/kernel.asm	/^    f01042ea:	48 b8 42 ee 10 f0 00 	mov    $0xf010ee42,%rax$/;"	l
f01042f1	obj/kern/kernel.asm	/^    f01042f1:	00 00 00 $/;"	l
f01042f4	obj/kern/kernel.asm	/^    f01042f4:	ff d0                	callq  *%rax$/;"	l
f01042f6	obj/kern/kernel.asm	/^    f01042f6:	48 8b 45 b0          	mov    -0x50(%rbp),%rax$/;"	l
f01042fa	obj/kern/kernel.asm	/^    f01042fa:	48 89 c7             	mov    %rax,%rdi$/;"	l
f01042fd	obj/kern/kernel.asm	/^    f01042fd:	48 b8 b6 28 10 f0 00 	mov    $0xf01028b6,%rax$/;"	l
f0104304	obj/kern/kernel.asm	/^    f0104304:	00 00 00 $/;"	l
f0104307	obj/kern/kernel.asm	/^    f0104307:	ff d0                	callq  *%rax$/;"	l
f0104309	obj/kern/kernel.asm	/^    f0104309:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
f010430e	obj/kern/kernel.asm	/^    f010430e:	48 b8 fd 27 10 f0 00 	mov    $0xf01027fd,%rax$/;"	l
f0104315	obj/kern/kernel.asm	/^    f0104315:	00 00 00 $/;"	l
f0104318	obj/kern/kernel.asm	/^    f0104318:	ff d0                	callq  *%rax$/;"	l
f010431a	obj/kern/kernel.asm	/^    f010431a:	48 89 45 a8          	mov    %rax,-0x58(%rbp)$/;"	l
f010431e	obj/kern/kernel.asm	/^    f010431e:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)$/;"	l
f0104323	obj/kern/kernel.asm	/^    f0104323:	75 34                	jne    fffffffff0104359 <end+0xfffffffefe662fb9>$/;"	l
f0104325	obj/kern/kernel.asm	/^    f0104325:	48 b9 7e 1c 11 f0 00 	mov    $0xf0111c7e,%rcx$/;"	l
f010432c	obj/kern/kernel.asm	/^    f010432c:	00 00 00 $/;"	l
f010432f	obj/kern/kernel.asm	/^    f010432f:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0104336	obj/kern/kernel.asm	/^    f0104336:	00 00 00 $/;"	l
f0104339	obj/kern/kernel.asm	/^    f0104339:	be e1 03 00 00       	mov    $0x3e1,%esi$/;"	l
f010433e	obj/kern/kernel.asm	/^    f010433e:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0104345	obj/kern/kernel.asm	/^    f0104345:	00 00 00 $/;"	l
f0104348	obj/kern/kernel.asm	/^    f0104348:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010434d	obj/kern/kernel.asm	/^    f010434d:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0104354	obj/kern/kernel.asm	/^    f0104354:	00 00 00 $/;"	l
f0104357	obj/kern/kernel.asm	/^    f0104357:	ff d3                	callq  *%rbx$/;"	l
f0104359	obj/kern/kernel.asm	/^    f0104359:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)$/;"	l
f010435e	obj/kern/kernel.asm	/^    f010435e:	74 0a                	je     fffffffff010436a <end+0xfffffffefe662fca>$/;"	l
f0104360	obj/kern/kernel.asm	/^    f0104360:	48 8b 45 b0          	mov    -0x50(%rbp),%rax$/;"	l
f0104364	obj/kern/kernel.asm	/^    f0104364:	48 3b 45 a8          	cmp    -0x58(%rbp),%rax$/;"	l
f0104368	obj/kern/kernel.asm	/^    f0104368:	74 34                	je     fffffffff010439e <end+0xfffffffefe662ffe>$/;"	l
f010436a	obj/kern/kernel.asm	/^    f010436a:	48 b9 9c 1c 11 f0 00 	mov    $0xf0111c9c,%rcx$/;"	l
f0104371	obj/kern/kernel.asm	/^    f0104371:	00 00 00 $/;"	l
f0104374	obj/kern/kernel.asm	/^    f0104374:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f010437b	obj/kern/kernel.asm	/^    f010437b:	00 00 00 $/;"	l
f010437e	obj/kern/kernel.asm	/^    f010437e:	be e2 03 00 00       	mov    $0x3e2,%esi$/;"	l
f0104383	obj/kern/kernel.asm	/^    f0104383:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f010438a	obj/kern/kernel.asm	/^    f010438a:	00 00 00 $/;"	l
f010438d	obj/kern/kernel.asm	/^    f010438d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104392	obj/kern/kernel.asm	/^    f0104392:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0104399	obj/kern/kernel.asm	/^    f0104399:	00 00 00 $/;"	l
f010439c	obj/kern/kernel.asm	/^    f010439c:	ff d3                	callq  *%rbx$/;"	l
f010439e	obj/kern/kernel.asm	/^    f010439e:	48 8b 45 a8          	mov    -0x58(%rbp),%rax$/;"	l
f01043a2	obj/kern/kernel.asm	/^    f01043a2:	48 89 c7             	mov    %rax,%rdi$/;"	l
f01043a5	obj/kern/kernel.asm	/^    f01043a5:	48 b8 96 1a 10 f0 00 	mov    $0xf0101a96,%rax$/;"	l
f01043ac	obj/kern/kernel.asm	/^    f01043ac:	00 00 00 $/;"	l
f01043af	obj/kern/kernel.asm	/^    f01043af:	ff d0                	callq  *%rax$/;"	l
f01043b1	obj/kern/kernel.asm	/^    f01043b1:	48 89 45 d8          	mov    %rax,-0x28(%rbp)$/;"	l
f01043b5	obj/kern/kernel.asm	/^    f01043b5:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)$/;"	l
f01043bc	obj/kern/kernel.asm	/^    f01043bc:	eb 48                	jmp    fffffffff0104406 <end+0xfffffffefe663066>$/;"	l
f01043be	obj/kern/kernel.asm	/^    f01043be:	8b 45 e4             	mov    -0x1c(%rbp),%eax$/;"	l
f01043c1	obj/kern/kernel.asm	/^    f01043c1:	48 98                	cltq   $/;"	l
f01043c3	obj/kern/kernel.asm	/^    f01043c3:	48 03 45 d8          	add    -0x28(%rbp),%rax$/;"	l
f01043c7	obj/kern/kernel.asm	/^    f01043c7:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f01043ca	obj/kern/kernel.asm	/^    f01043ca:	84 c0                	test   %al,%al$/;"	l
f01043cc	obj/kern/kernel.asm	/^    f01043cc:	74 34                	je     fffffffff0104402 <end+0xfffffffefe663062>$/;"	l
f01043ce	obj/kern/kernel.asm	/^    f01043ce:	48 b9 ac 1c 11 f0 00 	mov    $0xf0111cac,%rcx$/;"	l
f01043d5	obj/kern/kernel.asm	/^    f01043d5:	00 00 00 $/;"	l
f01043d8	obj/kern/kernel.asm	/^    f01043d8:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f01043df	obj/kern/kernel.asm	/^    f01043df:	00 00 00 $/;"	l
f01043e2	obj/kern/kernel.asm	/^    f01043e2:	be e5 03 00 00       	mov    $0x3e5,%esi$/;"	l
f01043e7	obj/kern/kernel.asm	/^    f01043e7:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f01043ee	obj/kern/kernel.asm	/^    f01043ee:	00 00 00 $/;"	l
f01043f1	obj/kern/kernel.asm	/^    f01043f1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01043f6	obj/kern/kernel.asm	/^    f01043f6:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f01043fd	obj/kern/kernel.asm	/^    f01043fd:	00 00 00 $/;"	l
f0104400	obj/kern/kernel.asm	/^    f0104400:	ff d3                	callq  *%rbx$/;"	l
f0104402	obj/kern/kernel.asm	/^    f0104402:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)$/;"	l
f0104406	obj/kern/kernel.asm	/^    f0104406:	81 7d e4 ff 0f 00 00 	cmpl   $0xfff,-0x1c(%rbp)$/;"	l
f010440d	obj/kern/kernel.asm	/^    f010440d:	7e af                	jle    fffffffff01043be <end+0xfffffffefe66301e>$/;"	l
f010440f	obj/kern/kernel.asm	/^    f010440f:	48 b8 38 62 a2 f1 00 	mov    $0xf1a26238,%rax$/;"	l
f0104416	obj/kern/kernel.asm	/^    f0104416:	00 00 00 $/;"	l
f0104419	obj/kern/kernel.asm	/^    f0104419:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx$/;"	l
f010441d	obj/kern/kernel.asm	/^    f010441d:	48 89 10             	mov    %rdx,(%rax)$/;"	l
f0104420	obj/kern/kernel.asm	/^    f0104420:	48 8b 45 b0          	mov    -0x50(%rbp),%rax$/;"	l
f0104424	obj/kern/kernel.asm	/^    f0104424:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0104427	obj/kern/kernel.asm	/^    f0104427:	48 b8 b6 28 10 f0 00 	mov    $0xf01028b6,%rax$/;"	l
f010442e	obj/kern/kernel.asm	/^    f010442e:	00 00 00 $/;"	l
f0104431	obj/kern/kernel.asm	/^    f0104431:	ff d0                	callq  *%rax$/;"	l
f0104433	obj/kern/kernel.asm	/^    f0104433:	48 8b 45 b8          	mov    -0x48(%rbp),%rax$/;"	l
f0104437	obj/kern/kernel.asm	/^    f0104437:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010443a	obj/kern/kernel.asm	/^    f010443a:	48 b8 b6 28 10 f0 00 	mov    $0xf01028b6,%rax$/;"	l
f0104441	obj/kern/kernel.asm	/^    f0104441:	00 00 00 $/;"	l
f0104444	obj/kern/kernel.asm	/^    f0104444:	ff d0                	callq  *%rax$/;"	l
f0104446	obj/kern/kernel.asm	/^    f0104446:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
f010444a	obj/kern/kernel.asm	/^    f010444a:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010444d	obj/kern/kernel.asm	/^    f010444d:	48 b8 b6 28 10 f0 00 	mov    $0xf01028b6,%rax$/;"	l
f0104454	obj/kern/kernel.asm	/^    f0104454:	00 00 00 $/;"	l
f0104457	obj/kern/kernel.asm	/^    f0104457:	ff d0                	callq  *%rax$/;"	l
f0104459	obj/kern/kernel.asm	/^    f0104459:	48 bf b8 1c 11 f0 00 	mov    $0xf0111cb8,%rdi$/;"	l
f0104460	obj/kern/kernel.asm	/^    f0104460:	00 00 00 $/;"	l
f0104463	obj/kern/kernel.asm	/^    f0104463:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104468	obj/kern/kernel.asm	/^    f0104468:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f010446f	obj/kern/kernel.asm	/^    f010446f:	00 00 00 $/;"	l
f0104472	obj/kern/kernel.asm	/^    f0104472:	ff d2                	callq  *%rdx$/;"	l
f0104474	obj/kern/kernel.asm	/^    f0104474:	48 83 c4 58          	add    $0x58,%rsp$/;"	l
f0104478	obj/kern/kernel.asm	/^    f0104478:	5b                   	pop    %rbx$/;"	l
f0104479	obj/kern/kernel.asm	/^    f0104479:	c9                   	leaveq $/;"	l
f010447a	obj/kern/kernel.asm	/^    f010447a:	c3                   	retq   $/;"	l
f010447b	obj/kern/kernel.asm	/^    f010447b:	55                   	push   %rbp$/;"	l
f010447c	obj/kern/kernel.asm	/^    f010447c:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010447f	obj/kern/kernel.asm	/^    f010447f:	53                   	push   %rbx$/;"	l
f0104480	obj/kern/kernel.asm	/^    f0104480:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp$/;"	l
f0104487	obj/kern/kernel.asm	/^    f0104487:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)$/;"	l
f010448e	obj/kern/kernel.asm	/^    f010448e:	48 b8 60 77 a2 f1 00 	mov    $0xf1a27760,%rax$/;"	l
f0104495	obj/kern/kernel.asm	/^    f0104495:	00 00 00 $/;"	l
f0104498	obj/kern/kernel.asm	/^    f0104498:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010449b	obj/kern/kernel.asm	/^    f010449b:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)$/;"	l
f01044a2	obj/kern/kernel.asm	/^    f01044a2:	48 c7 45 90 00 10 00 	movq   $0x1000,-0x70(%rbp)$/;"	l
f01044a9	obj/kern/kernel.asm	/^    f01044a9:	00 $/;"	l
f01044aa	obj/kern/kernel.asm	/^    f01044aa:	48 b8 68 77 a2 f1 00 	mov    $0xf1a27768,%rax$/;"	l
f01044b1	obj/kern/kernel.asm	/^    f01044b1:	00 00 00 $/;"	l
f01044b4	obj/kern/kernel.asm	/^    f01044b4:	48 8b 00             	mov    (%rax),%rax$/;"	l
f01044b7	obj/kern/kernel.asm	/^    f01044b7:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
f01044bb	obj/kern/kernel.asm	/^    f01044bb:	48 03 45 90          	add    -0x70(%rbp),%rax$/;"	l
f01044bf	obj/kern/kernel.asm	/^    f01044bf:	48 83 e8 01          	sub    $0x1,%rax$/;"	l
f01044c3	obj/kern/kernel.asm	/^    f01044c3:	48 89 45 98          	mov    %rax,-0x68(%rbp)$/;"	l
f01044c7	obj/kern/kernel.asm	/^    f01044c7:	48 8b 45 98          	mov    -0x68(%rbp),%rax$/;"	l
f01044cb	obj/kern/kernel.asm	/^    f01044cb:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01044d0	obj/kern/kernel.asm	/^    f01044d0:	48 f7 75 90          	divq   -0x70(%rbp)$/;"	l
f01044d4	obj/kern/kernel.asm	/^    f01044d4:	48 89 d0             	mov    %rdx,%rax$/;"	l
f01044d7	obj/kern/kernel.asm	/^    f01044d7:	48 8b 55 98          	mov    -0x68(%rbp),%rdx$/;"	l
f01044db	obj/kern/kernel.asm	/^    f01044db:	48 89 d1             	mov    %rdx,%rcx$/;"	l
f01044de	obj/kern/kernel.asm	/^    f01044de:	48 29 c1             	sub    %rax,%rcx$/;"	l
f01044e1	obj/kern/kernel.asm	/^    f01044e1:	48 89 c8             	mov    %rcx,%rax$/;"	l
f01044e4	obj/kern/kernel.asm	/^    f01044e4:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)$/;"	l
f01044ea	obj/kern/kernel.asm	/^    f01044ea:	c7 85 78 ff ff ff 00 	movl   $0x0,-0x88(%rbp)$/;"	l
f01044f1	obj/kern/kernel.asm	/^    f01044f1:	00 00 00 $/;"	l
f01044f4	obj/kern/kernel.asm	/^    f01044f4:	e9 d1 00 00 00       	jmpq   fffffffff01045ca <end+0xfffffffefe66322a>$/;"	l
f01044f9	obj/kern/kernel.asm	/^    f01044f9:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax$/;"	l
f01044ff	obj/kern/kernel.asm	/^    f01044ff:	2d 00 00 60 10       	sub    $0x10600000,%eax$/;"	l
f0104504	obj/kern/kernel.asm	/^    f0104504:	89 c2                	mov    %eax,%edx$/;"	l
f0104506	obj/kern/kernel.asm	/^    f0104506:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax$/;"	l
f010450d	obj/kern/kernel.asm	/^    f010450d:	48 89 d6             	mov    %rdx,%rsi$/;"	l
f0104510	obj/kern/kernel.asm	/^    f0104510:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0104513	obj/kern/kernel.asm	/^    f0104513:	48 b8 e5 4b 10 f0 00 	mov    $0xf0104be5,%rax$/;"	l
f010451a	obj/kern/kernel.asm	/^    f010451a:	00 00 00 $/;"	l
f010451d	obj/kern/kernel.asm	/^    f010451d:	ff d0                	callq  *%rax$/;"	l
f010451f	obj/kern/kernel.asm	/^    f010451f:	48 ba 70 77 a2 f1 00 	mov    $0xf1a27770,%rdx$/;"	l
f0104526	obj/kern/kernel.asm	/^    f0104526:	00 00 00 $/;"	l
f0104529	obj/kern/kernel.asm	/^    f0104529:	48 8b 12             	mov    (%rdx),%rdx$/;"	l
f010452c	obj/kern/kernel.asm	/^    f010452c:	48 89 55 a0          	mov    %rdx,-0x60(%rbp)$/;"	l
f0104530	obj/kern/kernel.asm	/^    f0104530:	ba ff ff ff ef       	mov    $0xefffffff,%edx$/;"	l
f0104535	obj/kern/kernel.asm	/^    f0104535:	48 39 55 a0          	cmp    %rdx,-0x60(%rbp)$/;"	l
f0104539	obj/kern/kernel.asm	/^    f0104539:	77 31                	ja     fffffffff010456c <end+0xfffffffefe6631cc>$/;"	l
f010453b	obj/kern/kernel.asm	/^    f010453b:	48 8b 45 a0          	mov    -0x60(%rbp),%rax$/;"	l
f010453f	obj/kern/kernel.asm	/^    f010453f:	48 89 c1             	mov    %rax,%rcx$/;"	l
f0104542	obj/kern/kernel.asm	/^    f0104542:	48 ba e0 18 11 f0 00 	mov    $0xf01118e0,%rdx$/;"	l
f0104549	obj/kern/kernel.asm	/^    f0104549:	00 00 00 $/;"	l
f010454c	obj/kern/kernel.asm	/^    f010454c:	be 03 04 00 00       	mov    $0x403,%esi$/;"	l
f0104551	obj/kern/kernel.asm	/^    f0104551:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0104558	obj/kern/kernel.asm	/^    f0104558:	00 00 00 $/;"	l
f010455b	obj/kern/kernel.asm	/^    f010455b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104560	obj/kern/kernel.asm	/^    f0104560:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0104567	obj/kern/kernel.asm	/^    f0104567:	00 00 00 $/;"	l
f010456a	obj/kern/kernel.asm	/^    f010456a:	ff d3                	callq  *%rbx$/;"	l
f010456c	obj/kern/kernel.asm	/^    f010456c:	48 ba 00 00 00 10 ff 	mov    $0xffffffff10000000,%rdx$/;"	l
f0104573	obj/kern/kernel.asm	/^    f0104573:	ff ff ff $/;"	l
f0104576	obj/kern/kernel.asm	/^    f0104576:	48 89 d1             	mov    %rdx,%rcx$/;"	l
f0104579	obj/kern/kernel.asm	/^    f0104579:	48 03 4d a0          	add    -0x60(%rbp),%rcx$/;"	l
f010457d	obj/kern/kernel.asm	/^    f010457d:	8b 95 78 ff ff ff    	mov    -0x88(%rbp),%edx$/;"	l
f0104583	obj/kern/kernel.asm	/^    f0104583:	48 8d 14 11          	lea    (%rcx,%rdx,1),%rdx$/;"	l
f0104587	obj/kern/kernel.asm	/^    f0104587:	48 39 d0             	cmp    %rdx,%rax$/;"	l
f010458a	obj/kern/kernel.asm	/^    f010458a:	74 34                	je     fffffffff01045c0 <end+0xfffffffefe663220>$/;"	l
f010458c	obj/kern/kernel.asm	/^    f010458c:	48 b9 d8 1c 11 f0 00 	mov    $0xf0111cd8,%rcx$/;"	l
f0104593	obj/kern/kernel.asm	/^    f0104593:	00 00 00 $/;"	l
f0104596	obj/kern/kernel.asm	/^    f0104596:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f010459d	obj/kern/kernel.asm	/^    f010459d:	00 00 00 $/;"	l
f01045a0	obj/kern/kernel.asm	/^    f01045a0:	be 03 04 00 00       	mov    $0x403,%esi$/;"	l
f01045a5	obj/kern/kernel.asm	/^    f01045a5:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f01045ac	obj/kern/kernel.asm	/^    f01045ac:	00 00 00 $/;"	l
f01045af	obj/kern/kernel.asm	/^    f01045af:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01045b4	obj/kern/kernel.asm	/^    f01045b4:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f01045bb	obj/kern/kernel.asm	/^    f01045bb:	00 00 00 $/;"	l
f01045be	obj/kern/kernel.asm	/^    f01045be:	ff d3                	callq  *%rbx$/;"	l
f01045c0	obj/kern/kernel.asm	/^    f01045c0:	81 85 78 ff ff ff 00 	addl   $0x1000,-0x88(%rbp)$/;"	l
f01045c7	obj/kern/kernel.asm	/^    f01045c7:	10 00 00 $/;"	l
f01045ca	obj/kern/kernel.asm	/^    f01045ca:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax$/;"	l
f01045d0	obj/kern/kernel.asm	/^    f01045d0:	3b 85 7c ff ff ff    	cmp    -0x84(%rbp),%eax$/;"	l
f01045d6	obj/kern/kernel.asm	/^    f01045d6:	0f 82 1d ff ff ff    	jb     fffffffff01044f9 <end+0xfffffffefe663159>$/;"	l
f01045dc	obj/kern/kernel.asm	/^    f01045dc:	48 c7 45 a8 00 10 00 	movq   $0x1000,-0x58(%rbp)$/;"	l
f01045e3	obj/kern/kernel.asm	/^    f01045e3:	00 $/;"	l
f01045e4	obj/kern/kernel.asm	/^    f01045e4:	48 8b 45 a8          	mov    -0x58(%rbp),%rax$/;"	l
f01045e8	obj/kern/kernel.asm	/^    f01045e8:	48 05 ff 5f 04 00    	add    $0x45fff,%rax$/;"	l
f01045ee	obj/kern/kernel.asm	/^    f01045ee:	48 89 45 b0          	mov    %rax,-0x50(%rbp)$/;"	l
f01045f2	obj/kern/kernel.asm	/^    f01045f2:	48 8b 45 b0          	mov    -0x50(%rbp),%rax$/;"	l
f01045f6	obj/kern/kernel.asm	/^    f01045f6:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01045fb	obj/kern/kernel.asm	/^    f01045fb:	48 f7 75 a8          	divq   -0x58(%rbp)$/;"	l
f01045ff	obj/kern/kernel.asm	/^    f01045ff:	48 89 d0             	mov    %rdx,%rax$/;"	l
f0104602	obj/kern/kernel.asm	/^    f0104602:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx$/;"	l
f0104606	obj/kern/kernel.asm	/^    f0104606:	48 89 d1             	mov    %rdx,%rcx$/;"	l
f0104609	obj/kern/kernel.asm	/^    f0104609:	48 29 c1             	sub    %rax,%rcx$/;"	l
f010460c	obj/kern/kernel.asm	/^    f010460c:	48 89 c8             	mov    %rcx,%rax$/;"	l
f010460f	obj/kern/kernel.asm	/^    f010460f:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)$/;"	l
f0104615	obj/kern/kernel.asm	/^    f0104615:	c7 85 78 ff ff ff 00 	movl   $0x0,-0x88(%rbp)$/;"	l
f010461c	obj/kern/kernel.asm	/^    f010461c:	00 00 00 $/;"	l
f010461f	obj/kern/kernel.asm	/^    f010461f:	e9 d1 00 00 00       	jmpq   fffffffff01046f5 <end+0xfffffffefe663355>$/;"	l
f0104624	obj/kern/kernel.asm	/^    f0104624:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax$/;"	l
f010462a	obj/kern/kernel.asm	/^    f010462a:	2d 00 00 80 10       	sub    $0x10800000,%eax$/;"	l
f010462f	obj/kern/kernel.asm	/^    f010462f:	89 c2                	mov    %eax,%edx$/;"	l
f0104631	obj/kern/kernel.asm	/^    f0104631:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax$/;"	l
f0104638	obj/kern/kernel.asm	/^    f0104638:	48 89 d6             	mov    %rdx,%rsi$/;"	l
f010463b	obj/kern/kernel.asm	/^    f010463b:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010463e	obj/kern/kernel.asm	/^    f010463e:	48 b8 e5 4b 10 f0 00 	mov    $0xf0104be5,%rax$/;"	l
f0104645	obj/kern/kernel.asm	/^    f0104645:	00 00 00 $/;"	l
f0104648	obj/kern/kernel.asm	/^    f0104648:	ff d0                	callq  *%rax$/;"	l
f010464a	obj/kern/kernel.asm	/^    f010464a:	48 ba 50 62 a2 f1 00 	mov    $0xf1a26250,%rdx$/;"	l
f0104651	obj/kern/kernel.asm	/^    f0104651:	00 00 00 $/;"	l
f0104654	obj/kern/kernel.asm	/^    f0104654:	48 8b 12             	mov    (%rdx),%rdx$/;"	l
f0104657	obj/kern/kernel.asm	/^    f0104657:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)$/;"	l
f010465b	obj/kern/kernel.asm	/^    f010465b:	ba ff ff ff ef       	mov    $0xefffffff,%edx$/;"	l
f0104660	obj/kern/kernel.asm	/^    f0104660:	48 39 55 b8          	cmp    %rdx,-0x48(%rbp)$/;"	l
f0104664	obj/kern/kernel.asm	/^    f0104664:	77 31                	ja     fffffffff0104697 <end+0xfffffffefe6632f7>$/;"	l
f0104666	obj/kern/kernel.asm	/^    f0104666:	48 8b 45 b8          	mov    -0x48(%rbp),%rax$/;"	l
f010466a	obj/kern/kernel.asm	/^    f010466a:	48 89 c1             	mov    %rax,%rcx$/;"	l
f010466d	obj/kern/kernel.asm	/^    f010466d:	48 ba e0 18 11 f0 00 	mov    $0xf01118e0,%rdx$/;"	l
f0104674	obj/kern/kernel.asm	/^    f0104674:	00 00 00 $/;"	l
f0104677	obj/kern/kernel.asm	/^    f0104677:	be 08 04 00 00       	mov    $0x408,%esi$/;"	l
f010467c	obj/kern/kernel.asm	/^    f010467c:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0104683	obj/kern/kernel.asm	/^    f0104683:	00 00 00 $/;"	l
f0104686	obj/kern/kernel.asm	/^    f0104686:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010468b	obj/kern/kernel.asm	/^    f010468b:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0104692	obj/kern/kernel.asm	/^    f0104692:	00 00 00 $/;"	l
f0104695	obj/kern/kernel.asm	/^    f0104695:	ff d3                	callq  *%rbx$/;"	l
f0104697	obj/kern/kernel.asm	/^    f0104697:	48 ba 00 00 00 10 ff 	mov    $0xffffffff10000000,%rdx$/;"	l
f010469e	obj/kern/kernel.asm	/^    f010469e:	ff ff ff $/;"	l
f01046a1	obj/kern/kernel.asm	/^    f01046a1:	48 89 d1             	mov    %rdx,%rcx$/;"	l
f01046a4	obj/kern/kernel.asm	/^    f01046a4:	48 03 4d b8          	add    -0x48(%rbp),%rcx$/;"	l
f01046a8	obj/kern/kernel.asm	/^    f01046a8:	8b 95 78 ff ff ff    	mov    -0x88(%rbp),%edx$/;"	l
f01046ae	obj/kern/kernel.asm	/^    f01046ae:	48 8d 14 11          	lea    (%rcx,%rdx,1),%rdx$/;"	l
f01046b2	obj/kern/kernel.asm	/^    f01046b2:	48 39 d0             	cmp    %rdx,%rax$/;"	l
f01046b5	obj/kern/kernel.asm	/^    f01046b5:	74 34                	je     fffffffff01046eb <end+0xfffffffefe66334b>$/;"	l
f01046b7	obj/kern/kernel.asm	/^    f01046b7:	48 b9 10 1d 11 f0 00 	mov    $0xf0111d10,%rcx$/;"	l
f01046be	obj/kern/kernel.asm	/^    f01046be:	00 00 00 $/;"	l
f01046c1	obj/kern/kernel.asm	/^    f01046c1:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f01046c8	obj/kern/kernel.asm	/^    f01046c8:	00 00 00 $/;"	l
f01046cb	obj/kern/kernel.asm	/^    f01046cb:	be 08 04 00 00       	mov    $0x408,%esi$/;"	l
f01046d0	obj/kern/kernel.asm	/^    f01046d0:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f01046d7	obj/kern/kernel.asm	/^    f01046d7:	00 00 00 $/;"	l
f01046da	obj/kern/kernel.asm	/^    f01046da:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01046df	obj/kern/kernel.asm	/^    f01046df:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f01046e6	obj/kern/kernel.asm	/^    f01046e6:	00 00 00 $/;"	l
f01046e9	obj/kern/kernel.asm	/^    f01046e9:	ff d3                	callq  *%rbx$/;"	l
f01046eb	obj/kern/kernel.asm	/^    f01046eb:	81 85 78 ff ff ff 00 	addl   $0x1000,-0x88(%rbp)$/;"	l
f01046f2	obj/kern/kernel.asm	/^    f01046f2:	10 00 00 $/;"	l
f01046f5	obj/kern/kernel.asm	/^    f01046f5:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax$/;"	l
f01046fb	obj/kern/kernel.asm	/^    f01046fb:	3b 85 7c ff ff ff    	cmp    -0x84(%rbp),%eax$/;"	l
f0104701	obj/kern/kernel.asm	/^    f0104701:	0f 82 1d ff ff ff    	jb     fffffffff0104624 <end+0xfffffffefe663284>$/;"	l
f0104707	obj/kern/kernel.asm	/^    f0104707:	c7 85 78 ff ff ff 00 	movl   $0x0,-0x88(%rbp)$/;"	l
f010470e	obj/kern/kernel.asm	/^    f010470e:	00 00 00 $/;"	l
f0104711	obj/kern/kernel.asm	/^    f0104711:	eb 6f                	jmp    fffffffff0104782 <end+0xfffffffefe6633e2>$/;"	l
f0104713	obj/kern/kernel.asm	/^    f0104713:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax$/;"	l
f0104719	obj/kern/kernel.asm	/^    f0104719:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f010471e	obj/kern/kernel.asm	/^    f010471e:	89 c2                	mov    %eax,%edx$/;"	l
f0104720	obj/kern/kernel.asm	/^    f0104720:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax$/;"	l
f0104727	obj/kern/kernel.asm	/^    f0104727:	48 89 d6             	mov    %rdx,%rsi$/;"	l
f010472a	obj/kern/kernel.asm	/^    f010472a:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010472d	obj/kern/kernel.asm	/^    f010472d:	48 b8 e5 4b 10 f0 00 	mov    $0xf0104be5,%rax$/;"	l
f0104734	obj/kern/kernel.asm	/^    f0104734:	00 00 00 $/;"	l
f0104737	obj/kern/kernel.asm	/^    f0104737:	ff d0                	callq  *%rax$/;"	l
f0104739	obj/kern/kernel.asm	/^    f0104739:	8b 95 78 ff ff ff    	mov    -0x88(%rbp),%edx$/;"	l
f010473f	obj/kern/kernel.asm	/^    f010473f:	48 39 d0             	cmp    %rdx,%rax$/;"	l
f0104742	obj/kern/kernel.asm	/^    f0104742:	74 34                	je     fffffffff0104778 <end+0xfffffffefe6633d8>$/;"	l
f0104744	obj/kern/kernel.asm	/^    f0104744:	48 b9 48 1d 11 f0 00 	mov    $0xf0111d48,%rcx$/;"	l
f010474b	obj/kern/kernel.asm	/^    f010474b:	00 00 00 $/;"	l
f010474e	obj/kern/kernel.asm	/^    f010474e:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0104755	obj/kern/kernel.asm	/^    f0104755:	00 00 00 $/;"	l
f0104758	obj/kern/kernel.asm	/^    f0104758:	be 0c 04 00 00       	mov    $0x40c,%esi$/;"	l
f010475d	obj/kern/kernel.asm	/^    f010475d:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0104764	obj/kern/kernel.asm	/^    f0104764:	00 00 00 $/;"	l
f0104767	obj/kern/kernel.asm	/^    f0104767:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010476c	obj/kern/kernel.asm	/^    f010476c:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0104773	obj/kern/kernel.asm	/^    f0104773:	00 00 00 $/;"	l
f0104776	obj/kern/kernel.asm	/^    f0104776:	ff d3                	callq  *%rbx$/;"	l
f0104778	obj/kern/kernel.asm	/^    f0104778:	81 85 78 ff ff ff 00 	addl   $0x1000,-0x88(%rbp)$/;"	l
f010477f	obj/kern/kernel.asm	/^    f010477f:	10 00 00 $/;"	l
f0104782	obj/kern/kernel.asm	/^    f0104782:	8b 95 78 ff ff ff    	mov    -0x88(%rbp),%edx$/;"	l
f0104788	obj/kern/kernel.asm	/^    f0104788:	48 b8 68 77 a2 f1 00 	mov    $0xf1a27768,%rax$/;"	l
f010478f	obj/kern/kernel.asm	/^    f010478f:	00 00 00 $/;"	l
f0104792	obj/kern/kernel.asm	/^    f0104792:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0104795	obj/kern/kernel.asm	/^    f0104795:	48 c1 e0 0c          	shl    $0xc,%rax$/;"	l
f0104799	obj/kern/kernel.asm	/^    f0104799:	48 39 c2             	cmp    %rax,%rdx$/;"	l
f010479c	obj/kern/kernel.asm	/^    f010479c:	0f 82 71 ff ff ff    	jb     fffffffff0104713 <end+0xfffffffefe663373>$/;"	l
f01047a2	obj/kern/kernel.asm	/^    f01047a2:	c7 85 7c ff ff ff 00 	movl   $0x0,-0x84(%rbp)$/;"	l
f01047a9	obj/kern/kernel.asm	/^    f01047a9:	00 00 00 $/;"	l
f01047ac	obj/kern/kernel.asm	/^    f01047ac:	e9 9d 01 00 00       	jmpq   fffffffff010494e <end+0xfffffffefe6635ae>$/;"	l
f01047b1	obj/kern/kernel.asm	/^    f01047b1:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax$/;"	l
f01047b7	obj/kern/kernel.asm	/^    f01047b7:	f7 d0                	not    %eax$/;"	l
f01047b9	obj/kern/kernel.asm	/^    f01047b9:	05 00 f0 00 00       	add    $0xf000,%eax$/;"	l
f01047be	obj/kern/kernel.asm	/^    f01047be:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f01047c1	obj/kern/kernel.asm	/^    f01047c1:	89 45 c4             	mov    %eax,-0x3c(%rbp)$/;"	l
f01047c4	obj/kern/kernel.asm	/^    f01047c4:	c7 85 78 ff ff ff 00 	movl   $0x0,-0x88(%rbp)$/;"	l
f01047cb	obj/kern/kernel.asm	/^    f01047cb:	00 00 00 $/;"	l
f01047ce	obj/kern/kernel.asm	/^    f01047ce:	e9 e1 00 00 00       	jmpq   fffffffff01048b4 <end+0xfffffffefe663514>$/;"	l
f01047d3	obj/kern/kernel.asm	/^    f01047d3:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax$/;"	l
f01047d9	obj/kern/kernel.asm	/^    f01047d9:	8b 55 c4             	mov    -0x3c(%rbp),%edx$/;"	l
f01047dc	obj/kern/kernel.asm	/^    f01047dc:	8d 04 02             	lea    (%rdx,%rax,1),%eax$/;"	l
f01047df	obj/kern/kernel.asm	/^    f01047df:	05 00 80 00 00       	add    $0x8000,%eax$/;"	l
f01047e4	obj/kern/kernel.asm	/^    f01047e4:	89 c2                	mov    %eax,%edx$/;"	l
f01047e6	obj/kern/kernel.asm	/^    f01047e6:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax$/;"	l
f01047ed	obj/kern/kernel.asm	/^    f01047ed:	48 89 d6             	mov    %rdx,%rsi$/;"	l
f01047f0	obj/kern/kernel.asm	/^    f01047f0:	48 89 c7             	mov    %rax,%rdi$/;"	l
f01047f3	obj/kern/kernel.asm	/^    f01047f3:	48 b8 e5 4b 10 f0 00 	mov    $0xf0104be5,%rax$/;"	l
f01047fa	obj/kern/kernel.asm	/^    f01047fa:	00 00 00 $/;"	l
f01047fd	obj/kern/kernel.asm	/^    f01047fd:	ff d0                	callq  *%rax$/;"	l
f01047ff	obj/kern/kernel.asm	/^    f01047ff:	48 ba 00 90 a2 f1 00 	mov    $0xf1a29000,%rdx$/;"	l
f0104806	obj/kern/kernel.asm	/^    f0104806:	00 00 00 $/;"	l
f0104809	obj/kern/kernel.asm	/^    f0104809:	8b 8d 7c ff ff ff    	mov    -0x84(%rbp),%ecx$/;"	l
f010480f	obj/kern/kernel.asm	/^    f010480f:	48 c1 e1 0f          	shl    $0xf,%rcx$/;"	l
f0104813	obj/kern/kernel.asm	/^    f0104813:	48 01 ca             	add    %rcx,%rdx$/;"	l
f0104816	obj/kern/kernel.asm	/^    f0104816:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)$/;"	l
f010481a	obj/kern/kernel.asm	/^    f010481a:	ba ff ff ff ef       	mov    $0xefffffff,%edx$/;"	l
f010481f	obj/kern/kernel.asm	/^    f010481f:	48 39 55 c8          	cmp    %rdx,-0x38(%rbp)$/;"	l
f0104823	obj/kern/kernel.asm	/^    f0104823:	77 31                	ja     fffffffff0104856 <end+0xfffffffefe6634b6>$/;"	l
f0104825	obj/kern/kernel.asm	/^    f0104825:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f0104829	obj/kern/kernel.asm	/^    f0104829:	48 89 c1             	mov    %rax,%rcx$/;"	l
f010482c	obj/kern/kernel.asm	/^    f010482c:	48 ba e0 18 11 f0 00 	mov    $0xf01118e0,%rdx$/;"	l
f0104833	obj/kern/kernel.asm	/^    f0104833:	00 00 00 $/;"	l
f0104836	obj/kern/kernel.asm	/^    f0104836:	be 14 04 00 00       	mov    $0x414,%esi$/;"	l
f010483b	obj/kern/kernel.asm	/^    f010483b:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0104842	obj/kern/kernel.asm	/^    f0104842:	00 00 00 $/;"	l
f0104845	obj/kern/kernel.asm	/^    f0104845:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010484a	obj/kern/kernel.asm	/^    f010484a:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0104851	obj/kern/kernel.asm	/^    f0104851:	00 00 00 $/;"	l
f0104854	obj/kern/kernel.asm	/^    f0104854:	ff d3                	callq  *%rbx$/;"	l
f0104856	obj/kern/kernel.asm	/^    f0104856:	48 ba 00 00 00 10 ff 	mov    $0xffffffff10000000,%rdx$/;"	l
f010485d	obj/kern/kernel.asm	/^    f010485d:	ff ff ff $/;"	l
f0104860	obj/kern/kernel.asm	/^    f0104860:	48 89 d1             	mov    %rdx,%rcx$/;"	l
f0104863	obj/kern/kernel.asm	/^    f0104863:	48 03 4d c8          	add    -0x38(%rbp),%rcx$/;"	l
f0104867	obj/kern/kernel.asm	/^    f0104867:	8b 95 78 ff ff ff    	mov    -0x88(%rbp),%edx$/;"	l
f010486d	obj/kern/kernel.asm	/^    f010486d:	48 8d 14 11          	lea    (%rcx,%rdx,1),%rdx$/;"	l
f0104871	obj/kern/kernel.asm	/^    f0104871:	48 39 d0             	cmp    %rdx,%rax$/;"	l
f0104874	obj/kern/kernel.asm	/^    f0104874:	74 34                	je     fffffffff01048aa <end+0xfffffffefe66350a>$/;"	l
f0104876	obj/kern/kernel.asm	/^    f0104876:	48 b9 70 1d 11 f0 00 	mov    $0xf0111d70,%rcx$/;"	l
f010487d	obj/kern/kernel.asm	/^    f010487d:	00 00 00 $/;"	l
f0104880	obj/kern/kernel.asm	/^    f0104880:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0104887	obj/kern/kernel.asm	/^    f0104887:	00 00 00 $/;"	l
f010488a	obj/kern/kernel.asm	/^    f010488a:	be 14 04 00 00       	mov    $0x414,%esi$/;"	l
f010488f	obj/kern/kernel.asm	/^    f010488f:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0104896	obj/kern/kernel.asm	/^    f0104896:	00 00 00 $/;"	l
f0104899	obj/kern/kernel.asm	/^    f0104899:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010489e	obj/kern/kernel.asm	/^    f010489e:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f01048a5	obj/kern/kernel.asm	/^    f01048a5:	00 00 00 $/;"	l
f01048a8	obj/kern/kernel.asm	/^    f01048a8:	ff d3                	callq  *%rbx$/;"	l
f01048aa	obj/kern/kernel.asm	/^    f01048aa:	81 85 78 ff ff ff 00 	addl   $0x1000,-0x88(%rbp)$/;"	l
f01048b1	obj/kern/kernel.asm	/^    f01048b1:	10 00 00 $/;"	l
f01048b4	obj/kern/kernel.asm	/^    f01048b4:	81 bd 78 ff ff ff ff 	cmpl   $0x7fff,-0x88(%rbp)$/;"	l
f01048bb	obj/kern/kernel.asm	/^    f01048bb:	7f 00 00 $/;"	l
f01048be	obj/kern/kernel.asm	/^    f01048be:	0f 86 0f ff ff ff    	jbe    fffffffff01047d3 <end+0xfffffffefe663433>$/;"	l
f01048c4	obj/kern/kernel.asm	/^    f01048c4:	c7 85 78 ff ff ff 00 	movl   $0x0,-0x88(%rbp)$/;"	l
f01048cb	obj/kern/kernel.asm	/^    f01048cb:	00 00 00 $/;"	l
f01048ce	obj/kern/kernel.asm	/^    f01048ce:	eb 6b                	jmp    fffffffff010493b <end+0xfffffffefe66359b>$/;"	l
f01048d0	obj/kern/kernel.asm	/^    f01048d0:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax$/;"	l
f01048d6	obj/kern/kernel.asm	/^    f01048d6:	8b 55 c4             	mov    -0x3c(%rbp),%edx$/;"	l
f01048d9	obj/kern/kernel.asm	/^    f01048d9:	8d 04 02             	lea    (%rdx,%rax,1),%eax$/;"	l
f01048dc	obj/kern/kernel.asm	/^    f01048dc:	89 c2                	mov    %eax,%edx$/;"	l
f01048de	obj/kern/kernel.asm	/^    f01048de:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax$/;"	l
f01048e5	obj/kern/kernel.asm	/^    f01048e5:	48 89 d6             	mov    %rdx,%rsi$/;"	l
f01048e8	obj/kern/kernel.asm	/^    f01048e8:	48 89 c7             	mov    %rax,%rdi$/;"	l
f01048eb	obj/kern/kernel.asm	/^    f01048eb:	48 b8 e5 4b 10 f0 00 	mov    $0xf0104be5,%rax$/;"	l
f01048f2	obj/kern/kernel.asm	/^    f01048f2:	00 00 00 $/;"	l
f01048f5	obj/kern/kernel.asm	/^    f01048f5:	ff d0                	callq  *%rax$/;"	l
f01048f7	obj/kern/kernel.asm	/^    f01048f7:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax$/;"	l
f01048fb	obj/kern/kernel.asm	/^    f01048fb:	74 34                	je     fffffffff0104931 <end+0xfffffffefe663591>$/;"	l
f01048fd	obj/kern/kernel.asm	/^    f01048fd:	48 b9 b8 1d 11 f0 00 	mov    $0xf0111db8,%rcx$/;"	l
f0104904	obj/kern/kernel.asm	/^    f0104904:	00 00 00 $/;"	l
f0104907	obj/kern/kernel.asm	/^    f0104907:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f010490e	obj/kern/kernel.asm	/^    f010490e:	00 00 00 $/;"	l
f0104911	obj/kern/kernel.asm	/^    f0104911:	be 16 04 00 00       	mov    $0x416,%esi$/;"	l
f0104916	obj/kern/kernel.asm	/^    f0104916:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f010491d	obj/kern/kernel.asm	/^    f010491d:	00 00 00 $/;"	l
f0104920	obj/kern/kernel.asm	/^    f0104920:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104925	obj/kern/kernel.asm	/^    f0104925:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f010492c	obj/kern/kernel.asm	/^    f010492c:	00 00 00 $/;"	l
f010492f	obj/kern/kernel.asm	/^    f010492f:	ff d3                	callq  *%rbx$/;"	l
f0104931	obj/kern/kernel.asm	/^    f0104931:	81 85 78 ff ff ff 00 	addl   $0x1000,-0x88(%rbp)$/;"	l
f0104938	obj/kern/kernel.asm	/^    f0104938:	10 00 00 $/;"	l
f010493b	obj/kern/kernel.asm	/^    f010493b:	81 bd 78 ff ff ff ff 	cmpl   $0x7fff,-0x88(%rbp)$/;"	l
f0104942	obj/kern/kernel.asm	/^    f0104942:	7f 00 00 $/;"	l
f0104945	obj/kern/kernel.asm	/^    f0104945:	76 89                	jbe    fffffffff01048d0 <end+0xfffffffefe663530>$/;"	l
f0104947	obj/kern/kernel.asm	/^    f0104947:	83 85 7c ff ff ff 01 	addl   $0x1,-0x84(%rbp)$/;"	l
f010494e	obj/kern/kernel.asm	/^    f010494e:	83 bd 7c ff ff ff 07 	cmpl   $0x7,-0x84(%rbp)$/;"	l
f0104955	obj/kern/kernel.asm	/^    f0104955:	0f 86 56 fe ff ff    	jbe    fffffffff01047b1 <end+0xfffffffefe663411>$/;"	l
f010495b	obj/kern/kernel.asm	/^    f010495b:	48 b8 60 77 a2 f1 00 	mov    $0xf1a27760,%rax$/;"	l
f0104962	obj/kern/kernel.asm	/^    f0104962:	00 00 00 $/;"	l
f0104965	obj/kern/kernel.asm	/^    f0104965:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0104968	obj/kern/kernel.asm	/^    f0104968:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010496b	obj/kern/kernel.asm	/^    f010496b:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
f0104971	obj/kern/kernel.asm	/^    f0104971:	48 89 45 d0          	mov    %rax,-0x30(%rbp)$/;"	l
f0104975	obj/kern/kernel.asm	/^    f0104975:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f0104979	obj/kern/kernel.asm	/^    f0104979:	48 c1 e8 0c          	shr    $0xc,%rax$/;"	l
f010497d	obj/kern/kernel.asm	/^    f010497d:	89 45 dc             	mov    %eax,-0x24(%rbp)$/;"	l
f0104980	obj/kern/kernel.asm	/^    f0104980:	8b 55 dc             	mov    -0x24(%rbp),%edx$/;"	l
f0104983	obj/kern/kernel.asm	/^    f0104983:	48 b8 68 77 a2 f1 00 	mov    $0xf1a27768,%rax$/;"	l
f010498a	obj/kern/kernel.asm	/^    f010498a:	00 00 00 $/;"	l
f010498d	obj/kern/kernel.asm	/^    f010498d:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0104990	obj/kern/kernel.asm	/^    f0104990:	48 39 c2             	cmp    %rax,%rdx$/;"	l
f0104993	obj/kern/kernel.asm	/^    f0104993:	72 31                	jb     fffffffff01049c6 <end+0xfffffffefe663626>$/;"	l
f0104995	obj/kern/kernel.asm	/^    f0104995:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f0104999	obj/kern/kernel.asm	/^    f0104999:	48 89 c1             	mov    %rax,%rcx$/;"	l
f010499c	obj/kern/kernel.asm	/^    f010499c:	48 ba 78 18 11 f0 00 	mov    $0xf0111878,%rdx$/;"	l
f01049a3	obj/kern/kernel.asm	/^    f01049a3:	00 00 00 $/;"	l
f01049a6	obj/kern/kernel.asm	/^    f01049a6:	be 19 04 00 00       	mov    $0x419,%esi$/;"	l
f01049ab	obj/kern/kernel.asm	/^    f01049ab:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f01049b2	obj/kern/kernel.asm	/^    f01049b2:	00 00 00 $/;"	l
f01049b5	obj/kern/kernel.asm	/^    f01049b5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01049ba	obj/kern/kernel.asm	/^    f01049ba:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f01049c1	obj/kern/kernel.asm	/^    f01049c1:	00 00 00 $/;"	l
f01049c4	obj/kern/kernel.asm	/^    f01049c4:	ff d3                	callq  *%rbx$/;"	l
f01049c6	obj/kern/kernel.asm	/^    f01049c6:	b8 00 00 00 f0       	mov    $0xf0000000,%eax$/;"	l
f01049cb	obj/kern/kernel.asm	/^    f01049cb:	48 03 45 d0          	add    -0x30(%rbp),%rax$/;"	l
f01049cf	obj/kern/kernel.asm	/^    f01049cf:	48 89 45 80          	mov    %rax,-0x80(%rbp)$/;"	l
f01049d3	obj/kern/kernel.asm	/^    f01049d3:	48 8b 45 80          	mov    -0x80(%rbp),%rax$/;"	l
f01049d7	obj/kern/kernel.asm	/^    f01049d7:	48 83 c0 18          	add    $0x18,%rax$/;"	l
f01049db	obj/kern/kernel.asm	/^    f01049db:	48 8b 00             	mov    (%rax),%rax$/;"	l
f01049de	obj/kern/kernel.asm	/^    f01049de:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
f01049e4	obj/kern/kernel.asm	/^    f01049e4:	48 89 45 e0          	mov    %rax,-0x20(%rbp)$/;"	l
f01049e8	obj/kern/kernel.asm	/^    f01049e8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
f01049ec	obj/kern/kernel.asm	/^    f01049ec:	48 c1 e8 0c          	shr    $0xc,%rax$/;"	l
f01049f0	obj/kern/kernel.asm	/^    f01049f0:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
f01049f3	obj/kern/kernel.asm	/^    f01049f3:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
f01049f6	obj/kern/kernel.asm	/^    f01049f6:	48 b8 68 77 a2 f1 00 	mov    $0xf1a27768,%rax$/;"	l
f01049fd	obj/kern/kernel.asm	/^    f01049fd:	00 00 00 $/;"	l
f0104a00	obj/kern/kernel.asm	/^    f0104a00:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0104a03	obj/kern/kernel.asm	/^    f0104a03:	48 39 c2             	cmp    %rax,%rdx$/;"	l
f0104a06	obj/kern/kernel.asm	/^    f0104a06:	72 31                	jb     fffffffff0104a39 <end+0xfffffffefe663699>$/;"	l
f0104a08	obj/kern/kernel.asm	/^    f0104a08:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
f0104a0c	obj/kern/kernel.asm	/^    f0104a0c:	48 89 c1             	mov    %rax,%rcx$/;"	l
f0104a0f	obj/kern/kernel.asm	/^    f0104a0f:	48 ba 78 18 11 f0 00 	mov    $0xf0111878,%rdx$/;"	l
f0104a16	obj/kern/kernel.asm	/^    f0104a16:	00 00 00 $/;"	l
f0104a19	obj/kern/kernel.asm	/^    f0104a19:	be 1a 04 00 00       	mov    $0x41a,%esi$/;"	l
f0104a1e	obj/kern/kernel.asm	/^    f0104a1e:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0104a25	obj/kern/kernel.asm	/^    f0104a25:	00 00 00 $/;"	l
f0104a28	obj/kern/kernel.asm	/^    f0104a28:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104a2d	obj/kern/kernel.asm	/^    f0104a2d:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0104a34	obj/kern/kernel.asm	/^    f0104a34:	00 00 00 $/;"	l
f0104a37	obj/kern/kernel.asm	/^    f0104a37:	ff d3                	callq  *%rbx$/;"	l
f0104a39	obj/kern/kernel.asm	/^    f0104a39:	b8 00 00 00 f0       	mov    $0xf0000000,%eax$/;"	l
f0104a3e	obj/kern/kernel.asm	/^    f0104a3e:	48 03 45 e0          	add    -0x20(%rbp),%rax$/;"	l
f0104a42	obj/kern/kernel.asm	/^    f0104a42:	48 89 45 88          	mov    %rax,-0x78(%rbp)$/;"	l
f0104a46	obj/kern/kernel.asm	/^    f0104a46:	c7 85 78 ff ff ff 00 	movl   $0x0,-0x88(%rbp)$/;"	l
f0104a4d	obj/kern/kernel.asm	/^    f0104a4d:	00 00 00 $/;"	l
f0104a50	obj/kern/kernel.asm	/^    f0104a50:	e9 5b 01 00 00       	jmpq   fffffffff0104bb0 <end+0xfffffffefe663810>$/;"	l
f0104a55	obj/kern/kernel.asm	/^    f0104a55:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax$/;"	l
f0104a5b	obj/kern/kernel.asm	/^    f0104a5b:	2d 7c 01 00 00       	sub    $0x17c,%eax$/;"	l
f0104a60	obj/kern/kernel.asm	/^    f0104a60:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f0104a63	obj/kern/kernel.asm	/^    f0104a63:	77 50                	ja     fffffffff0104ab5 <end+0xfffffffefe663715>$/;"	l
f0104a65	obj/kern/kernel.asm	/^    f0104a65:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax$/;"	l
f0104a6b	obj/kern/kernel.asm	/^    f0104a6b:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f0104a6f	obj/kern/kernel.asm	/^    f0104a6f:	48 03 45 88          	add    -0x78(%rbp),%rax$/;"	l
f0104a73	obj/kern/kernel.asm	/^    f0104a73:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0104a76	obj/kern/kernel.asm	/^    f0104a76:	83 e0 01             	and    $0x1,%eax$/;"	l
f0104a79	obj/kern/kernel.asm	/^    f0104a79:	85 c0                	test   %eax,%eax$/;"	l
f0104a7b	obj/kern/kernel.asm	/^    f0104a7b:	0f 85 27 01 00 00    	jne    fffffffff0104ba8 <end+0xfffffffefe663808>$/;"	l
f0104a81	obj/kern/kernel.asm	/^    f0104a81:	48 b9 db 1d 11 f0 00 	mov    $0xf0111ddb,%rcx$/;"	l
f0104a88	obj/kern/kernel.asm	/^    f0104a88:	00 00 00 $/;"	l
f0104a8b	obj/kern/kernel.asm	/^    f0104a8b:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0104a92	obj/kern/kernel.asm	/^    f0104a92:	00 00 00 $/;"	l
f0104a95	obj/kern/kernel.asm	/^    f0104a95:	be 23 04 00 00       	mov    $0x423,%esi$/;"	l
f0104a9a	obj/kern/kernel.asm	/^    f0104a9a:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0104aa1	obj/kern/kernel.asm	/^    f0104aa1:	00 00 00 $/;"	l
f0104aa4	obj/kern/kernel.asm	/^    f0104aa4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104aa9	obj/kern/kernel.asm	/^    f0104aa9:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0104ab0	obj/kern/kernel.asm	/^    f0104ab0:	00 00 00 $/;"	l
f0104ab3	obj/kern/kernel.asm	/^    f0104ab3:	ff d3                	callq  *%rbx$/;"	l
f0104ab5	obj/kern/kernel.asm	/^    f0104ab5:	81 bd 78 ff ff ff 7f 	cmpl   $0x17f,-0x88(%rbp)$/;"	l
f0104abc	obj/kern/kernel.asm	/^    f0104abc:	01 00 00 $/;"	l
f0104abf	obj/kern/kernel.asm	/^    f0104abf:	0f 86 99 00 00 00    	jbe    fffffffff0104b5e <end+0xfffffffefe6637be>$/;"	l
f0104ac5	obj/kern/kernel.asm	/^    f0104ac5:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax$/;"	l
f0104acb	obj/kern/kernel.asm	/^    f0104acb:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f0104acf	obj/kern/kernel.asm	/^    f0104acf:	48 03 45 88          	add    -0x78(%rbp),%rax$/;"	l
f0104ad3	obj/kern/kernel.asm	/^    f0104ad3:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0104ad6	obj/kern/kernel.asm	/^    f0104ad6:	83 e0 01             	and    $0x1,%eax$/;"	l
f0104ad9	obj/kern/kernel.asm	/^    f0104ad9:	85 c0                	test   %eax,%eax$/;"	l
f0104adb	obj/kern/kernel.asm	/^    f0104adb:	75 34                	jne    fffffffff0104b11 <end+0xfffffffefe663771>$/;"	l
f0104add	obj/kern/kernel.asm	/^    f0104add:	48 b9 db 1d 11 f0 00 	mov    $0xf0111ddb,%rcx$/;"	l
f0104ae4	obj/kern/kernel.asm	/^    f0104ae4:	00 00 00 $/;"	l
f0104ae7	obj/kern/kernel.asm	/^    f0104ae7:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0104aee	obj/kern/kernel.asm	/^    f0104aee:	00 00 00 $/;"	l
f0104af1	obj/kern/kernel.asm	/^    f0104af1:	be 27 04 00 00       	mov    $0x427,%esi$/;"	l
f0104af6	obj/kern/kernel.asm	/^    f0104af6:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0104afd	obj/kern/kernel.asm	/^    f0104afd:	00 00 00 $/;"	l
f0104b00	obj/kern/kernel.asm	/^    f0104b00:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104b05	obj/kern/kernel.asm	/^    f0104b05:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0104b0c	obj/kern/kernel.asm	/^    f0104b0c:	00 00 00 $/;"	l
f0104b0f	obj/kern/kernel.asm	/^    f0104b0f:	ff d3                	callq  *%rbx$/;"	l
f0104b11	obj/kern/kernel.asm	/^    f0104b11:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax$/;"	l
f0104b17	obj/kern/kernel.asm	/^    f0104b17:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f0104b1b	obj/kern/kernel.asm	/^    f0104b1b:	48 03 45 88          	add    -0x78(%rbp),%rax$/;"	l
f0104b1f	obj/kern/kernel.asm	/^    f0104b1f:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0104b22	obj/kern/kernel.asm	/^    f0104b22:	83 e0 02             	and    $0x2,%eax$/;"	l
f0104b25	obj/kern/kernel.asm	/^    f0104b25:	48 85 c0             	test   %rax,%rax$/;"	l
f0104b28	obj/kern/kernel.asm	/^    f0104b28:	75 7f                	jne    fffffffff0104ba9 <end+0xfffffffefe663809>$/;"	l
f0104b2a	obj/kern/kernel.asm	/^    f0104b2a:	48 b9 ec 1d 11 f0 00 	mov    $0xf0111dec,%rcx$/;"	l
f0104b31	obj/kern/kernel.asm	/^    f0104b31:	00 00 00 $/;"	l
f0104b34	obj/kern/kernel.asm	/^    f0104b34:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0104b3b	obj/kern/kernel.asm	/^    f0104b3b:	00 00 00 $/;"	l
f0104b3e	obj/kern/kernel.asm	/^    f0104b3e:	be 28 04 00 00       	mov    $0x428,%esi$/;"	l
f0104b43	obj/kern/kernel.asm	/^    f0104b43:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0104b4a	obj/kern/kernel.asm	/^    f0104b4a:	00 00 00 $/;"	l
f0104b4d	obj/kern/kernel.asm	/^    f0104b4d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104b52	obj/kern/kernel.asm	/^    f0104b52:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0104b59	obj/kern/kernel.asm	/^    f0104b59:	00 00 00 $/;"	l
f0104b5c	obj/kern/kernel.asm	/^    f0104b5c:	ff d3                	callq  *%rbx$/;"	l
f0104b5e	obj/kern/kernel.asm	/^    f0104b5e:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax$/;"	l
f0104b64	obj/kern/kernel.asm	/^    f0104b64:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f0104b68	obj/kern/kernel.asm	/^    f0104b68:	48 03 45 88          	add    -0x78(%rbp),%rax$/;"	l
f0104b6c	obj/kern/kernel.asm	/^    f0104b6c:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0104b6f	obj/kern/kernel.asm	/^    f0104b6f:	48 85 c0             	test   %rax,%rax$/;"	l
f0104b72	obj/kern/kernel.asm	/^    f0104b72:	74 35                	je     fffffffff0104ba9 <end+0xfffffffefe663809>$/;"	l
f0104b74	obj/kern/kernel.asm	/^    f0104b74:	48 b9 fd 1d 11 f0 00 	mov    $0xf0111dfd,%rcx$/;"	l
f0104b7b	obj/kern/kernel.asm	/^    f0104b7b:	00 00 00 $/;"	l
f0104b7e	obj/kern/kernel.asm	/^    f0104b7e:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0104b85	obj/kern/kernel.asm	/^    f0104b85:	00 00 00 $/;"	l
f0104b88	obj/kern/kernel.asm	/^    f0104b88:	be 2a 04 00 00       	mov    $0x42a,%esi$/;"	l
f0104b8d	obj/kern/kernel.asm	/^    f0104b8d:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0104b94	obj/kern/kernel.asm	/^    f0104b94:	00 00 00 $/;"	l
f0104b97	obj/kern/kernel.asm	/^    f0104b97:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104b9c	obj/kern/kernel.asm	/^    f0104b9c:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0104ba3	obj/kern/kernel.asm	/^    f0104ba3:	00 00 00 $/;"	l
f0104ba6	obj/kern/kernel.asm	/^    f0104ba6:	ff d3                	callq  *%rbx$/;"	l
f0104ba8	obj/kern/kernel.asm	/^    f0104ba8:	90                   	nop$/;"	l
f0104ba9	obj/kern/kernel.asm	/^    f0104ba9:	83 85 78 ff ff ff 01 	addl   $0x1,-0x88(%rbp)$/;"	l
f0104bb0	obj/kern/kernel.asm	/^    f0104bb0:	81 bd 78 ff ff ff ff 	cmpl   $0x1ff,-0x88(%rbp)$/;"	l
f0104bb7	obj/kern/kernel.asm	/^    f0104bb7:	01 00 00 $/;"	l
f0104bba	obj/kern/kernel.asm	/^    f0104bba:	0f 86 95 fe ff ff    	jbe    fffffffff0104a55 <end+0xfffffffefe6636b5>$/;"	l
f0104bc0	obj/kern/kernel.asm	/^    f0104bc0:	48 bf 10 1e 11 f0 00 	mov    $0xf0111e10,%rdi$/;"	l
f0104bc7	obj/kern/kernel.asm	/^    f0104bc7:	00 00 00 $/;"	l
f0104bca	obj/kern/kernel.asm	/^    f0104bca:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104bcf	obj/kern/kernel.asm	/^    f0104bcf:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f0104bd6	obj/kern/kernel.asm	/^    f0104bd6:	00 00 00 $/;"	l
f0104bd9	obj/kern/kernel.asm	/^    f0104bd9:	ff d2                	callq  *%rdx$/;"	l
f0104bdb	obj/kern/kernel.asm	/^    f0104bdb:	48 81 c4 98 00 00 00 	add    $0x98,%rsp$/;"	l
f0104be2	obj/kern/kernel.asm	/^    f0104be2:	5b                   	pop    %rbx$/;"	l
f0104be3	obj/kern/kernel.asm	/^    f0104be3:	c9                   	leaveq $/;"	l
f0104be4	obj/kern/kernel.asm	/^    f0104be4:	c3                   	retq   $/;"	l
f0104be5	obj/kern/kernel.asm	/^    f0104be5:	55                   	push   %rbp$/;"	l
f0104be6	obj/kern/kernel.asm	/^    f0104be6:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f0104be9	obj/kern/kernel.asm	/^    f0104be9:	53                   	push   %rbx$/;"	l
f0104bea	obj/kern/kernel.asm	/^    f0104bea:	48 83 ec 68          	sub    $0x68,%rsp$/;"	l
f0104bee	obj/kern/kernel.asm	/^    f0104bee:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)$/;"	l
f0104bf2	obj/kern/kernel.asm	/^    f0104bf2:	48 89 75 90          	mov    %rsi,-0x70(%rbp)$/;"	l
f0104bf6	obj/kern/kernel.asm	/^    f0104bf6:	48 8b 45 90          	mov    -0x70(%rbp),%rax$/;"	l
f0104bfa	obj/kern/kernel.asm	/^    f0104bfa:	48 c1 e8 27          	shr    $0x27,%rax$/;"	l
f0104bfe	obj/kern/kernel.asm	/^    f0104bfe:	25 ff 01 00 00       	and    $0x1ff,%eax$/;"	l
f0104c03	obj/kern/kernel.asm	/^    f0104c03:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f0104c07	obj/kern/kernel.asm	/^    f0104c07:	48 01 45 98          	add    %rax,-0x68(%rbp)$/;"	l
f0104c0b	obj/kern/kernel.asm	/^    f0104c0b:	48 8b 45 98          	mov    -0x68(%rbp),%rax$/;"	l
f0104c0f	obj/kern/kernel.asm	/^    f0104c0f:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0104c12	obj/kern/kernel.asm	/^    f0104c12:	83 e0 01             	and    $0x1,%eax$/;"	l
f0104c15	obj/kern/kernel.asm	/^    f0104c15:	85 c0                	test   %eax,%eax$/;"	l
f0104c17	obj/kern/kernel.asm	/^    f0104c17:	75 0c                	jne    fffffffff0104c25 <end+0xfffffffefe663885>$/;"	l
f0104c19	obj/kern/kernel.asm	/^    f0104c19:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax$/;"	l
f0104c20	obj/kern/kernel.asm	/^    f0104c20:	e9 fe 01 00 00       	jmpq   fffffffff0104e23 <end+0xfffffffefe663a83>$/;"	l
f0104c25	obj/kern/kernel.asm	/^    f0104c25:	48 8b 45 98          	mov    -0x68(%rbp),%rax$/;"	l
f0104c29	obj/kern/kernel.asm	/^    f0104c29:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0104c2c	obj/kern/kernel.asm	/^    f0104c2c:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
f0104c32	obj/kern/kernel.asm	/^    f0104c32:	48 89 45 c0          	mov    %rax,-0x40(%rbp)$/;"	l
f0104c36	obj/kern/kernel.asm	/^    f0104c36:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
f0104c3a	obj/kern/kernel.asm	/^    f0104c3a:	48 c1 e8 0c          	shr    $0xc,%rax$/;"	l
f0104c3e	obj/kern/kernel.asm	/^    f0104c3e:	89 45 cc             	mov    %eax,-0x34(%rbp)$/;"	l
f0104c41	obj/kern/kernel.asm	/^    f0104c41:	8b 55 cc             	mov    -0x34(%rbp),%edx$/;"	l
f0104c44	obj/kern/kernel.asm	/^    f0104c44:	48 b8 68 77 a2 f1 00 	mov    $0xf1a27768,%rax$/;"	l
f0104c4b	obj/kern/kernel.asm	/^    f0104c4b:	00 00 00 $/;"	l
f0104c4e	obj/kern/kernel.asm	/^    f0104c4e:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0104c51	obj/kern/kernel.asm	/^    f0104c51:	48 39 c2             	cmp    %rax,%rdx$/;"	l
f0104c54	obj/kern/kernel.asm	/^    f0104c54:	72 31                	jb     fffffffff0104c87 <end+0xfffffffefe6638e7>$/;"	l
f0104c56	obj/kern/kernel.asm	/^    f0104c56:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
f0104c5a	obj/kern/kernel.asm	/^    f0104c5a:	48 89 c1             	mov    %rax,%rcx$/;"	l
f0104c5d	obj/kern/kernel.asm	/^    f0104c5d:	48 ba 78 18 11 f0 00 	mov    $0xf0111878,%rdx$/;"	l
f0104c64	obj/kern/kernel.asm	/^    f0104c64:	00 00 00 $/;"	l
f0104c67	obj/kern/kernel.asm	/^    f0104c67:	be 3f 04 00 00       	mov    $0x43f,%esi$/;"	l
f0104c6c	obj/kern/kernel.asm	/^    f0104c6c:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0104c73	obj/kern/kernel.asm	/^    f0104c73:	00 00 00 $/;"	l
f0104c76	obj/kern/kernel.asm	/^    f0104c76:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104c7b	obj/kern/kernel.asm	/^    f0104c7b:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0104c82	obj/kern/kernel.asm	/^    f0104c82:	00 00 00 $/;"	l
f0104c85	obj/kern/kernel.asm	/^    f0104c85:	ff d3                	callq  *%rbx$/;"	l
f0104c87	obj/kern/kernel.asm	/^    f0104c87:	b8 00 00 00 f0       	mov    $0xf0000000,%eax$/;"	l
f0104c8c	obj/kern/kernel.asm	/^    f0104c8c:	48 03 45 c0          	add    -0x40(%rbp),%rax$/;"	l
f0104c90	obj/kern/kernel.asm	/^    f0104c90:	48 89 45 b0          	mov    %rax,-0x50(%rbp)$/;"	l
f0104c94	obj/kern/kernel.asm	/^    f0104c94:	48 8b 45 90          	mov    -0x70(%rbp),%rax$/;"	l
f0104c98	obj/kern/kernel.asm	/^    f0104c98:	48 c1 e8 1e          	shr    $0x1e,%rax$/;"	l
f0104c9c	obj/kern/kernel.asm	/^    f0104c9c:	25 ff 01 00 00       	and    $0x1ff,%eax$/;"	l
f0104ca1	obj/kern/kernel.asm	/^    f0104ca1:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f0104ca5	obj/kern/kernel.asm	/^    f0104ca5:	48 03 45 b0          	add    -0x50(%rbp),%rax$/;"	l
f0104ca9	obj/kern/kernel.asm	/^    f0104ca9:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0104cac	obj/kern/kernel.asm	/^    f0104cac:	83 e0 01             	and    $0x1,%eax$/;"	l
f0104caf	obj/kern/kernel.asm	/^    f0104caf:	85 c0                	test   %eax,%eax$/;"	l
f0104cb1	obj/kern/kernel.asm	/^    f0104cb1:	75 0c                	jne    fffffffff0104cbf <end+0xfffffffefe66391f>$/;"	l
f0104cb3	obj/kern/kernel.asm	/^    f0104cb3:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax$/;"	l
f0104cba	obj/kern/kernel.asm	/^    f0104cba:	e9 64 01 00 00       	jmpq   fffffffff0104e23 <end+0xfffffffefe663a83>$/;"	l
f0104cbf	obj/kern/kernel.asm	/^    f0104cbf:	48 8b 45 90          	mov    -0x70(%rbp),%rax$/;"	l
f0104cc3	obj/kern/kernel.asm	/^    f0104cc3:	48 c1 e8 1e          	shr    $0x1e,%rax$/;"	l
f0104cc7	obj/kern/kernel.asm	/^    f0104cc7:	25 ff 01 00 00       	and    $0x1ff,%eax$/;"	l
f0104ccc	obj/kern/kernel.asm	/^    f0104ccc:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f0104cd0	obj/kern/kernel.asm	/^    f0104cd0:	48 03 45 b0          	add    -0x50(%rbp),%rax$/;"	l
f0104cd4	obj/kern/kernel.asm	/^    f0104cd4:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0104cd7	obj/kern/kernel.asm	/^    f0104cd7:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
f0104cdd	obj/kern/kernel.asm	/^    f0104cdd:	48 89 45 d0          	mov    %rax,-0x30(%rbp)$/;"	l
f0104ce1	obj/kern/kernel.asm	/^    f0104ce1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f0104ce5	obj/kern/kernel.asm	/^    f0104ce5:	48 c1 e8 0c          	shr    $0xc,%rax$/;"	l
f0104ce9	obj/kern/kernel.asm	/^    f0104ce9:	89 45 dc             	mov    %eax,-0x24(%rbp)$/;"	l
f0104cec	obj/kern/kernel.asm	/^    f0104cec:	8b 55 dc             	mov    -0x24(%rbp),%edx$/;"	l
f0104cef	obj/kern/kernel.asm	/^    f0104cef:	48 b8 68 77 a2 f1 00 	mov    $0xf1a27768,%rax$/;"	l
f0104cf6	obj/kern/kernel.asm	/^    f0104cf6:	00 00 00 $/;"	l
f0104cf9	obj/kern/kernel.asm	/^    f0104cf9:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0104cfc	obj/kern/kernel.asm	/^    f0104cfc:	48 39 c2             	cmp    %rax,%rdx$/;"	l
f0104cff	obj/kern/kernel.asm	/^    f0104cff:	72 31                	jb     fffffffff0104d32 <end+0xfffffffefe663992>$/;"	l
f0104d01	obj/kern/kernel.asm	/^    f0104d01:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f0104d05	obj/kern/kernel.asm	/^    f0104d05:	48 89 c1             	mov    %rax,%rcx$/;"	l
f0104d08	obj/kern/kernel.asm	/^    f0104d08:	48 ba 78 18 11 f0 00 	mov    $0xf0111878,%rdx$/;"	l
f0104d0f	obj/kern/kernel.asm	/^    f0104d0f:	00 00 00 $/;"	l
f0104d12	obj/kern/kernel.asm	/^    f0104d12:	be 42 04 00 00       	mov    $0x442,%esi$/;"	l
f0104d17	obj/kern/kernel.asm	/^    f0104d17:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0104d1e	obj/kern/kernel.asm	/^    f0104d1e:	00 00 00 $/;"	l
f0104d21	obj/kern/kernel.asm	/^    f0104d21:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104d26	obj/kern/kernel.asm	/^    f0104d26:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0104d2d	obj/kern/kernel.asm	/^    f0104d2d:	00 00 00 $/;"	l
f0104d30	obj/kern/kernel.asm	/^    f0104d30:	ff d3                	callq  *%rbx$/;"	l
f0104d32	obj/kern/kernel.asm	/^    f0104d32:	b8 00 00 00 f0       	mov    $0xf0000000,%eax$/;"	l
f0104d37	obj/kern/kernel.asm	/^    f0104d37:	48 03 45 d0          	add    -0x30(%rbp),%rax$/;"	l
f0104d3b	obj/kern/kernel.asm	/^    f0104d3b:	48 89 45 b8          	mov    %rax,-0x48(%rbp)$/;"	l
f0104d3f	obj/kern/kernel.asm	/^    f0104d3f:	48 8b 45 90          	mov    -0x70(%rbp),%rax$/;"	l
f0104d43	obj/kern/kernel.asm	/^    f0104d43:	48 c1 e8 15          	shr    $0x15,%rax$/;"	l
f0104d47	obj/kern/kernel.asm	/^    f0104d47:	25 ff 01 00 00       	and    $0x1ff,%eax$/;"	l
f0104d4c	obj/kern/kernel.asm	/^    f0104d4c:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f0104d50	obj/kern/kernel.asm	/^    f0104d50:	48 01 45 b8          	add    %rax,-0x48(%rbp)$/;"	l
f0104d54	obj/kern/kernel.asm	/^    f0104d54:	48 8b 45 b8          	mov    -0x48(%rbp),%rax$/;"	l
f0104d58	obj/kern/kernel.asm	/^    f0104d58:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0104d5b	obj/kern/kernel.asm	/^    f0104d5b:	83 e0 01             	and    $0x1,%eax$/;"	l
f0104d5e	obj/kern/kernel.asm	/^    f0104d5e:	85 c0                	test   %eax,%eax$/;"	l
f0104d60	obj/kern/kernel.asm	/^    f0104d60:	75 0c                	jne    fffffffff0104d6e <end+0xfffffffefe6639ce>$/;"	l
f0104d62	obj/kern/kernel.asm	/^    f0104d62:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax$/;"	l
f0104d69	obj/kern/kernel.asm	/^    f0104d69:	e9 b5 00 00 00       	jmpq   fffffffff0104e23 <end+0xfffffffefe663a83>$/;"	l
f0104d6e	obj/kern/kernel.asm	/^    f0104d6e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax$/;"	l
f0104d72	obj/kern/kernel.asm	/^    f0104d72:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0104d75	obj/kern/kernel.asm	/^    f0104d75:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
f0104d7b	obj/kern/kernel.asm	/^    f0104d7b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)$/;"	l
f0104d7f	obj/kern/kernel.asm	/^    f0104d7f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
f0104d83	obj/kern/kernel.asm	/^    f0104d83:	48 c1 e8 0c          	shr    $0xc,%rax$/;"	l
f0104d87	obj/kern/kernel.asm	/^    f0104d87:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
f0104d8a	obj/kern/kernel.asm	/^    f0104d8a:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
f0104d8d	obj/kern/kernel.asm	/^    f0104d8d:	48 b8 68 77 a2 f1 00 	mov    $0xf1a27768,%rax$/;"	l
f0104d94	obj/kern/kernel.asm	/^    f0104d94:	00 00 00 $/;"	l
f0104d97	obj/kern/kernel.asm	/^    f0104d97:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0104d9a	obj/kern/kernel.asm	/^    f0104d9a:	48 39 c2             	cmp    %rax,%rdx$/;"	l
f0104d9d	obj/kern/kernel.asm	/^    f0104d9d:	72 31                	jb     fffffffff0104dd0 <end+0xfffffffefe663a30>$/;"	l
f0104d9f	obj/kern/kernel.asm	/^    f0104d9f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
f0104da3	obj/kern/kernel.asm	/^    f0104da3:	48 89 c1             	mov    %rax,%rcx$/;"	l
f0104da6	obj/kern/kernel.asm	/^    f0104da6:	48 ba 78 18 11 f0 00 	mov    $0xf0111878,%rdx$/;"	l
f0104dad	obj/kern/kernel.asm	/^    f0104dad:	00 00 00 $/;"	l
f0104db0	obj/kern/kernel.asm	/^    f0104db0:	be 46 04 00 00       	mov    $0x446,%esi$/;"	l
f0104db5	obj/kern/kernel.asm	/^    f0104db5:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0104dbc	obj/kern/kernel.asm	/^    f0104dbc:	00 00 00 $/;"	l
f0104dbf	obj/kern/kernel.asm	/^    f0104dbf:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104dc4	obj/kern/kernel.asm	/^    f0104dc4:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0104dcb	obj/kern/kernel.asm	/^    f0104dcb:	00 00 00 $/;"	l
f0104dce	obj/kern/kernel.asm	/^    f0104dce:	ff d3                	callq  *%rbx$/;"	l
f0104dd0	obj/kern/kernel.asm	/^    f0104dd0:	b8 00 00 00 f0       	mov    $0xf0000000,%eax$/;"	l
f0104dd5	obj/kern/kernel.asm	/^    f0104dd5:	48 03 45 e0          	add    -0x20(%rbp),%rax$/;"	l
f0104dd9	obj/kern/kernel.asm	/^    f0104dd9:	48 89 45 a8          	mov    %rax,-0x58(%rbp)$/;"	l
f0104ddd	obj/kern/kernel.asm	/^    f0104ddd:	48 8b 45 90          	mov    -0x70(%rbp),%rax$/;"	l
f0104de1	obj/kern/kernel.asm	/^    f0104de1:	48 c1 e8 0c          	shr    $0xc,%rax$/;"	l
f0104de5	obj/kern/kernel.asm	/^    f0104de5:	25 ff 01 00 00       	and    $0x1ff,%eax$/;"	l
f0104dea	obj/kern/kernel.asm	/^    f0104dea:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f0104dee	obj/kern/kernel.asm	/^    f0104dee:	48 03 45 a8          	add    -0x58(%rbp),%rax$/;"	l
f0104df2	obj/kern/kernel.asm	/^    f0104df2:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0104df5	obj/kern/kernel.asm	/^    f0104df5:	83 e0 01             	and    $0x1,%eax$/;"	l
f0104df8	obj/kern/kernel.asm	/^    f0104df8:	85 c0                	test   %eax,%eax$/;"	l
f0104dfa	obj/kern/kernel.asm	/^    f0104dfa:	75 09                	jne    fffffffff0104e05 <end+0xfffffffefe663a65>$/;"	l
f0104dfc	obj/kern/kernel.asm	/^    f0104dfc:	48 c7 c0 ff ff ff ff 	mov    $0xffffffffffffffff,%rax$/;"	l
f0104e03	obj/kern/kernel.asm	/^    f0104e03:	eb 1e                	jmp    fffffffff0104e23 <end+0xfffffffefe663a83>$/;"	l
f0104e05	obj/kern/kernel.asm	/^    f0104e05:	48 8b 45 90          	mov    -0x70(%rbp),%rax$/;"	l
f0104e09	obj/kern/kernel.asm	/^    f0104e09:	48 c1 e8 0c          	shr    $0xc,%rax$/;"	l
f0104e0d	obj/kern/kernel.asm	/^    f0104e0d:	25 ff 01 00 00       	and    $0x1ff,%eax$/;"	l
f0104e12	obj/kern/kernel.asm	/^    f0104e12:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f0104e16	obj/kern/kernel.asm	/^    f0104e16:	48 03 45 a8          	add    -0x58(%rbp),%rax$/;"	l
f0104e1a	obj/kern/kernel.asm	/^    f0104e1a:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0104e1d	obj/kern/kernel.asm	/^    f0104e1d:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
f0104e23	obj/kern/kernel.asm	/^    f0104e23:	48 83 c4 68          	add    $0x68,%rsp$/;"	l
f0104e27	obj/kern/kernel.asm	/^    f0104e27:	5b                   	pop    %rbx$/;"	l
f0104e28	obj/kern/kernel.asm	/^    f0104e28:	c9                   	leaveq $/;"	l
f0104e29	obj/kern/kernel.asm	/^    f0104e29:	c3                   	retq   $/;"	l
f0104e2a	obj/kern/kernel.asm	/^    f0104e2a:	55                   	push   %rbp$/;"	l
f0104e2b	obj/kern/kernel.asm	/^    f0104e2b:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f0104e2e	obj/kern/kernel.asm	/^    f0104e2e:	53                   	push   %rbx$/;"	l
f0104e2f	obj/kern/kernel.asm	/^    f0104e2f:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp$/;"	l
f0104e36	obj/kern/kernel.asm	/^    f0104e36:	48 c7 85 18 ff ff ff 	movq   $0x0,-0xe8(%rbp)$/;"	l
f0104e3d	obj/kern/kernel.asm	/^    f0104e3d:	00 00 00 00 $/;"	l
f0104e41	obj/kern/kernel.asm	/^    f0104e41:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax$/;"	l
f0104e48	obj/kern/kernel.asm	/^    f0104e48:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)$/;"	l
f0104e4f	obj/kern/kernel.asm	/^    f0104e4f:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax$/;"	l
f0104e56	obj/kern/kernel.asm	/^    f0104e56:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)$/;"	l
f0104e5d	obj/kern/kernel.asm	/^    f0104e5d:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax$/;"	l
f0104e64	obj/kern/kernel.asm	/^    f0104e64:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)$/;"	l
f0104e6b	obj/kern/kernel.asm	/^    f0104e6b:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax$/;"	l
f0104e72	obj/kern/kernel.asm	/^    f0104e72:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)$/;"	l
f0104e79	obj/kern/kernel.asm	/^    f0104e79:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax$/;"	l
f0104e80	obj/kern/kernel.asm	/^    f0104e80:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)$/;"	l
f0104e87	obj/kern/kernel.asm	/^    f0104e87:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0104e8c	obj/kern/kernel.asm	/^    f0104e8c:	48 b8 fd 27 10 f0 00 	mov    $0xf01027fd,%rax$/;"	l
f0104e93	obj/kern/kernel.asm	/^    f0104e93:	00 00 00 $/;"	l
f0104e96	obj/kern/kernel.asm	/^    f0104e96:	ff d0                	callq  *%rax$/;"	l
f0104e98	obj/kern/kernel.asm	/^    f0104e98:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)$/;"	l
f0104e9f	obj/kern/kernel.asm	/^    f0104e9f:	48 83 bd f0 fe ff ff 	cmpq   $0x0,-0x110(%rbp)$/;"	l
f0104ea6	obj/kern/kernel.asm	/^    f0104ea6:	00 $/;"	l
f0104ea7	obj/kern/kernel.asm	/^    f0104ea7:	75 34                	jne    fffffffff0104edd <end+0xfffffffefe663b3d>$/;"	l
f0104ea9	obj/kern/kernel.asm	/^    f0104ea9:	48 b9 2f 1e 11 f0 00 	mov    $0xf0111e2f,%rcx$/;"	l
f0104eb0	obj/kern/kernel.asm	/^    f0104eb0:	00 00 00 $/;"	l
f0104eb3	obj/kern/kernel.asm	/^    f0104eb3:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0104eba	obj/kern/kernel.asm	/^    f0104eba:	00 00 00 $/;"	l
f0104ebd	obj/kern/kernel.asm	/^    f0104ebd:	be 5b 04 00 00       	mov    $0x45b,%esi$/;"	l
f0104ec2	obj/kern/kernel.asm	/^    f0104ec2:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0104ec9	obj/kern/kernel.asm	/^    f0104ec9:	00 00 00 $/;"	l
f0104ecc	obj/kern/kernel.asm	/^    f0104ecc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104ed1	obj/kern/kernel.asm	/^    f0104ed1:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0104ed8	obj/kern/kernel.asm	/^    f0104ed8:	00 00 00 $/;"	l
f0104edb	obj/kern/kernel.asm	/^    f0104edb:	ff d3                	callq  *%rbx$/;"	l
f0104edd	obj/kern/kernel.asm	/^    f0104edd:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0104ee2	obj/kern/kernel.asm	/^    f0104ee2:	48 b8 fd 27 10 f0 00 	mov    $0xf01027fd,%rax$/;"	l
f0104ee9	obj/kern/kernel.asm	/^    f0104ee9:	00 00 00 $/;"	l
f0104eec	obj/kern/kernel.asm	/^    f0104eec:	ff d0                	callq  *%rax$/;"	l
f0104eee	obj/kern/kernel.asm	/^    f0104eee:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)$/;"	l
f0104ef5	obj/kern/kernel.asm	/^    f0104ef5:	48 83 bd f8 fe ff ff 	cmpq   $0x0,-0x108(%rbp)$/;"	l
f0104efc	obj/kern/kernel.asm	/^    f0104efc:	00 $/;"	l
f0104efd	obj/kern/kernel.asm	/^    f0104efd:	75 34                	jne    fffffffff0104f33 <end+0xfffffffefe663b93>$/;"	l
f0104eff	obj/kern/kernel.asm	/^    f0104eff:	48 b9 43 1e 11 f0 00 	mov    $0xf0111e43,%rcx$/;"	l
f0104f06	obj/kern/kernel.asm	/^    f0104f06:	00 00 00 $/;"	l
f0104f09	obj/kern/kernel.asm	/^    f0104f09:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0104f10	obj/kern/kernel.asm	/^    f0104f10:	00 00 00 $/;"	l
f0104f13	obj/kern/kernel.asm	/^    f0104f13:	be 5c 04 00 00       	mov    $0x45c,%esi$/;"	l
f0104f18	obj/kern/kernel.asm	/^    f0104f18:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0104f1f	obj/kern/kernel.asm	/^    f0104f1f:	00 00 00 $/;"	l
f0104f22	obj/kern/kernel.asm	/^    f0104f22:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104f27	obj/kern/kernel.asm	/^    f0104f27:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0104f2e	obj/kern/kernel.asm	/^    f0104f2e:	00 00 00 $/;"	l
f0104f31	obj/kern/kernel.asm	/^    f0104f31:	ff d3                	callq  *%rbx$/;"	l
f0104f33	obj/kern/kernel.asm	/^    f0104f33:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0104f38	obj/kern/kernel.asm	/^    f0104f38:	48 b8 fd 27 10 f0 00 	mov    $0xf01027fd,%rax$/;"	l
f0104f3f	obj/kern/kernel.asm	/^    f0104f3f:	00 00 00 $/;"	l
f0104f42	obj/kern/kernel.asm	/^    f0104f42:	ff d0                	callq  *%rax$/;"	l
f0104f44	obj/kern/kernel.asm	/^    f0104f44:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)$/;"	l
f0104f4b	obj/kern/kernel.asm	/^    f0104f4b:	48 83 bd 00 ff ff ff 	cmpq   $0x0,-0x100(%rbp)$/;"	l
f0104f52	obj/kern/kernel.asm	/^    f0104f52:	00 $/;"	l
f0104f53	obj/kern/kernel.asm	/^    f0104f53:	75 34                	jne    fffffffff0104f89 <end+0xfffffffefe663be9>$/;"	l
f0104f55	obj/kern/kernel.asm	/^    f0104f55:	48 b9 57 1e 11 f0 00 	mov    $0xf0111e57,%rcx$/;"	l
f0104f5c	obj/kern/kernel.asm	/^    f0104f5c:	00 00 00 $/;"	l
f0104f5f	obj/kern/kernel.asm	/^    f0104f5f:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0104f66	obj/kern/kernel.asm	/^    f0104f66:	00 00 00 $/;"	l
f0104f69	obj/kern/kernel.asm	/^    f0104f69:	be 5d 04 00 00       	mov    $0x45d,%esi$/;"	l
f0104f6e	obj/kern/kernel.asm	/^    f0104f6e:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0104f75	obj/kern/kernel.asm	/^    f0104f75:	00 00 00 $/;"	l
f0104f78	obj/kern/kernel.asm	/^    f0104f78:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104f7d	obj/kern/kernel.asm	/^    f0104f7d:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0104f84	obj/kern/kernel.asm	/^    f0104f84:	00 00 00 $/;"	l
f0104f87	obj/kern/kernel.asm	/^    f0104f87:	ff d3                	callq  *%rbx$/;"	l
f0104f89	obj/kern/kernel.asm	/^    f0104f89:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0104f8e	obj/kern/kernel.asm	/^    f0104f8e:	48 b8 fd 27 10 f0 00 	mov    $0xf01027fd,%rax$/;"	l
f0104f95	obj/kern/kernel.asm	/^    f0104f95:	00 00 00 $/;"	l
f0104f98	obj/kern/kernel.asm	/^    f0104f98:	ff d0                	callq  *%rax$/;"	l
f0104f9a	obj/kern/kernel.asm	/^    f0104f9a:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)$/;"	l
f0104fa1	obj/kern/kernel.asm	/^    f0104fa1:	48 83 bd 08 ff ff ff 	cmpq   $0x0,-0xf8(%rbp)$/;"	l
f0104fa8	obj/kern/kernel.asm	/^    f0104fa8:	00 $/;"	l
f0104fa9	obj/kern/kernel.asm	/^    f0104fa9:	75 34                	jne    fffffffff0104fdf <end+0xfffffffefe663c3f>$/;"	l
f0104fab	obj/kern/kernel.asm	/^    f0104fab:	48 b9 6b 1e 11 f0 00 	mov    $0xf0111e6b,%rcx$/;"	l
f0104fb2	obj/kern/kernel.asm	/^    f0104fb2:	00 00 00 $/;"	l
f0104fb5	obj/kern/kernel.asm	/^    f0104fb5:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0104fbc	obj/kern/kernel.asm	/^    f0104fbc:	00 00 00 $/;"	l
f0104fbf	obj/kern/kernel.asm	/^    f0104fbf:	be 5e 04 00 00       	mov    $0x45e,%esi$/;"	l
f0104fc4	obj/kern/kernel.asm	/^    f0104fc4:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0104fcb	obj/kern/kernel.asm	/^    f0104fcb:	00 00 00 $/;"	l
f0104fce	obj/kern/kernel.asm	/^    f0104fce:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0104fd3	obj/kern/kernel.asm	/^    f0104fd3:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0104fda	obj/kern/kernel.asm	/^    f0104fda:	00 00 00 $/;"	l
f0104fdd	obj/kern/kernel.asm	/^    f0104fdd:	ff d3                	callq  *%rbx$/;"	l
f0104fdf	obj/kern/kernel.asm	/^    f0104fdf:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0104fe4	obj/kern/kernel.asm	/^    f0104fe4:	48 b8 fd 27 10 f0 00 	mov    $0xf01027fd,%rax$/;"	l
f0104feb	obj/kern/kernel.asm	/^    f0104feb:	00 00 00 $/;"	l
f0104fee	obj/kern/kernel.asm	/^    f0104fee:	ff d0                	callq  *%rax$/;"	l
f0104ff0	obj/kern/kernel.asm	/^    f0104ff0:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)$/;"	l
f0104ff7	obj/kern/kernel.asm	/^    f0104ff7:	48 83 bd 10 ff ff ff 	cmpq   $0x0,-0xf0(%rbp)$/;"	l
f0104ffe	obj/kern/kernel.asm	/^    f0104ffe:	00 $/;"	l
f0104fff	obj/kern/kernel.asm	/^    f0104fff:	75 34                	jne    fffffffff0105035 <end+0xfffffffefe663c95>$/;"	l
f0105001	obj/kern/kernel.asm	/^    f0105001:	48 b9 7f 1e 11 f0 00 	mov    $0xf0111e7f,%rcx$/;"	l
f0105008	obj/kern/kernel.asm	/^    f0105008:	00 00 00 $/;"	l
f010500b	obj/kern/kernel.asm	/^    f010500b:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0105012	obj/kern/kernel.asm	/^    f0105012:	00 00 00 $/;"	l
f0105015	obj/kern/kernel.asm	/^    f0105015:	be 5f 04 00 00       	mov    $0x45f,%esi$/;"	l
f010501a	obj/kern/kernel.asm	/^    f010501a:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0105021	obj/kern/kernel.asm	/^    f0105021:	00 00 00 $/;"	l
f0105024	obj/kern/kernel.asm	/^    f0105024:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105029	obj/kern/kernel.asm	/^    f0105029:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0105030	obj/kern/kernel.asm	/^    f0105030:	00 00 00 $/;"	l
f0105033	obj/kern/kernel.asm	/^    f0105033:	ff d3                	callq  *%rbx$/;"	l
f0105035	obj/kern/kernel.asm	/^    f0105035:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f010503a	obj/kern/kernel.asm	/^    f010503a:	48 b8 fd 27 10 f0 00 	mov    $0xf01027fd,%rax$/;"	l
f0105041	obj/kern/kernel.asm	/^    f0105041:	00 00 00 $/;"	l
f0105044	obj/kern/kernel.asm	/^    f0105044:	ff d0                	callq  *%rax$/;"	l
f0105046	obj/kern/kernel.asm	/^    f0105046:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)$/;"	l
f010504d	obj/kern/kernel.asm	/^    f010504d:	48 83 bd 18 ff ff ff 	cmpq   $0x0,-0xe8(%rbp)$/;"	l
f0105054	obj/kern/kernel.asm	/^    f0105054:	00 $/;"	l
f0105055	obj/kern/kernel.asm	/^    f0105055:	75 34                	jne    fffffffff010508b <end+0xfffffffefe663ceb>$/;"	l
f0105057	obj/kern/kernel.asm	/^    f0105057:	48 b9 93 1e 11 f0 00 	mov    $0xf0111e93,%rcx$/;"	l
f010505e	obj/kern/kernel.asm	/^    f010505e:	00 00 00 $/;"	l
f0105061	obj/kern/kernel.asm	/^    f0105061:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0105068	obj/kern/kernel.asm	/^    f0105068:	00 00 00 $/;"	l
f010506b	obj/kern/kernel.asm	/^    f010506b:	be 60 04 00 00       	mov    $0x460,%esi$/;"	l
f0105070	obj/kern/kernel.asm	/^    f0105070:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0105077	obj/kern/kernel.asm	/^    f0105077:	00 00 00 $/;"	l
f010507a	obj/kern/kernel.asm	/^    f010507a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010507f	obj/kern/kernel.asm	/^    f010507f:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0105086	obj/kern/kernel.asm	/^    f0105086:	00 00 00 $/;"	l
f0105089	obj/kern/kernel.asm	/^    f0105089:	ff d3                	callq  *%rbx$/;"	l
f010508b	obj/kern/kernel.asm	/^    f010508b:	48 83 bd f0 fe ff ff 	cmpq   $0x0,-0x110(%rbp)$/;"	l
f0105092	obj/kern/kernel.asm	/^    f0105092:	00 $/;"	l
f0105093	obj/kern/kernel.asm	/^    f0105093:	75 34                	jne    fffffffff01050c9 <end+0xfffffffefe663d29>$/;"	l
f0105095	obj/kern/kernel.asm	/^    f0105095:	48 b9 e1 1b 11 f0 00 	mov    $0xf0111be1,%rcx$/;"	l
f010509c	obj/kern/kernel.asm	/^    f010509c:	00 00 00 $/;"	l
f010509f	obj/kern/kernel.asm	/^    f010509f:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f01050a6	obj/kern/kernel.asm	/^    f01050a6:	00 00 00 $/;"	l
f01050a9	obj/kern/kernel.asm	/^    f01050a9:	be 62 04 00 00       	mov    $0x462,%esi$/;"	l
f01050ae	obj/kern/kernel.asm	/^    f01050ae:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f01050b5	obj/kern/kernel.asm	/^    f01050b5:	00 00 00 $/;"	l
f01050b8	obj/kern/kernel.asm	/^    f01050b8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01050bd	obj/kern/kernel.asm	/^    f01050bd:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f01050c4	obj/kern/kernel.asm	/^    f01050c4:	00 00 00 $/;"	l
f01050c7	obj/kern/kernel.asm	/^    f01050c7:	ff d3                	callq  *%rbx$/;"	l
f01050c9	obj/kern/kernel.asm	/^    f01050c9:	48 83 bd f8 fe ff ff 	cmpq   $0x0,-0x108(%rbp)$/;"	l
f01050d0	obj/kern/kernel.asm	/^    f01050d0:	00 $/;"	l
f01050d1	obj/kern/kernel.asm	/^    f01050d1:	74 10                	je     fffffffff01050e3 <end+0xfffffffefe663d43>$/;"	l
f01050d3	obj/kern/kernel.asm	/^    f01050d3:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax$/;"	l
f01050da	obj/kern/kernel.asm	/^    f01050da:	48 3b 85 f0 fe ff ff 	cmp    -0x110(%rbp),%rax$/;"	l
f01050e1	obj/kern/kernel.asm	/^    f01050e1:	75 34                	jne    fffffffff0105117 <end+0xfffffffefe663d77>$/;"	l
f01050e3	obj/kern/kernel.asm	/^    f01050e3:	48 b9 e5 1b 11 f0 00 	mov    $0xf0111be5,%rcx$/;"	l
f01050ea	obj/kern/kernel.asm	/^    f01050ea:	00 00 00 $/;"	l
f01050ed	obj/kern/kernel.asm	/^    f01050ed:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f01050f4	obj/kern/kernel.asm	/^    f01050f4:	00 00 00 $/;"	l
f01050f7	obj/kern/kernel.asm	/^    f01050f7:	be 63 04 00 00       	mov    $0x463,%esi$/;"	l
f01050fc	obj/kern/kernel.asm	/^    f01050fc:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0105103	obj/kern/kernel.asm	/^    f0105103:	00 00 00 $/;"	l
f0105106	obj/kern/kernel.asm	/^    f0105106:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010510b	obj/kern/kernel.asm	/^    f010510b:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0105112	obj/kern/kernel.asm	/^    f0105112:	00 00 00 $/;"	l
f0105115	obj/kern/kernel.asm	/^    f0105115:	ff d3                	callq  *%rbx$/;"	l
f0105117	obj/kern/kernel.asm	/^    f0105117:	48 83 bd 00 ff ff ff 	cmpq   $0x0,-0x100(%rbp)$/;"	l
f010511e	obj/kern/kernel.asm	/^    f010511e:	00 $/;"	l
f010511f	obj/kern/kernel.asm	/^    f010511f:	74 20                	je     fffffffff0105141 <end+0xfffffffefe663da1>$/;"	l
f0105121	obj/kern/kernel.asm	/^    f0105121:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax$/;"	l
f0105128	obj/kern/kernel.asm	/^    f0105128:	48 3b 85 f8 fe ff ff 	cmp    -0x108(%rbp),%rax$/;"	l
f010512f	obj/kern/kernel.asm	/^    f010512f:	74 10                	je     fffffffff0105141 <end+0xfffffffefe663da1>$/;"	l
f0105131	obj/kern/kernel.asm	/^    f0105131:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax$/;"	l
f0105138	obj/kern/kernel.asm	/^    f0105138:	48 3b 85 f0 fe ff ff 	cmp    -0x110(%rbp),%rax$/;"	l
f010513f	obj/kern/kernel.asm	/^    f010513f:	75 34                	jne    fffffffff0105175 <end+0xfffffffefe663dd5>$/;"	l
f0105141	obj/kern/kernel.asm	/^    f0105141:	48 b9 f8 1b 11 f0 00 	mov    $0xf0111bf8,%rcx$/;"	l
f0105148	obj/kern/kernel.asm	/^    f0105148:	00 00 00 $/;"	l
f010514b	obj/kern/kernel.asm	/^    f010514b:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0105152	obj/kern/kernel.asm	/^    f0105152:	00 00 00 $/;"	l
f0105155	obj/kern/kernel.asm	/^    f0105155:	be 64 04 00 00       	mov    $0x464,%esi$/;"	l
f010515a	obj/kern/kernel.asm	/^    f010515a:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0105161	obj/kern/kernel.asm	/^    f0105161:	00 00 00 $/;"	l
f0105164	obj/kern/kernel.asm	/^    f0105164:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105169	obj/kern/kernel.asm	/^    f0105169:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0105170	obj/kern/kernel.asm	/^    f0105170:	00 00 00 $/;"	l
f0105173	obj/kern/kernel.asm	/^    f0105173:	ff d3                	callq  *%rbx$/;"	l
f0105175	obj/kern/kernel.asm	/^    f0105175:	48 83 bd 08 ff ff ff 	cmpq   $0x0,-0xf8(%rbp)$/;"	l
f010517c	obj/kern/kernel.asm	/^    f010517c:	00 $/;"	l
f010517d	obj/kern/kernel.asm	/^    f010517d:	74 30                	je     fffffffff01051af <end+0xfffffffefe663e0f>$/;"	l
f010517f	obj/kern/kernel.asm	/^    f010517f:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax$/;"	l
f0105186	obj/kern/kernel.asm	/^    f0105186:	48 3b 85 00 ff ff ff 	cmp    -0x100(%rbp),%rax$/;"	l
f010518d	obj/kern/kernel.asm	/^    f010518d:	74 20                	je     fffffffff01051af <end+0xfffffffefe663e0f>$/;"	l
f010518f	obj/kern/kernel.asm	/^    f010518f:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax$/;"	l
f0105196	obj/kern/kernel.asm	/^    f0105196:	48 3b 85 f8 fe ff ff 	cmp    -0x108(%rbp),%rax$/;"	l
f010519d	obj/kern/kernel.asm	/^    f010519d:	74 10                	je     fffffffff01051af <end+0xfffffffefe663e0f>$/;"	l
f010519f	obj/kern/kernel.asm	/^    f010519f:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax$/;"	l
f01051a6	obj/kern/kernel.asm	/^    f01051a6:	48 3b 85 f0 fe ff ff 	cmp    -0x110(%rbp),%rax$/;"	l
f01051ad	obj/kern/kernel.asm	/^    f01051ad:	75 34                	jne    fffffffff01051e3 <end+0xfffffffefe663e43>$/;"	l
f01051af	obj/kern/kernel.asm	/^    f01051af:	48 b9 a8 1e 11 f0 00 	mov    $0xf0111ea8,%rcx$/;"	l
f01051b6	obj/kern/kernel.asm	/^    f01051b6:	00 00 00 $/;"	l
f01051b9	obj/kern/kernel.asm	/^    f01051b9:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f01051c0	obj/kern/kernel.asm	/^    f01051c0:	00 00 00 $/;"	l
f01051c3	obj/kern/kernel.asm	/^    f01051c3:	be 65 04 00 00       	mov    $0x465,%esi$/;"	l
f01051c8	obj/kern/kernel.asm	/^    f01051c8:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f01051cf	obj/kern/kernel.asm	/^    f01051cf:	00 00 00 $/;"	l
f01051d2	obj/kern/kernel.asm	/^    f01051d2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01051d7	obj/kern/kernel.asm	/^    f01051d7:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f01051de	obj/kern/kernel.asm	/^    f01051de:	00 00 00 $/;"	l
f01051e1	obj/kern/kernel.asm	/^    f01051e1:	ff d3                	callq  *%rbx$/;"	l
f01051e3	obj/kern/kernel.asm	/^    f01051e3:	48 83 bd 10 ff ff ff 	cmpq   $0x0,-0xf0(%rbp)$/;"	l
f01051ea	obj/kern/kernel.asm	/^    f01051ea:	00 $/;"	l
f01051eb	obj/kern/kernel.asm	/^    f01051eb:	74 40                	je     fffffffff010522d <end+0xfffffffefe663e8d>$/;"	l
f01051ed	obj/kern/kernel.asm	/^    f01051ed:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax$/;"	l
f01051f4	obj/kern/kernel.asm	/^    f01051f4:	48 3b 85 08 ff ff ff 	cmp    -0xf8(%rbp),%rax$/;"	l
f01051fb	obj/kern/kernel.asm	/^    f01051fb:	74 30                	je     fffffffff010522d <end+0xfffffffefe663e8d>$/;"	l
f01051fd	obj/kern/kernel.asm	/^    f01051fd:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax$/;"	l
f0105204	obj/kern/kernel.asm	/^    f0105204:	48 3b 85 00 ff ff ff 	cmp    -0x100(%rbp),%rax$/;"	l
f010520b	obj/kern/kernel.asm	/^    f010520b:	74 20                	je     fffffffff010522d <end+0xfffffffefe663e8d>$/;"	l
f010520d	obj/kern/kernel.asm	/^    f010520d:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax$/;"	l
f0105214	obj/kern/kernel.asm	/^    f0105214:	48 3b 85 f8 fe ff ff 	cmp    -0x108(%rbp),%rax$/;"	l
f010521b	obj/kern/kernel.asm	/^    f010521b:	74 10                	je     fffffffff010522d <end+0xfffffffefe663e8d>$/;"	l
f010521d	obj/kern/kernel.asm	/^    f010521d:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax$/;"	l
f0105224	obj/kern/kernel.asm	/^    f0105224:	48 3b 85 f0 fe ff ff 	cmp    -0x110(%rbp),%rax$/;"	l
f010522b	obj/kern/kernel.asm	/^    f010522b:	75 34                	jne    fffffffff0105261 <end+0xfffffffefe663ec1>$/;"	l
f010522d	obj/kern/kernel.asm	/^    f010522d:	48 b9 d8 1e 11 f0 00 	mov    $0xf0111ed8,%rcx$/;"	l
f0105234	obj/kern/kernel.asm	/^    f0105234:	00 00 00 $/;"	l
f0105237	obj/kern/kernel.asm	/^    f0105237:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f010523e	obj/kern/kernel.asm	/^    f010523e:	00 00 00 $/;"	l
f0105241	obj/kern/kernel.asm	/^    f0105241:	be 66 04 00 00       	mov    $0x466,%esi$/;"	l
f0105246	obj/kern/kernel.asm	/^    f0105246:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f010524d	obj/kern/kernel.asm	/^    f010524d:	00 00 00 $/;"	l
f0105250	obj/kern/kernel.asm	/^    f0105250:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105255	obj/kern/kernel.asm	/^    f0105255:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f010525c	obj/kern/kernel.asm	/^    f010525c:	00 00 00 $/;"	l
f010525f	obj/kern/kernel.asm	/^    f010525f:	ff d3                	callq  *%rbx$/;"	l
f0105261	obj/kern/kernel.asm	/^    f0105261:	48 83 bd 18 ff ff ff 	cmpq   $0x0,-0xe8(%rbp)$/;"	l
f0105268	obj/kern/kernel.asm	/^    f0105268:	00 $/;"	l
f0105269	obj/kern/kernel.asm	/^    f0105269:	74 50                	je     fffffffff01052bb <end+0xfffffffefe663f1b>$/;"	l
f010526b	obj/kern/kernel.asm	/^    f010526b:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax$/;"	l
f0105272	obj/kern/kernel.asm	/^    f0105272:	48 3b 85 10 ff ff ff 	cmp    -0xf0(%rbp),%rax$/;"	l
f0105279	obj/kern/kernel.asm	/^    f0105279:	74 40                	je     fffffffff01052bb <end+0xfffffffefe663f1b>$/;"	l
f010527b	obj/kern/kernel.asm	/^    f010527b:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax$/;"	l
f0105282	obj/kern/kernel.asm	/^    f0105282:	48 3b 85 08 ff ff ff 	cmp    -0xf8(%rbp),%rax$/;"	l
f0105289	obj/kern/kernel.asm	/^    f0105289:	74 30                	je     fffffffff01052bb <end+0xfffffffefe663f1b>$/;"	l
f010528b	obj/kern/kernel.asm	/^    f010528b:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax$/;"	l
f0105292	obj/kern/kernel.asm	/^    f0105292:	48 3b 85 00 ff ff ff 	cmp    -0x100(%rbp),%rax$/;"	l
f0105299	obj/kern/kernel.asm	/^    f0105299:	74 20                	je     fffffffff01052bb <end+0xfffffffefe663f1b>$/;"	l
f010529b	obj/kern/kernel.asm	/^    f010529b:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax$/;"	l
f01052a2	obj/kern/kernel.asm	/^    f01052a2:	48 3b 85 f8 fe ff ff 	cmp    -0x108(%rbp),%rax$/;"	l
f01052a9	obj/kern/kernel.asm	/^    f01052a9:	74 10                	je     fffffffff01052bb <end+0xfffffffefe663f1b>$/;"	l
f01052ab	obj/kern/kernel.asm	/^    f01052ab:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax$/;"	l
f01052b2	obj/kern/kernel.asm	/^    f01052b2:	48 3b 85 f0 fe ff ff 	cmp    -0x110(%rbp),%rax$/;"	l
f01052b9	obj/kern/kernel.asm	/^    f01052b9:	75 34                	jne    fffffffff01052ef <end+0xfffffffefe663f4f>$/;"	l
f01052bb	obj/kern/kernel.asm	/^    f01052bb:	48 b9 18 1f 11 f0 00 	mov    $0xf0111f18,%rcx$/;"	l
f01052c2	obj/kern/kernel.asm	/^    f01052c2:	00 00 00 $/;"	l
f01052c5	obj/kern/kernel.asm	/^    f01052c5:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f01052cc	obj/kern/kernel.asm	/^    f01052cc:	00 00 00 $/;"	l
f01052cf	obj/kern/kernel.asm	/^    f01052cf:	be 67 04 00 00       	mov    $0x467,%esi$/;"	l
f01052d4	obj/kern/kernel.asm	/^    f01052d4:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f01052db	obj/kern/kernel.asm	/^    f01052db:	00 00 00 $/;"	l
f01052de	obj/kern/kernel.asm	/^    f01052de:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01052e3	obj/kern/kernel.asm	/^    f01052e3:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f01052ea	obj/kern/kernel.asm	/^    f01052ea:	00 00 00 $/;"	l
f01052ed	obj/kern/kernel.asm	/^    f01052ed:	ff d3                	callq  *%rbx$/;"	l
f01052ef	obj/kern/kernel.asm	/^    f01052ef:	48 b8 38 62 a2 f1 00 	mov    $0xf1a26238,%rax$/;"	l
f01052f6	obj/kern/kernel.asm	/^    f01052f6:	00 00 00 $/;"	l
f01052f9	obj/kern/kernel.asm	/^    f01052f9:	48 8b 00             	mov    (%rax),%rax$/;"	l
f01052fc	obj/kern/kernel.asm	/^    f01052fc:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)$/;"	l
f0105303	obj/kern/kernel.asm	/^    f0105303:	48 b8 38 62 a2 f1 00 	mov    $0xf1a26238,%rax$/;"	l
f010530a	obj/kern/kernel.asm	/^    f010530a:	00 00 00 $/;"	l
f010530d	obj/kern/kernel.asm	/^    f010530d:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)$/;"	l
f0105314	obj/kern/kernel.asm	/^    f0105314:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0105319	obj/kern/kernel.asm	/^    f0105319:	48 b8 fd 27 10 f0 00 	mov    $0xf01027fd,%rax$/;"	l
f0105320	obj/kern/kernel.asm	/^    f0105320:	00 00 00 $/;"	l
f0105323	obj/kern/kernel.asm	/^    f0105323:	ff d0                	callq  *%rax$/;"	l
f0105325	obj/kern/kernel.asm	/^    f0105325:	48 85 c0             	test   %rax,%rax$/;"	l
f0105328	obj/kern/kernel.asm	/^    f0105328:	74 34                	je     fffffffff010535e <end+0xfffffffefe663fbe>$/;"	l
f010532a	obj/kern/kernel.asm	/^    f010532a:	48 b9 6f 1c 11 f0 00 	mov    $0xf0111c6f,%rcx$/;"	l
f0105331	obj/kern/kernel.asm	/^    f0105331:	00 00 00 $/;"	l
f0105334	obj/kern/kernel.asm	/^    f0105334:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f010533b	obj/kern/kernel.asm	/^    f010533b:	00 00 00 $/;"	l
f010533e	obj/kern/kernel.asm	/^    f010533e:	be 6e 04 00 00       	mov    $0x46e,%esi$/;"	l
f0105343	obj/kern/kernel.asm	/^    f0105343:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f010534a	obj/kern/kernel.asm	/^    f010534a:	00 00 00 $/;"	l
f010534d	obj/kern/kernel.asm	/^    f010534d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105352	obj/kern/kernel.asm	/^    f0105352:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0105359	obj/kern/kernel.asm	/^    f0105359:	00 00 00 $/;"	l
f010535c	obj/kern/kernel.asm	/^    f010535c:	ff d3                	callq  *%rbx$/;"	l
f010535e	obj/kern/kernel.asm	/^    f010535e:	48 b8 60 77 a2 f1 00 	mov    $0xf1a27760,%rax$/;"	l
f0105365	obj/kern/kernel.asm	/^    f0105365:	00 00 00 $/;"	l
f0105368	obj/kern/kernel.asm	/^    f0105368:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010536b	obj/kern/kernel.asm	/^    f010536b:	48 8d 95 e8 fe ff ff 	lea    -0x118(%rbp),%rdx$/;"	l
f0105372	obj/kern/kernel.asm	/^    f0105372:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0105377	obj/kern/kernel.asm	/^    f0105377:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010537a	obj/kern/kernel.asm	/^    f010537a:	48 b8 9e 30 10 f0 00 	mov    $0xf010309e,%rax$/;"	l
f0105381	obj/kern/kernel.asm	/^    f0105381:	00 00 00 $/;"	l
f0105384	obj/kern/kernel.asm	/^    f0105384:	ff d0                	callq  *%rax$/;"	l
f0105386	obj/kern/kernel.asm	/^    f0105386:	48 85 c0             	test   %rax,%rax$/;"	l
f0105389	obj/kern/kernel.asm	/^    f0105389:	74 34                	je     fffffffff01053bf <end+0xfffffffefe66401f>$/;"	l
f010538b	obj/kern/kernel.asm	/^    f010538b:	48 b9 68 1f 11 f0 00 	mov    $0xf0111f68,%rcx$/;"	l
f0105392	obj/kern/kernel.asm	/^    f0105392:	00 00 00 $/;"	l
f0105395	obj/kern/kernel.asm	/^    f0105395:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f010539c	obj/kern/kernel.asm	/^    f010539c:	00 00 00 $/;"	l
f010539f	obj/kern/kernel.asm	/^    f010539f:	be 71 04 00 00       	mov    $0x471,%esi$/;"	l
f01053a4	obj/kern/kernel.asm	/^    f01053a4:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f01053ab	obj/kern/kernel.asm	/^    f01053ab:	00 00 00 $/;"	l
f01053ae	obj/kern/kernel.asm	/^    f01053ae:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01053b3	obj/kern/kernel.asm	/^    f01053b3:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f01053ba	obj/kern/kernel.asm	/^    f01053ba:	00 00 00 $/;"	l
f01053bd	obj/kern/kernel.asm	/^    f01053bd:	ff d3                	callq  *%rbx$/;"	l
f01053bf	obj/kern/kernel.asm	/^    f01053bf:	48 b8 60 77 a2 f1 00 	mov    $0xf1a27760,%rax$/;"	l
f01053c6	obj/kern/kernel.asm	/^    f01053c6:	00 00 00 $/;"	l
f01053c9	obj/kern/kernel.asm	/^    f01053c9:	48 8b 00             	mov    (%rax),%rax$/;"	l
f01053cc	obj/kern/kernel.asm	/^    f01053cc:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx$/;"	l
f01053d3	obj/kern/kernel.asm	/^    f01053d3:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f01053d8	obj/kern/kernel.asm	/^    f01053d8:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01053dd	obj/kern/kernel.asm	/^    f01053dd:	48 89 de             	mov    %rbx,%rsi$/;"	l
f01053e0	obj/kern/kernel.asm	/^    f01053e0:	48 89 c7             	mov    %rax,%rdi$/;"	l
f01053e3	obj/kern/kernel.asm	/^    f01053e3:	48 b8 97 2f 10 f0 00 	mov    $0xf0102f97,%rax$/;"	l
f01053ea	obj/kern/kernel.asm	/^    f01053ea:	00 00 00 $/;"	l
f01053ed	obj/kern/kernel.asm	/^    f01053ed:	ff d0                	callq  *%rax$/;"	l
f01053ef	obj/kern/kernel.asm	/^    f01053ef:	85 c0                	test   %eax,%eax$/;"	l
f01053f1	obj/kern/kernel.asm	/^    f01053f1:	78 34                	js     fffffffff0105427 <end+0xfffffffefe664087>$/;"	l
f01053f3	obj/kern/kernel.asm	/^    f01053f3:	48 b9 a0 1f 11 f0 00 	mov    $0xf0111fa0,%rcx$/;"	l
f01053fa	obj/kern/kernel.asm	/^    f01053fa:	00 00 00 $/;"	l
f01053fd	obj/kern/kernel.asm	/^    f01053fd:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0105404	obj/kern/kernel.asm	/^    f0105404:	00 00 00 $/;"	l
f0105407	obj/kern/kernel.asm	/^    f0105407:	be 74 04 00 00       	mov    $0x474,%esi$/;"	l
f010540c	obj/kern/kernel.asm	/^    f010540c:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0105413	obj/kern/kernel.asm	/^    f0105413:	00 00 00 $/;"	l
f0105416	obj/kern/kernel.asm	/^    f0105416:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010541b	obj/kern/kernel.asm	/^    f010541b:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0105422	obj/kern/kernel.asm	/^    f0105422:	00 00 00 $/;"	l
f0105425	obj/kern/kernel.asm	/^    f0105425:	ff d3                	callq  *%rbx$/;"	l
f0105427	obj/kern/kernel.asm	/^    f0105427:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax$/;"	l
f010542e	obj/kern/kernel.asm	/^    f010542e:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0105431	obj/kern/kernel.asm	/^    f0105431:	48 b8 b6 28 10 f0 00 	mov    $0xf01028b6,%rax$/;"	l
f0105438	obj/kern/kernel.asm	/^    f0105438:	00 00 00 $/;"	l
f010543b	obj/kern/kernel.asm	/^    f010543b:	ff d0                	callq  *%rax$/;"	l
f010543d	obj/kern/kernel.asm	/^    f010543d:	48 b8 60 77 a2 f1 00 	mov    $0xf1a27760,%rax$/;"	l
f0105444	obj/kern/kernel.asm	/^    f0105444:	00 00 00 $/;"	l
f0105447	obj/kern/kernel.asm	/^    f0105447:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010544a	obj/kern/kernel.asm	/^    f010544a:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx$/;"	l
f0105451	obj/kern/kernel.asm	/^    f0105451:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0105456	obj/kern/kernel.asm	/^    f0105456:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010545b	obj/kern/kernel.asm	/^    f010545b:	48 89 de             	mov    %rbx,%rsi$/;"	l
f010545e	obj/kern/kernel.asm	/^    f010545e:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0105461	obj/kern/kernel.asm	/^    f0105461:	48 b8 97 2f 10 f0 00 	mov    $0xf0102f97,%rax$/;"	l
f0105468	obj/kern/kernel.asm	/^    f0105468:	00 00 00 $/;"	l
f010546b	obj/kern/kernel.asm	/^    f010546b:	ff d0                	callq  *%rax$/;"	l
f010546d	obj/kern/kernel.asm	/^    f010546d:	85 c0                	test   %eax,%eax$/;"	l
f010546f	obj/kern/kernel.asm	/^    f010546f:	78 34                	js     fffffffff01054a5 <end+0xfffffffefe664105>$/;"	l
f0105471	obj/kern/kernel.asm	/^    f0105471:	48 b9 a0 1f 11 f0 00 	mov    $0xf0111fa0,%rcx$/;"	l
f0105478	obj/kern/kernel.asm	/^    f0105478:	00 00 00 $/;"	l
f010547b	obj/kern/kernel.asm	/^    f010547b:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0105482	obj/kern/kernel.asm	/^    f0105482:	00 00 00 $/;"	l
f0105485	obj/kern/kernel.asm	/^    f0105485:	be 78 04 00 00       	mov    $0x478,%esi$/;"	l
f010548a	obj/kern/kernel.asm	/^    f010548a:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0105491	obj/kern/kernel.asm	/^    f0105491:	00 00 00 $/;"	l
f0105494	obj/kern/kernel.asm	/^    f0105494:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105499	obj/kern/kernel.asm	/^    f0105499:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f01054a0	obj/kern/kernel.asm	/^    f01054a0:	00 00 00 $/;"	l
f01054a3	obj/kern/kernel.asm	/^    f01054a3:	ff d3                	callq  *%rbx$/;"	l
f01054a5	obj/kern/kernel.asm	/^    f01054a5:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax$/;"	l
f01054ac	obj/kern/kernel.asm	/^    f01054ac:	48 89 c7             	mov    %rax,%rdi$/;"	l
f01054af	obj/kern/kernel.asm	/^    f01054af:	48 b8 b6 28 10 f0 00 	mov    $0xf01028b6,%rax$/;"	l
f01054b6	obj/kern/kernel.asm	/^    f01054b6:	00 00 00 $/;"	l
f01054b9	obj/kern/kernel.asm	/^    f01054b9:	ff d0                	callq  *%rax$/;"	l
f01054bb	obj/kern/kernel.asm	/^    f01054bb:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax$/;"	l
f01054c2	obj/kern/kernel.asm	/^    f01054c2:	48 89 c7             	mov    %rax,%rdi$/;"	l
f01054c5	obj/kern/kernel.asm	/^    f01054c5:	48 b8 b6 28 10 f0 00 	mov    $0xf01028b6,%rax$/;"	l
f01054cc	obj/kern/kernel.asm	/^    f01054cc:	00 00 00 $/;"	l
f01054cf	obj/kern/kernel.asm	/^    f01054cf:	ff d0                	callq  *%rax$/;"	l
f01054d1	obj/kern/kernel.asm	/^    f01054d1:	48 b8 60 77 a2 f1 00 	mov    $0xf1a27760,%rax$/;"	l
f01054d8	obj/kern/kernel.asm	/^    f01054d8:	00 00 00 $/;"	l
f01054db	obj/kern/kernel.asm	/^    f01054db:	48 8b 00             	mov    (%rax),%rax$/;"	l
f01054de	obj/kern/kernel.asm	/^    f01054de:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx$/;"	l
f01054e5	obj/kern/kernel.asm	/^    f01054e5:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f01054ea	obj/kern/kernel.asm	/^    f01054ea:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f01054ef	obj/kern/kernel.asm	/^    f01054ef:	48 89 de             	mov    %rbx,%rsi$/;"	l
f01054f2	obj/kern/kernel.asm	/^    f01054f2:	48 89 c7             	mov    %rax,%rdi$/;"	l
f01054f5	obj/kern/kernel.asm	/^    f01054f5:	48 b8 97 2f 10 f0 00 	mov    $0xf0102f97,%rax$/;"	l
f01054fc	obj/kern/kernel.asm	/^    f01054fc:	00 00 00 $/;"	l
f01054ff	obj/kern/kernel.asm	/^    f01054ff:	ff d0                	callq  *%rax$/;"	l
f0105501	obj/kern/kernel.asm	/^    f0105501:	85 c0                	test   %eax,%eax$/;"	l
f0105503	obj/kern/kernel.asm	/^    f0105503:	74 34                	je     fffffffff0105539 <end+0xfffffffefe664199>$/;"	l
f0105505	obj/kern/kernel.asm	/^    f0105505:	48 b9 d0 1f 11 f0 00 	mov    $0xf0111fd0,%rcx$/;"	l
f010550c	obj/kern/kernel.asm	/^    f010550c:	00 00 00 $/;"	l
f010550f	obj/kern/kernel.asm	/^    f010550f:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0105516	obj/kern/kernel.asm	/^    f0105516:	00 00 00 $/;"	l
f0105519	obj/kern/kernel.asm	/^    f0105519:	be 7f 04 00 00       	mov    $0x47f,%esi$/;"	l
f010551e	obj/kern/kernel.asm	/^    f010551e:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0105525	obj/kern/kernel.asm	/^    f0105525:	00 00 00 $/;"	l
f0105528	obj/kern/kernel.asm	/^    f0105528:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010552d	obj/kern/kernel.asm	/^    f010552d:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0105534	obj/kern/kernel.asm	/^    f0105534:	00 00 00 $/;"	l
f0105537	obj/kern/kernel.asm	/^    f0105537:	ff d3                	callq  *%rbx$/;"	l
f0105539	obj/kern/kernel.asm	/^    f0105539:	48 b8 60 77 a2 f1 00 	mov    $0xf1a27760,%rax$/;"	l
f0105540	obj/kern/kernel.asm	/^    f0105540:	00 00 00 $/;"	l
f0105543	obj/kern/kernel.asm	/^    f0105543:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0105546	obj/kern/kernel.asm	/^    f0105546:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0105549	obj/kern/kernel.asm	/^    f0105549:	48 89 c3             	mov    %rax,%rbx$/;"	l
f010554c	obj/kern/kernel.asm	/^    f010554c:	48 81 e3 00 f0 ff ff 	and    $0xfffffffffffff000,%rbx$/;"	l
f0105553	obj/kern/kernel.asm	/^    f0105553:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax$/;"	l
f010555a	obj/kern/kernel.asm	/^    f010555a:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010555d	obj/kern/kernel.asm	/^    f010555d:	48 b8 00 1a 10 f0 00 	mov    $0xf0101a00,%rax$/;"	l
f0105564	obj/kern/kernel.asm	/^    f0105564:	00 00 00 $/;"	l
f0105567	obj/kern/kernel.asm	/^    f0105567:	ff d0                	callq  *%rax$/;"	l
f0105569	obj/kern/kernel.asm	/^    f0105569:	48 39 c3             	cmp    %rax,%rbx$/;"	l
f010556c	obj/kern/kernel.asm	/^    f010556c:	0f 84 9e 00 00 00    	je     fffffffff0105610 <end+0xfffffffefe664270>$/;"	l
f0105572	obj/kern/kernel.asm	/^    f0105572:	48 b8 60 77 a2 f1 00 	mov    $0xf1a27760,%rax$/;"	l
f0105579	obj/kern/kernel.asm	/^    f0105579:	00 00 00 $/;"	l
f010557c	obj/kern/kernel.asm	/^    f010557c:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010557f	obj/kern/kernel.asm	/^    f010557f:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0105582	obj/kern/kernel.asm	/^    f0105582:	48 89 c3             	mov    %rax,%rbx$/;"	l
f0105585	obj/kern/kernel.asm	/^    f0105585:	48 81 e3 00 f0 ff ff 	and    $0xfffffffffffff000,%rbx$/;"	l
f010558c	obj/kern/kernel.asm	/^    f010558c:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax$/;"	l
f0105593	obj/kern/kernel.asm	/^    f0105593:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0105596	obj/kern/kernel.asm	/^    f0105596:	48 b8 00 1a 10 f0 00 	mov    $0xf0101a00,%rax$/;"	l
f010559d	obj/kern/kernel.asm	/^    f010559d:	00 00 00 $/;"	l
f01055a0	obj/kern/kernel.asm	/^    f01055a0:	ff d0                	callq  *%rax$/;"	l
f01055a2	obj/kern/kernel.asm	/^    f01055a2:	48 39 c3             	cmp    %rax,%rbx$/;"	l
f01055a5	obj/kern/kernel.asm	/^    f01055a5:	74 69                	je     fffffffff0105610 <end+0xfffffffefe664270>$/;"	l
f01055a7	obj/kern/kernel.asm	/^    f01055a7:	48 b8 60 77 a2 f1 00 	mov    $0xf1a27760,%rax$/;"	l
f01055ae	obj/kern/kernel.asm	/^    f01055ae:	00 00 00 $/;"	l
f01055b1	obj/kern/kernel.asm	/^    f01055b1:	48 8b 00             	mov    (%rax),%rax$/;"	l
f01055b4	obj/kern/kernel.asm	/^    f01055b4:	48 8b 00             	mov    (%rax),%rax$/;"	l
f01055b7	obj/kern/kernel.asm	/^    f01055b7:	48 89 c3             	mov    %rax,%rbx$/;"	l
f01055ba	obj/kern/kernel.asm	/^    f01055ba:	48 81 e3 00 f0 ff ff 	and    $0xfffffffffffff000,%rbx$/;"	l
f01055c1	obj/kern/kernel.asm	/^    f01055c1:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax$/;"	l
f01055c8	obj/kern/kernel.asm	/^    f01055c8:	48 89 c7             	mov    %rax,%rdi$/;"	l
f01055cb	obj/kern/kernel.asm	/^    f01055cb:	48 b8 00 1a 10 f0 00 	mov    $0xf0101a00,%rax$/;"	l
f01055d2	obj/kern/kernel.asm	/^    f01055d2:	00 00 00 $/;"	l
f01055d5	obj/kern/kernel.asm	/^    f01055d5:	ff d0                	callq  *%rax$/;"	l
f01055d7	obj/kern/kernel.asm	/^    f01055d7:	48 39 c3             	cmp    %rax,%rbx$/;"	l
f01055da	obj/kern/kernel.asm	/^    f01055da:	74 34                	je     fffffffff0105610 <end+0xfffffffefe664270>$/;"	l
f01055dc	obj/kern/kernel.asm	/^    f01055dc:	48 b9 00 20 11 f0 00 	mov    $0xf0112000,%rcx$/;"	l
f01055e3	obj/kern/kernel.asm	/^    f01055e3:	00 00 00 $/;"	l
f01055e6	obj/kern/kernel.asm	/^    f01055e6:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f01055ed	obj/kern/kernel.asm	/^    f01055ed:	00 00 00 $/;"	l
f01055f0	obj/kern/kernel.asm	/^    f01055f0:	be 80 04 00 00       	mov    $0x480,%esi$/;"	l
f01055f5	obj/kern/kernel.asm	/^    f01055f5:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f01055fc	obj/kern/kernel.asm	/^    f01055fc:	00 00 00 $/;"	l
f01055ff	obj/kern/kernel.asm	/^    f01055ff:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105604	obj/kern/kernel.asm	/^    f0105604:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f010560b	obj/kern/kernel.asm	/^    f010560b:	00 00 00 $/;"	l
f010560e	obj/kern/kernel.asm	/^    f010560e:	ff d3                	callq  *%rbx$/;"	l
f0105610	obj/kern/kernel.asm	/^    f0105610:	48 b8 60 77 a2 f1 00 	mov    $0xf1a27760,%rax$/;"	l
f0105617	obj/kern/kernel.asm	/^    f0105617:	00 00 00 $/;"	l
f010561a	obj/kern/kernel.asm	/^    f010561a:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010561d	obj/kern/kernel.asm	/^    f010561d:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0105622	obj/kern/kernel.asm	/^    f0105622:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0105625	obj/kern/kernel.asm	/^    f0105625:	48 b8 e5 4b 10 f0 00 	mov    $0xf0104be5,%rax$/;"	l
f010562c	obj/kern/kernel.asm	/^    f010562c:	00 00 00 $/;"	l
f010562f	obj/kern/kernel.asm	/^    f010562f:	ff d0                	callq  *%rax$/;"	l
f0105631	obj/kern/kernel.asm	/^    f0105631:	48 89 c3             	mov    %rax,%rbx$/;"	l
f0105634	obj/kern/kernel.asm	/^    f0105634:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax$/;"	l
f010563b	obj/kern/kernel.asm	/^    f010563b:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010563e	obj/kern/kernel.asm	/^    f010563e:	48 b8 00 1a 10 f0 00 	mov    $0xf0101a00,%rax$/;"	l
f0105645	obj/kern/kernel.asm	/^    f0105645:	00 00 00 $/;"	l
f0105648	obj/kern/kernel.asm	/^    f0105648:	ff d0                	callq  *%rax$/;"	l
f010564a	obj/kern/kernel.asm	/^    f010564a:	48 39 c3             	cmp    %rax,%rbx$/;"	l
f010564d	obj/kern/kernel.asm	/^    f010564d:	74 34                	je     fffffffff0105683 <end+0xfffffffefe6642e3>$/;"	l
f010564f	obj/kern/kernel.asm	/^    f010564f:	48 b9 88 20 11 f0 00 	mov    $0xf0112088,%rcx$/;"	l
f0105656	obj/kern/kernel.asm	/^    f0105656:	00 00 00 $/;"	l
f0105659	obj/kern/kernel.asm	/^    f0105659:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0105660	obj/kern/kernel.asm	/^    f0105660:	00 00 00 $/;"	l
f0105663	obj/kern/kernel.asm	/^    f0105663:	be 81 04 00 00       	mov    $0x481,%esi$/;"	l
f0105668	obj/kern/kernel.asm	/^    f0105668:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f010566f	obj/kern/kernel.asm	/^    f010566f:	00 00 00 $/;"	l
f0105672	obj/kern/kernel.asm	/^    f0105672:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105677	obj/kern/kernel.asm	/^    f0105677:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f010567e	obj/kern/kernel.asm	/^    f010567e:	00 00 00 $/;"	l
f0105681	obj/kern/kernel.asm	/^    f0105681:	ff d3                	callq  *%rbx$/;"	l
f0105683	obj/kern/kernel.asm	/^    f0105683:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax$/;"	l
f010568a	obj/kern/kernel.asm	/^    f010568a:	0f b7 40 08          	movzwl 0x8(%rax),%eax$/;"	l
f010568e	obj/kern/kernel.asm	/^    f010568e:	66 83 f8 01          	cmp    $0x1,%ax$/;"	l
f0105692	obj/kern/kernel.asm	/^    f0105692:	74 34                	je     fffffffff01056c8 <end+0xfffffffefe664328>$/;"	l
f0105694	obj/kern/kernel.asm	/^    f0105694:	48 b9 b5 20 11 f0 00 	mov    $0xf01120b5,%rcx$/;"	l
f010569b	obj/kern/kernel.asm	/^    f010569b:	00 00 00 $/;"	l
f010569e	obj/kern/kernel.asm	/^    f010569e:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f01056a5	obj/kern/kernel.asm	/^    f01056a5:	00 00 00 $/;"	l
f01056a8	obj/kern/kernel.asm	/^    f01056a8:	be 82 04 00 00       	mov    $0x482,%esi$/;"	l
f01056ad	obj/kern/kernel.asm	/^    f01056ad:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f01056b4	obj/kern/kernel.asm	/^    f01056b4:	00 00 00 $/;"	l
f01056b7	obj/kern/kernel.asm	/^    f01056b7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01056bc	obj/kern/kernel.asm	/^    f01056bc:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f01056c3	obj/kern/kernel.asm	/^    f01056c3:	00 00 00 $/;"	l
f01056c6	obj/kern/kernel.asm	/^    f01056c6:	ff d3                	callq  *%rbx$/;"	l
f01056c8	obj/kern/kernel.asm	/^    f01056c8:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax$/;"	l
f01056cf	obj/kern/kernel.asm	/^    f01056cf:	0f b7 40 08          	movzwl 0x8(%rax),%eax$/;"	l
f01056d3	obj/kern/kernel.asm	/^    f01056d3:	66 83 f8 01          	cmp    $0x1,%ax$/;"	l
f01056d7	obj/kern/kernel.asm	/^    f01056d7:	74 34                	je     fffffffff010570d <end+0xfffffffefe66436d>$/;"	l
f01056d9	obj/kern/kernel.asm	/^    f01056d9:	48 b9 c6 20 11 f0 00 	mov    $0xf01120c6,%rcx$/;"	l
f01056e0	obj/kern/kernel.asm	/^    f01056e0:	00 00 00 $/;"	l
f01056e3	obj/kern/kernel.asm	/^    f01056e3:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f01056ea	obj/kern/kernel.asm	/^    f01056ea:	00 00 00 $/;"	l
f01056ed	obj/kern/kernel.asm	/^    f01056ed:	be 83 04 00 00       	mov    $0x483,%esi$/;"	l
f01056f2	obj/kern/kernel.asm	/^    f01056f2:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f01056f9	obj/kern/kernel.asm	/^    f01056f9:	00 00 00 $/;"	l
f01056fc	obj/kern/kernel.asm	/^    f01056fc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105701	obj/kern/kernel.asm	/^    f0105701:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0105708	obj/kern/kernel.asm	/^    f0105708:	00 00 00 $/;"	l
f010570b	obj/kern/kernel.asm	/^    f010570b:	ff d3                	callq  *%rbx$/;"	l
f010570d	obj/kern/kernel.asm	/^    f010570d:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax$/;"	l
f0105714	obj/kern/kernel.asm	/^    f0105714:	0f b7 40 08          	movzwl 0x8(%rax),%eax$/;"	l
f0105718	obj/kern/kernel.asm	/^    f0105718:	66 83 f8 01          	cmp    $0x1,%ax$/;"	l
f010571c	obj/kern/kernel.asm	/^    f010571c:	74 34                	je     fffffffff0105752 <end+0xfffffffefe6643b2>$/;"	l
f010571e	obj/kern/kernel.asm	/^    f010571e:	48 b9 d7 20 11 f0 00 	mov    $0xf01120d7,%rcx$/;"	l
f0105725	obj/kern/kernel.asm	/^    f0105725:	00 00 00 $/;"	l
f0105728	obj/kern/kernel.asm	/^    f0105728:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f010572f	obj/kern/kernel.asm	/^    f010572f:	00 00 00 $/;"	l
f0105732	obj/kern/kernel.asm	/^    f0105732:	be 84 04 00 00       	mov    $0x484,%esi$/;"	l
f0105737	obj/kern/kernel.asm	/^    f0105737:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f010573e	obj/kern/kernel.asm	/^    f010573e:	00 00 00 $/;"	l
f0105741	obj/kern/kernel.asm	/^    f0105741:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105746	obj/kern/kernel.asm	/^    f0105746:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f010574d	obj/kern/kernel.asm	/^    f010574d:	00 00 00 $/;"	l
f0105750	obj/kern/kernel.asm	/^    f0105750:	ff d3                	callq  *%rbx$/;"	l
f0105752	obj/kern/kernel.asm	/^    f0105752:	48 b8 60 77 a2 f1 00 	mov    $0xf1a27760,%rax$/;"	l
f0105759	obj/kern/kernel.asm	/^    f0105759:	00 00 00 $/;"	l
f010575c	obj/kern/kernel.asm	/^    f010575c:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010575f	obj/kern/kernel.asm	/^    f010575f:	48 8b 9d 08 ff ff ff 	mov    -0xf8(%rbp),%rbx$/;"	l
f0105766	obj/kern/kernel.asm	/^    f0105766:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f010576b	obj/kern/kernel.asm	/^    f010576b:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0105770	obj/kern/kernel.asm	/^    f0105770:	48 89 de             	mov    %rbx,%rsi$/;"	l
f0105773	obj/kern/kernel.asm	/^    f0105773:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0105776	obj/kern/kernel.asm	/^    f0105776:	48 b8 97 2f 10 f0 00 	mov    $0xf0102f97,%rax$/;"	l
f010577d	obj/kern/kernel.asm	/^    f010577d:	00 00 00 $/;"	l
f0105780	obj/kern/kernel.asm	/^    f0105780:	ff d0                	callq  *%rax$/;"	l
f0105782	obj/kern/kernel.asm	/^    f0105782:	85 c0                	test   %eax,%eax$/;"	l
f0105784	obj/kern/kernel.asm	/^    f0105784:	74 34                	je     fffffffff01057ba <end+0xfffffffefe66441a>$/;"	l
f0105786	obj/kern/kernel.asm	/^    f0105786:	48 b9 e8 20 11 f0 00 	mov    $0xf01120e8,%rcx$/;"	l
f010578d	obj/kern/kernel.asm	/^    f010578d:	00 00 00 $/;"	l
f0105790	obj/kern/kernel.asm	/^    f0105790:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0105797	obj/kern/kernel.asm	/^    f0105797:	00 00 00 $/;"	l
f010579a	obj/kern/kernel.asm	/^    f010579a:	be 86 04 00 00       	mov    $0x486,%esi$/;"	l
f010579f	obj/kern/kernel.asm	/^    f010579f:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f01057a6	obj/kern/kernel.asm	/^    f01057a6:	00 00 00 $/;"	l
f01057a9	obj/kern/kernel.asm	/^    f01057a9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01057ae	obj/kern/kernel.asm	/^    f01057ae:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f01057b5	obj/kern/kernel.asm	/^    f01057b5:	00 00 00 $/;"	l
f01057b8	obj/kern/kernel.asm	/^    f01057b8:	ff d3                	callq  *%rbx$/;"	l
f01057ba	obj/kern/kernel.asm	/^    f01057ba:	48 b8 60 77 a2 f1 00 	mov    $0xf1a27760,%rax$/;"	l
f01057c1	obj/kern/kernel.asm	/^    f01057c1:	00 00 00 $/;"	l
f01057c4	obj/kern/kernel.asm	/^    f01057c4:	48 8b 00             	mov    (%rax),%rax$/;"	l
f01057c7	obj/kern/kernel.asm	/^    f01057c7:	be 00 10 00 00       	mov    $0x1000,%esi$/;"	l
f01057cc	obj/kern/kernel.asm	/^    f01057cc:	48 89 c7             	mov    %rax,%rdi$/;"	l
f01057cf	obj/kern/kernel.asm	/^    f01057cf:	48 b8 e5 4b 10 f0 00 	mov    $0xf0104be5,%rax$/;"	l
f01057d6	obj/kern/kernel.asm	/^    f01057d6:	00 00 00 $/;"	l
f01057d9	obj/kern/kernel.asm	/^    f01057d9:	ff d0                	callq  *%rax$/;"	l
f01057db	obj/kern/kernel.asm	/^    f01057db:	48 89 c3             	mov    %rax,%rbx$/;"	l
f01057de	obj/kern/kernel.asm	/^    f01057de:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax$/;"	l
f01057e5	obj/kern/kernel.asm	/^    f01057e5:	48 89 c7             	mov    %rax,%rdi$/;"	l
f01057e8	obj/kern/kernel.asm	/^    f01057e8:	48 b8 00 1a 10 f0 00 	mov    $0xf0101a00,%rax$/;"	l
f01057ef	obj/kern/kernel.asm	/^    f01057ef:	00 00 00 $/;"	l
f01057f2	obj/kern/kernel.asm	/^    f01057f2:	ff d0                	callq  *%rax$/;"	l
f01057f4	obj/kern/kernel.asm	/^    f01057f4:	48 39 c3             	cmp    %rax,%rbx$/;"	l
f01057f7	obj/kern/kernel.asm	/^    f01057f7:	74 34                	je     fffffffff010582d <end+0xfffffffefe66448d>$/;"	l
f01057f9	obj/kern/kernel.asm	/^    f01057f9:	48 b9 20 21 11 f0 00 	mov    $0xf0112120,%rcx$/;"	l
f0105800	obj/kern/kernel.asm	/^    f0105800:	00 00 00 $/;"	l
f0105803	obj/kern/kernel.asm	/^    f0105803:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f010580a	obj/kern/kernel.asm	/^    f010580a:	00 00 00 $/;"	l
f010580d	obj/kern/kernel.asm	/^    f010580d:	be 87 04 00 00       	mov    $0x487,%esi$/;"	l
f0105812	obj/kern/kernel.asm	/^    f0105812:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0105819	obj/kern/kernel.asm	/^    f0105819:	00 00 00 $/;"	l
f010581c	obj/kern/kernel.asm	/^    f010581c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105821	obj/kern/kernel.asm	/^    f0105821:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0105828	obj/kern/kernel.asm	/^    f0105828:	00 00 00 $/;"	l
f010582b	obj/kern/kernel.asm	/^    f010582b:	ff d3                	callq  *%rbx$/;"	l
f010582d	obj/kern/kernel.asm	/^    f010582d:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax$/;"	l
f0105834	obj/kern/kernel.asm	/^    f0105834:	0f b7 40 08          	movzwl 0x8(%rax),%eax$/;"	l
f0105838	obj/kern/kernel.asm	/^    f0105838:	66 83 f8 02          	cmp    $0x2,%ax$/;"	l
f010583c	obj/kern/kernel.asm	/^    f010583c:	74 34                	je     fffffffff0105872 <end+0xfffffffefe6644d2>$/;"	l
f010583e	obj/kern/kernel.asm	/^    f010583e:	48 b9 50 21 11 f0 00 	mov    $0xf0112150,%rcx$/;"	l
f0105845	obj/kern/kernel.asm	/^    f0105845:	00 00 00 $/;"	l
f0105848	obj/kern/kernel.asm	/^    f0105848:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f010584f	obj/kern/kernel.asm	/^    f010584f:	00 00 00 $/;"	l
f0105852	obj/kern/kernel.asm	/^    f0105852:	be 88 04 00 00       	mov    $0x488,%esi$/;"	l
f0105857	obj/kern/kernel.asm	/^    f0105857:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f010585e	obj/kern/kernel.asm	/^    f010585e:	00 00 00 $/;"	l
f0105861	obj/kern/kernel.asm	/^    f0105861:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105866	obj/kern/kernel.asm	/^    f0105866:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f010586d	obj/kern/kernel.asm	/^    f010586d:	00 00 00 $/;"	l
f0105870	obj/kern/kernel.asm	/^    f0105870:	ff d3                	callq  *%rbx$/;"	l
f0105872	obj/kern/kernel.asm	/^    f0105872:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0105877	obj/kern/kernel.asm	/^    f0105877:	48 b8 fd 27 10 f0 00 	mov    $0xf01027fd,%rax$/;"	l
f010587e	obj/kern/kernel.asm	/^    f010587e:	00 00 00 $/;"	l
f0105881	obj/kern/kernel.asm	/^    f0105881:	ff d0                	callq  *%rax$/;"	l
f0105883	obj/kern/kernel.asm	/^    f0105883:	48 85 c0             	test   %rax,%rax$/;"	l
f0105886	obj/kern/kernel.asm	/^    f0105886:	74 34                	je     fffffffff01058bc <end+0xfffffffefe66451c>$/;"	l
f0105888	obj/kern/kernel.asm	/^    f0105888:	48 b9 6f 1c 11 f0 00 	mov    $0xf0111c6f,%rcx$/;"	l
f010588f	obj/kern/kernel.asm	/^    f010588f:	00 00 00 $/;"	l
f0105892	obj/kern/kernel.asm	/^    f0105892:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0105899	obj/kern/kernel.asm	/^    f0105899:	00 00 00 $/;"	l
f010589c	obj/kern/kernel.asm	/^    f010589c:	be 8b 04 00 00       	mov    $0x48b,%esi$/;"	l
f01058a1	obj/kern/kernel.asm	/^    f01058a1:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f01058a8	obj/kern/kernel.asm	/^    f01058a8:	00 00 00 $/;"	l
f01058ab	obj/kern/kernel.asm	/^    f01058ab:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01058b0	obj/kern/kernel.asm	/^    f01058b0:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f01058b7	obj/kern/kernel.asm	/^    f01058b7:	00 00 00 $/;"	l
f01058ba	obj/kern/kernel.asm	/^    f01058ba:	ff d3                	callq  *%rbx$/;"	l
f01058bc	obj/kern/kernel.asm	/^    f01058bc:	48 b8 60 77 a2 f1 00 	mov    $0xf1a27760,%rax$/;"	l
f01058c3	obj/kern/kernel.asm	/^    f01058c3:	00 00 00 $/;"	l
f01058c6	obj/kern/kernel.asm	/^    f01058c6:	48 8b 00             	mov    (%rax),%rax$/;"	l
f01058c9	obj/kern/kernel.asm	/^    f01058c9:	48 8b 9d 08 ff ff ff 	mov    -0xf8(%rbp),%rbx$/;"	l
f01058d0	obj/kern/kernel.asm	/^    f01058d0:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f01058d5	obj/kern/kernel.asm	/^    f01058d5:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f01058da	obj/kern/kernel.asm	/^    f01058da:	48 89 de             	mov    %rbx,%rsi$/;"	l
f01058dd	obj/kern/kernel.asm	/^    f01058dd:	48 89 c7             	mov    %rax,%rdi$/;"	l
f01058e0	obj/kern/kernel.asm	/^    f01058e0:	48 b8 97 2f 10 f0 00 	mov    $0xf0102f97,%rax$/;"	l
f01058e7	obj/kern/kernel.asm	/^    f01058e7:	00 00 00 $/;"	l
f01058ea	obj/kern/kernel.asm	/^    f01058ea:	ff d0                	callq  *%rax$/;"	l
f01058ec	obj/kern/kernel.asm	/^    f01058ec:	85 c0                	test   %eax,%eax$/;"	l
f01058ee	obj/kern/kernel.asm	/^    f01058ee:	74 34                	je     fffffffff0105924 <end+0xfffffffefe664584>$/;"	l
f01058f0	obj/kern/kernel.asm	/^    f01058f0:	48 b9 e8 20 11 f0 00 	mov    $0xf01120e8,%rcx$/;"	l
f01058f7	obj/kern/kernel.asm	/^    f01058f7:	00 00 00 $/;"	l
f01058fa	obj/kern/kernel.asm	/^    f01058fa:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0105901	obj/kern/kernel.asm	/^    f0105901:	00 00 00 $/;"	l
f0105904	obj/kern/kernel.asm	/^    f0105904:	be 8e 04 00 00       	mov    $0x48e,%esi$/;"	l
f0105909	obj/kern/kernel.asm	/^    f0105909:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0105910	obj/kern/kernel.asm	/^    f0105910:	00 00 00 $/;"	l
f0105913	obj/kern/kernel.asm	/^    f0105913:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105918	obj/kern/kernel.asm	/^    f0105918:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f010591f	obj/kern/kernel.asm	/^    f010591f:	00 00 00 $/;"	l
f0105922	obj/kern/kernel.asm	/^    f0105922:	ff d3                	callq  *%rbx$/;"	l
f0105924	obj/kern/kernel.asm	/^    f0105924:	48 b8 60 77 a2 f1 00 	mov    $0xf1a27760,%rax$/;"	l
f010592b	obj/kern/kernel.asm	/^    f010592b:	00 00 00 $/;"	l
f010592e	obj/kern/kernel.asm	/^    f010592e:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0105931	obj/kern/kernel.asm	/^    f0105931:	be 00 10 00 00       	mov    $0x1000,%esi$/;"	l
f0105936	obj/kern/kernel.asm	/^    f0105936:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0105939	obj/kern/kernel.asm	/^    f0105939:	48 b8 e5 4b 10 f0 00 	mov    $0xf0104be5,%rax$/;"	l
f0105940	obj/kern/kernel.asm	/^    f0105940:	00 00 00 $/;"	l
f0105943	obj/kern/kernel.asm	/^    f0105943:	ff d0                	callq  *%rax$/;"	l
f0105945	obj/kern/kernel.asm	/^    f0105945:	48 89 c3             	mov    %rax,%rbx$/;"	l
f0105948	obj/kern/kernel.asm	/^    f0105948:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax$/;"	l
f010594f	obj/kern/kernel.asm	/^    f010594f:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0105952	obj/kern/kernel.asm	/^    f0105952:	48 b8 00 1a 10 f0 00 	mov    $0xf0101a00,%rax$/;"	l
f0105959	obj/kern/kernel.asm	/^    f0105959:	00 00 00 $/;"	l
f010595c	obj/kern/kernel.asm	/^    f010595c:	ff d0                	callq  *%rax$/;"	l
f010595e	obj/kern/kernel.asm	/^    f010595e:	48 39 c3             	cmp    %rax,%rbx$/;"	l
f0105961	obj/kern/kernel.asm	/^    f0105961:	74 34                	je     fffffffff0105997 <end+0xfffffffefe6645f7>$/;"	l
f0105963	obj/kern/kernel.asm	/^    f0105963:	48 b9 20 21 11 f0 00 	mov    $0xf0112120,%rcx$/;"	l
f010596a	obj/kern/kernel.asm	/^    f010596a:	00 00 00 $/;"	l
f010596d	obj/kern/kernel.asm	/^    f010596d:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0105974	obj/kern/kernel.asm	/^    f0105974:	00 00 00 $/;"	l
f0105977	obj/kern/kernel.asm	/^    f0105977:	be 8f 04 00 00       	mov    $0x48f,%esi$/;"	l
f010597c	obj/kern/kernel.asm	/^    f010597c:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0105983	obj/kern/kernel.asm	/^    f0105983:	00 00 00 $/;"	l
f0105986	obj/kern/kernel.asm	/^    f0105986:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010598b	obj/kern/kernel.asm	/^    f010598b:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0105992	obj/kern/kernel.asm	/^    f0105992:	00 00 00 $/;"	l
f0105995	obj/kern/kernel.asm	/^    f0105995:	ff d3                	callq  *%rbx$/;"	l
f0105997	obj/kern/kernel.asm	/^    f0105997:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax$/;"	l
f010599e	obj/kern/kernel.asm	/^    f010599e:	0f b7 40 08          	movzwl 0x8(%rax),%eax$/;"	l
f01059a2	obj/kern/kernel.asm	/^    f01059a2:	66 83 f8 02          	cmp    $0x2,%ax$/;"	l
f01059a6	obj/kern/kernel.asm	/^    f01059a6:	74 34                	je     fffffffff01059dc <end+0xfffffffefe66463c>$/;"	l
f01059a8	obj/kern/kernel.asm	/^    f01059a8:	48 b9 50 21 11 f0 00 	mov    $0xf0112150,%rcx$/;"	l
f01059af	obj/kern/kernel.asm	/^    f01059af:	00 00 00 $/;"	l
f01059b2	obj/kern/kernel.asm	/^    f01059b2:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f01059b9	obj/kern/kernel.asm	/^    f01059b9:	00 00 00 $/;"	l
f01059bc	obj/kern/kernel.asm	/^    f01059bc:	be 90 04 00 00       	mov    $0x490,%esi$/;"	l
f01059c1	obj/kern/kernel.asm	/^    f01059c1:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f01059c8	obj/kern/kernel.asm	/^    f01059c8:	00 00 00 $/;"	l
f01059cb	obj/kern/kernel.asm	/^    f01059cb:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01059d0	obj/kern/kernel.asm	/^    f01059d0:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f01059d7	obj/kern/kernel.asm	/^    f01059d7:	00 00 00 $/;"	l
f01059da	obj/kern/kernel.asm	/^    f01059da:	ff d3                	callq  *%rbx$/;"	l
f01059dc	obj/kern/kernel.asm	/^    f01059dc:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f01059e1	obj/kern/kernel.asm	/^    f01059e1:	48 b8 fd 27 10 f0 00 	mov    $0xf01027fd,%rax$/;"	l
f01059e8	obj/kern/kernel.asm	/^    f01059e8:	00 00 00 $/;"	l
f01059eb	obj/kern/kernel.asm	/^    f01059eb:	ff d0                	callq  *%rax$/;"	l
f01059ed	obj/kern/kernel.asm	/^    f01059ed:	48 85 c0             	test   %rax,%rax$/;"	l
f01059f0	obj/kern/kernel.asm	/^    f01059f0:	74 34                	je     fffffffff0105a26 <end+0xfffffffefe664686>$/;"	l
f01059f2	obj/kern/kernel.asm	/^    f01059f2:	48 b9 6f 1c 11 f0 00 	mov    $0xf0111c6f,%rcx$/;"	l
f01059f9	obj/kern/kernel.asm	/^    f01059f9:	00 00 00 $/;"	l
f01059fc	obj/kern/kernel.asm	/^    f01059fc:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0105a03	obj/kern/kernel.asm	/^    f0105a03:	00 00 00 $/;"	l
f0105a06	obj/kern/kernel.asm	/^    f0105a06:	be 94 04 00 00       	mov    $0x494,%esi$/;"	l
f0105a0b	obj/kern/kernel.asm	/^    f0105a0b:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0105a12	obj/kern/kernel.asm	/^    f0105a12:	00 00 00 $/;"	l
f0105a15	obj/kern/kernel.asm	/^    f0105a15:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105a1a	obj/kern/kernel.asm	/^    f0105a1a:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0105a21	obj/kern/kernel.asm	/^    f0105a21:	00 00 00 $/;"	l
f0105a24	obj/kern/kernel.asm	/^    f0105a24:	ff d3                	callq  *%rbx$/;"	l
f0105a26	obj/kern/kernel.asm	/^    f0105a26:	48 b8 60 77 a2 f1 00 	mov    $0xf1a27760,%rax$/;"	l
f0105a2d	obj/kern/kernel.asm	/^    f0105a2d:	00 00 00 $/;"	l
f0105a30	obj/kern/kernel.asm	/^    f0105a30:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0105a33	obj/kern/kernel.asm	/^    f0105a33:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0105a36	obj/kern/kernel.asm	/^    f0105a36:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
f0105a3c	obj/kern/kernel.asm	/^    f0105a3c:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)$/;"	l
f0105a43	obj/kern/kernel.asm	/^    f0105a43:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax$/;"	l
f0105a4a	obj/kern/kernel.asm	/^    f0105a4a:	48 c1 e8 0c          	shr    $0xc,%rax$/;"	l
f0105a4e	obj/kern/kernel.asm	/^    f0105a4e:	89 85 6c ff ff ff    	mov    %eax,-0x94(%rbp)$/;"	l
f0105a54	obj/kern/kernel.asm	/^    f0105a54:	8b 95 6c ff ff ff    	mov    -0x94(%rbp),%edx$/;"	l
f0105a5a	obj/kern/kernel.asm	/^    f0105a5a:	48 b8 68 77 a2 f1 00 	mov    $0xf1a27768,%rax$/;"	l
f0105a61	obj/kern/kernel.asm	/^    f0105a61:	00 00 00 $/;"	l
f0105a64	obj/kern/kernel.asm	/^    f0105a64:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0105a67	obj/kern/kernel.asm	/^    f0105a67:	48 39 c2             	cmp    %rax,%rdx$/;"	l
f0105a6a	obj/kern/kernel.asm	/^    f0105a6a:	72 34                	jb     fffffffff0105aa0 <end+0xfffffffefe664700>$/;"	l
f0105a6c	obj/kern/kernel.asm	/^    f0105a6c:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax$/;"	l
f0105a73	obj/kern/kernel.asm	/^    f0105a73:	48 89 c1             	mov    %rax,%rcx$/;"	l
f0105a76	obj/kern/kernel.asm	/^    f0105a76:	48 ba 78 18 11 f0 00 	mov    $0xf0111878,%rdx$/;"	l
f0105a7d	obj/kern/kernel.asm	/^    f0105a7d:	00 00 00 $/;"	l
f0105a80	obj/kern/kernel.asm	/^    f0105a80:	be 96 04 00 00       	mov    $0x496,%esi$/;"	l
f0105a85	obj/kern/kernel.asm	/^    f0105a85:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0105a8c	obj/kern/kernel.asm	/^    f0105a8c:	00 00 00 $/;"	l
f0105a8f	obj/kern/kernel.asm	/^    f0105a8f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105a94	obj/kern/kernel.asm	/^    f0105a94:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0105a9b	obj/kern/kernel.asm	/^    f0105a9b:	00 00 00 $/;"	l
f0105a9e	obj/kern/kernel.asm	/^    f0105a9e:	ff d3                	callq  *%rbx$/;"	l
f0105aa0	obj/kern/kernel.asm	/^    f0105aa0:	b8 00 00 00 f0       	mov    $0xf0000000,%eax$/;"	l
f0105aa5	obj/kern/kernel.asm	/^    f0105aa5:	48 03 85 60 ff ff ff 	add    -0xa0(%rbp),%rax$/;"	l
f0105aac	obj/kern/kernel.asm	/^    f0105aac:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)$/;"	l
f0105ab3	obj/kern/kernel.asm	/^    f0105ab3:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax$/;"	l
f0105aba	obj/kern/kernel.asm	/^    f0105aba:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0105abd	obj/kern/kernel.asm	/^    f0105abd:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
f0105ac3	obj/kern/kernel.asm	/^    f0105ac3:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)$/;"	l
f0105aca	obj/kern/kernel.asm	/^    f0105aca:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax$/;"	l
f0105ad1	obj/kern/kernel.asm	/^    f0105ad1:	48 c1 e8 0c          	shr    $0xc,%rax$/;"	l
f0105ad5	obj/kern/kernel.asm	/^    f0105ad5:	89 85 7c ff ff ff    	mov    %eax,-0x84(%rbp)$/;"	l
f0105adb	obj/kern/kernel.asm	/^    f0105adb:	8b 95 7c ff ff ff    	mov    -0x84(%rbp),%edx$/;"	l
f0105ae1	obj/kern/kernel.asm	/^    f0105ae1:	48 b8 68 77 a2 f1 00 	mov    $0xf1a27768,%rax$/;"	l
f0105ae8	obj/kern/kernel.asm	/^    f0105ae8:	00 00 00 $/;"	l
f0105aeb	obj/kern/kernel.asm	/^    f0105aeb:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0105aee	obj/kern/kernel.asm	/^    f0105aee:	48 39 c2             	cmp    %rax,%rdx$/;"	l
f0105af1	obj/kern/kernel.asm	/^    f0105af1:	72 34                	jb     fffffffff0105b27 <end+0xfffffffefe664787>$/;"	l
f0105af3	obj/kern/kernel.asm	/^    f0105af3:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax$/;"	l
f0105afa	obj/kern/kernel.asm	/^    f0105afa:	48 89 c1             	mov    %rax,%rcx$/;"	l
f0105afd	obj/kern/kernel.asm	/^    f0105afd:	48 ba 78 18 11 f0 00 	mov    $0xf0111878,%rdx$/;"	l
f0105b04	obj/kern/kernel.asm	/^    f0105b04:	00 00 00 $/;"	l
f0105b07	obj/kern/kernel.asm	/^    f0105b07:	be 97 04 00 00       	mov    $0x497,%esi$/;"	l
f0105b0c	obj/kern/kernel.asm	/^    f0105b0c:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0105b13	obj/kern/kernel.asm	/^    f0105b13:	00 00 00 $/;"	l
f0105b16	obj/kern/kernel.asm	/^    f0105b16:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105b1b	obj/kern/kernel.asm	/^    f0105b1b:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0105b22	obj/kern/kernel.asm	/^    f0105b22:	00 00 00 $/;"	l
f0105b25	obj/kern/kernel.asm	/^    f0105b25:	ff d3                	callq  *%rbx$/;"	l
f0105b27	obj/kern/kernel.asm	/^    f0105b27:	b8 00 00 00 f0       	mov    $0xf0000000,%eax$/;"	l
f0105b2c	obj/kern/kernel.asm	/^    f0105b2c:	48 03 85 70 ff ff ff 	add    -0x90(%rbp),%rax$/;"	l
f0105b33	obj/kern/kernel.asm	/^    f0105b33:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)$/;"	l
f0105b3a	obj/kern/kernel.asm	/^    f0105b3a:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax$/;"	l
f0105b41	obj/kern/kernel.asm	/^    f0105b41:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0105b44	obj/kern/kernel.asm	/^    f0105b44:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
f0105b4a	obj/kern/kernel.asm	/^    f0105b4a:	48 89 45 80          	mov    %rax,-0x80(%rbp)$/;"	l
f0105b4e	obj/kern/kernel.asm	/^    f0105b4e:	48 8b 45 80          	mov    -0x80(%rbp),%rax$/;"	l
f0105b52	obj/kern/kernel.asm	/^    f0105b52:	48 c1 e8 0c          	shr    $0xc,%rax$/;"	l
f0105b56	obj/kern/kernel.asm	/^    f0105b56:	89 45 8c             	mov    %eax,-0x74(%rbp)$/;"	l
f0105b59	obj/kern/kernel.asm	/^    f0105b59:	8b 55 8c             	mov    -0x74(%rbp),%edx$/;"	l
f0105b5c	obj/kern/kernel.asm	/^    f0105b5c:	48 b8 68 77 a2 f1 00 	mov    $0xf1a27768,%rax$/;"	l
f0105b63	obj/kern/kernel.asm	/^    f0105b63:	00 00 00 $/;"	l
f0105b66	obj/kern/kernel.asm	/^    f0105b66:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0105b69	obj/kern/kernel.asm	/^    f0105b69:	48 39 c2             	cmp    %rax,%rdx$/;"	l
f0105b6c	obj/kern/kernel.asm	/^    f0105b6c:	72 31                	jb     fffffffff0105b9f <end+0xfffffffefe6647ff>$/;"	l
f0105b6e	obj/kern/kernel.asm	/^    f0105b6e:	48 8b 45 80          	mov    -0x80(%rbp),%rax$/;"	l
f0105b72	obj/kern/kernel.asm	/^    f0105b72:	48 89 c1             	mov    %rax,%rcx$/;"	l
f0105b75	obj/kern/kernel.asm	/^    f0105b75:	48 ba 78 18 11 f0 00 	mov    $0xf0111878,%rdx$/;"	l
f0105b7c	obj/kern/kernel.asm	/^    f0105b7c:	00 00 00 $/;"	l
f0105b7f	obj/kern/kernel.asm	/^    f0105b7f:	be 98 04 00 00       	mov    $0x498,%esi$/;"	l
f0105b84	obj/kern/kernel.asm	/^    f0105b84:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0105b8b	obj/kern/kernel.asm	/^    f0105b8b:	00 00 00 $/;"	l
f0105b8e	obj/kern/kernel.asm	/^    f0105b8e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105b93	obj/kern/kernel.asm	/^    f0105b93:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0105b9a	obj/kern/kernel.asm	/^    f0105b9a:	00 00 00 $/;"	l
f0105b9d	obj/kern/kernel.asm	/^    f0105b9d:	ff d3                	callq  *%rbx$/;"	l
f0105b9f	obj/kern/kernel.asm	/^    f0105b9f:	b8 00 00 00 f0       	mov    $0xf0000000,%eax$/;"	l
f0105ba4	obj/kern/kernel.asm	/^    f0105ba4:	48 03 45 80          	add    -0x80(%rbp),%rax$/;"	l
f0105ba8	obj/kern/kernel.asm	/^    f0105ba8:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)$/;"	l
f0105baf	obj/kern/kernel.asm	/^    f0105baf:	48 b8 60 77 a2 f1 00 	mov    $0xf1a27760,%rax$/;"	l
f0105bb6	obj/kern/kernel.asm	/^    f0105bb6:	00 00 00 $/;"	l
f0105bb9	obj/kern/kernel.asm	/^    f0105bb9:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0105bbc	obj/kern/kernel.asm	/^    f0105bbc:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105bc1	obj/kern/kernel.asm	/^    f0105bc1:	be 00 10 00 00       	mov    $0x1000,%esi$/;"	l
f0105bc6	obj/kern/kernel.asm	/^    f0105bc6:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0105bc9	obj/kern/kernel.asm	/^    f0105bc9:	48 b8 6c 29 10 f0 00 	mov    $0xf010296c,%rax$/;"	l
f0105bd0	obj/kern/kernel.asm	/^    f0105bd0:	00 00 00 $/;"	l
f0105bd3	obj/kern/kernel.asm	/^    f0105bd3:	ff d0                	callq  *%rax$/;"	l
f0105bd5	obj/kern/kernel.asm	/^    f0105bd5:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx$/;"	l
f0105bdc	obj/kern/kernel.asm	/^    f0105bdc:	48 83 c2 08          	add    $0x8,%rdx$/;"	l
f0105be0	obj/kern/kernel.asm	/^    f0105be0:	48 39 d0             	cmp    %rdx,%rax$/;"	l
f0105be3	obj/kern/kernel.asm	/^    f0105be3:	74 34                	je     fffffffff0105c19 <end+0xfffffffefe664879>$/;"	l
f0105be5	obj/kern/kernel.asm	/^    f0105be5:	48 b9 68 21 11 f0 00 	mov    $0xf0112168,%rcx$/;"	l
f0105bec	obj/kern/kernel.asm	/^    f0105bec:	00 00 00 $/;"	l
f0105bef	obj/kern/kernel.asm	/^    f0105bef:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0105bf6	obj/kern/kernel.asm	/^    f0105bf6:	00 00 00 $/;"	l
f0105bf9	obj/kern/kernel.asm	/^    f0105bf9:	be 99 04 00 00       	mov    $0x499,%esi$/;"	l
f0105bfe	obj/kern/kernel.asm	/^    f0105bfe:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0105c05	obj/kern/kernel.asm	/^    f0105c05:	00 00 00 $/;"	l
f0105c08	obj/kern/kernel.asm	/^    f0105c08:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105c0d	obj/kern/kernel.asm	/^    f0105c0d:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0105c14	obj/kern/kernel.asm	/^    f0105c14:	00 00 00 $/;"	l
f0105c17	obj/kern/kernel.asm	/^    f0105c17:	ff d3                	callq  *%rbx$/;"	l
f0105c19	obj/kern/kernel.asm	/^    f0105c19:	48 b8 60 77 a2 f1 00 	mov    $0xf1a27760,%rax$/;"	l
f0105c20	obj/kern/kernel.asm	/^    f0105c20:	00 00 00 $/;"	l
f0105c23	obj/kern/kernel.asm	/^    f0105c23:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0105c26	obj/kern/kernel.asm	/^    f0105c26:	48 8b 9d 08 ff ff ff 	mov    -0xf8(%rbp),%rbx$/;"	l
f0105c2d	obj/kern/kernel.asm	/^    f0105c2d:	b9 04 00 00 00       	mov    $0x4,%ecx$/;"	l
f0105c32	obj/kern/kernel.asm	/^    f0105c32:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0105c37	obj/kern/kernel.asm	/^    f0105c37:	48 89 de             	mov    %rbx,%rsi$/;"	l
f0105c3a	obj/kern/kernel.asm	/^    f0105c3a:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0105c3d	obj/kern/kernel.asm	/^    f0105c3d:	48 b8 97 2f 10 f0 00 	mov    $0xf0102f97,%rax$/;"	l
f0105c44	obj/kern/kernel.asm	/^    f0105c44:	00 00 00 $/;"	l
f0105c47	obj/kern/kernel.asm	/^    f0105c47:	ff d0                	callq  *%rax$/;"	l
f0105c49	obj/kern/kernel.asm	/^    f0105c49:	85 c0                	test   %eax,%eax$/;"	l
f0105c4b	obj/kern/kernel.asm	/^    f0105c4b:	74 34                	je     fffffffff0105c81 <end+0xfffffffefe6648e1>$/;"	l
f0105c4d	obj/kern/kernel.asm	/^    f0105c4d:	48 b9 a8 21 11 f0 00 	mov    $0xf01121a8,%rcx$/;"	l
f0105c54	obj/kern/kernel.asm	/^    f0105c54:	00 00 00 $/;"	l
f0105c57	obj/kern/kernel.asm	/^    f0105c57:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0105c5e	obj/kern/kernel.asm	/^    f0105c5e:	00 00 00 $/;"	l
f0105c61	obj/kern/kernel.asm	/^    f0105c61:	be 9c 04 00 00       	mov    $0x49c,%esi$/;"	l
f0105c66	obj/kern/kernel.asm	/^    f0105c66:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0105c6d	obj/kern/kernel.asm	/^    f0105c6d:	00 00 00 $/;"	l
f0105c70	obj/kern/kernel.asm	/^    f0105c70:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105c75	obj/kern/kernel.asm	/^    f0105c75:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0105c7c	obj/kern/kernel.asm	/^    f0105c7c:	00 00 00 $/;"	l
f0105c7f	obj/kern/kernel.asm	/^    f0105c7f:	ff d3                	callq  *%rbx$/;"	l
f0105c81	obj/kern/kernel.asm	/^    f0105c81:	48 b8 60 77 a2 f1 00 	mov    $0xf1a27760,%rax$/;"	l
f0105c88	obj/kern/kernel.asm	/^    f0105c88:	00 00 00 $/;"	l
f0105c8b	obj/kern/kernel.asm	/^    f0105c8b:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0105c8e	obj/kern/kernel.asm	/^    f0105c8e:	be 00 10 00 00       	mov    $0x1000,%esi$/;"	l
f0105c93	obj/kern/kernel.asm	/^    f0105c93:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0105c96	obj/kern/kernel.asm	/^    f0105c96:	48 b8 e5 4b 10 f0 00 	mov    $0xf0104be5,%rax$/;"	l
f0105c9d	obj/kern/kernel.asm	/^    f0105c9d:	00 00 00 $/;"	l
f0105ca0	obj/kern/kernel.asm	/^    f0105ca0:	ff d0                	callq  *%rax$/;"	l
f0105ca2	obj/kern/kernel.asm	/^    f0105ca2:	48 89 c3             	mov    %rax,%rbx$/;"	l
f0105ca5	obj/kern/kernel.asm	/^    f0105ca5:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax$/;"	l
f0105cac	obj/kern/kernel.asm	/^    f0105cac:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0105caf	obj/kern/kernel.asm	/^    f0105caf:	48 b8 00 1a 10 f0 00 	mov    $0xf0101a00,%rax$/;"	l
f0105cb6	obj/kern/kernel.asm	/^    f0105cb6:	00 00 00 $/;"	l
f0105cb9	obj/kern/kernel.asm	/^    f0105cb9:	ff d0                	callq  *%rax$/;"	l
f0105cbb	obj/kern/kernel.asm	/^    f0105cbb:	48 39 c3             	cmp    %rax,%rbx$/;"	l
f0105cbe	obj/kern/kernel.asm	/^    f0105cbe:	74 34                	je     fffffffff0105cf4 <end+0xfffffffefe664954>$/;"	l
f0105cc0	obj/kern/kernel.asm	/^    f0105cc0:	48 b9 20 21 11 f0 00 	mov    $0xf0112120,%rcx$/;"	l
f0105cc7	obj/kern/kernel.asm	/^    f0105cc7:	00 00 00 $/;"	l
f0105cca	obj/kern/kernel.asm	/^    f0105cca:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0105cd1	obj/kern/kernel.asm	/^    f0105cd1:	00 00 00 $/;"	l
f0105cd4	obj/kern/kernel.asm	/^    f0105cd4:	be 9d 04 00 00       	mov    $0x49d,%esi$/;"	l
f0105cd9	obj/kern/kernel.asm	/^    f0105cd9:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0105ce0	obj/kern/kernel.asm	/^    f0105ce0:	00 00 00 $/;"	l
f0105ce3	obj/kern/kernel.asm	/^    f0105ce3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105ce8	obj/kern/kernel.asm	/^    f0105ce8:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0105cef	obj/kern/kernel.asm	/^    f0105cef:	00 00 00 $/;"	l
f0105cf2	obj/kern/kernel.asm	/^    f0105cf2:	ff d3                	callq  *%rbx$/;"	l
f0105cf4	obj/kern/kernel.asm	/^    f0105cf4:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax$/;"	l
f0105cfb	obj/kern/kernel.asm	/^    f0105cfb:	0f b7 40 08          	movzwl 0x8(%rax),%eax$/;"	l
f0105cff	obj/kern/kernel.asm	/^    f0105cff:	66 83 f8 02          	cmp    $0x2,%ax$/;"	l
f0105d03	obj/kern/kernel.asm	/^    f0105d03:	74 34                	je     fffffffff0105d39 <end+0xfffffffefe664999>$/;"	l
f0105d05	obj/kern/kernel.asm	/^    f0105d05:	48 b9 50 21 11 f0 00 	mov    $0xf0112150,%rcx$/;"	l
f0105d0c	obj/kern/kernel.asm	/^    f0105d0c:	00 00 00 $/;"	l
f0105d0f	obj/kern/kernel.asm	/^    f0105d0f:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0105d16	obj/kern/kernel.asm	/^    f0105d16:	00 00 00 $/;"	l
f0105d19	obj/kern/kernel.asm	/^    f0105d19:	be 9e 04 00 00       	mov    $0x49e,%esi$/;"	l
f0105d1e	obj/kern/kernel.asm	/^    f0105d1e:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0105d25	obj/kern/kernel.asm	/^    f0105d25:	00 00 00 $/;"	l
f0105d28	obj/kern/kernel.asm	/^    f0105d28:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105d2d	obj/kern/kernel.asm	/^    f0105d2d:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0105d34	obj/kern/kernel.asm	/^    f0105d34:	00 00 00 $/;"	l
f0105d37	obj/kern/kernel.asm	/^    f0105d37:	ff d3                	callq  *%rbx$/;"	l
f0105d39	obj/kern/kernel.asm	/^    f0105d39:	48 b8 60 77 a2 f1 00 	mov    $0xf1a27760,%rax$/;"	l
f0105d40	obj/kern/kernel.asm	/^    f0105d40:	00 00 00 $/;"	l
f0105d43	obj/kern/kernel.asm	/^    f0105d43:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0105d46	obj/kern/kernel.asm	/^    f0105d46:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105d4b	obj/kern/kernel.asm	/^    f0105d4b:	be 00 10 00 00       	mov    $0x1000,%esi$/;"	l
f0105d50	obj/kern/kernel.asm	/^    f0105d50:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0105d53	obj/kern/kernel.asm	/^    f0105d53:	48 b8 6c 29 10 f0 00 	mov    $0xf010296c,%rax$/;"	l
f0105d5a	obj/kern/kernel.asm	/^    f0105d5a:	00 00 00 $/;"	l
f0105d5d	obj/kern/kernel.asm	/^    f0105d5d:	ff d0                	callq  *%rax$/;"	l
f0105d5f	obj/kern/kernel.asm	/^    f0105d5f:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0105d62	obj/kern/kernel.asm	/^    f0105d62:	83 e0 04             	and    $0x4,%eax$/;"	l
f0105d65	obj/kern/kernel.asm	/^    f0105d65:	48 85 c0             	test   %rax,%rax$/;"	l
f0105d68	obj/kern/kernel.asm	/^    f0105d68:	75 34                	jne    fffffffff0105d9e <end+0xfffffffefe6649fe>$/;"	l
f0105d6a	obj/kern/kernel.asm	/^    f0105d6a:	48 b9 e8 21 11 f0 00 	mov    $0xf01121e8,%rcx$/;"	l
f0105d71	obj/kern/kernel.asm	/^    f0105d71:	00 00 00 $/;"	l
f0105d74	obj/kern/kernel.asm	/^    f0105d74:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0105d7b	obj/kern/kernel.asm	/^    f0105d7b:	00 00 00 $/;"	l
f0105d7e	obj/kern/kernel.asm	/^    f0105d7e:	be 9f 04 00 00       	mov    $0x49f,%esi$/;"	l
f0105d83	obj/kern/kernel.asm	/^    f0105d83:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0105d8a	obj/kern/kernel.asm	/^    f0105d8a:	00 00 00 $/;"	l
f0105d8d	obj/kern/kernel.asm	/^    f0105d8d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105d92	obj/kern/kernel.asm	/^    f0105d92:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0105d99	obj/kern/kernel.asm	/^    f0105d99:	00 00 00 $/;"	l
f0105d9c	obj/kern/kernel.asm	/^    f0105d9c:	ff d3                	callq  *%rbx$/;"	l
f0105d9e	obj/kern/kernel.asm	/^    f0105d9e:	48 b8 60 77 a2 f1 00 	mov    $0xf1a27760,%rax$/;"	l
f0105da5	obj/kern/kernel.asm	/^    f0105da5:	00 00 00 $/;"	l
f0105da8	obj/kern/kernel.asm	/^    f0105da8:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0105dab	obj/kern/kernel.asm	/^    f0105dab:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0105dae	obj/kern/kernel.asm	/^    f0105dae:	83 e0 04             	and    $0x4,%eax$/;"	l
f0105db1	obj/kern/kernel.asm	/^    f0105db1:	48 85 c0             	test   %rax,%rax$/;"	l
f0105db4	obj/kern/kernel.asm	/^    f0105db4:	75 34                	jne    fffffffff0105dea <end+0xfffffffefe664a4a>$/;"	l
f0105db6	obj/kern/kernel.asm	/^    f0105db6:	48 b9 1b 22 11 f0 00 	mov    $0xf011221b,%rcx$/;"	l
f0105dbd	obj/kern/kernel.asm	/^    f0105dbd:	00 00 00 $/;"	l
f0105dc0	obj/kern/kernel.asm	/^    f0105dc0:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0105dc7	obj/kern/kernel.asm	/^    f0105dc7:	00 00 00 $/;"	l
f0105dca	obj/kern/kernel.asm	/^    f0105dca:	be a0 04 00 00       	mov    $0x4a0,%esi$/;"	l
f0105dcf	obj/kern/kernel.asm	/^    f0105dcf:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0105dd6	obj/kern/kernel.asm	/^    f0105dd6:	00 00 00 $/;"	l
f0105dd9	obj/kern/kernel.asm	/^    f0105dd9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105dde	obj/kern/kernel.asm	/^    f0105dde:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0105de5	obj/kern/kernel.asm	/^    f0105de5:	00 00 00 $/;"	l
f0105de8	obj/kern/kernel.asm	/^    f0105de8:	ff d3                	callq  *%rbx$/;"	l
f0105dea	obj/kern/kernel.asm	/^    f0105dea:	48 b8 60 77 a2 f1 00 	mov    $0xf1a27760,%rax$/;"	l
f0105df1	obj/kern/kernel.asm	/^    f0105df1:	00 00 00 $/;"	l
f0105df4	obj/kern/kernel.asm	/^    f0105df4:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0105df7	obj/kern/kernel.asm	/^    f0105df7:	48 8b 9d f0 fe ff ff 	mov    -0x110(%rbp),%rbx$/;"	l
f0105dfe	obj/kern/kernel.asm	/^    f0105dfe:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0105e03	obj/kern/kernel.asm	/^    f0105e03:	ba 00 00 20 00       	mov    $0x200000,%edx$/;"	l
f0105e08	obj/kern/kernel.asm	/^    f0105e08:	48 89 de             	mov    %rbx,%rsi$/;"	l
f0105e0b	obj/kern/kernel.asm	/^    f0105e0b:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0105e0e	obj/kern/kernel.asm	/^    f0105e0e:	48 b8 97 2f 10 f0 00 	mov    $0xf0102f97,%rax$/;"	l
f0105e15	obj/kern/kernel.asm	/^    f0105e15:	00 00 00 $/;"	l
f0105e18	obj/kern/kernel.asm	/^    f0105e18:	ff d0                	callq  *%rax$/;"	l
f0105e1a	obj/kern/kernel.asm	/^    f0105e1a:	85 c0                	test   %eax,%eax$/;"	l
f0105e1c	obj/kern/kernel.asm	/^    f0105e1c:	78 34                	js     fffffffff0105e52 <end+0xfffffffefe664ab2>$/;"	l
f0105e1e	obj/kern/kernel.asm	/^    f0105e1e:	48 b9 38 22 11 f0 00 	mov    $0xf0112238,%rcx$/;"	l
f0105e25	obj/kern/kernel.asm	/^    f0105e25:	00 00 00 $/;"	l
f0105e28	obj/kern/kernel.asm	/^    f0105e28:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0105e2f	obj/kern/kernel.asm	/^    f0105e2f:	00 00 00 $/;"	l
f0105e32	obj/kern/kernel.asm	/^    f0105e32:	be a4 04 00 00       	mov    $0x4a4,%esi$/;"	l
f0105e37	obj/kern/kernel.asm	/^    f0105e37:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0105e3e	obj/kern/kernel.asm	/^    f0105e3e:	00 00 00 $/;"	l
f0105e41	obj/kern/kernel.asm	/^    f0105e41:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105e46	obj/kern/kernel.asm	/^    f0105e46:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0105e4d	obj/kern/kernel.asm	/^    f0105e4d:	00 00 00 $/;"	l
f0105e50	obj/kern/kernel.asm	/^    f0105e50:	ff d3                	callq  *%rbx$/;"	l
f0105e52	obj/kern/kernel.asm	/^    f0105e52:	48 b8 60 77 a2 f1 00 	mov    $0xf1a27760,%rax$/;"	l
f0105e59	obj/kern/kernel.asm	/^    f0105e59:	00 00 00 $/;"	l
f0105e5c	obj/kern/kernel.asm	/^    f0105e5c:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0105e5f	obj/kern/kernel.asm	/^    f0105e5f:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx$/;"	l
f0105e66	obj/kern/kernel.asm	/^    f0105e66:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0105e6b	obj/kern/kernel.asm	/^    f0105e6b:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0105e70	obj/kern/kernel.asm	/^    f0105e70:	48 89 de             	mov    %rbx,%rsi$/;"	l
f0105e73	obj/kern/kernel.asm	/^    f0105e73:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0105e76	obj/kern/kernel.asm	/^    f0105e76:	48 b8 97 2f 10 f0 00 	mov    $0xf0102f97,%rax$/;"	l
f0105e7d	obj/kern/kernel.asm	/^    f0105e7d:	00 00 00 $/;"	l
f0105e80	obj/kern/kernel.asm	/^    f0105e80:	ff d0                	callq  *%rax$/;"	l
f0105e82	obj/kern/kernel.asm	/^    f0105e82:	85 c0                	test   %eax,%eax$/;"	l
f0105e84	obj/kern/kernel.asm	/^    f0105e84:	74 34                	je     fffffffff0105eba <end+0xfffffffefe664b1a>$/;"	l
f0105e86	obj/kern/kernel.asm	/^    f0105e86:	48 b9 70 22 11 f0 00 	mov    $0xf0112270,%rcx$/;"	l
f0105e8d	obj/kern/kernel.asm	/^    f0105e8d:	00 00 00 $/;"	l
f0105e90	obj/kern/kernel.asm	/^    f0105e90:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0105e97	obj/kern/kernel.asm	/^    f0105e97:	00 00 00 $/;"	l
f0105e9a	obj/kern/kernel.asm	/^    f0105e9a:	be a7 04 00 00       	mov    $0x4a7,%esi$/;"	l
f0105e9f	obj/kern/kernel.asm	/^    f0105e9f:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0105ea6	obj/kern/kernel.asm	/^    f0105ea6:	00 00 00 $/;"	l
f0105ea9	obj/kern/kernel.asm	/^    f0105ea9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105eae	obj/kern/kernel.asm	/^    f0105eae:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0105eb5	obj/kern/kernel.asm	/^    f0105eb5:	00 00 00 $/;"	l
f0105eb8	obj/kern/kernel.asm	/^    f0105eb8:	ff d3                	callq  *%rbx$/;"	l
f0105eba	obj/kern/kernel.asm	/^    f0105eba:	48 b8 60 77 a2 f1 00 	mov    $0xf1a27760,%rax$/;"	l
f0105ec1	obj/kern/kernel.asm	/^    f0105ec1:	00 00 00 $/;"	l
f0105ec4	obj/kern/kernel.asm	/^    f0105ec4:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0105ec7	obj/kern/kernel.asm	/^    f0105ec7:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0105ecc	obj/kern/kernel.asm	/^    f0105ecc:	be 00 10 00 00       	mov    $0x1000,%esi$/;"	l
f0105ed1	obj/kern/kernel.asm	/^    f0105ed1:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0105ed4	obj/kern/kernel.asm	/^    f0105ed4:	48 b8 6c 29 10 f0 00 	mov    $0xf010296c,%rax$/;"	l
f0105edb	obj/kern/kernel.asm	/^    f0105edb:	00 00 00 $/;"	l
f0105ede	obj/kern/kernel.asm	/^    f0105ede:	ff d0                	callq  *%rax$/;"	l
f0105ee0	obj/kern/kernel.asm	/^    f0105ee0:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0105ee3	obj/kern/kernel.asm	/^    f0105ee3:	83 e0 04             	and    $0x4,%eax$/;"	l
f0105ee6	obj/kern/kernel.asm	/^    f0105ee6:	48 85 c0             	test   %rax,%rax$/;"	l
f0105ee9	obj/kern/kernel.asm	/^    f0105ee9:	74 34                	je     fffffffff0105f1f <end+0xfffffffefe664b7f>$/;"	l
f0105eeb	obj/kern/kernel.asm	/^    f0105eeb:	48 b9 a8 22 11 f0 00 	mov    $0xf01122a8,%rcx$/;"	l
f0105ef2	obj/kern/kernel.asm	/^    f0105ef2:	00 00 00 $/;"	l
f0105ef5	obj/kern/kernel.asm	/^    f0105ef5:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0105efc	obj/kern/kernel.asm	/^    f0105efc:	00 00 00 $/;"	l
f0105eff	obj/kern/kernel.asm	/^    f0105eff:	be a8 04 00 00       	mov    $0x4a8,%esi$/;"	l
f0105f04	obj/kern/kernel.asm	/^    f0105f04:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0105f0b	obj/kern/kernel.asm	/^    f0105f0b:	00 00 00 $/;"	l
f0105f0e	obj/kern/kernel.asm	/^    f0105f0e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105f13	obj/kern/kernel.asm	/^    f0105f13:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0105f1a	obj/kern/kernel.asm	/^    f0105f1a:	00 00 00 $/;"	l
f0105f1d	obj/kern/kernel.asm	/^    f0105f1d:	ff d3                	callq  *%rbx$/;"	l
f0105f1f	obj/kern/kernel.asm	/^    f0105f1f:	48 b8 60 77 a2 f1 00 	mov    $0xf1a27760,%rax$/;"	l
f0105f26	obj/kern/kernel.asm	/^    f0105f26:	00 00 00 $/;"	l
f0105f29	obj/kern/kernel.asm	/^    f0105f29:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0105f2c	obj/kern/kernel.asm	/^    f0105f2c:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0105f31	obj/kern/kernel.asm	/^    f0105f31:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0105f34	obj/kern/kernel.asm	/^    f0105f34:	48 b8 e5 4b 10 f0 00 	mov    $0xf0104be5,%rax$/;"	l
f0105f3b	obj/kern/kernel.asm	/^    f0105f3b:	00 00 00 $/;"	l
f0105f3e	obj/kern/kernel.asm	/^    f0105f3e:	ff d0                	callq  *%rax$/;"	l
f0105f40	obj/kern/kernel.asm	/^    f0105f40:	48 89 c3             	mov    %rax,%rbx$/;"	l
f0105f43	obj/kern/kernel.asm	/^    f0105f43:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax$/;"	l
f0105f4a	obj/kern/kernel.asm	/^    f0105f4a:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0105f4d	obj/kern/kernel.asm	/^    f0105f4d:	48 b8 00 1a 10 f0 00 	mov    $0xf0101a00,%rax$/;"	l
f0105f54	obj/kern/kernel.asm	/^    f0105f54:	00 00 00 $/;"	l
f0105f57	obj/kern/kernel.asm	/^    f0105f57:	ff d0                	callq  *%rax$/;"	l
f0105f59	obj/kern/kernel.asm	/^    f0105f59:	48 39 c3             	cmp    %rax,%rbx$/;"	l
f0105f5c	obj/kern/kernel.asm	/^    f0105f5c:	74 34                	je     fffffffff0105f92 <end+0xfffffffefe664bf2>$/;"	l
f0105f5e	obj/kern/kernel.asm	/^    f0105f5e:	48 b9 e0 22 11 f0 00 	mov    $0xf01122e0,%rcx$/;"	l
f0105f65	obj/kern/kernel.asm	/^    f0105f65:	00 00 00 $/;"	l
f0105f68	obj/kern/kernel.asm	/^    f0105f68:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0105f6f	obj/kern/kernel.asm	/^    f0105f6f:	00 00 00 $/;"	l
f0105f72	obj/kern/kernel.asm	/^    f0105f72:	be ab 04 00 00       	mov    $0x4ab,%esi$/;"	l
f0105f77	obj/kern/kernel.asm	/^    f0105f77:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0105f7e	obj/kern/kernel.asm	/^    f0105f7e:	00 00 00 $/;"	l
f0105f81	obj/kern/kernel.asm	/^    f0105f81:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105f86	obj/kern/kernel.asm	/^    f0105f86:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0105f8d	obj/kern/kernel.asm	/^    f0105f8d:	00 00 00 $/;"	l
f0105f90	obj/kern/kernel.asm	/^    f0105f90:	ff d3                	callq  *%rbx$/;"	l
f0105f92	obj/kern/kernel.asm	/^    f0105f92:	48 b8 60 77 a2 f1 00 	mov    $0xf1a27760,%rax$/;"	l
f0105f99	obj/kern/kernel.asm	/^    f0105f99:	00 00 00 $/;"	l
f0105f9c	obj/kern/kernel.asm	/^    f0105f9c:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0105f9f	obj/kern/kernel.asm	/^    f0105f9f:	be 00 10 00 00       	mov    $0x1000,%esi$/;"	l
f0105fa4	obj/kern/kernel.asm	/^    f0105fa4:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0105fa7	obj/kern/kernel.asm	/^    f0105fa7:	48 b8 e5 4b 10 f0 00 	mov    $0xf0104be5,%rax$/;"	l
f0105fae	obj/kern/kernel.asm	/^    f0105fae:	00 00 00 $/;"	l
f0105fb1	obj/kern/kernel.asm	/^    f0105fb1:	ff d0                	callq  *%rax$/;"	l
f0105fb3	obj/kern/kernel.asm	/^    f0105fb3:	48 89 c3             	mov    %rax,%rbx$/;"	l
f0105fb6	obj/kern/kernel.asm	/^    f0105fb6:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax$/;"	l
f0105fbd	obj/kern/kernel.asm	/^    f0105fbd:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0105fc0	obj/kern/kernel.asm	/^    f0105fc0:	48 b8 00 1a 10 f0 00 	mov    $0xf0101a00,%rax$/;"	l
f0105fc7	obj/kern/kernel.asm	/^    f0105fc7:	00 00 00 $/;"	l
f0105fca	obj/kern/kernel.asm	/^    f0105fca:	ff d0                	callq  *%rax$/;"	l
f0105fcc	obj/kern/kernel.asm	/^    f0105fcc:	48 39 c3             	cmp    %rax,%rbx$/;"	l
f0105fcf	obj/kern/kernel.asm	/^    f0105fcf:	74 34                	je     fffffffff0106005 <end+0xfffffffefe664c65>$/;"	l
f0105fd1	obj/kern/kernel.asm	/^    f0105fd1:	48 b9 10 23 11 f0 00 	mov    $0xf0112310,%rcx$/;"	l
f0105fd8	obj/kern/kernel.asm	/^    f0105fd8:	00 00 00 $/;"	l
f0105fdb	obj/kern/kernel.asm	/^    f0105fdb:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0105fe2	obj/kern/kernel.asm	/^    f0105fe2:	00 00 00 $/;"	l
f0105fe5	obj/kern/kernel.asm	/^    f0105fe5:	be ac 04 00 00       	mov    $0x4ac,%esi$/;"	l
f0105fea	obj/kern/kernel.asm	/^    f0105fea:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0105ff1	obj/kern/kernel.asm	/^    f0105ff1:	00 00 00 $/;"	l
f0105ff4	obj/kern/kernel.asm	/^    f0105ff4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0105ff9	obj/kern/kernel.asm	/^    f0105ff9:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0106000	obj/kern/kernel.asm	/^    f0106000:	00 00 00 $/;"	l
f0106003	obj/kern/kernel.asm	/^    f0106003:	ff d3                	callq  *%rbx$/;"	l
f0106005	obj/kern/kernel.asm	/^    f0106005:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax$/;"	l
f010600c	obj/kern/kernel.asm	/^    f010600c:	0f b7 40 08          	movzwl 0x8(%rax),%eax$/;"	l
f0106010	obj/kern/kernel.asm	/^    f0106010:	66 83 f8 02          	cmp    $0x2,%ax$/;"	l
f0106014	obj/kern/kernel.asm	/^    f0106014:	74 34                	je     fffffffff010604a <end+0xfffffffefe664caa>$/;"	l
f0106016	obj/kern/kernel.asm	/^    f0106016:	48 b9 40 23 11 f0 00 	mov    $0xf0112340,%rcx$/;"	l
f010601d	obj/kern/kernel.asm	/^    f010601d:	00 00 00 $/;"	l
f0106020	obj/kern/kernel.asm	/^    f0106020:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0106027	obj/kern/kernel.asm	/^    f0106027:	00 00 00 $/;"	l
f010602a	obj/kern/kernel.asm	/^    f010602a:	be ae 04 00 00       	mov    $0x4ae,%esi$/;"	l
f010602f	obj/kern/kernel.asm	/^    f010602f:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0106036	obj/kern/kernel.asm	/^    f0106036:	00 00 00 $/;"	l
f0106039	obj/kern/kernel.asm	/^    f0106039:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010603e	obj/kern/kernel.asm	/^    f010603e:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0106045	obj/kern/kernel.asm	/^    f0106045:	00 00 00 $/;"	l
f0106048	obj/kern/kernel.asm	/^    f0106048:	ff d3                	callq  *%rbx$/;"	l
f010604a	obj/kern/kernel.asm	/^    f010604a:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax$/;"	l
f0106051	obj/kern/kernel.asm	/^    f0106051:	0f b7 40 08          	movzwl 0x8(%rax),%eax$/;"	l
f0106055	obj/kern/kernel.asm	/^    f0106055:	66 83 f8 01          	cmp    $0x1,%ax$/;"	l
f0106059	obj/kern/kernel.asm	/^    f0106059:	74 34                	je     fffffffff010608f <end+0xfffffffefe664cef>$/;"	l
f010605b	obj/kern/kernel.asm	/^    f010605b:	48 b9 51 23 11 f0 00 	mov    $0xf0112351,%rcx$/;"	l
f0106062	obj/kern/kernel.asm	/^    f0106062:	00 00 00 $/;"	l
f0106065	obj/kern/kernel.asm	/^    f0106065:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f010606c	obj/kern/kernel.asm	/^    f010606c:	00 00 00 $/;"	l
f010606f	obj/kern/kernel.asm	/^    f010606f:	be af 04 00 00       	mov    $0x4af,%esi$/;"	l
f0106074	obj/kern/kernel.asm	/^    f0106074:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f010607b	obj/kern/kernel.asm	/^    f010607b:	00 00 00 $/;"	l
f010607e	obj/kern/kernel.asm	/^    f010607e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106083	obj/kern/kernel.asm	/^    f0106083:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f010608a	obj/kern/kernel.asm	/^    f010608a:	00 00 00 $/;"	l
f010608d	obj/kern/kernel.asm	/^    f010608d:	ff d3                	callq  *%rbx$/;"	l
f010608f	obj/kern/kernel.asm	/^    f010608f:	48 b8 60 77 a2 f1 00 	mov    $0xf1a27760,%rax$/;"	l
f0106096	obj/kern/kernel.asm	/^    f0106096:	00 00 00 $/;"	l
f0106099	obj/kern/kernel.asm	/^    f0106099:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010609c	obj/kern/kernel.asm	/^    f010609c:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01060a1	obj/kern/kernel.asm	/^    f01060a1:	48 89 c7             	mov    %rax,%rdi$/;"	l
f01060a4	obj/kern/kernel.asm	/^    f01060a4:	48 b8 16 31 10 f0 00 	mov    $0xf0103116,%rax$/;"	l
f01060ab	obj/kern/kernel.asm	/^    f01060ab:	00 00 00 $/;"	l
f01060ae	obj/kern/kernel.asm	/^    f01060ae:	ff d0                	callq  *%rax$/;"	l
f01060b0	obj/kern/kernel.asm	/^    f01060b0:	48 b8 60 77 a2 f1 00 	mov    $0xf1a27760,%rax$/;"	l
f01060b7	obj/kern/kernel.asm	/^    f01060b7:	00 00 00 $/;"	l
f01060ba	obj/kern/kernel.asm	/^    f01060ba:	48 8b 00             	mov    (%rax),%rax$/;"	l
f01060bd	obj/kern/kernel.asm	/^    f01060bd:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01060c2	obj/kern/kernel.asm	/^    f01060c2:	48 89 c7             	mov    %rax,%rdi$/;"	l
f01060c5	obj/kern/kernel.asm	/^    f01060c5:	48 b8 e5 4b 10 f0 00 	mov    $0xf0104be5,%rax$/;"	l
f01060cc	obj/kern/kernel.asm	/^    f01060cc:	00 00 00 $/;"	l
f01060cf	obj/kern/kernel.asm	/^    f01060cf:	ff d0                	callq  *%rax$/;"	l
f01060d1	obj/kern/kernel.asm	/^    f01060d1:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax$/;"	l
f01060d5	obj/kern/kernel.asm	/^    f01060d5:	74 34                	je     fffffffff010610b <end+0xfffffffefe664d6b>$/;"	l
f01060d7	obj/kern/kernel.asm	/^    f01060d7:	48 b9 68 23 11 f0 00 	mov    $0xf0112368,%rcx$/;"	l
f01060de	obj/kern/kernel.asm	/^    f01060de:	00 00 00 $/;"	l
f01060e1	obj/kern/kernel.asm	/^    f01060e1:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f01060e8	obj/kern/kernel.asm	/^    f01060e8:	00 00 00 $/;"	l
f01060eb	obj/kern/kernel.asm	/^    f01060eb:	be b3 04 00 00       	mov    $0x4b3,%esi$/;"	l
f01060f0	obj/kern/kernel.asm	/^    f01060f0:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f01060f7	obj/kern/kernel.asm	/^    f01060f7:	00 00 00 $/;"	l
f01060fa	obj/kern/kernel.asm	/^    f01060fa:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01060ff	obj/kern/kernel.asm	/^    f01060ff:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0106106	obj/kern/kernel.asm	/^    f0106106:	00 00 00 $/;"	l
f0106109	obj/kern/kernel.asm	/^    f0106109:	ff d3                	callq  *%rbx$/;"	l
f010610b	obj/kern/kernel.asm	/^    f010610b:	48 b8 60 77 a2 f1 00 	mov    $0xf1a27760,%rax$/;"	l
f0106112	obj/kern/kernel.asm	/^    f0106112:	00 00 00 $/;"	l
f0106115	obj/kern/kernel.asm	/^    f0106115:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0106118	obj/kern/kernel.asm	/^    f0106118:	be 00 10 00 00       	mov    $0x1000,%esi$/;"	l
f010611d	obj/kern/kernel.asm	/^    f010611d:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0106120	obj/kern/kernel.asm	/^    f0106120:	48 b8 e5 4b 10 f0 00 	mov    $0xf0104be5,%rax$/;"	l
f0106127	obj/kern/kernel.asm	/^    f0106127:	00 00 00 $/;"	l
f010612a	obj/kern/kernel.asm	/^    f010612a:	ff d0                	callq  *%rax$/;"	l
f010612c	obj/kern/kernel.asm	/^    f010612c:	48 89 c3             	mov    %rax,%rbx$/;"	l
f010612f	obj/kern/kernel.asm	/^    f010612f:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax$/;"	l
f0106136	obj/kern/kernel.asm	/^    f0106136:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0106139	obj/kern/kernel.asm	/^    f0106139:	48 b8 00 1a 10 f0 00 	mov    $0xf0101a00,%rax$/;"	l
f0106140	obj/kern/kernel.asm	/^    f0106140:	00 00 00 $/;"	l
f0106143	obj/kern/kernel.asm	/^    f0106143:	ff d0                	callq  *%rax$/;"	l
f0106145	obj/kern/kernel.asm	/^    f0106145:	48 39 c3             	cmp    %rax,%rbx$/;"	l
f0106148	obj/kern/kernel.asm	/^    f0106148:	74 34                	je     fffffffff010617e <end+0xfffffffefe664dde>$/;"	l
f010614a	obj/kern/kernel.asm	/^    f010614a:	48 b9 10 23 11 f0 00 	mov    $0xf0112310,%rcx$/;"	l
f0106151	obj/kern/kernel.asm	/^    f0106151:	00 00 00 $/;"	l
f0106154	obj/kern/kernel.asm	/^    f0106154:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f010615b	obj/kern/kernel.asm	/^    f010615b:	00 00 00 $/;"	l
f010615e	obj/kern/kernel.asm	/^    f010615e:	be b4 04 00 00       	mov    $0x4b4,%esi$/;"	l
f0106163	obj/kern/kernel.asm	/^    f0106163:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f010616a	obj/kern/kernel.asm	/^    f010616a:	00 00 00 $/;"	l
f010616d	obj/kern/kernel.asm	/^    f010616d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106172	obj/kern/kernel.asm	/^    f0106172:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0106179	obj/kern/kernel.asm	/^    f0106179:	00 00 00 $/;"	l
f010617c	obj/kern/kernel.asm	/^    f010617c:	ff d3                	callq  *%rbx$/;"	l
f010617e	obj/kern/kernel.asm	/^    f010617e:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax$/;"	l
f0106185	obj/kern/kernel.asm	/^    f0106185:	0f b7 40 08          	movzwl 0x8(%rax),%eax$/;"	l
f0106189	obj/kern/kernel.asm	/^    f0106189:	66 83 f8 01          	cmp    $0x1,%ax$/;"	l
f010618d	obj/kern/kernel.asm	/^    f010618d:	74 34                	je     fffffffff01061c3 <end+0xfffffffefe664e23>$/;"	l
f010618f	obj/kern/kernel.asm	/^    f010618f:	48 b9 b5 20 11 f0 00 	mov    $0xf01120b5,%rcx$/;"	l
f0106196	obj/kern/kernel.asm	/^    f0106196:	00 00 00 $/;"	l
f0106199	obj/kern/kernel.asm	/^    f0106199:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f01061a0	obj/kern/kernel.asm	/^    f01061a0:	00 00 00 $/;"	l
f01061a3	obj/kern/kernel.asm	/^    f01061a3:	be b5 04 00 00       	mov    $0x4b5,%esi$/;"	l
f01061a8	obj/kern/kernel.asm	/^    f01061a8:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f01061af	obj/kern/kernel.asm	/^    f01061af:	00 00 00 $/;"	l
f01061b2	obj/kern/kernel.asm	/^    f01061b2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01061b7	obj/kern/kernel.asm	/^    f01061b7:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f01061be	obj/kern/kernel.asm	/^    f01061be:	00 00 00 $/;"	l
f01061c1	obj/kern/kernel.asm	/^    f01061c1:	ff d3                	callq  *%rbx$/;"	l
f01061c3	obj/kern/kernel.asm	/^    f01061c3:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax$/;"	l
f01061ca	obj/kern/kernel.asm	/^    f01061ca:	0f b7 40 08          	movzwl 0x8(%rax),%eax$/;"	l
f01061ce	obj/kern/kernel.asm	/^    f01061ce:	66 83 f8 01          	cmp    $0x1,%ax$/;"	l
f01061d2	obj/kern/kernel.asm	/^    f01061d2:	74 34                	je     fffffffff0106208 <end+0xfffffffefe664e68>$/;"	l
f01061d4	obj/kern/kernel.asm	/^    f01061d4:	48 b9 51 23 11 f0 00 	mov    $0xf0112351,%rcx$/;"	l
f01061db	obj/kern/kernel.asm	/^    f01061db:	00 00 00 $/;"	l
f01061de	obj/kern/kernel.asm	/^    f01061de:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f01061e5	obj/kern/kernel.asm	/^    f01061e5:	00 00 00 $/;"	l
f01061e8	obj/kern/kernel.asm	/^    f01061e8:	be b6 04 00 00       	mov    $0x4b6,%esi$/;"	l
f01061ed	obj/kern/kernel.asm	/^    f01061ed:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f01061f4	obj/kern/kernel.asm	/^    f01061f4:	00 00 00 $/;"	l
f01061f7	obj/kern/kernel.asm	/^    f01061f7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01061fc	obj/kern/kernel.asm	/^    f01061fc:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0106203	obj/kern/kernel.asm	/^    f0106203:	00 00 00 $/;"	l
f0106206	obj/kern/kernel.asm	/^    f0106206:	ff d3                	callq  *%rbx$/;"	l
f0106208	obj/kern/kernel.asm	/^    f0106208:	48 b8 60 77 a2 f1 00 	mov    $0xf1a27760,%rax$/;"	l
f010620f	obj/kern/kernel.asm	/^    f010620f:	00 00 00 $/;"	l
f0106212	obj/kern/kernel.asm	/^    f0106212:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0106215	obj/kern/kernel.asm	/^    f0106215:	48 8b 9d f8 fe ff ff 	mov    -0x108(%rbp),%rbx$/;"	l
f010621c	obj/kern/kernel.asm	/^    f010621c:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
f0106221	obj/kern/kernel.asm	/^    f0106221:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f0106226	obj/kern/kernel.asm	/^    f0106226:	48 89 de             	mov    %rbx,%rsi$/;"	l
f0106229	obj/kern/kernel.asm	/^    f0106229:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010622c	obj/kern/kernel.asm	/^    f010622c:	48 b8 97 2f 10 f0 00 	mov    $0xf0102f97,%rax$/;"	l
f0106233	obj/kern/kernel.asm	/^    f0106233:	00 00 00 $/;"	l
f0106236	obj/kern/kernel.asm	/^    f0106236:	ff d0                	callq  *%rax$/;"	l
f0106238	obj/kern/kernel.asm	/^    f0106238:	85 c0                	test   %eax,%eax$/;"	l
f010623a	obj/kern/kernel.asm	/^    f010623a:	74 34                	je     fffffffff0106270 <end+0xfffffffefe664ed0>$/;"	l
f010623c	obj/kern/kernel.asm	/^    f010623c:	48 b9 70 22 11 f0 00 	mov    $0xf0112270,%rcx$/;"	l
f0106243	obj/kern/kernel.asm	/^    f0106243:	00 00 00 $/;"	l
f0106246	obj/kern/kernel.asm	/^    f0106246:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f010624d	obj/kern/kernel.asm	/^    f010624d:	00 00 00 $/;"	l
f0106250	obj/kern/kernel.asm	/^    f0106250:	be ba 04 00 00       	mov    $0x4ba,%esi$/;"	l
f0106255	obj/kern/kernel.asm	/^    f0106255:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f010625c	obj/kern/kernel.asm	/^    f010625c:	00 00 00 $/;"	l
f010625f	obj/kern/kernel.asm	/^    f010625f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106264	obj/kern/kernel.asm	/^    f0106264:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f010626b	obj/kern/kernel.asm	/^    f010626b:	00 00 00 $/;"	l
f010626e	obj/kern/kernel.asm	/^    f010626e:	ff d3                	callq  *%rbx$/;"	l
f0106270	obj/kern/kernel.asm	/^    f0106270:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax$/;"	l
f0106277	obj/kern/kernel.asm	/^    f0106277:	0f b7 40 08          	movzwl 0x8(%rax),%eax$/;"	l
f010627b	obj/kern/kernel.asm	/^    f010627b:	66 85 c0             	test   %ax,%ax$/;"	l
f010627e	obj/kern/kernel.asm	/^    f010627e:	75 34                	jne    fffffffff01062b4 <end+0xfffffffefe664f14>$/;"	l
f0106280	obj/kern/kernel.asm	/^    f0106280:	48 b9 8b 23 11 f0 00 	mov    $0xf011238b,%rcx$/;"	l
f0106287	obj/kern/kernel.asm	/^    f0106287:	00 00 00 $/;"	l
f010628a	obj/kern/kernel.asm	/^    f010628a:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0106291	obj/kern/kernel.asm	/^    f0106291:	00 00 00 $/;"	l
f0106294	obj/kern/kernel.asm	/^    f0106294:	be bb 04 00 00       	mov    $0x4bb,%esi$/;"	l
f0106299	obj/kern/kernel.asm	/^    f0106299:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f01062a0	obj/kern/kernel.asm	/^    f01062a0:	00 00 00 $/;"	l
f01062a3	obj/kern/kernel.asm	/^    f01062a3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01062a8	obj/kern/kernel.asm	/^    f01062a8:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f01062af	obj/kern/kernel.asm	/^    f01062af:	00 00 00 $/;"	l
f01062b2	obj/kern/kernel.asm	/^    f01062b2:	ff d3                	callq  *%rbx$/;"	l
f01062b4	obj/kern/kernel.asm	/^    f01062b4:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax$/;"	l
f01062bb	obj/kern/kernel.asm	/^    f01062bb:	48 8b 00             	mov    (%rax),%rax$/;"	l
f01062be	obj/kern/kernel.asm	/^    f01062be:	48 85 c0             	test   %rax,%rax$/;"	l
f01062c1	obj/kern/kernel.asm	/^    f01062c1:	74 34                	je     fffffffff01062f7 <end+0xfffffffefe664f57>$/;"	l
f01062c3	obj/kern/kernel.asm	/^    f01062c3:	48 b9 97 23 11 f0 00 	mov    $0xf0112397,%rcx$/;"	l
f01062ca	obj/kern/kernel.asm	/^    f01062ca:	00 00 00 $/;"	l
f01062cd	obj/kern/kernel.asm	/^    f01062cd:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f01062d4	obj/kern/kernel.asm	/^    f01062d4:	00 00 00 $/;"	l
f01062d7	obj/kern/kernel.asm	/^    f01062d7:	be bc 04 00 00       	mov    $0x4bc,%esi$/;"	l
f01062dc	obj/kern/kernel.asm	/^    f01062dc:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f01062e3	obj/kern/kernel.asm	/^    f01062e3:	00 00 00 $/;"	l
f01062e6	obj/kern/kernel.asm	/^    f01062e6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01062eb	obj/kern/kernel.asm	/^    f01062eb:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f01062f2	obj/kern/kernel.asm	/^    f01062f2:	00 00 00 $/;"	l
f01062f5	obj/kern/kernel.asm	/^    f01062f5:	ff d3                	callq  *%rbx$/;"	l
f01062f7	obj/kern/kernel.asm	/^    f01062f7:	48 b8 60 77 a2 f1 00 	mov    $0xf1a27760,%rax$/;"	l
f01062fe	obj/kern/kernel.asm	/^    f01062fe:	00 00 00 $/;"	l
f0106301	obj/kern/kernel.asm	/^    f0106301:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0106304	obj/kern/kernel.asm	/^    f0106304:	be 00 10 00 00       	mov    $0x1000,%esi$/;"	l
f0106309	obj/kern/kernel.asm	/^    f0106309:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010630c	obj/kern/kernel.asm	/^    f010630c:	48 b8 16 31 10 f0 00 	mov    $0xf0103116,%rax$/;"	l
f0106313	obj/kern/kernel.asm	/^    f0106313:	00 00 00 $/;"	l
f0106316	obj/kern/kernel.asm	/^    f0106316:	ff d0                	callq  *%rax$/;"	l
f0106318	obj/kern/kernel.asm	/^    f0106318:	48 b8 60 77 a2 f1 00 	mov    $0xf1a27760,%rax$/;"	l
f010631f	obj/kern/kernel.asm	/^    f010631f:	00 00 00 $/;"	l
f0106322	obj/kern/kernel.asm	/^    f0106322:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0106325	obj/kern/kernel.asm	/^    f0106325:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f010632a	obj/kern/kernel.asm	/^    f010632a:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010632d	obj/kern/kernel.asm	/^    f010632d:	48 b8 e5 4b 10 f0 00 	mov    $0xf0104be5,%rax$/;"	l
f0106334	obj/kern/kernel.asm	/^    f0106334:	00 00 00 $/;"	l
f0106337	obj/kern/kernel.asm	/^    f0106337:	ff d0                	callq  *%rax$/;"	l
f0106339	obj/kern/kernel.asm	/^    f0106339:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax$/;"	l
f010633d	obj/kern/kernel.asm	/^    f010633d:	74 34                	je     fffffffff0106373 <end+0xfffffffefe664fd3>$/;"	l
f010633f	obj/kern/kernel.asm	/^    f010633f:	48 b9 68 23 11 f0 00 	mov    $0xf0112368,%rcx$/;"	l
f0106346	obj/kern/kernel.asm	/^    f0106346:	00 00 00 $/;"	l
f0106349	obj/kern/kernel.asm	/^    f0106349:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0106350	obj/kern/kernel.asm	/^    f0106350:	00 00 00 $/;"	l
f0106353	obj/kern/kernel.asm	/^    f0106353:	be c0 04 00 00       	mov    $0x4c0,%esi$/;"	l
f0106358	obj/kern/kernel.asm	/^    f0106358:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f010635f	obj/kern/kernel.asm	/^    f010635f:	00 00 00 $/;"	l
f0106362	obj/kern/kernel.asm	/^    f0106362:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106367	obj/kern/kernel.asm	/^    f0106367:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f010636e	obj/kern/kernel.asm	/^    f010636e:	00 00 00 $/;"	l
f0106371	obj/kern/kernel.asm	/^    f0106371:	ff d3                	callq  *%rbx$/;"	l
f0106373	obj/kern/kernel.asm	/^    f0106373:	48 b8 60 77 a2 f1 00 	mov    $0xf1a27760,%rax$/;"	l
f010637a	obj/kern/kernel.asm	/^    f010637a:	00 00 00 $/;"	l
f010637d	obj/kern/kernel.asm	/^    f010637d:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0106380	obj/kern/kernel.asm	/^    f0106380:	be 00 10 00 00       	mov    $0x1000,%esi$/;"	l
f0106385	obj/kern/kernel.asm	/^    f0106385:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0106388	obj/kern/kernel.asm	/^    f0106388:	48 b8 e5 4b 10 f0 00 	mov    $0xf0104be5,%rax$/;"	l
f010638f	obj/kern/kernel.asm	/^    f010638f:	00 00 00 $/;"	l
f0106392	obj/kern/kernel.asm	/^    f0106392:	ff d0                	callq  *%rax$/;"	l
f0106394	obj/kern/kernel.asm	/^    f0106394:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax$/;"	l
f0106398	obj/kern/kernel.asm	/^    f0106398:	74 34                	je     fffffffff01063ce <end+0xfffffffefe66502e>$/;"	l
f010639a	obj/kern/kernel.asm	/^    f010639a:	48 b9 b0 23 11 f0 00 	mov    $0xf01123b0,%rcx$/;"	l
f01063a1	obj/kern/kernel.asm	/^    f01063a1:	00 00 00 $/;"	l
f01063a4	obj/kern/kernel.asm	/^    f01063a4:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f01063ab	obj/kern/kernel.asm	/^    f01063ab:	00 00 00 $/;"	l
f01063ae	obj/kern/kernel.asm	/^    f01063ae:	be c1 04 00 00       	mov    $0x4c1,%esi$/;"	l
f01063b3	obj/kern/kernel.asm	/^    f01063b3:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f01063ba	obj/kern/kernel.asm	/^    f01063ba:	00 00 00 $/;"	l
f01063bd	obj/kern/kernel.asm	/^    f01063bd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01063c2	obj/kern/kernel.asm	/^    f01063c2:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f01063c9	obj/kern/kernel.asm	/^    f01063c9:	00 00 00 $/;"	l
f01063cc	obj/kern/kernel.asm	/^    f01063cc:	ff d3                	callq  *%rbx$/;"	l
f01063ce	obj/kern/kernel.asm	/^    f01063ce:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax$/;"	l
f01063d5	obj/kern/kernel.asm	/^    f01063d5:	0f b7 40 08          	movzwl 0x8(%rax),%eax$/;"	l
f01063d9	obj/kern/kernel.asm	/^    f01063d9:	66 85 c0             	test   %ax,%ax$/;"	l
f01063dc	obj/kern/kernel.asm	/^    f01063dc:	74 34                	je     fffffffff0106412 <end+0xfffffffefe665072>$/;"	l
f01063de	obj/kern/kernel.asm	/^    f01063de:	48 b9 d6 23 11 f0 00 	mov    $0xf01123d6,%rcx$/;"	l
f01063e5	obj/kern/kernel.asm	/^    f01063e5:	00 00 00 $/;"	l
f01063e8	obj/kern/kernel.asm	/^    f01063e8:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f01063ef	obj/kern/kernel.asm	/^    f01063ef:	00 00 00 $/;"	l
f01063f2	obj/kern/kernel.asm	/^    f01063f2:	be c2 04 00 00       	mov    $0x4c2,%esi$/;"	l
f01063f7	obj/kern/kernel.asm	/^    f01063f7:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f01063fe	obj/kern/kernel.asm	/^    f01063fe:	00 00 00 $/;"	l
f0106401	obj/kern/kernel.asm	/^    f0106401:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106406	obj/kern/kernel.asm	/^    f0106406:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f010640d	obj/kern/kernel.asm	/^    f010640d:	00 00 00 $/;"	l
f0106410	obj/kern/kernel.asm	/^    f0106410:	ff d3                	callq  *%rbx$/;"	l
f0106412	obj/kern/kernel.asm	/^    f0106412:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax$/;"	l
f0106419	obj/kern/kernel.asm	/^    f0106419:	0f b7 40 08          	movzwl 0x8(%rax),%eax$/;"	l
f010641d	obj/kern/kernel.asm	/^    f010641d:	66 83 f8 01          	cmp    $0x1,%ax$/;"	l
f0106421	obj/kern/kernel.asm	/^    f0106421:	74 34                	je     fffffffff0106457 <end+0xfffffffefe6650b7>$/;"	l
f0106423	obj/kern/kernel.asm	/^    f0106423:	48 b9 51 23 11 f0 00 	mov    $0xf0112351,%rcx$/;"	l
f010642a	obj/kern/kernel.asm	/^    f010642a:	00 00 00 $/;"	l
f010642d	obj/kern/kernel.asm	/^    f010642d:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0106434	obj/kern/kernel.asm	/^    f0106434:	00 00 00 $/;"	l
f0106437	obj/kern/kernel.asm	/^    f0106437:	be c3 04 00 00       	mov    $0x4c3,%esi$/;"	l
f010643c	obj/kern/kernel.asm	/^    f010643c:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0106443	obj/kern/kernel.asm	/^    f0106443:	00 00 00 $/;"	l
f0106446	obj/kern/kernel.asm	/^    f0106446:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010644b	obj/kern/kernel.asm	/^    f010644b:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0106452	obj/kern/kernel.asm	/^    f0106452:	00 00 00 $/;"	l
f0106455	obj/kern/kernel.asm	/^    f0106455:	ff d3                	callq  *%rbx$/;"	l
f0106457	obj/kern/kernel.asm	/^    f0106457:	48 b8 60 77 a2 f1 00 	mov    $0xf1a27760,%rax$/;"	l
f010645e	obj/kern/kernel.asm	/^    f010645e:	00 00 00 $/;"	l
f0106461	obj/kern/kernel.asm	/^    f0106461:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0106464	obj/kern/kernel.asm	/^    f0106464:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0106467	obj/kern/kernel.asm	/^    f0106467:	48 89 c3             	mov    %rax,%rbx$/;"	l
f010646a	obj/kern/kernel.asm	/^    f010646a:	48 81 e3 00 f0 ff ff 	and    $0xfffffffffffff000,%rbx$/;"	l
f0106471	obj/kern/kernel.asm	/^    f0106471:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax$/;"	l
f0106478	obj/kern/kernel.asm	/^    f0106478:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010647b	obj/kern/kernel.asm	/^    f010647b:	48 b8 00 1a 10 f0 00 	mov    $0xf0101a00,%rax$/;"	l
f0106482	obj/kern/kernel.asm	/^    f0106482:	00 00 00 $/;"	l
f0106485	obj/kern/kernel.asm	/^    f0106485:	ff d0                	callq  *%rax$/;"	l
f0106487	obj/kern/kernel.asm	/^    f0106487:	48 39 c3             	cmp    %rax,%rbx$/;"	l
f010648a	obj/kern/kernel.asm	/^    f010648a:	74 34                	je     fffffffff01064c0 <end+0xfffffffefe665120>$/;"	l
f010648c	obj/kern/kernel.asm	/^    f010648c:	48 b9 e8 23 11 f0 00 	mov    $0xf01123e8,%rcx$/;"	l
f0106493	obj/kern/kernel.asm	/^    f0106493:	00 00 00 $/;"	l
f0106496	obj/kern/kernel.asm	/^    f0106496:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f010649d	obj/kern/kernel.asm	/^    f010649d:	00 00 00 $/;"	l
f01064a0	obj/kern/kernel.asm	/^    f01064a0:	be d7 04 00 00       	mov    $0x4d7,%esi$/;"	l
f01064a5	obj/kern/kernel.asm	/^    f01064a5:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f01064ac	obj/kern/kernel.asm	/^    f01064ac:	00 00 00 $/;"	l
f01064af	obj/kern/kernel.asm	/^    f01064af:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01064b4	obj/kern/kernel.asm	/^    f01064b4:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f01064bb	obj/kern/kernel.asm	/^    f01064bb:	00 00 00 $/;"	l
f01064be	obj/kern/kernel.asm	/^    f01064be:	ff d3                	callq  *%rbx$/;"	l
f01064c0	obj/kern/kernel.asm	/^    f01064c0:	48 b8 60 77 a2 f1 00 	mov    $0xf1a27760,%rax$/;"	l
f01064c7	obj/kern/kernel.asm	/^    f01064c7:	00 00 00 $/;"	l
f01064ca	obj/kern/kernel.asm	/^    f01064ca:	48 8b 00             	mov    (%rax),%rax$/;"	l
f01064cd	obj/kern/kernel.asm	/^    f01064cd:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)$/;"	l
f01064d4	obj/kern/kernel.asm	/^    f01064d4:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax$/;"	l
f01064db	obj/kern/kernel.asm	/^    f01064db:	0f b7 40 08          	movzwl 0x8(%rax),%eax$/;"	l
f01064df	obj/kern/kernel.asm	/^    f01064df:	66 83 f8 01          	cmp    $0x1,%ax$/;"	l
f01064e3	obj/kern/kernel.asm	/^    f01064e3:	74 34                	je     fffffffff0106519 <end+0xfffffffefe665179>$/;"	l
f01064e5	obj/kern/kernel.asm	/^    f01064e5:	48 b9 51 23 11 f0 00 	mov    $0xf0112351,%rcx$/;"	l
f01064ec	obj/kern/kernel.asm	/^    f01064ec:	00 00 00 $/;"	l
f01064ef	obj/kern/kernel.asm	/^    f01064ef:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f01064f6	obj/kern/kernel.asm	/^    f01064f6:	00 00 00 $/;"	l
f01064f9	obj/kern/kernel.asm	/^    f01064f9:	be d9 04 00 00       	mov    $0x4d9,%esi$/;"	l
f01064fe	obj/kern/kernel.asm	/^    f01064fe:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0106505	obj/kern/kernel.asm	/^    f0106505:	00 00 00 $/;"	l
f0106508	obj/kern/kernel.asm	/^    f0106508:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010650d	obj/kern/kernel.asm	/^    f010650d:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0106514	obj/kern/kernel.asm	/^    f0106514:	00 00 00 $/;"	l
f0106517	obj/kern/kernel.asm	/^    f0106517:	ff d3                	callq  *%rbx$/;"	l
f0106519	obj/kern/kernel.asm	/^    f0106519:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax$/;"	l
f0106520	obj/kern/kernel.asm	/^    f0106520:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0106523	obj/kern/kernel.asm	/^    f0106523:	48 b8 2b 29 10 f0 00 	mov    $0xf010292b,%rax$/;"	l
f010652a	obj/kern/kernel.asm	/^    f010652a:	00 00 00 $/;"	l
f010652d	obj/kern/kernel.asm	/^    f010652d:	ff d0                	callq  *%rax$/;"	l
f010652f	obj/kern/kernel.asm	/^    f010652f:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax$/;"	l
f0106536	obj/kern/kernel.asm	/^    f0106536:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0106539	obj/kern/kernel.asm	/^    f0106539:	48 b8 2b 29 10 f0 00 	mov    $0xf010292b,%rax$/;"	l
f0106540	obj/kern/kernel.asm	/^    f0106540:	00 00 00 $/;"	l
f0106543	obj/kern/kernel.asm	/^    f0106543:	ff d0                	callq  *%rax$/;"	l
f0106545	obj/kern/kernel.asm	/^    f0106545:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax$/;"	l
f010654c	obj/kern/kernel.asm	/^    f010654c:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010654f	obj/kern/kernel.asm	/^    f010654f:	48 b8 2b 29 10 f0 00 	mov    $0xf010292b,%rax$/;"	l
f0106556	obj/kern/kernel.asm	/^    f0106556:	00 00 00 $/;"	l
f0106559	obj/kern/kernel.asm	/^    f0106559:	ff d0                	callq  *%rax$/;"	l
f010655b	obj/kern/kernel.asm	/^    f010655b:	48 c7 85 40 ff ff ff 	movq   $0x64000,-0xc0(%rbp)$/;"	l
f0106562	obj/kern/kernel.asm	/^    f0106562:	00 40 06 00 $/;"	l
f0106566	obj/kern/kernel.asm	/^    f0106566:	48 b8 60 77 a2 f1 00 	mov    $0xf1a27760,%rax$/;"	l
f010656d	obj/kern/kernel.asm	/^    f010656d:	00 00 00 $/;"	l
f0106570	obj/kern/kernel.asm	/^    f0106570:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0106573	obj/kern/kernel.asm	/^    f0106573:	48 8b 8d 40 ff ff ff 	mov    -0xc0(%rbp),%rcx$/;"	l
f010657a	obj/kern/kernel.asm	/^    f010657a:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
f010657f	obj/kern/kernel.asm	/^    f010657f:	48 89 ce             	mov    %rcx,%rsi$/;"	l
f0106582	obj/kern/kernel.asm	/^    f0106582:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0106585	obj/kern/kernel.asm	/^    f0106585:	48 b8 6c 29 10 f0 00 	mov    $0xf010296c,%rax$/;"	l
f010658c	obj/kern/kernel.asm	/^    f010658c:	00 00 00 $/;"	l
f010658f	obj/kern/kernel.asm	/^    f010658f:	ff d0                	callq  *%rax$/;"	l
f0106591	obj/kern/kernel.asm	/^    f0106591:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)$/;"	l
f0106598	obj/kern/kernel.asm	/^    f0106598:	48 b8 60 77 a2 f1 00 	mov    $0xf1a27760,%rax$/;"	l
f010659f	obj/kern/kernel.asm	/^    f010659f:	00 00 00 $/;"	l
f01065a2	obj/kern/kernel.asm	/^    f01065a2:	48 8b 00             	mov    (%rax),%rax$/;"	l
f01065a5	obj/kern/kernel.asm	/^    f01065a5:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx$/;"	l
f01065ac	obj/kern/kernel.asm	/^    f01065ac:	48 c1 ea 27          	shr    $0x27,%rdx$/;"	l
f01065b0	obj/kern/kernel.asm	/^    f01065b0:	81 e2 ff 01 00 00    	and    $0x1ff,%edx$/;"	l
f01065b6	obj/kern/kernel.asm	/^    f01065b6:	48 c1 e2 03          	shl    $0x3,%rdx$/;"	l
f01065ba	obj/kern/kernel.asm	/^    f01065ba:	48 01 d0             	add    %rdx,%rax$/;"	l
f01065bd	obj/kern/kernel.asm	/^    f01065bd:	48 8b 00             	mov    (%rax),%rax$/;"	l
f01065c0	obj/kern/kernel.asm	/^    f01065c0:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
f01065c6	obj/kern/kernel.asm	/^    f01065c6:	48 89 45 90          	mov    %rax,-0x70(%rbp)$/;"	l
f01065ca	obj/kern/kernel.asm	/^    f01065ca:	48 8b 45 90          	mov    -0x70(%rbp),%rax$/;"	l
f01065ce	obj/kern/kernel.asm	/^    f01065ce:	48 c1 e8 0c          	shr    $0xc,%rax$/;"	l
f01065d2	obj/kern/kernel.asm	/^    f01065d2:	89 45 9c             	mov    %eax,-0x64(%rbp)$/;"	l
f01065d5	obj/kern/kernel.asm	/^    f01065d5:	8b 55 9c             	mov    -0x64(%rbp),%edx$/;"	l
f01065d8	obj/kern/kernel.asm	/^    f01065d8:	48 b8 68 77 a2 f1 00 	mov    $0xf1a27768,%rax$/;"	l
f01065df	obj/kern/kernel.asm	/^    f01065df:	00 00 00 $/;"	l
f01065e2	obj/kern/kernel.asm	/^    f01065e2:	48 8b 00             	mov    (%rax),%rax$/;"	l
f01065e5	obj/kern/kernel.asm	/^    f01065e5:	48 39 c2             	cmp    %rax,%rdx$/;"	l
f01065e8	obj/kern/kernel.asm	/^    f01065e8:	72 31                	jb     fffffffff010661b <end+0xfffffffefe66527b>$/;"	l
f01065ea	obj/kern/kernel.asm	/^    f01065ea:	48 8b 45 90          	mov    -0x70(%rbp),%rax$/;"	l
f01065ee	obj/kern/kernel.asm	/^    f01065ee:	48 89 c1             	mov    %rax,%rcx$/;"	l
f01065f1	obj/kern/kernel.asm	/^    f01065f1:	48 ba 78 18 11 f0 00 	mov    $0xf0111878,%rdx$/;"	l
f01065f8	obj/kern/kernel.asm	/^    f01065f8:	00 00 00 $/;"	l
f01065fb	obj/kern/kernel.asm	/^    f01065fb:	be e0 04 00 00       	mov    $0x4e0,%esi$/;"	l
f0106600	obj/kern/kernel.asm	/^    f0106600:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0106607	obj/kern/kernel.asm	/^    f0106607:	00 00 00 $/;"	l
f010660a	obj/kern/kernel.asm	/^    f010660a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010660f	obj/kern/kernel.asm	/^    f010660f:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0106616	obj/kern/kernel.asm	/^    f0106616:	00 00 00 $/;"	l
f0106619	obj/kern/kernel.asm	/^    f0106619:	ff d3                	callq  *%rbx$/;"	l
f010661b	obj/kern/kernel.asm	/^    f010661b:	b8 00 00 00 f0       	mov    $0xf0000000,%eax$/;"	l
f0106620	obj/kern/kernel.asm	/^    f0106620:	48 03 45 90          	add    -0x70(%rbp),%rax$/;"	l
f0106624	obj/kern/kernel.asm	/^    f0106624:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)$/;"	l
f010662b	obj/kern/kernel.asm	/^    f010662b:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax$/;"	l
f0106632	obj/kern/kernel.asm	/^    f0106632:	48 c1 e8 1e          	shr    $0x1e,%rax$/;"	l
f0106636	obj/kern/kernel.asm	/^    f0106636:	25 ff 01 00 00       	and    $0x1ff,%eax$/;"	l
f010663b	obj/kern/kernel.asm	/^    f010663b:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f010663f	obj/kern/kernel.asm	/^    f010663f:	48 03 85 30 ff ff ff 	add    -0xd0(%rbp),%rax$/;"	l
f0106646	obj/kern/kernel.asm	/^    f0106646:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0106649	obj/kern/kernel.asm	/^    f0106649:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
f010664f	obj/kern/kernel.asm	/^    f010664f:	48 89 45 a0          	mov    %rax,-0x60(%rbp)$/;"	l
f0106653	obj/kern/kernel.asm	/^    f0106653:	48 8b 45 a0          	mov    -0x60(%rbp),%rax$/;"	l
f0106657	obj/kern/kernel.asm	/^    f0106657:	48 c1 e8 0c          	shr    $0xc,%rax$/;"	l
f010665b	obj/kern/kernel.asm	/^    f010665b:	89 45 ac             	mov    %eax,-0x54(%rbp)$/;"	l
f010665e	obj/kern/kernel.asm	/^    f010665e:	8b 55 ac             	mov    -0x54(%rbp),%edx$/;"	l
f0106661	obj/kern/kernel.asm	/^    f0106661:	48 b8 68 77 a2 f1 00 	mov    $0xf1a27768,%rax$/;"	l
f0106668	obj/kern/kernel.asm	/^    f0106668:	00 00 00 $/;"	l
f010666b	obj/kern/kernel.asm	/^    f010666b:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010666e	obj/kern/kernel.asm	/^    f010666e:	48 39 c2             	cmp    %rax,%rdx$/;"	l
f0106671	obj/kern/kernel.asm	/^    f0106671:	72 31                	jb     fffffffff01066a4 <end+0xfffffffefe665304>$/;"	l
f0106673	obj/kern/kernel.asm	/^    f0106673:	48 8b 45 a0          	mov    -0x60(%rbp),%rax$/;"	l
f0106677	obj/kern/kernel.asm	/^    f0106677:	48 89 c1             	mov    %rax,%rcx$/;"	l
f010667a	obj/kern/kernel.asm	/^    f010667a:	48 ba 78 18 11 f0 00 	mov    $0xf0111878,%rdx$/;"	l
f0106681	obj/kern/kernel.asm	/^    f0106681:	00 00 00 $/;"	l
f0106684	obj/kern/kernel.asm	/^    f0106684:	be e1 04 00 00       	mov    $0x4e1,%esi$/;"	l
f0106689	obj/kern/kernel.asm	/^    f0106689:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0106690	obj/kern/kernel.asm	/^    f0106690:	00 00 00 $/;"	l
f0106693	obj/kern/kernel.asm	/^    f0106693:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106698	obj/kern/kernel.asm	/^    f0106698:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f010669f	obj/kern/kernel.asm	/^    f010669f:	00 00 00 $/;"	l
f01066a2	obj/kern/kernel.asm	/^    f01066a2:	ff d3                	callq  *%rbx$/;"	l
f01066a4	obj/kern/kernel.asm	/^    f01066a4:	b8 00 00 00 f0       	mov    $0xf0000000,%eax$/;"	l
f01066a9	obj/kern/kernel.asm	/^    f01066a9:	48 03 45 a0          	add    -0x60(%rbp),%rax$/;"	l
f01066ad	obj/kern/kernel.asm	/^    f01066ad:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)$/;"	l
f01066b4	obj/kern/kernel.asm	/^    f01066b4:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax$/;"	l
f01066bb	obj/kern/kernel.asm	/^    f01066bb:	48 c1 e8 15          	shr    $0x15,%rax$/;"	l
f01066bf	obj/kern/kernel.asm	/^    f01066bf:	25 ff 01 00 00       	and    $0x1ff,%eax$/;"	l
f01066c4	obj/kern/kernel.asm	/^    f01066c4:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f01066c8	obj/kern/kernel.asm	/^    f01066c8:	48 03 85 38 ff ff ff 	add    -0xc8(%rbp),%rax$/;"	l
f01066cf	obj/kern/kernel.asm	/^    f01066cf:	48 8b 00             	mov    (%rax),%rax$/;"	l
f01066d2	obj/kern/kernel.asm	/^    f01066d2:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
f01066d8	obj/kern/kernel.asm	/^    f01066d8:	48 89 45 b0          	mov    %rax,-0x50(%rbp)$/;"	l
f01066dc	obj/kern/kernel.asm	/^    f01066dc:	48 8b 45 b0          	mov    -0x50(%rbp),%rax$/;"	l
f01066e0	obj/kern/kernel.asm	/^    f01066e0:	48 c1 e8 0c          	shr    $0xc,%rax$/;"	l
f01066e4	obj/kern/kernel.asm	/^    f01066e4:	89 45 bc             	mov    %eax,-0x44(%rbp)$/;"	l
f01066e7	obj/kern/kernel.asm	/^    f01066e7:	8b 55 bc             	mov    -0x44(%rbp),%edx$/;"	l
f01066ea	obj/kern/kernel.asm	/^    f01066ea:	48 b8 68 77 a2 f1 00 	mov    $0xf1a27768,%rax$/;"	l
f01066f1	obj/kern/kernel.asm	/^    f01066f1:	00 00 00 $/;"	l
f01066f4	obj/kern/kernel.asm	/^    f01066f4:	48 8b 00             	mov    (%rax),%rax$/;"	l
f01066f7	obj/kern/kernel.asm	/^    f01066f7:	48 39 c2             	cmp    %rax,%rdx$/;"	l
f01066fa	obj/kern/kernel.asm	/^    f01066fa:	72 31                	jb     fffffffff010672d <end+0xfffffffefe66538d>$/;"	l
f01066fc	obj/kern/kernel.asm	/^    f01066fc:	48 8b 45 b0          	mov    -0x50(%rbp),%rax$/;"	l
f0106700	obj/kern/kernel.asm	/^    f0106700:	48 89 c1             	mov    %rax,%rcx$/;"	l
f0106703	obj/kern/kernel.asm	/^    f0106703:	48 ba 78 18 11 f0 00 	mov    $0xf0111878,%rdx$/;"	l
f010670a	obj/kern/kernel.asm	/^    f010670a:	00 00 00 $/;"	l
f010670d	obj/kern/kernel.asm	/^    f010670d:	be e2 04 00 00       	mov    $0x4e2,%esi$/;"	l
f0106712	obj/kern/kernel.asm	/^    f0106712:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0106719	obj/kern/kernel.asm	/^    f0106719:	00 00 00 $/;"	l
f010671c	obj/kern/kernel.asm	/^    f010671c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106721	obj/kern/kernel.asm	/^    f0106721:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0106728	obj/kern/kernel.asm	/^    f0106728:	00 00 00 $/;"	l
f010672b	obj/kern/kernel.asm	/^    f010672b:	ff d3                	callq  *%rbx$/;"	l
f010672d	obj/kern/kernel.asm	/^    f010672d:	b8 00 00 00 f0       	mov    $0xf0000000,%eax$/;"	l
f0106732	obj/kern/kernel.asm	/^    f0106732:	48 03 45 b0          	add    -0x50(%rbp),%rax$/;"	l
f0106736	obj/kern/kernel.asm	/^    f0106736:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)$/;"	l
f010673d	obj/kern/kernel.asm	/^    f010673d:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax$/;"	l
f0106744	obj/kern/kernel.asm	/^    f0106744:	48 c1 e8 0c          	shr    $0xc,%rax$/;"	l
f0106748	obj/kern/kernel.asm	/^    f0106748:	25 ff 01 00 00       	and    $0x1ff,%eax$/;"	l
f010674d	obj/kern/kernel.asm	/^    f010674d:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f0106751	obj/kern/kernel.asm	/^    f0106751:	48 89 c2             	mov    %rax,%rdx$/;"	l
f0106754	obj/kern/kernel.asm	/^    f0106754:	48 03 95 28 ff ff ff 	add    -0xd8(%rbp),%rdx$/;"	l
f010675b	obj/kern/kernel.asm	/^    f010675b:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax$/;"	l
f0106762	obj/kern/kernel.asm	/^    f0106762:	48 39 c2             	cmp    %rax,%rdx$/;"	l
f0106765	obj/kern/kernel.asm	/^    f0106765:	74 34                	je     fffffffff010679b <end+0xfffffffefe6653fb>$/;"	l
f0106767	obj/kern/kernel.asm	/^    f0106767:	48 b9 10 24 11 f0 00 	mov    $0xf0112410,%rcx$/;"	l
f010676e	obj/kern/kernel.asm	/^    f010676e:	00 00 00 $/;"	l
f0106771	obj/kern/kernel.asm	/^    f0106771:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0106778	obj/kern/kernel.asm	/^    f0106778:	00 00 00 $/;"	l
f010677b	obj/kern/kernel.asm	/^    f010677b:	be e3 04 00 00       	mov    $0x4e3,%esi$/;"	l
f0106780	obj/kern/kernel.asm	/^    f0106780:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0106787	obj/kern/kernel.asm	/^    f0106787:	00 00 00 $/;"	l
f010678a	obj/kern/kernel.asm	/^    f010678a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010678f	obj/kern/kernel.asm	/^    f010678f:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0106796	obj/kern/kernel.asm	/^    f0106796:	00 00 00 $/;"	l
f0106799	obj/kern/kernel.asm	/^    f0106799:	ff d3                	callq  *%rbx$/;"	l
f010679b	obj/kern/kernel.asm	/^    f010679b:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax$/;"	l
f01067a2	obj/kern/kernel.asm	/^    f01067a2:	48 89 c7             	mov    %rax,%rdi$/;"	l
f01067a5	obj/kern/kernel.asm	/^    f01067a5:	48 b8 2b 29 10 f0 00 	mov    $0xf010292b,%rax$/;"	l
f01067ac	obj/kern/kernel.asm	/^    f01067ac:	00 00 00 $/;"	l
f01067af	obj/kern/kernel.asm	/^    f01067af:	ff d0                	callq  *%rax$/;"	l
f01067b1	obj/kern/kernel.asm	/^    f01067b1:	48 8b 85 10 ff ff ff 	mov    -0xf0(%rbp),%rax$/;"	l
f01067b8	obj/kern/kernel.asm	/^    f01067b8:	48 89 c7             	mov    %rax,%rdi$/;"	l
f01067bb	obj/kern/kernel.asm	/^    f01067bb:	48 b8 96 1a 10 f0 00 	mov    $0xf0101a96,%rax$/;"	l
f01067c2	obj/kern/kernel.asm	/^    f01067c2:	00 00 00 $/;"	l
f01067c5	obj/kern/kernel.asm	/^    f01067c5:	ff d0                	callq  *%rax$/;"	l
f01067c7	obj/kern/kernel.asm	/^    f01067c7:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
f01067cc	obj/kern/kernel.asm	/^    f01067cc:	be ff 00 00 00       	mov    $0xff,%esi$/;"	l
f01067d1	obj/kern/kernel.asm	/^    f01067d1:	48 89 c7             	mov    %rax,%rdi$/;"	l
f01067d4	obj/kern/kernel.asm	/^    f01067d4:	48 b8 42 ee 10 f0 00 	mov    $0xf010ee42,%rax$/;"	l
f01067db	obj/kern/kernel.asm	/^    f01067db:	00 00 00 $/;"	l
f01067de	obj/kern/kernel.asm	/^    f01067de:	ff d0                	callq  *%rax$/;"	l
f01067e0	obj/kern/kernel.asm	/^    f01067e0:	48 b8 60 77 a2 f1 00 	mov    $0xf1a27760,%rax$/;"	l
f01067e7	obj/kern/kernel.asm	/^    f01067e7:	00 00 00 $/;"	l
f01067ea	obj/kern/kernel.asm	/^    f01067ea:	48 8b 00             	mov    (%rax),%rax$/;"	l
f01067ed	obj/kern/kernel.asm	/^    f01067ed:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
f01067f2	obj/kern/kernel.asm	/^    f01067f2:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01067f7	obj/kern/kernel.asm	/^    f01067f7:	48 89 c7             	mov    %rax,%rdi$/;"	l
f01067fa	obj/kern/kernel.asm	/^    f01067fa:	48 b8 6c 29 10 f0 00 	mov    $0xf010296c,%rax$/;"	l
f0106801	obj/kern/kernel.asm	/^    f0106801:	00 00 00 $/;"	l
f0106804	obj/kern/kernel.asm	/^    f0106804:	ff d0                	callq  *%rax$/;"	l
f0106806	obj/kern/kernel.asm	/^    f0106806:	48 b8 60 77 a2 f1 00 	mov    $0xf1a27760,%rax$/;"	l
f010680d	obj/kern/kernel.asm	/^    f010680d:	00 00 00 $/;"	l
f0106810	obj/kern/kernel.asm	/^    f0106810:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0106813	obj/kern/kernel.asm	/^    f0106813:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0106816	obj/kern/kernel.asm	/^    f0106816:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
f010681c	obj/kern/kernel.asm	/^    f010681c:	48 89 45 c0          	mov    %rax,-0x40(%rbp)$/;"	l
f0106820	obj/kern/kernel.asm	/^    f0106820:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
f0106824	obj/kern/kernel.asm	/^    f0106824:	48 c1 e8 0c          	shr    $0xc,%rax$/;"	l
f0106828	obj/kern/kernel.asm	/^    f0106828:	89 45 cc             	mov    %eax,-0x34(%rbp)$/;"	l
f010682b	obj/kern/kernel.asm	/^    f010682b:	8b 55 cc             	mov    -0x34(%rbp),%edx$/;"	l
f010682e	obj/kern/kernel.asm	/^    f010682e:	48 b8 68 77 a2 f1 00 	mov    $0xf1a27768,%rax$/;"	l
f0106835	obj/kern/kernel.asm	/^    f0106835:	00 00 00 $/;"	l
f0106838	obj/kern/kernel.asm	/^    f0106838:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010683b	obj/kern/kernel.asm	/^    f010683b:	48 39 c2             	cmp    %rax,%rdx$/;"	l
f010683e	obj/kern/kernel.asm	/^    f010683e:	72 31                	jb     fffffffff0106871 <end+0xfffffffefe6654d1>$/;"	l
f0106840	obj/kern/kernel.asm	/^    f0106840:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
f0106844	obj/kern/kernel.asm	/^    f0106844:	48 89 c1             	mov    %rax,%rcx$/;"	l
f0106847	obj/kern/kernel.asm	/^    f0106847:	48 ba 78 18 11 f0 00 	mov    $0xf0111878,%rdx$/;"	l
f010684e	obj/kern/kernel.asm	/^    f010684e:	00 00 00 $/;"	l
f0106851	obj/kern/kernel.asm	/^    f0106851:	be e9 04 00 00       	mov    $0x4e9,%esi$/;"	l
f0106856	obj/kern/kernel.asm	/^    f0106856:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f010685d	obj/kern/kernel.asm	/^    f010685d:	00 00 00 $/;"	l
f0106860	obj/kern/kernel.asm	/^    f0106860:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106865	obj/kern/kernel.asm	/^    f0106865:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f010686c	obj/kern/kernel.asm	/^    f010686c:	00 00 00 $/;"	l
f010686f	obj/kern/kernel.asm	/^    f010686f:	ff d3                	callq  *%rbx$/;"	l
f0106871	obj/kern/kernel.asm	/^    f0106871:	b8 00 00 00 f0       	mov    $0xf0000000,%eax$/;"	l
f0106876	obj/kern/kernel.asm	/^    f0106876:	48 03 45 c0          	add    -0x40(%rbp),%rax$/;"	l
f010687a	obj/kern/kernel.asm	/^    f010687a:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)$/;"	l
f0106881	obj/kern/kernel.asm	/^    f0106881:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax$/;"	l
f0106888	obj/kern/kernel.asm	/^    f0106888:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010688b	obj/kern/kernel.asm	/^    f010688b:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
f0106891	obj/kern/kernel.asm	/^    f0106891:	48 89 45 d0          	mov    %rax,-0x30(%rbp)$/;"	l
f0106895	obj/kern/kernel.asm	/^    f0106895:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f0106899	obj/kern/kernel.asm	/^    f0106899:	48 c1 e8 0c          	shr    $0xc,%rax$/;"	l
f010689d	obj/kern/kernel.asm	/^    f010689d:	89 45 dc             	mov    %eax,-0x24(%rbp)$/;"	l
f01068a0	obj/kern/kernel.asm	/^    f01068a0:	8b 55 dc             	mov    -0x24(%rbp),%edx$/;"	l
f01068a3	obj/kern/kernel.asm	/^    f01068a3:	48 b8 68 77 a2 f1 00 	mov    $0xf1a27768,%rax$/;"	l
f01068aa	obj/kern/kernel.asm	/^    f01068aa:	00 00 00 $/;"	l
f01068ad	obj/kern/kernel.asm	/^    f01068ad:	48 8b 00             	mov    (%rax),%rax$/;"	l
f01068b0	obj/kern/kernel.asm	/^    f01068b0:	48 39 c2             	cmp    %rax,%rdx$/;"	l
f01068b3	obj/kern/kernel.asm	/^    f01068b3:	72 31                	jb     fffffffff01068e6 <end+0xfffffffefe665546>$/;"	l
f01068b5	obj/kern/kernel.asm	/^    f01068b5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f01068b9	obj/kern/kernel.asm	/^    f01068b9:	48 89 c1             	mov    %rax,%rcx$/;"	l
f01068bc	obj/kern/kernel.asm	/^    f01068bc:	48 ba 78 18 11 f0 00 	mov    $0xf0111878,%rdx$/;"	l
f01068c3	obj/kern/kernel.asm	/^    f01068c3:	00 00 00 $/;"	l
f01068c6	obj/kern/kernel.asm	/^    f01068c6:	be ea 04 00 00       	mov    $0x4ea,%esi$/;"	l
f01068cb	obj/kern/kernel.asm	/^    f01068cb:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f01068d2	obj/kern/kernel.asm	/^    f01068d2:	00 00 00 $/;"	l
f01068d5	obj/kern/kernel.asm	/^    f01068d5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01068da	obj/kern/kernel.asm	/^    f01068da:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f01068e1	obj/kern/kernel.asm	/^    f01068e1:	00 00 00 $/;"	l
f01068e4	obj/kern/kernel.asm	/^    f01068e4:	ff d3                	callq  *%rbx$/;"	l
f01068e6	obj/kern/kernel.asm	/^    f01068e6:	b8 00 00 00 f0       	mov    $0xf0000000,%eax$/;"	l
f01068eb	obj/kern/kernel.asm	/^    f01068eb:	48 03 45 d0          	add    -0x30(%rbp),%rax$/;"	l
f01068ef	obj/kern/kernel.asm	/^    f01068ef:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)$/;"	l
f01068f6	obj/kern/kernel.asm	/^    f01068f6:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax$/;"	l
f01068fd	obj/kern/kernel.asm	/^    f01068fd:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0106900	obj/kern/kernel.asm	/^    f0106900:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
f0106906	obj/kern/kernel.asm	/^    f0106906:	48 89 45 e0          	mov    %rax,-0x20(%rbp)$/;"	l
f010690a	obj/kern/kernel.asm	/^    f010690a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
f010690e	obj/kern/kernel.asm	/^    f010690e:	48 c1 e8 0c          	shr    $0xc,%rax$/;"	l
f0106912	obj/kern/kernel.asm	/^    f0106912:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
f0106915	obj/kern/kernel.asm	/^    f0106915:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
f0106918	obj/kern/kernel.asm	/^    f0106918:	48 b8 68 77 a2 f1 00 	mov    $0xf1a27768,%rax$/;"	l
f010691f	obj/kern/kernel.asm	/^    f010691f:	00 00 00 $/;"	l
f0106922	obj/kern/kernel.asm	/^    f0106922:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0106925	obj/kern/kernel.asm	/^    f0106925:	48 39 c2             	cmp    %rax,%rdx$/;"	l
f0106928	obj/kern/kernel.asm	/^    f0106928:	72 31                	jb     fffffffff010695b <end+0xfffffffefe6655bb>$/;"	l
f010692a	obj/kern/kernel.asm	/^    f010692a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
f010692e	obj/kern/kernel.asm	/^    f010692e:	48 89 c1             	mov    %rax,%rcx$/;"	l
f0106931	obj/kern/kernel.asm	/^    f0106931:	48 ba 78 18 11 f0 00 	mov    $0xf0111878,%rdx$/;"	l
f0106938	obj/kern/kernel.asm	/^    f0106938:	00 00 00 $/;"	l
f010693b	obj/kern/kernel.asm	/^    f010693b:	be eb 04 00 00       	mov    $0x4eb,%esi$/;"	l
f0106940	obj/kern/kernel.asm	/^    f0106940:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0106947	obj/kern/kernel.asm	/^    f0106947:	00 00 00 $/;"	l
f010694a	obj/kern/kernel.asm	/^    f010694a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010694f	obj/kern/kernel.asm	/^    f010694f:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0106956	obj/kern/kernel.asm	/^    f0106956:	00 00 00 $/;"	l
f0106959	obj/kern/kernel.asm	/^    f0106959:	ff d3                	callq  *%rbx$/;"	l
f010695b	obj/kern/kernel.asm	/^    f010695b:	b8 00 00 00 f0       	mov    $0xf0000000,%eax$/;"	l
f0106960	obj/kern/kernel.asm	/^    f0106960:	48 03 45 e0          	add    -0x20(%rbp),%rax$/;"	l
f0106964	obj/kern/kernel.asm	/^    f0106964:	48 89 85 e8 fe ff ff 	mov    %rax,-0x118(%rbp)$/;"	l
f010696b	obj/kern/kernel.asm	/^    f010696b:	c7 85 4c ff ff ff 00 	movl   $0x0,-0xb4(%rbp)$/;"	l
f0106972	obj/kern/kernel.asm	/^    f0106972:	00 00 00 $/;"	l
f0106975	obj/kern/kernel.asm	/^    f0106975:	eb 5d                	jmp    fffffffff01069d4 <end+0xfffffffefe665634>$/;"	l
f0106977	obj/kern/kernel.asm	/^    f0106977:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax$/;"	l
f010697e	obj/kern/kernel.asm	/^    f010697e:	8b 95 4c ff ff ff    	mov    -0xb4(%rbp),%edx$/;"	l
f0106984	obj/kern/kernel.asm	/^    f0106984:	48 63 d2             	movslq %edx,%rdx$/;"	l
f0106987	obj/kern/kernel.asm	/^    f0106987:	48 c1 e2 03          	shl    $0x3,%rdx$/;"	l
f010698b	obj/kern/kernel.asm	/^    f010698b:	48 01 d0             	add    %rdx,%rax$/;"	l
f010698e	obj/kern/kernel.asm	/^    f010698e:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0106991	obj/kern/kernel.asm	/^    f0106991:	83 e0 01             	and    $0x1,%eax$/;"	l
f0106994	obj/kern/kernel.asm	/^    f0106994:	48 85 c0             	test   %rax,%rax$/;"	l
f0106997	obj/kern/kernel.asm	/^    f0106997:	74 34                	je     fffffffff01069cd <end+0xfffffffefe66562d>$/;"	l
f0106999	obj/kern/kernel.asm	/^    f0106999:	48 b9 28 24 11 f0 00 	mov    $0xf0112428,%rcx$/;"	l
f01069a0	obj/kern/kernel.asm	/^    f01069a0:	00 00 00 $/;"	l
f01069a3	obj/kern/kernel.asm	/^    f01069a3:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f01069aa	obj/kern/kernel.asm	/^    f01069aa:	00 00 00 $/;"	l
f01069ad	obj/kern/kernel.asm	/^    f01069ad:	be ed 04 00 00       	mov    $0x4ed,%esi$/;"	l
f01069b2	obj/kern/kernel.asm	/^    f01069b2:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f01069b9	obj/kern/kernel.asm	/^    f01069b9:	00 00 00 $/;"	l
f01069bc	obj/kern/kernel.asm	/^    f01069bc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01069c1	obj/kern/kernel.asm	/^    f01069c1:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f01069c8	obj/kern/kernel.asm	/^    f01069c8:	00 00 00 $/;"	l
f01069cb	obj/kern/kernel.asm	/^    f01069cb:	ff d3                	callq  *%rbx$/;"	l
f01069cd	obj/kern/kernel.asm	/^    f01069cd:	83 85 4c ff ff ff 01 	addl   $0x1,-0xb4(%rbp)$/;"	l
f01069d4	obj/kern/kernel.asm	/^    f01069d4:	81 bd 4c ff ff ff ff 	cmpl   $0x1ff,-0xb4(%rbp)$/;"	l
f01069db	obj/kern/kernel.asm	/^    f01069db:	01 00 00 $/;"	l
f01069de	obj/kern/kernel.asm	/^    f01069de:	7e 97                	jle    fffffffff0106977 <end+0xfffffffefe6655d7>$/;"	l
f01069e0	obj/kern/kernel.asm	/^    f01069e0:	48 b8 60 77 a2 f1 00 	mov    $0xf1a27760,%rax$/;"	l
f01069e7	obj/kern/kernel.asm	/^    f01069e7:	00 00 00 $/;"	l
f01069ea	obj/kern/kernel.asm	/^    f01069ea:	48 8b 00             	mov    (%rax),%rax$/;"	l
f01069ed	obj/kern/kernel.asm	/^    f01069ed:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)$/;"	l
f01069f4	obj/kern/kernel.asm	/^    f01069f4:	48 b8 38 62 a2 f1 00 	mov    $0xf1a26238,%rax$/;"	l
f01069fb	obj/kern/kernel.asm	/^    f01069fb:	00 00 00 $/;"	l
f01069fe	obj/kern/kernel.asm	/^    f01069fe:	48 8b 95 20 ff ff ff 	mov    -0xe0(%rbp),%rdx$/;"	l
f0106a05	obj/kern/kernel.asm	/^    f0106a05:	48 89 10             	mov    %rdx,(%rax)$/;"	l
f0106a08	obj/kern/kernel.asm	/^    f0106a08:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax$/;"	l
f0106a0f	obj/kern/kernel.asm	/^    f0106a0f:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0106a12	obj/kern/kernel.asm	/^    f0106a12:	48 b8 2b 29 10 f0 00 	mov    $0xf010292b,%rax$/;"	l
f0106a19	obj/kern/kernel.asm	/^    f0106a19:	00 00 00 $/;"	l
f0106a1c	obj/kern/kernel.asm	/^    f0106a1c:	ff d0                	callq  *%rax$/;"	l
f0106a1e	obj/kern/kernel.asm	/^    f0106a1e:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax$/;"	l
f0106a25	obj/kern/kernel.asm	/^    f0106a25:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0106a28	obj/kern/kernel.asm	/^    f0106a28:	48 b8 2b 29 10 f0 00 	mov    $0xf010292b,%rax$/;"	l
f0106a2f	obj/kern/kernel.asm	/^    f0106a2f:	00 00 00 $/;"	l
f0106a32	obj/kern/kernel.asm	/^    f0106a32:	ff d0                	callq  *%rax$/;"	l
f0106a34	obj/kern/kernel.asm	/^    f0106a34:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax$/;"	l
f0106a3b	obj/kern/kernel.asm	/^    f0106a3b:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0106a3e	obj/kern/kernel.asm	/^    f0106a3e:	48 b8 2b 29 10 f0 00 	mov    $0xf010292b,%rax$/;"	l
f0106a45	obj/kern/kernel.asm	/^    f0106a45:	00 00 00 $/;"	l
f0106a48	obj/kern/kernel.asm	/^    f0106a48:	ff d0                	callq  *%rax$/;"	l
f0106a4a	obj/kern/kernel.asm	/^    f0106a4a:	be 01 10 00 00       	mov    $0x1001,%esi$/;"	l
f0106a4f	obj/kern/kernel.asm	/^    f0106a4f:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0106a54	obj/kern/kernel.asm	/^    f0106a54:	48 b8 61 32 10 f0 00 	mov    $0xf0103261,%rax$/;"	l
f0106a5b	obj/kern/kernel.asm	/^    f0106a5b:	00 00 00 $/;"	l
f0106a5e	obj/kern/kernel.asm	/^    f0106a5e:	ff d0                	callq  *%rax$/;"	l
f0106a60	obj/kern/kernel.asm	/^    f0106a60:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)$/;"	l
f0106a67	obj/kern/kernel.asm	/^    f0106a67:	be 00 10 00 00       	mov    $0x1000,%esi$/;"	l
f0106a6c	obj/kern/kernel.asm	/^    f0106a6c:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0106a71	obj/kern/kernel.asm	/^    f0106a71:	48 b8 61 32 10 f0 00 	mov    $0xf0103261,%rax$/;"	l
f0106a78	obj/kern/kernel.asm	/^    f0106a78:	00 00 00 $/;"	l
f0106a7b	obj/kern/kernel.asm	/^    f0106a7b:	ff d0                	callq  *%rax$/;"	l
f0106a7d	obj/kern/kernel.asm	/^    f0106a7d:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)$/;"	l
f0106a84	obj/kern/kernel.asm	/^    f0106a84:	b8 ff ff bf ef       	mov    $0xefbfffff,%eax$/;"	l
f0106a89	obj/kern/kernel.asm	/^    f0106a89:	48 39 85 50 ff ff ff 	cmp    %rax,-0xb0(%rbp)$/;"	l
f0106a90	obj/kern/kernel.asm	/^    f0106a90:	76 18                	jbe    fffffffff0106aaa <end+0xfffffffefe66570a>$/;"	l
f0106a92	obj/kern/kernel.asm	/^    f0106a92:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax$/;"	l
f0106a99	obj/kern/kernel.asm	/^    f0106a99:	48 8d 90 a0 1f 00 00 	lea    0x1fa0(%rax),%rdx$/;"	l
f0106aa0	obj/kern/kernel.asm	/^    f0106aa0:	b8 ff ff df ef       	mov    $0xefdfffff,%eax$/;"	l
f0106aa5	obj/kern/kernel.asm	/^    f0106aa5:	48 39 c2             	cmp    %rax,%rdx$/;"	l
f0106aa8	obj/kern/kernel.asm	/^    f0106aa8:	76 34                	jbe    fffffffff0106ade <end+0xfffffffefe66573e>$/;"	l
f0106aaa	obj/kern/kernel.asm	/^    f0106aaa:	48 b9 40 24 11 f0 00 	mov    $0xf0112440,%rcx$/;"	l
f0106ab1	obj/kern/kernel.asm	/^    f0106ab1:	00 00 00 $/;"	l
f0106ab4	obj/kern/kernel.asm	/^    f0106ab4:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0106abb	obj/kern/kernel.asm	/^    f0106abb:	00 00 00 $/;"	l
f0106abe	obj/kern/kernel.asm	/^    f0106abe:	be fc 04 00 00       	mov    $0x4fc,%esi$/;"	l
f0106ac3	obj/kern/kernel.asm	/^    f0106ac3:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0106aca	obj/kern/kernel.asm	/^    f0106aca:	00 00 00 $/;"	l
f0106acd	obj/kern/kernel.asm	/^    f0106acd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106ad2	obj/kern/kernel.asm	/^    f0106ad2:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0106ad9	obj/kern/kernel.asm	/^    f0106ad9:	00 00 00 $/;"	l
f0106adc	obj/kern/kernel.asm	/^    f0106adc:	ff d3                	callq  *%rbx$/;"	l
f0106ade	obj/kern/kernel.asm	/^    f0106ade:	b8 ff ff bf ef       	mov    $0xefbfffff,%eax$/;"	l
f0106ae3	obj/kern/kernel.asm	/^    f0106ae3:	48 39 85 58 ff ff ff 	cmp    %rax,-0xa8(%rbp)$/;"	l
f0106aea	obj/kern/kernel.asm	/^    f0106aea:	76 18                	jbe    fffffffff0106b04 <end+0xfffffffefe665764>$/;"	l
f0106aec	obj/kern/kernel.asm	/^    f0106aec:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax$/;"	l
f0106af3	obj/kern/kernel.asm	/^    f0106af3:	48 8d 90 a0 1f 00 00 	lea    0x1fa0(%rax),%rdx$/;"	l
f0106afa	obj/kern/kernel.asm	/^    f0106afa:	b8 ff ff df ef       	mov    $0xefdfffff,%eax$/;"	l
f0106aff	obj/kern/kernel.asm	/^    f0106aff:	48 39 c2             	cmp    %rax,%rdx$/;"	l
f0106b02	obj/kern/kernel.asm	/^    f0106b02:	76 34                	jbe    fffffffff0106b38 <end+0xfffffffefe665798>$/;"	l
f0106b04	obj/kern/kernel.asm	/^    f0106b04:	48 b9 68 24 11 f0 00 	mov    $0xf0112468,%rcx$/;"	l
f0106b0b	obj/kern/kernel.asm	/^    f0106b0b:	00 00 00 $/;"	l
f0106b0e	obj/kern/kernel.asm	/^    f0106b0e:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0106b15	obj/kern/kernel.asm	/^    f0106b15:	00 00 00 $/;"	l
f0106b18	obj/kern/kernel.asm	/^    f0106b18:	be fd 04 00 00       	mov    $0x4fd,%esi$/;"	l
f0106b1d	obj/kern/kernel.asm	/^    f0106b1d:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0106b24	obj/kern/kernel.asm	/^    f0106b24:	00 00 00 $/;"	l
f0106b27	obj/kern/kernel.asm	/^    f0106b27:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106b2c	obj/kern/kernel.asm	/^    f0106b2c:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0106b33	obj/kern/kernel.asm	/^    f0106b33:	00 00 00 $/;"	l
f0106b36	obj/kern/kernel.asm	/^    f0106b36:	ff d3                	callq  *%rbx$/;"	l
f0106b38	obj/kern/kernel.asm	/^    f0106b38:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax$/;"	l
f0106b3f	obj/kern/kernel.asm	/^    f0106b3f:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
f0106b44	obj/kern/kernel.asm	/^    f0106b44:	48 85 c0             	test   %rax,%rax$/;"	l
f0106b47	obj/kern/kernel.asm	/^    f0106b47:	75 11                	jne    fffffffff0106b5a <end+0xfffffffefe6657ba>$/;"	l
f0106b49	obj/kern/kernel.asm	/^    f0106b49:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax$/;"	l
f0106b50	obj/kern/kernel.asm	/^    f0106b50:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
f0106b55	obj/kern/kernel.asm	/^    f0106b55:	48 85 c0             	test   %rax,%rax$/;"	l
f0106b58	obj/kern/kernel.asm	/^    f0106b58:	74 34                	je     fffffffff0106b8e <end+0xfffffffefe6657ee>$/;"	l
f0106b5a	obj/kern/kernel.asm	/^    f0106b5a:	48 b9 90 24 11 f0 00 	mov    $0xf0112490,%rcx$/;"	l
f0106b61	obj/kern/kernel.asm	/^    f0106b61:	00 00 00 $/;"	l
f0106b64	obj/kern/kernel.asm	/^    f0106b64:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0106b6b	obj/kern/kernel.asm	/^    f0106b6b:	00 00 00 $/;"	l
f0106b6e	obj/kern/kernel.asm	/^    f0106b6e:	be ff 04 00 00       	mov    $0x4ff,%esi$/;"	l
f0106b73	obj/kern/kernel.asm	/^    f0106b73:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0106b7a	obj/kern/kernel.asm	/^    f0106b7a:	00 00 00 $/;"	l
f0106b7d	obj/kern/kernel.asm	/^    f0106b7d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106b82	obj/kern/kernel.asm	/^    f0106b82:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0106b89	obj/kern/kernel.asm	/^    f0106b89:	00 00 00 $/;"	l
f0106b8c	obj/kern/kernel.asm	/^    f0106b8c:	ff d3                	callq  *%rbx$/;"	l
f0106b8e	obj/kern/kernel.asm	/^    f0106b8e:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax$/;"	l
f0106b95	obj/kern/kernel.asm	/^    f0106b95:	48 05 a0 1f 00 00    	add    $0x1fa0,%rax$/;"	l
f0106b9b	obj/kern/kernel.asm	/^    f0106b9b:	48 3b 85 58 ff ff ff 	cmp    -0xa8(%rbp),%rax$/;"	l
f0106ba2	obj/kern/kernel.asm	/^    f0106ba2:	76 34                	jbe    fffffffff0106bd8 <end+0xfffffffefe665838>$/;"	l
f0106ba4	obj/kern/kernel.asm	/^    f0106ba4:	48 b9 b7 24 11 f0 00 	mov    $0xf01124b7,%rcx$/;"	l
f0106bab	obj/kern/kernel.asm	/^    f0106bab:	00 00 00 $/;"	l
f0106bae	obj/kern/kernel.asm	/^    f0106bae:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0106bb5	obj/kern/kernel.asm	/^    f0106bb5:	00 00 00 $/;"	l
f0106bb8	obj/kern/kernel.asm	/^    f0106bb8:	be 01 05 00 00       	mov    $0x501,%esi$/;"	l
f0106bbd	obj/kern/kernel.asm	/^    f0106bbd:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0106bc4	obj/kern/kernel.asm	/^    f0106bc4:	00 00 00 $/;"	l
f0106bc7	obj/kern/kernel.asm	/^    f0106bc7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106bcc	obj/kern/kernel.asm	/^    f0106bcc:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0106bd3	obj/kern/kernel.asm	/^    f0106bd3:	00 00 00 $/;"	l
f0106bd6	obj/kern/kernel.asm	/^    f0106bd6:	ff d3                	callq  *%rbx$/;"	l
f0106bd8	obj/kern/kernel.asm	/^    f0106bd8:	48 b8 60 77 a2 f1 00 	mov    $0xf1a27760,%rax$/;"	l
f0106bdf	obj/kern/kernel.asm	/^    f0106bdf:	00 00 00 $/;"	l
f0106be2	obj/kern/kernel.asm	/^    f0106be2:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0106be5	obj/kern/kernel.asm	/^    f0106be5:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx$/;"	l
f0106bec	obj/kern/kernel.asm	/^    f0106bec:	48 89 d6             	mov    %rdx,%rsi$/;"	l
f0106bef	obj/kern/kernel.asm	/^    f0106bef:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0106bf2	obj/kern/kernel.asm	/^    f0106bf2:	48 b8 e5 4b 10 f0 00 	mov    $0xf0104be5,%rax$/;"	l
f0106bf9	obj/kern/kernel.asm	/^    f0106bf9:	00 00 00 $/;"	l
f0106bfc	obj/kern/kernel.asm	/^    f0106bfc:	ff d0                	callq  *%rax$/;"	l
f0106bfe	obj/kern/kernel.asm	/^    f0106bfe:	48 85 c0             	test   %rax,%rax$/;"	l
f0106c01	obj/kern/kernel.asm	/^    f0106c01:	74 34                	je     fffffffff0106c37 <end+0xfffffffefe665897>$/;"	l
f0106c03	obj/kern/kernel.asm	/^    f0106c03:	48 b9 d0 24 11 f0 00 	mov    $0xf01124d0,%rcx$/;"	l
f0106c0a	obj/kern/kernel.asm	/^    f0106c0a:	00 00 00 $/;"	l
f0106c0d	obj/kern/kernel.asm	/^    f0106c0d:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0106c14	obj/kern/kernel.asm	/^    f0106c14:	00 00 00 $/;"	l
f0106c17	obj/kern/kernel.asm	/^    f0106c17:	be 04 05 00 00       	mov    $0x504,%esi$/;"	l
f0106c1c	obj/kern/kernel.asm	/^    f0106c1c:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0106c23	obj/kern/kernel.asm	/^    f0106c23:	00 00 00 $/;"	l
f0106c26	obj/kern/kernel.asm	/^    f0106c26:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106c2b	obj/kern/kernel.asm	/^    f0106c2b:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0106c32	obj/kern/kernel.asm	/^    f0106c32:	00 00 00 $/;"	l
f0106c35	obj/kern/kernel.asm	/^    f0106c35:	ff d3                	callq  *%rbx$/;"	l
f0106c37	obj/kern/kernel.asm	/^    f0106c37:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax$/;"	l
f0106c3e	obj/kern/kernel.asm	/^    f0106c3e:	48 8d 90 00 10 00 00 	lea    0x1000(%rax),%rdx$/;"	l
f0106c45	obj/kern/kernel.asm	/^    f0106c45:	48 b8 60 77 a2 f1 00 	mov    $0xf1a27760,%rax$/;"	l
f0106c4c	obj/kern/kernel.asm	/^    f0106c4c:	00 00 00 $/;"	l
f0106c4f	obj/kern/kernel.asm	/^    f0106c4f:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0106c52	obj/kern/kernel.asm	/^    f0106c52:	48 89 d6             	mov    %rdx,%rsi$/;"	l
f0106c55	obj/kern/kernel.asm	/^    f0106c55:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0106c58	obj/kern/kernel.asm	/^    f0106c58:	48 b8 e5 4b 10 f0 00 	mov    $0xf0104be5,%rax$/;"	l
f0106c5f	obj/kern/kernel.asm	/^    f0106c5f:	00 00 00 $/;"	l
f0106c62	obj/kern/kernel.asm	/^    f0106c62:	ff d0                	callq  *%rax$/;"	l
f0106c64	obj/kern/kernel.asm	/^    f0106c64:	48 3d 00 10 00 00    	cmp    $0x1000,%rax$/;"	l
f0106c6a	obj/kern/kernel.asm	/^    f0106c6a:	74 34                	je     fffffffff0106ca0 <end+0xfffffffefe665900>$/;"	l
f0106c6c	obj/kern/kernel.asm	/^    f0106c6c:	48 b9 f8 24 11 f0 00 	mov    $0xf01124f8,%rcx$/;"	l
f0106c73	obj/kern/kernel.asm	/^    f0106c73:	00 00 00 $/;"	l
f0106c76	obj/kern/kernel.asm	/^    f0106c76:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0106c7d	obj/kern/kernel.asm	/^    f0106c7d:	00 00 00 $/;"	l
f0106c80	obj/kern/kernel.asm	/^    f0106c80:	be 05 05 00 00       	mov    $0x505,%esi$/;"	l
f0106c85	obj/kern/kernel.asm	/^    f0106c85:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0106c8c	obj/kern/kernel.asm	/^    f0106c8c:	00 00 00 $/;"	l
f0106c8f	obj/kern/kernel.asm	/^    f0106c8f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106c94	obj/kern/kernel.asm	/^    f0106c94:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0106c9b	obj/kern/kernel.asm	/^    f0106c9b:	00 00 00 $/;"	l
f0106c9e	obj/kern/kernel.asm	/^    f0106c9e:	ff d3                	callq  *%rbx$/;"	l
f0106ca0	obj/kern/kernel.asm	/^    f0106ca0:	48 b8 60 77 a2 f1 00 	mov    $0xf1a27760,%rax$/;"	l
f0106ca7	obj/kern/kernel.asm	/^    f0106ca7:	00 00 00 $/;"	l
f0106caa	obj/kern/kernel.asm	/^    f0106caa:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0106cad	obj/kern/kernel.asm	/^    f0106cad:	48 8b 95 58 ff ff ff 	mov    -0xa8(%rbp),%rdx$/;"	l
f0106cb4	obj/kern/kernel.asm	/^    f0106cb4:	48 89 d6             	mov    %rdx,%rsi$/;"	l
f0106cb7	obj/kern/kernel.asm	/^    f0106cb7:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0106cba	obj/kern/kernel.asm	/^    f0106cba:	48 b8 e5 4b 10 f0 00 	mov    $0xf0104be5,%rax$/;"	l
f0106cc1	obj/kern/kernel.asm	/^    f0106cc1:	00 00 00 $/;"	l
f0106cc4	obj/kern/kernel.asm	/^    f0106cc4:	ff d0                	callq  *%rax$/;"	l
f0106cc6	obj/kern/kernel.asm	/^    f0106cc6:	48 85 c0             	test   %rax,%rax$/;"	l
f0106cc9	obj/kern/kernel.asm	/^    f0106cc9:	74 34                	je     fffffffff0106cff <end+0xfffffffefe66595f>$/;"	l
f0106ccb	obj/kern/kernel.asm	/^    f0106ccb:	48 b9 28 25 11 f0 00 	mov    $0xf0112528,%rcx$/;"	l
f0106cd2	obj/kern/kernel.asm	/^    f0106cd2:	00 00 00 $/;"	l
f0106cd5	obj/kern/kernel.asm	/^    f0106cd5:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0106cdc	obj/kern/kernel.asm	/^    f0106cdc:	00 00 00 $/;"	l
f0106cdf	obj/kern/kernel.asm	/^    f0106cdf:	be 06 05 00 00       	mov    $0x506,%esi$/;"	l
f0106ce4	obj/kern/kernel.asm	/^    f0106ce4:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0106ceb	obj/kern/kernel.asm	/^    f0106ceb:	00 00 00 $/;"	l
f0106cee	obj/kern/kernel.asm	/^    f0106cee:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106cf3	obj/kern/kernel.asm	/^    f0106cf3:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0106cfa	obj/kern/kernel.asm	/^    f0106cfa:	00 00 00 $/;"	l
f0106cfd	obj/kern/kernel.asm	/^    f0106cfd:	ff d3                	callq  *%rbx$/;"	l
f0106cff	obj/kern/kernel.asm	/^    f0106cff:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax$/;"	l
f0106d06	obj/kern/kernel.asm	/^    f0106d06:	48 8d 90 00 10 00 00 	lea    0x1000(%rax),%rdx$/;"	l
f0106d0d	obj/kern/kernel.asm	/^    f0106d0d:	48 b8 60 77 a2 f1 00 	mov    $0xf1a27760,%rax$/;"	l
f0106d14	obj/kern/kernel.asm	/^    f0106d14:	00 00 00 $/;"	l
f0106d17	obj/kern/kernel.asm	/^    f0106d17:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0106d1a	obj/kern/kernel.asm	/^    f0106d1a:	48 89 d6             	mov    %rdx,%rsi$/;"	l
f0106d1d	obj/kern/kernel.asm	/^    f0106d1d:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0106d20	obj/kern/kernel.asm	/^    f0106d20:	48 b8 e5 4b 10 f0 00 	mov    $0xf0104be5,%rax$/;"	l
f0106d27	obj/kern/kernel.asm	/^    f0106d27:	00 00 00 $/;"	l
f0106d2a	obj/kern/kernel.asm	/^    f0106d2a:	ff d0                	callq  *%rax$/;"	l
f0106d2c	obj/kern/kernel.asm	/^    f0106d2c:	48 83 f8 ff          	cmp    $0xffffffffffffffff,%rax$/;"	l
f0106d30	obj/kern/kernel.asm	/^    f0106d30:	74 34                	je     fffffffff0106d66 <end+0xfffffffefe6659c6>$/;"	l
f0106d32	obj/kern/kernel.asm	/^    f0106d32:	48 b9 50 25 11 f0 00 	mov    $0xf0112550,%rcx$/;"	l
f0106d39	obj/kern/kernel.asm	/^    f0106d39:	00 00 00 $/;"	l
f0106d3c	obj/kern/kernel.asm	/^    f0106d3c:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0106d43	obj/kern/kernel.asm	/^    f0106d43:	00 00 00 $/;"	l
f0106d46	obj/kern/kernel.asm	/^    f0106d46:	be 07 05 00 00       	mov    $0x507,%esi$/;"	l
f0106d4b	obj/kern/kernel.asm	/^    f0106d4b:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0106d52	obj/kern/kernel.asm	/^    f0106d52:	00 00 00 $/;"	l
f0106d55	obj/kern/kernel.asm	/^    f0106d55:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106d5a	obj/kern/kernel.asm	/^    f0106d5a:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0106d61	obj/kern/kernel.asm	/^    f0106d61:	00 00 00 $/;"	l
f0106d64	obj/kern/kernel.asm	/^    f0106d64:	ff d3                	callq  *%rbx$/;"	l
f0106d66	obj/kern/kernel.asm	/^    f0106d66:	48 8b 8d 50 ff ff ff 	mov    -0xb0(%rbp),%rcx$/;"	l
f0106d6d	obj/kern/kernel.asm	/^    f0106d6d:	48 b8 60 77 a2 f1 00 	mov    $0xf1a27760,%rax$/;"	l
f0106d74	obj/kern/kernel.asm	/^    f0106d74:	00 00 00 $/;"	l
f0106d77	obj/kern/kernel.asm	/^    f0106d77:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0106d7a	obj/kern/kernel.asm	/^    f0106d7a:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106d7f	obj/kern/kernel.asm	/^    f0106d7f:	48 89 ce             	mov    %rcx,%rsi$/;"	l
f0106d82	obj/kern/kernel.asm	/^    f0106d82:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0106d85	obj/kern/kernel.asm	/^    f0106d85:	48 b8 6c 29 10 f0 00 	mov    $0xf010296c,%rax$/;"	l
f0106d8c	obj/kern/kernel.asm	/^    f0106d8c:	00 00 00 $/;"	l
f0106d8f	obj/kern/kernel.asm	/^    f0106d8f:	ff d0                	callq  *%rax$/;"	l
f0106d91	obj/kern/kernel.asm	/^    f0106d91:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0106d94	obj/kern/kernel.asm	/^    f0106d94:	83 e0 1a             	and    $0x1a,%eax$/;"	l
f0106d97	obj/kern/kernel.asm	/^    f0106d97:	48 85 c0             	test   %rax,%rax$/;"	l
f0106d9a	obj/kern/kernel.asm	/^    f0106d9a:	75 34                	jne    fffffffff0106dd0 <end+0xfffffffefe665a30>$/;"	l
f0106d9c	obj/kern/kernel.asm	/^    f0106d9c:	48 b9 80 25 11 f0 00 	mov    $0xf0112580,%rcx$/;"	l
f0106da3	obj/kern/kernel.asm	/^    f0106da3:	00 00 00 $/;"	l
f0106da6	obj/kern/kernel.asm	/^    f0106da6:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0106dad	obj/kern/kernel.asm	/^    f0106dad:	00 00 00 $/;"	l
f0106db0	obj/kern/kernel.asm	/^    f0106db0:	be 09 05 00 00       	mov    $0x509,%esi$/;"	l
f0106db5	obj/kern/kernel.asm	/^    f0106db5:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0106dbc	obj/kern/kernel.asm	/^    f0106dbc:	00 00 00 $/;"	l
f0106dbf	obj/kern/kernel.asm	/^    f0106dbf:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106dc4	obj/kern/kernel.asm	/^    f0106dc4:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0106dcb	obj/kern/kernel.asm	/^    f0106dcb:	00 00 00 $/;"	l
f0106dce	obj/kern/kernel.asm	/^    f0106dce:	ff d3                	callq  *%rbx$/;"	l
f0106dd0	obj/kern/kernel.asm	/^    f0106dd0:	48 8b 8d 50 ff ff ff 	mov    -0xb0(%rbp),%rcx$/;"	l
f0106dd7	obj/kern/kernel.asm	/^    f0106dd7:	48 b8 60 77 a2 f1 00 	mov    $0xf1a27760,%rax$/;"	l
f0106dde	obj/kern/kernel.asm	/^    f0106dde:	00 00 00 $/;"	l
f0106de1	obj/kern/kernel.asm	/^    f0106de1:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0106de4	obj/kern/kernel.asm	/^    f0106de4:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106de9	obj/kern/kernel.asm	/^    f0106de9:	48 89 ce             	mov    %rcx,%rsi$/;"	l
f0106dec	obj/kern/kernel.asm	/^    f0106dec:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0106def	obj/kern/kernel.asm	/^    f0106def:	48 b8 6c 29 10 f0 00 	mov    $0xf010296c,%rax$/;"	l
f0106df6	obj/kern/kernel.asm	/^    f0106df6:	00 00 00 $/;"	l
f0106df9	obj/kern/kernel.asm	/^    f0106df9:	ff d0                	callq  *%rax$/;"	l
f0106dfb	obj/kern/kernel.asm	/^    f0106dfb:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0106dfe	obj/kern/kernel.asm	/^    f0106dfe:	83 e0 04             	and    $0x4,%eax$/;"	l
f0106e01	obj/kern/kernel.asm	/^    f0106e01:	48 85 c0             	test   %rax,%rax$/;"	l
f0106e04	obj/kern/kernel.asm	/^    f0106e04:	74 34                	je     fffffffff0106e3a <end+0xfffffffefe665a9a>$/;"	l
f0106e06	obj/kern/kernel.asm	/^    f0106e06:	48 b9 c8 25 11 f0 00 	mov    $0xf01125c8,%rcx$/;"	l
f0106e0d	obj/kern/kernel.asm	/^    f0106e0d:	00 00 00 $/;"	l
f0106e10	obj/kern/kernel.asm	/^    f0106e10:	48 ba 1c 19 11 f0 00 	mov    $0xf011191c,%rdx$/;"	l
f0106e17	obj/kern/kernel.asm	/^    f0106e17:	00 00 00 $/;"	l
f0106e1a	obj/kern/kernel.asm	/^    f0106e1a:	be 0a 05 00 00       	mov    $0x50a,%esi$/;"	l
f0106e1f	obj/kern/kernel.asm	/^    f0106e1f:	48 bf 04 19 11 f0 00 	mov    $0xf0111904,%rdi$/;"	l
f0106e26	obj/kern/kernel.asm	/^    f0106e26:	00 00 00 $/;"	l
f0106e29	obj/kern/kernel.asm	/^    f0106e29:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106e2e	obj/kern/kernel.asm	/^    f0106e2e:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0106e35	obj/kern/kernel.asm	/^    f0106e35:	00 00 00 $/;"	l
f0106e38	obj/kern/kernel.asm	/^    f0106e38:	ff d3                	callq  *%rbx$/;"	l
f0106e3a	obj/kern/kernel.asm	/^    f0106e3a:	48 8b 8d 50 ff ff ff 	mov    -0xb0(%rbp),%rcx$/;"	l
f0106e41	obj/kern/kernel.asm	/^    f0106e41:	48 b8 60 77 a2 f1 00 	mov    $0xf1a27760,%rax$/;"	l
f0106e48	obj/kern/kernel.asm	/^    f0106e48:	00 00 00 $/;"	l
f0106e4b	obj/kern/kernel.asm	/^    f0106e4b:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0106e4e	obj/kern/kernel.asm	/^    f0106e4e:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106e53	obj/kern/kernel.asm	/^    f0106e53:	48 89 ce             	mov    %rcx,%rsi$/;"	l
f0106e56	obj/kern/kernel.asm	/^    f0106e56:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0106e59	obj/kern/kernel.asm	/^    f0106e59:	48 b8 6c 29 10 f0 00 	mov    $0xf010296c,%rax$/;"	l
f0106e60	obj/kern/kernel.asm	/^    f0106e60:	00 00 00 $/;"	l
f0106e63	obj/kern/kernel.asm	/^    f0106e63:	ff d0                	callq  *%rax$/;"	l
f0106e65	obj/kern/kernel.asm	/^    f0106e65:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)$/;"	l
f0106e6c	obj/kern/kernel.asm	/^    f0106e6c:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax$/;"	l
f0106e73	obj/kern/kernel.asm	/^    f0106e73:	48 05 00 10 00 00    	add    $0x1000,%rax$/;"	l
f0106e79	obj/kern/kernel.asm	/^    f0106e79:	48 89 c1             	mov    %rax,%rcx$/;"	l
f0106e7c	obj/kern/kernel.asm	/^    f0106e7c:	48 b8 60 77 a2 f1 00 	mov    $0xf1a27760,%rax$/;"	l
f0106e83	obj/kern/kernel.asm	/^    f0106e83:	00 00 00 $/;"	l
f0106e86	obj/kern/kernel.asm	/^    f0106e86:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0106e89	obj/kern/kernel.asm	/^    f0106e89:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106e8e	obj/kern/kernel.asm	/^    f0106e8e:	48 89 ce             	mov    %rcx,%rsi$/;"	l
f0106e91	obj/kern/kernel.asm	/^    f0106e91:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0106e94	obj/kern/kernel.asm	/^    f0106e94:	48 b8 6c 29 10 f0 00 	mov    $0xf010296c,%rax$/;"	l
f0106e9b	obj/kern/kernel.asm	/^    f0106e9b:	00 00 00 $/;"	l
f0106e9e	obj/kern/kernel.asm	/^    f0106e9e:	ff d0                	callq  *%rax$/;"	l
f0106ea0	obj/kern/kernel.asm	/^    f0106ea0:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)$/;"	l
f0106ea7	obj/kern/kernel.asm	/^    f0106ea7:	48 8b 8d 58 ff ff ff 	mov    -0xa8(%rbp),%rcx$/;"	l
f0106eae	obj/kern/kernel.asm	/^    f0106eae:	48 b8 60 77 a2 f1 00 	mov    $0xf1a27760,%rax$/;"	l
f0106eb5	obj/kern/kernel.asm	/^    f0106eb5:	00 00 00 $/;"	l
f0106eb8	obj/kern/kernel.asm	/^    f0106eb8:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0106ebb	obj/kern/kernel.asm	/^    f0106ebb:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0106ec0	obj/kern/kernel.asm	/^    f0106ec0:	48 89 ce             	mov    %rcx,%rsi$/;"	l
f0106ec3	obj/kern/kernel.asm	/^    f0106ec3:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0106ec6	obj/kern/kernel.asm	/^    f0106ec6:	48 b8 6c 29 10 f0 00 	mov    $0xf010296c,%rax$/;"	l
f0106ecd	obj/kern/kernel.asm	/^    f0106ecd:	00 00 00 $/;"	l
f0106ed0	obj/kern/kernel.asm	/^    f0106ed0:	ff d0                	callq  *%rax$/;"	l
f0106ed2	obj/kern/kernel.asm	/^    f0106ed2:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)$/;"	l
f0106ed9	obj/kern/kernel.asm	/^    f0106ed9:	48 bf fb 25 11 f0 00 	mov    $0xf01125fb,%rdi$/;"	l
f0106ee0	obj/kern/kernel.asm	/^    f0106ee0:	00 00 00 $/;"	l
f0106ee3	obj/kern/kernel.asm	/^    f0106ee3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106ee8	obj/kern/kernel.asm	/^    f0106ee8:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f0106eef	obj/kern/kernel.asm	/^    f0106eef:	00 00 00 $/;"	l
f0106ef2	obj/kern/kernel.asm	/^    f0106ef2:	ff d2                	callq  *%rdx$/;"	l
f0106ef4	obj/kern/kernel.asm	/^    f0106ef4:	48 81 c4 18 01 00 00 	add    $0x118,%rsp$/;"	l
f0106efb	obj/kern/kernel.asm	/^    f0106efb:	5b                   	pop    %rbx$/;"	l
f0106efc	obj/kern/kernel.asm	/^    f0106efc:	c9                   	leaveq $/;"	l
f0106efd	obj/kern/kernel.asm	/^    f0106efd:	c3                   	retq   $/;"	l
f0106f00	obj/kern/kernel.asm	/^    f0106f00:	55                   	push   %rbp$/;"	l
f0106f01	obj/kern/kernel.asm	/^    f0106f01:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f0106f04	obj/kern/kernel.asm	/^    f0106f04:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
f0106f08	obj/kern/kernel.asm	/^    f0106f08:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
f0106f0c	obj/kern/kernel.asm	/^    f0106f0c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
f0106f10	obj/kern/kernel.asm	/^    f0106f10:	48 b8 70 77 a2 f1 00 	mov    $0xf1a27770,%rax$/;"	l
f0106f17	obj/kern/kernel.asm	/^    f0106f17:	00 00 00 $/;"	l
f0106f1a	obj/kern/kernel.asm	/^    f0106f1a:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0106f1d	obj/kern/kernel.asm	/^    f0106f1d:	48 89 d1             	mov    %rdx,%rcx$/;"	l
f0106f20	obj/kern/kernel.asm	/^    f0106f20:	48 29 c1             	sub    %rax,%rcx$/;"	l
f0106f23	obj/kern/kernel.asm	/^    f0106f23:	48 89 c8             	mov    %rcx,%rax$/;"	l
f0106f26	obj/kern/kernel.asm	/^    f0106f26:	48 c1 f8 04          	sar    $0x4,%rax$/;"	l
f0106f2a	obj/kern/kernel.asm	/^    f0106f2a:	c9                   	leaveq $/;"	l
f0106f2b	obj/kern/kernel.asm	/^    f0106f2b:	c3                   	retq   $/;"	l
f0106f2c	obj/kern/kernel.asm	/^    f0106f2c:	55                   	push   %rbp$/;"	l
f0106f2d	obj/kern/kernel.asm	/^    f0106f2d:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f0106f30	obj/kern/kernel.asm	/^    f0106f30:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
f0106f34	obj/kern/kernel.asm	/^    f0106f34:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
f0106f38	obj/kern/kernel.asm	/^    f0106f38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f0106f3c	obj/kern/kernel.asm	/^    f0106f3c:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0106f3f	obj/kern/kernel.asm	/^    f0106f3f:	48 b8 00 6f 10 f0 00 	mov    $0xf0106f00,%rax$/;"	l
f0106f46	obj/kern/kernel.asm	/^    f0106f46:	00 00 00 $/;"	l
f0106f49	obj/kern/kernel.asm	/^    f0106f49:	ff d0                	callq  *%rax$/;"	l
f0106f4b	obj/kern/kernel.asm	/^    f0106f4b:	48 c1 e0 0c          	shl    $0xc,%rax$/;"	l
f0106f4f	obj/kern/kernel.asm	/^    f0106f4f:	c9                   	leaveq $/;"	l
f0106f50	obj/kern/kernel.asm	/^    f0106f50:	c3                   	retq   $/;"	l
f0106f51	obj/kern/kernel.asm	/^    f0106f51:	55                   	push   %rbp$/;"	l
f0106f52	obj/kern/kernel.asm	/^    f0106f52:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f0106f55	obj/kern/kernel.asm	/^    f0106f55:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
f0106f59	obj/kern/kernel.asm	/^    f0106f59:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
f0106f5d	obj/kern/kernel.asm	/^    f0106f5d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f0106f61	obj/kern/kernel.asm	/^    f0106f61:	48 89 c2             	mov    %rax,%rdx$/;"	l
f0106f64	obj/kern/kernel.asm	/^    f0106f64:	48 c1 ea 0c          	shr    $0xc,%rdx$/;"	l
f0106f68	obj/kern/kernel.asm	/^    f0106f68:	48 b8 68 77 a2 f1 00 	mov    $0xf1a27768,%rax$/;"	l
f0106f6f	obj/kern/kernel.asm	/^    f0106f6f:	00 00 00 $/;"	l
f0106f72	obj/kern/kernel.asm	/^    f0106f72:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0106f75	obj/kern/kernel.asm	/^    f0106f75:	48 39 c2             	cmp    %rax,%rdx$/;"	l
f0106f78	obj/kern/kernel.asm	/^    f0106f78:	72 2a                	jb     fffffffff0106fa4 <end+0xfffffffefe665c04>$/;"	l
f0106f7a	obj/kern/kernel.asm	/^    f0106f7a:	48 ba 18 26 11 f0 00 	mov    $0xf0112618,%rdx$/;"	l
f0106f81	obj/kern/kernel.asm	/^    f0106f81:	00 00 00 $/;"	l
f0106f84	obj/kern/kernel.asm	/^    f0106f84:	be 56 00 00 00       	mov    $0x56,%esi$/;"	l
f0106f89	obj/kern/kernel.asm	/^    f0106f89:	48 bf 37 26 11 f0 00 	mov    $0xf0112637,%rdi$/;"	l
f0106f90	obj/kern/kernel.asm	/^    f0106f90:	00 00 00 $/;"	l
f0106f93	obj/kern/kernel.asm	/^    f0106f93:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0106f98	obj/kern/kernel.asm	/^    f0106f98:	48 b9 18 05 10 f0 00 	mov    $0xf0100518,%rcx$/;"	l
f0106f9f	obj/kern/kernel.asm	/^    f0106f9f:	00 00 00 $/;"	l
f0106fa2	obj/kern/kernel.asm	/^    f0106fa2:	ff d1                	callq  *%rcx$/;"	l
f0106fa4	obj/kern/kernel.asm	/^    f0106fa4:	48 b8 70 77 a2 f1 00 	mov    $0xf1a27770,%rax$/;"	l
f0106fab	obj/kern/kernel.asm	/^    f0106fab:	00 00 00 $/;"	l
f0106fae	obj/kern/kernel.asm	/^    f0106fae:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0106fb1	obj/kern/kernel.asm	/^    f0106fb1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
f0106fb5	obj/kern/kernel.asm	/^    f0106fb5:	48 c1 ea 0c          	shr    $0xc,%rdx$/;"	l
f0106fb9	obj/kern/kernel.asm	/^    f0106fb9:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f0106fbd	obj/kern/kernel.asm	/^    f0106fbd:	48 01 d0             	add    %rdx,%rax$/;"	l
f0106fc0	obj/kern/kernel.asm	/^    f0106fc0:	c9                   	leaveq $/;"	l
f0106fc1	obj/kern/kernel.asm	/^    f0106fc1:	c3                   	retq   $/;"	l
f0106fc2	obj/kern/kernel.asm	/^    f0106fc2:	55                   	push   %rbp$/;"	l
f0106fc3	obj/kern/kernel.asm	/^    f0106fc3:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f0106fc6	obj/kern/kernel.asm	/^    f0106fc6:	48 bf 80 06 13 f0 00 	mov    $0xf0130680,%rdi$/;"	l
f0106fcd	obj/kern/kernel.asm	/^    f0106fcd:	00 00 00 $/;"	l
f0106fd0	obj/kern/kernel.asm	/^    f0106fd0:	48 b8 b1 01 11 f0 00 	mov    $0xf01101b1,%rax$/;"	l
f0106fd7	obj/kern/kernel.asm	/^    f0106fd7:	00 00 00 $/;"	l
f0106fda	obj/kern/kernel.asm	/^    f0106fda:	ff d0                	callq  *%rax$/;"	l
f0106fdc	obj/kern/kernel.asm	/^    f0106fdc:	f3 90                	pause  $/;"	l
f0106fde	obj/kern/kernel.asm	/^    f0106fde:	c9                   	leaveq $/;"	l
f0106fdf	obj/kern/kernel.asm	/^    f0106fdf:	c3                   	retq   $/;"	l
f0106fe0	obj/kern/kernel.asm	/^    f0106fe0:	55                   	push   %rbp$/;"	l
f0106fe1	obj/kern/kernel.asm	/^    f0106fe1:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f0106fe4	obj/kern/kernel.asm	/^    f0106fe4:	53                   	push   %rbx$/;"	l
f0106fe5	obj/kern/kernel.asm	/^    f0106fe5:	48 83 ec 38          	sub    $0x38,%rsp$/;"	l
f0106fe9	obj/kern/kernel.asm	/^    f0106fe9:	89 7d dc             	mov    %edi,-0x24(%rbp)$/;"	l
f0106fec	obj/kern/kernel.asm	/^    f0106fec:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)$/;"	l
f0106ff0	obj/kern/kernel.asm	/^    f0106ff0:	89 d0                	mov    %edx,%eax$/;"	l
f0106ff2	obj/kern/kernel.asm	/^    f0106ff2:	88 45 cc             	mov    %al,-0x34(%rbp)$/;"	l
f0106ff5	obj/kern/kernel.asm	/^    f0106ff5:	83 7d dc 00          	cmpl   $0x0,-0x24(%rbp)$/;"	l
f0106ff9	obj/kern/kernel.asm	/^    f0106ff9:	75 3f                	jne    fffffffff010703a <end+0xfffffffefe665c9a>$/;"	l
f0106ffb	obj/kern/kernel.asm	/^    f0106ffb:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f0107002	obj/kern/kernel.asm	/^    f0107002:	00 00 00 $/;"	l
f0107005	obj/kern/kernel.asm	/^    f0107005:	ff d0                	callq  *%rax$/;"	l
f0107007	obj/kern/kernel.asm	/^    f0107007:	48 98                	cltq   $/;"	l
f0107009	obj/kern/kernel.asm	/^    f0107009:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f010700d	obj/kern/kernel.asm	/^    f010700d:	48 89 c2             	mov    %rax,%rdx$/;"	l
f0107010	obj/kern/kernel.asm	/^    f0107010:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f0107014	obj/kern/kernel.asm	/^    f0107014:	48 29 c2             	sub    %rax,%rdx$/;"	l
f0107017	obj/kern/kernel.asm	/^    f0107017:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f010701e	obj/kern/kernel.asm	/^    f010701e:	00 00 00 $/;"	l
f0107021	obj/kern/kernel.asm	/^    f0107021:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f0107025	obj/kern/kernel.asm	/^    f0107025:	48 8b 50 08          	mov    0x8(%rax),%rdx$/;"	l
f0107029	obj/kern/kernel.asm	/^    f0107029:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f010702d	obj/kern/kernel.asm	/^    f010702d:	48 89 10             	mov    %rdx,(%rax)$/;"	l
f0107030	obj/kern/kernel.asm	/^    f0107030:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0107035	obj/kern/kernel.asm	/^    f0107035:	e9 66 01 00 00       	jmpq   fffffffff01071a0 <end+0xfffffffefe665e00>$/;"	l
f010703a	obj/kern/kernel.asm	/^    f010703a:	48 b8 50 62 a2 f1 00 	mov    $0xf1a26250,%rax$/;"	l
f0107041	obj/kern/kernel.asm	/^    f0107041:	00 00 00 $/;"	l
f0107044	obj/kern/kernel.asm	/^    f0107044:	48 8b 10             	mov    (%rax),%rdx$/;"	l
f0107047	obj/kern/kernel.asm	/^    f0107047:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
f010704a	obj/kern/kernel.asm	/^    f010704a:	48 98                	cltq   $/;"	l
f010704c	obj/kern/kernel.asm	/^    f010704c:	25 ff 03 00 00       	and    $0x3ff,%eax$/;"	l
f0107051	obj/kern/kernel.asm	/^    f0107051:	48 69 c0 18 01 00 00 	imul   $0x118,%rax,%rax$/;"	l
f0107058	obj/kern/kernel.asm	/^    f0107058:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010705c	obj/kern/kernel.asm	/^    f010705c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
f0107060	obj/kern/kernel.asm	/^    f0107060:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f0107064	obj/kern/kernel.asm	/^    f0107064:	8b 80 d4 00 00 00    	mov    0xd4(%rax),%eax$/;"	l
f010706a	obj/kern/kernel.asm	/^    f010706a:	85 c0                	test   %eax,%eax$/;"	l
f010706c	obj/kern/kernel.asm	/^    f010706c:	74 0f                	je     fffffffff010707d <end+0xfffffffefe665cdd>$/;"	l
f010706e	obj/kern/kernel.asm	/^    f010706e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f0107072	obj/kern/kernel.asm	/^    f0107072:	8b 80 c8 00 00 00    	mov    0xc8(%rax),%eax$/;"	l
f0107078	obj/kern/kernel.asm	/^    f0107078:	3b 45 dc             	cmp    -0x24(%rbp),%eax$/;"	l
f010707b	obj/kern/kernel.asm	/^    f010707b:	74 66                	je     fffffffff01070e3 <end+0xfffffffefe665d43>$/;"	l
f010707d	obj/kern/kernel.asm	/^    f010707d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f0107081	obj/kern/kernel.asm	/^    f0107081:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)$/;"	l
f0107088	obj/kern/kernel.asm	/^    f0107088:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010708c	obj/kern/kernel.asm	/^    f010708c:	8b 80 c8 00 00 00    	mov    0xc8(%rax),%eax$/;"	l
f0107092	obj/kern/kernel.asm	/^    f0107092:	8b 55 dc             	mov    -0x24(%rbp),%edx$/;"	l
f0107095	obj/kern/kernel.asm	/^    f0107095:	89 c6                	mov    %eax,%esi$/;"	l
f0107097	obj/kern/kernel.asm	/^    f0107097:	48 bf 48 26 11 f0 00 	mov    $0xf0112648,%rdi$/;"	l
f010709e	obj/kern/kernel.asm	/^    f010709e:	00 00 00 $/;"	l
f01070a1	obj/kern/kernel.asm	/^    f01070a1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01070a6	obj/kern/kernel.asm	/^    f01070a6:	48 b9 eb 88 10 f0 00 	mov    $0xf01088eb,%rcx$/;"	l
f01070ad	obj/kern/kernel.asm	/^    f01070ad:	00 00 00 $/;"	l
f01070b0	obj/kern/kernel.asm	/^    f01070b0:	ff d1                	callq  *%rcx$/;"	l
f01070b2	obj/kern/kernel.asm	/^    f01070b2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f01070b6	obj/kern/kernel.asm	/^    f01070b6:	8b 80 d4 00 00 00    	mov    0xd4(%rax),%eax$/;"	l
f01070bc	obj/kern/kernel.asm	/^    f01070bc:	89 c6                	mov    %eax,%esi$/;"	l
f01070be	obj/kern/kernel.asm	/^    f01070be:	48 bf 7c 26 11 f0 00 	mov    $0xf011267c,%rdi$/;"	l
f01070c5	obj/kern/kernel.asm	/^    f01070c5:	00 00 00 $/;"	l
f01070c8	obj/kern/kernel.asm	/^    f01070c8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01070cd	obj/kern/kernel.asm	/^    f01070cd:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f01070d4	obj/kern/kernel.asm	/^    f01070d4:	00 00 00 $/;"	l
f01070d7	obj/kern/kernel.asm	/^    f01070d7:	ff d2                	callq  *%rdx$/;"	l
f01070d9	obj/kern/kernel.asm	/^    f01070d9:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f01070de	obj/kern/kernel.asm	/^    f01070de:	e9 bd 00 00 00       	jmpq   fffffffff01071a0 <end+0xfffffffefe665e00>$/;"	l
f01070e3	obj/kern/kernel.asm	/^    f01070e3:	80 7d cc 00          	cmpb   $0x0,-0x34(%rbp)$/;"	l
f01070e7	obj/kern/kernel.asm	/^    f01070e7:	0f 84 a3 00 00 00    	je     fffffffff0107190 <end+0xfffffffefe665df0>$/;"	l
f01070ed	obj/kern/kernel.asm	/^    f01070ed:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f01070f4	obj/kern/kernel.asm	/^    f01070f4:	00 00 00 $/;"	l
f01070f7	obj/kern/kernel.asm	/^    f01070f7:	ff d0                	callq  *%rax$/;"	l
f01070f9	obj/kern/kernel.asm	/^    f01070f9:	48 98                	cltq   $/;"	l
f01070fb	obj/kern/kernel.asm	/^    f01070fb:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f01070ff	obj/kern/kernel.asm	/^    f01070ff:	48 89 c2             	mov    %rax,%rdx$/;"	l
f0107102	obj/kern/kernel.asm	/^    f0107102:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f0107106	obj/kern/kernel.asm	/^    f0107106:	48 29 c2             	sub    %rax,%rdx$/;"	l
f0107109	obj/kern/kernel.asm	/^    f0107109:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f0107110	obj/kern/kernel.asm	/^    f0107110:	00 00 00 $/;"	l
f0107113	obj/kern/kernel.asm	/^    f0107113:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f0107117	obj/kern/kernel.asm	/^    f0107117:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
f010711b	obj/kern/kernel.asm	/^    f010711b:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax$/;"	l
f010711f	obj/kern/kernel.asm	/^    f010711f:	74 6f                	je     fffffffff0107190 <end+0xfffffffefe665df0>$/;"	l
f0107121	obj/kern/kernel.asm	/^    f0107121:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f0107125	obj/kern/kernel.asm	/^    f0107125:	8b 98 cc 00 00 00    	mov    0xcc(%rax),%ebx$/;"	l
f010712b	obj/kern/kernel.asm	/^    f010712b:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f0107132	obj/kern/kernel.asm	/^    f0107132:	00 00 00 $/;"	l
f0107135	obj/kern/kernel.asm	/^    f0107135:	ff d0                	callq  *%rax$/;"	l
f0107137	obj/kern/kernel.asm	/^    f0107137:	48 98                	cltq   $/;"	l
f0107139	obj/kern/kernel.asm	/^    f0107139:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f010713d	obj/kern/kernel.asm	/^    f010713d:	48 89 c2             	mov    %rax,%rdx$/;"	l
f0107140	obj/kern/kernel.asm	/^    f0107140:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f0107144	obj/kern/kernel.asm	/^    f0107144:	48 29 c2             	sub    %rax,%rdx$/;"	l
f0107147	obj/kern/kernel.asm	/^    f0107147:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f010714e	obj/kern/kernel.asm	/^    f010714e:	00 00 00 $/;"	l
f0107151	obj/kern/kernel.asm	/^    f0107151:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f0107155	obj/kern/kernel.asm	/^    f0107155:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
f0107159	obj/kern/kernel.asm	/^    f0107159:	8b 80 c8 00 00 00    	mov    0xc8(%rax),%eax$/;"	l
f010715f	obj/kern/kernel.asm	/^    f010715f:	39 c3                	cmp    %eax,%ebx$/;"	l
f0107161	obj/kern/kernel.asm	/^    f0107161:	74 2d                	je     fffffffff0107190 <end+0xfffffffefe665df0>$/;"	l
f0107163	obj/kern/kernel.asm	/^    f0107163:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f0107167	obj/kern/kernel.asm	/^    f0107167:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)$/;"	l
f010716e	obj/kern/kernel.asm	/^    f010716e:	48 bf 90 26 11 f0 00 	mov    $0xf0112690,%rdi$/;"	l
f0107175	obj/kern/kernel.asm	/^    f0107175:	00 00 00 $/;"	l
f0107178	obj/kern/kernel.asm	/^    f0107178:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010717d	obj/kern/kernel.asm	/^    f010717d:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f0107184	obj/kern/kernel.asm	/^    f0107184:	00 00 00 $/;"	l
f0107187	obj/kern/kernel.asm	/^    f0107187:	ff d2                	callq  *%rdx$/;"	l
f0107189	obj/kern/kernel.asm	/^    f0107189:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f010718e	obj/kern/kernel.asm	/^    f010718e:	eb 10                	jmp    fffffffff01071a0 <end+0xfffffffefe665e00>$/;"	l
f0107190	obj/kern/kernel.asm	/^    f0107190:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f0107194	obj/kern/kernel.asm	/^    f0107194:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
f0107198	obj/kern/kernel.asm	/^    f0107198:	48 89 10             	mov    %rdx,(%rax)$/;"	l
f010719b	obj/kern/kernel.asm	/^    f010719b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01071a0	obj/kern/kernel.asm	/^    f01071a0:	48 83 c4 38          	add    $0x38,%rsp$/;"	l
f01071a4	obj/kern/kernel.asm	/^    f01071a4:	5b                   	pop    %rbx$/;"	l
f01071a5	obj/kern/kernel.asm	/^    f01071a5:	c9                   	leaveq $/;"	l
f01071a6	obj/kern/kernel.asm	/^    f01071a6:	c3                   	retq   $/;"	l
f01071a7	obj/kern/kernel.asm	/^    f01071a7:	55                   	push   %rbp$/;"	l
f01071a8	obj/kern/kernel.asm	/^    f01071a8:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f01071ab	obj/kern/kernel.asm	/^    f01071ab:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
f01071af	obj/kern/kernel.asm	/^    f01071af:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
f01071b6	obj/kern/kernel.asm	/^    f01071b6:	48 b8 50 62 a2 f1 00 	mov    $0xf1a26250,%rax$/;"	l
f01071bd	obj/kern/kernel.asm	/^    f01071bd:	00 00 00 $/;"	l
f01071c0	obj/kern/kernel.asm	/^    f01071c0:	48 8b 00             	mov    (%rax),%rax$/;"	l
f01071c3	obj/kern/kernel.asm	/^    f01071c3:	ba 00 60 04 00       	mov    $0x46000,%edx$/;"	l
f01071c8	obj/kern/kernel.asm	/^    f01071c8:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01071cd	obj/kern/kernel.asm	/^    f01071cd:	48 89 c7             	mov    %rax,%rdi$/;"	l
f01071d0	obj/kern/kernel.asm	/^    f01071d0:	48 b8 42 ee 10 f0 00 	mov    $0xf010ee42,%rax$/;"	l
f01071d7	obj/kern/kernel.asm	/^    f01071d7:	00 00 00 $/;"	l
f01071da	obj/kern/kernel.asm	/^    f01071da:	ff d0                	callq  *%rax$/;"	l
f01071dc	obj/kern/kernel.asm	/^    f01071dc:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
f01071e3	obj/kern/kernel.asm	/^    f01071e3:	e9 c9 00 00 00       	jmpq   fffffffff01072b1 <end+0xfffffffefe665f11>$/;"	l
f01071e8	obj/kern/kernel.asm	/^    f01071e8:	48 b8 50 62 a2 f1 00 	mov    $0xf1a26250,%rax$/;"	l
f01071ef	obj/kern/kernel.asm	/^    f01071ef:	00 00 00 $/;"	l
f01071f2	obj/kern/kernel.asm	/^    f01071f2:	48 8b 10             	mov    (%rax),%rdx$/;"	l
f01071f5	obj/kern/kernel.asm	/^    f01071f5:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
f01071f8	obj/kern/kernel.asm	/^    f01071f8:	48 98                	cltq   $/;"	l
f01071fa	obj/kern/kernel.asm	/^    f01071fa:	48 69 c0 18 01 00 00 	imul   $0x118,%rax,%rax$/;"	l
f0107201	obj/kern/kernel.asm	/^    f0107201:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f0107205	obj/kern/kernel.asm	/^    f0107205:	c7 80 c8 00 00 00 00 	movl   $0x0,0xc8(%rax)$/;"	l
f010720c	obj/kern/kernel.asm	/^    f010720c:	00 00 00 $/;"	l
f010720f	obj/kern/kernel.asm	/^    f010720f:	48 b8 50 62 a2 f1 00 	mov    $0xf1a26250,%rax$/;"	l
f0107216	obj/kern/kernel.asm	/^    f0107216:	00 00 00 $/;"	l
f0107219	obj/kern/kernel.asm	/^    f0107219:	48 8b 10             	mov    (%rax),%rdx$/;"	l
f010721c	obj/kern/kernel.asm	/^    f010721c:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
f010721f	obj/kern/kernel.asm	/^    f010721f:	48 98                	cltq   $/;"	l
f0107221	obj/kern/kernel.asm	/^    f0107221:	48 69 c0 18 01 00 00 	imul   $0x118,%rax,%rax$/;"	l
f0107228	obj/kern/kernel.asm	/^    f0107228:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010722c	obj/kern/kernel.asm	/^    f010722c:	c7 80 d4 00 00 00 00 	movl   $0x0,0xd4(%rax)$/;"	l
f0107233	obj/kern/kernel.asm	/^    f0107233:	00 00 00 $/;"	l
f0107236	obj/kern/kernel.asm	/^    f0107236:	81 7d fc ff 03 00 00 	cmpl   $0x3ff,-0x4(%rbp)$/;"	l
f010723d	obj/kern/kernel.asm	/^    f010723d:	75 2a                	jne    fffffffff0107269 <end+0xfffffffefe665ec9>$/;"	l
f010723f	obj/kern/kernel.asm	/^    f010723f:	48 b8 50 62 a2 f1 00 	mov    $0xf1a26250,%rax$/;"	l
f0107246	obj/kern/kernel.asm	/^    f0107246:	00 00 00 $/;"	l
f0107249	obj/kern/kernel.asm	/^    f0107249:	48 8b 10             	mov    (%rax),%rdx$/;"	l
f010724c	obj/kern/kernel.asm	/^    f010724c:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
f010724f	obj/kern/kernel.asm	/^    f010724f:	48 98                	cltq   $/;"	l
f0107251	obj/kern/kernel.asm	/^    f0107251:	48 69 c0 18 01 00 00 	imul   $0x118,%rax,%rax$/;"	l
f0107258	obj/kern/kernel.asm	/^    f0107258:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010725c	obj/kern/kernel.asm	/^    f010725c:	48 c7 80 c0 00 00 00 	movq   $0x0,0xc0(%rax)$/;"	l
f0107263	obj/kern/kernel.asm	/^    f0107263:	00 00 00 00 $/;"	l
f0107267	obj/kern/kernel.asm	/^    f0107267:	eb 44                	jmp    fffffffff01072ad <end+0xfffffffefe665f0d>$/;"	l
f0107269	obj/kern/kernel.asm	/^    f0107269:	48 b8 50 62 a2 f1 00 	mov    $0xf1a26250,%rax$/;"	l
f0107270	obj/kern/kernel.asm	/^    f0107270:	00 00 00 $/;"	l
f0107273	obj/kern/kernel.asm	/^    f0107273:	48 8b 10             	mov    (%rax),%rdx$/;"	l
f0107276	obj/kern/kernel.asm	/^    f0107276:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
f0107279	obj/kern/kernel.asm	/^    f0107279:	48 98                	cltq   $/;"	l
f010727b	obj/kern/kernel.asm	/^    f010727b:	48 69 c0 18 01 00 00 	imul   $0x118,%rax,%rax$/;"	l
f0107282	obj/kern/kernel.asm	/^    f0107282:	48 01 c2             	add    %rax,%rdx$/;"	l
f0107285	obj/kern/kernel.asm	/^    f0107285:	48 b8 50 62 a2 f1 00 	mov    $0xf1a26250,%rax$/;"	l
f010728c	obj/kern/kernel.asm	/^    f010728c:	00 00 00 $/;"	l
f010728f	obj/kern/kernel.asm	/^    f010728f:	48 8b 08             	mov    (%rax),%rcx$/;"	l
f0107292	obj/kern/kernel.asm	/^    f0107292:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
f0107295	obj/kern/kernel.asm	/^    f0107295:	48 98                	cltq   $/;"	l
f0107297	obj/kern/kernel.asm	/^    f0107297:	48 83 c0 01          	add    $0x1,%rax$/;"	l
f010729b	obj/kern/kernel.asm	/^    f010729b:	48 69 c0 18 01 00 00 	imul   $0x118,%rax,%rax$/;"	l
f01072a2	obj/kern/kernel.asm	/^    f01072a2:	48 8d 04 01          	lea    (%rcx,%rax,1),%rax$/;"	l
f01072a6	obj/kern/kernel.asm	/^    f01072a6:	48 89 82 c0 00 00 00 	mov    %rax,0xc0(%rdx)$/;"	l
f01072ad	obj/kern/kernel.asm	/^    f01072ad:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
f01072b1	obj/kern/kernel.asm	/^    f01072b1:	81 7d fc ff 03 00 00 	cmpl   $0x3ff,-0x4(%rbp)$/;"	l
f01072b8	obj/kern/kernel.asm	/^    f01072b8:	0f 8e 2a ff ff ff    	jle    fffffffff01071e8 <end+0xfffffffefe665e48>$/;"	l
f01072be	obj/kern/kernel.asm	/^    f01072be:	48 b8 50 62 a2 f1 00 	mov    $0xf1a26250,%rax$/;"	l
f01072c5	obj/kern/kernel.asm	/^    f01072c5:	00 00 00 $/;"	l
f01072c8	obj/kern/kernel.asm	/^    f01072c8:	48 8b 10             	mov    (%rax),%rdx$/;"	l
f01072cb	obj/kern/kernel.asm	/^    f01072cb:	48 b8 58 62 a2 f1 00 	mov    $0xf1a26258,%rax$/;"	l
f01072d2	obj/kern/kernel.asm	/^    f01072d2:	00 00 00 $/;"	l
f01072d5	obj/kern/kernel.asm	/^    f01072d5:	48 89 10             	mov    %rdx,(%rax)$/;"	l
f01072d8	obj/kern/kernel.asm	/^    f01072d8:	48 b8 58 62 a2 f1 00 	mov    $0xf1a26258,%rax$/;"	l
f01072df	obj/kern/kernel.asm	/^    f01072df:	00 00 00 $/;"	l
f01072e2	obj/kern/kernel.asm	/^    f01072e2:	48 8b 00             	mov    (%rax),%rax$/;"	l
f01072e5	obj/kern/kernel.asm	/^    f01072e5:	48 89 c6             	mov    %rax,%rsi$/;"	l
f01072e8	obj/kern/kernel.asm	/^    f01072e8:	48 bf b7 26 11 f0 00 	mov    $0xf01126b7,%rdi$/;"	l
f01072ef	obj/kern/kernel.asm	/^    f01072ef:	00 00 00 $/;"	l
f01072f2	obj/kern/kernel.asm	/^    f01072f2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01072f7	obj/kern/kernel.asm	/^    f01072f7:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f01072fe	obj/kern/kernel.asm	/^    f01072fe:	00 00 00 $/;"	l
f0107301	obj/kern/kernel.asm	/^    f0107301:	ff d2                	callq  *%rdx$/;"	l
f0107303	obj/kern/kernel.asm	/^    f0107303:	48 b8 11 73 10 f0 00 	mov    $0xf0107311,%rax$/;"	l
f010730a	obj/kern/kernel.asm	/^    f010730a:	00 00 00 $/;"	l
f010730d	obj/kern/kernel.asm	/^    f010730d:	ff d0                	callq  *%rax$/;"	l
f010730f	obj/kern/kernel.asm	/^    f010730f:	c9                   	leaveq $/;"	l
f0107310	obj/kern/kernel.asm	/^    f0107310:	c3                   	retq   $/;"	l
f0107311	obj/kern/kernel.asm	/^    f0107311:	55                   	push   %rbp$/;"	l
f0107312	obj/kern/kernel.asm	/^    f0107312:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f0107315	obj/kern/kernel.asm	/^    f0107315:	53                   	push   %rbx$/;"	l
f0107316	obj/kern/kernel.asm	/^    f0107316:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
f010731a	obj/kern/kernel.asm	/^    f010731a:	48 b8 68 06 13 f0 00 	mov    $0xf0130668,%rax$/;"	l
f0107321	obj/kern/kernel.asm	/^    f0107321:	00 00 00 $/;"	l
f0107324	obj/kern/kernel.asm	/^    f0107324:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
f0107328	obj/kern/kernel.asm	/^    f0107328:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010732c	obj/kern/kernel.asm	/^    f010732c:	0f 01 10             	lgdt   (%rax)$/;"	l
f010732f	obj/kern/kernel.asm	/^    f010732f:	b8 23 00 00 00       	mov    $0x23,%eax$/;"	l
f0107334	obj/kern/kernel.asm	/^    f0107334:	8e e8                	mov    %eax,%gs$/;"	l
f0107336	obj/kern/kernel.asm	/^    f0107336:	b8 23 00 00 00       	mov    $0x23,%eax$/;"	l
f010733b	obj/kern/kernel.asm	/^    f010733b:	8e e0                	mov    %eax,%fs$/;"	l
f010733d	obj/kern/kernel.asm	/^    f010733d:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0107342	obj/kern/kernel.asm	/^    f0107342:	8e c0                	mov    %eax,%es$/;"	l
f0107344	obj/kern/kernel.asm	/^    f0107344:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0107349	obj/kern/kernel.asm	/^    f0107349:	8e d8                	mov    %eax,%ds$/;"	l
f010734b	obj/kern/kernel.asm	/^    f010734b:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
f0107350	obj/kern/kernel.asm	/^    f0107350:	8e d0                	mov    %eax,%ss$/;"	l
f0107352	obj/kern/kernel.asm	/^    f0107352:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f0107357	obj/kern/kernel.asm	/^    f0107357:	89 c3                	mov    %eax,%ebx$/;"	l
f0107359	obj/kern/kernel.asm	/^    f0107359:	53                   	push   %rbx$/;"	l
f010735a	obj/kern/kernel.asm	/^    f010735a:	48 b8 67 73 10 f0 00 	mov    $0xf0107367,%rax$/;"	l
f0107361	obj/kern/kernel.asm	/^    f0107361:	00 00 00 $/;"	l
f0107364	obj/kern/kernel.asm	/^    f0107364:	50                   	push   %rax$/;"	l
f0107365	obj/kern/kernel.asm	/^    f0107365:	48 cb                	lretq  $/;"	l
f0107367	obj/kern/kernel.asm	/^    f0107367:	66 c7 45 f6 00 00    	movw   $0x0,-0xa(%rbp)$/;"	l
f010736d	obj/kern/kernel.asm	/^    f010736d:	0f b7 45 f6          	movzwl -0xa(%rbp),%eax$/;"	l
f0107371	obj/kern/kernel.asm	/^    f0107371:	0f 00 d0             	lldt   %ax$/;"	l
f0107374	obj/kern/kernel.asm	/^    f0107374:	48 83 c4 10          	add    $0x10,%rsp$/;"	l
f0107378	obj/kern/kernel.asm	/^    f0107378:	5b                   	pop    %rbx$/;"	l
f0107379	obj/kern/kernel.asm	/^    f0107379:	c9                   	leaveq $/;"	l
f010737a	obj/kern/kernel.asm	/^    f010737a:	c3                   	retq   $/;"	l
f010737b	obj/kern/kernel.asm	/^    f010737b:	55                   	push   %rbp$/;"	l
f010737c	obj/kern/kernel.asm	/^    f010737c:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010737f	obj/kern/kernel.asm	/^    f010737f:	53                   	push   %rbx$/;"	l
f0107380	obj/kern/kernel.asm	/^    f0107380:	48 81 ec b8 00 00 00 	sub    $0xb8,%rsp$/;"	l
f0107387	obj/kern/kernel.asm	/^    f0107387:	48 89 bd 48 ff ff ff 	mov    %rdi,-0xb8(%rbp)$/;"	l
f010738e	obj/kern/kernel.asm	/^    f010738e:	48 c7 85 60 ff ff ff 	movq   $0x0,-0xa0(%rbp)$/;"	l
f0107395	obj/kern/kernel.asm	/^    f0107395:	00 00 00 00 $/;"	l
f0107399	obj/kern/kernel.asm	/^    f0107399:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
f010739e	obj/kern/kernel.asm	/^    f010739e:	48 b8 fd 27 10 f0 00 	mov    $0xf01027fd,%rax$/;"	l
f01073a5	obj/kern/kernel.asm	/^    f01073a5:	00 00 00 $/;"	l
f01073a8	obj/kern/kernel.asm	/^    f01073a8:	ff d0                	callq  *%rax$/;"	l
f01073aa	obj/kern/kernel.asm	/^    f01073aa:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)$/;"	l
f01073b1	obj/kern/kernel.asm	/^    f01073b1:	48 83 bd 60 ff ff ff 	cmpq   $0x0,-0xa0(%rbp)$/;"	l
f01073b8	obj/kern/kernel.asm	/^    f01073b8:	00 $/;"	l
f01073b9	obj/kern/kernel.asm	/^    f01073b9:	75 0a                	jne    fffffffff01073c5 <end+0xfffffffefe666025>$/;"	l
f01073bb	obj/kern/kernel.asm	/^    f01073bb:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f01073c0	obj/kern/kernel.asm	/^    f01073c0:	e9 49 04 00 00       	jmpq   fffffffff010780e <end+0xfffffffefe66646e>$/;"	l
f01073c5	obj/kern/kernel.asm	/^    f01073c5:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)$/;"	l
f01073cc	obj/kern/kernel.asm	/^    f01073cc:	00 00 00 00 $/;"	l
f01073d0	obj/kern/kernel.asm	/^    f01073d0:	48 c7 85 70 ff ff ff 	movq   $0x0,-0x90(%rbp)$/;"	l
f01073d7	obj/kern/kernel.asm	/^    f01073d7:	00 00 00 00 $/;"	l
f01073db	obj/kern/kernel.asm	/^    f01073db:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
f01073e0	obj/kern/kernel.asm	/^    f01073e0:	48 b8 fd 27 10 f0 00 	mov    $0xf01027fd,%rax$/;"	l
f01073e7	obj/kern/kernel.asm	/^    f01073e7:	00 00 00 $/;"	l
f01073ea	obj/kern/kernel.asm	/^    f01073ea:	ff d0                	callq  *%rax$/;"	l
f01073ec	obj/kern/kernel.asm	/^    f01073ec:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)$/;"	l
f01073f3	obj/kern/kernel.asm	/^    f01073f3:	48 83 bd 68 ff ff ff 	cmpq   $0x0,-0x98(%rbp)$/;"	l
f01073fa	obj/kern/kernel.asm	/^    f01073fa:	00 $/;"	l
f01073fb	obj/kern/kernel.asm	/^    f01073fb:	74 22                	je     fffffffff010741f <end+0xfffffffefe66607f>$/;"	l
f01073fd	obj/kern/kernel.asm	/^    f01073fd:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
f0107402	obj/kern/kernel.asm	/^    f0107402:	48 b8 fd 27 10 f0 00 	mov    $0xf01027fd,%rax$/;"	l
f0107409	obj/kern/kernel.asm	/^    f0107409:	00 00 00 $/;"	l
f010740c	obj/kern/kernel.asm	/^    f010740c:	ff d0                	callq  *%rax$/;"	l
f010740e	obj/kern/kernel.asm	/^    f010740e:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)$/;"	l
f0107415	obj/kern/kernel.asm	/^    f0107415:	48 83 bd 70 ff ff ff 	cmpq   $0x0,-0x90(%rbp)$/;"	l
f010741c	obj/kern/kernel.asm	/^    f010741c:	00 $/;"	l
f010741d	obj/kern/kernel.asm	/^    f010741d:	75 0a                	jne    fffffffff0107429 <end+0xfffffffefe666089>$/;"	l
f010741f	obj/kern/kernel.asm	/^    f010741f:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f0107424	obj/kern/kernel.asm	/^    f0107424:	e9 e5 03 00 00       	jmpq   fffffffff010780e <end+0xfffffffefe66646e>$/;"	l
f0107429	obj/kern/kernel.asm	/^    f0107429:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax$/;"	l
f0107430	obj/kern/kernel.asm	/^    f0107430:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0107433	obj/kern/kernel.asm	/^    f0107433:	48 b8 2c 6f 10 f0 00 	mov    $0xf0106f2c,%rax$/;"	l
f010743a	obj/kern/kernel.asm	/^    f010743a:	00 00 00 $/;"	l
f010743d	obj/kern/kernel.asm	/^    f010743d:	ff d0                	callq  *%rax$/;"	l
f010743f	obj/kern/kernel.asm	/^    f010743f:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
f0107445	obj/kern/kernel.asm	/^    f0107445:	48 89 45 98          	mov    %rax,-0x68(%rbp)$/;"	l
f0107449	obj/kern/kernel.asm	/^    f0107449:	48 8b 45 98          	mov    -0x68(%rbp),%rax$/;"	l
f010744d	obj/kern/kernel.asm	/^    f010744d:	48 c1 e8 0c          	shr    $0xc,%rax$/;"	l
f0107451	obj/kern/kernel.asm	/^    f0107451:	89 45 a4             	mov    %eax,-0x5c(%rbp)$/;"	l
f0107454	obj/kern/kernel.asm	/^    f0107454:	8b 55 a4             	mov    -0x5c(%rbp),%edx$/;"	l
f0107457	obj/kern/kernel.asm	/^    f0107457:	48 b8 68 77 a2 f1 00 	mov    $0xf1a27768,%rax$/;"	l
f010745e	obj/kern/kernel.asm	/^    f010745e:	00 00 00 $/;"	l
f0107461	obj/kern/kernel.asm	/^    f0107461:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0107464	obj/kern/kernel.asm	/^    f0107464:	48 39 c2             	cmp    %rax,%rdx$/;"	l
f0107467	obj/kern/kernel.asm	/^    f0107467:	72 31                	jb     fffffffff010749a <end+0xfffffffefe6660fa>$/;"	l
f0107469	obj/kern/kernel.asm	/^    f0107469:	48 8b 45 98          	mov    -0x68(%rbp),%rax$/;"	l
f010746d	obj/kern/kernel.asm	/^    f010746d:	48 89 c1             	mov    %rax,%rcx$/;"	l
f0107470	obj/kern/kernel.asm	/^    f0107470:	48 ba d0 26 11 f0 00 	mov    $0xf01126d0,%rdx$/;"	l
f0107477	obj/kern/kernel.asm	/^    f0107477:	00 00 00 $/;"	l
f010747a	obj/kern/kernel.asm	/^    f010747a:	be db 00 00 00       	mov    $0xdb,%esi$/;"	l
f010747f	obj/kern/kernel.asm	/^    f010747f:	48 bf f3 26 11 f0 00 	mov    $0xf01126f3,%rdi$/;"	l
f0107486	obj/kern/kernel.asm	/^    f0107486:	00 00 00 $/;"	l
f0107489	obj/kern/kernel.asm	/^    f0107489:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010748e	obj/kern/kernel.asm	/^    f010748e:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0107495	obj/kern/kernel.asm	/^    f0107495:	00 00 00 $/;"	l
f0107498	obj/kern/kernel.asm	/^    f0107498:	ff d3                	callq  *%rbx$/;"	l
f010749a	obj/kern/kernel.asm	/^    f010749a:	b8 00 00 00 f0       	mov    $0xf0000000,%eax$/;"	l
f010749f	obj/kern/kernel.asm	/^    f010749f:	48 03 45 98          	add    -0x68(%rbp),%rax$/;"	l
f01074a3	obj/kern/kernel.asm	/^    f01074a3:	48 89 c2             	mov    %rax,%rdx$/;"	l
f01074a6	obj/kern/kernel.asm	/^    f01074a6:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax$/;"	l
f01074ad	obj/kern/kernel.asm	/^    f01074ad:	48 89 90 e0 00 00 00 	mov    %rdx,0xe0(%rax)$/;"	l
f01074b4	obj/kern/kernel.asm	/^    f01074b4:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax$/;"	l
f01074bb	obj/kern/kernel.asm	/^    f01074bb:	48 8b 98 e0 00 00 00 	mov    0xe0(%rax),%rbx$/;"	l
f01074c2	obj/kern/kernel.asm	/^    f01074c2:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax$/;"	l
f01074c9	obj/kern/kernel.asm	/^    f01074c9:	48 89 c7             	mov    %rax,%rdi$/;"	l
f01074cc	obj/kern/kernel.asm	/^    f01074cc:	48 b8 2c 6f 10 f0 00 	mov    $0xf0106f2c,%rax$/;"	l
f01074d3	obj/kern/kernel.asm	/^    f01074d3:	00 00 00 $/;"	l
f01074d6	obj/kern/kernel.asm	/^    f01074d6:	ff d0                	callq  *%rax$/;"	l
f01074d8	obj/kern/kernel.asm	/^    f01074d8:	48 83 c8 07          	or     $0x7,%rax$/;"	l
f01074dc	obj/kern/kernel.asm	/^    f01074dc:	48 89 03             	mov    %rax,(%rbx)$/;"	l
f01074df	obj/kern/kernel.asm	/^    f01074df:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax$/;"	l
f01074e6	obj/kern/kernel.asm	/^    f01074e6:	48 8b 80 e0 00 00 00 	mov    0xe0(%rax),%rax$/;"	l
f01074ed	obj/kern/kernel.asm	/^    f01074ed:	48 8b 00             	mov    (%rax),%rax$/;"	l
f01074f0	obj/kern/kernel.asm	/^    f01074f0:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
f01074f6	obj/kern/kernel.asm	/^    f01074f6:	48 89 45 a8          	mov    %rax,-0x58(%rbp)$/;"	l
f01074fa	obj/kern/kernel.asm	/^    f01074fa:	48 8b 45 a8          	mov    -0x58(%rbp),%rax$/;"	l
f01074fe	obj/kern/kernel.asm	/^    f01074fe:	48 c1 e8 0c          	shr    $0xc,%rax$/;"	l
f0107502	obj/kern/kernel.asm	/^    f0107502:	89 45 b4             	mov    %eax,-0x4c(%rbp)$/;"	l
f0107505	obj/kern/kernel.asm	/^    f0107505:	8b 55 b4             	mov    -0x4c(%rbp),%edx$/;"	l
f0107508	obj/kern/kernel.asm	/^    f0107508:	48 b8 68 77 a2 f1 00 	mov    $0xf1a27768,%rax$/;"	l
f010750f	obj/kern/kernel.asm	/^    f010750f:	00 00 00 $/;"	l
f0107512	obj/kern/kernel.asm	/^    f0107512:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0107515	obj/kern/kernel.asm	/^    f0107515:	48 39 c2             	cmp    %rax,%rdx$/;"	l
f0107518	obj/kern/kernel.asm	/^    f0107518:	72 31                	jb     fffffffff010754b <end+0xfffffffefe6661ab>$/;"	l
f010751a	obj/kern/kernel.asm	/^    f010751a:	48 8b 45 a8          	mov    -0x58(%rbp),%rax$/;"	l
f010751e	obj/kern/kernel.asm	/^    f010751e:	48 89 c1             	mov    %rax,%rcx$/;"	l
f0107521	obj/kern/kernel.asm	/^    f0107521:	48 ba d0 26 11 f0 00 	mov    $0xf01126d0,%rdx$/;"	l
f0107528	obj/kern/kernel.asm	/^    f0107528:	00 00 00 $/;"	l
f010752b	obj/kern/kernel.asm	/^    f010752b:	be de 00 00 00       	mov    $0xde,%esi$/;"	l
f0107530	obj/kern/kernel.asm	/^    f0107530:	48 bf f3 26 11 f0 00 	mov    $0xf01126f3,%rdi$/;"	l
f0107537	obj/kern/kernel.asm	/^    f0107537:	00 00 00 $/;"	l
f010753a	obj/kern/kernel.asm	/^    f010753a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010753f	obj/kern/kernel.asm	/^    f010753f:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0107546	obj/kern/kernel.asm	/^    f0107546:	00 00 00 $/;"	l
f0107549	obj/kern/kernel.asm	/^    f0107549:	ff d3                	callq  *%rbx$/;"	l
f010754b	obj/kern/kernel.asm	/^    f010754b:	b8 00 00 00 f0       	mov    $0xf0000000,%eax$/;"	l
f0107550	obj/kern/kernel.asm	/^    f0107550:	48 03 45 a8          	add    -0x58(%rbp),%rax$/;"	l
f0107554	obj/kern/kernel.asm	/^    f0107554:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)$/;"	l
f010755b	obj/kern/kernel.asm	/^    f010755b:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax$/;"	l
f0107562	obj/kern/kernel.asm	/^    f0107562:	48 8d 58 18          	lea    0x18(%rax),%rbx$/;"	l
f0107566	obj/kern/kernel.asm	/^    f0107566:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax$/;"	l
f010756d	obj/kern/kernel.asm	/^    f010756d:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0107570	obj/kern/kernel.asm	/^    f0107570:	48 b8 2c 6f 10 f0 00 	mov    $0xf0106f2c,%rax$/;"	l
f0107577	obj/kern/kernel.asm	/^    f0107577:	00 00 00 $/;"	l
f010757a	obj/kern/kernel.asm	/^    f010757a:	ff d0                	callq  *%rax$/;"	l
f010757c	obj/kern/kernel.asm	/^    f010757c:	48 83 c8 07          	or     $0x7,%rax$/;"	l
f0107580	obj/kern/kernel.asm	/^    f0107580:	48 89 03             	mov    %rax,(%rbx)$/;"	l
f0107583	obj/kern/kernel.asm	/^    f0107583:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax$/;"	l
f010758a	obj/kern/kernel.asm	/^    f010758a:	48 83 c0 18          	add    $0x18,%rax$/;"	l
f010758e	obj/kern/kernel.asm	/^    f010758e:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0107591	obj/kern/kernel.asm	/^    f0107591:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
f0107597	obj/kern/kernel.asm	/^    f0107597:	48 89 45 b8          	mov    %rax,-0x48(%rbp)$/;"	l
f010759b	obj/kern/kernel.asm	/^    f010759b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax$/;"	l
f010759f	obj/kern/kernel.asm	/^    f010759f:	48 c1 e8 0c          	shr    $0xc,%rax$/;"	l
f01075a3	obj/kern/kernel.asm	/^    f01075a3:	89 45 c4             	mov    %eax,-0x3c(%rbp)$/;"	l
f01075a6	obj/kern/kernel.asm	/^    f01075a6:	8b 55 c4             	mov    -0x3c(%rbp),%edx$/;"	l
f01075a9	obj/kern/kernel.asm	/^    f01075a9:	48 b8 68 77 a2 f1 00 	mov    $0xf1a27768,%rax$/;"	l
f01075b0	obj/kern/kernel.asm	/^    f01075b0:	00 00 00 $/;"	l
f01075b3	obj/kern/kernel.asm	/^    f01075b3:	48 8b 00             	mov    (%rax),%rax$/;"	l
f01075b6	obj/kern/kernel.asm	/^    f01075b6:	48 39 c2             	cmp    %rax,%rdx$/;"	l
f01075b9	obj/kern/kernel.asm	/^    f01075b9:	72 31                	jb     fffffffff01075ec <end+0xfffffffefe66624c>$/;"	l
f01075bb	obj/kern/kernel.asm	/^    f01075bb:	48 8b 45 b8          	mov    -0x48(%rbp),%rax$/;"	l
f01075bf	obj/kern/kernel.asm	/^    f01075bf:	48 89 c1             	mov    %rax,%rcx$/;"	l
f01075c2	obj/kern/kernel.asm	/^    f01075c2:	48 ba d0 26 11 f0 00 	mov    $0xf01126d0,%rdx$/;"	l
f01075c9	obj/kern/kernel.asm	/^    f01075c9:	00 00 00 $/;"	l
f01075cc	obj/kern/kernel.asm	/^    f01075cc:	be e1 00 00 00       	mov    $0xe1,%esi$/;"	l
f01075d1	obj/kern/kernel.asm	/^    f01075d1:	48 bf f3 26 11 f0 00 	mov    $0xf01126f3,%rdi$/;"	l
f01075d8	obj/kern/kernel.asm	/^    f01075d8:	00 00 00 $/;"	l
f01075db	obj/kern/kernel.asm	/^    f01075db:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01075e0	obj/kern/kernel.asm	/^    f01075e0:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f01075e7	obj/kern/kernel.asm	/^    f01075e7:	00 00 00 $/;"	l
f01075ea	obj/kern/kernel.asm	/^    f01075ea:	ff d3                	callq  *%rbx$/;"	l
f01075ec	obj/kern/kernel.asm	/^    f01075ec:	b8 00 00 00 f0       	mov    $0xf0000000,%eax$/;"	l
f01075f1	obj/kern/kernel.asm	/^    f01075f1:	48 03 45 b8          	add    -0x48(%rbp),%rax$/;"	l
f01075f5	obj/kern/kernel.asm	/^    f01075f5:	48 89 45 80          	mov    %rax,-0x80(%rbp)$/;"	l
f01075f9	obj/kern/kernel.asm	/^    f01075f9:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax$/;"	l
f0107600	obj/kern/kernel.asm	/^    f0107600:	0f b7 40 08          	movzwl 0x8(%rax),%eax$/;"	l
f0107604	obj/kern/kernel.asm	/^    f0107604:	8d 50 01             	lea    0x1(%rax),%edx$/;"	l
f0107607	obj/kern/kernel.asm	/^    f0107607:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax$/;"	l
f010760e	obj/kern/kernel.asm	/^    f010760e:	66 89 50 08          	mov    %dx,0x8(%rax)$/;"	l
f0107612	obj/kern/kernel.asm	/^    f0107612:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax$/;"	l
f0107619	obj/kern/kernel.asm	/^    f0107619:	0f b7 40 08          	movzwl 0x8(%rax),%eax$/;"	l
f010761d	obj/kern/kernel.asm	/^    f010761d:	8d 50 01             	lea    0x1(%rax),%edx$/;"	l
f0107620	obj/kern/kernel.asm	/^    f0107620:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax$/;"	l
f0107627	obj/kern/kernel.asm	/^    f0107627:	66 89 50 08          	mov    %dx,0x8(%rax)$/;"	l
f010762b	obj/kern/kernel.asm	/^    f010762b:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax$/;"	l
f0107632	obj/kern/kernel.asm	/^    f0107632:	0f b7 40 08          	movzwl 0x8(%rax),%eax$/;"	l
f0107636	obj/kern/kernel.asm	/^    f0107636:	8d 50 01             	lea    0x1(%rax),%edx$/;"	l
f0107639	obj/kern/kernel.asm	/^    f0107639:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax$/;"	l
f0107640	obj/kern/kernel.asm	/^    f0107640:	66 89 50 08          	mov    %dx,0x8(%rax)$/;"	l
f0107644	obj/kern/kernel.asm	/^    f0107644:	48 b8 60 77 a2 f1 00 	mov    $0xf1a27760,%rax$/;"	l
f010764b	obj/kern/kernel.asm	/^    f010764b:	00 00 00 $/;"	l
f010764e	obj/kern/kernel.asm	/^    f010764e:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0107651	obj/kern/kernel.asm	/^    f0107651:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0107654	obj/kern/kernel.asm	/^    f0107654:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
f010765a	obj/kern/kernel.asm	/^    f010765a:	48 89 45 c8          	mov    %rax,-0x38(%rbp)$/;"	l
f010765e	obj/kern/kernel.asm	/^    f010765e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f0107662	obj/kern/kernel.asm	/^    f0107662:	48 c1 e8 0c          	shr    $0xc,%rax$/;"	l
f0107666	obj/kern/kernel.asm	/^    f0107666:	89 45 d4             	mov    %eax,-0x2c(%rbp)$/;"	l
f0107669	obj/kern/kernel.asm	/^    f0107669:	8b 55 d4             	mov    -0x2c(%rbp),%edx$/;"	l
f010766c	obj/kern/kernel.asm	/^    f010766c:	48 b8 68 77 a2 f1 00 	mov    $0xf1a27768,%rax$/;"	l
f0107673	obj/kern/kernel.asm	/^    f0107673:	00 00 00 $/;"	l
f0107676	obj/kern/kernel.asm	/^    f0107676:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0107679	obj/kern/kernel.asm	/^    f0107679:	48 39 c2             	cmp    %rax,%rdx$/;"	l
f010767c	obj/kern/kernel.asm	/^    f010767c:	72 31                	jb     fffffffff01076af <end+0xfffffffefe66630f>$/;"	l
f010767e	obj/kern/kernel.asm	/^    f010767e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f0107682	obj/kern/kernel.asm	/^    f0107682:	48 89 c1             	mov    %rax,%rcx$/;"	l
f0107685	obj/kern/kernel.asm	/^    f0107685:	48 ba d0 26 11 f0 00 	mov    $0xf01126d0,%rdx$/;"	l
f010768c	obj/kern/kernel.asm	/^    f010768c:	00 00 00 $/;"	l
f010768f	obj/kern/kernel.asm	/^    f010768f:	be e7 00 00 00       	mov    $0xe7,%esi$/;"	l
f0107694	obj/kern/kernel.asm	/^    f0107694:	48 bf f3 26 11 f0 00 	mov    $0xf01126f3,%rdi$/;"	l
f010769b	obj/kern/kernel.asm	/^    f010769b:	00 00 00 $/;"	l
f010769e	obj/kern/kernel.asm	/^    f010769e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01076a3	obj/kern/kernel.asm	/^    f01076a3:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f01076aa	obj/kern/kernel.asm	/^    f01076aa:	00 00 00 $/;"	l
f01076ad	obj/kern/kernel.asm	/^    f01076ad:	ff d3                	callq  *%rbx$/;"	l
f01076af	obj/kern/kernel.asm	/^    f01076af:	b8 00 00 00 f0       	mov    $0xf0000000,%eax$/;"	l
f01076b4	obj/kern/kernel.asm	/^    f01076b4:	48 03 45 c8          	add    -0x38(%rbp),%rax$/;"	l
f01076b8	obj/kern/kernel.asm	/^    f01076b8:	48 89 45 88          	mov    %rax,-0x78(%rbp)$/;"	l
f01076bc	obj/kern/kernel.asm	/^    f01076bc:	48 8b 45 88          	mov    -0x78(%rbp),%rax$/;"	l
f01076c0	obj/kern/kernel.asm	/^    f01076c0:	48 83 c0 18          	add    $0x18,%rax$/;"	l
f01076c4	obj/kern/kernel.asm	/^    f01076c4:	48 8b 00             	mov    (%rax),%rax$/;"	l
f01076c7	obj/kern/kernel.asm	/^    f01076c7:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
f01076cd	obj/kern/kernel.asm	/^    f01076cd:	48 89 45 d8          	mov    %rax,-0x28(%rbp)$/;"	l
f01076d1	obj/kern/kernel.asm	/^    f01076d1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f01076d5	obj/kern/kernel.asm	/^    f01076d5:	48 c1 e8 0c          	shr    $0xc,%rax$/;"	l
f01076d9	obj/kern/kernel.asm	/^    f01076d9:	89 45 e4             	mov    %eax,-0x1c(%rbp)$/;"	l
f01076dc	obj/kern/kernel.asm	/^    f01076dc:	8b 55 e4             	mov    -0x1c(%rbp),%edx$/;"	l
f01076df	obj/kern/kernel.asm	/^    f01076df:	48 b8 68 77 a2 f1 00 	mov    $0xf1a27768,%rax$/;"	l
f01076e6	obj/kern/kernel.asm	/^    f01076e6:	00 00 00 $/;"	l
f01076e9	obj/kern/kernel.asm	/^    f01076e9:	48 8b 00             	mov    (%rax),%rax$/;"	l
f01076ec	obj/kern/kernel.asm	/^    f01076ec:	48 39 c2             	cmp    %rax,%rdx$/;"	l
f01076ef	obj/kern/kernel.asm	/^    f01076ef:	72 31                	jb     fffffffff0107722 <end+0xfffffffefe666382>$/;"	l
f01076f1	obj/kern/kernel.asm	/^    f01076f1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f01076f5	obj/kern/kernel.asm	/^    f01076f5:	48 89 c1             	mov    %rax,%rcx$/;"	l
f01076f8	obj/kern/kernel.asm	/^    f01076f8:	48 ba d0 26 11 f0 00 	mov    $0xf01126d0,%rdx$/;"	l
f01076ff	obj/kern/kernel.asm	/^    f01076ff:	00 00 00 $/;"	l
f0107702	obj/kern/kernel.asm	/^    f0107702:	be e8 00 00 00       	mov    $0xe8,%esi$/;"	l
f0107707	obj/kern/kernel.asm	/^    f0107707:	48 bf f3 26 11 f0 00 	mov    $0xf01126f3,%rdi$/;"	l
f010770e	obj/kern/kernel.asm	/^    f010770e:	00 00 00 $/;"	l
f0107711	obj/kern/kernel.asm	/^    f0107711:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0107716	obj/kern/kernel.asm	/^    f0107716:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f010771d	obj/kern/kernel.asm	/^    f010771d:	00 00 00 $/;"	l
f0107720	obj/kern/kernel.asm	/^    f0107720:	ff d3                	callq  *%rbx$/;"	l
f0107722	obj/kern/kernel.asm	/^    f0107722:	b8 00 00 00 f0       	mov    $0xf0000000,%eax$/;"	l
f0107727	obj/kern/kernel.asm	/^    f0107727:	48 03 45 d8          	add    -0x28(%rbp),%rax$/;"	l
f010772b	obj/kern/kernel.asm	/^    f010772b:	48 89 45 90          	mov    %rax,-0x70(%rbp)$/;"	l
f010772f	obj/kern/kernel.asm	/^    f010772f:	c7 85 5c ff ff ff 00 	movl   $0x0,-0xa4(%rbp)$/;"	l
f0107736	obj/kern/kernel.asm	/^    f0107736:	00 00 00 $/;"	l
f0107739	obj/kern/kernel.asm	/^    f0107739:	eb 2e                	jmp    fffffffff0107769 <end+0xfffffffefe6663c9>$/;"	l
f010773b	obj/kern/kernel.asm	/^    f010773b:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax$/;"	l
f0107741	obj/kern/kernel.asm	/^    f0107741:	48 98                	cltq   $/;"	l
f0107743	obj/kern/kernel.asm	/^    f0107743:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f0107747	obj/kern/kernel.asm	/^    f0107747:	48 03 45 80          	add    -0x80(%rbp),%rax$/;"	l
f010774b	obj/kern/kernel.asm	/^    f010774b:	8b 95 5c ff ff ff    	mov    -0xa4(%rbp),%edx$/;"	l
f0107751	obj/kern/kernel.asm	/^    f0107751:	48 63 d2             	movslq %edx,%rdx$/;"	l
f0107754	obj/kern/kernel.asm	/^    f0107754:	48 c1 e2 03          	shl    $0x3,%rdx$/;"	l
f0107758	obj/kern/kernel.asm	/^    f0107758:	48 03 55 90          	add    -0x70(%rbp),%rdx$/;"	l
f010775c	obj/kern/kernel.asm	/^    f010775c:	48 8b 12             	mov    (%rdx),%rdx$/;"	l
f010775f	obj/kern/kernel.asm	/^    f010775f:	48 89 10             	mov    %rdx,(%rax)$/;"	l
f0107762	obj/kern/kernel.asm	/^    f0107762:	83 85 5c ff ff ff 01 	addl   $0x1,-0xa4(%rbp)$/;"	l
f0107769	obj/kern/kernel.asm	/^    f0107769:	81 bd 5c ff ff ff ff 	cmpl   $0x1ff,-0xa4(%rbp)$/;"	l
f0107770	obj/kern/kernel.asm	/^    f0107770:	01 00 00 $/;"	l
f0107773	obj/kern/kernel.asm	/^    f0107773:	7e c6                	jle    fffffffff010773b <end+0xfffffffefe66639b>$/;"	l
f0107775	obj/kern/kernel.asm	/^    f0107775:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax$/;"	l
f010777c	obj/kern/kernel.asm	/^    f010777c:	48 8b 80 e0 00 00 00 	mov    0xe0(%rax),%rax$/;"	l
f0107783	obj/kern/kernel.asm	/^    f0107783:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
f0107787	obj/kern/kernel.asm	/^    f0107787:	b8 ff ff ff ef       	mov    $0xefffffff,%eax$/;"	l
f010778c	obj/kern/kernel.asm	/^    f010778c:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)$/;"	l
f0107790	obj/kern/kernel.asm	/^    f0107790:	77 31                	ja     fffffffff01077c3 <end+0xfffffffefe666423>$/;"	l
f0107792	obj/kern/kernel.asm	/^    f0107792:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f0107796	obj/kern/kernel.asm	/^    f0107796:	48 89 c1             	mov    %rax,%rcx$/;"	l
f0107799	obj/kern/kernel.asm	/^    f0107799:	48 ba 00 27 11 f0 00 	mov    $0xf0112700,%rdx$/;"	l
f01077a0	obj/kern/kernel.asm	/^    f01077a0:	00 00 00 $/;"	l
f01077a3	obj/kern/kernel.asm	/^    f01077a3:	be f0 00 00 00       	mov    $0xf0,%esi$/;"	l
f01077a8	obj/kern/kernel.asm	/^    f01077a8:	48 bf f3 26 11 f0 00 	mov    $0xf01126f3,%rdi$/;"	l
f01077af	obj/kern/kernel.asm	/^    f01077af:	00 00 00 $/;"	l
f01077b2	obj/kern/kernel.asm	/^    f01077b2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01077b7	obj/kern/kernel.asm	/^    f01077b7:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f01077be	obj/kern/kernel.asm	/^    f01077be:	00 00 00 $/;"	l
f01077c1	obj/kern/kernel.asm	/^    f01077c1:	ff d3                	callq  *%rbx$/;"	l
f01077c3	obj/kern/kernel.asm	/^    f01077c3:	48 b8 00 00 00 10 ff 	mov    $0xffffffff10000000,%rax$/;"	l
f01077ca	obj/kern/kernel.asm	/^    f01077ca:	ff ff ff $/;"	l
f01077cd	obj/kern/kernel.asm	/^    f01077cd:	48 89 c2             	mov    %rax,%rdx$/;"	l
f01077d0	obj/kern/kernel.asm	/^    f01077d0:	48 03 55 e8          	add    -0x18(%rbp),%rdx$/;"	l
f01077d4	obj/kern/kernel.asm	/^    f01077d4:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax$/;"	l
f01077db	obj/kern/kernel.asm	/^    f01077db:	48 89 90 e8 00 00 00 	mov    %rdx,0xe8(%rax)$/;"	l
f01077e2	obj/kern/kernel.asm	/^    f01077e2:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax$/;"	l
f01077e9	obj/kern/kernel.asm	/^    f01077e9:	48 8b 80 e0 00 00 00 	mov    0xe0(%rax),%rax$/;"	l
f01077f0	obj/kern/kernel.asm	/^    f01077f0:	48 8d 50 10          	lea    0x10(%rax),%rdx$/;"	l
f01077f4	obj/kern/kernel.asm	/^    f01077f4:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax$/;"	l
f01077fb	obj/kern/kernel.asm	/^    f01077fb:	48 8b 80 e8 00 00 00 	mov    0xe8(%rax),%rax$/;"	l
f0107802	obj/kern/kernel.asm	/^    f0107802:	48 83 c8 05          	or     $0x5,%rax$/;"	l
f0107806	obj/kern/kernel.asm	/^    f0107806:	48 89 02             	mov    %rax,(%rdx)$/;"	l
f0107809	obj/kern/kernel.asm	/^    f0107809:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010780e	obj/kern/kernel.asm	/^    f010780e:	48 81 c4 b8 00 00 00 	add    $0xb8,%rsp$/;"	l
f0107815	obj/kern/kernel.asm	/^    f0107815:	5b                   	pop    %rbx$/;"	l
f0107816	obj/kern/kernel.asm	/^    f0107816:	c9                   	leaveq $/;"	l
f0107817	obj/kern/kernel.asm	/^    f0107817:	c3                   	retq   $/;"	l
f0107818	obj/kern/kernel.asm	/^    f0107818:	55                   	push   %rbp$/;"	l
f0107819	obj/kern/kernel.asm	/^    f0107819:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010781c	obj/kern/kernel.asm	/^    f010781c:	53                   	push   %rbx$/;"	l
f010781d	obj/kern/kernel.asm	/^    f010781d:	48 83 ec 28          	sub    $0x28,%rsp$/;"	l
f0107821	obj/kern/kernel.asm	/^    f0107821:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)$/;"	l
f0107825	obj/kern/kernel.asm	/^    f0107825:	89 75 d4             	mov    %esi,-0x2c(%rbp)$/;"	l
f0107828	obj/kern/kernel.asm	/^    f0107828:	48 b8 58 62 a2 f1 00 	mov    $0xf1a26258,%rax$/;"	l
f010782f	obj/kern/kernel.asm	/^    f010782f:	00 00 00 $/;"	l
f0107832	obj/kern/kernel.asm	/^    f0107832:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0107835	obj/kern/kernel.asm	/^    f0107835:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
f0107839	obj/kern/kernel.asm	/^    f0107839:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)$/;"	l
f010783e	obj/kern/kernel.asm	/^    f010783e:	75 0a                	jne    fffffffff010784a <end+0xfffffffefe6664aa>$/;"	l
f0107840	obj/kern/kernel.asm	/^    f0107840:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax$/;"	l
f0107845	obj/kern/kernel.asm	/^    f0107845:	e9 18 02 00 00       	jmpq   fffffffff0107a62 <end+0xfffffffefe6666c2>$/;"	l
f010784a	obj/kern/kernel.asm	/^    f010784a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010784e	obj/kern/kernel.asm	/^    f010784e:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0107851	obj/kern/kernel.asm	/^    f0107851:	48 b8 7b 73 10 f0 00 	mov    $0xf010737b,%rax$/;"	l
f0107858	obj/kern/kernel.asm	/^    f0107858:	00 00 00 $/;"	l
f010785b	obj/kern/kernel.asm	/^    f010785b:	ff d0                	callq  *%rax$/;"	l
f010785d	obj/kern/kernel.asm	/^    f010785d:	89 45 e4             	mov    %eax,-0x1c(%rbp)$/;"	l
f0107860	obj/kern/kernel.asm	/^    f0107860:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)$/;"	l
f0107864	obj/kern/kernel.asm	/^    f0107864:	79 08                	jns    fffffffff010786e <end+0xfffffffefe6664ce>$/;"	l
f0107866	obj/kern/kernel.asm	/^    f0107866:	8b 45 e4             	mov    -0x1c(%rbp),%eax$/;"	l
f0107869	obj/kern/kernel.asm	/^    f0107869:	e9 f4 01 00 00       	jmpq   fffffffff0107a62 <end+0xfffffffefe6666c2>$/;"	l
f010786e	obj/kern/kernel.asm	/^    f010786e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f0107872	obj/kern/kernel.asm	/^    f0107872:	8b 80 c8 00 00 00    	mov    0xc8(%rax),%eax$/;"	l
f0107878	obj/kern/kernel.asm	/^    f0107878:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
f010787d	obj/kern/kernel.asm	/^    f010787d:	25 00 fc ff ff       	and    $0xfffffc00,%eax$/;"	l
f0107882	obj/kern/kernel.asm	/^    f0107882:	89 45 e0             	mov    %eax,-0x20(%rbp)$/;"	l
f0107885	obj/kern/kernel.asm	/^    f0107885:	83 7d e0 00          	cmpl   $0x0,-0x20(%rbp)$/;"	l
f0107889	obj/kern/kernel.asm	/^    f0107889:	7f 07                	jg     fffffffff0107892 <end+0xfffffffefe6664f2>$/;"	l
f010788b	obj/kern/kernel.asm	/^    f010788b:	c7 45 e0 00 10 00 00 	movl   $0x1000,-0x20(%rbp)$/;"	l
f0107892	obj/kern/kernel.asm	/^    f0107892:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
f0107896	obj/kern/kernel.asm	/^    f0107896:	48 b8 50 62 a2 f1 00 	mov    $0xf1a26250,%rax$/;"	l
f010789d	obj/kern/kernel.asm	/^    f010789d:	00 00 00 $/;"	l
f01078a0	obj/kern/kernel.asm	/^    f01078a0:	48 8b 00             	mov    (%rax),%rax$/;"	l
f01078a3	obj/kern/kernel.asm	/^    f01078a3:	48 89 d1             	mov    %rdx,%rcx$/;"	l
f01078a6	obj/kern/kernel.asm	/^    f01078a6:	48 29 c1             	sub    %rax,%rcx$/;"	l
f01078a9	obj/kern/kernel.asm	/^    f01078a9:	48 89 c8             	mov    %rcx,%rax$/;"	l
f01078ac	obj/kern/kernel.asm	/^    f01078ac:	48 89 c2             	mov    %rax,%rdx$/;"	l
f01078af	obj/kern/kernel.asm	/^    f01078af:	48 c1 fa 03          	sar    $0x3,%rdx$/;"	l
f01078b3	obj/kern/kernel.asm	/^    f01078b3:	48 b8 8b af f8 8a af 	mov    $0xaf8af8af8af8af8b,%rax$/;"	l
f01078ba	obj/kern/kernel.asm	/^    f01078ba:	f8 8a af $/;"	l
f01078bd	obj/kern/kernel.asm	/^    f01078bd:	48 0f af c2          	imul   %rdx,%rax$/;"	l
f01078c1	obj/kern/kernel.asm	/^    f01078c1:	89 c2                	mov    %eax,%edx$/;"	l
f01078c3	obj/kern/kernel.asm	/^    f01078c3:	0b 55 e0             	or     -0x20(%rbp),%edx$/;"	l
f01078c6	obj/kern/kernel.asm	/^    f01078c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f01078ca	obj/kern/kernel.asm	/^    f01078ca:	89 90 c8 00 00 00    	mov    %edx,0xc8(%rax)$/;"	l
f01078d0	obj/kern/kernel.asm	/^    f01078d0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f01078d4	obj/kern/kernel.asm	/^    f01078d4:	8b 55 d4             	mov    -0x2c(%rbp),%edx$/;"	l
f01078d7	obj/kern/kernel.asm	/^    f01078d7:	89 90 cc 00 00 00    	mov    %edx,0xcc(%rax)$/;"	l
f01078dd	obj/kern/kernel.asm	/^    f01078dd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f01078e1	obj/kern/kernel.asm	/^    f01078e1:	c7 80 d0 00 00 00 00 	movl   $0x0,0xd0(%rax)$/;"	l
f01078e8	obj/kern/kernel.asm	/^    f01078e8:	00 00 00 $/;"	l
f01078eb	obj/kern/kernel.asm	/^    f01078eb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f01078ef	obj/kern/kernel.asm	/^    f01078ef:	c7 80 d4 00 00 00 02 	movl   $0x2,0xd4(%rax)$/;"	l
f01078f6	obj/kern/kernel.asm	/^    f01078f6:	00 00 00 $/;"	l
f01078f9	obj/kern/kernel.asm	/^    f01078f9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f01078fd	obj/kern/kernel.asm	/^    f01078fd:	c7 80 d8 00 00 00 00 	movl   $0x0,0xd8(%rax)$/;"	l
f0107904	obj/kern/kernel.asm	/^    f0107904:	00 00 00 $/;"	l
f0107907	obj/kern/kernel.asm	/^    f0107907:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010790b	obj/kern/kernel.asm	/^    f010790b:	ba c0 00 00 00       	mov    $0xc0,%edx$/;"	l
f0107910	obj/kern/kernel.asm	/^    f0107910:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0107915	obj/kern/kernel.asm	/^    f0107915:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0107918	obj/kern/kernel.asm	/^    f0107918:	48 b8 42 ee 10 f0 00 	mov    $0xf010ee42,%rax$/;"	l
f010791f	obj/kern/kernel.asm	/^    f010791f:	00 00 00 $/;"	l
f0107922	obj/kern/kernel.asm	/^    f0107922:	ff d0                	callq  *%rax$/;"	l
f0107924	obj/kern/kernel.asm	/^    f0107924:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f0107928	obj/kern/kernel.asm	/^    f0107928:	66 c7 80 80 00 00 00 	movw   $0x23,0x80(%rax)$/;"	l
f010792f	obj/kern/kernel.asm	/^    f010792f:	23 00 $/;"	l
f0107931	obj/kern/kernel.asm	/^    f0107931:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f0107935	obj/kern/kernel.asm	/^    f0107935:	66 c7 40 78 23 00    	movw   $0x23,0x78(%rax)$/;"	l
f010793b	obj/kern/kernel.asm	/^    f010793b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010793f	obj/kern/kernel.asm	/^    f010793f:	66 c7 80 b8 00 00 00 	movw   $0x23,0xb8(%rax)$/;"	l
f0107946	obj/kern/kernel.asm	/^    f0107946:	23 00 $/;"	l
f0107948	obj/kern/kernel.asm	/^    f0107948:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010794c	obj/kern/kernel.asm	/^    f010794c:	c7 80 b0 00 00 00 00 	movl   $0xef7fe000,0xb0(%rax)$/;"	l
f0107953	obj/kern/kernel.asm	/^    f0107953:	e0 7f ef $/;"	l
f0107956	obj/kern/kernel.asm	/^    f0107956:	c7 80 b4 00 00 00 00 	movl   $0x0,0xb4(%rax)$/;"	l
f010795d	obj/kern/kernel.asm	/^    f010795d:	00 00 00 $/;"	l
f0107960	obj/kern/kernel.asm	/^    f0107960:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f0107964	obj/kern/kernel.asm	/^    f0107964:	66 c7 80 a0 00 00 00 	movw   $0x1b,0xa0(%rax)$/;"	l
f010796b	obj/kern/kernel.asm	/^    f010796b:	1b 00 $/;"	l
f010796d	obj/kern/kernel.asm	/^    f010796d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f0107971	obj/kern/kernel.asm	/^    f0107971:	48 8b 80 a8 00 00 00 	mov    0xa8(%rax),%rax$/;"	l
f0107978	obj/kern/kernel.asm	/^    f0107978:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010797b	obj/kern/kernel.asm	/^    f010797b:	80 ce 02             	or     $0x2,%dh$/;"	l
f010797e	obj/kern/kernel.asm	/^    f010797e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f0107982	obj/kern/kernel.asm	/^    f0107982:	48 89 90 a8 00 00 00 	mov    %rdx,0xa8(%rax)$/;"	l
f0107989	obj/kern/kernel.asm	/^    f0107989:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010798d	obj/kern/kernel.asm	/^    f010798d:	48 c7 80 f0 00 00 00 	movq   $0x0,0xf0(%rax)$/;"	l
f0107994	obj/kern/kernel.asm	/^    f0107994:	00 00 00 00 $/;"	l
f0107998	obj/kern/kernel.asm	/^    f0107998:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010799c	obj/kern/kernel.asm	/^    f010799c:	c6 80 f8 00 00 00 00 	movb   $0x0,0xf8(%rax)$/;"	l
f01079a3	obj/kern/kernel.asm	/^    f01079a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f01079a7	obj/kern/kernel.asm	/^    f01079a7:	48 8b 90 c0 00 00 00 	mov    0xc0(%rax),%rdx$/;"	l
f01079ae	obj/kern/kernel.asm	/^    f01079ae:	48 b8 58 62 a2 f1 00 	mov    $0xf1a26258,%rax$/;"	l
f01079b5	obj/kern/kernel.asm	/^    f01079b5:	00 00 00 $/;"	l
f01079b8	obj/kern/kernel.asm	/^    f01079b8:	48 89 10             	mov    %rdx,(%rax)$/;"	l
f01079bb	obj/kern/kernel.asm	/^    f01079bb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f01079bf	obj/kern/kernel.asm	/^    f01079bf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
f01079c3	obj/kern/kernel.asm	/^    f01079c3:	48 89 10             	mov    %rdx,(%rax)$/;"	l
f01079c6	obj/kern/kernel.asm	/^    f01079c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f01079ca	obj/kern/kernel.asm	/^    f01079ca:	8b 98 c8 00 00 00    	mov    0xc8(%rax),%ebx$/;"	l
f01079d0	obj/kern/kernel.asm	/^    f01079d0:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f01079d7	obj/kern/kernel.asm	/^    f01079d7:	00 00 00 $/;"	l
f01079da	obj/kern/kernel.asm	/^    f01079da:	ff d0                	callq  *%rax$/;"	l
f01079dc	obj/kern/kernel.asm	/^    f01079dc:	48 98                	cltq   $/;"	l
f01079de	obj/kern/kernel.asm	/^    f01079de:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f01079e2	obj/kern/kernel.asm	/^    f01079e2:	48 89 c2             	mov    %rax,%rdx$/;"	l
f01079e5	obj/kern/kernel.asm	/^    f01079e5:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f01079e9	obj/kern/kernel.asm	/^    f01079e9:	48 29 c2             	sub    %rax,%rdx$/;"	l
f01079ec	obj/kern/kernel.asm	/^    f01079ec:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f01079f3	obj/kern/kernel.asm	/^    f01079f3:	00 00 00 $/;"	l
f01079f6	obj/kern/kernel.asm	/^    f01079f6:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f01079fa	obj/kern/kernel.asm	/^    f01079fa:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
f01079fe	obj/kern/kernel.asm	/^    f01079fe:	48 85 c0             	test   %rax,%rax$/;"	l
f0107a01	obj/kern/kernel.asm	/^    f0107a01:	74 36                	je     fffffffff0107a39 <end+0xfffffffefe666699>$/;"	l
f0107a03	obj/kern/kernel.asm	/^    f0107a03:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f0107a0a	obj/kern/kernel.asm	/^    f0107a0a:	00 00 00 $/;"	l
f0107a0d	obj/kern/kernel.asm	/^    f0107a0d:	ff d0                	callq  *%rax$/;"	l
f0107a0f	obj/kern/kernel.asm	/^    f0107a0f:	48 98                	cltq   $/;"	l
f0107a11	obj/kern/kernel.asm	/^    f0107a11:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f0107a15	obj/kern/kernel.asm	/^    f0107a15:	48 89 c2             	mov    %rax,%rdx$/;"	l
f0107a18	obj/kern/kernel.asm	/^    f0107a18:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f0107a1c	obj/kern/kernel.asm	/^    f0107a1c:	48 29 c2             	sub    %rax,%rdx$/;"	l
f0107a1f	obj/kern/kernel.asm	/^    f0107a1f:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f0107a26	obj/kern/kernel.asm	/^    f0107a26:	00 00 00 $/;"	l
f0107a29	obj/kern/kernel.asm	/^    f0107a29:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f0107a2d	obj/kern/kernel.asm	/^    f0107a2d:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
f0107a31	obj/kern/kernel.asm	/^    f0107a31:	8b 80 c8 00 00 00    	mov    0xc8(%rax),%eax$/;"	l
f0107a37	obj/kern/kernel.asm	/^    f0107a37:	eb 05                	jmp    fffffffff0107a3e <end+0xfffffffefe66669e>$/;"	l
f0107a39	obj/kern/kernel.asm	/^    f0107a39:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0107a3e	obj/kern/kernel.asm	/^    f0107a3e:	89 da                	mov    %ebx,%edx$/;"	l
f0107a40	obj/kern/kernel.asm	/^    f0107a40:	89 c6                	mov    %eax,%esi$/;"	l
f0107a42	obj/kern/kernel.asm	/^    f0107a42:	48 bf 24 27 11 f0 00 	mov    $0xf0112724,%rdi$/;"	l
f0107a49	obj/kern/kernel.asm	/^    f0107a49:	00 00 00 $/;"	l
f0107a4c	obj/kern/kernel.asm	/^    f0107a4c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0107a51	obj/kern/kernel.asm	/^    f0107a51:	48 b9 eb 88 10 f0 00 	mov    $0xf01088eb,%rcx$/;"	l
f0107a58	obj/kern/kernel.asm	/^    f0107a58:	00 00 00 $/;"	l
f0107a5b	obj/kern/kernel.asm	/^    f0107a5b:	ff d1                	callq  *%rcx$/;"	l
f0107a5d	obj/kern/kernel.asm	/^    f0107a5d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0107a62	obj/kern/kernel.asm	/^    f0107a62:	48 83 c4 28          	add    $0x28,%rsp$/;"	l
f0107a66	obj/kern/kernel.asm	/^    f0107a66:	5b                   	pop    %rbx$/;"	l
f0107a67	obj/kern/kernel.asm	/^    f0107a67:	c9                   	leaveq $/;"	l
f0107a68	obj/kern/kernel.asm	/^    f0107a68:	c3                   	retq   $/;"	l
f0107a69	obj/kern/kernel.asm	/^    f0107a69:	55                   	push   %rbp$/;"	l
f0107a6a	obj/kern/kernel.asm	/^    f0107a6a:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f0107a6d	obj/kern/kernel.asm	/^    f0107a6d:	53                   	push   %rbx$/;"	l
f0107a6e	obj/kern/kernel.asm	/^    f0107a6e:	48 83 ec 58          	sub    $0x58,%rsp$/;"	l
f0107a72	obj/kern/kernel.asm	/^    f0107a72:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)$/;"	l
f0107a76	obj/kern/kernel.asm	/^    f0107a76:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)$/;"	l
f0107a7a	obj/kern/kernel.asm	/^    f0107a7a:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)$/;"	l
f0107a7e	obj/kern/kernel.asm	/^    f0107a7e:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)$/;"	l
f0107a85	obj/kern/kernel.asm	/^    f0107a85:	00 $/;"	l
f0107a86	obj/kern/kernel.asm	/^    f0107a86:	48 8b 45 b0          	mov    -0x50(%rbp),%rax$/;"	l
f0107a8a	obj/kern/kernel.asm	/^    f0107a8a:	48 89 45 d0          	mov    %rax,-0x30(%rbp)$/;"	l
f0107a8e	obj/kern/kernel.asm	/^    f0107a8e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f0107a92	obj/kern/kernel.asm	/^    f0107a92:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
f0107a98	obj/kern/kernel.asm	/^    f0107a98:	48 89 45 c8          	mov    %rax,-0x38(%rbp)$/;"	l
f0107a9c	obj/kern/kernel.asm	/^    f0107a9c:	e9 80 00 00 00       	jmpq   fffffffff0107b21 <end+0xfffffffefe666781>$/;"	l
f0107aa1	obj/kern/kernel.asm	/^    f0107aa1:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)$/;"	l
f0107aa8	obj/kern/kernel.asm	/^    f0107aa8:	00 $/;"	l
f0107aa9	obj/kern/kernel.asm	/^    f0107aa9:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
f0107aae	obj/kern/kernel.asm	/^    f0107aae:	48 b8 fd 27 10 f0 00 	mov    $0xf01027fd,%rax$/;"	l
f0107ab5	obj/kern/kernel.asm	/^    f0107ab5:	00 00 00 $/;"	l
f0107ab8	obj/kern/kernel.asm	/^    f0107ab8:	ff d0                	callq  *%rax$/;"	l
f0107aba	obj/kern/kernel.asm	/^    f0107aba:	48 89 45 d8          	mov    %rax,-0x28(%rbp)$/;"	l
f0107abe	obj/kern/kernel.asm	/^    f0107abe:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)$/;"	l
f0107ac3	obj/kern/kernel.asm	/^    f0107ac3:	75 2a                	jne    fffffffff0107aef <end+0xfffffffefe66674f>$/;"	l
f0107ac5	obj/kern/kernel.asm	/^    f0107ac5:	48 ba 39 27 11 f0 00 	mov    $0xf0112739,%rdx$/;"	l
f0107acc	obj/kern/kernel.asm	/^    f0107acc:	00 00 00 $/;"	l
f0107acf	obj/kern/kernel.asm	/^    f0107acf:	be 66 01 00 00       	mov    $0x166,%esi$/;"	l
f0107ad4	obj/kern/kernel.asm	/^    f0107ad4:	48 bf f3 26 11 f0 00 	mov    $0xf01126f3,%rdi$/;"	l
f0107adb	obj/kern/kernel.asm	/^    f0107adb:	00 00 00 $/;"	l
f0107ade	obj/kern/kernel.asm	/^    f0107ade:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0107ae3	obj/kern/kernel.asm	/^    f0107ae3:	48 b9 18 05 10 f0 00 	mov    $0xf0100518,%rcx$/;"	l
f0107aea	obj/kern/kernel.asm	/^    f0107aea:	00 00 00 $/;"	l
f0107aed	obj/kern/kernel.asm	/^    f0107aed:	ff d1                	callq  *%rcx$/;"	l
f0107aef	obj/kern/kernel.asm	/^    f0107aef:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx$/;"	l
f0107af3	obj/kern/kernel.asm	/^    f0107af3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax$/;"	l
f0107af7	obj/kern/kernel.asm	/^    f0107af7:	48 8b 80 e0 00 00 00 	mov    0xe0(%rax),%rax$/;"	l
f0107afe	obj/kern/kernel.asm	/^    f0107afe:	48 8b 5d d8          	mov    -0x28(%rbp),%rbx$/;"	l
f0107b02	obj/kern/kernel.asm	/^    f0107b02:	b9 07 00 00 00       	mov    $0x7,%ecx$/;"	l
f0107b07	obj/kern/kernel.asm	/^    f0107b07:	48 89 de             	mov    %rbx,%rsi$/;"	l
f0107b0a	obj/kern/kernel.asm	/^    f0107b0a:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0107b0d	obj/kern/kernel.asm	/^    f0107b0d:	48 b8 97 2f 10 f0 00 	mov    $0xf0102f97,%rax$/;"	l
f0107b14	obj/kern/kernel.asm	/^    f0107b14:	00 00 00 $/;"	l
f0107b17	obj/kern/kernel.asm	/^    f0107b17:	ff d0                	callq  *%rax$/;"	l
f0107b19	obj/kern/kernel.asm	/^    f0107b19:	48 81 45 c8 00 10 00 	addq   $0x1000,-0x38(%rbp)$/;"	l
f0107b20	obj/kern/kernel.asm	/^    f0107b20:	00 $/;"	l
f0107b21	obj/kern/kernel.asm	/^    f0107b21:	48 c7 45 e0 00 10 00 	movq   $0x1000,-0x20(%rbp)$/;"	l
f0107b28	obj/kern/kernel.asm	/^    f0107b28:	00 $/;"	l
f0107b29	obj/kern/kernel.asm	/^    f0107b29:	48 8b 45 b0          	mov    -0x50(%rbp),%rax$/;"	l
f0107b2d	obj/kern/kernel.asm	/^    f0107b2d:	48 03 45 a8          	add    -0x58(%rbp),%rax$/;"	l
f0107b31	obj/kern/kernel.asm	/^    f0107b31:	48 03 45 e0          	add    -0x20(%rbp),%rax$/;"	l
f0107b35	obj/kern/kernel.asm	/^    f0107b35:	48 83 e8 01          	sub    $0x1,%rax$/;"	l
f0107b39	obj/kern/kernel.asm	/^    f0107b39:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
f0107b3d	obj/kern/kernel.asm	/^    f0107b3d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f0107b41	obj/kern/kernel.asm	/^    f0107b41:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f0107b46	obj/kern/kernel.asm	/^    f0107b46:	48 f7 75 e0          	divq   -0x20(%rbp)$/;"	l
f0107b4a	obj/kern/kernel.asm	/^    f0107b4a:	48 89 d0             	mov    %rdx,%rax$/;"	l
f0107b4d	obj/kern/kernel.asm	/^    f0107b4d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
f0107b51	obj/kern/kernel.asm	/^    f0107b51:	48 89 d1             	mov    %rdx,%rcx$/;"	l
f0107b54	obj/kern/kernel.asm	/^    f0107b54:	48 29 c1             	sub    %rax,%rcx$/;"	l
f0107b57	obj/kern/kernel.asm	/^    f0107b57:	48 89 c8             	mov    %rcx,%rax$/;"	l
f0107b5a	obj/kern/kernel.asm	/^    f0107b5a:	48 3b 45 c8          	cmp    -0x38(%rbp),%rax$/;"	l
f0107b5e	obj/kern/kernel.asm	/^    f0107b5e:	0f 87 3d ff ff ff    	ja     fffffffff0107aa1 <end+0xfffffffefe666701>$/;"	l
f0107b64	obj/kern/kernel.asm	/^    f0107b64:	48 83 c4 58          	add    $0x58,%rsp$/;"	l
f0107b68	obj/kern/kernel.asm	/^    f0107b68:	5b                   	pop    %rbx$/;"	l
f0107b69	obj/kern/kernel.asm	/^    f0107b69:	c9                   	leaveq $/;"	l
f0107b6a	obj/kern/kernel.asm	/^    f0107b6a:	c3                   	retq   $/;"	l
f0107b6b	obj/kern/kernel.asm	/^    f0107b6b:	55                   	push   %rbp$/;"	l
f0107b6c	obj/kern/kernel.asm	/^    f0107b6c:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f0107b6f	obj/kern/kernel.asm	/^    f0107b6f:	53                   	push   %rbx$/;"	l
f0107b70	obj/kern/kernel.asm	/^    f0107b70:	48 83 ec 68          	sub    $0x68,%rsp$/;"	l
f0107b74	obj/kern/kernel.asm	/^    f0107b74:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)$/;"	l
f0107b78	obj/kern/kernel.asm	/^    f0107b78:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)$/;"	l
f0107b7c	obj/kern/kernel.asm	/^    f0107b7c:	48 89 55 98          	mov    %rdx,-0x68(%rbp)$/;"	l
f0107b80	obj/kern/kernel.asm	/^    f0107b80:	48 8b 45 a0          	mov    -0x60(%rbp),%rax$/;"	l
f0107b84	obj/kern/kernel.asm	/^    f0107b84:	48 89 45 b0          	mov    %rax,-0x50(%rbp)$/;"	l
f0107b88	obj/kern/kernel.asm	/^    f0107b88:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx$/;"	l
f0107b8c	obj/kern/kernel.asm	/^    f0107b8c:	48 8b 45 b0          	mov    -0x50(%rbp),%rax$/;"	l
f0107b90	obj/kern/kernel.asm	/^    f0107b90:	48 8b 40 20          	mov    0x20(%rax),%rax$/;"	l
f0107b94	obj/kern/kernel.asm	/^    f0107b94:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f0107b98	obj/kern/kernel.asm	/^    f0107b98:	48 89 45 b8          	mov    %rax,-0x48(%rbp)$/;"	l
f0107b9c	obj/kern/kernel.asm	/^    f0107b9c:	48 8b 45 b0          	mov    -0x50(%rbp),%rax$/;"	l
f0107ba0	obj/kern/kernel.asm	/^    f0107ba0:	0f b7 40 38          	movzwl 0x38(%rax),%eax$/;"	l
f0107ba4	obj/kern/kernel.asm	/^    f0107ba4:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f0107ba7	obj/kern/kernel.asm	/^    f0107ba7:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f0107bab	obj/kern/kernel.asm	/^    f0107bab:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
f0107bb2	obj/kern/kernel.asm	/^    f0107bb2:	00 $/;"	l
f0107bb3	obj/kern/kernel.asm	/^    f0107bb3:	48 89 d1             	mov    %rdx,%rcx$/;"	l
f0107bb6	obj/kern/kernel.asm	/^    f0107bb6:	48 29 c1             	sub    %rax,%rcx$/;"	l
f0107bb9	obj/kern/kernel.asm	/^    f0107bb9:	48 89 c8             	mov    %rcx,%rax$/;"	l
f0107bbc	obj/kern/kernel.asm	/^    f0107bbc:	48 03 45 b8          	add    -0x48(%rbp),%rax$/;"	l
f0107bc0	obj/kern/kernel.asm	/^    f0107bc0:	48 89 45 c0          	mov    %rax,-0x40(%rbp)$/;"	l
f0107bc4	obj/kern/kernel.asm	/^    f0107bc4:	48 8b 45 a0          	mov    -0x60(%rbp),%rax$/;"	l
f0107bc8	obj/kern/kernel.asm	/^    f0107bc8:	48 89 c6             	mov    %rax,%rsi$/;"	l
f0107bcb	obj/kern/kernel.asm	/^    f0107bcb:	48 bf 4d 27 11 f0 00 	mov    $0xf011274d,%rdi$/;"	l
f0107bd2	obj/kern/kernel.asm	/^    f0107bd2:	00 00 00 $/;"	l
f0107bd5	obj/kern/kernel.asm	/^    f0107bd5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0107bda	obj/kern/kernel.asm	/^    f0107bda:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f0107be1	obj/kern/kernel.asm	/^    f0107be1:	00 00 00 $/;"	l
f0107be4	obj/kern/kernel.asm	/^    f0107be4:	ff d2                	callq  *%rdx$/;"	l
f0107be6	obj/kern/kernel.asm	/^    f0107be6:	0f 20 d8             	mov    %cr3,%rax$/;"	l
f0107be9	obj/kern/kernel.asm	/^    f0107be9:	48 89 45 d8          	mov    %rax,-0x28(%rbp)$/;"	l
f0107bed	obj/kern/kernel.asm	/^    f0107bed:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f0107bf1	obj/kern/kernel.asm	/^    f0107bf1:	89 45 cc             	mov    %eax,-0x34(%rbp)$/;"	l
f0107bf4	obj/kern/kernel.asm	/^    f0107bf4:	48 8b 45 b0          	mov    -0x50(%rbp),%rax$/;"	l
f0107bf8	obj/kern/kernel.asm	/^    f0107bf8:	48 8b 50 18          	mov    0x18(%rax),%rdx$/;"	l
f0107bfc	obj/kern/kernel.asm	/^    f0107bfc:	48 8b 45 a8          	mov    -0x58(%rbp),%rax$/;"	l
f0107c00	obj/kern/kernel.asm	/^    f0107c00:	48 89 90 98 00 00 00 	mov    %rdx,0x98(%rax)$/;"	l
f0107c07	obj/kern/kernel.asm	/^    f0107c07:	48 8b 45 a8          	mov    -0x58(%rbp),%rax$/;"	l
f0107c0b	obj/kern/kernel.asm	/^    f0107c0b:	48 8b 80 e8 00 00 00 	mov    0xe8(%rax),%rax$/;"	l
f0107c12	obj/kern/kernel.asm	/^    f0107c12:	48 89 45 e0          	mov    %rax,-0x20(%rbp)$/;"	l
f0107c16	obj/kern/kernel.asm	/^    f0107c16:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
f0107c1a	obj/kern/kernel.asm	/^    f0107c1a:	0f 22 d8             	mov    %rax,%cr3$/;"	l
f0107c1d	obj/kern/kernel.asm	/^    f0107c1d:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%rbp)$/;"	l
f0107c24	obj/kern/kernel.asm	/^    f0107c24:	e9 99 00 00 00       	jmpq   fffffffff0107cc2 <end+0xfffffffefe666922>$/;"	l
f0107c29	obj/kern/kernel.asm	/^    f0107c29:	48 8b 45 b8          	mov    -0x48(%rbp),%rax$/;"	l
f0107c2d	obj/kern/kernel.asm	/^    f0107c2d:	8b 00                	mov    (%rax),%eax$/;"	l
f0107c2f	obj/kern/kernel.asm	/^    f0107c2f:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0107c32	obj/kern/kernel.asm	/^    f0107c32:	0f 85 85 00 00 00    	jne    fffffffff0107cbd <end+0xfffffffefe66691d>$/;"	l
f0107c38	obj/kern/kernel.asm	/^    f0107c38:	48 8b 45 b8          	mov    -0x48(%rbp),%rax$/;"	l
f0107c3c	obj/kern/kernel.asm	/^    f0107c3c:	48 8b 50 28          	mov    0x28(%rax),%rdx$/;"	l
f0107c40	obj/kern/kernel.asm	/^    f0107c40:	48 8b 45 b8          	mov    -0x48(%rbp),%rax$/;"	l
f0107c44	obj/kern/kernel.asm	/^    f0107c44:	48 8b 40 10          	mov    0x10(%rax),%rax$/;"	l
f0107c48	obj/kern/kernel.asm	/^    f0107c48:	48 89 c1             	mov    %rax,%rcx$/;"	l
f0107c4b	obj/kern/kernel.asm	/^    f0107c4b:	48 8b 45 a8          	mov    -0x58(%rbp),%rax$/;"	l
f0107c4f	obj/kern/kernel.asm	/^    f0107c4f:	48 89 ce             	mov    %rcx,%rsi$/;"	l
f0107c52	obj/kern/kernel.asm	/^    f0107c52:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0107c55	obj/kern/kernel.asm	/^    f0107c55:	48 b8 69 7a 10 f0 00 	mov    $0xf0107a69,%rax$/;"	l
f0107c5c	obj/kern/kernel.asm	/^    f0107c5c:	00 00 00 $/;"	l
f0107c5f	obj/kern/kernel.asm	/^    f0107c5f:	ff d0                	callq  *%rax$/;"	l
f0107c61	obj/kern/kernel.asm	/^    f0107c61:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%rbp)$/;"	l
f0107c68	obj/kern/kernel.asm	/^    f0107c68:	48 8b 45 b8          	mov    -0x48(%rbp),%rax$/;"	l
f0107c6c	obj/kern/kernel.asm	/^    f0107c6c:	48 8b 50 28          	mov    0x28(%rax),%rdx$/;"	l
f0107c70	obj/kern/kernel.asm	/^    f0107c70:	48 8b 45 b8          	mov    -0x48(%rbp),%rax$/;"	l
f0107c74	obj/kern/kernel.asm	/^    f0107c74:	48 8b 40 10          	mov    0x10(%rax),%rax$/;"	l
f0107c78	obj/kern/kernel.asm	/^    f0107c78:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0107c7d	obj/kern/kernel.asm	/^    f0107c7d:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0107c80	obj/kern/kernel.asm	/^    f0107c80:	48 b8 42 ee 10 f0 00 	mov    $0xf010ee42,%rax$/;"	l
f0107c87	obj/kern/kernel.asm	/^    f0107c87:	00 00 00 $/;"	l
f0107c8a	obj/kern/kernel.asm	/^    f0107c8a:	ff d0                	callq  *%rax$/;"	l
f0107c8c	obj/kern/kernel.asm	/^    f0107c8c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax$/;"	l
f0107c90	obj/kern/kernel.asm	/^    f0107c90:	48 8b 50 20          	mov    0x20(%rax),%rdx$/;"	l
f0107c94	obj/kern/kernel.asm	/^    f0107c94:	48 8b 45 b8          	mov    -0x48(%rbp),%rax$/;"	l
f0107c98	obj/kern/kernel.asm	/^    f0107c98:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
f0107c9c	obj/kern/kernel.asm	/^    f0107c9c:	48 89 c1             	mov    %rax,%rcx$/;"	l
f0107c9f	obj/kern/kernel.asm	/^    f0107c9f:	48 03 4d a0          	add    -0x60(%rbp),%rcx$/;"	l
f0107ca3	obj/kern/kernel.asm	/^    f0107ca3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax$/;"	l
f0107ca7	obj/kern/kernel.asm	/^    f0107ca7:	48 8b 40 10          	mov    0x10(%rax),%rax$/;"	l
f0107cab	obj/kern/kernel.asm	/^    f0107cab:	48 89 ce             	mov    %rcx,%rsi$/;"	l
f0107cae	obj/kern/kernel.asm	/^    f0107cae:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0107cb1	obj/kern/kernel.asm	/^    f0107cb1:	48 b8 ee ef 10 f0 00 	mov    $0xf010efee,%rax$/;"	l
f0107cb8	obj/kern/kernel.asm	/^    f0107cb8:	00 00 00 $/;"	l
f0107cbb	obj/kern/kernel.asm	/^    f0107cbb:	ff d0                	callq  *%rax$/;"	l
f0107cbd	obj/kern/kernel.asm	/^    f0107cbd:	48 83 45 b8 38       	addq   $0x38,-0x48(%rbp)$/;"	l
f0107cc2	obj/kern/kernel.asm	/^    f0107cc2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax$/;"	l
f0107cc6	obj/kern/kernel.asm	/^    f0107cc6:	48 3b 45 c0          	cmp    -0x40(%rbp),%rax$/;"	l
f0107cca	obj/kern/kernel.asm	/^    f0107cca:	0f 82 59 ff ff ff    	jb     fffffffff0107c29 <end+0xfffffffefe666889>$/;"	l
f0107cd0	obj/kern/kernel.asm	/^    f0107cd0:	8b 45 cc             	mov    -0x34(%rbp),%eax$/;"	l
f0107cd3	obj/kern/kernel.asm	/^    f0107cd3:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
f0107cd7	obj/kern/kernel.asm	/^    f0107cd7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f0107cdb	obj/kern/kernel.asm	/^    f0107cdb:	0f 22 d8             	mov    %rax,%cr3$/;"	l
f0107cde	obj/kern/kernel.asm	/^    f0107cde:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f0107ce3	obj/kern/kernel.asm	/^    f0107ce3:	48 b8 fd 27 10 f0 00 	mov    $0xf01027fd,%rax$/;"	l
f0107cea	obj/kern/kernel.asm	/^    f0107cea:	00 00 00 $/;"	l
f0107ced	obj/kern/kernel.asm	/^    f0107ced:	ff d0                	callq  *%rax$/;"	l
f0107cef	obj/kern/kernel.asm	/^    f0107cef:	48 89 c3             	mov    %rax,%rbx$/;"	l
f0107cf2	obj/kern/kernel.asm	/^    f0107cf2:	48 8b 45 a8          	mov    -0x58(%rbp),%rax$/;"	l
f0107cf6	obj/kern/kernel.asm	/^    f0107cf6:	48 8b 80 e0 00 00 00 	mov    0xe0(%rax),%rax$/;"	l
f0107cfd	obj/kern/kernel.asm	/^    f0107cfd:	b9 06 00 00 00       	mov    $0x6,%ecx$/;"	l
f0107d02	obj/kern/kernel.asm	/^    f0107d02:	ba 00 d0 7f ef       	mov    $0xef7fd000,%edx$/;"	l
f0107d07	obj/kern/kernel.asm	/^    f0107d07:	48 89 de             	mov    %rbx,%rsi$/;"	l
f0107d0a	obj/kern/kernel.asm	/^    f0107d0a:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0107d0d	obj/kern/kernel.asm	/^    f0107d0d:	48 b8 97 2f 10 f0 00 	mov    $0xf0102f97,%rax$/;"	l
f0107d14	obj/kern/kernel.asm	/^    f0107d14:	00 00 00 $/;"	l
f0107d17	obj/kern/kernel.asm	/^    f0107d17:	ff d0                	callq  *%rax$/;"	l
f0107d19	obj/kern/kernel.asm	/^    f0107d19:	48 83 c4 68          	add    $0x68,%rsp$/;"	l
f0107d1d	obj/kern/kernel.asm	/^    f0107d1d:	5b                   	pop    %rbx$/;"	l
f0107d1e	obj/kern/kernel.asm	/^    f0107d1e:	c9                   	leaveq $/;"	l
f0107d1f	obj/kern/kernel.asm	/^    f0107d1f:	c3                   	retq   $/;"	l
f0107d20	obj/kern/kernel.asm	/^    f0107d20:	55                   	push   %rbp$/;"	l
f0107d21	obj/kern/kernel.asm	/^    f0107d21:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f0107d24	obj/kern/kernel.asm	/^    f0107d24:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
f0107d28	obj/kern/kernel.asm	/^    f0107d28:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
f0107d2c	obj/kern/kernel.asm	/^    f0107d2c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
f0107d30	obj/kern/kernel.asm	/^    f0107d30:	89 55 dc             	mov    %edx,-0x24(%rbp)$/;"	l
f0107d33	obj/kern/kernel.asm	/^    f0107d33:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)$/;"	l
f0107d3a	obj/kern/kernel.asm	/^    f0107d3a:	00 $/;"	l
f0107d3b	obj/kern/kernel.asm	/^    f0107d3b:	48 8d 45 f8          	lea    -0x8(%rbp),%rax$/;"	l
f0107d3f	obj/kern/kernel.asm	/^    f0107d3f:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0107d44	obj/kern/kernel.asm	/^    f0107d44:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0107d47	obj/kern/kernel.asm	/^    f0107d47:	48 b8 18 78 10 f0 00 	mov    $0xf0107818,%rax$/;"	l
f0107d4e	obj/kern/kernel.asm	/^    f0107d4e:	00 00 00 $/;"	l
f0107d51	obj/kern/kernel.asm	/^    f0107d51:	ff d0                	callq  *%rax$/;"	l
f0107d53	obj/kern/kernel.asm	/^    f0107d53:	83 7d dc 02          	cmpl   $0x2,-0x24(%rbp)$/;"	l
f0107d57	obj/kern/kernel.asm	/^    f0107d57:	75 19                	jne    fffffffff0107d72 <end+0xfffffffefe6669d2>$/;"	l
f0107d59	obj/kern/kernel.asm	/^    f0107d59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f0107d5d	obj/kern/kernel.asm	/^    f0107d5d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
f0107d61	obj/kern/kernel.asm	/^    f0107d61:	48 8b 92 a8 00 00 00 	mov    0xa8(%rdx),%rdx$/;"	l
f0107d68	obj/kern/kernel.asm	/^    f0107d68:	80 ce 30             	or     $0x30,%dh$/;"	l
f0107d6b	obj/kern/kernel.asm	/^    f0107d6b:	48 89 90 a8 00 00 00 	mov    %rdx,0xa8(%rax)$/;"	l
f0107d72	obj/kern/kernel.asm	/^    f0107d72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f0107d76	obj/kern/kernel.asm	/^    f0107d76:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx$/;"	l
f0107d7a	obj/kern/kernel.asm	/^    f0107d7a:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx$/;"	l
f0107d7e	obj/kern/kernel.asm	/^    f0107d7e:	48 89 ce             	mov    %rcx,%rsi$/;"	l
f0107d81	obj/kern/kernel.asm	/^    f0107d81:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0107d84	obj/kern/kernel.asm	/^    f0107d84:	48 b8 6b 7b 10 f0 00 	mov    $0xf0107b6b,%rax$/;"	l
f0107d8b	obj/kern/kernel.asm	/^    f0107d8b:	00 00 00 $/;"	l
f0107d8e	obj/kern/kernel.asm	/^    f0107d8e:	ff d0                	callq  *%rax$/;"	l
f0107d90	obj/kern/kernel.asm	/^    f0107d90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f0107d94	obj/kern/kernel.asm	/^    f0107d94:	8b 55 dc             	mov    -0x24(%rbp),%edx$/;"	l
f0107d97	obj/kern/kernel.asm	/^    f0107d97:	89 90 d0 00 00 00    	mov    %edx,0xd0(%rax)$/;"	l
f0107d9d	obj/kern/kernel.asm	/^    f0107d9d:	c9                   	leaveq $/;"	l
f0107d9e	obj/kern/kernel.asm	/^    f0107d9e:	c3                   	retq   $/;"	l
f0107d9f	obj/kern/kernel.asm	/^    f0107d9f:	55                   	push   %rbp$/;"	l
f0107da0	obj/kern/kernel.asm	/^    f0107da0:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f0107da3	obj/kern/kernel.asm	/^    f0107da3:	53                   	push   %rbx$/;"	l
f0107da4	obj/kern/kernel.asm	/^    f0107da4:	48 81 ec 98 00 00 00 	sub    $0x98,%rsp$/;"	l
f0107dab	obj/kern/kernel.asm	/^    f0107dab:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)$/;"	l
f0107db2	obj/kern/kernel.asm	/^    f0107db2:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f0107db9	obj/kern/kernel.asm	/^    f0107db9:	00 00 00 $/;"	l
f0107dbc	obj/kern/kernel.asm	/^    f0107dbc:	ff d0                	callq  *%rax$/;"	l
f0107dbe	obj/kern/kernel.asm	/^    f0107dbe:	48 98                	cltq   $/;"	l
f0107dc0	obj/kern/kernel.asm	/^    f0107dc0:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f0107dc4	obj/kern/kernel.asm	/^    f0107dc4:	48 89 c2             	mov    %rax,%rdx$/;"	l
f0107dc7	obj/kern/kernel.asm	/^    f0107dc7:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f0107dcb	obj/kern/kernel.asm	/^    f0107dcb:	48 29 c2             	sub    %rax,%rdx$/;"	l
f0107dce	obj/kern/kernel.asm	/^    f0107dce:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f0107dd5	obj/kern/kernel.asm	/^    f0107dd5:	00 00 00 $/;"	l
f0107dd8	obj/kern/kernel.asm	/^    f0107dd8:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f0107ddc	obj/kern/kernel.asm	/^    f0107ddc:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
f0107de0	obj/kern/kernel.asm	/^    f0107de0:	48 3b 85 68 ff ff ff 	cmp    -0x98(%rbp),%rax$/;"	l
f0107de7	obj/kern/kernel.asm	/^    f0107de7:	75 18                	jne    fffffffff0107e01 <end+0xfffffffefe666a61>$/;"	l
f0107de9	obj/kern/kernel.asm	/^    f0107de9:	48 b8 58 77 a2 f1 00 	mov    $0xf1a27758,%rax$/;"	l
f0107df0	obj/kern/kernel.asm	/^    f0107df0:	00 00 00 $/;"	l
f0107df3	obj/kern/kernel.asm	/^    f0107df3:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0107df6	obj/kern/kernel.asm	/^    f0107df6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
f0107dfa	obj/kern/kernel.asm	/^    f0107dfa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f0107dfe	obj/kern/kernel.asm	/^    f0107dfe:	0f 22 d8             	mov    %rax,%cr3$/;"	l
f0107e01	obj/kern/kernel.asm	/^    f0107e01:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax$/;"	l
f0107e08	obj/kern/kernel.asm	/^    f0107e08:	48 8b 80 e0 00 00 00 	mov    0xe0(%rax),%rax$/;"	l
f0107e0f	obj/kern/kernel.asm	/^    f0107e0f:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0107e12	obj/kern/kernel.asm	/^    f0107e12:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
f0107e18	obj/kern/kernel.asm	/^    f0107e18:	48 89 45 b0          	mov    %rax,-0x50(%rbp)$/;"	l
f0107e1c	obj/kern/kernel.asm	/^    f0107e1c:	48 8b 45 b0          	mov    -0x50(%rbp),%rax$/;"	l
f0107e20	obj/kern/kernel.asm	/^    f0107e20:	48 c1 e8 0c          	shr    $0xc,%rax$/;"	l
f0107e24	obj/kern/kernel.asm	/^    f0107e24:	89 45 bc             	mov    %eax,-0x44(%rbp)$/;"	l
f0107e27	obj/kern/kernel.asm	/^    f0107e27:	8b 55 bc             	mov    -0x44(%rbp),%edx$/;"	l
f0107e2a	obj/kern/kernel.asm	/^    f0107e2a:	48 b8 68 77 a2 f1 00 	mov    $0xf1a27768,%rax$/;"	l
f0107e31	obj/kern/kernel.asm	/^    f0107e31:	00 00 00 $/;"	l
f0107e34	obj/kern/kernel.asm	/^    f0107e34:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0107e37	obj/kern/kernel.asm	/^    f0107e37:	48 39 c2             	cmp    %rax,%rdx$/;"	l
f0107e3a	obj/kern/kernel.asm	/^    f0107e3a:	72 31                	jb     fffffffff0107e6d <end+0xfffffffefe666acd>$/;"	l
f0107e3c	obj/kern/kernel.asm	/^    f0107e3c:	48 8b 45 b0          	mov    -0x50(%rbp),%rax$/;"	l
f0107e40	obj/kern/kernel.asm	/^    f0107e40:	48 89 c1             	mov    %rax,%rcx$/;"	l
f0107e43	obj/kern/kernel.asm	/^    f0107e43:	48 ba d0 26 11 f0 00 	mov    $0xf01126d0,%rdx$/;"	l
f0107e4a	obj/kern/kernel.asm	/^    f0107e4a:	00 00 00 $/;"	l
f0107e4d	obj/kern/kernel.asm	/^    f0107e4d:	be f3 01 00 00       	mov    $0x1f3,%esi$/;"	l
f0107e52	obj/kern/kernel.asm	/^    f0107e52:	48 bf f3 26 11 f0 00 	mov    $0xf01126f3,%rdi$/;"	l
f0107e59	obj/kern/kernel.asm	/^    f0107e59:	00 00 00 $/;"	l
f0107e5c	obj/kern/kernel.asm	/^    f0107e5c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0107e61	obj/kern/kernel.asm	/^    f0107e61:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0107e68	obj/kern/kernel.asm	/^    f0107e68:	00 00 00 $/;"	l
f0107e6b	obj/kern/kernel.asm	/^    f0107e6b:	ff d3                	callq  *%rbx$/;"	l
f0107e6d	obj/kern/kernel.asm	/^    f0107e6d:	b8 00 00 00 f0       	mov    $0xf0000000,%eax$/;"	l
f0107e72	obj/kern/kernel.asm	/^    f0107e72:	48 03 45 b0          	add    -0x50(%rbp),%rax$/;"	l
f0107e76	obj/kern/kernel.asm	/^    f0107e76:	48 89 45 98          	mov    %rax,-0x68(%rbp)$/;"	l
f0107e7a	obj/kern/kernel.asm	/^    f0107e7a:	48 c7 45 a8 00 00 00 	movq   $0x0,-0x58(%rbp)$/;"	l
f0107e81	obj/kern/kernel.asm	/^    f0107e81:	00 $/;"	l
f0107e82	obj/kern/kernel.asm	/^    f0107e82:	e9 68 02 00 00       	jmpq   fffffffff01080ef <end+0xfffffffefe666d4f>$/;"	l
f0107e87	obj/kern/kernel.asm	/^    f0107e87:	48 8b 45 a8          	mov    -0x58(%rbp),%rax$/;"	l
f0107e8b	obj/kern/kernel.asm	/^    f0107e8b:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f0107e8f	obj/kern/kernel.asm	/^    f0107e8f:	48 03 45 98          	add    -0x68(%rbp),%rax$/;"	l
f0107e93	obj/kern/kernel.asm	/^    f0107e93:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0107e96	obj/kern/kernel.asm	/^    f0107e96:	83 e0 01             	and    $0x1,%eax$/;"	l
f0107e99	obj/kern/kernel.asm	/^    f0107e99:	85 c0                	test   %eax,%eax$/;"	l
f0107e9b	obj/kern/kernel.asm	/^    f0107e9b:	0f 84 48 02 00 00    	je     fffffffff01080e9 <end+0xfffffffefe666d49>$/;"	l
f0107ea1	obj/kern/kernel.asm	/^    f0107ea1:	48 8b 45 a8          	mov    -0x58(%rbp),%rax$/;"	l
f0107ea5	obj/kern/kernel.asm	/^    f0107ea5:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f0107ea9	obj/kern/kernel.asm	/^    f0107ea9:	48 03 45 98          	add    -0x68(%rbp),%rax$/;"	l
f0107ead	obj/kern/kernel.asm	/^    f0107ead:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0107eb0	obj/kern/kernel.asm	/^    f0107eb0:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
f0107eb6	obj/kern/kernel.asm	/^    f0107eb6:	48 89 45 c8          	mov    %rax,-0x38(%rbp)$/;"	l
f0107eba	obj/kern/kernel.asm	/^    f0107eba:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f0107ebe	obj/kern/kernel.asm	/^    f0107ebe:	48 c1 e8 0c          	shr    $0xc,%rax$/;"	l
f0107ec2	obj/kern/kernel.asm	/^    f0107ec2:	89 45 d4             	mov    %eax,-0x2c(%rbp)$/;"	l
f0107ec5	obj/kern/kernel.asm	/^    f0107ec5:	8b 55 d4             	mov    -0x2c(%rbp),%edx$/;"	l
f0107ec8	obj/kern/kernel.asm	/^    f0107ec8:	48 b8 68 77 a2 f1 00 	mov    $0xf1a27768,%rax$/;"	l
f0107ecf	obj/kern/kernel.asm	/^    f0107ecf:	00 00 00 $/;"	l
f0107ed2	obj/kern/kernel.asm	/^    f0107ed2:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0107ed5	obj/kern/kernel.asm	/^    f0107ed5:	48 39 c2             	cmp    %rax,%rdx$/;"	l
f0107ed8	obj/kern/kernel.asm	/^    f0107ed8:	72 31                	jb     fffffffff0107f0b <end+0xfffffffefe666b6b>$/;"	l
f0107eda	obj/kern/kernel.asm	/^    f0107eda:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f0107ede	obj/kern/kernel.asm	/^    f0107ede:	48 89 c1             	mov    %rax,%rcx$/;"	l
f0107ee1	obj/kern/kernel.asm	/^    f0107ee1:	48 ba d0 26 11 f0 00 	mov    $0xf01126d0,%rdx$/;"	l
f0107ee8	obj/kern/kernel.asm	/^    f0107ee8:	00 00 00 $/;"	l
f0107eeb	obj/kern/kernel.asm	/^    f0107eeb:	be fb 01 00 00       	mov    $0x1fb,%esi$/;"	l
f0107ef0	obj/kern/kernel.asm	/^    f0107ef0:	48 bf f3 26 11 f0 00 	mov    $0xf01126f3,%rdi$/;"	l
f0107ef7	obj/kern/kernel.asm	/^    f0107ef7:	00 00 00 $/;"	l
f0107efa	obj/kern/kernel.asm	/^    f0107efa:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0107eff	obj/kern/kernel.asm	/^    f0107eff:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0107f06	obj/kern/kernel.asm	/^    f0107f06:	00 00 00 $/;"	l
f0107f09	obj/kern/kernel.asm	/^    f0107f09:	ff d3                	callq  *%rbx$/;"	l
f0107f0b	obj/kern/kernel.asm	/^    f0107f0b:	b8 00 00 00 f0       	mov    $0xf0000000,%eax$/;"	l
f0107f10	obj/kern/kernel.asm	/^    f0107f10:	48 03 45 c8          	add    -0x38(%rbp),%rax$/;"	l
f0107f14	obj/kern/kernel.asm	/^    f0107f14:	48 89 45 c0          	mov    %rax,-0x40(%rbp)$/;"	l
f0107f18	obj/kern/kernel.asm	/^    f0107f18:	48 83 7d a8 03       	cmpq   $0x3,-0x58(%rbp)$/;"	l
f0107f1d	obj/kern/kernel.asm	/^    f0107f1d:	75 07                	jne    fffffffff0107f26 <end+0xfffffffefe666b86>$/;"	l
f0107f1f	obj/kern/kernel.asm	/^    f0107f1f:	b8 7c 01 00 00       	mov    $0x17c,%eax$/;"	l
f0107f24	obj/kern/kernel.asm	/^    f0107f24:	eb 05                	jmp    fffffffff0107f2b <end+0xfffffffefe666b8b>$/;"	l
f0107f26	obj/kern/kernel.asm	/^    f0107f26:	b8 ff 01 00 00       	mov    $0x1ff,%eax$/;"	l
f0107f2b	obj/kern/kernel.asm	/^    f0107f2b:	89 45 a4             	mov    %eax,-0x5c(%rbp)$/;"	l
f0107f2e	obj/kern/kernel.asm	/^    f0107f2e:	48 c7 45 80 00 00 00 	movq   $0x0,-0x80(%rbp)$/;"	l
f0107f35	obj/kern/kernel.asm	/^    f0107f35:	00 $/;"	l
f0107f36	obj/kern/kernel.asm	/^    f0107f36:	e9 4f 01 00 00       	jmpq   fffffffff010808a <end+0xfffffffefe666cea>$/;"	l
f0107f3b	obj/kern/kernel.asm	/^    f0107f3b:	48 8b 45 80          	mov    -0x80(%rbp),%rax$/;"	l
f0107f3f	obj/kern/kernel.asm	/^    f0107f3f:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f0107f43	obj/kern/kernel.asm	/^    f0107f43:	48 03 45 c0          	add    -0x40(%rbp),%rax$/;"	l
f0107f47	obj/kern/kernel.asm	/^    f0107f47:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0107f4a	obj/kern/kernel.asm	/^    f0107f4a:	83 e0 01             	and    $0x1,%eax$/;"	l
f0107f4d	obj/kern/kernel.asm	/^    f0107f4d:	85 c0                	test   %eax,%eax$/;"	l
f0107f4f	obj/kern/kernel.asm	/^    f0107f4f:	0f 84 2f 01 00 00    	je     fffffffff0108084 <end+0xfffffffefe666ce4>$/;"	l
f0107f55	obj/kern/kernel.asm	/^    f0107f55:	48 8b 45 80          	mov    -0x80(%rbp),%rax$/;"	l
f0107f59	obj/kern/kernel.asm	/^    f0107f59:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f0107f5d	obj/kern/kernel.asm	/^    f0107f5d:	48 03 45 c0          	add    -0x40(%rbp),%rax$/;"	l
f0107f61	obj/kern/kernel.asm	/^    f0107f61:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0107f64	obj/kern/kernel.asm	/^    f0107f64:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
f0107f6a	obj/kern/kernel.asm	/^    f0107f6a:	48 89 45 90          	mov    %rax,-0x70(%rbp)$/;"	l
f0107f6e	obj/kern/kernel.asm	/^    f0107f6e:	48 8b 45 90          	mov    -0x70(%rbp),%rax$/;"	l
f0107f72	obj/kern/kernel.asm	/^    f0107f72:	48 89 45 d8          	mov    %rax,-0x28(%rbp)$/;"	l
f0107f76	obj/kern/kernel.asm	/^    f0107f76:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f0107f7a	obj/kern/kernel.asm	/^    f0107f7a:	48 c1 e8 0c          	shr    $0xc,%rax$/;"	l
f0107f7e	obj/kern/kernel.asm	/^    f0107f7e:	89 45 e4             	mov    %eax,-0x1c(%rbp)$/;"	l
f0107f81	obj/kern/kernel.asm	/^    f0107f81:	8b 55 e4             	mov    -0x1c(%rbp),%edx$/;"	l
f0107f84	obj/kern/kernel.asm	/^    f0107f84:	48 b8 68 77 a2 f1 00 	mov    $0xf1a27768,%rax$/;"	l
f0107f8b	obj/kern/kernel.asm	/^    f0107f8b:	00 00 00 $/;"	l
f0107f8e	obj/kern/kernel.asm	/^    f0107f8e:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0107f91	obj/kern/kernel.asm	/^    f0107f91:	48 39 c2             	cmp    %rax,%rdx$/;"	l
f0107f94	obj/kern/kernel.asm	/^    f0107f94:	72 31                	jb     fffffffff0107fc7 <end+0xfffffffefe666c27>$/;"	l
f0107f96	obj/kern/kernel.asm	/^    f0107f96:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f0107f9a	obj/kern/kernel.asm	/^    f0107f9a:	48 89 c1             	mov    %rax,%rcx$/;"	l
f0107f9d	obj/kern/kernel.asm	/^    f0107f9d:	48 ba d0 26 11 f0 00 	mov    $0xf01126d0,%rdx$/;"	l
f0107fa4	obj/kern/kernel.asm	/^    f0107fa4:	00 00 00 $/;"	l
f0107fa7	obj/kern/kernel.asm	/^    f0107fa7:	be 05 02 00 00       	mov    $0x205,%esi$/;"	l
f0107fac	obj/kern/kernel.asm	/^    f0107fac:	48 bf f3 26 11 f0 00 	mov    $0xf01126f3,%rdi$/;"	l
f0107fb3	obj/kern/kernel.asm	/^    f0107fb3:	00 00 00 $/;"	l
f0107fb6	obj/kern/kernel.asm	/^    f0107fb6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0107fbb	obj/kern/kernel.asm	/^    f0107fbb:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0107fc2	obj/kern/kernel.asm	/^    f0107fc2:	00 00 00 $/;"	l
f0107fc5	obj/kern/kernel.asm	/^    f0107fc5:	ff d3                	callq  *%rbx$/;"	l
f0107fc7	obj/kern/kernel.asm	/^    f0107fc7:	b8 00 00 00 f0       	mov    $0xf0000000,%eax$/;"	l
f0107fcc	obj/kern/kernel.asm	/^    f0107fcc:	48 03 45 d8          	add    -0x28(%rbp),%rax$/;"	l
f0107fd0	obj/kern/kernel.asm	/^    f0107fd0:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)$/;"	l
f0107fd7	obj/kern/kernel.asm	/^    f0107fd7:	48 c7 45 88 00 00 00 	movq   $0x0,-0x78(%rbp)$/;"	l
f0107fde	obj/kern/kernel.asm	/^    f0107fde:	00 $/;"	l
f0107fdf	obj/kern/kernel.asm	/^    f0107fdf:	eb 62                	jmp    fffffffff0108043 <end+0xfffffffefe666ca3>$/;"	l
f0107fe1	obj/kern/kernel.asm	/^    f0107fe1:	48 8b 45 88          	mov    -0x78(%rbp),%rax$/;"	l
f0107fe5	obj/kern/kernel.asm	/^    f0107fe5:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f0107fe9	obj/kern/kernel.asm	/^    f0107fe9:	48 03 85 78 ff ff ff 	add    -0x88(%rbp),%rax$/;"	l
f0107ff0	obj/kern/kernel.asm	/^    f0107ff0:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0107ff3	obj/kern/kernel.asm	/^    f0107ff3:	83 e0 01             	and    $0x1,%eax$/;"	l
f0107ff6	obj/kern/kernel.asm	/^    f0107ff6:	84 c0                	test   %al,%al$/;"	l
f0107ff8	obj/kern/kernel.asm	/^    f0107ff8:	74 44                	je     fffffffff010803e <end+0xfffffffefe666c9e>$/;"	l
f0107ffa	obj/kern/kernel.asm	/^    f0107ffa:	48 8b 45 a8          	mov    -0x58(%rbp),%rax$/;"	l
f0107ffe	obj/kern/kernel.asm	/^    f0107ffe:	48 89 c2             	mov    %rax,%rdx$/;"	l
f0108001	obj/kern/kernel.asm	/^    f0108001:	48 c1 e2 1e          	shl    $0x1e,%rdx$/;"	l
f0108005	obj/kern/kernel.asm	/^    f0108005:	48 8b 45 80          	mov    -0x80(%rbp),%rax$/;"	l
f0108009	obj/kern/kernel.asm	/^    f0108009:	48 c1 e0 15          	shl    $0x15,%rax$/;"	l
f010800d	obj/kern/kernel.asm	/^    f010800d:	48 09 c2             	or     %rax,%rdx$/;"	l
f0108010	obj/kern/kernel.asm	/^    f0108010:	48 8b 45 88          	mov    -0x78(%rbp),%rax$/;"	l
f0108014	obj/kern/kernel.asm	/^    f0108014:	48 c1 e0 0c          	shl    $0xc,%rax$/;"	l
f0108018	obj/kern/kernel.asm	/^    f0108018:	48 09 d0             	or     %rdx,%rax$/;"	l
f010801b	obj/kern/kernel.asm	/^    f010801b:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010801e	obj/kern/kernel.asm	/^    f010801e:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax$/;"	l
f0108025	obj/kern/kernel.asm	/^    f0108025:	48 8b 80 e0 00 00 00 	mov    0xe0(%rax),%rax$/;"	l
f010802c	obj/kern/kernel.asm	/^    f010802c:	48 89 d6             	mov    %rdx,%rsi$/;"	l
f010802f	obj/kern/kernel.asm	/^    f010802f:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0108032	obj/kern/kernel.asm	/^    f0108032:	48 b8 16 31 10 f0 00 	mov    $0xf0103116,%rax$/;"	l
f0108039	obj/kern/kernel.asm	/^    f0108039:	00 00 00 $/;"	l
f010803c	obj/kern/kernel.asm	/^    f010803c:	ff d0                	callq  *%rax$/;"	l
f010803e	obj/kern/kernel.asm	/^    f010803e:	48 83 45 88 01       	addq   $0x1,-0x78(%rbp)$/;"	l
f0108043	obj/kern/kernel.asm	/^    f0108043:	48 81 7d 88 fe 01 00 	cmpq   $0x1fe,-0x78(%rbp)$/;"	l
f010804a	obj/kern/kernel.asm	/^    f010804a:	00 $/;"	l
f010804b	obj/kern/kernel.asm	/^    f010804b:	76 94                	jbe    fffffffff0107fe1 <end+0xfffffffefe666c41>$/;"	l
f010804d	obj/kern/kernel.asm	/^    f010804d:	48 8b 45 80          	mov    -0x80(%rbp),%rax$/;"	l
f0108051	obj/kern/kernel.asm	/^    f0108051:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f0108055	obj/kern/kernel.asm	/^    f0108055:	48 03 45 c0          	add    -0x40(%rbp),%rax$/;"	l
f0108059	obj/kern/kernel.asm	/^    f0108059:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)$/;"	l
f0108060	obj/kern/kernel.asm	/^    f0108060:	48 8b 45 90          	mov    -0x70(%rbp),%rax$/;"	l
f0108064	obj/kern/kernel.asm	/^    f0108064:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0108067	obj/kern/kernel.asm	/^    f0108067:	48 b8 51 6f 10 f0 00 	mov    $0xf0106f51,%rax$/;"	l
f010806e	obj/kern/kernel.asm	/^    f010806e:	00 00 00 $/;"	l
f0108071	obj/kern/kernel.asm	/^    f0108071:	ff d0                	callq  *%rax$/;"	l
f0108073	obj/kern/kernel.asm	/^    f0108073:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0108076	obj/kern/kernel.asm	/^    f0108076:	48 b8 2b 29 10 f0 00 	mov    $0xf010292b,%rax$/;"	l
f010807d	obj/kern/kernel.asm	/^    f010807d:	00 00 00 $/;"	l
f0108080	obj/kern/kernel.asm	/^    f0108080:	ff d0                	callq  *%rax$/;"	l
f0108082	obj/kern/kernel.asm	/^    f0108082:	eb 01                	jmp    fffffffff0108085 <end+0xfffffffefe666ce5>$/;"	l
f0108084	obj/kern/kernel.asm	/^    f0108084:	90                   	nop$/;"	l
f0108085	obj/kern/kernel.asm	/^    f0108085:	48 83 45 80 01       	addq   $0x1,-0x80(%rbp)$/;"	l
f010808a	obj/kern/kernel.asm	/^    f010808a:	8b 45 a4             	mov    -0x5c(%rbp),%eax$/;"	l
f010808d	obj/kern/kernel.asm	/^    f010808d:	48 98                	cltq   $/;"	l
f010808f	obj/kern/kernel.asm	/^    f010808f:	48 3b 45 80          	cmp    -0x80(%rbp),%rax$/;"	l
f0108093	obj/kern/kernel.asm	/^    f0108093:	0f 87 a2 fe ff ff    	ja     fffffffff0107f3b <end+0xfffffffefe666b9b>$/;"	l
f0108099	obj/kern/kernel.asm	/^    f0108099:	48 8b 45 a8          	mov    -0x58(%rbp),%rax$/;"	l
f010809d	obj/kern/kernel.asm	/^    f010809d:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f01080a1	obj/kern/kernel.asm	/^    f01080a1:	48 03 45 98          	add    -0x68(%rbp),%rax$/;"	l
f01080a5	obj/kern/kernel.asm	/^    f01080a5:	48 8b 00             	mov    (%rax),%rax$/;"	l
f01080a8	obj/kern/kernel.asm	/^    f01080a8:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
f01080ae	obj/kern/kernel.asm	/^    f01080ae:	48 89 45 90          	mov    %rax,-0x70(%rbp)$/;"	l
f01080b2	obj/kern/kernel.asm	/^    f01080b2:	48 8b 45 a8          	mov    -0x58(%rbp),%rax$/;"	l
f01080b6	obj/kern/kernel.asm	/^    f01080b6:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f01080ba	obj/kern/kernel.asm	/^    f01080ba:	48 03 45 98          	add    -0x68(%rbp),%rax$/;"	l
f01080be	obj/kern/kernel.asm	/^    f01080be:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)$/;"	l
f01080c5	obj/kern/kernel.asm	/^    f01080c5:	48 8b 45 90          	mov    -0x70(%rbp),%rax$/;"	l
f01080c9	obj/kern/kernel.asm	/^    f01080c9:	48 89 c7             	mov    %rax,%rdi$/;"	l
f01080cc	obj/kern/kernel.asm	/^    f01080cc:	48 b8 51 6f 10 f0 00 	mov    $0xf0106f51,%rax$/;"	l
f01080d3	obj/kern/kernel.asm	/^    f01080d3:	00 00 00 $/;"	l
f01080d6	obj/kern/kernel.asm	/^    f01080d6:	ff d0                	callq  *%rax$/;"	l
f01080d8	obj/kern/kernel.asm	/^    f01080d8:	48 89 c7             	mov    %rax,%rdi$/;"	l
f01080db	obj/kern/kernel.asm	/^    f01080db:	48 b8 2b 29 10 f0 00 	mov    $0xf010292b,%rax$/;"	l
f01080e2	obj/kern/kernel.asm	/^    f01080e2:	00 00 00 $/;"	l
f01080e5	obj/kern/kernel.asm	/^    f01080e5:	ff d0                	callq  *%rax$/;"	l
f01080e7	obj/kern/kernel.asm	/^    f01080e7:	eb 01                	jmp    fffffffff01080ea <end+0xfffffffefe666d4a>$/;"	l
f01080e9	obj/kern/kernel.asm	/^    f01080e9:	90                   	nop$/;"	l
f01080ea	obj/kern/kernel.asm	/^    f01080ea:	48 83 45 a8 01       	addq   $0x1,-0x58(%rbp)$/;"	l
f01080ef	obj/kern/kernel.asm	/^    f01080ef:	48 83 7d a8 03       	cmpq   $0x3,-0x58(%rbp)$/;"	l
f01080f4	obj/kern/kernel.asm	/^    f01080f4:	0f 86 8d fd ff ff    	jbe    fffffffff0107e87 <end+0xfffffffefe666ae7>$/;"	l
f01080fa	obj/kern/kernel.asm	/^    f01080fa:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax$/;"	l
f0108101	obj/kern/kernel.asm	/^    f0108101:	48 8b 80 e0 00 00 00 	mov    0xe0(%rax),%rax$/;"	l
f0108108	obj/kern/kernel.asm	/^    f0108108:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010810b	obj/kern/kernel.asm	/^    f010810b:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
f0108111	obj/kern/kernel.asm	/^    f0108111:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0108114	obj/kern/kernel.asm	/^    f0108114:	48 b8 51 6f 10 f0 00 	mov    $0xf0106f51,%rax$/;"	l
f010811b	obj/kern/kernel.asm	/^    f010811b:	00 00 00 $/;"	l
f010811e	obj/kern/kernel.asm	/^    f010811e:	ff d0                	callq  *%rax$/;"	l
f0108120	obj/kern/kernel.asm	/^    f0108120:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0108123	obj/kern/kernel.asm	/^    f0108123:	48 b8 2b 29 10 f0 00 	mov    $0xf010292b,%rax$/;"	l
f010812a	obj/kern/kernel.asm	/^    f010812a:	00 00 00 $/;"	l
f010812d	obj/kern/kernel.asm	/^    f010812d:	ff d0                	callq  *%rax$/;"	l
f010812f	obj/kern/kernel.asm	/^    f010812f:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax$/;"	l
f0108136	obj/kern/kernel.asm	/^    f0108136:	48 8b 80 e0 00 00 00 	mov    0xe0(%rax),%rax$/;"	l
f010813d	obj/kern/kernel.asm	/^    f010813d:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)$/;"	l
f0108144	obj/kern/kernel.asm	/^    f0108144:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax$/;"	l
f010814b	obj/kern/kernel.asm	/^    f010814b:	48 8b 80 e8 00 00 00 	mov    0xe8(%rax),%rax$/;"	l
f0108152	obj/kern/kernel.asm	/^    f0108152:	48 89 45 90          	mov    %rax,-0x70(%rbp)$/;"	l
f0108156	obj/kern/kernel.asm	/^    f0108156:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax$/;"	l
f010815d	obj/kern/kernel.asm	/^    f010815d:	48 c7 80 e0 00 00 00 	movq   $0x0,0xe0(%rax)$/;"	l
f0108164	obj/kern/kernel.asm	/^    f0108164:	00 00 00 00 $/;"	l
f0108168	obj/kern/kernel.asm	/^    f0108168:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax$/;"	l
f010816f	obj/kern/kernel.asm	/^    f010816f:	48 c7 80 e8 00 00 00 	movq   $0x0,0xe8(%rax)$/;"	l
f0108176	obj/kern/kernel.asm	/^    f0108176:	00 00 00 00 $/;"	l
f010817a	obj/kern/kernel.asm	/^    f010817a:	48 8b 45 90          	mov    -0x70(%rbp),%rax$/;"	l
f010817e	obj/kern/kernel.asm	/^    f010817e:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0108181	obj/kern/kernel.asm	/^    f0108181:	48 b8 51 6f 10 f0 00 	mov    $0xf0106f51,%rax$/;"	l
f0108188	obj/kern/kernel.asm	/^    f0108188:	00 00 00 $/;"	l
f010818b	obj/kern/kernel.asm	/^    f010818b:	ff d0                	callq  *%rax$/;"	l
f010818d	obj/kern/kernel.asm	/^    f010818d:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0108190	obj/kern/kernel.asm	/^    f0108190:	48 b8 2b 29 10 f0 00 	mov    $0xf010292b,%rax$/;"	l
f0108197	obj/kern/kernel.asm	/^    f0108197:	00 00 00 $/;"	l
f010819a	obj/kern/kernel.asm	/^    f010819a:	ff d0                	callq  *%rax$/;"	l
f010819c	obj/kern/kernel.asm	/^    f010819c:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax$/;"	l
f01081a3	obj/kern/kernel.asm	/^    f01081a3:	c7 80 d4 00 00 00 00 	movl   $0x0,0xd4(%rax)$/;"	l
f01081aa	obj/kern/kernel.asm	/^    f01081aa:	00 00 00 $/;"	l
f01081ad	obj/kern/kernel.asm	/^    f01081ad:	48 b8 58 62 a2 f1 00 	mov    $0xf1a26258,%rax$/;"	l
f01081b4	obj/kern/kernel.asm	/^    f01081b4:	00 00 00 $/;"	l
f01081b7	obj/kern/kernel.asm	/^    f01081b7:	48 8b 10             	mov    (%rax),%rdx$/;"	l
f01081ba	obj/kern/kernel.asm	/^    f01081ba:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax$/;"	l
f01081c1	obj/kern/kernel.asm	/^    f01081c1:	48 89 90 c0 00 00 00 	mov    %rdx,0xc0(%rax)$/;"	l
f01081c8	obj/kern/kernel.asm	/^    f01081c8:	48 b8 58 62 a2 f1 00 	mov    $0xf1a26258,%rax$/;"	l
f01081cf	obj/kern/kernel.asm	/^    f01081cf:	00 00 00 $/;"	l
f01081d2	obj/kern/kernel.asm	/^    f01081d2:	48 8b 95 68 ff ff ff 	mov    -0x98(%rbp),%rdx$/;"	l
f01081d9	obj/kern/kernel.asm	/^    f01081d9:	48 89 10             	mov    %rdx,(%rax)$/;"	l
f01081dc	obj/kern/kernel.asm	/^    f01081dc:	48 81 c4 98 00 00 00 	add    $0x98,%rsp$/;"	l
f01081e3	obj/kern/kernel.asm	/^    f01081e3:	5b                   	pop    %rbx$/;"	l
f01081e4	obj/kern/kernel.asm	/^    f01081e4:	c9                   	leaveq $/;"	l
f01081e5	obj/kern/kernel.asm	/^    f01081e5:	c3                   	retq   $/;"	l
f01081e6	obj/kern/kernel.asm	/^    f01081e6:	55                   	push   %rbp$/;"	l
f01081e7	obj/kern/kernel.asm	/^    f01081e7:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f01081ea	obj/kern/kernel.asm	/^    f01081ea:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
f01081ee	obj/kern/kernel.asm	/^    f01081ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
f01081f2	obj/kern/kernel.asm	/^    f01081f2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f01081f6	obj/kern/kernel.asm	/^    f01081f6:	8b 80 d4 00 00 00    	mov    0xd4(%rax),%eax$/;"	l
f01081fc	obj/kern/kernel.asm	/^    f01081fc:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f01081ff	obj/kern/kernel.asm	/^    f01081ff:	75 47                	jne    fffffffff0108248 <end+0xfffffffefe666ea8>$/;"	l
f0108201	obj/kern/kernel.asm	/^    f0108201:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f0108208	obj/kern/kernel.asm	/^    f0108208:	00 00 00 $/;"	l
f010820b	obj/kern/kernel.asm	/^    f010820b:	ff d0                	callq  *%rax$/;"	l
f010820d	obj/kern/kernel.asm	/^    f010820d:	48 98                	cltq   $/;"	l
f010820f	obj/kern/kernel.asm	/^    f010820f:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f0108213	obj/kern/kernel.asm	/^    f0108213:	48 89 c2             	mov    %rax,%rdx$/;"	l
f0108216	obj/kern/kernel.asm	/^    f0108216:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f010821a	obj/kern/kernel.asm	/^    f010821a:	48 29 c2             	sub    %rax,%rdx$/;"	l
f010821d	obj/kern/kernel.asm	/^    f010821d:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f0108224	obj/kern/kernel.asm	/^    f0108224:	00 00 00 $/;"	l
f0108227	obj/kern/kernel.asm	/^    f0108227:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010822b	obj/kern/kernel.asm	/^    f010822b:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
f010822f	obj/kern/kernel.asm	/^    f010822f:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
f0108233	obj/kern/kernel.asm	/^    f0108233:	74 13                	je     fffffffff0108248 <end+0xfffffffefe666ea8>$/;"	l
f0108235	obj/kern/kernel.asm	/^    f0108235:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f0108239	obj/kern/kernel.asm	/^    f0108239:	c7 80 d4 00 00 00 01 	movl   $0x1,0xd4(%rax)$/;"	l
f0108240	obj/kern/kernel.asm	/^    f0108240:	00 00 00 $/;"	l
f0108243	obj/kern/kernel.asm	/^    f0108243:	e9 85 00 00 00       	jmpq   fffffffff01082cd <end+0xfffffffefe666f2d>$/;"	l
f0108248	obj/kern/kernel.asm	/^    f0108248:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f010824c	obj/kern/kernel.asm	/^    f010824c:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010824f	obj/kern/kernel.asm	/^    f010824f:	48 b8 9f 7d 10 f0 00 	mov    $0xf0107d9f,%rax$/;"	l
f0108256	obj/kern/kernel.asm	/^    f0108256:	00 00 00 $/;"	l
f0108259	obj/kern/kernel.asm	/^    f0108259:	ff d0                	callq  *%rax$/;"	l
f010825b	obj/kern/kernel.asm	/^    f010825b:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f0108262	obj/kern/kernel.asm	/^    f0108262:	00 00 00 $/;"	l
f0108265	obj/kern/kernel.asm	/^    f0108265:	ff d0                	callq  *%rax$/;"	l
f0108267	obj/kern/kernel.asm	/^    f0108267:	48 98                	cltq   $/;"	l
f0108269	obj/kern/kernel.asm	/^    f0108269:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f010826d	obj/kern/kernel.asm	/^    f010826d:	48 89 c2             	mov    %rax,%rdx$/;"	l
f0108270	obj/kern/kernel.asm	/^    f0108270:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f0108274	obj/kern/kernel.asm	/^    f0108274:	48 29 c2             	sub    %rax,%rdx$/;"	l
f0108277	obj/kern/kernel.asm	/^    f0108277:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f010827e	obj/kern/kernel.asm	/^    f010827e:	00 00 00 $/;"	l
f0108281	obj/kern/kernel.asm	/^    f0108281:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f0108285	obj/kern/kernel.asm	/^    f0108285:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
f0108289	obj/kern/kernel.asm	/^    f0108289:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
f010828d	obj/kern/kernel.asm	/^    f010828d:	75 3e                	jne    fffffffff01082cd <end+0xfffffffefe666f2d>$/;"	l
f010828f	obj/kern/kernel.asm	/^    f010828f:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f0108296	obj/kern/kernel.asm	/^    f0108296:	00 00 00 $/;"	l
f0108299	obj/kern/kernel.asm	/^    f0108299:	ff d0                	callq  *%rax$/;"	l
f010829b	obj/kern/kernel.asm	/^    f010829b:	48 98                	cltq   $/;"	l
f010829d	obj/kern/kernel.asm	/^    f010829d:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f01082a1	obj/kern/kernel.asm	/^    f01082a1:	48 89 c2             	mov    %rax,%rdx$/;"	l
f01082a4	obj/kern/kernel.asm	/^    f01082a4:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f01082a8	obj/kern/kernel.asm	/^    f01082a8:	48 29 c2             	sub    %rax,%rdx$/;"	l
f01082ab	obj/kern/kernel.asm	/^    f01082ab:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f01082b2	obj/kern/kernel.asm	/^    f01082b2:	00 00 00 $/;"	l
f01082b5	obj/kern/kernel.asm	/^    f01082b5:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f01082b9	obj/kern/kernel.asm	/^    f01082b9:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)$/;"	l
f01082c0	obj/kern/kernel.asm	/^    f01082c0:	00 $/;"	l
f01082c1	obj/kern/kernel.asm	/^    f01082c1:	48 b8 40 c8 10 f0 00 	mov    $0xf010c840,%rax$/;"	l
f01082c8	obj/kern/kernel.asm	/^    f01082c8:	00 00 00 $/;"	l
f01082cb	obj/kern/kernel.asm	/^    f01082cb:	ff d0                	callq  *%rax$/;"	l
f01082cd	obj/kern/kernel.asm	/^    f01082cd:	c9                   	leaveq $/;"	l
f01082ce	obj/kern/kernel.asm	/^    f01082ce:	c3                   	retq   $/;"	l
f01082cf	obj/kern/kernel.asm	/^    f01082cf:	55                   	push   %rbp$/;"	l
f01082d0	obj/kern/kernel.asm	/^    f01082d0:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f01082d3	obj/kern/kernel.asm	/^    f01082d3:	53                   	push   %rbx$/;"	l
f01082d4	obj/kern/kernel.asm	/^    f01082d4:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
f01082d8	obj/kern/kernel.asm	/^    f01082d8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
f01082dc	obj/kern/kernel.asm	/^    f01082dc:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f01082e3	obj/kern/kernel.asm	/^    f01082e3:	00 00 00 $/;"	l
f01082e6	obj/kern/kernel.asm	/^    f01082e6:	ff d0                	callq  *%rax$/;"	l
f01082e8	obj/kern/kernel.asm	/^    f01082e8:	48 98                	cltq   $/;"	l
f01082ea	obj/kern/kernel.asm	/^    f01082ea:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f01082ee	obj/kern/kernel.asm	/^    f01082ee:	48 89 c2             	mov    %rax,%rdx$/;"	l
f01082f1	obj/kern/kernel.asm	/^    f01082f1:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f01082f5	obj/kern/kernel.asm	/^    f01082f5:	48 29 c2             	sub    %rax,%rdx$/;"	l
f01082f8	obj/kern/kernel.asm	/^    f01082f8:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f01082ff	obj/kern/kernel.asm	/^    f01082ff:	00 00 00 $/;"	l
f0108302	obj/kern/kernel.asm	/^    f0108302:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f0108306	obj/kern/kernel.asm	/^    f0108306:	48 8b 58 08          	mov    0x8(%rax),%rbx$/;"	l
f010830a	obj/kern/kernel.asm	/^    f010830a:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f0108311	obj/kern/kernel.asm	/^    f0108311:	00 00 00 $/;"	l
f0108314	obj/kern/kernel.asm	/^    f0108314:	ff d0                	callq  *%rax$/;"	l
f0108316	obj/kern/kernel.asm	/^    f0108316:	89 83 dc 00 00 00    	mov    %eax,0xdc(%rbx)$/;"	l
f010831c	obj/kern/kernel.asm	/^    f010831c:	48 8b 65 e8          	mov    -0x18(%rbp),%rsp$/;"	l
f0108320	obj/kern/kernel.asm	/^    f0108320:	4c 8b 3c 24          	mov    (%rsp),%r15$/;"	l
f0108324	obj/kern/kernel.asm	/^    f0108324:	4c 8b 74 24 08       	mov    0x8(%rsp),%r14$/;"	l
f0108329	obj/kern/kernel.asm	/^    f0108329:	4c 8b 6c 24 10       	mov    0x10(%rsp),%r13$/;"	l
f010832e	obj/kern/kernel.asm	/^    f010832e:	4c 8b 64 24 18       	mov    0x18(%rsp),%r12$/;"	l
f0108333	obj/kern/kernel.asm	/^    f0108333:	4c 8b 5c 24 20       	mov    0x20(%rsp),%r11$/;"	l
f0108338	obj/kern/kernel.asm	/^    f0108338:	4c 8b 54 24 28       	mov    0x28(%rsp),%r10$/;"	l
f010833d	obj/kern/kernel.asm	/^    f010833d:	4c 8b 4c 24 30       	mov    0x30(%rsp),%r9$/;"	l
f0108342	obj/kern/kernel.asm	/^    f0108342:	4c 8b 44 24 38       	mov    0x38(%rsp),%r8$/;"	l
f0108347	obj/kern/kernel.asm	/^    f0108347:	48 8b 74 24 40       	mov    0x40(%rsp),%rsi$/;"	l
f010834c	obj/kern/kernel.asm	/^    f010834c:	48 8b 7c 24 48       	mov    0x48(%rsp),%rdi$/;"	l
f0108351	obj/kern/kernel.asm	/^    f0108351:	48 8b 6c 24 50       	mov    0x50(%rsp),%rbp$/;"	l
f0108356	obj/kern/kernel.asm	/^    f0108356:	48 8b 54 24 58       	mov    0x58(%rsp),%rdx$/;"	l
f010835b	obj/kern/kernel.asm	/^    f010835b:	48 8b 4c 24 60       	mov    0x60(%rsp),%rcx$/;"	l
f0108360	obj/kern/kernel.asm	/^    f0108360:	48 8b 5c 24 68       	mov    0x68(%rsp),%rbx$/;"	l
f0108365	obj/kern/kernel.asm	/^    f0108365:	48 8b 44 24 70       	mov    0x70(%rsp),%rax$/;"	l
f010836a	obj/kern/kernel.asm	/^    f010836a:	48 83 c4 78          	add    $0x78,%rsp$/;"	l
f010836e	obj/kern/kernel.asm	/^    f010836e:	8e 04 24             	mov    (%rsp),%es$/;"	l
f0108371	obj/kern/kernel.asm	/^    f0108371:	8e 5c 24 08          	mov    0x8(%rsp),%ds$/;"	l
f0108375	obj/kern/kernel.asm	/^    f0108375:	48 83 c4 10          	add    $0x10,%rsp$/;"	l
f0108379	obj/kern/kernel.asm	/^    f0108379:	48 83 c4 10          	add    $0x10,%rsp$/;"	l
f010837d	obj/kern/kernel.asm	/^    f010837d:	48 cf                	iretq  $/;"	l
f010837f	obj/kern/kernel.asm	/^    f010837f:	48 ba 58 27 11 f0 00 	mov    $0xf0112758,%rdx$/;"	l
f0108386	obj/kern/kernel.asm	/^    f0108386:	00 00 00 $/;"	l
f0108389	obj/kern/kernel.asm	/^    f0108389:	be 53 02 00 00       	mov    $0x253,%esi$/;"	l
f010838e	obj/kern/kernel.asm	/^    f010838e:	48 bf f3 26 11 f0 00 	mov    $0xf01126f3,%rdi$/;"	l
f0108395	obj/kern/kernel.asm	/^    f0108395:	00 00 00 $/;"	l
f0108398	obj/kern/kernel.asm	/^    f0108398:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010839d	obj/kern/kernel.asm	/^    f010839d:	48 b9 18 05 10 f0 00 	mov    $0xf0100518,%rcx$/;"	l
f01083a4	obj/kern/kernel.asm	/^    f01083a4:	00 00 00 $/;"	l
f01083a7	obj/kern/kernel.asm	/^    f01083a7:	ff d1                	callq  *%rcx$/;"	l
f01083a9	obj/kern/kernel.asm	/^    f01083a9:	55                   	push   %rbp$/;"	l
f01083aa	obj/kern/kernel.asm	/^    f01083aa:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f01083ad	obj/kern/kernel.asm	/^    f01083ad:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
f01083b1	obj/kern/kernel.asm	/^    f01083b1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
f01083b5	obj/kern/kernel.asm	/^    f01083b5:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f01083bc	obj/kern/kernel.asm	/^    f01083bc:	00 00 00 $/;"	l
f01083bf	obj/kern/kernel.asm	/^    f01083bf:	ff d0                	callq  *%rax$/;"	l
f01083c1	obj/kern/kernel.asm	/^    f01083c1:	48 98                	cltq   $/;"	l
f01083c3	obj/kern/kernel.asm	/^    f01083c3:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f01083c7	obj/kern/kernel.asm	/^    f01083c7:	48 89 c2             	mov    %rax,%rdx$/;"	l
f01083ca	obj/kern/kernel.asm	/^    f01083ca:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f01083ce	obj/kern/kernel.asm	/^    f01083ce:	48 29 c2             	sub    %rax,%rdx$/;"	l
f01083d1	obj/kern/kernel.asm	/^    f01083d1:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f01083d8	obj/kern/kernel.asm	/^    f01083d8:	00 00 00 $/;"	l
f01083db	obj/kern/kernel.asm	/^    f01083db:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f01083df	obj/kern/kernel.asm	/^    f01083df:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
f01083e3	obj/kern/kernel.asm	/^    f01083e3:	48 85 c0             	test   %rax,%rax$/;"	l
f01083e6	obj/kern/kernel.asm	/^    f01083e6:	74 71                	je     fffffffff0108459 <end+0xfffffffefe6670b9>$/;"	l
f01083e8	obj/kern/kernel.asm	/^    f01083e8:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f01083ef	obj/kern/kernel.asm	/^    f01083ef:	00 00 00 $/;"	l
f01083f2	obj/kern/kernel.asm	/^    f01083f2:	ff d0                	callq  *%rax$/;"	l
f01083f4	obj/kern/kernel.asm	/^    f01083f4:	48 98                	cltq   $/;"	l
f01083f6	obj/kern/kernel.asm	/^    f01083f6:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f01083fa	obj/kern/kernel.asm	/^    f01083fa:	48 89 c2             	mov    %rax,%rdx$/;"	l
f01083fd	obj/kern/kernel.asm	/^    f01083fd:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f0108401	obj/kern/kernel.asm	/^    f0108401:	48 29 c2             	sub    %rax,%rdx$/;"	l
f0108404	obj/kern/kernel.asm	/^    f0108404:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f010840b	obj/kern/kernel.asm	/^    f010840b:	00 00 00 $/;"	l
f010840e	obj/kern/kernel.asm	/^    f010840e:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f0108412	obj/kern/kernel.asm	/^    f0108412:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
f0108416	obj/kern/kernel.asm	/^    f0108416:	8b 80 d4 00 00 00    	mov    0xd4(%rax),%eax$/;"	l
f010841c	obj/kern/kernel.asm	/^    f010841c:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f010841f	obj/kern/kernel.asm	/^    f010841f:	75 38                	jne    fffffffff0108459 <end+0xfffffffefe6670b9>$/;"	l
f0108421	obj/kern/kernel.asm	/^    f0108421:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f0108428	obj/kern/kernel.asm	/^    f0108428:	00 00 00 $/;"	l
f010842b	obj/kern/kernel.asm	/^    f010842b:	ff d0                	callq  *%rax$/;"	l
f010842d	obj/kern/kernel.asm	/^    f010842d:	48 98                	cltq   $/;"	l
f010842f	obj/kern/kernel.asm	/^    f010842f:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f0108433	obj/kern/kernel.asm	/^    f0108433:	48 89 c2             	mov    %rax,%rdx$/;"	l
f0108436	obj/kern/kernel.asm	/^    f0108436:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f010843a	obj/kern/kernel.asm	/^    f010843a:	48 29 c2             	sub    %rax,%rdx$/;"	l
f010843d	obj/kern/kernel.asm	/^    f010843d:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f0108444	obj/kern/kernel.asm	/^    f0108444:	00 00 00 $/;"	l
f0108447	obj/kern/kernel.asm	/^    f0108447:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010844b	obj/kern/kernel.asm	/^    f010844b:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
f010844f	obj/kern/kernel.asm	/^    f010844f:	c7 80 d4 00 00 00 02 	movl   $0x2,0xd4(%rax)$/;"	l
f0108456	obj/kern/kernel.asm	/^    f0108456:	00 00 00 $/;"	l
f0108459	obj/kern/kernel.asm	/^    f0108459:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f0108460	obj/kern/kernel.asm	/^    f0108460:	00 00 00 $/;"	l
f0108463	obj/kern/kernel.asm	/^    f0108463:	ff d0                	callq  *%rax$/;"	l
f0108465	obj/kern/kernel.asm	/^    f0108465:	48 98                	cltq   $/;"	l
f0108467	obj/kern/kernel.asm	/^    f0108467:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f010846b	obj/kern/kernel.asm	/^    f010846b:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010846e	obj/kern/kernel.asm	/^    f010846e:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f0108472	obj/kern/kernel.asm	/^    f0108472:	48 29 c2             	sub    %rax,%rdx$/;"	l
f0108475	obj/kern/kernel.asm	/^    f0108475:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f010847c	obj/kern/kernel.asm	/^    f010847c:	00 00 00 $/;"	l
f010847f	obj/kern/kernel.asm	/^    f010847f:	48 01 c2             	add    %rax,%rdx$/;"	l
f0108482	obj/kern/kernel.asm	/^    f0108482:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f0108486	obj/kern/kernel.asm	/^    f0108486:	48 89 42 08          	mov    %rax,0x8(%rdx)$/;"	l
f010848a	obj/kern/kernel.asm	/^    f010848a:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f0108491	obj/kern/kernel.asm	/^    f0108491:	00 00 00 $/;"	l
f0108494	obj/kern/kernel.asm	/^    f0108494:	ff d0                	callq  *%rax$/;"	l
f0108496	obj/kern/kernel.asm	/^    f0108496:	48 98                	cltq   $/;"	l
f0108498	obj/kern/kernel.asm	/^    f0108498:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f010849c	obj/kern/kernel.asm	/^    f010849c:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010849f	obj/kern/kernel.asm	/^    f010849f:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f01084a3	obj/kern/kernel.asm	/^    f01084a3:	48 29 c2             	sub    %rax,%rdx$/;"	l
f01084a6	obj/kern/kernel.asm	/^    f01084a6:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f01084ad	obj/kern/kernel.asm	/^    f01084ad:	00 00 00 $/;"	l
f01084b0	obj/kern/kernel.asm	/^    f01084b0:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f01084b4	obj/kern/kernel.asm	/^    f01084b4:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
f01084b8	obj/kern/kernel.asm	/^    f01084b8:	c7 80 d4 00 00 00 03 	movl   $0x3,0xd4(%rax)$/;"	l
f01084bf	obj/kern/kernel.asm	/^    f01084bf:	00 00 00 $/;"	l
f01084c2	obj/kern/kernel.asm	/^    f01084c2:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f01084c9	obj/kern/kernel.asm	/^    f01084c9:	00 00 00 $/;"	l
f01084cc	obj/kern/kernel.asm	/^    f01084cc:	ff d0                	callq  *%rax$/;"	l
f01084ce	obj/kern/kernel.asm	/^    f01084ce:	48 98                	cltq   $/;"	l
f01084d0	obj/kern/kernel.asm	/^    f01084d0:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f01084d4	obj/kern/kernel.asm	/^    f01084d4:	48 89 c2             	mov    %rax,%rdx$/;"	l
f01084d7	obj/kern/kernel.asm	/^    f01084d7:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f01084db	obj/kern/kernel.asm	/^    f01084db:	48 29 c2             	sub    %rax,%rdx$/;"	l
f01084de	obj/kern/kernel.asm	/^    f01084de:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f01084e5	obj/kern/kernel.asm	/^    f01084e5:	00 00 00 $/;"	l
f01084e8	obj/kern/kernel.asm	/^    f01084e8:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f01084ec	obj/kern/kernel.asm	/^    f01084ec:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
f01084f0	obj/kern/kernel.asm	/^    f01084f0:	8b 90 d8 00 00 00    	mov    0xd8(%rax),%edx$/;"	l
f01084f6	obj/kern/kernel.asm	/^    f01084f6:	83 c2 01             	add    $0x1,%edx$/;"	l
f01084f9	obj/kern/kernel.asm	/^    f01084f9:	89 90 d8 00 00 00    	mov    %edx,0xd8(%rax)$/;"	l
f01084ff	obj/kern/kernel.asm	/^    f01084ff:	48 b8 c2 6f 10 f0 00 	mov    $0xf0106fc2,%rax$/;"	l
f0108506	obj/kern/kernel.asm	/^    f0108506:	00 00 00 $/;"	l
f0108509	obj/kern/kernel.asm	/^    f0108509:	ff d0                	callq  *%rax$/;"	l
f010850b	obj/kern/kernel.asm	/^    f010850b:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f0108512	obj/kern/kernel.asm	/^    f0108512:	00 00 00 $/;"	l
f0108515	obj/kern/kernel.asm	/^    f0108515:	ff d0                	callq  *%rax$/;"	l
f0108517	obj/kern/kernel.asm	/^    f0108517:	48 98                	cltq   $/;"	l
f0108519	obj/kern/kernel.asm	/^    f0108519:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f010851d	obj/kern/kernel.asm	/^    f010851d:	48 89 c2             	mov    %rax,%rdx$/;"	l
f0108520	obj/kern/kernel.asm	/^    f0108520:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f0108524	obj/kern/kernel.asm	/^    f0108524:	48 29 c2             	sub    %rax,%rdx$/;"	l
f0108527	obj/kern/kernel.asm	/^    f0108527:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f010852e	obj/kern/kernel.asm	/^    f010852e:	00 00 00 $/;"	l
f0108531	obj/kern/kernel.asm	/^    f0108531:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f0108535	obj/kern/kernel.asm	/^    f0108535:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
f0108539	obj/kern/kernel.asm	/^    f0108539:	48 8b 80 e8 00 00 00 	mov    0xe8(%rax),%rax$/;"	l
f0108540	obj/kern/kernel.asm	/^    f0108540:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
f0108544	obj/kern/kernel.asm	/^    f0108544:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f0108548	obj/kern/kernel.asm	/^    f0108548:	0f 22 d8             	mov    %rax,%cr3$/;"	l
f010854b	obj/kern/kernel.asm	/^    f010854b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010854f	obj/kern/kernel.asm	/^    f010854f:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0108552	obj/kern/kernel.asm	/^    f0108552:	48 b8 cf 82 10 f0 00 	mov    $0xf01082cf,%rax$/;"	l
f0108559	obj/kern/kernel.asm	/^    f0108559:	00 00 00 $/;"	l
f010855c	obj/kern/kernel.asm	/^    f010855c:	ff d0                	callq  *%rax$/;"	l
f0108560	obj/kern/kernel.asm	/^    f0108560:	55                   	push   %rbp$/;"	l
f0108561	obj/kern/kernel.asm	/^    f0108561:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f0108564	obj/kern/kernel.asm	/^    f0108564:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
f0108568	obj/kern/kernel.asm	/^    f0108568:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
f010856b	obj/kern/kernel.asm	/^    f010856b:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
f010856e	obj/kern/kernel.asm	/^    f010856e:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0108571	obj/kern/kernel.asm	/^    f0108571:	c7 45 f4 70 00 00 00 	movl   $0x70,-0xc(%rbp)$/;"	l
f0108578	obj/kern/kernel.asm	/^    f0108578:	88 45 f3             	mov    %al,-0xd(%rbp)$/;"	l
f010857b	obj/kern/kernel.asm	/^    f010857b:	0f b6 45 f3          	movzbl -0xd(%rbp),%eax$/;"	l
f010857f	obj/kern/kernel.asm	/^    f010857f:	8b 55 f4             	mov    -0xc(%rbp),%edx$/;"	l
f0108582	obj/kern/kernel.asm	/^    f0108582:	ee                   	out    %al,(%dx)$/;"	l
f0108583	obj/kern/kernel.asm	/^    f0108583:	c7 45 f8 71 00 00 00 	movl   $0x71,-0x8(%rbp)$/;"	l
f010858a	obj/kern/kernel.asm	/^    f010858a:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
f010858d	obj/kern/kernel.asm	/^    f010858d:	89 c2                	mov    %eax,%edx$/;"	l
f010858f	obj/kern/kernel.asm	/^    f010858f:	ec                   	in     (%dx),%al$/;"	l
f0108590	obj/kern/kernel.asm	/^    f0108590:	88 45 ff             	mov    %al,-0x1(%rbp)$/;"	l
f0108593	obj/kern/kernel.asm	/^    f0108593:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax$/;"	l
f0108597	obj/kern/kernel.asm	/^    f0108597:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010859a	obj/kern/kernel.asm	/^    f010859a:	c9                   	leaveq $/;"	l
f010859b	obj/kern/kernel.asm	/^    f010859b:	c3                   	retq   $/;"	l
f010859c	obj/kern/kernel.asm	/^    f010859c:	55                   	push   %rbp$/;"	l
f010859d	obj/kern/kernel.asm	/^    f010859d:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f01085a0	obj/kern/kernel.asm	/^    f01085a0:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
f01085a4	obj/kern/kernel.asm	/^    f01085a4:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
f01085a7	obj/kern/kernel.asm	/^    f01085a7:	89 75 e8             	mov    %esi,-0x18(%rbp)$/;"	l
f01085aa	obj/kern/kernel.asm	/^    f01085aa:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
f01085ad	obj/kern/kernel.asm	/^    f01085ad:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01085b0	obj/kern/kernel.asm	/^    f01085b0:	c7 45 f4 70 00 00 00 	movl   $0x70,-0xc(%rbp)$/;"	l
f01085b7	obj/kern/kernel.asm	/^    f01085b7:	88 45 f3             	mov    %al,-0xd(%rbp)$/;"	l
f01085ba	obj/kern/kernel.asm	/^    f01085ba:	0f b6 45 f3          	movzbl -0xd(%rbp),%eax$/;"	l
f01085be	obj/kern/kernel.asm	/^    f01085be:	8b 55 f4             	mov    -0xc(%rbp),%edx$/;"	l
f01085c1	obj/kern/kernel.asm	/^    f01085c1:	ee                   	out    %al,(%dx)$/;"	l
f01085c2	obj/kern/kernel.asm	/^    f01085c2:	8b 45 e8             	mov    -0x18(%rbp),%eax$/;"	l
f01085c5	obj/kern/kernel.asm	/^    f01085c5:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01085c8	obj/kern/kernel.asm	/^    f01085c8:	c7 45 fc 71 00 00 00 	movl   $0x71,-0x4(%rbp)$/;"	l
f01085cf	obj/kern/kernel.asm	/^    f01085cf:	88 45 fb             	mov    %al,-0x5(%rbp)$/;"	l
f01085d2	obj/kern/kernel.asm	/^    f01085d2:	0f b6 45 fb          	movzbl -0x5(%rbp),%eax$/;"	l
f01085d6	obj/kern/kernel.asm	/^    f01085d6:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
f01085d9	obj/kern/kernel.asm	/^    f01085d9:	ee                   	out    %al,(%dx)$/;"	l
f01085da	obj/kern/kernel.asm	/^    f01085da:	c9                   	leaveq $/;"	l
f01085db	obj/kern/kernel.asm	/^    f01085db:	c3                   	retq   $/;"	l
f01085dc	obj/kern/kernel.asm	/^    f01085dc:	55                   	push   %rbp$/;"	l
f01085dd	obj/kern/kernel.asm	/^    f01085dd:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f01085e0	obj/kern/kernel.asm	/^    f01085e0:	48 83 ec 70          	sub    $0x70,%rsp$/;"	l
f01085e4	obj/kern/kernel.asm	/^    f01085e4:	48 b8 60 62 a2 f1 00 	mov    $0xf1a26260,%rax$/;"	l
f01085eb	obj/kern/kernel.asm	/^    f01085eb:	00 00 00 $/;"	l
f01085ee	obj/kern/kernel.asm	/^    f01085ee:	c6 00 01             	movb   $0x1,(%rax)$/;"	l
f01085f1	obj/kern/kernel.asm	/^    f01085f1:	c7 45 94 21 00 00 00 	movl   $0x21,-0x6c(%rbp)$/;"	l
f01085f8	obj/kern/kernel.asm	/^    f01085f8:	c6 45 93 ff          	movb   $0xff,-0x6d(%rbp)$/;"	l
f01085fc	obj/kern/kernel.asm	/^    f01085fc:	0f b6 45 93          	movzbl -0x6d(%rbp),%eax$/;"	l
f0108600	obj/kern/kernel.asm	/^    f0108600:	8b 55 94             	mov    -0x6c(%rbp),%edx$/;"	l
f0108603	obj/kern/kernel.asm	/^    f0108603:	ee                   	out    %al,(%dx)$/;"	l
f0108604	obj/kern/kernel.asm	/^    f0108604:	c7 45 9c a1 00 00 00 	movl   $0xa1,-0x64(%rbp)$/;"	l
f010860b	obj/kern/kernel.asm	/^    f010860b:	c6 45 9b ff          	movb   $0xff,-0x65(%rbp)$/;"	l
f010860f	obj/kern/kernel.asm	/^    f010860f:	0f b6 45 9b          	movzbl -0x65(%rbp),%eax$/;"	l
f0108613	obj/kern/kernel.asm	/^    f0108613:	8b 55 9c             	mov    -0x64(%rbp),%edx$/;"	l
f0108616	obj/kern/kernel.asm	/^    f0108616:	ee                   	out    %al,(%dx)$/;"	l
f0108617	obj/kern/kernel.asm	/^    f0108617:	c7 45 a4 20 00 00 00 	movl   $0x20,-0x5c(%rbp)$/;"	l
f010861e	obj/kern/kernel.asm	/^    f010861e:	c6 45 a3 11          	movb   $0x11,-0x5d(%rbp)$/;"	l
f0108622	obj/kern/kernel.asm	/^    f0108622:	0f b6 45 a3          	movzbl -0x5d(%rbp),%eax$/;"	l
f0108626	obj/kern/kernel.asm	/^    f0108626:	8b 55 a4             	mov    -0x5c(%rbp),%edx$/;"	l
f0108629	obj/kern/kernel.asm	/^    f0108629:	ee                   	out    %al,(%dx)$/;"	l
f010862a	obj/kern/kernel.asm	/^    f010862a:	c7 45 ac 21 00 00 00 	movl   $0x21,-0x54(%rbp)$/;"	l
f0108631	obj/kern/kernel.asm	/^    f0108631:	c6 45 ab 20          	movb   $0x20,-0x55(%rbp)$/;"	l
f0108635	obj/kern/kernel.asm	/^    f0108635:	0f b6 45 ab          	movzbl -0x55(%rbp),%eax$/;"	l
f0108639	obj/kern/kernel.asm	/^    f0108639:	8b 55 ac             	mov    -0x54(%rbp),%edx$/;"	l
f010863c	obj/kern/kernel.asm	/^    f010863c:	ee                   	out    %al,(%dx)$/;"	l
f010863d	obj/kern/kernel.asm	/^    f010863d:	c7 45 b4 21 00 00 00 	movl   $0x21,-0x4c(%rbp)$/;"	l
f0108644	obj/kern/kernel.asm	/^    f0108644:	c6 45 b3 04          	movb   $0x4,-0x4d(%rbp)$/;"	l
f0108648	obj/kern/kernel.asm	/^    f0108648:	0f b6 45 b3          	movzbl -0x4d(%rbp),%eax$/;"	l
f010864c	obj/kern/kernel.asm	/^    f010864c:	8b 55 b4             	mov    -0x4c(%rbp),%edx$/;"	l
f010864f	obj/kern/kernel.asm	/^    f010864f:	ee                   	out    %al,(%dx)$/;"	l
f0108650	obj/kern/kernel.asm	/^    f0108650:	c7 45 bc 21 00 00 00 	movl   $0x21,-0x44(%rbp)$/;"	l
f0108657	obj/kern/kernel.asm	/^    f0108657:	c6 45 bb 03          	movb   $0x3,-0x45(%rbp)$/;"	l
f010865b	obj/kern/kernel.asm	/^    f010865b:	0f b6 45 bb          	movzbl -0x45(%rbp),%eax$/;"	l
f010865f	obj/kern/kernel.asm	/^    f010865f:	8b 55 bc             	mov    -0x44(%rbp),%edx$/;"	l
f0108662	obj/kern/kernel.asm	/^    f0108662:	ee                   	out    %al,(%dx)$/;"	l
f0108663	obj/kern/kernel.asm	/^    f0108663:	c7 45 c4 a0 00 00 00 	movl   $0xa0,-0x3c(%rbp)$/;"	l
f010866a	obj/kern/kernel.asm	/^    f010866a:	c6 45 c3 11          	movb   $0x11,-0x3d(%rbp)$/;"	l
f010866e	obj/kern/kernel.asm	/^    f010866e:	0f b6 45 c3          	movzbl -0x3d(%rbp),%eax$/;"	l
f0108672	obj/kern/kernel.asm	/^    f0108672:	8b 55 c4             	mov    -0x3c(%rbp),%edx$/;"	l
f0108675	obj/kern/kernel.asm	/^    f0108675:	ee                   	out    %al,(%dx)$/;"	l
f0108676	obj/kern/kernel.asm	/^    f0108676:	c7 45 cc a1 00 00 00 	movl   $0xa1,-0x34(%rbp)$/;"	l
f010867d	obj/kern/kernel.asm	/^    f010867d:	c6 45 cb 28          	movb   $0x28,-0x35(%rbp)$/;"	l
f0108681	obj/kern/kernel.asm	/^    f0108681:	0f b6 45 cb          	movzbl -0x35(%rbp),%eax$/;"	l
f0108685	obj/kern/kernel.asm	/^    f0108685:	8b 55 cc             	mov    -0x34(%rbp),%edx$/;"	l
f0108688	obj/kern/kernel.asm	/^    f0108688:	ee                   	out    %al,(%dx)$/;"	l
f0108689	obj/kern/kernel.asm	/^    f0108689:	c7 45 d4 a1 00 00 00 	movl   $0xa1,-0x2c(%rbp)$/;"	l
f0108690	obj/kern/kernel.asm	/^    f0108690:	c6 45 d3 02          	movb   $0x2,-0x2d(%rbp)$/;"	l
f0108694	obj/kern/kernel.asm	/^    f0108694:	0f b6 45 d3          	movzbl -0x2d(%rbp),%eax$/;"	l
f0108698	obj/kern/kernel.asm	/^    f0108698:	8b 55 d4             	mov    -0x2c(%rbp),%edx$/;"	l
f010869b	obj/kern/kernel.asm	/^    f010869b:	ee                   	out    %al,(%dx)$/;"	l
f010869c	obj/kern/kernel.asm	/^    f010869c:	c7 45 dc a1 00 00 00 	movl   $0xa1,-0x24(%rbp)$/;"	l
f01086a3	obj/kern/kernel.asm	/^    f01086a3:	c6 45 db 01          	movb   $0x1,-0x25(%rbp)$/;"	l
f01086a7	obj/kern/kernel.asm	/^    f01086a7:	0f b6 45 db          	movzbl -0x25(%rbp),%eax$/;"	l
f01086ab	obj/kern/kernel.asm	/^    f01086ab:	8b 55 dc             	mov    -0x24(%rbp),%edx$/;"	l
f01086ae	obj/kern/kernel.asm	/^    f01086ae:	ee                   	out    %al,(%dx)$/;"	l
f01086af	obj/kern/kernel.asm	/^    f01086af:	c7 45 e4 20 00 00 00 	movl   $0x20,-0x1c(%rbp)$/;"	l
f01086b6	obj/kern/kernel.asm	/^    f01086b6:	c6 45 e3 68          	movb   $0x68,-0x1d(%rbp)$/;"	l
f01086ba	obj/kern/kernel.asm	/^    f01086ba:	0f b6 45 e3          	movzbl -0x1d(%rbp),%eax$/;"	l
f01086be	obj/kern/kernel.asm	/^    f01086be:	8b 55 e4             	mov    -0x1c(%rbp),%edx$/;"	l
f01086c1	obj/kern/kernel.asm	/^    f01086c1:	ee                   	out    %al,(%dx)$/;"	l
f01086c2	obj/kern/kernel.asm	/^    f01086c2:	c7 45 ec 20 00 00 00 	movl   $0x20,-0x14(%rbp)$/;"	l
f01086c9	obj/kern/kernel.asm	/^    f01086c9:	c6 45 eb 0a          	movb   $0xa,-0x15(%rbp)$/;"	l
f01086cd	obj/kern/kernel.asm	/^    f01086cd:	0f b6 45 eb          	movzbl -0x15(%rbp),%eax$/;"	l
f01086d1	obj/kern/kernel.asm	/^    f01086d1:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
f01086d4	obj/kern/kernel.asm	/^    f01086d4:	ee                   	out    %al,(%dx)$/;"	l
f01086d5	obj/kern/kernel.asm	/^    f01086d5:	c7 45 f4 a0 00 00 00 	movl   $0xa0,-0xc(%rbp)$/;"	l
f01086dc	obj/kern/kernel.asm	/^    f01086dc:	c6 45 f3 68          	movb   $0x68,-0xd(%rbp)$/;"	l
f01086e0	obj/kern/kernel.asm	/^    f01086e0:	0f b6 45 f3          	movzbl -0xd(%rbp),%eax$/;"	l
f01086e4	obj/kern/kernel.asm	/^    f01086e4:	8b 55 f4             	mov    -0xc(%rbp),%edx$/;"	l
f01086e7	obj/kern/kernel.asm	/^    f01086e7:	ee                   	out    %al,(%dx)$/;"	l
f01086e8	obj/kern/kernel.asm	/^    f01086e8:	c7 45 fc a0 00 00 00 	movl   $0xa0,-0x4(%rbp)$/;"	l
f01086ef	obj/kern/kernel.asm	/^    f01086ef:	c6 45 fb 0a          	movb   $0xa,-0x5(%rbp)$/;"	l
f01086f3	obj/kern/kernel.asm	/^    f01086f3:	0f b6 45 fb          	movzbl -0x5(%rbp),%eax$/;"	l
f01086f7	obj/kern/kernel.asm	/^    f01086f7:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
f01086fa	obj/kern/kernel.asm	/^    f01086fa:	ee                   	out    %al,(%dx)$/;"	l
f01086fb	obj/kern/kernel.asm	/^    f01086fb:	48 b8 74 06 13 f0 00 	mov    $0xf0130674,%rax$/;"	l
f0108702	obj/kern/kernel.asm	/^    f0108702:	00 00 00 $/;"	l
f0108705	obj/kern/kernel.asm	/^    f0108705:	0f b7 00             	movzwl (%rax),%eax$/;"	l
f0108708	obj/kern/kernel.asm	/^    f0108708:	66 83 f8 ff          	cmp    $0xffffffffffffffff,%ax$/;"	l
f010870c	obj/kern/kernel.asm	/^    f010870c:	74 1e                	je     fffffffff010872c <end+0xfffffffefe66738c>$/;"	l
f010870e	obj/kern/kernel.asm	/^    f010870e:	48 b8 74 06 13 f0 00 	mov    $0xf0130674,%rax$/;"	l
f0108715	obj/kern/kernel.asm	/^    f0108715:	00 00 00 $/;"	l
f0108718	obj/kern/kernel.asm	/^    f0108718:	0f b7 00             	movzwl (%rax),%eax$/;"	l
f010871b	obj/kern/kernel.asm	/^    f010871b:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f010871e	obj/kern/kernel.asm	/^    f010871e:	89 c7                	mov    %eax,%edi$/;"	l
f0108720	obj/kern/kernel.asm	/^    f0108720:	48 b8 2e 87 10 f0 00 	mov    $0xf010872e,%rax$/;"	l
f0108727	obj/kern/kernel.asm	/^    f0108727:	00 00 00 $/;"	l
f010872a	obj/kern/kernel.asm	/^    f010872a:	ff d0                	callq  *%rax$/;"	l
f010872c	obj/kern/kernel.asm	/^    f010872c:	c9                   	leaveq $/;"	l
f010872d	obj/kern/kernel.asm	/^    f010872d:	c3                   	retq   $/;"	l
f010872e	obj/kern/kernel.asm	/^    f010872e:	55                   	push   %rbp$/;"	l
f010872f	obj/kern/kernel.asm	/^    f010872f:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f0108732	obj/kern/kernel.asm	/^    f0108732:	53                   	push   %rbx$/;"	l
f0108733	obj/kern/kernel.asm	/^    f0108733:	48 83 ec 38          	sub    $0x38,%rsp$/;"	l
f0108737	obj/kern/kernel.asm	/^    f0108737:	89 f8                	mov    %edi,%eax$/;"	l
f0108739	obj/kern/kernel.asm	/^    f0108739:	66 89 45 cc          	mov    %ax,-0x34(%rbp)$/;"	l
f010873d	obj/kern/kernel.asm	/^    f010873d:	48 b8 74 06 13 f0 00 	mov    $0xf0130674,%rax$/;"	l
f0108744	obj/kern/kernel.asm	/^    f0108744:	00 00 00 $/;"	l
f0108747	obj/kern/kernel.asm	/^    f0108747:	0f b7 55 cc          	movzwl -0x34(%rbp),%edx$/;"	l
f010874b	obj/kern/kernel.asm	/^    f010874b:	66 89 10             	mov    %dx,(%rax)$/;"	l
f010874e	obj/kern/kernel.asm	/^    f010874e:	48 b8 60 62 a2 f1 00 	mov    $0xf1a26260,%rax$/;"	l
f0108755	obj/kern/kernel.asm	/^    f0108755:	00 00 00 $/;"	l
f0108758	obj/kern/kernel.asm	/^    f0108758:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f010875b	obj/kern/kernel.asm	/^    f010875b:	83 f0 01             	xor    $0x1,%eax$/;"	l
f010875e	obj/kern/kernel.asm	/^    f010875e:	84 c0                	test   %al,%al$/;"	l
f0108760	obj/kern/kernel.asm	/^    f0108760:	0f 85 bb 00 00 00    	jne    fffffffff0108821 <end+0xfffffffefe667481>$/;"	l
f0108766	obj/kern/kernel.asm	/^    f0108766:	0f b7 45 cc          	movzwl -0x34(%rbp),%eax$/;"	l
f010876a	obj/kern/kernel.asm	/^    f010876a:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010876d	obj/kern/kernel.asm	/^    f010876d:	c7 45 e4 21 00 00 00 	movl   $0x21,-0x1c(%rbp)$/;"	l
f0108774	obj/kern/kernel.asm	/^    f0108774:	88 45 e3             	mov    %al,-0x1d(%rbp)$/;"	l
f0108777	obj/kern/kernel.asm	/^    f0108777:	0f b6 45 e3          	movzbl -0x1d(%rbp),%eax$/;"	l
f010877b	obj/kern/kernel.asm	/^    f010877b:	8b 55 e4             	mov    -0x1c(%rbp),%edx$/;"	l
f010877e	obj/kern/kernel.asm	/^    f010877e:	ee                   	out    %al,(%dx)$/;"	l
f010877f	obj/kern/kernel.asm	/^    f010877f:	0f b7 45 cc          	movzwl -0x34(%rbp),%eax$/;"	l
f0108783	obj/kern/kernel.asm	/^    f0108783:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
f0108787	obj/kern/kernel.asm	/^    f0108787:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010878a	obj/kern/kernel.asm	/^    f010878a:	c7 45 ec a1 00 00 00 	movl   $0xa1,-0x14(%rbp)$/;"	l
f0108791	obj/kern/kernel.asm	/^    f0108791:	88 45 eb             	mov    %al,-0x15(%rbp)$/;"	l
f0108794	obj/kern/kernel.asm	/^    f0108794:	0f b6 45 eb          	movzbl -0x15(%rbp),%eax$/;"	l
f0108798	obj/kern/kernel.asm	/^    f0108798:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
f010879b	obj/kern/kernel.asm	/^    f010879b:	ee                   	out    %al,(%dx)$/;"	l
f010879c	obj/kern/kernel.asm	/^    f010879c:	48 bf 64 27 11 f0 00 	mov    $0xf0112764,%rdi$/;"	l
f01087a3	obj/kern/kernel.asm	/^    f01087a3:	00 00 00 $/;"	l
f01087a6	obj/kern/kernel.asm	/^    f01087a6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01087ab	obj/kern/kernel.asm	/^    f01087ab:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f01087b2	obj/kern/kernel.asm	/^    f01087b2:	00 00 00 $/;"	l
f01087b5	obj/kern/kernel.asm	/^    f01087b5:	ff d2                	callq  *%rdx$/;"	l
f01087b7	obj/kern/kernel.asm	/^    f01087b7:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)$/;"	l
f01087be	obj/kern/kernel.asm	/^    f01087be:	eb 3e                	jmp    fffffffff01087fe <end+0xfffffffefe66745e>$/;"	l
f01087c0	obj/kern/kernel.asm	/^    f01087c0:	0f b7 45 cc          	movzwl -0x34(%rbp),%eax$/;"	l
f01087c4	obj/kern/kernel.asm	/^    f01087c4:	89 c2                	mov    %eax,%edx$/;"	l
f01087c6	obj/kern/kernel.asm	/^    f01087c6:	f7 d2                	not    %edx$/;"	l
f01087c8	obj/kern/kernel.asm	/^    f01087c8:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
f01087cb	obj/kern/kernel.asm	/^    f01087cb:	89 d3                	mov    %edx,%ebx$/;"	l
f01087cd	obj/kern/kernel.asm	/^    f01087cd:	89 c1                	mov    %eax,%ecx$/;"	l
f01087cf	obj/kern/kernel.asm	/^    f01087cf:	d3 fb                	sar    %cl,%ebx$/;"	d
f01087d1	obj/kern/kernel.asm	/^    f01087d1:	89 d8                	mov    %ebx,%eax$/;"	l
f01087d3	obj/kern/kernel.asm	/^    f01087d3:	83 e0 01             	and    $0x1,%eax$/;"	l
f01087d6	obj/kern/kernel.asm	/^    f01087d6:	84 c0                	test   %al,%al$/;"	l
f01087d8	obj/kern/kernel.asm	/^    f01087d8:	74 20                	je     fffffffff01087fa <end+0xfffffffefe66745a>$/;"	l
f01087da	obj/kern/kernel.asm	/^    f01087da:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
f01087dd	obj/kern/kernel.asm	/^    f01087dd:	89 c6                	mov    %eax,%esi$/;"	l
f01087df	obj/kern/kernel.asm	/^    f01087df:	48 bf 78 27 11 f0 00 	mov    $0xf0112778,%rdi$/;"	l
f01087e6	obj/kern/kernel.asm	/^    f01087e6:	00 00 00 $/;"	l
f01087e9	obj/kern/kernel.asm	/^    f01087e9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01087ee	obj/kern/kernel.asm	/^    f01087ee:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f01087f5	obj/kern/kernel.asm	/^    f01087f5:	00 00 00 $/;"	l
f01087f8	obj/kern/kernel.asm	/^    f01087f8:	ff d2                	callq  *%rdx$/;"	l
f01087fa	obj/kern/kernel.asm	/^    f01087fa:	83 45 dc 01          	addl   $0x1,-0x24(%rbp)$/;"	l
f01087fe	obj/kern/kernel.asm	/^    f01087fe:	83 7d dc 0f          	cmpl   $0xf,-0x24(%rbp)$/;"	l
f0108802	obj/kern/kernel.asm	/^    f0108802:	7e bc                	jle    fffffffff01087c0 <end+0xfffffffefe667420>$/;"	l
f0108804	obj/kern/kernel.asm	/^    f0108804:	48 bf 7c 27 11 f0 00 	mov    $0xf011277c,%rdi$/;"	l
f010880b	obj/kern/kernel.asm	/^    f010880b:	00 00 00 $/;"	l
f010880e	obj/kern/kernel.asm	/^    f010880e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0108813	obj/kern/kernel.asm	/^    f0108813:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f010881a	obj/kern/kernel.asm	/^    f010881a:	00 00 00 $/;"	l
f010881d	obj/kern/kernel.asm	/^    f010881d:	ff d2                	callq  *%rdx$/;"	l
f010881f	obj/kern/kernel.asm	/^    f010881f:	eb 01                	jmp    fffffffff0108822 <end+0xfffffffefe667482>$/;"	l
f0108821	obj/kern/kernel.asm	/^    f0108821:	90                   	nop$/;"	l
f0108822	obj/kern/kernel.asm	/^    f0108822:	48 83 c4 38          	add    $0x38,%rsp$/;"	l
f0108826	obj/kern/kernel.asm	/^    f0108826:	5b                   	pop    %rbx$/;"	l
f0108827	obj/kern/kernel.asm	/^    f0108827:	c9                   	leaveq $/;"	l
f0108828	obj/kern/kernel.asm	/^    f0108828:	c3                   	retq   $/;"	l
f0108829	obj/kern/kernel.asm	/^    f0108829:	55                   	push   %rbp$/;"	l
f010882a	obj/kern/kernel.asm	/^    f010882a:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010882d	obj/kern/kernel.asm	/^    f010882d:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
f0108831	obj/kern/kernel.asm	/^    f0108831:	c7 45 f4 20 00 00 00 	movl   $0x20,-0xc(%rbp)$/;"	l
f0108838	obj/kern/kernel.asm	/^    f0108838:	c6 45 f3 20          	movb   $0x20,-0xd(%rbp)$/;"	l
f010883c	obj/kern/kernel.asm	/^    f010883c:	0f b6 45 f3          	movzbl -0xd(%rbp),%eax$/;"	l
f0108840	obj/kern/kernel.asm	/^    f0108840:	8b 55 f4             	mov    -0xc(%rbp),%edx$/;"	l
f0108843	obj/kern/kernel.asm	/^    f0108843:	ee                   	out    %al,(%dx)$/;"	l
f0108844	obj/kern/kernel.asm	/^    f0108844:	c7 45 fc a0 00 00 00 	movl   $0xa0,-0x4(%rbp)$/;"	l
f010884b	obj/kern/kernel.asm	/^    f010884b:	c6 45 fb 20          	movb   $0x20,-0x5(%rbp)$/;"	l
f010884f	obj/kern/kernel.asm	/^    f010884f:	0f b6 45 fb          	movzbl -0x5(%rbp),%eax$/;"	l
f0108853	obj/kern/kernel.asm	/^    f0108853:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
f0108856	obj/kern/kernel.asm	/^    f0108856:	ee                   	out    %al,(%dx)$/;"	l
f0108857	obj/kern/kernel.asm	/^    f0108857:	c9                   	leaveq $/;"	l
f0108858	obj/kern/kernel.asm	/^    f0108858:	c3                   	retq   $/;"	l
f0108859	obj/kern/kernel.asm	/^    f0108859:	00 00                	add    %al,(%rax)$/;"	l
f010885c	obj/kern/kernel.asm	/^    f010885c:	55                   	push   %rbp$/;"	l
f010885d	obj/kern/kernel.asm	/^    f010885d:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f0108860	obj/kern/kernel.asm	/^    f0108860:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
f0108864	obj/kern/kernel.asm	/^    f0108864:	89 7d fc             	mov    %edi,-0x4(%rbp)$/;"	l
f0108867	obj/kern/kernel.asm	/^    f0108867:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
f010886b	obj/kern/kernel.asm	/^    f010886b:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
f010886e	obj/kern/kernel.asm	/^    f010886e:	89 c7                	mov    %eax,%edi$/;"	l
f0108870	obj/kern/kernel.asm	/^    f0108870:	48 b8 77 12 10 f0 00 	mov    $0xf0101277,%rax$/;"	l
f0108877	obj/kern/kernel.asm	/^    f0108877:	00 00 00 $/;"	l
f010887a	obj/kern/kernel.asm	/^    f010887a:	ff d0                	callq  *%rax$/;"	l
f010887c	obj/kern/kernel.asm	/^    f010887c:	48 83 45 f0 04       	addq   $0x4,-0x10(%rbp)$/;"	l
f0108881	obj/kern/kernel.asm	/^    f0108881:	c9                   	leaveq $/;"	l
f0108882	obj/kern/kernel.asm	/^    f0108882:	c3                   	retq   $/;"	l
f0108883	obj/kern/kernel.asm	/^    f0108883:	55                   	push   %rbp$/;"	l
f0108884	obj/kern/kernel.asm	/^    f0108884:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f0108887	obj/kern/kernel.asm	/^    f0108887:	53                   	push   %rbx$/;"	l
f0108888	obj/kern/kernel.asm	/^    f0108888:	48 83 ec 38          	sub    $0x38,%rsp$/;"	l
f010888c	obj/kern/kernel.asm	/^    f010888c:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)$/;"	l
f0108890	obj/kern/kernel.asm	/^    f0108890:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)$/;"	l
f0108894	obj/kern/kernel.asm	/^    f0108894:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)$/;"	l
f010889b	obj/kern/kernel.asm	/^    f010889b:	48 8d 45 d0          	lea    -0x30(%rbp),%rax$/;"	l
f010889f	obj/kern/kernel.asm	/^    f010889f:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx$/;"	l
f01088a3	obj/kern/kernel.asm	/^    f01088a3:	48 8b 0a             	mov    (%rdx),%rcx$/;"	l
f01088a6	obj/kern/kernel.asm	/^    f01088a6:	48 89 08             	mov    %rcx,(%rax)$/;"	l
f01088a9	obj/kern/kernel.asm	/^    f01088a9:	48 8b 4a 08          	mov    0x8(%rdx),%rcx$/;"	l
f01088ad	obj/kern/kernel.asm	/^    f01088ad:	48 89 48 08          	mov    %rcx,0x8(%rax)$/;"	l
f01088b1	obj/kern/kernel.asm	/^    f01088b1:	48 8b 52 10          	mov    0x10(%rdx),%rdx$/;"	l
f01088b5	obj/kern/kernel.asm	/^    f01088b5:	48 89 50 10          	mov    %rdx,0x10(%rax)$/;"	l
f01088b9	obj/kern/kernel.asm	/^    f01088b9:	48 b8 5c 88 10 f0 00 	mov    $0xf010885c,%rax$/;"	l
f01088c0	obj/kern/kernel.asm	/^    f01088c0:	00 00 00 $/;"	l
f01088c3	obj/kern/kernel.asm	/^    f01088c3:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx$/;"	l
f01088c7	obj/kern/kernel.asm	/^    f01088c7:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx$/;"	l
f01088cb	obj/kern/kernel.asm	/^    f01088cb:	48 8d 5d ec          	lea    -0x14(%rbp),%rbx$/;"	l
f01088cf	obj/kern/kernel.asm	/^    f01088cf:	48 89 de             	mov    %rbx,%rsi$/;"	l
f01088d2	obj/kern/kernel.asm	/^    f01088d2:	48 89 c7             	mov    %rax,%rdi$/;"	l
f01088d5	obj/kern/kernel.asm	/^    f01088d5:	48 b8 cd e1 10 f0 00 	mov    $0xf010e1cd,%rax$/;"	l
f01088dc	obj/kern/kernel.asm	/^    f01088dc:	00 00 00 $/;"	l
f01088df	obj/kern/kernel.asm	/^    f01088df:	ff d0                	callq  *%rax$/;"	l
f01088e1	obj/kern/kernel.asm	/^    f01088e1:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
f01088e4	obj/kern/kernel.asm	/^    f01088e4:	48 83 c4 38          	add    $0x38,%rsp$/;"	l
f01088e8	obj/kern/kernel.asm	/^    f01088e8:	5b                   	pop    %rbx$/;"	l
f01088e9	obj/kern/kernel.asm	/^    f01088e9:	c9                   	leaveq $/;"	l
f01088ea	obj/kern/kernel.asm	/^    f01088ea:	c3                   	retq   $/;"	l
f01088eb	obj/kern/kernel.asm	/^    f01088eb:	55                   	push   %rbp$/;"	l
f01088ec	obj/kern/kernel.asm	/^    f01088ec:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f01088ef	obj/kern/kernel.asm	/^    f01088ef:	48 81 ec 00 01 00 00 	sub    $0x100,%rsp$/;"	l
f01088f6	obj/kern/kernel.asm	/^    f01088f6:	48 89 b5 58 ff ff ff 	mov    %rsi,-0xa8(%rbp)$/;"	l
f01088fd	obj/kern/kernel.asm	/^    f01088fd:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)$/;"	l
f0108904	obj/kern/kernel.asm	/^    f0108904:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)$/;"	l
f010890b	obj/kern/kernel.asm	/^    f010890b:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)$/;"	l
f0108912	obj/kern/kernel.asm	/^    f0108912:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)$/;"	l
f0108919	obj/kern/kernel.asm	/^    f0108919:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010891c	obj/kern/kernel.asm	/^    f010891c:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx$/;"	l
f0108923	obj/kern/kernel.asm	/^    f0108923:	00 $/;"	l
f0108924	obj/kern/kernel.asm	/^    f0108924:	48 b8 57 89 10 f0 00 	mov    $0xf0108957,%rax$/;"	l
f010892b	obj/kern/kernel.asm	/^    f010892b:	00 00 00 $/;"	l
f010892e	obj/kern/kernel.asm	/^    f010892e:	48 29 d0             	sub    %rdx,%rax$/;"	l
f0108931	obj/kern/kernel.asm	/^    f0108931:	48 8d 55 ff          	lea    -0x1(%rbp),%rdx$/;"	l
f0108935	obj/kern/kernel.asm	/^    f0108935:	ff e0                	jmpq   *%rax$/;"	l
f0108937	obj/kern/kernel.asm	/^    f0108937:	0f 29 7a f1          	movaps %xmm7,-0xf(%rdx)$/;"	l
f010893b	obj/kern/kernel.asm	/^    f010893b:	0f 29 72 e1          	movaps %xmm6,-0x1f(%rdx)$/;"	l
f010893f	obj/kern/kernel.asm	/^    f010893f:	0f 29 6a d1          	movaps %xmm5,-0x2f(%rdx)$/;"	l
f0108943	obj/kern/kernel.asm	/^    f0108943:	0f 29 62 c1          	movaps %xmm4,-0x3f(%rdx)$/;"	l
f0108947	obj/kern/kernel.asm	/^    f0108947:	0f 29 5a b1          	movaps %xmm3,-0x4f(%rdx)$/;"	l
f010894b	obj/kern/kernel.asm	/^    f010894b:	0f 29 52 a1          	movaps %xmm2,-0x5f(%rdx)$/;"	l
f010894f	obj/kern/kernel.asm	/^    f010894f:	0f 29 4a 91          	movaps %xmm1,-0x6f(%rdx)$/;"	l
f0108953	obj/kern/kernel.asm	/^    f0108953:	0f 29 42 81          	movaps %xmm0,-0x7f(%rdx)$/;"	l
f0108957	obj/kern/kernel.asm	/^    f0108957:	48 89 bd 08 ff ff ff 	mov    %rdi,-0xf8(%rbp)$/;"	l
f010895e	obj/kern/kernel.asm	/^    f010895e:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax$/;"	l
f0108965	obj/kern/kernel.asm	/^    f0108965:	c7 00 08 00 00 00    	movl   $0x8,(%rax)$/;"	l
f010896b	obj/kern/kernel.asm	/^    f010896b:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax$/;"	l
f0108972	obj/kern/kernel.asm	/^    f0108972:	c7 40 04 30 00 00 00 	movl   $0x30,0x4(%rax)$/;"	l
f0108979	obj/kern/kernel.asm	/^    f0108979:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax$/;"	l
f0108980	obj/kern/kernel.asm	/^    f0108980:	48 8d 55 10          	lea    0x10(%rbp),%rdx$/;"	l
f0108984	obj/kern/kernel.asm	/^    f0108984:	48 89 50 08          	mov    %rdx,0x8(%rax)$/;"	l
f0108988	obj/kern/kernel.asm	/^    f0108988:	48 8d 85 30 ff ff ff 	lea    -0xd0(%rbp),%rax$/;"	l
f010898f	obj/kern/kernel.asm	/^    f010898f:	48 8d 95 50 ff ff ff 	lea    -0xb0(%rbp),%rdx$/;"	l
f0108996	obj/kern/kernel.asm	/^    f0108996:	48 89 50 10          	mov    %rdx,0x10(%rax)$/;"	l
f010899a	obj/kern/kernel.asm	/^    f010899a:	48 8d 85 10 ff ff ff 	lea    -0xf0(%rbp),%rax$/;"	l
f01089a1	obj/kern/kernel.asm	/^    f01089a1:	48 8d 95 30 ff ff ff 	lea    -0xd0(%rbp),%rdx$/;"	l
f01089a8	obj/kern/kernel.asm	/^    f01089a8:	48 8b 0a             	mov    (%rdx),%rcx$/;"	l
f01089ab	obj/kern/kernel.asm	/^    f01089ab:	48 89 08             	mov    %rcx,(%rax)$/;"	l
f01089ae	obj/kern/kernel.asm	/^    f01089ae:	48 8b 4a 08          	mov    0x8(%rdx),%rcx$/;"	l
f01089b2	obj/kern/kernel.asm	/^    f01089b2:	48 89 48 08          	mov    %rcx,0x8(%rax)$/;"	l
f01089b6	obj/kern/kernel.asm	/^    f01089b6:	48 8b 52 10          	mov    0x10(%rdx),%rdx$/;"	l
f01089ba	obj/kern/kernel.asm	/^    f01089ba:	48 89 50 10          	mov    %rdx,0x10(%rax)$/;"	l
f01089be	obj/kern/kernel.asm	/^    f01089be:	48 8d 95 10 ff ff ff 	lea    -0xf0(%rbp),%rdx$/;"	l
f01089c5	obj/kern/kernel.asm	/^    f01089c5:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax$/;"	l
f01089cc	obj/kern/kernel.asm	/^    f01089cc:	48 89 d6             	mov    %rdx,%rsi$/;"	l
f01089cf	obj/kern/kernel.asm	/^    f01089cf:	48 89 c7             	mov    %rax,%rdi$/;"	l
f01089d2	obj/kern/kernel.asm	/^    f01089d2:	48 b8 83 88 10 f0 00 	mov    $0xf0108883,%rax$/;"	l
f01089d9	obj/kern/kernel.asm	/^    f01089d9:	00 00 00 $/;"	l
f01089dc	obj/kern/kernel.asm	/^    f01089dc:	ff d0                	callq  *%rax$/;"	l
f01089de	obj/kern/kernel.asm	/^    f01089de:	89 85 4c ff ff ff    	mov    %eax,-0xb4(%rbp)$/;"	l
f01089e4	obj/kern/kernel.asm	/^    f01089e4:	8b 85 4c ff ff ff    	mov    -0xb4(%rbp),%eax$/;"	l
f01089ea	obj/kern/kernel.asm	/^    f01089ea:	c9                   	leaveq $/;"	l
f01089eb	obj/kern/kernel.asm	/^    f01089eb:	c3                   	retq   $/;"	l
f01089ec	obj/kern/kernel.asm	/^    f01089ec:	55                   	push   %rbp$/;"	l
f01089ed	obj/kern/kernel.asm	/^    f01089ed:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f01089f0	obj/kern/kernel.asm	/^    f01089f0:	48 bf 80 06 13 f0 00 	mov    $0xf0130680,%rdi$/;"	l
f01089f7	obj/kern/kernel.asm	/^    f01089f7:	00 00 00 $/;"	l
f01089fa	obj/kern/kernel.asm	/^    f01089fa:	48 b8 da 00 11 f0 00 	mov    $0xf01100da,%rax$/;"	l
f0108a01	obj/kern/kernel.asm	/^    f0108a01:	00 00 00 $/;"	l
f0108a04	obj/kern/kernel.asm	/^    f0108a04:	ff d0                	callq  *%rax$/;"	l
f0108a06	obj/kern/kernel.asm	/^    f0108a06:	c9                   	leaveq $/;"	l
f0108a07	obj/kern/kernel.asm	/^    f0108a07:	c3                   	retq   $/;"	l
f0108a08	obj/kern/kernel.asm	/^    f0108a08:	55                   	push   %rbp$/;"	l
f0108a09	obj/kern/kernel.asm	/^    f0108a09:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f0108a0c	obj/kern/kernel.asm	/^    f0108a0c:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
f0108a10	obj/kern/kernel.asm	/^    f0108a10:	89 7d fc             	mov    %edi,-0x4(%rbp)$/;"	l
f0108a13	obj/kern/kernel.asm	/^    f0108a13:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
f0108a16	obj/kern/kernel.asm	/^    f0108a16:	83 f8 13             	cmp    $0x13,%eax$/;"	l
f0108a19	obj/kern/kernel.asm	/^    f0108a19:	77 16                	ja     fffffffff0108a31 <end+0xfffffffefe667691>$/;"	l
f0108a1b	obj/kern/kernel.asm	/^    f0108a1b:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
f0108a1e	obj/kern/kernel.asm	/^    f0108a1e:	48 b8 60 2d 11 f0 00 	mov    $0xf0112d60,%rax$/;"	l
f0108a25	obj/kern/kernel.asm	/^    f0108a25:	00 00 00 $/;"	l
f0108a28	obj/kern/kernel.asm	/^    f0108a28:	48 63 d2             	movslq %edx,%rdx$/;"	l
f0108a2b	obj/kern/kernel.asm	/^    f0108a2b:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax$/;"	l
f0108a2f	obj/kern/kernel.asm	/^    f0108a2f:	eb 34                	jmp    fffffffff0108a65 <end+0xfffffffefe6676c5>$/;"	l
f0108a31	obj/kern/kernel.asm	/^    f0108a31:	83 7d fc 30          	cmpl   $0x30,-0x4(%rbp)$/;"	l
f0108a35	obj/kern/kernel.asm	/^    f0108a35:	75 0c                	jne    fffffffff0108a43 <end+0xfffffffefe6676a3>$/;"	l
f0108a37	obj/kern/kernel.asm	/^    f0108a37:	48 b8 80 27 11 f0 00 	mov    $0xf0112780,%rax$/;"	l
f0108a3e	obj/kern/kernel.asm	/^    f0108a3e:	00 00 00 $/;"	l
f0108a41	obj/kern/kernel.asm	/^    f0108a41:	eb 22                	jmp    fffffffff0108a65 <end+0xfffffffefe6676c5>$/;"	l
f0108a43	obj/kern/kernel.asm	/^    f0108a43:	83 7d fc 1f          	cmpl   $0x1f,-0x4(%rbp)$/;"	l
f0108a47	obj/kern/kernel.asm	/^    f0108a47:	7e 12                	jle    fffffffff0108a5b <end+0xfffffffefe6676bb>$/;"	l
f0108a49	obj/kern/kernel.asm	/^    f0108a49:	83 7d fc 2f          	cmpl   $0x2f,-0x4(%rbp)$/;"	l
f0108a4d	obj/kern/kernel.asm	/^    f0108a4d:	7f 0c                	jg     fffffffff0108a5b <end+0xfffffffefe6676bb>$/;"	l
f0108a4f	obj/kern/kernel.asm	/^    f0108a4f:	48 b8 8c 27 11 f0 00 	mov    $0xf011278c,%rax$/;"	l
f0108a56	obj/kern/kernel.asm	/^    f0108a56:	00 00 00 $/;"	l
f0108a59	obj/kern/kernel.asm	/^    f0108a59:	eb 0a                	jmp    fffffffff0108a65 <end+0xfffffffefe6676c5>$/;"	l
f0108a5b	obj/kern/kernel.asm	/^    f0108a5b:	48 b8 9f 27 11 f0 00 	mov    $0xf011279f,%rax$/;"	l
f0108a62	obj/kern/kernel.asm	/^    f0108a62:	00 00 00 $/;"	l
f0108a65	obj/kern/kernel.asm	/^    f0108a65:	c9                   	leaveq $/;"	l
f0108a66	obj/kern/kernel.asm	/^    f0108a66:	c3                   	retq   $/;"	l
f0108a67	obj/kern/kernel.asm	/^    f0108a67:	55                   	push   %rbp$/;"	l
f0108a68	obj/kern/kernel.asm	/^    f0108a68:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f0108a6b	obj/kern/kernel.asm	/^    f0108a6b:	48 b8 80 72 a2 f1 00 	mov    $0xf1a27280,%rax$/;"	l
f0108a72	obj/kern/kernel.asm	/^    f0108a72:	00 00 00 $/;"	l
f0108a75	obj/kern/kernel.asm	/^    f0108a75:	66 c7 00 ff 0f       	movw   $0xfff,(%rax)$/;"	l
f0108a7a	obj/kern/kernel.asm	/^    f0108a7a:	48 ba 80 62 a2 f1 00 	mov    $0xf1a26280,%rdx$/;"	l
f0108a81	obj/kern/kernel.asm	/^    f0108a81:	00 00 00 $/;"	l
f0108a84	obj/kern/kernel.asm	/^    f0108a84:	48 b8 80 72 a2 f1 00 	mov    $0xf1a27280,%rax$/;"	l
f0108a8b	obj/kern/kernel.asm	/^    f0108a8b:	00 00 00 $/;"	l
f0108a8e	obj/kern/kernel.asm	/^    f0108a8e:	48 89 50 02          	mov    %rdx,0x2(%rax)$/;"	l
f0108a92	obj/kern/kernel.asm	/^    f0108a92:	48 b8 94 c6 10 f0 00 	mov    $0xf010c694,%rax$/;"	l
f0108a99	obj/kern/kernel.asm	/^    f0108a99:	00 00 00 $/;"	l
f0108a9c	obj/kern/kernel.asm	/^    f0108a9c:	89 c2                	mov    %eax,%edx$/;"	l
f0108a9e	obj/kern/kernel.asm	/^    f0108a9e:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0108aa5	obj/kern/kernel.asm	/^    f0108aa5:	00 00 00 $/;"	l
f0108aa8	obj/kern/kernel.asm	/^    f0108aa8:	66 89 10             	mov    %dx,(%rax)$/;"	l
f0108aab	obj/kern/kernel.asm	/^    f0108aab:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0108ab2	obj/kern/kernel.asm	/^    f0108ab2:	00 00 00 $/;"	l
f0108ab5	obj/kern/kernel.asm	/^    f0108ab5:	66 c7 40 02 08 00    	movw   $0x8,0x2(%rax)$/;"	l
f0108abb	obj/kern/kernel.asm	/^    f0108abb:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0108ac2	obj/kern/kernel.asm	/^    f0108ac2:	00 00 00 $/;"	l
f0108ac5	obj/kern/kernel.asm	/^    f0108ac5:	0f b6 50 04          	movzbl 0x4(%rax),%edx$/;"	l
f0108ac9	obj/kern/kernel.asm	/^    f0108ac9:	83 e2 f8             	and    $0xfffffffffffffff8,%edx$/;"	l
f0108acc	obj/kern/kernel.asm	/^    f0108acc:	88 50 04             	mov    %dl,0x4(%rax)$/;"	l
f0108acf	obj/kern/kernel.asm	/^    f0108acf:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0108ad6	obj/kern/kernel.asm	/^    f0108ad6:	00 00 00 $/;"	l
f0108ad9	obj/kern/kernel.asm	/^    f0108ad9:	0f b6 50 04          	movzbl 0x4(%rax),%edx$/;"	l
f0108add	obj/kern/kernel.asm	/^    f0108add:	83 e2 07             	and    $0x7,%edx$/;"	l
f0108ae0	obj/kern/kernel.asm	/^    f0108ae0:	88 50 04             	mov    %dl,0x4(%rax)$/;"	l
f0108ae3	obj/kern/kernel.asm	/^    f0108ae3:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0108aea	obj/kern/kernel.asm	/^    f0108aea:	00 00 00 $/;"	l
f0108aed	obj/kern/kernel.asm	/^    f0108aed:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
f0108af1	obj/kern/kernel.asm	/^    f0108af1:	83 ca 0f             	or     $0xf,%edx$/;"	l
f0108af4	obj/kern/kernel.asm	/^    f0108af4:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
f0108af7	obj/kern/kernel.asm	/^    f0108af7:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0108afe	obj/kern/kernel.asm	/^    f0108afe:	00 00 00 $/;"	l
f0108b01	obj/kern/kernel.asm	/^    f0108b01:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
f0108b05	obj/kern/kernel.asm	/^    f0108b05:	83 e2 ef             	and    $0xffffffffffffffef,%edx$/;"	l
f0108b08	obj/kern/kernel.asm	/^    f0108b08:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
f0108b0b	obj/kern/kernel.asm	/^    f0108b0b:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0108b12	obj/kern/kernel.asm	/^    f0108b12:	00 00 00 $/;"	l
f0108b15	obj/kern/kernel.asm	/^    f0108b15:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
f0108b19	obj/kern/kernel.asm	/^    f0108b19:	83 e2 9f             	and    $0xffffffffffffff9f,%edx$/;"	l
f0108b1c	obj/kern/kernel.asm	/^    f0108b1c:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
f0108b1f	obj/kern/kernel.asm	/^    f0108b1f:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0108b26	obj/kern/kernel.asm	/^    f0108b26:	00 00 00 $/;"	l
f0108b29	obj/kern/kernel.asm	/^    f0108b29:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
f0108b2d	obj/kern/kernel.asm	/^    f0108b2d:	83 ca 80             	or     $0xffffffffffffff80,%edx$/;"	l
f0108b30	obj/kern/kernel.asm	/^    f0108b30:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
f0108b33	obj/kern/kernel.asm	/^    f0108b33:	48 b8 94 c6 10 f0 00 	mov    $0xf010c694,%rax$/;"	l
f0108b3a	obj/kern/kernel.asm	/^    f0108b3a:	00 00 00 $/;"	l
f0108b3d	obj/kern/kernel.asm	/^    f0108b3d:	48 c1 e8 10          	shr    $0x10,%rax$/;"	l
f0108b41	obj/kern/kernel.asm	/^    f0108b41:	89 c2                	mov    %eax,%edx$/;"	l
f0108b43	obj/kern/kernel.asm	/^    f0108b43:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0108b4a	obj/kern/kernel.asm	/^    f0108b4a:	00 00 00 $/;"	l
f0108b4d	obj/kern/kernel.asm	/^    f0108b4d:	66 89 50 06          	mov    %dx,0x6(%rax)$/;"	l
f0108b51	obj/kern/kernel.asm	/^    f0108b51:	48 b8 94 c6 10 f0 00 	mov    $0xf010c694,%rax$/;"	l
f0108b58	obj/kern/kernel.asm	/^    f0108b58:	00 00 00 $/;"	l
f0108b5b	obj/kern/kernel.asm	/^    f0108b5b:	48 c1 e8 20          	shr    $0x20,%rax$/;"	l
f0108b5f	obj/kern/kernel.asm	/^    f0108b5f:	89 c2                	mov    %eax,%edx$/;"	l
f0108b61	obj/kern/kernel.asm	/^    f0108b61:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0108b68	obj/kern/kernel.asm	/^    f0108b68:	00 00 00 $/;"	l
f0108b6b	obj/kern/kernel.asm	/^    f0108b6b:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
f0108b6e	obj/kern/kernel.asm	/^    f0108b6e:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0108b75	obj/kern/kernel.asm	/^    f0108b75:	00 00 00 $/;"	l
f0108b78	obj/kern/kernel.asm	/^    f0108b78:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)$/;"	l
f0108b7f	obj/kern/kernel.asm	/^    f0108b7f:	48 b8 9e c6 10 f0 00 	mov    $0xf010c69e,%rax$/;"	l
f0108b86	obj/kern/kernel.asm	/^    f0108b86:	00 00 00 $/;"	l
f0108b89	obj/kern/kernel.asm	/^    f0108b89:	89 c2                	mov    %eax,%edx$/;"	l
f0108b8b	obj/kern/kernel.asm	/^    f0108b8b:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0108b92	obj/kern/kernel.asm	/^    f0108b92:	00 00 00 $/;"	l
f0108b95	obj/kern/kernel.asm	/^    f0108b95:	66 89 50 10          	mov    %dx,0x10(%rax)$/;"	l
f0108b99	obj/kern/kernel.asm	/^    f0108b99:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0108ba0	obj/kern/kernel.asm	/^    f0108ba0:	00 00 00 $/;"	l
f0108ba3	obj/kern/kernel.asm	/^    f0108ba3:	66 c7 40 12 08 00    	movw   $0x8,0x12(%rax)$/;"	l
f0108ba9	obj/kern/kernel.asm	/^    f0108ba9:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0108bb0	obj/kern/kernel.asm	/^    f0108bb0:	00 00 00 $/;"	l
f0108bb3	obj/kern/kernel.asm	/^    f0108bb3:	0f b6 50 14          	movzbl 0x14(%rax),%edx$/;"	l
f0108bb7	obj/kern/kernel.asm	/^    f0108bb7:	83 e2 f8             	and    $0xfffffffffffffff8,%edx$/;"	l
f0108bba	obj/kern/kernel.asm	/^    f0108bba:	88 50 14             	mov    %dl,0x14(%rax)$/;"	l
f0108bbd	obj/kern/kernel.asm	/^    f0108bbd:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0108bc4	obj/kern/kernel.asm	/^    f0108bc4:	00 00 00 $/;"	l
f0108bc7	obj/kern/kernel.asm	/^    f0108bc7:	0f b6 50 14          	movzbl 0x14(%rax),%edx$/;"	l
f0108bcb	obj/kern/kernel.asm	/^    f0108bcb:	83 e2 07             	and    $0x7,%edx$/;"	l
f0108bce	obj/kern/kernel.asm	/^    f0108bce:	88 50 14             	mov    %dl,0x14(%rax)$/;"	l
f0108bd1	obj/kern/kernel.asm	/^    f0108bd1:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0108bd8	obj/kern/kernel.asm	/^    f0108bd8:	00 00 00 $/;"	l
f0108bdb	obj/kern/kernel.asm	/^    f0108bdb:	0f b6 50 15          	movzbl 0x15(%rax),%edx$/;"	l
f0108bdf	obj/kern/kernel.asm	/^    f0108bdf:	83 e2 f0             	and    $0xfffffffffffffff0,%edx$/;"	l
f0108be2	obj/kern/kernel.asm	/^    f0108be2:	83 ca 0e             	or     $0xe,%edx$/;"	l
f0108be5	obj/kern/kernel.asm	/^    f0108be5:	88 50 15             	mov    %dl,0x15(%rax)$/;"	l
f0108be8	obj/kern/kernel.asm	/^    f0108be8:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0108bef	obj/kern/kernel.asm	/^    f0108bef:	00 00 00 $/;"	l
f0108bf2	obj/kern/kernel.asm	/^    f0108bf2:	0f b6 50 15          	movzbl 0x15(%rax),%edx$/;"	l
f0108bf6	obj/kern/kernel.asm	/^    f0108bf6:	83 e2 ef             	and    $0xffffffffffffffef,%edx$/;"	l
f0108bf9	obj/kern/kernel.asm	/^    f0108bf9:	88 50 15             	mov    %dl,0x15(%rax)$/;"	l
f0108bfc	obj/kern/kernel.asm	/^    f0108bfc:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0108c03	obj/kern/kernel.asm	/^    f0108c03:	00 00 00 $/;"	l
f0108c06	obj/kern/kernel.asm	/^    f0108c06:	0f b6 50 15          	movzbl 0x15(%rax),%edx$/;"	l
f0108c0a	obj/kern/kernel.asm	/^    f0108c0a:	83 e2 9f             	and    $0xffffffffffffff9f,%edx$/;"	l
f0108c0d	obj/kern/kernel.asm	/^    f0108c0d:	88 50 15             	mov    %dl,0x15(%rax)$/;"	l
f0108c10	obj/kern/kernel.asm	/^    f0108c10:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0108c17	obj/kern/kernel.asm	/^    f0108c17:	00 00 00 $/;"	l
f0108c1a	obj/kern/kernel.asm	/^    f0108c1a:	0f b6 50 15          	movzbl 0x15(%rax),%edx$/;"	l
f0108c1e	obj/kern/kernel.asm	/^    f0108c1e:	83 ca 80             	or     $0xffffffffffffff80,%edx$/;"	l
f0108c21	obj/kern/kernel.asm	/^    f0108c21:	88 50 15             	mov    %dl,0x15(%rax)$/;"	l
f0108c24	obj/kern/kernel.asm	/^    f0108c24:	48 b8 9e c6 10 f0 00 	mov    $0xf010c69e,%rax$/;"	l
f0108c2b	obj/kern/kernel.asm	/^    f0108c2b:	00 00 00 $/;"	l
f0108c2e	obj/kern/kernel.asm	/^    f0108c2e:	48 c1 e8 10          	shr    $0x10,%rax$/;"	l
f0108c32	obj/kern/kernel.asm	/^    f0108c32:	89 c2                	mov    %eax,%edx$/;"	l
f0108c34	obj/kern/kernel.asm	/^    f0108c34:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0108c3b	obj/kern/kernel.asm	/^    f0108c3b:	00 00 00 $/;"	l
f0108c3e	obj/kern/kernel.asm	/^    f0108c3e:	66 89 50 16          	mov    %dx,0x16(%rax)$/;"	l
f0108c42	obj/kern/kernel.asm	/^    f0108c42:	48 b8 9e c6 10 f0 00 	mov    $0xf010c69e,%rax$/;"	l
f0108c49	obj/kern/kernel.asm	/^    f0108c49:	00 00 00 $/;"	l
f0108c4c	obj/kern/kernel.asm	/^    f0108c4c:	48 c1 e8 20          	shr    $0x20,%rax$/;"	l
f0108c50	obj/kern/kernel.asm	/^    f0108c50:	89 c2                	mov    %eax,%edx$/;"	l
f0108c52	obj/kern/kernel.asm	/^    f0108c52:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0108c59	obj/kern/kernel.asm	/^    f0108c59:	00 00 00 $/;"	l
f0108c5c	obj/kern/kernel.asm	/^    f0108c5c:	89 50 18             	mov    %edx,0x18(%rax)$/;"	l
f0108c5f	obj/kern/kernel.asm	/^    f0108c5f:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0108c66	obj/kern/kernel.asm	/^    f0108c66:	00 00 00 $/;"	l
f0108c69	obj/kern/kernel.asm	/^    f0108c69:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%rax)$/;"	l
f0108c70	obj/kern/kernel.asm	/^    f0108c70:	48 b8 a8 c6 10 f0 00 	mov    $0xf010c6a8,%rax$/;"	l
f0108c77	obj/kern/kernel.asm	/^    f0108c77:	00 00 00 $/;"	l
f0108c7a	obj/kern/kernel.asm	/^    f0108c7a:	89 c2                	mov    %eax,%edx$/;"	l
f0108c7c	obj/kern/kernel.asm	/^    f0108c7c:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0108c83	obj/kern/kernel.asm	/^    f0108c83:	00 00 00 $/;"	l
f0108c86	obj/kern/kernel.asm	/^    f0108c86:	66 89 50 20          	mov    %dx,0x20(%rax)$/;"	l
f0108c8a	obj/kern/kernel.asm	/^    f0108c8a:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0108c91	obj/kern/kernel.asm	/^    f0108c91:	00 00 00 $/;"	l
f0108c94	obj/kern/kernel.asm	/^    f0108c94:	66 c7 40 22 08 00    	movw   $0x8,0x22(%rax)$/;"	l
f0108c9a	obj/kern/kernel.asm	/^    f0108c9a:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0108ca1	obj/kern/kernel.asm	/^    f0108ca1:	00 00 00 $/;"	l
f0108ca4	obj/kern/kernel.asm	/^    f0108ca4:	0f b6 50 24          	movzbl 0x24(%rax),%edx$/;"	l
f0108ca8	obj/kern/kernel.asm	/^    f0108ca8:	83 e2 f8             	and    $0xfffffffffffffff8,%edx$/;"	l
f0108cab	obj/kern/kernel.asm	/^    f0108cab:	88 50 24             	mov    %dl,0x24(%rax)$/;"	l
f0108cae	obj/kern/kernel.asm	/^    f0108cae:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0108cb5	obj/kern/kernel.asm	/^    f0108cb5:	00 00 00 $/;"	l
f0108cb8	obj/kern/kernel.asm	/^    f0108cb8:	0f b6 50 24          	movzbl 0x24(%rax),%edx$/;"	l
f0108cbc	obj/kern/kernel.asm	/^    f0108cbc:	83 e2 07             	and    $0x7,%edx$/;"	l
f0108cbf	obj/kern/kernel.asm	/^    f0108cbf:	88 50 24             	mov    %dl,0x24(%rax)$/;"	l
f0108cc2	obj/kern/kernel.asm	/^    f0108cc2:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0108cc9	obj/kern/kernel.asm	/^    f0108cc9:	00 00 00 $/;"	l
f0108ccc	obj/kern/kernel.asm	/^    f0108ccc:	0f b6 50 25          	movzbl 0x25(%rax),%edx$/;"	l
f0108cd0	obj/kern/kernel.asm	/^    f0108cd0:	83 e2 f0             	and    $0xfffffffffffffff0,%edx$/;"	l
f0108cd3	obj/kern/kernel.asm	/^    f0108cd3:	83 ca 0e             	or     $0xe,%edx$/;"	l
f0108cd6	obj/kern/kernel.asm	/^    f0108cd6:	88 50 25             	mov    %dl,0x25(%rax)$/;"	l
f0108cd9	obj/kern/kernel.asm	/^    f0108cd9:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0108ce0	obj/kern/kernel.asm	/^    f0108ce0:	00 00 00 $/;"	l
f0108ce3	obj/kern/kernel.asm	/^    f0108ce3:	0f b6 50 25          	movzbl 0x25(%rax),%edx$/;"	l
f0108ce7	obj/kern/kernel.asm	/^    f0108ce7:	83 e2 ef             	and    $0xffffffffffffffef,%edx$/;"	l
f0108cea	obj/kern/kernel.asm	/^    f0108cea:	88 50 25             	mov    %dl,0x25(%rax)$/;"	l
f0108ced	obj/kern/kernel.asm	/^    f0108ced:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0108cf4	obj/kern/kernel.asm	/^    f0108cf4:	00 00 00 $/;"	l
f0108cf7	obj/kern/kernel.asm	/^    f0108cf7:	0f b6 50 25          	movzbl 0x25(%rax),%edx$/;"	l
f0108cfb	obj/kern/kernel.asm	/^    f0108cfb:	83 e2 9f             	and    $0xffffffffffffff9f,%edx$/;"	l
f0108cfe	obj/kern/kernel.asm	/^    f0108cfe:	88 50 25             	mov    %dl,0x25(%rax)$/;"	l
f0108d01	obj/kern/kernel.asm	/^    f0108d01:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0108d08	obj/kern/kernel.asm	/^    f0108d08:	00 00 00 $/;"	l
f0108d0b	obj/kern/kernel.asm	/^    f0108d0b:	0f b6 50 25          	movzbl 0x25(%rax),%edx$/;"	l
f0108d0f	obj/kern/kernel.asm	/^    f0108d0f:	83 ca 80             	or     $0xffffffffffffff80,%edx$/;"	l
f0108d12	obj/kern/kernel.asm	/^    f0108d12:	88 50 25             	mov    %dl,0x25(%rax)$/;"	l
f0108d15	obj/kern/kernel.asm	/^    f0108d15:	48 b8 a8 c6 10 f0 00 	mov    $0xf010c6a8,%rax$/;"	l
f0108d1c	obj/kern/kernel.asm	/^    f0108d1c:	00 00 00 $/;"	l
f0108d1f	obj/kern/kernel.asm	/^    f0108d1f:	48 c1 e8 10          	shr    $0x10,%rax$/;"	l
f0108d23	obj/kern/kernel.asm	/^    f0108d23:	89 c2                	mov    %eax,%edx$/;"	l
f0108d25	obj/kern/kernel.asm	/^    f0108d25:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0108d2c	obj/kern/kernel.asm	/^    f0108d2c:	00 00 00 $/;"	l
f0108d2f	obj/kern/kernel.asm	/^    f0108d2f:	66 89 50 26          	mov    %dx,0x26(%rax)$/;"	l
f0108d33	obj/kern/kernel.asm	/^    f0108d33:	48 b8 a8 c6 10 f0 00 	mov    $0xf010c6a8,%rax$/;"	l
f0108d3a	obj/kern/kernel.asm	/^    f0108d3a:	00 00 00 $/;"	l
f0108d3d	obj/kern/kernel.asm	/^    f0108d3d:	48 c1 e8 20          	shr    $0x20,%rax$/;"	l
f0108d41	obj/kern/kernel.asm	/^    f0108d41:	89 c2                	mov    %eax,%edx$/;"	l
f0108d43	obj/kern/kernel.asm	/^    f0108d43:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0108d4a	obj/kern/kernel.asm	/^    f0108d4a:	00 00 00 $/;"	l
f0108d4d	obj/kern/kernel.asm	/^    f0108d4d:	89 50 28             	mov    %edx,0x28(%rax)$/;"	l
f0108d50	obj/kern/kernel.asm	/^    f0108d50:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0108d57	obj/kern/kernel.asm	/^    f0108d57:	00 00 00 $/;"	l
f0108d5a	obj/kern/kernel.asm	/^    f0108d5a:	c7 40 2c 00 00 00 00 	movl   $0x0,0x2c(%rax)$/;"	l
f0108d61	obj/kern/kernel.asm	/^    f0108d61:	48 b8 b2 c6 10 f0 00 	mov    $0xf010c6b2,%rax$/;"	l
f0108d68	obj/kern/kernel.asm	/^    f0108d68:	00 00 00 $/;"	l
f0108d6b	obj/kern/kernel.asm	/^    f0108d6b:	89 c2                	mov    %eax,%edx$/;"	l
f0108d6d	obj/kern/kernel.asm	/^    f0108d6d:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0108d74	obj/kern/kernel.asm	/^    f0108d74:	00 00 00 $/;"	l
f0108d77	obj/kern/kernel.asm	/^    f0108d77:	66 89 50 30          	mov    %dx,0x30(%rax)$/;"	l
f0108d7b	obj/kern/kernel.asm	/^    f0108d7b:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0108d82	obj/kern/kernel.asm	/^    f0108d82:	00 00 00 $/;"	l
f0108d85	obj/kern/kernel.asm	/^    f0108d85:	66 c7 40 32 08 00    	movw   $0x8,0x32(%rax)$/;"	l
f0108d8b	obj/kern/kernel.asm	/^    f0108d8b:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0108d92	obj/kern/kernel.asm	/^    f0108d92:	00 00 00 $/;"	l
f0108d95	obj/kern/kernel.asm	/^    f0108d95:	0f b6 50 34          	movzbl 0x34(%rax),%edx$/;"	l
f0108d99	obj/kern/kernel.asm	/^    f0108d99:	83 e2 f8             	and    $0xfffffffffffffff8,%edx$/;"	l
f0108d9c	obj/kern/kernel.asm	/^    f0108d9c:	88 50 34             	mov    %dl,0x34(%rax)$/;"	l
f0108d9f	obj/kern/kernel.asm	/^    f0108d9f:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0108da6	obj/kern/kernel.asm	/^    f0108da6:	00 00 00 $/;"	l
f0108da9	obj/kern/kernel.asm	/^    f0108da9:	0f b6 50 34          	movzbl 0x34(%rax),%edx$/;"	l
f0108dad	obj/kern/kernel.asm	/^    f0108dad:	83 e2 07             	and    $0x7,%edx$/;"	l
f0108db0	obj/kern/kernel.asm	/^    f0108db0:	88 50 34             	mov    %dl,0x34(%rax)$/;"	l
f0108db3	obj/kern/kernel.asm	/^    f0108db3:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0108dba	obj/kern/kernel.asm	/^    f0108dba:	00 00 00 $/;"	l
f0108dbd	obj/kern/kernel.asm	/^    f0108dbd:	0f b6 50 35          	movzbl 0x35(%rax),%edx$/;"	l
f0108dc1	obj/kern/kernel.asm	/^    f0108dc1:	83 e2 f0             	and    $0xfffffffffffffff0,%edx$/;"	l
f0108dc4	obj/kern/kernel.asm	/^    f0108dc4:	83 ca 0e             	or     $0xe,%edx$/;"	l
f0108dc7	obj/kern/kernel.asm	/^    f0108dc7:	88 50 35             	mov    %dl,0x35(%rax)$/;"	l
f0108dca	obj/kern/kernel.asm	/^    f0108dca:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0108dd1	obj/kern/kernel.asm	/^    f0108dd1:	00 00 00 $/;"	l
f0108dd4	obj/kern/kernel.asm	/^    f0108dd4:	0f b6 50 35          	movzbl 0x35(%rax),%edx$/;"	l
f0108dd8	obj/kern/kernel.asm	/^    f0108dd8:	83 e2 ef             	and    $0xffffffffffffffef,%edx$/;"	l
f0108ddb	obj/kern/kernel.asm	/^    f0108ddb:	88 50 35             	mov    %dl,0x35(%rax)$/;"	l
f0108dde	obj/kern/kernel.asm	/^    f0108dde:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0108de5	obj/kern/kernel.asm	/^    f0108de5:	00 00 00 $/;"	l
f0108de8	obj/kern/kernel.asm	/^    f0108de8:	0f b6 50 35          	movzbl 0x35(%rax),%edx$/;"	l
f0108dec	obj/kern/kernel.asm	/^    f0108dec:	83 ca 60             	or     $0x60,%edx$/;"	l
f0108def	obj/kern/kernel.asm	/^    f0108def:	88 50 35             	mov    %dl,0x35(%rax)$/;"	l
f0108df2	obj/kern/kernel.asm	/^    f0108df2:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0108df9	obj/kern/kernel.asm	/^    f0108df9:	00 00 00 $/;"	l
f0108dfc	obj/kern/kernel.asm	/^    f0108dfc:	0f b6 50 35          	movzbl 0x35(%rax),%edx$/;"	l
f0108e00	obj/kern/kernel.asm	/^    f0108e00:	83 ca 80             	or     $0xffffffffffffff80,%edx$/;"	l
f0108e03	obj/kern/kernel.asm	/^    f0108e03:	88 50 35             	mov    %dl,0x35(%rax)$/;"	l
f0108e06	obj/kern/kernel.asm	/^    f0108e06:	48 b8 b2 c6 10 f0 00 	mov    $0xf010c6b2,%rax$/;"	l
f0108e0d	obj/kern/kernel.asm	/^    f0108e0d:	00 00 00 $/;"	l
f0108e10	obj/kern/kernel.asm	/^    f0108e10:	48 c1 e8 10          	shr    $0x10,%rax$/;"	l
f0108e14	obj/kern/kernel.asm	/^    f0108e14:	89 c2                	mov    %eax,%edx$/;"	l
f0108e16	obj/kern/kernel.asm	/^    f0108e16:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0108e1d	obj/kern/kernel.asm	/^    f0108e1d:	00 00 00 $/;"	l
f0108e20	obj/kern/kernel.asm	/^    f0108e20:	66 89 50 36          	mov    %dx,0x36(%rax)$/;"	l
f0108e24	obj/kern/kernel.asm	/^    f0108e24:	48 b8 b2 c6 10 f0 00 	mov    $0xf010c6b2,%rax$/;"	l
f0108e2b	obj/kern/kernel.asm	/^    f0108e2b:	00 00 00 $/;"	l
f0108e2e	obj/kern/kernel.asm	/^    f0108e2e:	48 c1 e8 20          	shr    $0x20,%rax$/;"	l
f0108e32	obj/kern/kernel.asm	/^    f0108e32:	89 c2                	mov    %eax,%edx$/;"	l
f0108e34	obj/kern/kernel.asm	/^    f0108e34:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0108e3b	obj/kern/kernel.asm	/^    f0108e3b:	00 00 00 $/;"	l
f0108e3e	obj/kern/kernel.asm	/^    f0108e3e:	89 50 38             	mov    %edx,0x38(%rax)$/;"	l
f0108e41	obj/kern/kernel.asm	/^    f0108e41:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0108e48	obj/kern/kernel.asm	/^    f0108e48:	00 00 00 $/;"	l
f0108e4b	obj/kern/kernel.asm	/^    f0108e4b:	c7 40 3c 00 00 00 00 	movl   $0x0,0x3c(%rax)$/;"	l
f0108e52	obj/kern/kernel.asm	/^    f0108e52:	48 b8 bc c6 10 f0 00 	mov    $0xf010c6bc,%rax$/;"	l
f0108e59	obj/kern/kernel.asm	/^    f0108e59:	00 00 00 $/;"	l
f0108e5c	obj/kern/kernel.asm	/^    f0108e5c:	89 c2                	mov    %eax,%edx$/;"	l
f0108e5e	obj/kern/kernel.asm	/^    f0108e5e:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0108e65	obj/kern/kernel.asm	/^    f0108e65:	00 00 00 $/;"	l
f0108e68	obj/kern/kernel.asm	/^    f0108e68:	66 89 50 40          	mov    %dx,0x40(%rax)$/;"	l
f0108e6c	obj/kern/kernel.asm	/^    f0108e6c:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0108e73	obj/kern/kernel.asm	/^    f0108e73:	00 00 00 $/;"	l
f0108e76	obj/kern/kernel.asm	/^    f0108e76:	66 c7 40 42 08 00    	movw   $0x8,0x42(%rax)$/;"	l
f0108e7c	obj/kern/kernel.asm	/^    f0108e7c:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0108e83	obj/kern/kernel.asm	/^    f0108e83:	00 00 00 $/;"	l
f0108e86	obj/kern/kernel.asm	/^    f0108e86:	0f b6 50 44          	movzbl 0x44(%rax),%edx$/;"	l
f0108e8a	obj/kern/kernel.asm	/^    f0108e8a:	83 e2 f8             	and    $0xfffffffffffffff8,%edx$/;"	l
f0108e8d	obj/kern/kernel.asm	/^    f0108e8d:	88 50 44             	mov    %dl,0x44(%rax)$/;"	l
f0108e90	obj/kern/kernel.asm	/^    f0108e90:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0108e97	obj/kern/kernel.asm	/^    f0108e97:	00 00 00 $/;"	l
f0108e9a	obj/kern/kernel.asm	/^    f0108e9a:	0f b6 50 44          	movzbl 0x44(%rax),%edx$/;"	l
f0108e9e	obj/kern/kernel.asm	/^    f0108e9e:	83 e2 07             	and    $0x7,%edx$/;"	l
f0108ea1	obj/kern/kernel.asm	/^    f0108ea1:	88 50 44             	mov    %dl,0x44(%rax)$/;"	l
f0108ea4	obj/kern/kernel.asm	/^    f0108ea4:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0108eab	obj/kern/kernel.asm	/^    f0108eab:	00 00 00 $/;"	l
f0108eae	obj/kern/kernel.asm	/^    f0108eae:	0f b6 50 45          	movzbl 0x45(%rax),%edx$/;"	l
f0108eb2	obj/kern/kernel.asm	/^    f0108eb2:	83 ca 0f             	or     $0xf,%edx$/;"	l
f0108eb5	obj/kern/kernel.asm	/^    f0108eb5:	88 50 45             	mov    %dl,0x45(%rax)$/;"	l
f0108eb8	obj/kern/kernel.asm	/^    f0108eb8:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0108ebf	obj/kern/kernel.asm	/^    f0108ebf:	00 00 00 $/;"	l
f0108ec2	obj/kern/kernel.asm	/^    f0108ec2:	0f b6 50 45          	movzbl 0x45(%rax),%edx$/;"	l
f0108ec6	obj/kern/kernel.asm	/^    f0108ec6:	83 e2 ef             	and    $0xffffffffffffffef,%edx$/;"	l
f0108ec9	obj/kern/kernel.asm	/^    f0108ec9:	88 50 45             	mov    %dl,0x45(%rax)$/;"	l
f0108ecc	obj/kern/kernel.asm	/^    f0108ecc:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0108ed3	obj/kern/kernel.asm	/^    f0108ed3:	00 00 00 $/;"	l
f0108ed6	obj/kern/kernel.asm	/^    f0108ed6:	0f b6 50 45          	movzbl 0x45(%rax),%edx$/;"	l
f0108eda	obj/kern/kernel.asm	/^    f0108eda:	83 ca 60             	or     $0x60,%edx$/;"	l
f0108edd	obj/kern/kernel.asm	/^    f0108edd:	88 50 45             	mov    %dl,0x45(%rax)$/;"	l
f0108ee0	obj/kern/kernel.asm	/^    f0108ee0:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0108ee7	obj/kern/kernel.asm	/^    f0108ee7:	00 00 00 $/;"	l
f0108eea	obj/kern/kernel.asm	/^    f0108eea:	0f b6 50 45          	movzbl 0x45(%rax),%edx$/;"	l
f0108eee	obj/kern/kernel.asm	/^    f0108eee:	83 ca 80             	or     $0xffffffffffffff80,%edx$/;"	l
f0108ef1	obj/kern/kernel.asm	/^    f0108ef1:	88 50 45             	mov    %dl,0x45(%rax)$/;"	l
f0108ef4	obj/kern/kernel.asm	/^    f0108ef4:	48 b8 bc c6 10 f0 00 	mov    $0xf010c6bc,%rax$/;"	l
f0108efb	obj/kern/kernel.asm	/^    f0108efb:	00 00 00 $/;"	l
f0108efe	obj/kern/kernel.asm	/^    f0108efe:	48 c1 e8 10          	shr    $0x10,%rax$/;"	l
f0108f02	obj/kern/kernel.asm	/^    f0108f02:	89 c2                	mov    %eax,%edx$/;"	l
f0108f04	obj/kern/kernel.asm	/^    f0108f04:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0108f0b	obj/kern/kernel.asm	/^    f0108f0b:	00 00 00 $/;"	l
f0108f0e	obj/kern/kernel.asm	/^    f0108f0e:	66 89 50 46          	mov    %dx,0x46(%rax)$/;"	l
f0108f12	obj/kern/kernel.asm	/^    f0108f12:	48 b8 bc c6 10 f0 00 	mov    $0xf010c6bc,%rax$/;"	l
f0108f19	obj/kern/kernel.asm	/^    f0108f19:	00 00 00 $/;"	l
f0108f1c	obj/kern/kernel.asm	/^    f0108f1c:	48 c1 e8 20          	shr    $0x20,%rax$/;"	l
f0108f20	obj/kern/kernel.asm	/^    f0108f20:	89 c2                	mov    %eax,%edx$/;"	l
f0108f22	obj/kern/kernel.asm	/^    f0108f22:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0108f29	obj/kern/kernel.asm	/^    f0108f29:	00 00 00 $/;"	l
f0108f2c	obj/kern/kernel.asm	/^    f0108f2c:	89 50 48             	mov    %edx,0x48(%rax)$/;"	l
f0108f2f	obj/kern/kernel.asm	/^    f0108f2f:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0108f36	obj/kern/kernel.asm	/^    f0108f36:	00 00 00 $/;"	l
f0108f39	obj/kern/kernel.asm	/^    f0108f39:	c7 40 4c 00 00 00 00 	movl   $0x0,0x4c(%rax)$/;"	l
f0108f40	obj/kern/kernel.asm	/^    f0108f40:	48 b8 c6 c6 10 f0 00 	mov    $0xf010c6c6,%rax$/;"	l
f0108f47	obj/kern/kernel.asm	/^    f0108f47:	00 00 00 $/;"	l
f0108f4a	obj/kern/kernel.asm	/^    f0108f4a:	89 c2                	mov    %eax,%edx$/;"	l
f0108f4c	obj/kern/kernel.asm	/^    f0108f4c:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0108f53	obj/kern/kernel.asm	/^    f0108f53:	00 00 00 $/;"	l
f0108f56	obj/kern/kernel.asm	/^    f0108f56:	66 89 50 50          	mov    %dx,0x50(%rax)$/;"	l
f0108f5a	obj/kern/kernel.asm	/^    f0108f5a:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0108f61	obj/kern/kernel.asm	/^    f0108f61:	00 00 00 $/;"	l
f0108f64	obj/kern/kernel.asm	/^    f0108f64:	66 c7 40 52 08 00    	movw   $0x8,0x52(%rax)$/;"	l
f0108f6a	obj/kern/kernel.asm	/^    f0108f6a:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0108f71	obj/kern/kernel.asm	/^    f0108f71:	00 00 00 $/;"	l
f0108f74	obj/kern/kernel.asm	/^    f0108f74:	0f b6 50 54          	movzbl 0x54(%rax),%edx$/;"	l
f0108f78	obj/kern/kernel.asm	/^    f0108f78:	83 e2 f8             	and    $0xfffffffffffffff8,%edx$/;"	l
f0108f7b	obj/kern/kernel.asm	/^    f0108f7b:	88 50 54             	mov    %dl,0x54(%rax)$/;"	l
f0108f7e	obj/kern/kernel.asm	/^    f0108f7e:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0108f85	obj/kern/kernel.asm	/^    f0108f85:	00 00 00 $/;"	l
f0108f88	obj/kern/kernel.asm	/^    f0108f88:	0f b6 50 54          	movzbl 0x54(%rax),%edx$/;"	l
f0108f8c	obj/kern/kernel.asm	/^    f0108f8c:	83 e2 07             	and    $0x7,%edx$/;"	l
f0108f8f	obj/kern/kernel.asm	/^    f0108f8f:	88 50 54             	mov    %dl,0x54(%rax)$/;"	l
f0108f92	obj/kern/kernel.asm	/^    f0108f92:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0108f99	obj/kern/kernel.asm	/^    f0108f99:	00 00 00 $/;"	l
f0108f9c	obj/kern/kernel.asm	/^    f0108f9c:	0f b6 50 55          	movzbl 0x55(%rax),%edx$/;"	l
f0108fa0	obj/kern/kernel.asm	/^    f0108fa0:	83 ca 0f             	or     $0xf,%edx$/;"	l
f0108fa3	obj/kern/kernel.asm	/^    f0108fa3:	88 50 55             	mov    %dl,0x55(%rax)$/;"	l
f0108fa6	obj/kern/kernel.asm	/^    f0108fa6:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0108fad	obj/kern/kernel.asm	/^    f0108fad:	00 00 00 $/;"	l
f0108fb0	obj/kern/kernel.asm	/^    f0108fb0:	0f b6 50 55          	movzbl 0x55(%rax),%edx$/;"	l
f0108fb4	obj/kern/kernel.asm	/^    f0108fb4:	83 e2 ef             	and    $0xffffffffffffffef,%edx$/;"	l
f0108fb7	obj/kern/kernel.asm	/^    f0108fb7:	88 50 55             	mov    %dl,0x55(%rax)$/;"	l
f0108fba	obj/kern/kernel.asm	/^    f0108fba:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0108fc1	obj/kern/kernel.asm	/^    f0108fc1:	00 00 00 $/;"	l
f0108fc4	obj/kern/kernel.asm	/^    f0108fc4:	0f b6 50 55          	movzbl 0x55(%rax),%edx$/;"	l
f0108fc8	obj/kern/kernel.asm	/^    f0108fc8:	83 ca 60             	or     $0x60,%edx$/;"	l
f0108fcb	obj/kern/kernel.asm	/^    f0108fcb:	88 50 55             	mov    %dl,0x55(%rax)$/;"	l
f0108fce	obj/kern/kernel.asm	/^    f0108fce:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0108fd5	obj/kern/kernel.asm	/^    f0108fd5:	00 00 00 $/;"	l
f0108fd8	obj/kern/kernel.asm	/^    f0108fd8:	0f b6 50 55          	movzbl 0x55(%rax),%edx$/;"	l
f0108fdc	obj/kern/kernel.asm	/^    f0108fdc:	83 ca 80             	or     $0xffffffffffffff80,%edx$/;"	l
f0108fdf	obj/kern/kernel.asm	/^    f0108fdf:	88 50 55             	mov    %dl,0x55(%rax)$/;"	l
f0108fe2	obj/kern/kernel.asm	/^    f0108fe2:	48 b8 c6 c6 10 f0 00 	mov    $0xf010c6c6,%rax$/;"	l
f0108fe9	obj/kern/kernel.asm	/^    f0108fe9:	00 00 00 $/;"	l
f0108fec	obj/kern/kernel.asm	/^    f0108fec:	48 c1 e8 10          	shr    $0x10,%rax$/;"	l
f0108ff0	obj/kern/kernel.asm	/^    f0108ff0:	89 c2                	mov    %eax,%edx$/;"	l
f0108ff2	obj/kern/kernel.asm	/^    f0108ff2:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0108ff9	obj/kern/kernel.asm	/^    f0108ff9:	00 00 00 $/;"	l
f0108ffc	obj/kern/kernel.asm	/^    f0108ffc:	66 89 50 56          	mov    %dx,0x56(%rax)$/;"	l
f0109000	obj/kern/kernel.asm	/^    f0109000:	48 b8 c6 c6 10 f0 00 	mov    $0xf010c6c6,%rax$/;"	l
f0109007	obj/kern/kernel.asm	/^    f0109007:	00 00 00 $/;"	l
f010900a	obj/kern/kernel.asm	/^    f010900a:	48 c1 e8 20          	shr    $0x20,%rax$/;"	l
f010900e	obj/kern/kernel.asm	/^    f010900e:	89 c2                	mov    %eax,%edx$/;"	l
f0109010	obj/kern/kernel.asm	/^    f0109010:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109017	obj/kern/kernel.asm	/^    f0109017:	00 00 00 $/;"	l
f010901a	obj/kern/kernel.asm	/^    f010901a:	89 50 58             	mov    %edx,0x58(%rax)$/;"	l
f010901d	obj/kern/kernel.asm	/^    f010901d:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109024	obj/kern/kernel.asm	/^    f0109024:	00 00 00 $/;"	l
f0109027	obj/kern/kernel.asm	/^    f0109027:	c7 40 5c 00 00 00 00 	movl   $0x0,0x5c(%rax)$/;"	l
f010902e	obj/kern/kernel.asm	/^    f010902e:	48 b8 d0 c6 10 f0 00 	mov    $0xf010c6d0,%rax$/;"	l
f0109035	obj/kern/kernel.asm	/^    f0109035:	00 00 00 $/;"	l
f0109038	obj/kern/kernel.asm	/^    f0109038:	89 c2                	mov    %eax,%edx$/;"	l
f010903a	obj/kern/kernel.asm	/^    f010903a:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109041	obj/kern/kernel.asm	/^    f0109041:	00 00 00 $/;"	l
f0109044	obj/kern/kernel.asm	/^    f0109044:	66 89 50 60          	mov    %dx,0x60(%rax)$/;"	l
f0109048	obj/kern/kernel.asm	/^    f0109048:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010904f	obj/kern/kernel.asm	/^    f010904f:	00 00 00 $/;"	l
f0109052	obj/kern/kernel.asm	/^    f0109052:	66 c7 40 62 08 00    	movw   $0x8,0x62(%rax)$/;"	l
f0109058	obj/kern/kernel.asm	/^    f0109058:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010905f	obj/kern/kernel.asm	/^    f010905f:	00 00 00 $/;"	l
f0109062	obj/kern/kernel.asm	/^    f0109062:	0f b6 50 64          	movzbl 0x64(%rax),%edx$/;"	l
f0109066	obj/kern/kernel.asm	/^    f0109066:	83 e2 f8             	and    $0xfffffffffffffff8,%edx$/;"	l
f0109069	obj/kern/kernel.asm	/^    f0109069:	88 50 64             	mov    %dl,0x64(%rax)$/;"	l
f010906c	obj/kern/kernel.asm	/^    f010906c:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109073	obj/kern/kernel.asm	/^    f0109073:	00 00 00 $/;"	l
f0109076	obj/kern/kernel.asm	/^    f0109076:	0f b6 50 64          	movzbl 0x64(%rax),%edx$/;"	l
f010907a	obj/kern/kernel.asm	/^    f010907a:	83 e2 07             	and    $0x7,%edx$/;"	l
f010907d	obj/kern/kernel.asm	/^    f010907d:	88 50 64             	mov    %dl,0x64(%rax)$/;"	l
f0109080	obj/kern/kernel.asm	/^    f0109080:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109087	obj/kern/kernel.asm	/^    f0109087:	00 00 00 $/;"	l
f010908a	obj/kern/kernel.asm	/^    f010908a:	0f b6 50 65          	movzbl 0x65(%rax),%edx$/;"	l
f010908e	obj/kern/kernel.asm	/^    f010908e:	83 ca 0f             	or     $0xf,%edx$/;"	l
f0109091	obj/kern/kernel.asm	/^    f0109091:	88 50 65             	mov    %dl,0x65(%rax)$/;"	l
f0109094	obj/kern/kernel.asm	/^    f0109094:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010909b	obj/kern/kernel.asm	/^    f010909b:	00 00 00 $/;"	l
f010909e	obj/kern/kernel.asm	/^    f010909e:	0f b6 50 65          	movzbl 0x65(%rax),%edx$/;"	l
f01090a2	obj/kern/kernel.asm	/^    f01090a2:	83 e2 ef             	and    $0xffffffffffffffef,%edx$/;"	l
f01090a5	obj/kern/kernel.asm	/^    f01090a5:	88 50 65             	mov    %dl,0x65(%rax)$/;"	l
f01090a8	obj/kern/kernel.asm	/^    f01090a8:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f01090af	obj/kern/kernel.asm	/^    f01090af:	00 00 00 $/;"	l
f01090b2	obj/kern/kernel.asm	/^    f01090b2:	0f b6 50 65          	movzbl 0x65(%rax),%edx$/;"	l
f01090b6	obj/kern/kernel.asm	/^    f01090b6:	83 ca 60             	or     $0x60,%edx$/;"	l
f01090b9	obj/kern/kernel.asm	/^    f01090b9:	88 50 65             	mov    %dl,0x65(%rax)$/;"	l
f01090bc	obj/kern/kernel.asm	/^    f01090bc:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f01090c3	obj/kern/kernel.asm	/^    f01090c3:	00 00 00 $/;"	l
f01090c6	obj/kern/kernel.asm	/^    f01090c6:	0f b6 50 65          	movzbl 0x65(%rax),%edx$/;"	l
f01090ca	obj/kern/kernel.asm	/^    f01090ca:	83 ca 80             	or     $0xffffffffffffff80,%edx$/;"	l
f01090cd	obj/kern/kernel.asm	/^    f01090cd:	88 50 65             	mov    %dl,0x65(%rax)$/;"	l
f01090d0	obj/kern/kernel.asm	/^    f01090d0:	48 b8 d0 c6 10 f0 00 	mov    $0xf010c6d0,%rax$/;"	l
f01090d7	obj/kern/kernel.asm	/^    f01090d7:	00 00 00 $/;"	l
f01090da	obj/kern/kernel.asm	/^    f01090da:	48 c1 e8 10          	shr    $0x10,%rax$/;"	l
f01090de	obj/kern/kernel.asm	/^    f01090de:	89 c2                	mov    %eax,%edx$/;"	l
f01090e0	obj/kern/kernel.asm	/^    f01090e0:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f01090e7	obj/kern/kernel.asm	/^    f01090e7:	00 00 00 $/;"	l
f01090ea	obj/kern/kernel.asm	/^    f01090ea:	66 89 50 66          	mov    %dx,0x66(%rax)$/;"	l
f01090ee	obj/kern/kernel.asm	/^    f01090ee:	48 b8 d0 c6 10 f0 00 	mov    $0xf010c6d0,%rax$/;"	l
f01090f5	obj/kern/kernel.asm	/^    f01090f5:	00 00 00 $/;"	l
f01090f8	obj/kern/kernel.asm	/^    f01090f8:	48 c1 e8 20          	shr    $0x20,%rax$/;"	l
f01090fc	obj/kern/kernel.asm	/^    f01090fc:	89 c2                	mov    %eax,%edx$/;"	l
f01090fe	obj/kern/kernel.asm	/^    f01090fe:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109105	obj/kern/kernel.asm	/^    f0109105:	00 00 00 $/;"	l
f0109108	obj/kern/kernel.asm	/^    f0109108:	89 50 68             	mov    %edx,0x68(%rax)$/;"	l
f010910b	obj/kern/kernel.asm	/^    f010910b:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109112	obj/kern/kernel.asm	/^    f0109112:	00 00 00 $/;"	l
f0109115	obj/kern/kernel.asm	/^    f0109115:	c7 40 6c 00 00 00 00 	movl   $0x0,0x6c(%rax)$/;"	l
f010911c	obj/kern/kernel.asm	/^    f010911c:	48 b8 da c6 10 f0 00 	mov    $0xf010c6da,%rax$/;"	l
f0109123	obj/kern/kernel.asm	/^    f0109123:	00 00 00 $/;"	l
f0109126	obj/kern/kernel.asm	/^    f0109126:	89 c2                	mov    %eax,%edx$/;"	l
f0109128	obj/kern/kernel.asm	/^    f0109128:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010912f	obj/kern/kernel.asm	/^    f010912f:	00 00 00 $/;"	l
f0109132	obj/kern/kernel.asm	/^    f0109132:	66 89 50 70          	mov    %dx,0x70(%rax)$/;"	l
f0109136	obj/kern/kernel.asm	/^    f0109136:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010913d	obj/kern/kernel.asm	/^    f010913d:	00 00 00 $/;"	l
f0109140	obj/kern/kernel.asm	/^    f0109140:	66 c7 40 72 08 00    	movw   $0x8,0x72(%rax)$/;"	l
f0109146	obj/kern/kernel.asm	/^    f0109146:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010914d	obj/kern/kernel.asm	/^    f010914d:	00 00 00 $/;"	l
f0109150	obj/kern/kernel.asm	/^    f0109150:	0f b6 50 74          	movzbl 0x74(%rax),%edx$/;"	l
f0109154	obj/kern/kernel.asm	/^    f0109154:	83 e2 f8             	and    $0xfffffffffffffff8,%edx$/;"	l
f0109157	obj/kern/kernel.asm	/^    f0109157:	88 50 74             	mov    %dl,0x74(%rax)$/;"	l
f010915a	obj/kern/kernel.asm	/^    f010915a:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109161	obj/kern/kernel.asm	/^    f0109161:	00 00 00 $/;"	l
f0109164	obj/kern/kernel.asm	/^    f0109164:	0f b6 50 74          	movzbl 0x74(%rax),%edx$/;"	l
f0109168	obj/kern/kernel.asm	/^    f0109168:	83 e2 07             	and    $0x7,%edx$/;"	l
f010916b	obj/kern/kernel.asm	/^    f010916b:	88 50 74             	mov    %dl,0x74(%rax)$/;"	l
f010916e	obj/kern/kernel.asm	/^    f010916e:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109175	obj/kern/kernel.asm	/^    f0109175:	00 00 00 $/;"	l
f0109178	obj/kern/kernel.asm	/^    f0109178:	0f b6 50 75          	movzbl 0x75(%rax),%edx$/;"	l
f010917c	obj/kern/kernel.asm	/^    f010917c:	83 ca 0f             	or     $0xf,%edx$/;"	l
f010917f	obj/kern/kernel.asm	/^    f010917f:	88 50 75             	mov    %dl,0x75(%rax)$/;"	l
f0109182	obj/kern/kernel.asm	/^    f0109182:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109189	obj/kern/kernel.asm	/^    f0109189:	00 00 00 $/;"	l
f010918c	obj/kern/kernel.asm	/^    f010918c:	0f b6 50 75          	movzbl 0x75(%rax),%edx$/;"	l
f0109190	obj/kern/kernel.asm	/^    f0109190:	83 e2 ef             	and    $0xffffffffffffffef,%edx$/;"	l
f0109193	obj/kern/kernel.asm	/^    f0109193:	88 50 75             	mov    %dl,0x75(%rax)$/;"	l
f0109196	obj/kern/kernel.asm	/^    f0109196:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010919d	obj/kern/kernel.asm	/^    f010919d:	00 00 00 $/;"	l
f01091a0	obj/kern/kernel.asm	/^    f01091a0:	0f b6 50 75          	movzbl 0x75(%rax),%edx$/;"	l
f01091a4	obj/kern/kernel.asm	/^    f01091a4:	83 ca 60             	or     $0x60,%edx$/;"	l
f01091a7	obj/kern/kernel.asm	/^    f01091a7:	88 50 75             	mov    %dl,0x75(%rax)$/;"	l
f01091aa	obj/kern/kernel.asm	/^    f01091aa:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f01091b1	obj/kern/kernel.asm	/^    f01091b1:	00 00 00 $/;"	l
f01091b4	obj/kern/kernel.asm	/^    f01091b4:	0f b6 50 75          	movzbl 0x75(%rax),%edx$/;"	l
f01091b8	obj/kern/kernel.asm	/^    f01091b8:	83 ca 80             	or     $0xffffffffffffff80,%edx$/;"	l
f01091bb	obj/kern/kernel.asm	/^    f01091bb:	88 50 75             	mov    %dl,0x75(%rax)$/;"	l
f01091be	obj/kern/kernel.asm	/^    f01091be:	48 b8 da c6 10 f0 00 	mov    $0xf010c6da,%rax$/;"	l
f01091c5	obj/kern/kernel.asm	/^    f01091c5:	00 00 00 $/;"	l
f01091c8	obj/kern/kernel.asm	/^    f01091c8:	48 c1 e8 10          	shr    $0x10,%rax$/;"	l
f01091cc	obj/kern/kernel.asm	/^    f01091cc:	89 c2                	mov    %eax,%edx$/;"	l
f01091ce	obj/kern/kernel.asm	/^    f01091ce:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f01091d5	obj/kern/kernel.asm	/^    f01091d5:	00 00 00 $/;"	l
f01091d8	obj/kern/kernel.asm	/^    f01091d8:	66 89 50 76          	mov    %dx,0x76(%rax)$/;"	l
f01091dc	obj/kern/kernel.asm	/^    f01091dc:	48 b8 da c6 10 f0 00 	mov    $0xf010c6da,%rax$/;"	l
f01091e3	obj/kern/kernel.asm	/^    f01091e3:	00 00 00 $/;"	l
f01091e6	obj/kern/kernel.asm	/^    f01091e6:	48 c1 e8 20          	shr    $0x20,%rax$/;"	l
f01091ea	obj/kern/kernel.asm	/^    f01091ea:	89 c2                	mov    %eax,%edx$/;"	l
f01091ec	obj/kern/kernel.asm	/^    f01091ec:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f01091f3	obj/kern/kernel.asm	/^    f01091f3:	00 00 00 $/;"	l
f01091f6	obj/kern/kernel.asm	/^    f01091f6:	89 50 78             	mov    %edx,0x78(%rax)$/;"	l
f01091f9	obj/kern/kernel.asm	/^    f01091f9:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109200	obj/kern/kernel.asm	/^    f0109200:	00 00 00 $/;"	l
f0109203	obj/kern/kernel.asm	/^    f0109203:	c7 40 7c 00 00 00 00 	movl   $0x0,0x7c(%rax)$/;"	l
f010920a	obj/kern/kernel.asm	/^    f010920a:	48 b8 e4 c6 10 f0 00 	mov    $0xf010c6e4,%rax$/;"	l
f0109211	obj/kern/kernel.asm	/^    f0109211:	00 00 00 $/;"	l
f0109214	obj/kern/kernel.asm	/^    f0109214:	89 c2                	mov    %eax,%edx$/;"	l
f0109216	obj/kern/kernel.asm	/^    f0109216:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010921d	obj/kern/kernel.asm	/^    f010921d:	00 00 00 $/;"	l
f0109220	obj/kern/kernel.asm	/^    f0109220:	66 89 90 80 00 00 00 	mov    %dx,0x80(%rax)$/;"	l
f0109227	obj/kern/kernel.asm	/^    f0109227:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010922e	obj/kern/kernel.asm	/^    f010922e:	00 00 00 $/;"	l
f0109231	obj/kern/kernel.asm	/^    f0109231:	66 c7 80 82 00 00 00 	movw   $0x8,0x82(%rax)$/;"	l
f0109238	obj/kern/kernel.asm	/^    f0109238:	08 00 $/;"	l
f010923a	obj/kern/kernel.asm	/^    f010923a:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109241	obj/kern/kernel.asm	/^    f0109241:	00 00 00 $/;"	l
f0109244	obj/kern/kernel.asm	/^    f0109244:	0f b6 90 84 00 00 00 	movzbl 0x84(%rax),%edx$/;"	l
f010924b	obj/kern/kernel.asm	/^    f010924b:	83 e2 f8             	and    $0xfffffffffffffff8,%edx$/;"	l
f010924e	obj/kern/kernel.asm	/^    f010924e:	88 90 84 00 00 00    	mov    %dl,0x84(%rax)$/;"	l
f0109254	obj/kern/kernel.asm	/^    f0109254:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010925b	obj/kern/kernel.asm	/^    f010925b:	00 00 00 $/;"	l
f010925e	obj/kern/kernel.asm	/^    f010925e:	0f b6 90 84 00 00 00 	movzbl 0x84(%rax),%edx$/;"	l
f0109265	obj/kern/kernel.asm	/^    f0109265:	83 e2 07             	and    $0x7,%edx$/;"	l
f0109268	obj/kern/kernel.asm	/^    f0109268:	88 90 84 00 00 00    	mov    %dl,0x84(%rax)$/;"	l
f010926e	obj/kern/kernel.asm	/^    f010926e:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109275	obj/kern/kernel.asm	/^    f0109275:	00 00 00 $/;"	l
f0109278	obj/kern/kernel.asm	/^    f0109278:	0f b6 90 85 00 00 00 	movzbl 0x85(%rax),%edx$/;"	l
f010927f	obj/kern/kernel.asm	/^    f010927f:	83 ca 0f             	or     $0xf,%edx$/;"	l
f0109282	obj/kern/kernel.asm	/^    f0109282:	88 90 85 00 00 00    	mov    %dl,0x85(%rax)$/;"	l
f0109288	obj/kern/kernel.asm	/^    f0109288:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010928f	obj/kern/kernel.asm	/^    f010928f:	00 00 00 $/;"	l
f0109292	obj/kern/kernel.asm	/^    f0109292:	0f b6 90 85 00 00 00 	movzbl 0x85(%rax),%edx$/;"	l
f0109299	obj/kern/kernel.asm	/^    f0109299:	83 e2 ef             	and    $0xffffffffffffffef,%edx$/;"	l
f010929c	obj/kern/kernel.asm	/^    f010929c:	88 90 85 00 00 00    	mov    %dl,0x85(%rax)$/;"	l
f01092a2	obj/kern/kernel.asm	/^    f01092a2:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f01092a9	obj/kern/kernel.asm	/^    f01092a9:	00 00 00 $/;"	l
f01092ac	obj/kern/kernel.asm	/^    f01092ac:	0f b6 90 85 00 00 00 	movzbl 0x85(%rax),%edx$/;"	l
f01092b3	obj/kern/kernel.asm	/^    f01092b3:	83 ca 60             	or     $0x60,%edx$/;"	l
f01092b6	obj/kern/kernel.asm	/^    f01092b6:	88 90 85 00 00 00    	mov    %dl,0x85(%rax)$/;"	l
f01092bc	obj/kern/kernel.asm	/^    f01092bc:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f01092c3	obj/kern/kernel.asm	/^    f01092c3:	00 00 00 $/;"	l
f01092c6	obj/kern/kernel.asm	/^    f01092c6:	0f b6 90 85 00 00 00 	movzbl 0x85(%rax),%edx$/;"	l
f01092cd	obj/kern/kernel.asm	/^    f01092cd:	83 ca 80             	or     $0xffffffffffffff80,%edx$/;"	l
f01092d0	obj/kern/kernel.asm	/^    f01092d0:	88 90 85 00 00 00    	mov    %dl,0x85(%rax)$/;"	l
f01092d6	obj/kern/kernel.asm	/^    f01092d6:	48 b8 e4 c6 10 f0 00 	mov    $0xf010c6e4,%rax$/;"	l
f01092dd	obj/kern/kernel.asm	/^    f01092dd:	00 00 00 $/;"	l
f01092e0	obj/kern/kernel.asm	/^    f01092e0:	48 c1 e8 10          	shr    $0x10,%rax$/;"	l
f01092e4	obj/kern/kernel.asm	/^    f01092e4:	89 c2                	mov    %eax,%edx$/;"	l
f01092e6	obj/kern/kernel.asm	/^    f01092e6:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f01092ed	obj/kern/kernel.asm	/^    f01092ed:	00 00 00 $/;"	l
f01092f0	obj/kern/kernel.asm	/^    f01092f0:	66 89 90 86 00 00 00 	mov    %dx,0x86(%rax)$/;"	l
f01092f7	obj/kern/kernel.asm	/^    f01092f7:	48 b8 e4 c6 10 f0 00 	mov    $0xf010c6e4,%rax$/;"	l
f01092fe	obj/kern/kernel.asm	/^    f01092fe:	00 00 00 $/;"	l
f0109301	obj/kern/kernel.asm	/^    f0109301:	48 c1 e8 20          	shr    $0x20,%rax$/;"	l
f0109305	obj/kern/kernel.asm	/^    f0109305:	89 c2                	mov    %eax,%edx$/;"	l
f0109307	obj/kern/kernel.asm	/^    f0109307:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010930e	obj/kern/kernel.asm	/^    f010930e:	00 00 00 $/;"	l
f0109311	obj/kern/kernel.asm	/^    f0109311:	89 90 88 00 00 00    	mov    %edx,0x88(%rax)$/;"	l
f0109317	obj/kern/kernel.asm	/^    f0109317:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010931e	obj/kern/kernel.asm	/^    f010931e:	00 00 00 $/;"	l
f0109321	obj/kern/kernel.asm	/^    f0109321:	c7 80 8c 00 00 00 00 	movl   $0x0,0x8c(%rax)$/;"	l
f0109328	obj/kern/kernel.asm	/^    f0109328:	00 00 00 $/;"	l
f010932b	obj/kern/kernel.asm	/^    f010932b:	48 b8 ec c6 10 f0 00 	mov    $0xf010c6ec,%rax$/;"	l
f0109332	obj/kern/kernel.asm	/^    f0109332:	00 00 00 $/;"	l
f0109335	obj/kern/kernel.asm	/^    f0109335:	89 c2                	mov    %eax,%edx$/;"	l
f0109337	obj/kern/kernel.asm	/^    f0109337:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010933e	obj/kern/kernel.asm	/^    f010933e:	00 00 00 $/;"	l
f0109341	obj/kern/kernel.asm	/^    f0109341:	66 89 90 a0 00 00 00 	mov    %dx,0xa0(%rax)$/;"	l
f0109348	obj/kern/kernel.asm	/^    f0109348:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010934f	obj/kern/kernel.asm	/^    f010934f:	00 00 00 $/;"	l
f0109352	obj/kern/kernel.asm	/^    f0109352:	66 c7 80 a2 00 00 00 	movw   $0x8,0xa2(%rax)$/;"	l
f0109359	obj/kern/kernel.asm	/^    f0109359:	08 00 $/;"	l
f010935b	obj/kern/kernel.asm	/^    f010935b:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109362	obj/kern/kernel.asm	/^    f0109362:	00 00 00 $/;"	l
f0109365	obj/kern/kernel.asm	/^    f0109365:	0f b6 90 a4 00 00 00 	movzbl 0xa4(%rax),%edx$/;"	l
f010936c	obj/kern/kernel.asm	/^    f010936c:	83 e2 f8             	and    $0xfffffffffffffff8,%edx$/;"	l
f010936f	obj/kern/kernel.asm	/^    f010936f:	88 90 a4 00 00 00    	mov    %dl,0xa4(%rax)$/;"	l
f0109375	obj/kern/kernel.asm	/^    f0109375:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010937c	obj/kern/kernel.asm	/^    f010937c:	00 00 00 $/;"	l
f010937f	obj/kern/kernel.asm	/^    f010937f:	0f b6 90 a4 00 00 00 	movzbl 0xa4(%rax),%edx$/;"	l
f0109386	obj/kern/kernel.asm	/^    f0109386:	83 e2 07             	and    $0x7,%edx$/;"	l
f0109389	obj/kern/kernel.asm	/^    f0109389:	88 90 a4 00 00 00    	mov    %dl,0xa4(%rax)$/;"	l
f010938f	obj/kern/kernel.asm	/^    f010938f:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109396	obj/kern/kernel.asm	/^    f0109396:	00 00 00 $/;"	l
f0109399	obj/kern/kernel.asm	/^    f0109399:	0f b6 90 a5 00 00 00 	movzbl 0xa5(%rax),%edx$/;"	l
f01093a0	obj/kern/kernel.asm	/^    f01093a0:	83 ca 0f             	or     $0xf,%edx$/;"	l
f01093a3	obj/kern/kernel.asm	/^    f01093a3:	88 90 a5 00 00 00    	mov    %dl,0xa5(%rax)$/;"	l
f01093a9	obj/kern/kernel.asm	/^    f01093a9:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f01093b0	obj/kern/kernel.asm	/^    f01093b0:	00 00 00 $/;"	l
f01093b3	obj/kern/kernel.asm	/^    f01093b3:	0f b6 90 a5 00 00 00 	movzbl 0xa5(%rax),%edx$/;"	l
f01093ba	obj/kern/kernel.asm	/^    f01093ba:	83 e2 ef             	and    $0xffffffffffffffef,%edx$/;"	l
f01093bd	obj/kern/kernel.asm	/^    f01093bd:	88 90 a5 00 00 00    	mov    %dl,0xa5(%rax)$/;"	l
f01093c3	obj/kern/kernel.asm	/^    f01093c3:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f01093ca	obj/kern/kernel.asm	/^    f01093ca:	00 00 00 $/;"	l
f01093cd	obj/kern/kernel.asm	/^    f01093cd:	0f b6 90 a5 00 00 00 	movzbl 0xa5(%rax),%edx$/;"	l
f01093d4	obj/kern/kernel.asm	/^    f01093d4:	83 ca 60             	or     $0x60,%edx$/;"	l
f01093d7	obj/kern/kernel.asm	/^    f01093d7:	88 90 a5 00 00 00    	mov    %dl,0xa5(%rax)$/;"	l
f01093dd	obj/kern/kernel.asm	/^    f01093dd:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f01093e4	obj/kern/kernel.asm	/^    f01093e4:	00 00 00 $/;"	l
f01093e7	obj/kern/kernel.asm	/^    f01093e7:	0f b6 90 a5 00 00 00 	movzbl 0xa5(%rax),%edx$/;"	l
f01093ee	obj/kern/kernel.asm	/^    f01093ee:	83 ca 80             	or     $0xffffffffffffff80,%edx$/;"	l
f01093f1	obj/kern/kernel.asm	/^    f01093f1:	88 90 a5 00 00 00    	mov    %dl,0xa5(%rax)$/;"	l
f01093f7	obj/kern/kernel.asm	/^    f01093f7:	48 b8 ec c6 10 f0 00 	mov    $0xf010c6ec,%rax$/;"	l
f01093fe	obj/kern/kernel.asm	/^    f01093fe:	00 00 00 $/;"	l
f0109401	obj/kern/kernel.asm	/^    f0109401:	48 c1 e8 10          	shr    $0x10,%rax$/;"	l
f0109405	obj/kern/kernel.asm	/^    f0109405:	89 c2                	mov    %eax,%edx$/;"	l
f0109407	obj/kern/kernel.asm	/^    f0109407:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010940e	obj/kern/kernel.asm	/^    f010940e:	00 00 00 $/;"	l
f0109411	obj/kern/kernel.asm	/^    f0109411:	66 89 90 a6 00 00 00 	mov    %dx,0xa6(%rax)$/;"	l
f0109418	obj/kern/kernel.asm	/^    f0109418:	48 b8 ec c6 10 f0 00 	mov    $0xf010c6ec,%rax$/;"	l
f010941f	obj/kern/kernel.asm	/^    f010941f:	00 00 00 $/;"	l
f0109422	obj/kern/kernel.asm	/^    f0109422:	48 c1 e8 20          	shr    $0x20,%rax$/;"	l
f0109426	obj/kern/kernel.asm	/^    f0109426:	89 c2                	mov    %eax,%edx$/;"	l
f0109428	obj/kern/kernel.asm	/^    f0109428:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010942f	obj/kern/kernel.asm	/^    f010942f:	00 00 00 $/;"	l
f0109432	obj/kern/kernel.asm	/^    f0109432:	89 90 a8 00 00 00    	mov    %edx,0xa8(%rax)$/;"	l
f0109438	obj/kern/kernel.asm	/^    f0109438:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010943f	obj/kern/kernel.asm	/^    f010943f:	00 00 00 $/;"	l
f0109442	obj/kern/kernel.asm	/^    f0109442:	c7 80 ac 00 00 00 00 	movl   $0x0,0xac(%rax)$/;"	l
f0109449	obj/kern/kernel.asm	/^    f0109449:	00 00 00 $/;"	l
f010944c	obj/kern/kernel.asm	/^    f010944c:	48 b8 f4 c6 10 f0 00 	mov    $0xf010c6f4,%rax$/;"	l
f0109453	obj/kern/kernel.asm	/^    f0109453:	00 00 00 $/;"	l
f0109456	obj/kern/kernel.asm	/^    f0109456:	89 c2                	mov    %eax,%edx$/;"	l
f0109458	obj/kern/kernel.asm	/^    f0109458:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010945f	obj/kern/kernel.asm	/^    f010945f:	00 00 00 $/;"	l
f0109462	obj/kern/kernel.asm	/^    f0109462:	66 89 90 b0 00 00 00 	mov    %dx,0xb0(%rax)$/;"	l
f0109469	obj/kern/kernel.asm	/^    f0109469:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109470	obj/kern/kernel.asm	/^    f0109470:	00 00 00 $/;"	l
f0109473	obj/kern/kernel.asm	/^    f0109473:	66 c7 80 b2 00 00 00 	movw   $0x8,0xb2(%rax)$/;"	l
f010947a	obj/kern/kernel.asm	/^    f010947a:	08 00 $/;"	l
f010947c	obj/kern/kernel.asm	/^    f010947c:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109483	obj/kern/kernel.asm	/^    f0109483:	00 00 00 $/;"	l
f0109486	obj/kern/kernel.asm	/^    f0109486:	0f b6 90 b4 00 00 00 	movzbl 0xb4(%rax),%edx$/;"	l
f010948d	obj/kern/kernel.asm	/^    f010948d:	83 e2 f8             	and    $0xfffffffffffffff8,%edx$/;"	l
f0109490	obj/kern/kernel.asm	/^    f0109490:	88 90 b4 00 00 00    	mov    %dl,0xb4(%rax)$/;"	l
f0109496	obj/kern/kernel.asm	/^    f0109496:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010949d	obj/kern/kernel.asm	/^    f010949d:	00 00 00 $/;"	l
f01094a0	obj/kern/kernel.asm	/^    f01094a0:	0f b6 90 b4 00 00 00 	movzbl 0xb4(%rax),%edx$/;"	l
f01094a7	obj/kern/kernel.asm	/^    f01094a7:	83 e2 07             	and    $0x7,%edx$/;"	l
f01094aa	obj/kern/kernel.asm	/^    f01094aa:	88 90 b4 00 00 00    	mov    %dl,0xb4(%rax)$/;"	l
f01094b0	obj/kern/kernel.asm	/^    f01094b0:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f01094b7	obj/kern/kernel.asm	/^    f01094b7:	00 00 00 $/;"	l
f01094ba	obj/kern/kernel.asm	/^    f01094ba:	0f b6 90 b5 00 00 00 	movzbl 0xb5(%rax),%edx$/;"	l
f01094c1	obj/kern/kernel.asm	/^    f01094c1:	83 ca 0f             	or     $0xf,%edx$/;"	l
f01094c4	obj/kern/kernel.asm	/^    f01094c4:	88 90 b5 00 00 00    	mov    %dl,0xb5(%rax)$/;"	l
f01094ca	obj/kern/kernel.asm	/^    f01094ca:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f01094d1	obj/kern/kernel.asm	/^    f01094d1:	00 00 00 $/;"	l
f01094d4	obj/kern/kernel.asm	/^    f01094d4:	0f b6 90 b5 00 00 00 	movzbl 0xb5(%rax),%edx$/;"	l
f01094db	obj/kern/kernel.asm	/^    f01094db:	83 e2 ef             	and    $0xffffffffffffffef,%edx$/;"	l
f01094de	obj/kern/kernel.asm	/^    f01094de:	88 90 b5 00 00 00    	mov    %dl,0xb5(%rax)$/;"	l
f01094e4	obj/kern/kernel.asm	/^    f01094e4:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f01094eb	obj/kern/kernel.asm	/^    f01094eb:	00 00 00 $/;"	l
f01094ee	obj/kern/kernel.asm	/^    f01094ee:	0f b6 90 b5 00 00 00 	movzbl 0xb5(%rax),%edx$/;"	l
f01094f5	obj/kern/kernel.asm	/^    f01094f5:	83 ca 60             	or     $0x60,%edx$/;"	l
f01094f8	obj/kern/kernel.asm	/^    f01094f8:	88 90 b5 00 00 00    	mov    %dl,0xb5(%rax)$/;"	l
f01094fe	obj/kern/kernel.asm	/^    f01094fe:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109505	obj/kern/kernel.asm	/^    f0109505:	00 00 00 $/;"	l
f0109508	obj/kern/kernel.asm	/^    f0109508:	0f b6 90 b5 00 00 00 	movzbl 0xb5(%rax),%edx$/;"	l
f010950f	obj/kern/kernel.asm	/^    f010950f:	83 ca 80             	or     $0xffffffffffffff80,%edx$/;"	l
f0109512	obj/kern/kernel.asm	/^    f0109512:	88 90 b5 00 00 00    	mov    %dl,0xb5(%rax)$/;"	l
f0109518	obj/kern/kernel.asm	/^    f0109518:	48 b8 f4 c6 10 f0 00 	mov    $0xf010c6f4,%rax$/;"	l
f010951f	obj/kern/kernel.asm	/^    f010951f:	00 00 00 $/;"	l
f0109522	obj/kern/kernel.asm	/^    f0109522:	48 c1 e8 10          	shr    $0x10,%rax$/;"	l
f0109526	obj/kern/kernel.asm	/^    f0109526:	89 c2                	mov    %eax,%edx$/;"	l
f0109528	obj/kern/kernel.asm	/^    f0109528:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010952f	obj/kern/kernel.asm	/^    f010952f:	00 00 00 $/;"	l
f0109532	obj/kern/kernel.asm	/^    f0109532:	66 89 90 b6 00 00 00 	mov    %dx,0xb6(%rax)$/;"	l
f0109539	obj/kern/kernel.asm	/^    f0109539:	48 b8 f4 c6 10 f0 00 	mov    $0xf010c6f4,%rax$/;"	l
f0109540	obj/kern/kernel.asm	/^    f0109540:	00 00 00 $/;"	l
f0109543	obj/kern/kernel.asm	/^    f0109543:	48 c1 e8 20          	shr    $0x20,%rax$/;"	l
f0109547	obj/kern/kernel.asm	/^    f0109547:	89 c2                	mov    %eax,%edx$/;"	l
f0109549	obj/kern/kernel.asm	/^    f0109549:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109550	obj/kern/kernel.asm	/^    f0109550:	00 00 00 $/;"	l
f0109553	obj/kern/kernel.asm	/^    f0109553:	89 90 b8 00 00 00    	mov    %edx,0xb8(%rax)$/;"	l
f0109559	obj/kern/kernel.asm	/^    f0109559:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109560	obj/kern/kernel.asm	/^    f0109560:	00 00 00 $/;"	l
f0109563	obj/kern/kernel.asm	/^    f0109563:	c7 80 bc 00 00 00 00 	movl   $0x0,0xbc(%rax)$/;"	l
f010956a	obj/kern/kernel.asm	/^    f010956a:	00 00 00 $/;"	l
f010956d	obj/kern/kernel.asm	/^    f010956d:	48 b8 fc c6 10 f0 00 	mov    $0xf010c6fc,%rax$/;"	l
f0109574	obj/kern/kernel.asm	/^    f0109574:	00 00 00 $/;"	l
f0109577	obj/kern/kernel.asm	/^    f0109577:	89 c2                	mov    %eax,%edx$/;"	l
f0109579	obj/kern/kernel.asm	/^    f0109579:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109580	obj/kern/kernel.asm	/^    f0109580:	00 00 00 $/;"	l
f0109583	obj/kern/kernel.asm	/^    f0109583:	66 89 90 c0 00 00 00 	mov    %dx,0xc0(%rax)$/;"	l
f010958a	obj/kern/kernel.asm	/^    f010958a:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109591	obj/kern/kernel.asm	/^    f0109591:	00 00 00 $/;"	l
f0109594	obj/kern/kernel.asm	/^    f0109594:	66 c7 80 c2 00 00 00 	movw   $0x8,0xc2(%rax)$/;"	l
f010959b	obj/kern/kernel.asm	/^    f010959b:	08 00 $/;"	l
f010959d	obj/kern/kernel.asm	/^    f010959d:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f01095a4	obj/kern/kernel.asm	/^    f01095a4:	00 00 00 $/;"	l
f01095a7	obj/kern/kernel.asm	/^    f01095a7:	0f b6 90 c4 00 00 00 	movzbl 0xc4(%rax),%edx$/;"	l
f01095ae	obj/kern/kernel.asm	/^    f01095ae:	83 e2 f8             	and    $0xfffffffffffffff8,%edx$/;"	l
f01095b1	obj/kern/kernel.asm	/^    f01095b1:	88 90 c4 00 00 00    	mov    %dl,0xc4(%rax)$/;"	l
f01095b7	obj/kern/kernel.asm	/^    f01095b7:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f01095be	obj/kern/kernel.asm	/^    f01095be:	00 00 00 $/;"	l
f01095c1	obj/kern/kernel.asm	/^    f01095c1:	0f b6 90 c4 00 00 00 	movzbl 0xc4(%rax),%edx$/;"	l
f01095c8	obj/kern/kernel.asm	/^    f01095c8:	83 e2 07             	and    $0x7,%edx$/;"	l
f01095cb	obj/kern/kernel.asm	/^    f01095cb:	88 90 c4 00 00 00    	mov    %dl,0xc4(%rax)$/;"	l
f01095d1	obj/kern/kernel.asm	/^    f01095d1:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f01095d8	obj/kern/kernel.asm	/^    f01095d8:	00 00 00 $/;"	l
f01095db	obj/kern/kernel.asm	/^    f01095db:	0f b6 90 c5 00 00 00 	movzbl 0xc5(%rax),%edx$/;"	l
f01095e2	obj/kern/kernel.asm	/^    f01095e2:	83 ca 0f             	or     $0xf,%edx$/;"	l
f01095e5	obj/kern/kernel.asm	/^    f01095e5:	88 90 c5 00 00 00    	mov    %dl,0xc5(%rax)$/;"	l
f01095eb	obj/kern/kernel.asm	/^    f01095eb:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f01095f2	obj/kern/kernel.asm	/^    f01095f2:	00 00 00 $/;"	l
f01095f5	obj/kern/kernel.asm	/^    f01095f5:	0f b6 90 c5 00 00 00 	movzbl 0xc5(%rax),%edx$/;"	l
f01095fc	obj/kern/kernel.asm	/^    f01095fc:	83 e2 ef             	and    $0xffffffffffffffef,%edx$/;"	l
f01095ff	obj/kern/kernel.asm	/^    f01095ff:	88 90 c5 00 00 00    	mov    %dl,0xc5(%rax)$/;"	l
f0109605	obj/kern/kernel.asm	/^    f0109605:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010960c	obj/kern/kernel.asm	/^    f010960c:	00 00 00 $/;"	l
f010960f	obj/kern/kernel.asm	/^    f010960f:	0f b6 90 c5 00 00 00 	movzbl 0xc5(%rax),%edx$/;"	l
f0109616	obj/kern/kernel.asm	/^    f0109616:	83 ca 60             	or     $0x60,%edx$/;"	l
f0109619	obj/kern/kernel.asm	/^    f0109619:	88 90 c5 00 00 00    	mov    %dl,0xc5(%rax)$/;"	l
f010961f	obj/kern/kernel.asm	/^    f010961f:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109626	obj/kern/kernel.asm	/^    f0109626:	00 00 00 $/;"	l
f0109629	obj/kern/kernel.asm	/^    f0109629:	0f b6 90 c5 00 00 00 	movzbl 0xc5(%rax),%edx$/;"	l
f0109630	obj/kern/kernel.asm	/^    f0109630:	83 ca 80             	or     $0xffffffffffffff80,%edx$/;"	l
f0109633	obj/kern/kernel.asm	/^    f0109633:	88 90 c5 00 00 00    	mov    %dl,0xc5(%rax)$/;"	l
f0109639	obj/kern/kernel.asm	/^    f0109639:	48 b8 fc c6 10 f0 00 	mov    $0xf010c6fc,%rax$/;"	l
f0109640	obj/kern/kernel.asm	/^    f0109640:	00 00 00 $/;"	l
f0109643	obj/kern/kernel.asm	/^    f0109643:	48 c1 e8 10          	shr    $0x10,%rax$/;"	l
f0109647	obj/kern/kernel.asm	/^    f0109647:	89 c2                	mov    %eax,%edx$/;"	l
f0109649	obj/kern/kernel.asm	/^    f0109649:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109650	obj/kern/kernel.asm	/^    f0109650:	00 00 00 $/;"	l
f0109653	obj/kern/kernel.asm	/^    f0109653:	66 89 90 c6 00 00 00 	mov    %dx,0xc6(%rax)$/;"	l
f010965a	obj/kern/kernel.asm	/^    f010965a:	48 b8 fc c6 10 f0 00 	mov    $0xf010c6fc,%rax$/;"	l
f0109661	obj/kern/kernel.asm	/^    f0109661:	00 00 00 $/;"	l
f0109664	obj/kern/kernel.asm	/^    f0109664:	48 c1 e8 20          	shr    $0x20,%rax$/;"	l
f0109668	obj/kern/kernel.asm	/^    f0109668:	89 c2                	mov    %eax,%edx$/;"	l
f010966a	obj/kern/kernel.asm	/^    f010966a:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109671	obj/kern/kernel.asm	/^    f0109671:	00 00 00 $/;"	l
f0109674	obj/kern/kernel.asm	/^    f0109674:	89 90 c8 00 00 00    	mov    %edx,0xc8(%rax)$/;"	l
f010967a	obj/kern/kernel.asm	/^    f010967a:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109681	obj/kern/kernel.asm	/^    f0109681:	00 00 00 $/;"	l
f0109684	obj/kern/kernel.asm	/^    f0109684:	c7 80 cc 00 00 00 00 	movl   $0x0,0xcc(%rax)$/;"	l
f010968b	obj/kern/kernel.asm	/^    f010968b:	00 00 00 $/;"	l
f010968e	obj/kern/kernel.asm	/^    f010968e:	48 b8 04 c7 10 f0 00 	mov    $0xf010c704,%rax$/;"	l
f0109695	obj/kern/kernel.asm	/^    f0109695:	00 00 00 $/;"	l
f0109698	obj/kern/kernel.asm	/^    f0109698:	89 c2                	mov    %eax,%edx$/;"	l
f010969a	obj/kern/kernel.asm	/^    f010969a:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f01096a1	obj/kern/kernel.asm	/^    f01096a1:	00 00 00 $/;"	l
f01096a4	obj/kern/kernel.asm	/^    f01096a4:	66 89 90 d0 00 00 00 	mov    %dx,0xd0(%rax)$/;"	l
f01096ab	obj/kern/kernel.asm	/^    f01096ab:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f01096b2	obj/kern/kernel.asm	/^    f01096b2:	00 00 00 $/;"	l
f01096b5	obj/kern/kernel.asm	/^    f01096b5:	66 c7 80 d2 00 00 00 	movw   $0x8,0xd2(%rax)$/;"	l
f01096bc	obj/kern/kernel.asm	/^    f01096bc:	08 00 $/;"	l
f01096be	obj/kern/kernel.asm	/^    f01096be:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f01096c5	obj/kern/kernel.asm	/^    f01096c5:	00 00 00 $/;"	l
f01096c8	obj/kern/kernel.asm	/^    f01096c8:	0f b6 90 d4 00 00 00 	movzbl 0xd4(%rax),%edx$/;"	l
f01096cf	obj/kern/kernel.asm	/^    f01096cf:	83 e2 f8             	and    $0xfffffffffffffff8,%edx$/;"	l
f01096d2	obj/kern/kernel.asm	/^    f01096d2:	88 90 d4 00 00 00    	mov    %dl,0xd4(%rax)$/;"	l
f01096d8	obj/kern/kernel.asm	/^    f01096d8:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f01096df	obj/kern/kernel.asm	/^    f01096df:	00 00 00 $/;"	l
f01096e2	obj/kern/kernel.asm	/^    f01096e2:	0f b6 90 d4 00 00 00 	movzbl 0xd4(%rax),%edx$/;"	l
f01096e9	obj/kern/kernel.asm	/^    f01096e9:	83 e2 07             	and    $0x7,%edx$/;"	l
f01096ec	obj/kern/kernel.asm	/^    f01096ec:	88 90 d4 00 00 00    	mov    %dl,0xd4(%rax)$/;"	l
f01096f2	obj/kern/kernel.asm	/^    f01096f2:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f01096f9	obj/kern/kernel.asm	/^    f01096f9:	00 00 00 $/;"	l
f01096fc	obj/kern/kernel.asm	/^    f01096fc:	0f b6 90 d5 00 00 00 	movzbl 0xd5(%rax),%edx$/;"	l
f0109703	obj/kern/kernel.asm	/^    f0109703:	83 ca 0f             	or     $0xf,%edx$/;"	l
f0109706	obj/kern/kernel.asm	/^    f0109706:	88 90 d5 00 00 00    	mov    %dl,0xd5(%rax)$/;"	l
f010970c	obj/kern/kernel.asm	/^    f010970c:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109713	obj/kern/kernel.asm	/^    f0109713:	00 00 00 $/;"	l
f0109716	obj/kern/kernel.asm	/^    f0109716:	0f b6 90 d5 00 00 00 	movzbl 0xd5(%rax),%edx$/;"	l
f010971d	obj/kern/kernel.asm	/^    f010971d:	83 e2 ef             	and    $0xffffffffffffffef,%edx$/;"	l
f0109720	obj/kern/kernel.asm	/^    f0109720:	88 90 d5 00 00 00    	mov    %dl,0xd5(%rax)$/;"	l
f0109726	obj/kern/kernel.asm	/^    f0109726:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010972d	obj/kern/kernel.asm	/^    f010972d:	00 00 00 $/;"	l
f0109730	obj/kern/kernel.asm	/^    f0109730:	0f b6 90 d5 00 00 00 	movzbl 0xd5(%rax),%edx$/;"	l
f0109737	obj/kern/kernel.asm	/^    f0109737:	83 ca 60             	or     $0x60,%edx$/;"	l
f010973a	obj/kern/kernel.asm	/^    f010973a:	88 90 d5 00 00 00    	mov    %dl,0xd5(%rax)$/;"	l
f0109740	obj/kern/kernel.asm	/^    f0109740:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109747	obj/kern/kernel.asm	/^    f0109747:	00 00 00 $/;"	l
f010974a	obj/kern/kernel.asm	/^    f010974a:	0f b6 90 d5 00 00 00 	movzbl 0xd5(%rax),%edx$/;"	l
f0109751	obj/kern/kernel.asm	/^    f0109751:	83 ca 80             	or     $0xffffffffffffff80,%edx$/;"	l
f0109754	obj/kern/kernel.asm	/^    f0109754:	88 90 d5 00 00 00    	mov    %dl,0xd5(%rax)$/;"	l
f010975a	obj/kern/kernel.asm	/^    f010975a:	48 b8 04 c7 10 f0 00 	mov    $0xf010c704,%rax$/;"	l
f0109761	obj/kern/kernel.asm	/^    f0109761:	00 00 00 $/;"	l
f0109764	obj/kern/kernel.asm	/^    f0109764:	48 c1 e8 10          	shr    $0x10,%rax$/;"	l
f0109768	obj/kern/kernel.asm	/^    f0109768:	89 c2                	mov    %eax,%edx$/;"	l
f010976a	obj/kern/kernel.asm	/^    f010976a:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109771	obj/kern/kernel.asm	/^    f0109771:	00 00 00 $/;"	l
f0109774	obj/kern/kernel.asm	/^    f0109774:	66 89 90 d6 00 00 00 	mov    %dx,0xd6(%rax)$/;"	l
f010977b	obj/kern/kernel.asm	/^    f010977b:	48 b8 04 c7 10 f0 00 	mov    $0xf010c704,%rax$/;"	l
f0109782	obj/kern/kernel.asm	/^    f0109782:	00 00 00 $/;"	l
f0109785	obj/kern/kernel.asm	/^    f0109785:	48 c1 e8 20          	shr    $0x20,%rax$/;"	l
f0109789	obj/kern/kernel.asm	/^    f0109789:	89 c2                	mov    %eax,%edx$/;"	l
f010978b	obj/kern/kernel.asm	/^    f010978b:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109792	obj/kern/kernel.asm	/^    f0109792:	00 00 00 $/;"	l
f0109795	obj/kern/kernel.asm	/^    f0109795:	89 90 d8 00 00 00    	mov    %edx,0xd8(%rax)$/;"	l
f010979b	obj/kern/kernel.asm	/^    f010979b:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f01097a2	obj/kern/kernel.asm	/^    f01097a2:	00 00 00 $/;"	l
f01097a5	obj/kern/kernel.asm	/^    f01097a5:	c7 80 dc 00 00 00 00 	movl   $0x0,0xdc(%rax)$/;"	l
f01097ac	obj/kern/kernel.asm	/^    f01097ac:	00 00 00 $/;"	l
f01097af	obj/kern/kernel.asm	/^    f01097af:	48 b8 0c c7 10 f0 00 	mov    $0xf010c70c,%rax$/;"	l
f01097b6	obj/kern/kernel.asm	/^    f01097b6:	00 00 00 $/;"	l
f01097b9	obj/kern/kernel.asm	/^    f01097b9:	89 c2                	mov    %eax,%edx$/;"	l
f01097bb	obj/kern/kernel.asm	/^    f01097bb:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f01097c2	obj/kern/kernel.asm	/^    f01097c2:	00 00 00 $/;"	l
f01097c5	obj/kern/kernel.asm	/^    f01097c5:	66 89 90 e0 00 00 00 	mov    %dx,0xe0(%rax)$/;"	l
f01097cc	obj/kern/kernel.asm	/^    f01097cc:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f01097d3	obj/kern/kernel.asm	/^    f01097d3:	00 00 00 $/;"	l
f01097d6	obj/kern/kernel.asm	/^    f01097d6:	66 c7 80 e2 00 00 00 	movw   $0x8,0xe2(%rax)$/;"	l
f01097dd	obj/kern/kernel.asm	/^    f01097dd:	08 00 $/;"	l
f01097df	obj/kern/kernel.asm	/^    f01097df:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f01097e6	obj/kern/kernel.asm	/^    f01097e6:	00 00 00 $/;"	l
f01097e9	obj/kern/kernel.asm	/^    f01097e9:	0f b6 90 e4 00 00 00 	movzbl 0xe4(%rax),%edx$/;"	l
f01097f0	obj/kern/kernel.asm	/^    f01097f0:	83 e2 f8             	and    $0xfffffffffffffff8,%edx$/;"	l
f01097f3	obj/kern/kernel.asm	/^    f01097f3:	88 90 e4 00 00 00    	mov    %dl,0xe4(%rax)$/;"	l
f01097f9	obj/kern/kernel.asm	/^    f01097f9:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109800	obj/kern/kernel.asm	/^    f0109800:	00 00 00 $/;"	l
f0109803	obj/kern/kernel.asm	/^    f0109803:	0f b6 90 e4 00 00 00 	movzbl 0xe4(%rax),%edx$/;"	l
f010980a	obj/kern/kernel.asm	/^    f010980a:	83 e2 07             	and    $0x7,%edx$/;"	l
f010980d	obj/kern/kernel.asm	/^    f010980d:	88 90 e4 00 00 00    	mov    %dl,0xe4(%rax)$/;"	l
f0109813	obj/kern/kernel.asm	/^    f0109813:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010981a	obj/kern/kernel.asm	/^    f010981a:	00 00 00 $/;"	l
f010981d	obj/kern/kernel.asm	/^    f010981d:	0f b6 90 e5 00 00 00 	movzbl 0xe5(%rax),%edx$/;"	l
f0109824	obj/kern/kernel.asm	/^    f0109824:	83 e2 f0             	and    $0xfffffffffffffff0,%edx$/;"	l
f0109827	obj/kern/kernel.asm	/^    f0109827:	83 ca 0e             	or     $0xe,%edx$/;"	l
f010982a	obj/kern/kernel.asm	/^    f010982a:	88 90 e5 00 00 00    	mov    %dl,0xe5(%rax)$/;"	l
f0109830	obj/kern/kernel.asm	/^    f0109830:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109837	obj/kern/kernel.asm	/^    f0109837:	00 00 00 $/;"	l
f010983a	obj/kern/kernel.asm	/^    f010983a:	0f b6 90 e5 00 00 00 	movzbl 0xe5(%rax),%edx$/;"	l
f0109841	obj/kern/kernel.asm	/^    f0109841:	83 e2 ef             	and    $0xffffffffffffffef,%edx$/;"	l
f0109844	obj/kern/kernel.asm	/^    f0109844:	88 90 e5 00 00 00    	mov    %dl,0xe5(%rax)$/;"	l
f010984a	obj/kern/kernel.asm	/^    f010984a:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109851	obj/kern/kernel.asm	/^    f0109851:	00 00 00 $/;"	l
f0109854	obj/kern/kernel.asm	/^    f0109854:	0f b6 90 e5 00 00 00 	movzbl 0xe5(%rax),%edx$/;"	l
f010985b	obj/kern/kernel.asm	/^    f010985b:	83 ca 60             	or     $0x60,%edx$/;"	l
f010985e	obj/kern/kernel.asm	/^    f010985e:	88 90 e5 00 00 00    	mov    %dl,0xe5(%rax)$/;"	l
f0109864	obj/kern/kernel.asm	/^    f0109864:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010986b	obj/kern/kernel.asm	/^    f010986b:	00 00 00 $/;"	l
f010986e	obj/kern/kernel.asm	/^    f010986e:	0f b6 90 e5 00 00 00 	movzbl 0xe5(%rax),%edx$/;"	l
f0109875	obj/kern/kernel.asm	/^    f0109875:	83 ca 80             	or     $0xffffffffffffff80,%edx$/;"	l
f0109878	obj/kern/kernel.asm	/^    f0109878:	88 90 e5 00 00 00    	mov    %dl,0xe5(%rax)$/;"	l
f010987e	obj/kern/kernel.asm	/^    f010987e:	48 b8 0c c7 10 f0 00 	mov    $0xf010c70c,%rax$/;"	l
f0109885	obj/kern/kernel.asm	/^    f0109885:	00 00 00 $/;"	l
f0109888	obj/kern/kernel.asm	/^    f0109888:	48 c1 e8 10          	shr    $0x10,%rax$/;"	l
f010988c	obj/kern/kernel.asm	/^    f010988c:	89 c2                	mov    %eax,%edx$/;"	l
f010988e	obj/kern/kernel.asm	/^    f010988e:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109895	obj/kern/kernel.asm	/^    f0109895:	00 00 00 $/;"	l
f0109898	obj/kern/kernel.asm	/^    f0109898:	66 89 90 e6 00 00 00 	mov    %dx,0xe6(%rax)$/;"	l
f010989f	obj/kern/kernel.asm	/^    f010989f:	48 b8 0c c7 10 f0 00 	mov    $0xf010c70c,%rax$/;"	l
f01098a6	obj/kern/kernel.asm	/^    f01098a6:	00 00 00 $/;"	l
f01098a9	obj/kern/kernel.asm	/^    f01098a9:	48 c1 e8 20          	shr    $0x20,%rax$/;"	l
f01098ad	obj/kern/kernel.asm	/^    f01098ad:	89 c2                	mov    %eax,%edx$/;"	l
f01098af	obj/kern/kernel.asm	/^    f01098af:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f01098b6	obj/kern/kernel.asm	/^    f01098b6:	00 00 00 $/;"	l
f01098b9	obj/kern/kernel.asm	/^    f01098b9:	89 90 e8 00 00 00    	mov    %edx,0xe8(%rax)$/;"	l
f01098bf	obj/kern/kernel.asm	/^    f01098bf:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f01098c6	obj/kern/kernel.asm	/^    f01098c6:	00 00 00 $/;"	l
f01098c9	obj/kern/kernel.asm	/^    f01098c9:	c7 80 ec 00 00 00 00 	movl   $0x0,0xec(%rax)$/;"	l
f01098d0	obj/kern/kernel.asm	/^    f01098d0:	00 00 00 $/;"	l
f01098d3	obj/kern/kernel.asm	/^    f01098d3:	48 b8 14 c7 10 f0 00 	mov    $0xf010c714,%rax$/;"	l
f01098da	obj/kern/kernel.asm	/^    f01098da:	00 00 00 $/;"	l
f01098dd	obj/kern/kernel.asm	/^    f01098dd:	89 c2                	mov    %eax,%edx$/;"	l
f01098df	obj/kern/kernel.asm	/^    f01098df:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f01098e6	obj/kern/kernel.asm	/^    f01098e6:	00 00 00 $/;"	l
f01098e9	obj/kern/kernel.asm	/^    f01098e9:	66 89 90 00 01 00 00 	mov    %dx,0x100(%rax)$/;"	l
f01098f0	obj/kern/kernel.asm	/^    f01098f0:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f01098f7	obj/kern/kernel.asm	/^    f01098f7:	00 00 00 $/;"	l
f01098fa	obj/kern/kernel.asm	/^    f01098fa:	66 c7 80 02 01 00 00 	movw   $0x8,0x102(%rax)$/;"	l
f0109901	obj/kern/kernel.asm	/^    f0109901:	08 00 $/;"	l
f0109903	obj/kern/kernel.asm	/^    f0109903:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010990a	obj/kern/kernel.asm	/^    f010990a:	00 00 00 $/;"	l
f010990d	obj/kern/kernel.asm	/^    f010990d:	0f b6 90 04 01 00 00 	movzbl 0x104(%rax),%edx$/;"	l
f0109914	obj/kern/kernel.asm	/^    f0109914:	83 e2 f8             	and    $0xfffffffffffffff8,%edx$/;"	l
f0109917	obj/kern/kernel.asm	/^    f0109917:	88 90 04 01 00 00    	mov    %dl,0x104(%rax)$/;"	l
f010991d	obj/kern/kernel.asm	/^    f010991d:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109924	obj/kern/kernel.asm	/^    f0109924:	00 00 00 $/;"	l
f0109927	obj/kern/kernel.asm	/^    f0109927:	0f b6 90 04 01 00 00 	movzbl 0x104(%rax),%edx$/;"	l
f010992e	obj/kern/kernel.asm	/^    f010992e:	83 e2 07             	and    $0x7,%edx$/;"	l
f0109931	obj/kern/kernel.asm	/^    f0109931:	88 90 04 01 00 00    	mov    %dl,0x104(%rax)$/;"	l
f0109937	obj/kern/kernel.asm	/^    f0109937:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010993e	obj/kern/kernel.asm	/^    f010993e:	00 00 00 $/;"	l
f0109941	obj/kern/kernel.asm	/^    f0109941:	0f b6 90 05 01 00 00 	movzbl 0x105(%rax),%edx$/;"	l
f0109948	obj/kern/kernel.asm	/^    f0109948:	83 ca 0f             	or     $0xf,%edx$/;"	l
f010994b	obj/kern/kernel.asm	/^    f010994b:	88 90 05 01 00 00    	mov    %dl,0x105(%rax)$/;"	l
f0109951	obj/kern/kernel.asm	/^    f0109951:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109958	obj/kern/kernel.asm	/^    f0109958:	00 00 00 $/;"	l
f010995b	obj/kern/kernel.asm	/^    f010995b:	0f b6 90 05 01 00 00 	movzbl 0x105(%rax),%edx$/;"	l
f0109962	obj/kern/kernel.asm	/^    f0109962:	83 e2 ef             	and    $0xffffffffffffffef,%edx$/;"	l
f0109965	obj/kern/kernel.asm	/^    f0109965:	88 90 05 01 00 00    	mov    %dl,0x105(%rax)$/;"	l
f010996b	obj/kern/kernel.asm	/^    f010996b:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109972	obj/kern/kernel.asm	/^    f0109972:	00 00 00 $/;"	l
f0109975	obj/kern/kernel.asm	/^    f0109975:	0f b6 90 05 01 00 00 	movzbl 0x105(%rax),%edx$/;"	l
f010997c	obj/kern/kernel.asm	/^    f010997c:	83 ca 60             	or     $0x60,%edx$/;"	l
f010997f	obj/kern/kernel.asm	/^    f010997f:	88 90 05 01 00 00    	mov    %dl,0x105(%rax)$/;"	l
f0109985	obj/kern/kernel.asm	/^    f0109985:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010998c	obj/kern/kernel.asm	/^    f010998c:	00 00 00 $/;"	l
f010998f	obj/kern/kernel.asm	/^    f010998f:	0f b6 90 05 01 00 00 	movzbl 0x105(%rax),%edx$/;"	l
f0109996	obj/kern/kernel.asm	/^    f0109996:	83 ca 80             	or     $0xffffffffffffff80,%edx$/;"	l
f0109999	obj/kern/kernel.asm	/^    f0109999:	88 90 05 01 00 00    	mov    %dl,0x105(%rax)$/;"	l
f010999f	obj/kern/kernel.asm	/^    f010999f:	48 b8 14 c7 10 f0 00 	mov    $0xf010c714,%rax$/;"	l
f01099a6	obj/kern/kernel.asm	/^    f01099a6:	00 00 00 $/;"	l
f01099a9	obj/kern/kernel.asm	/^    f01099a9:	48 c1 e8 10          	shr    $0x10,%rax$/;"	l
f01099ad	obj/kern/kernel.asm	/^    f01099ad:	89 c2                	mov    %eax,%edx$/;"	l
f01099af	obj/kern/kernel.asm	/^    f01099af:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f01099b6	obj/kern/kernel.asm	/^    f01099b6:	00 00 00 $/;"	l
f01099b9	obj/kern/kernel.asm	/^    f01099b9:	66 89 90 06 01 00 00 	mov    %dx,0x106(%rax)$/;"	l
f01099c0	obj/kern/kernel.asm	/^    f01099c0:	48 b8 14 c7 10 f0 00 	mov    $0xf010c714,%rax$/;"	l
f01099c7	obj/kern/kernel.asm	/^    f01099c7:	00 00 00 $/;"	l
f01099ca	obj/kern/kernel.asm	/^    f01099ca:	48 c1 e8 20          	shr    $0x20,%rax$/;"	l
f01099ce	obj/kern/kernel.asm	/^    f01099ce:	89 c2                	mov    %eax,%edx$/;"	l
f01099d0	obj/kern/kernel.asm	/^    f01099d0:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f01099d7	obj/kern/kernel.asm	/^    f01099d7:	00 00 00 $/;"	l
f01099da	obj/kern/kernel.asm	/^    f01099da:	89 90 08 01 00 00    	mov    %edx,0x108(%rax)$/;"	l
f01099e0	obj/kern/kernel.asm	/^    f01099e0:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f01099e7	obj/kern/kernel.asm	/^    f01099e7:	00 00 00 $/;"	l
f01099ea	obj/kern/kernel.asm	/^    f01099ea:	c7 80 0c 01 00 00 00 	movl   $0x0,0x10c(%rax)$/;"	l
f01099f1	obj/kern/kernel.asm	/^    f01099f1:	00 00 00 $/;"	l
f01099f4	obj/kern/kernel.asm	/^    f01099f4:	48 b8 1e c7 10 f0 00 	mov    $0xf010c71e,%rax$/;"	l
f01099fb	obj/kern/kernel.asm	/^    f01099fb:	00 00 00 $/;"	l
f01099fe	obj/kern/kernel.asm	/^    f01099fe:	89 c2                	mov    %eax,%edx$/;"	l
f0109a00	obj/kern/kernel.asm	/^    f0109a00:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109a07	obj/kern/kernel.asm	/^    f0109a07:	00 00 00 $/;"	l
f0109a0a	obj/kern/kernel.asm	/^    f0109a0a:	66 89 90 10 01 00 00 	mov    %dx,0x110(%rax)$/;"	l
f0109a11	obj/kern/kernel.asm	/^    f0109a11:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109a18	obj/kern/kernel.asm	/^    f0109a18:	00 00 00 $/;"	l
f0109a1b	obj/kern/kernel.asm	/^    f0109a1b:	66 c7 80 12 01 00 00 	movw   $0x8,0x112(%rax)$/;"	l
f0109a22	obj/kern/kernel.asm	/^    f0109a22:	08 00 $/;"	l
f0109a24	obj/kern/kernel.asm	/^    f0109a24:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109a2b	obj/kern/kernel.asm	/^    f0109a2b:	00 00 00 $/;"	l
f0109a2e	obj/kern/kernel.asm	/^    f0109a2e:	0f b6 90 14 01 00 00 	movzbl 0x114(%rax),%edx$/;"	l
f0109a35	obj/kern/kernel.asm	/^    f0109a35:	83 e2 f8             	and    $0xfffffffffffffff8,%edx$/;"	l
f0109a38	obj/kern/kernel.asm	/^    f0109a38:	88 90 14 01 00 00    	mov    %dl,0x114(%rax)$/;"	l
f0109a3e	obj/kern/kernel.asm	/^    f0109a3e:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109a45	obj/kern/kernel.asm	/^    f0109a45:	00 00 00 $/;"	l
f0109a48	obj/kern/kernel.asm	/^    f0109a48:	0f b6 90 14 01 00 00 	movzbl 0x114(%rax),%edx$/;"	l
f0109a4f	obj/kern/kernel.asm	/^    f0109a4f:	83 e2 07             	and    $0x7,%edx$/;"	l
f0109a52	obj/kern/kernel.asm	/^    f0109a52:	88 90 14 01 00 00    	mov    %dl,0x114(%rax)$/;"	l
f0109a58	obj/kern/kernel.asm	/^    f0109a58:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109a5f	obj/kern/kernel.asm	/^    f0109a5f:	00 00 00 $/;"	l
f0109a62	obj/kern/kernel.asm	/^    f0109a62:	0f b6 90 15 01 00 00 	movzbl 0x115(%rax),%edx$/;"	l
f0109a69	obj/kern/kernel.asm	/^    f0109a69:	83 ca 0f             	or     $0xf,%edx$/;"	l
f0109a6c	obj/kern/kernel.asm	/^    f0109a6c:	88 90 15 01 00 00    	mov    %dl,0x115(%rax)$/;"	l
f0109a72	obj/kern/kernel.asm	/^    f0109a72:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109a79	obj/kern/kernel.asm	/^    f0109a79:	00 00 00 $/;"	l
f0109a7c	obj/kern/kernel.asm	/^    f0109a7c:	0f b6 90 15 01 00 00 	movzbl 0x115(%rax),%edx$/;"	l
f0109a83	obj/kern/kernel.asm	/^    f0109a83:	83 e2 ef             	and    $0xffffffffffffffef,%edx$/;"	l
f0109a86	obj/kern/kernel.asm	/^    f0109a86:	88 90 15 01 00 00    	mov    %dl,0x115(%rax)$/;"	l
f0109a8c	obj/kern/kernel.asm	/^    f0109a8c:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109a93	obj/kern/kernel.asm	/^    f0109a93:	00 00 00 $/;"	l
f0109a96	obj/kern/kernel.asm	/^    f0109a96:	0f b6 90 15 01 00 00 	movzbl 0x115(%rax),%edx$/;"	l
f0109a9d	obj/kern/kernel.asm	/^    f0109a9d:	83 ca 60             	or     $0x60,%edx$/;"	l
f0109aa0	obj/kern/kernel.asm	/^    f0109aa0:	88 90 15 01 00 00    	mov    %dl,0x115(%rax)$/;"	l
f0109aa6	obj/kern/kernel.asm	/^    f0109aa6:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109aad	obj/kern/kernel.asm	/^    f0109aad:	00 00 00 $/;"	l
f0109ab0	obj/kern/kernel.asm	/^    f0109ab0:	0f b6 90 15 01 00 00 	movzbl 0x115(%rax),%edx$/;"	l
f0109ab7	obj/kern/kernel.asm	/^    f0109ab7:	83 ca 80             	or     $0xffffffffffffff80,%edx$/;"	l
f0109aba	obj/kern/kernel.asm	/^    f0109aba:	88 90 15 01 00 00    	mov    %dl,0x115(%rax)$/;"	l
f0109ac0	obj/kern/kernel.asm	/^    f0109ac0:	48 b8 1e c7 10 f0 00 	mov    $0xf010c71e,%rax$/;"	l
f0109ac7	obj/kern/kernel.asm	/^    f0109ac7:	00 00 00 $/;"	l
f0109aca	obj/kern/kernel.asm	/^    f0109aca:	48 c1 e8 10          	shr    $0x10,%rax$/;"	l
f0109ace	obj/kern/kernel.asm	/^    f0109ace:	89 c2                	mov    %eax,%edx$/;"	l
f0109ad0	obj/kern/kernel.asm	/^    f0109ad0:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109ad7	obj/kern/kernel.asm	/^    f0109ad7:	00 00 00 $/;"	l
f0109ada	obj/kern/kernel.asm	/^    f0109ada:	66 89 90 16 01 00 00 	mov    %dx,0x116(%rax)$/;"	l
f0109ae1	obj/kern/kernel.asm	/^    f0109ae1:	48 b8 1e c7 10 f0 00 	mov    $0xf010c71e,%rax$/;"	l
f0109ae8	obj/kern/kernel.asm	/^    f0109ae8:	00 00 00 $/;"	l
f0109aeb	obj/kern/kernel.asm	/^    f0109aeb:	48 c1 e8 20          	shr    $0x20,%rax$/;"	l
f0109aef	obj/kern/kernel.asm	/^    f0109aef:	89 c2                	mov    %eax,%edx$/;"	l
f0109af1	obj/kern/kernel.asm	/^    f0109af1:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109af8	obj/kern/kernel.asm	/^    f0109af8:	00 00 00 $/;"	l
f0109afb	obj/kern/kernel.asm	/^    f0109afb:	89 90 18 01 00 00    	mov    %edx,0x118(%rax)$/;"	l
f0109b01	obj/kern/kernel.asm	/^    f0109b01:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109b08	obj/kern/kernel.asm	/^    f0109b08:	00 00 00 $/;"	l
f0109b0b	obj/kern/kernel.asm	/^    f0109b0b:	c7 80 1c 01 00 00 00 	movl   $0x0,0x11c(%rax)$/;"	l
f0109b12	obj/kern/kernel.asm	/^    f0109b12:	00 00 00 $/;"	l
f0109b15	obj/kern/kernel.asm	/^    f0109b15:	48 b8 28 c7 10 f0 00 	mov    $0xf010c728,%rax$/;"	l
f0109b1c	obj/kern/kernel.asm	/^    f0109b1c:	00 00 00 $/;"	l
f0109b1f	obj/kern/kernel.asm	/^    f0109b1f:	89 c2                	mov    %eax,%edx$/;"	l
f0109b21	obj/kern/kernel.asm	/^    f0109b21:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109b28	obj/kern/kernel.asm	/^    f0109b28:	00 00 00 $/;"	l
f0109b2b	obj/kern/kernel.asm	/^    f0109b2b:	66 89 90 20 01 00 00 	mov    %dx,0x120(%rax)$/;"	l
f0109b32	obj/kern/kernel.asm	/^    f0109b32:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109b39	obj/kern/kernel.asm	/^    f0109b39:	00 00 00 $/;"	l
f0109b3c	obj/kern/kernel.asm	/^    f0109b3c:	66 c7 80 22 01 00 00 	movw   $0x8,0x122(%rax)$/;"	l
f0109b43	obj/kern/kernel.asm	/^    f0109b43:	08 00 $/;"	l
f0109b45	obj/kern/kernel.asm	/^    f0109b45:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109b4c	obj/kern/kernel.asm	/^    f0109b4c:	00 00 00 $/;"	l
f0109b4f	obj/kern/kernel.asm	/^    f0109b4f:	0f b6 90 24 01 00 00 	movzbl 0x124(%rax),%edx$/;"	l
f0109b56	obj/kern/kernel.asm	/^    f0109b56:	83 e2 f8             	and    $0xfffffffffffffff8,%edx$/;"	l
f0109b59	obj/kern/kernel.asm	/^    f0109b59:	88 90 24 01 00 00    	mov    %dl,0x124(%rax)$/;"	l
f0109b5f	obj/kern/kernel.asm	/^    f0109b5f:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109b66	obj/kern/kernel.asm	/^    f0109b66:	00 00 00 $/;"	l
f0109b69	obj/kern/kernel.asm	/^    f0109b69:	0f b6 90 24 01 00 00 	movzbl 0x124(%rax),%edx$/;"	l
f0109b70	obj/kern/kernel.asm	/^    f0109b70:	83 e2 07             	and    $0x7,%edx$/;"	l
f0109b73	obj/kern/kernel.asm	/^    f0109b73:	88 90 24 01 00 00    	mov    %dl,0x124(%rax)$/;"	l
f0109b79	obj/kern/kernel.asm	/^    f0109b79:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109b80	obj/kern/kernel.asm	/^    f0109b80:	00 00 00 $/;"	l
f0109b83	obj/kern/kernel.asm	/^    f0109b83:	0f b6 90 25 01 00 00 	movzbl 0x125(%rax),%edx$/;"	l
f0109b8a	obj/kern/kernel.asm	/^    f0109b8a:	83 ca 0f             	or     $0xf,%edx$/;"	l
f0109b8d	obj/kern/kernel.asm	/^    f0109b8d:	88 90 25 01 00 00    	mov    %dl,0x125(%rax)$/;"	l
f0109b93	obj/kern/kernel.asm	/^    f0109b93:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109b9a	obj/kern/kernel.asm	/^    f0109b9a:	00 00 00 $/;"	l
f0109b9d	obj/kern/kernel.asm	/^    f0109b9d:	0f b6 90 25 01 00 00 	movzbl 0x125(%rax),%edx$/;"	l
f0109ba4	obj/kern/kernel.asm	/^    f0109ba4:	83 e2 ef             	and    $0xffffffffffffffef,%edx$/;"	l
f0109ba7	obj/kern/kernel.asm	/^    f0109ba7:	88 90 25 01 00 00    	mov    %dl,0x125(%rax)$/;"	l
f0109bad	obj/kern/kernel.asm	/^    f0109bad:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109bb4	obj/kern/kernel.asm	/^    f0109bb4:	00 00 00 $/;"	l
f0109bb7	obj/kern/kernel.asm	/^    f0109bb7:	0f b6 90 25 01 00 00 	movzbl 0x125(%rax),%edx$/;"	l
f0109bbe	obj/kern/kernel.asm	/^    f0109bbe:	83 ca 60             	or     $0x60,%edx$/;"	l
f0109bc1	obj/kern/kernel.asm	/^    f0109bc1:	88 90 25 01 00 00    	mov    %dl,0x125(%rax)$/;"	l
f0109bc7	obj/kern/kernel.asm	/^    f0109bc7:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109bce	obj/kern/kernel.asm	/^    f0109bce:	00 00 00 $/;"	l
f0109bd1	obj/kern/kernel.asm	/^    f0109bd1:	0f b6 90 25 01 00 00 	movzbl 0x125(%rax),%edx$/;"	l
f0109bd8	obj/kern/kernel.asm	/^    f0109bd8:	83 ca 80             	or     $0xffffffffffffff80,%edx$/;"	l
f0109bdb	obj/kern/kernel.asm	/^    f0109bdb:	88 90 25 01 00 00    	mov    %dl,0x125(%rax)$/;"	l
f0109be1	obj/kern/kernel.asm	/^    f0109be1:	48 b8 28 c7 10 f0 00 	mov    $0xf010c728,%rax$/;"	l
f0109be8	obj/kern/kernel.asm	/^    f0109be8:	00 00 00 $/;"	l
f0109beb	obj/kern/kernel.asm	/^    f0109beb:	48 c1 e8 10          	shr    $0x10,%rax$/;"	l
f0109bef	obj/kern/kernel.asm	/^    f0109bef:	89 c2                	mov    %eax,%edx$/;"	l
f0109bf1	obj/kern/kernel.asm	/^    f0109bf1:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109bf8	obj/kern/kernel.asm	/^    f0109bf8:	00 00 00 $/;"	l
f0109bfb	obj/kern/kernel.asm	/^    f0109bfb:	66 89 90 26 01 00 00 	mov    %dx,0x126(%rax)$/;"	l
f0109c02	obj/kern/kernel.asm	/^    f0109c02:	48 b8 28 c7 10 f0 00 	mov    $0xf010c728,%rax$/;"	l
f0109c09	obj/kern/kernel.asm	/^    f0109c09:	00 00 00 $/;"	l
f0109c0c	obj/kern/kernel.asm	/^    f0109c0c:	48 c1 e8 20          	shr    $0x20,%rax$/;"	l
f0109c10	obj/kern/kernel.asm	/^    f0109c10:	89 c2                	mov    %eax,%edx$/;"	l
f0109c12	obj/kern/kernel.asm	/^    f0109c12:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109c19	obj/kern/kernel.asm	/^    f0109c19:	00 00 00 $/;"	l
f0109c1c	obj/kern/kernel.asm	/^    f0109c1c:	89 90 28 01 00 00    	mov    %edx,0x128(%rax)$/;"	l
f0109c22	obj/kern/kernel.asm	/^    f0109c22:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109c29	obj/kern/kernel.asm	/^    f0109c29:	00 00 00 $/;"	l
f0109c2c	obj/kern/kernel.asm	/^    f0109c2c:	c7 80 2c 01 00 00 00 	movl   $0x0,0x12c(%rax)$/;"	l
f0109c33	obj/kern/kernel.asm	/^    f0109c33:	00 00 00 $/;"	l
f0109c36	obj/kern/kernel.asm	/^    f0109c36:	48 b8 32 c7 10 f0 00 	mov    $0xf010c732,%rax$/;"	l
f0109c3d	obj/kern/kernel.asm	/^    f0109c3d:	00 00 00 $/;"	l
f0109c40	obj/kern/kernel.asm	/^    f0109c40:	89 c2                	mov    %eax,%edx$/;"	l
f0109c42	obj/kern/kernel.asm	/^    f0109c42:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109c49	obj/kern/kernel.asm	/^    f0109c49:	00 00 00 $/;"	l
f0109c4c	obj/kern/kernel.asm	/^    f0109c4c:	66 89 90 30 01 00 00 	mov    %dx,0x130(%rax)$/;"	l
f0109c53	obj/kern/kernel.asm	/^    f0109c53:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109c5a	obj/kern/kernel.asm	/^    f0109c5a:	00 00 00 $/;"	l
f0109c5d	obj/kern/kernel.asm	/^    f0109c5d:	66 c7 80 32 01 00 00 	movw   $0x8,0x132(%rax)$/;"	l
f0109c64	obj/kern/kernel.asm	/^    f0109c64:	08 00 $/;"	l
f0109c66	obj/kern/kernel.asm	/^    f0109c66:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109c6d	obj/kern/kernel.asm	/^    f0109c6d:	00 00 00 $/;"	l
f0109c70	obj/kern/kernel.asm	/^    f0109c70:	0f b6 90 34 01 00 00 	movzbl 0x134(%rax),%edx$/;"	l
f0109c77	obj/kern/kernel.asm	/^    f0109c77:	83 e2 f8             	and    $0xfffffffffffffff8,%edx$/;"	l
f0109c7a	obj/kern/kernel.asm	/^    f0109c7a:	88 90 34 01 00 00    	mov    %dl,0x134(%rax)$/;"	l
f0109c80	obj/kern/kernel.asm	/^    f0109c80:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109c87	obj/kern/kernel.asm	/^    f0109c87:	00 00 00 $/;"	l
f0109c8a	obj/kern/kernel.asm	/^    f0109c8a:	0f b6 90 34 01 00 00 	movzbl 0x134(%rax),%edx$/;"	l
f0109c91	obj/kern/kernel.asm	/^    f0109c91:	83 e2 07             	and    $0x7,%edx$/;"	l
f0109c94	obj/kern/kernel.asm	/^    f0109c94:	88 90 34 01 00 00    	mov    %dl,0x134(%rax)$/;"	l
f0109c9a	obj/kern/kernel.asm	/^    f0109c9a:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109ca1	obj/kern/kernel.asm	/^    f0109ca1:	00 00 00 $/;"	l
f0109ca4	obj/kern/kernel.asm	/^    f0109ca4:	0f b6 90 35 01 00 00 	movzbl 0x135(%rax),%edx$/;"	l
f0109cab	obj/kern/kernel.asm	/^    f0109cab:	83 ca 0f             	or     $0xf,%edx$/;"	l
f0109cae	obj/kern/kernel.asm	/^    f0109cae:	88 90 35 01 00 00    	mov    %dl,0x135(%rax)$/;"	l
f0109cb4	obj/kern/kernel.asm	/^    f0109cb4:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109cbb	obj/kern/kernel.asm	/^    f0109cbb:	00 00 00 $/;"	l
f0109cbe	obj/kern/kernel.asm	/^    f0109cbe:	0f b6 90 35 01 00 00 	movzbl 0x135(%rax),%edx$/;"	l
f0109cc5	obj/kern/kernel.asm	/^    f0109cc5:	83 e2 ef             	and    $0xffffffffffffffef,%edx$/;"	l
f0109cc8	obj/kern/kernel.asm	/^    f0109cc8:	88 90 35 01 00 00    	mov    %dl,0x135(%rax)$/;"	l
f0109cce	obj/kern/kernel.asm	/^    f0109cce:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109cd5	obj/kern/kernel.asm	/^    f0109cd5:	00 00 00 $/;"	l
f0109cd8	obj/kern/kernel.asm	/^    f0109cd8:	0f b6 90 35 01 00 00 	movzbl 0x135(%rax),%edx$/;"	l
f0109cdf	obj/kern/kernel.asm	/^    f0109cdf:	83 ca 60             	or     $0x60,%edx$/;"	l
f0109ce2	obj/kern/kernel.asm	/^    f0109ce2:	88 90 35 01 00 00    	mov    %dl,0x135(%rax)$/;"	l
f0109ce8	obj/kern/kernel.asm	/^    f0109ce8:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109cef	obj/kern/kernel.asm	/^    f0109cef:	00 00 00 $/;"	l
f0109cf2	obj/kern/kernel.asm	/^    f0109cf2:	0f b6 90 35 01 00 00 	movzbl 0x135(%rax),%edx$/;"	l
f0109cf9	obj/kern/kernel.asm	/^    f0109cf9:	83 ca 80             	or     $0xffffffffffffff80,%edx$/;"	l
f0109cfc	obj/kern/kernel.asm	/^    f0109cfc:	88 90 35 01 00 00    	mov    %dl,0x135(%rax)$/;"	l
f0109d02	obj/kern/kernel.asm	/^    f0109d02:	48 b8 32 c7 10 f0 00 	mov    $0xf010c732,%rax$/;"	l
f0109d09	obj/kern/kernel.asm	/^    f0109d09:	00 00 00 $/;"	l
f0109d0c	obj/kern/kernel.asm	/^    f0109d0c:	48 c1 e8 10          	shr    $0x10,%rax$/;"	l
f0109d10	obj/kern/kernel.asm	/^    f0109d10:	89 c2                	mov    %eax,%edx$/;"	l
f0109d12	obj/kern/kernel.asm	/^    f0109d12:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109d19	obj/kern/kernel.asm	/^    f0109d19:	00 00 00 $/;"	l
f0109d1c	obj/kern/kernel.asm	/^    f0109d1c:	66 89 90 36 01 00 00 	mov    %dx,0x136(%rax)$/;"	l
f0109d23	obj/kern/kernel.asm	/^    f0109d23:	48 b8 32 c7 10 f0 00 	mov    $0xf010c732,%rax$/;"	l
f0109d2a	obj/kern/kernel.asm	/^    f0109d2a:	00 00 00 $/;"	l
f0109d2d	obj/kern/kernel.asm	/^    f0109d2d:	48 c1 e8 20          	shr    $0x20,%rax$/;"	l
f0109d31	obj/kern/kernel.asm	/^    f0109d31:	89 c2                	mov    %eax,%edx$/;"	l
f0109d33	obj/kern/kernel.asm	/^    f0109d33:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109d3a	obj/kern/kernel.asm	/^    f0109d3a:	00 00 00 $/;"	l
f0109d3d	obj/kern/kernel.asm	/^    f0109d3d:	89 90 38 01 00 00    	mov    %edx,0x138(%rax)$/;"	l
f0109d43	obj/kern/kernel.asm	/^    f0109d43:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109d4a	obj/kern/kernel.asm	/^    f0109d4a:	00 00 00 $/;"	l
f0109d4d	obj/kern/kernel.asm	/^    f0109d4d:	c7 80 3c 01 00 00 00 	movl   $0x0,0x13c(%rax)$/;"	l
f0109d54	obj/kern/kernel.asm	/^    f0109d54:	00 00 00 $/;"	l
f0109d57	obj/kern/kernel.asm	/^    f0109d57:	48 b8 46 c7 10 f0 00 	mov    $0xf010c746,%rax$/;"	l
f0109d5e	obj/kern/kernel.asm	/^    f0109d5e:	00 00 00 $/;"	l
f0109d61	obj/kern/kernel.asm	/^    f0109d61:	89 c2                	mov    %eax,%edx$/;"	l
f0109d63	obj/kern/kernel.asm	/^    f0109d63:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109d6a	obj/kern/kernel.asm	/^    f0109d6a:	00 00 00 $/;"	l
f0109d6d	obj/kern/kernel.asm	/^    f0109d6d:	66 89 90 00 02 00 00 	mov    %dx,0x200(%rax)$/;"	l
f0109d74	obj/kern/kernel.asm	/^    f0109d74:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109d7b	obj/kern/kernel.asm	/^    f0109d7b:	00 00 00 $/;"	l
f0109d7e	obj/kern/kernel.asm	/^    f0109d7e:	66 c7 80 02 02 00 00 	movw   $0x8,0x202(%rax)$/;"	l
f0109d85	obj/kern/kernel.asm	/^    f0109d85:	08 00 $/;"	l
f0109d87	obj/kern/kernel.asm	/^    f0109d87:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109d8e	obj/kern/kernel.asm	/^    f0109d8e:	00 00 00 $/;"	l
f0109d91	obj/kern/kernel.asm	/^    f0109d91:	0f b6 90 04 02 00 00 	movzbl 0x204(%rax),%edx$/;"	l
f0109d98	obj/kern/kernel.asm	/^    f0109d98:	83 e2 f8             	and    $0xfffffffffffffff8,%edx$/;"	l
f0109d9b	obj/kern/kernel.asm	/^    f0109d9b:	88 90 04 02 00 00    	mov    %dl,0x204(%rax)$/;"	l
f0109da1	obj/kern/kernel.asm	/^    f0109da1:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109da8	obj/kern/kernel.asm	/^    f0109da8:	00 00 00 $/;"	l
f0109dab	obj/kern/kernel.asm	/^    f0109dab:	0f b6 90 04 02 00 00 	movzbl 0x204(%rax),%edx$/;"	l
f0109db2	obj/kern/kernel.asm	/^    f0109db2:	83 e2 07             	and    $0x7,%edx$/;"	l
f0109db5	obj/kern/kernel.asm	/^    f0109db5:	88 90 04 02 00 00    	mov    %dl,0x204(%rax)$/;"	l
f0109dbb	obj/kern/kernel.asm	/^    f0109dbb:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109dc2	obj/kern/kernel.asm	/^    f0109dc2:	00 00 00 $/;"	l
f0109dc5	obj/kern/kernel.asm	/^    f0109dc5:	0f b6 90 05 02 00 00 	movzbl 0x205(%rax),%edx$/;"	l
f0109dcc	obj/kern/kernel.asm	/^    f0109dcc:	83 e2 f0             	and    $0xfffffffffffffff0,%edx$/;"	l
f0109dcf	obj/kern/kernel.asm	/^    f0109dcf:	83 ca 0e             	or     $0xe,%edx$/;"	l
f0109dd2	obj/kern/kernel.asm	/^    f0109dd2:	88 90 05 02 00 00    	mov    %dl,0x205(%rax)$/;"	l
f0109dd8	obj/kern/kernel.asm	/^    f0109dd8:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109ddf	obj/kern/kernel.asm	/^    f0109ddf:	00 00 00 $/;"	l
f0109de2	obj/kern/kernel.asm	/^    f0109de2:	0f b6 90 05 02 00 00 	movzbl 0x205(%rax),%edx$/;"	l
f0109de9	obj/kern/kernel.asm	/^    f0109de9:	83 e2 ef             	and    $0xffffffffffffffef,%edx$/;"	l
f0109dec	obj/kern/kernel.asm	/^    f0109dec:	88 90 05 02 00 00    	mov    %dl,0x205(%rax)$/;"	l
f0109df2	obj/kern/kernel.asm	/^    f0109df2:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109df9	obj/kern/kernel.asm	/^    f0109df9:	00 00 00 $/;"	l
f0109dfc	obj/kern/kernel.asm	/^    f0109dfc:	0f b6 90 05 02 00 00 	movzbl 0x205(%rax),%edx$/;"	l
f0109e03	obj/kern/kernel.asm	/^    f0109e03:	83 e2 9f             	and    $0xffffffffffffff9f,%edx$/;"	l
f0109e06	obj/kern/kernel.asm	/^    f0109e06:	88 90 05 02 00 00    	mov    %dl,0x205(%rax)$/;"	l
f0109e0c	obj/kern/kernel.asm	/^    f0109e0c:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109e13	obj/kern/kernel.asm	/^    f0109e13:	00 00 00 $/;"	l
f0109e16	obj/kern/kernel.asm	/^    f0109e16:	0f b6 90 05 02 00 00 	movzbl 0x205(%rax),%edx$/;"	l
f0109e1d	obj/kern/kernel.asm	/^    f0109e1d:	83 ca 80             	or     $0xffffffffffffff80,%edx$/;"	l
f0109e20	obj/kern/kernel.asm	/^    f0109e20:	88 90 05 02 00 00    	mov    %dl,0x205(%rax)$/;"	l
f0109e26	obj/kern/kernel.asm	/^    f0109e26:	48 b8 46 c7 10 f0 00 	mov    $0xf010c746,%rax$/;"	l
f0109e2d	obj/kern/kernel.asm	/^    f0109e2d:	00 00 00 $/;"	l
f0109e30	obj/kern/kernel.asm	/^    f0109e30:	48 c1 e8 10          	shr    $0x10,%rax$/;"	l
f0109e34	obj/kern/kernel.asm	/^    f0109e34:	89 c2                	mov    %eax,%edx$/;"	l
f0109e36	obj/kern/kernel.asm	/^    f0109e36:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109e3d	obj/kern/kernel.asm	/^    f0109e3d:	00 00 00 $/;"	l
f0109e40	obj/kern/kernel.asm	/^    f0109e40:	66 89 90 06 02 00 00 	mov    %dx,0x206(%rax)$/;"	l
f0109e47	obj/kern/kernel.asm	/^    f0109e47:	48 b8 46 c7 10 f0 00 	mov    $0xf010c746,%rax$/;"	l
f0109e4e	obj/kern/kernel.asm	/^    f0109e4e:	00 00 00 $/;"	l
f0109e51	obj/kern/kernel.asm	/^    f0109e51:	48 c1 e8 20          	shr    $0x20,%rax$/;"	l
f0109e55	obj/kern/kernel.asm	/^    f0109e55:	89 c2                	mov    %eax,%edx$/;"	l
f0109e57	obj/kern/kernel.asm	/^    f0109e57:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109e5e	obj/kern/kernel.asm	/^    f0109e5e:	00 00 00 $/;"	l
f0109e61	obj/kern/kernel.asm	/^    f0109e61:	89 90 08 02 00 00    	mov    %edx,0x208(%rax)$/;"	l
f0109e67	obj/kern/kernel.asm	/^    f0109e67:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109e6e	obj/kern/kernel.asm	/^    f0109e6e:	00 00 00 $/;"	l
f0109e71	obj/kern/kernel.asm	/^    f0109e71:	c7 80 0c 02 00 00 00 	movl   $0x0,0x20c(%rax)$/;"	l
f0109e78	obj/kern/kernel.asm	/^    f0109e78:	00 00 00 $/;"	l
f0109e7b	obj/kern/kernel.asm	/^    f0109e7b:	48 b8 50 c7 10 f0 00 	mov    $0xf010c750,%rax$/;"	l
f0109e82	obj/kern/kernel.asm	/^    f0109e82:	00 00 00 $/;"	l
f0109e85	obj/kern/kernel.asm	/^    f0109e85:	89 c2                	mov    %eax,%edx$/;"	l
f0109e87	obj/kern/kernel.asm	/^    f0109e87:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109e8e	obj/kern/kernel.asm	/^    f0109e8e:	00 00 00 $/;"	l
f0109e91	obj/kern/kernel.asm	/^    f0109e91:	66 89 90 10 02 00 00 	mov    %dx,0x210(%rax)$/;"	l
f0109e98	obj/kern/kernel.asm	/^    f0109e98:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109e9f	obj/kern/kernel.asm	/^    f0109e9f:	00 00 00 $/;"	l
f0109ea2	obj/kern/kernel.asm	/^    f0109ea2:	66 c7 80 12 02 00 00 	movw   $0x8,0x212(%rax)$/;"	l
f0109ea9	obj/kern/kernel.asm	/^    f0109ea9:	08 00 $/;"	l
f0109eab	obj/kern/kernel.asm	/^    f0109eab:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109eb2	obj/kern/kernel.asm	/^    f0109eb2:	00 00 00 $/;"	l
f0109eb5	obj/kern/kernel.asm	/^    f0109eb5:	0f b6 90 14 02 00 00 	movzbl 0x214(%rax),%edx$/;"	l
f0109ebc	obj/kern/kernel.asm	/^    f0109ebc:	83 e2 f8             	and    $0xfffffffffffffff8,%edx$/;"	l
f0109ebf	obj/kern/kernel.asm	/^    f0109ebf:	88 90 14 02 00 00    	mov    %dl,0x214(%rax)$/;"	l
f0109ec5	obj/kern/kernel.asm	/^    f0109ec5:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109ecc	obj/kern/kernel.asm	/^    f0109ecc:	00 00 00 $/;"	l
f0109ecf	obj/kern/kernel.asm	/^    f0109ecf:	0f b6 90 14 02 00 00 	movzbl 0x214(%rax),%edx$/;"	l
f0109ed6	obj/kern/kernel.asm	/^    f0109ed6:	83 e2 07             	and    $0x7,%edx$/;"	l
f0109ed9	obj/kern/kernel.asm	/^    f0109ed9:	88 90 14 02 00 00    	mov    %dl,0x214(%rax)$/;"	l
f0109edf	obj/kern/kernel.asm	/^    f0109edf:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109ee6	obj/kern/kernel.asm	/^    f0109ee6:	00 00 00 $/;"	l
f0109ee9	obj/kern/kernel.asm	/^    f0109ee9:	0f b6 90 15 02 00 00 	movzbl 0x215(%rax),%edx$/;"	l
f0109ef0	obj/kern/kernel.asm	/^    f0109ef0:	83 e2 f0             	and    $0xfffffffffffffff0,%edx$/;"	l
f0109ef3	obj/kern/kernel.asm	/^    f0109ef3:	83 ca 0e             	or     $0xe,%edx$/;"	l
f0109ef6	obj/kern/kernel.asm	/^    f0109ef6:	88 90 15 02 00 00    	mov    %dl,0x215(%rax)$/;"	l
f0109efc	obj/kern/kernel.asm	/^    f0109efc:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109f03	obj/kern/kernel.asm	/^    f0109f03:	00 00 00 $/;"	l
f0109f06	obj/kern/kernel.asm	/^    f0109f06:	0f b6 90 15 02 00 00 	movzbl 0x215(%rax),%edx$/;"	l
f0109f0d	obj/kern/kernel.asm	/^    f0109f0d:	83 e2 ef             	and    $0xffffffffffffffef,%edx$/;"	l
f0109f10	obj/kern/kernel.asm	/^    f0109f10:	88 90 15 02 00 00    	mov    %dl,0x215(%rax)$/;"	l
f0109f16	obj/kern/kernel.asm	/^    f0109f16:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109f1d	obj/kern/kernel.asm	/^    f0109f1d:	00 00 00 $/;"	l
f0109f20	obj/kern/kernel.asm	/^    f0109f20:	0f b6 90 15 02 00 00 	movzbl 0x215(%rax),%edx$/;"	l
f0109f27	obj/kern/kernel.asm	/^    f0109f27:	83 e2 9f             	and    $0xffffffffffffff9f,%edx$/;"	l
f0109f2a	obj/kern/kernel.asm	/^    f0109f2a:	88 90 15 02 00 00    	mov    %dl,0x215(%rax)$/;"	l
f0109f30	obj/kern/kernel.asm	/^    f0109f30:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109f37	obj/kern/kernel.asm	/^    f0109f37:	00 00 00 $/;"	l
f0109f3a	obj/kern/kernel.asm	/^    f0109f3a:	0f b6 90 15 02 00 00 	movzbl 0x215(%rax),%edx$/;"	l
f0109f41	obj/kern/kernel.asm	/^    f0109f41:	83 ca 80             	or     $0xffffffffffffff80,%edx$/;"	l
f0109f44	obj/kern/kernel.asm	/^    f0109f44:	88 90 15 02 00 00    	mov    %dl,0x215(%rax)$/;"	l
f0109f4a	obj/kern/kernel.asm	/^    f0109f4a:	48 b8 50 c7 10 f0 00 	mov    $0xf010c750,%rax$/;"	l
f0109f51	obj/kern/kernel.asm	/^    f0109f51:	00 00 00 $/;"	l
f0109f54	obj/kern/kernel.asm	/^    f0109f54:	48 c1 e8 10          	shr    $0x10,%rax$/;"	l
f0109f58	obj/kern/kernel.asm	/^    f0109f58:	89 c2                	mov    %eax,%edx$/;"	l
f0109f5a	obj/kern/kernel.asm	/^    f0109f5a:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109f61	obj/kern/kernel.asm	/^    f0109f61:	00 00 00 $/;"	l
f0109f64	obj/kern/kernel.asm	/^    f0109f64:	66 89 90 16 02 00 00 	mov    %dx,0x216(%rax)$/;"	l
f0109f6b	obj/kern/kernel.asm	/^    f0109f6b:	48 b8 50 c7 10 f0 00 	mov    $0xf010c750,%rax$/;"	l
f0109f72	obj/kern/kernel.asm	/^    f0109f72:	00 00 00 $/;"	l
f0109f75	obj/kern/kernel.asm	/^    f0109f75:	48 c1 e8 20          	shr    $0x20,%rax$/;"	l
f0109f79	obj/kern/kernel.asm	/^    f0109f79:	89 c2                	mov    %eax,%edx$/;"	l
f0109f7b	obj/kern/kernel.asm	/^    f0109f7b:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109f82	obj/kern/kernel.asm	/^    f0109f82:	00 00 00 $/;"	l
f0109f85	obj/kern/kernel.asm	/^    f0109f85:	89 90 18 02 00 00    	mov    %edx,0x218(%rax)$/;"	l
f0109f8b	obj/kern/kernel.asm	/^    f0109f8b:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109f92	obj/kern/kernel.asm	/^    f0109f92:	00 00 00 $/;"	l
f0109f95	obj/kern/kernel.asm	/^    f0109f95:	c7 80 1c 02 00 00 00 	movl   $0x0,0x21c(%rax)$/;"	l
f0109f9c	obj/kern/kernel.asm	/^    f0109f9c:	00 00 00 $/;"	l
f0109f9f	obj/kern/kernel.asm	/^    f0109f9f:	48 b8 5a c7 10 f0 00 	mov    $0xf010c75a,%rax$/;"	l
f0109fa6	obj/kern/kernel.asm	/^    f0109fa6:	00 00 00 $/;"	l
f0109fa9	obj/kern/kernel.asm	/^    f0109fa9:	89 c2                	mov    %eax,%edx$/;"	l
f0109fab	obj/kern/kernel.asm	/^    f0109fab:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109fb2	obj/kern/kernel.asm	/^    f0109fb2:	00 00 00 $/;"	l
f0109fb5	obj/kern/kernel.asm	/^    f0109fb5:	66 89 90 20 02 00 00 	mov    %dx,0x220(%rax)$/;"	l
f0109fbc	obj/kern/kernel.asm	/^    f0109fbc:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109fc3	obj/kern/kernel.asm	/^    f0109fc3:	00 00 00 $/;"	l
f0109fc6	obj/kern/kernel.asm	/^    f0109fc6:	66 c7 80 22 02 00 00 	movw   $0x8,0x222(%rax)$/;"	l
f0109fcd	obj/kern/kernel.asm	/^    f0109fcd:	08 00 $/;"	l
f0109fcf	obj/kern/kernel.asm	/^    f0109fcf:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109fd6	obj/kern/kernel.asm	/^    f0109fd6:	00 00 00 $/;"	l
f0109fd9	obj/kern/kernel.asm	/^    f0109fd9:	0f b6 90 24 02 00 00 	movzbl 0x224(%rax),%edx$/;"	l
f0109fe0	obj/kern/kernel.asm	/^    f0109fe0:	83 e2 f8             	and    $0xfffffffffffffff8,%edx$/;"	l
f0109fe3	obj/kern/kernel.asm	/^    f0109fe3:	88 90 24 02 00 00    	mov    %dl,0x224(%rax)$/;"	l
f0109fe9	obj/kern/kernel.asm	/^    f0109fe9:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f0109ff0	obj/kern/kernel.asm	/^    f0109ff0:	00 00 00 $/;"	l
f0109ff3	obj/kern/kernel.asm	/^    f0109ff3:	0f b6 90 24 02 00 00 	movzbl 0x224(%rax),%edx$/;"	l
f0109ffa	obj/kern/kernel.asm	/^    f0109ffa:	83 e2 07             	and    $0x7,%edx$/;"	l
f0109ffd	obj/kern/kernel.asm	/^    f0109ffd:	88 90 24 02 00 00    	mov    %dl,0x224(%rax)$/;"	l
f010a003	obj/kern/kernel.asm	/^    f010a003:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a00a	obj/kern/kernel.asm	/^    f010a00a:	00 00 00 $/;"	l
f010a00d	obj/kern/kernel.asm	/^    f010a00d:	0f b6 90 25 02 00 00 	movzbl 0x225(%rax),%edx$/;"	l
f010a014	obj/kern/kernel.asm	/^    f010a014:	83 e2 f0             	and    $0xfffffffffffffff0,%edx$/;"	l
f010a017	obj/kern/kernel.asm	/^    f010a017:	83 ca 0e             	or     $0xe,%edx$/;"	l
f010a01a	obj/kern/kernel.asm	/^    f010a01a:	88 90 25 02 00 00    	mov    %dl,0x225(%rax)$/;"	l
f010a020	obj/kern/kernel.asm	/^    f010a020:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a027	obj/kern/kernel.asm	/^    f010a027:	00 00 00 $/;"	l
f010a02a	obj/kern/kernel.asm	/^    f010a02a:	0f b6 90 25 02 00 00 	movzbl 0x225(%rax),%edx$/;"	l
f010a031	obj/kern/kernel.asm	/^    f010a031:	83 e2 ef             	and    $0xffffffffffffffef,%edx$/;"	l
f010a034	obj/kern/kernel.asm	/^    f010a034:	88 90 25 02 00 00    	mov    %dl,0x225(%rax)$/;"	l
f010a03a	obj/kern/kernel.asm	/^    f010a03a:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a041	obj/kern/kernel.asm	/^    f010a041:	00 00 00 $/;"	l
f010a044	obj/kern/kernel.asm	/^    f010a044:	0f b6 90 25 02 00 00 	movzbl 0x225(%rax),%edx$/;"	l
f010a04b	obj/kern/kernel.asm	/^    f010a04b:	83 e2 9f             	and    $0xffffffffffffff9f,%edx$/;"	l
f010a04e	obj/kern/kernel.asm	/^    f010a04e:	88 90 25 02 00 00    	mov    %dl,0x225(%rax)$/;"	l
f010a054	obj/kern/kernel.asm	/^    f010a054:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a05b	obj/kern/kernel.asm	/^    f010a05b:	00 00 00 $/;"	l
f010a05e	obj/kern/kernel.asm	/^    f010a05e:	0f b6 90 25 02 00 00 	movzbl 0x225(%rax),%edx$/;"	l
f010a065	obj/kern/kernel.asm	/^    f010a065:	83 ca 80             	or     $0xffffffffffffff80,%edx$/;"	l
f010a068	obj/kern/kernel.asm	/^    f010a068:	88 90 25 02 00 00    	mov    %dl,0x225(%rax)$/;"	l
f010a06e	obj/kern/kernel.asm	/^    f010a06e:	48 b8 5a c7 10 f0 00 	mov    $0xf010c75a,%rax$/;"	l
f010a075	obj/kern/kernel.asm	/^    f010a075:	00 00 00 $/;"	l
f010a078	obj/kern/kernel.asm	/^    f010a078:	48 c1 e8 10          	shr    $0x10,%rax$/;"	l
f010a07c	obj/kern/kernel.asm	/^    f010a07c:	89 c2                	mov    %eax,%edx$/;"	l
f010a07e	obj/kern/kernel.asm	/^    f010a07e:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a085	obj/kern/kernel.asm	/^    f010a085:	00 00 00 $/;"	l
f010a088	obj/kern/kernel.asm	/^    f010a088:	66 89 90 26 02 00 00 	mov    %dx,0x226(%rax)$/;"	l
f010a08f	obj/kern/kernel.asm	/^    f010a08f:	48 b8 5a c7 10 f0 00 	mov    $0xf010c75a,%rax$/;"	l
f010a096	obj/kern/kernel.asm	/^    f010a096:	00 00 00 $/;"	l
f010a099	obj/kern/kernel.asm	/^    f010a099:	48 c1 e8 20          	shr    $0x20,%rax$/;"	l
f010a09d	obj/kern/kernel.asm	/^    f010a09d:	89 c2                	mov    %eax,%edx$/;"	l
f010a09f	obj/kern/kernel.asm	/^    f010a09f:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a0a6	obj/kern/kernel.asm	/^    f010a0a6:	00 00 00 $/;"	l
f010a0a9	obj/kern/kernel.asm	/^    f010a0a9:	89 90 28 02 00 00    	mov    %edx,0x228(%rax)$/;"	l
f010a0af	obj/kern/kernel.asm	/^    f010a0af:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a0b6	obj/kern/kernel.asm	/^    f010a0b6:	00 00 00 $/;"	l
f010a0b9	obj/kern/kernel.asm	/^    f010a0b9:	c7 80 2c 02 00 00 00 	movl   $0x0,0x22c(%rax)$/;"	l
f010a0c0	obj/kern/kernel.asm	/^    f010a0c0:	00 00 00 $/;"	l
f010a0c3	obj/kern/kernel.asm	/^    f010a0c3:	48 b8 64 c7 10 f0 00 	mov    $0xf010c764,%rax$/;"	l
f010a0ca	obj/kern/kernel.asm	/^    f010a0ca:	00 00 00 $/;"	l
f010a0cd	obj/kern/kernel.asm	/^    f010a0cd:	89 c2                	mov    %eax,%edx$/;"	l
f010a0cf	obj/kern/kernel.asm	/^    f010a0cf:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a0d6	obj/kern/kernel.asm	/^    f010a0d6:	00 00 00 $/;"	l
f010a0d9	obj/kern/kernel.asm	/^    f010a0d9:	66 89 90 30 02 00 00 	mov    %dx,0x230(%rax)$/;"	l
f010a0e0	obj/kern/kernel.asm	/^    f010a0e0:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a0e7	obj/kern/kernel.asm	/^    f010a0e7:	00 00 00 $/;"	l
f010a0ea	obj/kern/kernel.asm	/^    f010a0ea:	66 c7 80 32 02 00 00 	movw   $0x8,0x232(%rax)$/;"	l
f010a0f1	obj/kern/kernel.asm	/^    f010a0f1:	08 00 $/;"	l
f010a0f3	obj/kern/kernel.asm	/^    f010a0f3:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a0fa	obj/kern/kernel.asm	/^    f010a0fa:	00 00 00 $/;"	l
f010a0fd	obj/kern/kernel.asm	/^    f010a0fd:	0f b6 90 34 02 00 00 	movzbl 0x234(%rax),%edx$/;"	l
f010a104	obj/kern/kernel.asm	/^    f010a104:	83 e2 f8             	and    $0xfffffffffffffff8,%edx$/;"	l
f010a107	obj/kern/kernel.asm	/^    f010a107:	88 90 34 02 00 00    	mov    %dl,0x234(%rax)$/;"	l
f010a10d	obj/kern/kernel.asm	/^    f010a10d:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a114	obj/kern/kernel.asm	/^    f010a114:	00 00 00 $/;"	l
f010a117	obj/kern/kernel.asm	/^    f010a117:	0f b6 90 34 02 00 00 	movzbl 0x234(%rax),%edx$/;"	l
f010a11e	obj/kern/kernel.asm	/^    f010a11e:	83 e2 07             	and    $0x7,%edx$/;"	l
f010a121	obj/kern/kernel.asm	/^    f010a121:	88 90 34 02 00 00    	mov    %dl,0x234(%rax)$/;"	l
f010a127	obj/kern/kernel.asm	/^    f010a127:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a12e	obj/kern/kernel.asm	/^    f010a12e:	00 00 00 $/;"	l
f010a131	obj/kern/kernel.asm	/^    f010a131:	0f b6 90 35 02 00 00 	movzbl 0x235(%rax),%edx$/;"	l
f010a138	obj/kern/kernel.asm	/^    f010a138:	83 e2 f0             	and    $0xfffffffffffffff0,%edx$/;"	l
f010a13b	obj/kern/kernel.asm	/^    f010a13b:	83 ca 0e             	or     $0xe,%edx$/;"	l
f010a13e	obj/kern/kernel.asm	/^    f010a13e:	88 90 35 02 00 00    	mov    %dl,0x235(%rax)$/;"	l
f010a144	obj/kern/kernel.asm	/^    f010a144:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a14b	obj/kern/kernel.asm	/^    f010a14b:	00 00 00 $/;"	l
f010a14e	obj/kern/kernel.asm	/^    f010a14e:	0f b6 90 35 02 00 00 	movzbl 0x235(%rax),%edx$/;"	l
f010a155	obj/kern/kernel.asm	/^    f010a155:	83 e2 ef             	and    $0xffffffffffffffef,%edx$/;"	l
f010a158	obj/kern/kernel.asm	/^    f010a158:	88 90 35 02 00 00    	mov    %dl,0x235(%rax)$/;"	l
f010a15e	obj/kern/kernel.asm	/^    f010a15e:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a165	obj/kern/kernel.asm	/^    f010a165:	00 00 00 $/;"	l
f010a168	obj/kern/kernel.asm	/^    f010a168:	0f b6 90 35 02 00 00 	movzbl 0x235(%rax),%edx$/;"	l
f010a16f	obj/kern/kernel.asm	/^    f010a16f:	83 e2 9f             	and    $0xffffffffffffff9f,%edx$/;"	l
f010a172	obj/kern/kernel.asm	/^    f010a172:	88 90 35 02 00 00    	mov    %dl,0x235(%rax)$/;"	l
f010a178	obj/kern/kernel.asm	/^    f010a178:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a17f	obj/kern/kernel.asm	/^    f010a17f:	00 00 00 $/;"	l
f010a182	obj/kern/kernel.asm	/^    f010a182:	0f b6 90 35 02 00 00 	movzbl 0x235(%rax),%edx$/;"	l
f010a189	obj/kern/kernel.asm	/^    f010a189:	83 ca 80             	or     $0xffffffffffffff80,%edx$/;"	l
f010a18c	obj/kern/kernel.asm	/^    f010a18c:	88 90 35 02 00 00    	mov    %dl,0x235(%rax)$/;"	l
f010a192	obj/kern/kernel.asm	/^    f010a192:	48 b8 64 c7 10 f0 00 	mov    $0xf010c764,%rax$/;"	l
f010a199	obj/kern/kernel.asm	/^    f010a199:	00 00 00 $/;"	l
f010a19c	obj/kern/kernel.asm	/^    f010a19c:	48 c1 e8 10          	shr    $0x10,%rax$/;"	l
f010a1a0	obj/kern/kernel.asm	/^    f010a1a0:	89 c2                	mov    %eax,%edx$/;"	l
f010a1a2	obj/kern/kernel.asm	/^    f010a1a2:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a1a9	obj/kern/kernel.asm	/^    f010a1a9:	00 00 00 $/;"	l
f010a1ac	obj/kern/kernel.asm	/^    f010a1ac:	66 89 90 36 02 00 00 	mov    %dx,0x236(%rax)$/;"	l
f010a1b3	obj/kern/kernel.asm	/^    f010a1b3:	48 b8 64 c7 10 f0 00 	mov    $0xf010c764,%rax$/;"	l
f010a1ba	obj/kern/kernel.asm	/^    f010a1ba:	00 00 00 $/;"	l
f010a1bd	obj/kern/kernel.asm	/^    f010a1bd:	48 c1 e8 20          	shr    $0x20,%rax$/;"	l
f010a1c1	obj/kern/kernel.asm	/^    f010a1c1:	89 c2                	mov    %eax,%edx$/;"	l
f010a1c3	obj/kern/kernel.asm	/^    f010a1c3:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a1ca	obj/kern/kernel.asm	/^    f010a1ca:	00 00 00 $/;"	l
f010a1cd	obj/kern/kernel.asm	/^    f010a1cd:	89 90 38 02 00 00    	mov    %edx,0x238(%rax)$/;"	l
f010a1d3	obj/kern/kernel.asm	/^    f010a1d3:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a1da	obj/kern/kernel.asm	/^    f010a1da:	00 00 00 $/;"	l
f010a1dd	obj/kern/kernel.asm	/^    f010a1dd:	c7 80 3c 02 00 00 00 	movl   $0x0,0x23c(%rax)$/;"	l
f010a1e4	obj/kern/kernel.asm	/^    f010a1e4:	00 00 00 $/;"	l
f010a1e7	obj/kern/kernel.asm	/^    f010a1e7:	48 b8 6e c7 10 f0 00 	mov    $0xf010c76e,%rax$/;"	l
f010a1ee	obj/kern/kernel.asm	/^    f010a1ee:	00 00 00 $/;"	l
f010a1f1	obj/kern/kernel.asm	/^    f010a1f1:	89 c2                	mov    %eax,%edx$/;"	l
f010a1f3	obj/kern/kernel.asm	/^    f010a1f3:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a1fa	obj/kern/kernel.asm	/^    f010a1fa:	00 00 00 $/;"	l
f010a1fd	obj/kern/kernel.asm	/^    f010a1fd:	66 89 90 40 02 00 00 	mov    %dx,0x240(%rax)$/;"	l
f010a204	obj/kern/kernel.asm	/^    f010a204:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a20b	obj/kern/kernel.asm	/^    f010a20b:	00 00 00 $/;"	l
f010a20e	obj/kern/kernel.asm	/^    f010a20e:	66 c7 80 42 02 00 00 	movw   $0x8,0x242(%rax)$/;"	l
f010a215	obj/kern/kernel.asm	/^    f010a215:	08 00 $/;"	l
f010a217	obj/kern/kernel.asm	/^    f010a217:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a21e	obj/kern/kernel.asm	/^    f010a21e:	00 00 00 $/;"	l
f010a221	obj/kern/kernel.asm	/^    f010a221:	0f b6 90 44 02 00 00 	movzbl 0x244(%rax),%edx$/;"	l
f010a228	obj/kern/kernel.asm	/^    f010a228:	83 e2 f8             	and    $0xfffffffffffffff8,%edx$/;"	l
f010a22b	obj/kern/kernel.asm	/^    f010a22b:	88 90 44 02 00 00    	mov    %dl,0x244(%rax)$/;"	l
f010a231	obj/kern/kernel.asm	/^    f010a231:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a238	obj/kern/kernel.asm	/^    f010a238:	00 00 00 $/;"	l
f010a23b	obj/kern/kernel.asm	/^    f010a23b:	0f b6 90 44 02 00 00 	movzbl 0x244(%rax),%edx$/;"	l
f010a242	obj/kern/kernel.asm	/^    f010a242:	83 e2 07             	and    $0x7,%edx$/;"	l
f010a245	obj/kern/kernel.asm	/^    f010a245:	88 90 44 02 00 00    	mov    %dl,0x244(%rax)$/;"	l
f010a24b	obj/kern/kernel.asm	/^    f010a24b:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a252	obj/kern/kernel.asm	/^    f010a252:	00 00 00 $/;"	l
f010a255	obj/kern/kernel.asm	/^    f010a255:	0f b6 90 45 02 00 00 	movzbl 0x245(%rax),%edx$/;"	l
f010a25c	obj/kern/kernel.asm	/^    f010a25c:	83 e2 f0             	and    $0xfffffffffffffff0,%edx$/;"	l
f010a25f	obj/kern/kernel.asm	/^    f010a25f:	83 ca 0e             	or     $0xe,%edx$/;"	l
f010a262	obj/kern/kernel.asm	/^    f010a262:	88 90 45 02 00 00    	mov    %dl,0x245(%rax)$/;"	l
f010a268	obj/kern/kernel.asm	/^    f010a268:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a26f	obj/kern/kernel.asm	/^    f010a26f:	00 00 00 $/;"	l
f010a272	obj/kern/kernel.asm	/^    f010a272:	0f b6 90 45 02 00 00 	movzbl 0x245(%rax),%edx$/;"	l
f010a279	obj/kern/kernel.asm	/^    f010a279:	83 e2 ef             	and    $0xffffffffffffffef,%edx$/;"	l
f010a27c	obj/kern/kernel.asm	/^    f010a27c:	88 90 45 02 00 00    	mov    %dl,0x245(%rax)$/;"	l
f010a282	obj/kern/kernel.asm	/^    f010a282:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a289	obj/kern/kernel.asm	/^    f010a289:	00 00 00 $/;"	l
f010a28c	obj/kern/kernel.asm	/^    f010a28c:	0f b6 90 45 02 00 00 	movzbl 0x245(%rax),%edx$/;"	l
f010a293	obj/kern/kernel.asm	/^    f010a293:	83 e2 9f             	and    $0xffffffffffffff9f,%edx$/;"	l
f010a296	obj/kern/kernel.asm	/^    f010a296:	88 90 45 02 00 00    	mov    %dl,0x245(%rax)$/;"	l
f010a29c	obj/kern/kernel.asm	/^    f010a29c:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a2a3	obj/kern/kernel.asm	/^    f010a2a3:	00 00 00 $/;"	l
f010a2a6	obj/kern/kernel.asm	/^    f010a2a6:	0f b6 90 45 02 00 00 	movzbl 0x245(%rax),%edx$/;"	l
f010a2ad	obj/kern/kernel.asm	/^    f010a2ad:	83 ca 80             	or     $0xffffffffffffff80,%edx$/;"	l
f010a2b0	obj/kern/kernel.asm	/^    f010a2b0:	88 90 45 02 00 00    	mov    %dl,0x245(%rax)$/;"	l
f010a2b6	obj/kern/kernel.asm	/^    f010a2b6:	48 b8 6e c7 10 f0 00 	mov    $0xf010c76e,%rax$/;"	l
f010a2bd	obj/kern/kernel.asm	/^    f010a2bd:	00 00 00 $/;"	l
f010a2c0	obj/kern/kernel.asm	/^    f010a2c0:	48 c1 e8 10          	shr    $0x10,%rax$/;"	l
f010a2c4	obj/kern/kernel.asm	/^    f010a2c4:	89 c2                	mov    %eax,%edx$/;"	l
f010a2c6	obj/kern/kernel.asm	/^    f010a2c6:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a2cd	obj/kern/kernel.asm	/^    f010a2cd:	00 00 00 $/;"	l
f010a2d0	obj/kern/kernel.asm	/^    f010a2d0:	66 89 90 46 02 00 00 	mov    %dx,0x246(%rax)$/;"	l
f010a2d7	obj/kern/kernel.asm	/^    f010a2d7:	48 b8 6e c7 10 f0 00 	mov    $0xf010c76e,%rax$/;"	l
f010a2de	obj/kern/kernel.asm	/^    f010a2de:	00 00 00 $/;"	l
f010a2e1	obj/kern/kernel.asm	/^    f010a2e1:	48 c1 e8 20          	shr    $0x20,%rax$/;"	l
f010a2e5	obj/kern/kernel.asm	/^    f010a2e5:	89 c2                	mov    %eax,%edx$/;"	l
f010a2e7	obj/kern/kernel.asm	/^    f010a2e7:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a2ee	obj/kern/kernel.asm	/^    f010a2ee:	00 00 00 $/;"	l
f010a2f1	obj/kern/kernel.asm	/^    f010a2f1:	89 90 48 02 00 00    	mov    %edx,0x248(%rax)$/;"	l
f010a2f7	obj/kern/kernel.asm	/^    f010a2f7:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a2fe	obj/kern/kernel.asm	/^    f010a2fe:	00 00 00 $/;"	l
f010a301	obj/kern/kernel.asm	/^    f010a301:	c7 80 4c 02 00 00 00 	movl   $0x0,0x24c(%rax)$/;"	l
f010a308	obj/kern/kernel.asm	/^    f010a308:	00 00 00 $/;"	l
f010a30b	obj/kern/kernel.asm	/^    f010a30b:	48 b8 78 c7 10 f0 00 	mov    $0xf010c778,%rax$/;"	l
f010a312	obj/kern/kernel.asm	/^    f010a312:	00 00 00 $/;"	l
f010a315	obj/kern/kernel.asm	/^    f010a315:	89 c2                	mov    %eax,%edx$/;"	l
f010a317	obj/kern/kernel.asm	/^    f010a317:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a31e	obj/kern/kernel.asm	/^    f010a31e:	00 00 00 $/;"	l
f010a321	obj/kern/kernel.asm	/^    f010a321:	66 89 90 50 02 00 00 	mov    %dx,0x250(%rax)$/;"	l
f010a328	obj/kern/kernel.asm	/^    f010a328:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a32f	obj/kern/kernel.asm	/^    f010a32f:	00 00 00 $/;"	l
f010a332	obj/kern/kernel.asm	/^    f010a332:	66 c7 80 52 02 00 00 	movw   $0x8,0x252(%rax)$/;"	l
f010a339	obj/kern/kernel.asm	/^    f010a339:	08 00 $/;"	l
f010a33b	obj/kern/kernel.asm	/^    f010a33b:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a342	obj/kern/kernel.asm	/^    f010a342:	00 00 00 $/;"	l
f010a345	obj/kern/kernel.asm	/^    f010a345:	0f b6 90 54 02 00 00 	movzbl 0x254(%rax),%edx$/;"	l
f010a34c	obj/kern/kernel.asm	/^    f010a34c:	83 e2 f8             	and    $0xfffffffffffffff8,%edx$/;"	l
f010a34f	obj/kern/kernel.asm	/^    f010a34f:	88 90 54 02 00 00    	mov    %dl,0x254(%rax)$/;"	l
f010a355	obj/kern/kernel.asm	/^    f010a355:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a35c	obj/kern/kernel.asm	/^    f010a35c:	00 00 00 $/;"	l
f010a35f	obj/kern/kernel.asm	/^    f010a35f:	0f b6 90 54 02 00 00 	movzbl 0x254(%rax),%edx$/;"	l
f010a366	obj/kern/kernel.asm	/^    f010a366:	83 e2 07             	and    $0x7,%edx$/;"	l
f010a369	obj/kern/kernel.asm	/^    f010a369:	88 90 54 02 00 00    	mov    %dl,0x254(%rax)$/;"	l
f010a36f	obj/kern/kernel.asm	/^    f010a36f:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a376	obj/kern/kernel.asm	/^    f010a376:	00 00 00 $/;"	l
f010a379	obj/kern/kernel.asm	/^    f010a379:	0f b6 90 55 02 00 00 	movzbl 0x255(%rax),%edx$/;"	l
f010a380	obj/kern/kernel.asm	/^    f010a380:	83 e2 f0             	and    $0xfffffffffffffff0,%edx$/;"	l
f010a383	obj/kern/kernel.asm	/^    f010a383:	83 ca 0e             	or     $0xe,%edx$/;"	l
f010a386	obj/kern/kernel.asm	/^    f010a386:	88 90 55 02 00 00    	mov    %dl,0x255(%rax)$/;"	l
f010a38c	obj/kern/kernel.asm	/^    f010a38c:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a393	obj/kern/kernel.asm	/^    f010a393:	00 00 00 $/;"	l
f010a396	obj/kern/kernel.asm	/^    f010a396:	0f b6 90 55 02 00 00 	movzbl 0x255(%rax),%edx$/;"	l
f010a39d	obj/kern/kernel.asm	/^    f010a39d:	83 e2 ef             	and    $0xffffffffffffffef,%edx$/;"	l
f010a3a0	obj/kern/kernel.asm	/^    f010a3a0:	88 90 55 02 00 00    	mov    %dl,0x255(%rax)$/;"	l
f010a3a6	obj/kern/kernel.asm	/^    f010a3a6:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a3ad	obj/kern/kernel.asm	/^    f010a3ad:	00 00 00 $/;"	l
f010a3b0	obj/kern/kernel.asm	/^    f010a3b0:	0f b6 90 55 02 00 00 	movzbl 0x255(%rax),%edx$/;"	l
f010a3b7	obj/kern/kernel.asm	/^    f010a3b7:	83 e2 9f             	and    $0xffffffffffffff9f,%edx$/;"	l
f010a3ba	obj/kern/kernel.asm	/^    f010a3ba:	88 90 55 02 00 00    	mov    %dl,0x255(%rax)$/;"	l
f010a3c0	obj/kern/kernel.asm	/^    f010a3c0:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a3c7	obj/kern/kernel.asm	/^    f010a3c7:	00 00 00 $/;"	l
f010a3ca	obj/kern/kernel.asm	/^    f010a3ca:	0f b6 90 55 02 00 00 	movzbl 0x255(%rax),%edx$/;"	l
f010a3d1	obj/kern/kernel.asm	/^    f010a3d1:	83 ca 80             	or     $0xffffffffffffff80,%edx$/;"	l
f010a3d4	obj/kern/kernel.asm	/^    f010a3d4:	88 90 55 02 00 00    	mov    %dl,0x255(%rax)$/;"	l
f010a3da	obj/kern/kernel.asm	/^    f010a3da:	48 b8 78 c7 10 f0 00 	mov    $0xf010c778,%rax$/;"	l
f010a3e1	obj/kern/kernel.asm	/^    f010a3e1:	00 00 00 $/;"	l
f010a3e4	obj/kern/kernel.asm	/^    f010a3e4:	48 c1 e8 10          	shr    $0x10,%rax$/;"	l
f010a3e8	obj/kern/kernel.asm	/^    f010a3e8:	89 c2                	mov    %eax,%edx$/;"	l
f010a3ea	obj/kern/kernel.asm	/^    f010a3ea:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a3f1	obj/kern/kernel.asm	/^    f010a3f1:	00 00 00 $/;"	l
f010a3f4	obj/kern/kernel.asm	/^    f010a3f4:	66 89 90 56 02 00 00 	mov    %dx,0x256(%rax)$/;"	l
f010a3fb	obj/kern/kernel.asm	/^    f010a3fb:	48 b8 78 c7 10 f0 00 	mov    $0xf010c778,%rax$/;"	l
f010a402	obj/kern/kernel.asm	/^    f010a402:	00 00 00 $/;"	l
f010a405	obj/kern/kernel.asm	/^    f010a405:	48 c1 e8 20          	shr    $0x20,%rax$/;"	l
f010a409	obj/kern/kernel.asm	/^    f010a409:	89 c2                	mov    %eax,%edx$/;"	l
f010a40b	obj/kern/kernel.asm	/^    f010a40b:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a412	obj/kern/kernel.asm	/^    f010a412:	00 00 00 $/;"	l
f010a415	obj/kern/kernel.asm	/^    f010a415:	89 90 58 02 00 00    	mov    %edx,0x258(%rax)$/;"	l
f010a41b	obj/kern/kernel.asm	/^    f010a41b:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a422	obj/kern/kernel.asm	/^    f010a422:	00 00 00 $/;"	l
f010a425	obj/kern/kernel.asm	/^    f010a425:	c7 80 5c 02 00 00 00 	movl   $0x0,0x25c(%rax)$/;"	l
f010a42c	obj/kern/kernel.asm	/^    f010a42c:	00 00 00 $/;"	l
f010a42f	obj/kern/kernel.asm	/^    f010a42f:	48 b8 82 c7 10 f0 00 	mov    $0xf010c782,%rax$/;"	l
f010a436	obj/kern/kernel.asm	/^    f010a436:	00 00 00 $/;"	l
f010a439	obj/kern/kernel.asm	/^    f010a439:	89 c2                	mov    %eax,%edx$/;"	l
f010a43b	obj/kern/kernel.asm	/^    f010a43b:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a442	obj/kern/kernel.asm	/^    f010a442:	00 00 00 $/;"	l
f010a445	obj/kern/kernel.asm	/^    f010a445:	66 89 90 60 02 00 00 	mov    %dx,0x260(%rax)$/;"	l
f010a44c	obj/kern/kernel.asm	/^    f010a44c:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a453	obj/kern/kernel.asm	/^    f010a453:	00 00 00 $/;"	l
f010a456	obj/kern/kernel.asm	/^    f010a456:	66 c7 80 62 02 00 00 	movw   $0x8,0x262(%rax)$/;"	l
f010a45d	obj/kern/kernel.asm	/^    f010a45d:	08 00 $/;"	l
f010a45f	obj/kern/kernel.asm	/^    f010a45f:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a466	obj/kern/kernel.asm	/^    f010a466:	00 00 00 $/;"	l
f010a469	obj/kern/kernel.asm	/^    f010a469:	0f b6 90 64 02 00 00 	movzbl 0x264(%rax),%edx$/;"	l
f010a470	obj/kern/kernel.asm	/^    f010a470:	83 e2 f8             	and    $0xfffffffffffffff8,%edx$/;"	l
f010a473	obj/kern/kernel.asm	/^    f010a473:	88 90 64 02 00 00    	mov    %dl,0x264(%rax)$/;"	l
f010a479	obj/kern/kernel.asm	/^    f010a479:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a480	obj/kern/kernel.asm	/^    f010a480:	00 00 00 $/;"	l
f010a483	obj/kern/kernel.asm	/^    f010a483:	0f b6 90 64 02 00 00 	movzbl 0x264(%rax),%edx$/;"	l
f010a48a	obj/kern/kernel.asm	/^    f010a48a:	83 e2 07             	and    $0x7,%edx$/;"	l
f010a48d	obj/kern/kernel.asm	/^    f010a48d:	88 90 64 02 00 00    	mov    %dl,0x264(%rax)$/;"	l
f010a493	obj/kern/kernel.asm	/^    f010a493:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a49a	obj/kern/kernel.asm	/^    f010a49a:	00 00 00 $/;"	l
f010a49d	obj/kern/kernel.asm	/^    f010a49d:	0f b6 90 65 02 00 00 	movzbl 0x265(%rax),%edx$/;"	l
f010a4a4	obj/kern/kernel.asm	/^    f010a4a4:	83 e2 f0             	and    $0xfffffffffffffff0,%edx$/;"	l
f010a4a7	obj/kern/kernel.asm	/^    f010a4a7:	83 ca 0e             	or     $0xe,%edx$/;"	l
f010a4aa	obj/kern/kernel.asm	/^    f010a4aa:	88 90 65 02 00 00    	mov    %dl,0x265(%rax)$/;"	l
f010a4b0	obj/kern/kernel.asm	/^    f010a4b0:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a4b7	obj/kern/kernel.asm	/^    f010a4b7:	00 00 00 $/;"	l
f010a4ba	obj/kern/kernel.asm	/^    f010a4ba:	0f b6 90 65 02 00 00 	movzbl 0x265(%rax),%edx$/;"	l
f010a4c1	obj/kern/kernel.asm	/^    f010a4c1:	83 e2 ef             	and    $0xffffffffffffffef,%edx$/;"	l
f010a4c4	obj/kern/kernel.asm	/^    f010a4c4:	88 90 65 02 00 00    	mov    %dl,0x265(%rax)$/;"	l
f010a4ca	obj/kern/kernel.asm	/^    f010a4ca:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a4d1	obj/kern/kernel.asm	/^    f010a4d1:	00 00 00 $/;"	l
f010a4d4	obj/kern/kernel.asm	/^    f010a4d4:	0f b6 90 65 02 00 00 	movzbl 0x265(%rax),%edx$/;"	l
f010a4db	obj/kern/kernel.asm	/^    f010a4db:	83 e2 9f             	and    $0xffffffffffffff9f,%edx$/;"	l
f010a4de	obj/kern/kernel.asm	/^    f010a4de:	88 90 65 02 00 00    	mov    %dl,0x265(%rax)$/;"	l
f010a4e4	obj/kern/kernel.asm	/^    f010a4e4:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a4eb	obj/kern/kernel.asm	/^    f010a4eb:	00 00 00 $/;"	l
f010a4ee	obj/kern/kernel.asm	/^    f010a4ee:	0f b6 90 65 02 00 00 	movzbl 0x265(%rax),%edx$/;"	l
f010a4f5	obj/kern/kernel.asm	/^    f010a4f5:	83 ca 80             	or     $0xffffffffffffff80,%edx$/;"	l
f010a4f8	obj/kern/kernel.asm	/^    f010a4f8:	88 90 65 02 00 00    	mov    %dl,0x265(%rax)$/;"	l
f010a4fe	obj/kern/kernel.asm	/^    f010a4fe:	48 b8 82 c7 10 f0 00 	mov    $0xf010c782,%rax$/;"	l
f010a505	obj/kern/kernel.asm	/^    f010a505:	00 00 00 $/;"	l
f010a508	obj/kern/kernel.asm	/^    f010a508:	48 c1 e8 10          	shr    $0x10,%rax$/;"	l
f010a50c	obj/kern/kernel.asm	/^    f010a50c:	89 c2                	mov    %eax,%edx$/;"	l
f010a50e	obj/kern/kernel.asm	/^    f010a50e:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a515	obj/kern/kernel.asm	/^    f010a515:	00 00 00 $/;"	l
f010a518	obj/kern/kernel.asm	/^    f010a518:	66 89 90 66 02 00 00 	mov    %dx,0x266(%rax)$/;"	l
f010a51f	obj/kern/kernel.asm	/^    f010a51f:	48 b8 82 c7 10 f0 00 	mov    $0xf010c782,%rax$/;"	l
f010a526	obj/kern/kernel.asm	/^    f010a526:	00 00 00 $/;"	l
f010a529	obj/kern/kernel.asm	/^    f010a529:	48 c1 e8 20          	shr    $0x20,%rax$/;"	l
f010a52d	obj/kern/kernel.asm	/^    f010a52d:	89 c2                	mov    %eax,%edx$/;"	l
f010a52f	obj/kern/kernel.asm	/^    f010a52f:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a536	obj/kern/kernel.asm	/^    f010a536:	00 00 00 $/;"	l
f010a539	obj/kern/kernel.asm	/^    f010a539:	89 90 68 02 00 00    	mov    %edx,0x268(%rax)$/;"	l
f010a53f	obj/kern/kernel.asm	/^    f010a53f:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a546	obj/kern/kernel.asm	/^    f010a546:	00 00 00 $/;"	l
f010a549	obj/kern/kernel.asm	/^    f010a549:	c7 80 6c 02 00 00 00 	movl   $0x0,0x26c(%rax)$/;"	l
f010a550	obj/kern/kernel.asm	/^    f010a550:	00 00 00 $/;"	l
f010a553	obj/kern/kernel.asm	/^    f010a553:	48 b8 8c c7 10 f0 00 	mov    $0xf010c78c,%rax$/;"	l
f010a55a	obj/kern/kernel.asm	/^    f010a55a:	00 00 00 $/;"	l
f010a55d	obj/kern/kernel.asm	/^    f010a55d:	89 c2                	mov    %eax,%edx$/;"	l
f010a55f	obj/kern/kernel.asm	/^    f010a55f:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a566	obj/kern/kernel.asm	/^    f010a566:	00 00 00 $/;"	l
f010a569	obj/kern/kernel.asm	/^    f010a569:	66 89 90 70 02 00 00 	mov    %dx,0x270(%rax)$/;"	l
f010a570	obj/kern/kernel.asm	/^    f010a570:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a577	obj/kern/kernel.asm	/^    f010a577:	00 00 00 $/;"	l
f010a57a	obj/kern/kernel.asm	/^    f010a57a:	66 c7 80 72 02 00 00 	movw   $0x8,0x272(%rax)$/;"	l
f010a581	obj/kern/kernel.asm	/^    f010a581:	08 00 $/;"	l
f010a583	obj/kern/kernel.asm	/^    f010a583:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a58a	obj/kern/kernel.asm	/^    f010a58a:	00 00 00 $/;"	l
f010a58d	obj/kern/kernel.asm	/^    f010a58d:	0f b6 90 74 02 00 00 	movzbl 0x274(%rax),%edx$/;"	l
f010a594	obj/kern/kernel.asm	/^    f010a594:	83 e2 f8             	and    $0xfffffffffffffff8,%edx$/;"	l
f010a597	obj/kern/kernel.asm	/^    f010a597:	88 90 74 02 00 00    	mov    %dl,0x274(%rax)$/;"	l
f010a59d	obj/kern/kernel.asm	/^    f010a59d:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a5a4	obj/kern/kernel.asm	/^    f010a5a4:	00 00 00 $/;"	l
f010a5a7	obj/kern/kernel.asm	/^    f010a5a7:	0f b6 90 74 02 00 00 	movzbl 0x274(%rax),%edx$/;"	l
f010a5ae	obj/kern/kernel.asm	/^    f010a5ae:	83 e2 07             	and    $0x7,%edx$/;"	l
f010a5b1	obj/kern/kernel.asm	/^    f010a5b1:	88 90 74 02 00 00    	mov    %dl,0x274(%rax)$/;"	l
f010a5b7	obj/kern/kernel.asm	/^    f010a5b7:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a5be	obj/kern/kernel.asm	/^    f010a5be:	00 00 00 $/;"	l
f010a5c1	obj/kern/kernel.asm	/^    f010a5c1:	0f b6 90 75 02 00 00 	movzbl 0x275(%rax),%edx$/;"	l
f010a5c8	obj/kern/kernel.asm	/^    f010a5c8:	83 e2 f0             	and    $0xfffffffffffffff0,%edx$/;"	l
f010a5cb	obj/kern/kernel.asm	/^    f010a5cb:	83 ca 0e             	or     $0xe,%edx$/;"	l
f010a5ce	obj/kern/kernel.asm	/^    f010a5ce:	88 90 75 02 00 00    	mov    %dl,0x275(%rax)$/;"	l
f010a5d4	obj/kern/kernel.asm	/^    f010a5d4:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a5db	obj/kern/kernel.asm	/^    f010a5db:	00 00 00 $/;"	l
f010a5de	obj/kern/kernel.asm	/^    f010a5de:	0f b6 90 75 02 00 00 	movzbl 0x275(%rax),%edx$/;"	l
f010a5e5	obj/kern/kernel.asm	/^    f010a5e5:	83 e2 ef             	and    $0xffffffffffffffef,%edx$/;"	l
f010a5e8	obj/kern/kernel.asm	/^    f010a5e8:	88 90 75 02 00 00    	mov    %dl,0x275(%rax)$/;"	l
f010a5ee	obj/kern/kernel.asm	/^    f010a5ee:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a5f5	obj/kern/kernel.asm	/^    f010a5f5:	00 00 00 $/;"	l
f010a5f8	obj/kern/kernel.asm	/^    f010a5f8:	0f b6 90 75 02 00 00 	movzbl 0x275(%rax),%edx$/;"	l
f010a5ff	obj/kern/kernel.asm	/^    f010a5ff:	83 e2 9f             	and    $0xffffffffffffff9f,%edx$/;"	l
f010a602	obj/kern/kernel.asm	/^    f010a602:	88 90 75 02 00 00    	mov    %dl,0x275(%rax)$/;"	l
f010a608	obj/kern/kernel.asm	/^    f010a608:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a60f	obj/kern/kernel.asm	/^    f010a60f:	00 00 00 $/;"	l
f010a612	obj/kern/kernel.asm	/^    f010a612:	0f b6 90 75 02 00 00 	movzbl 0x275(%rax),%edx$/;"	l
f010a619	obj/kern/kernel.asm	/^    f010a619:	83 ca 80             	or     $0xffffffffffffff80,%edx$/;"	l
f010a61c	obj/kern/kernel.asm	/^    f010a61c:	88 90 75 02 00 00    	mov    %dl,0x275(%rax)$/;"	l
f010a622	obj/kern/kernel.asm	/^    f010a622:	48 b8 8c c7 10 f0 00 	mov    $0xf010c78c,%rax$/;"	l
f010a629	obj/kern/kernel.asm	/^    f010a629:	00 00 00 $/;"	l
f010a62c	obj/kern/kernel.asm	/^    f010a62c:	48 c1 e8 10          	shr    $0x10,%rax$/;"	l
f010a630	obj/kern/kernel.asm	/^    f010a630:	89 c2                	mov    %eax,%edx$/;"	l
f010a632	obj/kern/kernel.asm	/^    f010a632:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a639	obj/kern/kernel.asm	/^    f010a639:	00 00 00 $/;"	l
f010a63c	obj/kern/kernel.asm	/^    f010a63c:	66 89 90 76 02 00 00 	mov    %dx,0x276(%rax)$/;"	l
f010a643	obj/kern/kernel.asm	/^    f010a643:	48 b8 8c c7 10 f0 00 	mov    $0xf010c78c,%rax$/;"	l
f010a64a	obj/kern/kernel.asm	/^    f010a64a:	00 00 00 $/;"	l
f010a64d	obj/kern/kernel.asm	/^    f010a64d:	48 c1 e8 20          	shr    $0x20,%rax$/;"	l
f010a651	obj/kern/kernel.asm	/^    f010a651:	89 c2                	mov    %eax,%edx$/;"	l
f010a653	obj/kern/kernel.asm	/^    f010a653:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a65a	obj/kern/kernel.asm	/^    f010a65a:	00 00 00 $/;"	l
f010a65d	obj/kern/kernel.asm	/^    f010a65d:	89 90 78 02 00 00    	mov    %edx,0x278(%rax)$/;"	l
f010a663	obj/kern/kernel.asm	/^    f010a663:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a66a	obj/kern/kernel.asm	/^    f010a66a:	00 00 00 $/;"	l
f010a66d	obj/kern/kernel.asm	/^    f010a66d:	c7 80 7c 02 00 00 00 	movl   $0x0,0x27c(%rax)$/;"	l
f010a674	obj/kern/kernel.asm	/^    f010a674:	00 00 00 $/;"	l
f010a677	obj/kern/kernel.asm	/^    f010a677:	48 b8 96 c7 10 f0 00 	mov    $0xf010c796,%rax$/;"	l
f010a67e	obj/kern/kernel.asm	/^    f010a67e:	00 00 00 $/;"	l
f010a681	obj/kern/kernel.asm	/^    f010a681:	89 c2                	mov    %eax,%edx$/;"	l
f010a683	obj/kern/kernel.asm	/^    f010a683:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a68a	obj/kern/kernel.asm	/^    f010a68a:	00 00 00 $/;"	l
f010a68d	obj/kern/kernel.asm	/^    f010a68d:	66 89 90 80 02 00 00 	mov    %dx,0x280(%rax)$/;"	l
f010a694	obj/kern/kernel.asm	/^    f010a694:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a69b	obj/kern/kernel.asm	/^    f010a69b:	00 00 00 $/;"	l
f010a69e	obj/kern/kernel.asm	/^    f010a69e:	66 c7 80 82 02 00 00 	movw   $0x8,0x282(%rax)$/;"	l
f010a6a5	obj/kern/kernel.asm	/^    f010a6a5:	08 00 $/;"	l
f010a6a7	obj/kern/kernel.asm	/^    f010a6a7:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a6ae	obj/kern/kernel.asm	/^    f010a6ae:	00 00 00 $/;"	l
f010a6b1	obj/kern/kernel.asm	/^    f010a6b1:	0f b6 90 84 02 00 00 	movzbl 0x284(%rax),%edx$/;"	l
f010a6b8	obj/kern/kernel.asm	/^    f010a6b8:	83 e2 f8             	and    $0xfffffffffffffff8,%edx$/;"	l
f010a6bb	obj/kern/kernel.asm	/^    f010a6bb:	88 90 84 02 00 00    	mov    %dl,0x284(%rax)$/;"	l
f010a6c1	obj/kern/kernel.asm	/^    f010a6c1:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a6c8	obj/kern/kernel.asm	/^    f010a6c8:	00 00 00 $/;"	l
f010a6cb	obj/kern/kernel.asm	/^    f010a6cb:	0f b6 90 84 02 00 00 	movzbl 0x284(%rax),%edx$/;"	l
f010a6d2	obj/kern/kernel.asm	/^    f010a6d2:	83 e2 07             	and    $0x7,%edx$/;"	l
f010a6d5	obj/kern/kernel.asm	/^    f010a6d5:	88 90 84 02 00 00    	mov    %dl,0x284(%rax)$/;"	l
f010a6db	obj/kern/kernel.asm	/^    f010a6db:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a6e2	obj/kern/kernel.asm	/^    f010a6e2:	00 00 00 $/;"	l
f010a6e5	obj/kern/kernel.asm	/^    f010a6e5:	0f b6 90 85 02 00 00 	movzbl 0x285(%rax),%edx$/;"	l
f010a6ec	obj/kern/kernel.asm	/^    f010a6ec:	83 e2 f0             	and    $0xfffffffffffffff0,%edx$/;"	l
f010a6ef	obj/kern/kernel.asm	/^    f010a6ef:	83 ca 0e             	or     $0xe,%edx$/;"	l
f010a6f2	obj/kern/kernel.asm	/^    f010a6f2:	88 90 85 02 00 00    	mov    %dl,0x285(%rax)$/;"	l
f010a6f8	obj/kern/kernel.asm	/^    f010a6f8:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a6ff	obj/kern/kernel.asm	/^    f010a6ff:	00 00 00 $/;"	l
f010a702	obj/kern/kernel.asm	/^    f010a702:	0f b6 90 85 02 00 00 	movzbl 0x285(%rax),%edx$/;"	l
f010a709	obj/kern/kernel.asm	/^    f010a709:	83 e2 ef             	and    $0xffffffffffffffef,%edx$/;"	l
f010a70c	obj/kern/kernel.asm	/^    f010a70c:	88 90 85 02 00 00    	mov    %dl,0x285(%rax)$/;"	l
f010a712	obj/kern/kernel.asm	/^    f010a712:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a719	obj/kern/kernel.asm	/^    f010a719:	00 00 00 $/;"	l
f010a71c	obj/kern/kernel.asm	/^    f010a71c:	0f b6 90 85 02 00 00 	movzbl 0x285(%rax),%edx$/;"	l
f010a723	obj/kern/kernel.asm	/^    f010a723:	83 e2 9f             	and    $0xffffffffffffff9f,%edx$/;"	l
f010a726	obj/kern/kernel.asm	/^    f010a726:	88 90 85 02 00 00    	mov    %dl,0x285(%rax)$/;"	l
f010a72c	obj/kern/kernel.asm	/^    f010a72c:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a733	obj/kern/kernel.asm	/^    f010a733:	00 00 00 $/;"	l
f010a736	obj/kern/kernel.asm	/^    f010a736:	0f b6 90 85 02 00 00 	movzbl 0x285(%rax),%edx$/;"	l
f010a73d	obj/kern/kernel.asm	/^    f010a73d:	83 ca 80             	or     $0xffffffffffffff80,%edx$/;"	l
f010a740	obj/kern/kernel.asm	/^    f010a740:	88 90 85 02 00 00    	mov    %dl,0x285(%rax)$/;"	l
f010a746	obj/kern/kernel.asm	/^    f010a746:	48 b8 96 c7 10 f0 00 	mov    $0xf010c796,%rax$/;"	l
f010a74d	obj/kern/kernel.asm	/^    f010a74d:	00 00 00 $/;"	l
f010a750	obj/kern/kernel.asm	/^    f010a750:	48 c1 e8 10          	shr    $0x10,%rax$/;"	l
f010a754	obj/kern/kernel.asm	/^    f010a754:	89 c2                	mov    %eax,%edx$/;"	l
f010a756	obj/kern/kernel.asm	/^    f010a756:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a75d	obj/kern/kernel.asm	/^    f010a75d:	00 00 00 $/;"	l
f010a760	obj/kern/kernel.asm	/^    f010a760:	66 89 90 86 02 00 00 	mov    %dx,0x286(%rax)$/;"	l
f010a767	obj/kern/kernel.asm	/^    f010a767:	48 b8 96 c7 10 f0 00 	mov    $0xf010c796,%rax$/;"	l
f010a76e	obj/kern/kernel.asm	/^    f010a76e:	00 00 00 $/;"	l
f010a771	obj/kern/kernel.asm	/^    f010a771:	48 c1 e8 20          	shr    $0x20,%rax$/;"	l
f010a775	obj/kern/kernel.asm	/^    f010a775:	89 c2                	mov    %eax,%edx$/;"	l
f010a777	obj/kern/kernel.asm	/^    f010a777:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a77e	obj/kern/kernel.asm	/^    f010a77e:	00 00 00 $/;"	l
f010a781	obj/kern/kernel.asm	/^    f010a781:	89 90 88 02 00 00    	mov    %edx,0x288(%rax)$/;"	l
f010a787	obj/kern/kernel.asm	/^    f010a787:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a78e	obj/kern/kernel.asm	/^    f010a78e:	00 00 00 $/;"	l
f010a791	obj/kern/kernel.asm	/^    f010a791:	c7 80 8c 02 00 00 00 	movl   $0x0,0x28c(%rax)$/;"	l
f010a798	obj/kern/kernel.asm	/^    f010a798:	00 00 00 $/;"	l
f010a79b	obj/kern/kernel.asm	/^    f010a79b:	48 b8 a0 c7 10 f0 00 	mov    $0xf010c7a0,%rax$/;"	l
f010a7a2	obj/kern/kernel.asm	/^    f010a7a2:	00 00 00 $/;"	l
f010a7a5	obj/kern/kernel.asm	/^    f010a7a5:	89 c2                	mov    %eax,%edx$/;"	l
f010a7a7	obj/kern/kernel.asm	/^    f010a7a7:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a7ae	obj/kern/kernel.asm	/^    f010a7ae:	00 00 00 $/;"	l
f010a7b1	obj/kern/kernel.asm	/^    f010a7b1:	66 89 90 90 02 00 00 	mov    %dx,0x290(%rax)$/;"	l
f010a7b8	obj/kern/kernel.asm	/^    f010a7b8:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a7bf	obj/kern/kernel.asm	/^    f010a7bf:	00 00 00 $/;"	l
f010a7c2	obj/kern/kernel.asm	/^    f010a7c2:	66 c7 80 92 02 00 00 	movw   $0x8,0x292(%rax)$/;"	l
f010a7c9	obj/kern/kernel.asm	/^    f010a7c9:	08 00 $/;"	l
f010a7cb	obj/kern/kernel.asm	/^    f010a7cb:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a7d2	obj/kern/kernel.asm	/^    f010a7d2:	00 00 00 $/;"	l
f010a7d5	obj/kern/kernel.asm	/^    f010a7d5:	0f b6 90 94 02 00 00 	movzbl 0x294(%rax),%edx$/;"	l
f010a7dc	obj/kern/kernel.asm	/^    f010a7dc:	83 e2 f8             	and    $0xfffffffffffffff8,%edx$/;"	l
f010a7df	obj/kern/kernel.asm	/^    f010a7df:	88 90 94 02 00 00    	mov    %dl,0x294(%rax)$/;"	l
f010a7e5	obj/kern/kernel.asm	/^    f010a7e5:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a7ec	obj/kern/kernel.asm	/^    f010a7ec:	00 00 00 $/;"	l
f010a7ef	obj/kern/kernel.asm	/^    f010a7ef:	0f b6 90 94 02 00 00 	movzbl 0x294(%rax),%edx$/;"	l
f010a7f6	obj/kern/kernel.asm	/^    f010a7f6:	83 e2 07             	and    $0x7,%edx$/;"	l
f010a7f9	obj/kern/kernel.asm	/^    f010a7f9:	88 90 94 02 00 00    	mov    %dl,0x294(%rax)$/;"	l
f010a7ff	obj/kern/kernel.asm	/^    f010a7ff:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a806	obj/kern/kernel.asm	/^    f010a806:	00 00 00 $/;"	l
f010a809	obj/kern/kernel.asm	/^    f010a809:	0f b6 90 95 02 00 00 	movzbl 0x295(%rax),%edx$/;"	l
f010a810	obj/kern/kernel.asm	/^    f010a810:	83 e2 f0             	and    $0xfffffffffffffff0,%edx$/;"	l
f010a813	obj/kern/kernel.asm	/^    f010a813:	83 ca 0e             	or     $0xe,%edx$/;"	l
f010a816	obj/kern/kernel.asm	/^    f010a816:	88 90 95 02 00 00    	mov    %dl,0x295(%rax)$/;"	l
f010a81c	obj/kern/kernel.asm	/^    f010a81c:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a823	obj/kern/kernel.asm	/^    f010a823:	00 00 00 $/;"	l
f010a826	obj/kern/kernel.asm	/^    f010a826:	0f b6 90 95 02 00 00 	movzbl 0x295(%rax),%edx$/;"	l
f010a82d	obj/kern/kernel.asm	/^    f010a82d:	83 e2 ef             	and    $0xffffffffffffffef,%edx$/;"	l
f010a830	obj/kern/kernel.asm	/^    f010a830:	88 90 95 02 00 00    	mov    %dl,0x295(%rax)$/;"	l
f010a836	obj/kern/kernel.asm	/^    f010a836:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a83d	obj/kern/kernel.asm	/^    f010a83d:	00 00 00 $/;"	l
f010a840	obj/kern/kernel.asm	/^    f010a840:	0f b6 90 95 02 00 00 	movzbl 0x295(%rax),%edx$/;"	l
f010a847	obj/kern/kernel.asm	/^    f010a847:	83 e2 9f             	and    $0xffffffffffffff9f,%edx$/;"	l
f010a84a	obj/kern/kernel.asm	/^    f010a84a:	88 90 95 02 00 00    	mov    %dl,0x295(%rax)$/;"	l
f010a850	obj/kern/kernel.asm	/^    f010a850:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a857	obj/kern/kernel.asm	/^    f010a857:	00 00 00 $/;"	l
f010a85a	obj/kern/kernel.asm	/^    f010a85a:	0f b6 90 95 02 00 00 	movzbl 0x295(%rax),%edx$/;"	l
f010a861	obj/kern/kernel.asm	/^    f010a861:	83 ca 80             	or     $0xffffffffffffff80,%edx$/;"	l
f010a864	obj/kern/kernel.asm	/^    f010a864:	88 90 95 02 00 00    	mov    %dl,0x295(%rax)$/;"	l
f010a86a	obj/kern/kernel.asm	/^    f010a86a:	48 b8 a0 c7 10 f0 00 	mov    $0xf010c7a0,%rax$/;"	l
f010a871	obj/kern/kernel.asm	/^    f010a871:	00 00 00 $/;"	l
f010a874	obj/kern/kernel.asm	/^    f010a874:	48 c1 e8 10          	shr    $0x10,%rax$/;"	l
f010a878	obj/kern/kernel.asm	/^    f010a878:	89 c2                	mov    %eax,%edx$/;"	l
f010a87a	obj/kern/kernel.asm	/^    f010a87a:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a881	obj/kern/kernel.asm	/^    f010a881:	00 00 00 $/;"	l
f010a884	obj/kern/kernel.asm	/^    f010a884:	66 89 90 96 02 00 00 	mov    %dx,0x296(%rax)$/;"	l
f010a88b	obj/kern/kernel.asm	/^    f010a88b:	48 b8 a0 c7 10 f0 00 	mov    $0xf010c7a0,%rax$/;"	l
f010a892	obj/kern/kernel.asm	/^    f010a892:	00 00 00 $/;"	l
f010a895	obj/kern/kernel.asm	/^    f010a895:	48 c1 e8 20          	shr    $0x20,%rax$/;"	l
f010a899	obj/kern/kernel.asm	/^    f010a899:	89 c2                	mov    %eax,%edx$/;"	l
f010a89b	obj/kern/kernel.asm	/^    f010a89b:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a8a2	obj/kern/kernel.asm	/^    f010a8a2:	00 00 00 $/;"	l
f010a8a5	obj/kern/kernel.asm	/^    f010a8a5:	89 90 98 02 00 00    	mov    %edx,0x298(%rax)$/;"	l
f010a8ab	obj/kern/kernel.asm	/^    f010a8ab:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a8b2	obj/kern/kernel.asm	/^    f010a8b2:	00 00 00 $/;"	l
f010a8b5	obj/kern/kernel.asm	/^    f010a8b5:	c7 80 9c 02 00 00 00 	movl   $0x0,0x29c(%rax)$/;"	l
f010a8bc	obj/kern/kernel.asm	/^    f010a8bc:	00 00 00 $/;"	l
f010a8bf	obj/kern/kernel.asm	/^    f010a8bf:	48 b8 aa c7 10 f0 00 	mov    $0xf010c7aa,%rax$/;"	l
f010a8c6	obj/kern/kernel.asm	/^    f010a8c6:	00 00 00 $/;"	l
f010a8c9	obj/kern/kernel.asm	/^    f010a8c9:	89 c2                	mov    %eax,%edx$/;"	l
f010a8cb	obj/kern/kernel.asm	/^    f010a8cb:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a8d2	obj/kern/kernel.asm	/^    f010a8d2:	00 00 00 $/;"	l
f010a8d5	obj/kern/kernel.asm	/^    f010a8d5:	66 89 90 a0 02 00 00 	mov    %dx,0x2a0(%rax)$/;"	l
f010a8dc	obj/kern/kernel.asm	/^    f010a8dc:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a8e3	obj/kern/kernel.asm	/^    f010a8e3:	00 00 00 $/;"	l
f010a8e6	obj/kern/kernel.asm	/^    f010a8e6:	66 c7 80 a2 02 00 00 	movw   $0x8,0x2a2(%rax)$/;"	l
f010a8ed	obj/kern/kernel.asm	/^    f010a8ed:	08 00 $/;"	l
f010a8ef	obj/kern/kernel.asm	/^    f010a8ef:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a8f6	obj/kern/kernel.asm	/^    f010a8f6:	00 00 00 $/;"	l
f010a8f9	obj/kern/kernel.asm	/^    f010a8f9:	0f b6 90 a4 02 00 00 	movzbl 0x2a4(%rax),%edx$/;"	l
f010a900	obj/kern/kernel.asm	/^    f010a900:	83 e2 f8             	and    $0xfffffffffffffff8,%edx$/;"	l
f010a903	obj/kern/kernel.asm	/^    f010a903:	88 90 a4 02 00 00    	mov    %dl,0x2a4(%rax)$/;"	l
f010a909	obj/kern/kernel.asm	/^    f010a909:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a910	obj/kern/kernel.asm	/^    f010a910:	00 00 00 $/;"	l
f010a913	obj/kern/kernel.asm	/^    f010a913:	0f b6 90 a4 02 00 00 	movzbl 0x2a4(%rax),%edx$/;"	l
f010a91a	obj/kern/kernel.asm	/^    f010a91a:	83 e2 07             	and    $0x7,%edx$/;"	l
f010a91d	obj/kern/kernel.asm	/^    f010a91d:	88 90 a4 02 00 00    	mov    %dl,0x2a4(%rax)$/;"	l
f010a923	obj/kern/kernel.asm	/^    f010a923:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a92a	obj/kern/kernel.asm	/^    f010a92a:	00 00 00 $/;"	l
f010a92d	obj/kern/kernel.asm	/^    f010a92d:	0f b6 90 a5 02 00 00 	movzbl 0x2a5(%rax),%edx$/;"	l
f010a934	obj/kern/kernel.asm	/^    f010a934:	83 e2 f0             	and    $0xfffffffffffffff0,%edx$/;"	l
f010a937	obj/kern/kernel.asm	/^    f010a937:	83 ca 0e             	or     $0xe,%edx$/;"	l
f010a93a	obj/kern/kernel.asm	/^    f010a93a:	88 90 a5 02 00 00    	mov    %dl,0x2a5(%rax)$/;"	l
f010a940	obj/kern/kernel.asm	/^    f010a940:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a947	obj/kern/kernel.asm	/^    f010a947:	00 00 00 $/;"	l
f010a94a	obj/kern/kernel.asm	/^    f010a94a:	0f b6 90 a5 02 00 00 	movzbl 0x2a5(%rax),%edx$/;"	l
f010a951	obj/kern/kernel.asm	/^    f010a951:	83 e2 ef             	and    $0xffffffffffffffef,%edx$/;"	l
f010a954	obj/kern/kernel.asm	/^    f010a954:	88 90 a5 02 00 00    	mov    %dl,0x2a5(%rax)$/;"	l
f010a95a	obj/kern/kernel.asm	/^    f010a95a:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a961	obj/kern/kernel.asm	/^    f010a961:	00 00 00 $/;"	l
f010a964	obj/kern/kernel.asm	/^    f010a964:	0f b6 90 a5 02 00 00 	movzbl 0x2a5(%rax),%edx$/;"	l
f010a96b	obj/kern/kernel.asm	/^    f010a96b:	83 e2 9f             	and    $0xffffffffffffff9f,%edx$/;"	l
f010a96e	obj/kern/kernel.asm	/^    f010a96e:	88 90 a5 02 00 00    	mov    %dl,0x2a5(%rax)$/;"	l
f010a974	obj/kern/kernel.asm	/^    f010a974:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a97b	obj/kern/kernel.asm	/^    f010a97b:	00 00 00 $/;"	l
f010a97e	obj/kern/kernel.asm	/^    f010a97e:	0f b6 90 a5 02 00 00 	movzbl 0x2a5(%rax),%edx$/;"	l
f010a985	obj/kern/kernel.asm	/^    f010a985:	83 ca 80             	or     $0xffffffffffffff80,%edx$/;"	l
f010a988	obj/kern/kernel.asm	/^    f010a988:	88 90 a5 02 00 00    	mov    %dl,0x2a5(%rax)$/;"	l
f010a98e	obj/kern/kernel.asm	/^    f010a98e:	48 b8 aa c7 10 f0 00 	mov    $0xf010c7aa,%rax$/;"	l
f010a995	obj/kern/kernel.asm	/^    f010a995:	00 00 00 $/;"	l
f010a998	obj/kern/kernel.asm	/^    f010a998:	48 c1 e8 10          	shr    $0x10,%rax$/;"	l
f010a99c	obj/kern/kernel.asm	/^    f010a99c:	89 c2                	mov    %eax,%edx$/;"	l
f010a99e	obj/kern/kernel.asm	/^    f010a99e:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a9a5	obj/kern/kernel.asm	/^    f010a9a5:	00 00 00 $/;"	l
f010a9a8	obj/kern/kernel.asm	/^    f010a9a8:	66 89 90 a6 02 00 00 	mov    %dx,0x2a6(%rax)$/;"	l
f010a9af	obj/kern/kernel.asm	/^    f010a9af:	48 b8 aa c7 10 f0 00 	mov    $0xf010c7aa,%rax$/;"	l
f010a9b6	obj/kern/kernel.asm	/^    f010a9b6:	00 00 00 $/;"	l
f010a9b9	obj/kern/kernel.asm	/^    f010a9b9:	48 c1 e8 20          	shr    $0x20,%rax$/;"	l
f010a9bd	obj/kern/kernel.asm	/^    f010a9bd:	89 c2                	mov    %eax,%edx$/;"	l
f010a9bf	obj/kern/kernel.asm	/^    f010a9bf:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a9c6	obj/kern/kernel.asm	/^    f010a9c6:	00 00 00 $/;"	l
f010a9c9	obj/kern/kernel.asm	/^    f010a9c9:	89 90 a8 02 00 00    	mov    %edx,0x2a8(%rax)$/;"	l
f010a9cf	obj/kern/kernel.asm	/^    f010a9cf:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a9d6	obj/kern/kernel.asm	/^    f010a9d6:	00 00 00 $/;"	l
f010a9d9	obj/kern/kernel.asm	/^    f010a9d9:	c7 80 ac 02 00 00 00 	movl   $0x0,0x2ac(%rax)$/;"	l
f010a9e0	obj/kern/kernel.asm	/^    f010a9e0:	00 00 00 $/;"	l
f010a9e3	obj/kern/kernel.asm	/^    f010a9e3:	48 b8 b4 c7 10 f0 00 	mov    $0xf010c7b4,%rax$/;"	l
f010a9ea	obj/kern/kernel.asm	/^    f010a9ea:	00 00 00 $/;"	l
f010a9ed	obj/kern/kernel.asm	/^    f010a9ed:	89 c2                	mov    %eax,%edx$/;"	l
f010a9ef	obj/kern/kernel.asm	/^    f010a9ef:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010a9f6	obj/kern/kernel.asm	/^    f010a9f6:	00 00 00 $/;"	l
f010a9f9	obj/kern/kernel.asm	/^    f010a9f9:	66 89 90 b0 02 00 00 	mov    %dx,0x2b0(%rax)$/;"	l
f010aa00	obj/kern/kernel.asm	/^    f010aa00:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010aa07	obj/kern/kernel.asm	/^    f010aa07:	00 00 00 $/;"	l
f010aa0a	obj/kern/kernel.asm	/^    f010aa0a:	66 c7 80 b2 02 00 00 	movw   $0x8,0x2b2(%rax)$/;"	l
f010aa11	obj/kern/kernel.asm	/^    f010aa11:	08 00 $/;"	l
f010aa13	obj/kern/kernel.asm	/^    f010aa13:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010aa1a	obj/kern/kernel.asm	/^    f010aa1a:	00 00 00 $/;"	l
f010aa1d	obj/kern/kernel.asm	/^    f010aa1d:	0f b6 90 b4 02 00 00 	movzbl 0x2b4(%rax),%edx$/;"	l
f010aa24	obj/kern/kernel.asm	/^    f010aa24:	83 e2 f8             	and    $0xfffffffffffffff8,%edx$/;"	l
f010aa27	obj/kern/kernel.asm	/^    f010aa27:	88 90 b4 02 00 00    	mov    %dl,0x2b4(%rax)$/;"	l
f010aa2d	obj/kern/kernel.asm	/^    f010aa2d:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010aa34	obj/kern/kernel.asm	/^    f010aa34:	00 00 00 $/;"	l
f010aa37	obj/kern/kernel.asm	/^    f010aa37:	0f b6 90 b4 02 00 00 	movzbl 0x2b4(%rax),%edx$/;"	l
f010aa3e	obj/kern/kernel.asm	/^    f010aa3e:	83 e2 07             	and    $0x7,%edx$/;"	l
f010aa41	obj/kern/kernel.asm	/^    f010aa41:	88 90 b4 02 00 00    	mov    %dl,0x2b4(%rax)$/;"	l
f010aa47	obj/kern/kernel.asm	/^    f010aa47:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010aa4e	obj/kern/kernel.asm	/^    f010aa4e:	00 00 00 $/;"	l
f010aa51	obj/kern/kernel.asm	/^    f010aa51:	0f b6 90 b5 02 00 00 	movzbl 0x2b5(%rax),%edx$/;"	l
f010aa58	obj/kern/kernel.asm	/^    f010aa58:	83 e2 f0             	and    $0xfffffffffffffff0,%edx$/;"	l
f010aa5b	obj/kern/kernel.asm	/^    f010aa5b:	83 ca 0e             	or     $0xe,%edx$/;"	l
f010aa5e	obj/kern/kernel.asm	/^    f010aa5e:	88 90 b5 02 00 00    	mov    %dl,0x2b5(%rax)$/;"	l
f010aa64	obj/kern/kernel.asm	/^    f010aa64:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010aa6b	obj/kern/kernel.asm	/^    f010aa6b:	00 00 00 $/;"	l
f010aa6e	obj/kern/kernel.asm	/^    f010aa6e:	0f b6 90 b5 02 00 00 	movzbl 0x2b5(%rax),%edx$/;"	l
f010aa75	obj/kern/kernel.asm	/^    f010aa75:	83 e2 ef             	and    $0xffffffffffffffef,%edx$/;"	l
f010aa78	obj/kern/kernel.asm	/^    f010aa78:	88 90 b5 02 00 00    	mov    %dl,0x2b5(%rax)$/;"	l
f010aa7e	obj/kern/kernel.asm	/^    f010aa7e:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010aa85	obj/kern/kernel.asm	/^    f010aa85:	00 00 00 $/;"	l
f010aa88	obj/kern/kernel.asm	/^    f010aa88:	0f b6 90 b5 02 00 00 	movzbl 0x2b5(%rax),%edx$/;"	l
f010aa8f	obj/kern/kernel.asm	/^    f010aa8f:	83 e2 9f             	and    $0xffffffffffffff9f,%edx$/;"	l
f010aa92	obj/kern/kernel.asm	/^    f010aa92:	88 90 b5 02 00 00    	mov    %dl,0x2b5(%rax)$/;"	l
f010aa98	obj/kern/kernel.asm	/^    f010aa98:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010aa9f	obj/kern/kernel.asm	/^    f010aa9f:	00 00 00 $/;"	l
f010aaa2	obj/kern/kernel.asm	/^    f010aaa2:	0f b6 90 b5 02 00 00 	movzbl 0x2b5(%rax),%edx$/;"	l
f010aaa9	obj/kern/kernel.asm	/^    f010aaa9:	83 ca 80             	or     $0xffffffffffffff80,%edx$/;"	l
f010aaac	obj/kern/kernel.asm	/^    f010aaac:	88 90 b5 02 00 00    	mov    %dl,0x2b5(%rax)$/;"	l
f010aab2	obj/kern/kernel.asm	/^    f010aab2:	48 b8 b4 c7 10 f0 00 	mov    $0xf010c7b4,%rax$/;"	l
f010aab9	obj/kern/kernel.asm	/^    f010aab9:	00 00 00 $/;"	l
f010aabc	obj/kern/kernel.asm	/^    f010aabc:	48 c1 e8 10          	shr    $0x10,%rax$/;"	l
f010aac0	obj/kern/kernel.asm	/^    f010aac0:	89 c2                	mov    %eax,%edx$/;"	l
f010aac2	obj/kern/kernel.asm	/^    f010aac2:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010aac9	obj/kern/kernel.asm	/^    f010aac9:	00 00 00 $/;"	l
f010aacc	obj/kern/kernel.asm	/^    f010aacc:	66 89 90 b6 02 00 00 	mov    %dx,0x2b6(%rax)$/;"	l
f010aad3	obj/kern/kernel.asm	/^    f010aad3:	48 b8 b4 c7 10 f0 00 	mov    $0xf010c7b4,%rax$/;"	l
f010aada	obj/kern/kernel.asm	/^    f010aada:	00 00 00 $/;"	l
f010aadd	obj/kern/kernel.asm	/^    f010aadd:	48 c1 e8 20          	shr    $0x20,%rax$/;"	l
f010aae1	obj/kern/kernel.asm	/^    f010aae1:	89 c2                	mov    %eax,%edx$/;"	l
f010aae3	obj/kern/kernel.asm	/^    f010aae3:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010aaea	obj/kern/kernel.asm	/^    f010aaea:	00 00 00 $/;"	l
f010aaed	obj/kern/kernel.asm	/^    f010aaed:	89 90 b8 02 00 00    	mov    %edx,0x2b8(%rax)$/;"	l
f010aaf3	obj/kern/kernel.asm	/^    f010aaf3:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010aafa	obj/kern/kernel.asm	/^    f010aafa:	00 00 00 $/;"	l
f010aafd	obj/kern/kernel.asm	/^    f010aafd:	c7 80 bc 02 00 00 00 	movl   $0x0,0x2bc(%rax)$/;"	l
f010ab04	obj/kern/kernel.asm	/^    f010ab04:	00 00 00 $/;"	l
f010ab07	obj/kern/kernel.asm	/^    f010ab07:	48 b8 be c7 10 f0 00 	mov    $0xf010c7be,%rax$/;"	l
f010ab0e	obj/kern/kernel.asm	/^    f010ab0e:	00 00 00 $/;"	l
f010ab11	obj/kern/kernel.asm	/^    f010ab11:	89 c2                	mov    %eax,%edx$/;"	l
f010ab13	obj/kern/kernel.asm	/^    f010ab13:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010ab1a	obj/kern/kernel.asm	/^    f010ab1a:	00 00 00 $/;"	l
f010ab1d	obj/kern/kernel.asm	/^    f010ab1d:	66 89 90 c0 02 00 00 	mov    %dx,0x2c0(%rax)$/;"	l
f010ab24	obj/kern/kernel.asm	/^    f010ab24:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010ab2b	obj/kern/kernel.asm	/^    f010ab2b:	00 00 00 $/;"	l
f010ab2e	obj/kern/kernel.asm	/^    f010ab2e:	66 c7 80 c2 02 00 00 	movw   $0x8,0x2c2(%rax)$/;"	l
f010ab35	obj/kern/kernel.asm	/^    f010ab35:	08 00 $/;"	l
f010ab37	obj/kern/kernel.asm	/^    f010ab37:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010ab3e	obj/kern/kernel.asm	/^    f010ab3e:	00 00 00 $/;"	l
f010ab41	obj/kern/kernel.asm	/^    f010ab41:	0f b6 90 c4 02 00 00 	movzbl 0x2c4(%rax),%edx$/;"	l
f010ab48	obj/kern/kernel.asm	/^    f010ab48:	83 e2 f8             	and    $0xfffffffffffffff8,%edx$/;"	l
f010ab4b	obj/kern/kernel.asm	/^    f010ab4b:	88 90 c4 02 00 00    	mov    %dl,0x2c4(%rax)$/;"	l
f010ab51	obj/kern/kernel.asm	/^    f010ab51:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010ab58	obj/kern/kernel.asm	/^    f010ab58:	00 00 00 $/;"	l
f010ab5b	obj/kern/kernel.asm	/^    f010ab5b:	0f b6 90 c4 02 00 00 	movzbl 0x2c4(%rax),%edx$/;"	l
f010ab62	obj/kern/kernel.asm	/^    f010ab62:	83 e2 07             	and    $0x7,%edx$/;"	l
f010ab65	obj/kern/kernel.asm	/^    f010ab65:	88 90 c4 02 00 00    	mov    %dl,0x2c4(%rax)$/;"	l
f010ab6b	obj/kern/kernel.asm	/^    f010ab6b:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010ab72	obj/kern/kernel.asm	/^    f010ab72:	00 00 00 $/;"	l
f010ab75	obj/kern/kernel.asm	/^    f010ab75:	0f b6 90 c5 02 00 00 	movzbl 0x2c5(%rax),%edx$/;"	l
f010ab7c	obj/kern/kernel.asm	/^    f010ab7c:	83 e2 f0             	and    $0xfffffffffffffff0,%edx$/;"	l
f010ab7f	obj/kern/kernel.asm	/^    f010ab7f:	83 ca 0e             	or     $0xe,%edx$/;"	l
f010ab82	obj/kern/kernel.asm	/^    f010ab82:	88 90 c5 02 00 00    	mov    %dl,0x2c5(%rax)$/;"	l
f010ab88	obj/kern/kernel.asm	/^    f010ab88:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010ab8f	obj/kern/kernel.asm	/^    f010ab8f:	00 00 00 $/;"	l
f010ab92	obj/kern/kernel.asm	/^    f010ab92:	0f b6 90 c5 02 00 00 	movzbl 0x2c5(%rax),%edx$/;"	l
f010ab99	obj/kern/kernel.asm	/^    f010ab99:	83 e2 ef             	and    $0xffffffffffffffef,%edx$/;"	l
f010ab9c	obj/kern/kernel.asm	/^    f010ab9c:	88 90 c5 02 00 00    	mov    %dl,0x2c5(%rax)$/;"	l
f010aba2	obj/kern/kernel.asm	/^    f010aba2:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010aba9	obj/kern/kernel.asm	/^    f010aba9:	00 00 00 $/;"	l
f010abac	obj/kern/kernel.asm	/^    f010abac:	0f b6 90 c5 02 00 00 	movzbl 0x2c5(%rax),%edx$/;"	l
f010abb3	obj/kern/kernel.asm	/^    f010abb3:	83 e2 9f             	and    $0xffffffffffffff9f,%edx$/;"	l
f010abb6	obj/kern/kernel.asm	/^    f010abb6:	88 90 c5 02 00 00    	mov    %dl,0x2c5(%rax)$/;"	l
f010abbc	obj/kern/kernel.asm	/^    f010abbc:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010abc3	obj/kern/kernel.asm	/^    f010abc3:	00 00 00 $/;"	l
f010abc6	obj/kern/kernel.asm	/^    f010abc6:	0f b6 90 c5 02 00 00 	movzbl 0x2c5(%rax),%edx$/;"	l
f010abcd	obj/kern/kernel.asm	/^    f010abcd:	83 ca 80             	or     $0xffffffffffffff80,%edx$/;"	l
f010abd0	obj/kern/kernel.asm	/^    f010abd0:	88 90 c5 02 00 00    	mov    %dl,0x2c5(%rax)$/;"	l
f010abd6	obj/kern/kernel.asm	/^    f010abd6:	48 b8 be c7 10 f0 00 	mov    $0xf010c7be,%rax$/;"	l
f010abdd	obj/kern/kernel.asm	/^    f010abdd:	00 00 00 $/;"	l
f010abe0	obj/kern/kernel.asm	/^    f010abe0:	48 c1 e8 10          	shr    $0x10,%rax$/;"	l
f010abe4	obj/kern/kernel.asm	/^    f010abe4:	89 c2                	mov    %eax,%edx$/;"	l
f010abe6	obj/kern/kernel.asm	/^    f010abe6:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010abed	obj/kern/kernel.asm	/^    f010abed:	00 00 00 $/;"	l
f010abf0	obj/kern/kernel.asm	/^    f010abf0:	66 89 90 c6 02 00 00 	mov    %dx,0x2c6(%rax)$/;"	l
f010abf7	obj/kern/kernel.asm	/^    f010abf7:	48 b8 be c7 10 f0 00 	mov    $0xf010c7be,%rax$/;"	l
f010abfe	obj/kern/kernel.asm	/^    f010abfe:	00 00 00 $/;"	l
f010ac01	obj/kern/kernel.asm	/^    f010ac01:	48 c1 e8 20          	shr    $0x20,%rax$/;"	l
f010ac05	obj/kern/kernel.asm	/^    f010ac05:	89 c2                	mov    %eax,%edx$/;"	l
f010ac07	obj/kern/kernel.asm	/^    f010ac07:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010ac0e	obj/kern/kernel.asm	/^    f010ac0e:	00 00 00 $/;"	l
f010ac11	obj/kern/kernel.asm	/^    f010ac11:	89 90 c8 02 00 00    	mov    %edx,0x2c8(%rax)$/;"	l
f010ac17	obj/kern/kernel.asm	/^    f010ac17:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010ac1e	obj/kern/kernel.asm	/^    f010ac1e:	00 00 00 $/;"	l
f010ac21	obj/kern/kernel.asm	/^    f010ac21:	c7 80 cc 02 00 00 00 	movl   $0x0,0x2cc(%rax)$/;"	l
f010ac28	obj/kern/kernel.asm	/^    f010ac28:	00 00 00 $/;"	l
f010ac2b	obj/kern/kernel.asm	/^    f010ac2b:	48 b8 c8 c7 10 f0 00 	mov    $0xf010c7c8,%rax$/;"	l
f010ac32	obj/kern/kernel.asm	/^    f010ac32:	00 00 00 $/;"	l
f010ac35	obj/kern/kernel.asm	/^    f010ac35:	89 c2                	mov    %eax,%edx$/;"	l
f010ac37	obj/kern/kernel.asm	/^    f010ac37:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010ac3e	obj/kern/kernel.asm	/^    f010ac3e:	00 00 00 $/;"	l
f010ac41	obj/kern/kernel.asm	/^    f010ac41:	66 89 90 d0 02 00 00 	mov    %dx,0x2d0(%rax)$/;"	l
f010ac48	obj/kern/kernel.asm	/^    f010ac48:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010ac4f	obj/kern/kernel.asm	/^    f010ac4f:	00 00 00 $/;"	l
f010ac52	obj/kern/kernel.asm	/^    f010ac52:	66 c7 80 d2 02 00 00 	movw   $0x8,0x2d2(%rax)$/;"	l
f010ac59	obj/kern/kernel.asm	/^    f010ac59:	08 00 $/;"	l
f010ac5b	obj/kern/kernel.asm	/^    f010ac5b:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010ac62	obj/kern/kernel.asm	/^    f010ac62:	00 00 00 $/;"	l
f010ac65	obj/kern/kernel.asm	/^    f010ac65:	0f b6 90 d4 02 00 00 	movzbl 0x2d4(%rax),%edx$/;"	l
f010ac6c	obj/kern/kernel.asm	/^    f010ac6c:	83 e2 f8             	and    $0xfffffffffffffff8,%edx$/;"	l
f010ac6f	obj/kern/kernel.asm	/^    f010ac6f:	88 90 d4 02 00 00    	mov    %dl,0x2d4(%rax)$/;"	l
f010ac75	obj/kern/kernel.asm	/^    f010ac75:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010ac7c	obj/kern/kernel.asm	/^    f010ac7c:	00 00 00 $/;"	l
f010ac7f	obj/kern/kernel.asm	/^    f010ac7f:	0f b6 90 d4 02 00 00 	movzbl 0x2d4(%rax),%edx$/;"	l
f010ac86	obj/kern/kernel.asm	/^    f010ac86:	83 e2 07             	and    $0x7,%edx$/;"	l
f010ac89	obj/kern/kernel.asm	/^    f010ac89:	88 90 d4 02 00 00    	mov    %dl,0x2d4(%rax)$/;"	l
f010ac8f	obj/kern/kernel.asm	/^    f010ac8f:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010ac96	obj/kern/kernel.asm	/^    f010ac96:	00 00 00 $/;"	l
f010ac99	obj/kern/kernel.asm	/^    f010ac99:	0f b6 90 d5 02 00 00 	movzbl 0x2d5(%rax),%edx$/;"	l
f010aca0	obj/kern/kernel.asm	/^    f010aca0:	83 e2 f0             	and    $0xfffffffffffffff0,%edx$/;"	l
f010aca3	obj/kern/kernel.asm	/^    f010aca3:	83 ca 0e             	or     $0xe,%edx$/;"	l
f010aca6	obj/kern/kernel.asm	/^    f010aca6:	88 90 d5 02 00 00    	mov    %dl,0x2d5(%rax)$/;"	l
f010acac	obj/kern/kernel.asm	/^    f010acac:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010acb3	obj/kern/kernel.asm	/^    f010acb3:	00 00 00 $/;"	l
f010acb6	obj/kern/kernel.asm	/^    f010acb6:	0f b6 90 d5 02 00 00 	movzbl 0x2d5(%rax),%edx$/;"	l
f010acbd	obj/kern/kernel.asm	/^    f010acbd:	83 e2 ef             	and    $0xffffffffffffffef,%edx$/;"	l
f010acc0	obj/kern/kernel.asm	/^    f010acc0:	88 90 d5 02 00 00    	mov    %dl,0x2d5(%rax)$/;"	l
f010acc6	obj/kern/kernel.asm	/^    f010acc6:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010accd	obj/kern/kernel.asm	/^    f010accd:	00 00 00 $/;"	l
f010acd0	obj/kern/kernel.asm	/^    f010acd0:	0f b6 90 d5 02 00 00 	movzbl 0x2d5(%rax),%edx$/;"	l
f010acd7	obj/kern/kernel.asm	/^    f010acd7:	83 e2 9f             	and    $0xffffffffffffff9f,%edx$/;"	l
f010acda	obj/kern/kernel.asm	/^    f010acda:	88 90 d5 02 00 00    	mov    %dl,0x2d5(%rax)$/;"	l
f010ace0	obj/kern/kernel.asm	/^    f010ace0:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010ace7	obj/kern/kernel.asm	/^    f010ace7:	00 00 00 $/;"	l
f010acea	obj/kern/kernel.asm	/^    f010acea:	0f b6 90 d5 02 00 00 	movzbl 0x2d5(%rax),%edx$/;"	l
f010acf1	obj/kern/kernel.asm	/^    f010acf1:	83 ca 80             	or     $0xffffffffffffff80,%edx$/;"	l
f010acf4	obj/kern/kernel.asm	/^    f010acf4:	88 90 d5 02 00 00    	mov    %dl,0x2d5(%rax)$/;"	l
f010acfa	obj/kern/kernel.asm	/^    f010acfa:	48 b8 c8 c7 10 f0 00 	mov    $0xf010c7c8,%rax$/;"	l
f010ad01	obj/kern/kernel.asm	/^    f010ad01:	00 00 00 $/;"	l
f010ad04	obj/kern/kernel.asm	/^    f010ad04:	48 c1 e8 10          	shr    $0x10,%rax$/;"	l
f010ad08	obj/kern/kernel.asm	/^    f010ad08:	89 c2                	mov    %eax,%edx$/;"	l
f010ad0a	obj/kern/kernel.asm	/^    f010ad0a:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010ad11	obj/kern/kernel.asm	/^    f010ad11:	00 00 00 $/;"	l
f010ad14	obj/kern/kernel.asm	/^    f010ad14:	66 89 90 d6 02 00 00 	mov    %dx,0x2d6(%rax)$/;"	l
f010ad1b	obj/kern/kernel.asm	/^    f010ad1b:	48 b8 c8 c7 10 f0 00 	mov    $0xf010c7c8,%rax$/;"	l
f010ad22	obj/kern/kernel.asm	/^    f010ad22:	00 00 00 $/;"	l
f010ad25	obj/kern/kernel.asm	/^    f010ad25:	48 c1 e8 20          	shr    $0x20,%rax$/;"	l
f010ad29	obj/kern/kernel.asm	/^    f010ad29:	89 c2                	mov    %eax,%edx$/;"	l
f010ad2b	obj/kern/kernel.asm	/^    f010ad2b:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010ad32	obj/kern/kernel.asm	/^    f010ad32:	00 00 00 $/;"	l
f010ad35	obj/kern/kernel.asm	/^    f010ad35:	89 90 d8 02 00 00    	mov    %edx,0x2d8(%rax)$/;"	l
f010ad3b	obj/kern/kernel.asm	/^    f010ad3b:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010ad42	obj/kern/kernel.asm	/^    f010ad42:	00 00 00 $/;"	l
f010ad45	obj/kern/kernel.asm	/^    f010ad45:	c7 80 dc 02 00 00 00 	movl   $0x0,0x2dc(%rax)$/;"	l
f010ad4c	obj/kern/kernel.asm	/^    f010ad4c:	00 00 00 $/;"	l
f010ad4f	obj/kern/kernel.asm	/^    f010ad4f:	48 b8 d2 c7 10 f0 00 	mov    $0xf010c7d2,%rax$/;"	l
f010ad56	obj/kern/kernel.asm	/^    f010ad56:	00 00 00 $/;"	l
f010ad59	obj/kern/kernel.asm	/^    f010ad59:	89 c2                	mov    %eax,%edx$/;"	l
f010ad5b	obj/kern/kernel.asm	/^    f010ad5b:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010ad62	obj/kern/kernel.asm	/^    f010ad62:	00 00 00 $/;"	l
f010ad65	obj/kern/kernel.asm	/^    f010ad65:	66 89 90 e0 02 00 00 	mov    %dx,0x2e0(%rax)$/;"	l
f010ad6c	obj/kern/kernel.asm	/^    f010ad6c:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010ad73	obj/kern/kernel.asm	/^    f010ad73:	00 00 00 $/;"	l
f010ad76	obj/kern/kernel.asm	/^    f010ad76:	66 c7 80 e2 02 00 00 	movw   $0x8,0x2e2(%rax)$/;"	l
f010ad7d	obj/kern/kernel.asm	/^    f010ad7d:	08 00 $/;"	l
f010ad7f	obj/kern/kernel.asm	/^    f010ad7f:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010ad86	obj/kern/kernel.asm	/^    f010ad86:	00 00 00 $/;"	l
f010ad89	obj/kern/kernel.asm	/^    f010ad89:	0f b6 90 e4 02 00 00 	movzbl 0x2e4(%rax),%edx$/;"	l
f010ad90	obj/kern/kernel.asm	/^    f010ad90:	83 e2 f8             	and    $0xfffffffffffffff8,%edx$/;"	l
f010ad93	obj/kern/kernel.asm	/^    f010ad93:	88 90 e4 02 00 00    	mov    %dl,0x2e4(%rax)$/;"	l
f010ad99	obj/kern/kernel.asm	/^    f010ad99:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010ada0	obj/kern/kernel.asm	/^    f010ada0:	00 00 00 $/;"	l
f010ada3	obj/kern/kernel.asm	/^    f010ada3:	0f b6 90 e4 02 00 00 	movzbl 0x2e4(%rax),%edx$/;"	l
f010adaa	obj/kern/kernel.asm	/^    f010adaa:	83 e2 07             	and    $0x7,%edx$/;"	l
f010adad	obj/kern/kernel.asm	/^    f010adad:	88 90 e4 02 00 00    	mov    %dl,0x2e4(%rax)$/;"	l
f010adb3	obj/kern/kernel.asm	/^    f010adb3:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010adba	obj/kern/kernel.asm	/^    f010adba:	00 00 00 $/;"	l
f010adbd	obj/kern/kernel.asm	/^    f010adbd:	0f b6 90 e5 02 00 00 	movzbl 0x2e5(%rax),%edx$/;"	l
f010adc4	obj/kern/kernel.asm	/^    f010adc4:	83 e2 f0             	and    $0xfffffffffffffff0,%edx$/;"	l
f010adc7	obj/kern/kernel.asm	/^    f010adc7:	83 ca 0e             	or     $0xe,%edx$/;"	l
f010adca	obj/kern/kernel.asm	/^    f010adca:	88 90 e5 02 00 00    	mov    %dl,0x2e5(%rax)$/;"	l
f010add0	obj/kern/kernel.asm	/^    f010add0:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010add7	obj/kern/kernel.asm	/^    f010add7:	00 00 00 $/;"	l
f010adda	obj/kern/kernel.asm	/^    f010adda:	0f b6 90 e5 02 00 00 	movzbl 0x2e5(%rax),%edx$/;"	l
f010ade1	obj/kern/kernel.asm	/^    f010ade1:	83 e2 ef             	and    $0xffffffffffffffef,%edx$/;"	l
f010ade4	obj/kern/kernel.asm	/^    f010ade4:	88 90 e5 02 00 00    	mov    %dl,0x2e5(%rax)$/;"	l
f010adea	obj/kern/kernel.asm	/^    f010adea:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010adf1	obj/kern/kernel.asm	/^    f010adf1:	00 00 00 $/;"	l
f010adf4	obj/kern/kernel.asm	/^    f010adf4:	0f b6 90 e5 02 00 00 	movzbl 0x2e5(%rax),%edx$/;"	l
f010adfb	obj/kern/kernel.asm	/^    f010adfb:	83 e2 9f             	and    $0xffffffffffffff9f,%edx$/;"	l
f010adfe	obj/kern/kernel.asm	/^    f010adfe:	88 90 e5 02 00 00    	mov    %dl,0x2e5(%rax)$/;"	l
f010ae04	obj/kern/kernel.asm	/^    f010ae04:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010ae0b	obj/kern/kernel.asm	/^    f010ae0b:	00 00 00 $/;"	l
f010ae0e	obj/kern/kernel.asm	/^    f010ae0e:	0f b6 90 e5 02 00 00 	movzbl 0x2e5(%rax),%edx$/;"	l
f010ae15	obj/kern/kernel.asm	/^    f010ae15:	83 ca 80             	or     $0xffffffffffffff80,%edx$/;"	l
f010ae18	obj/kern/kernel.asm	/^    f010ae18:	88 90 e5 02 00 00    	mov    %dl,0x2e5(%rax)$/;"	l
f010ae1e	obj/kern/kernel.asm	/^    f010ae1e:	48 b8 d2 c7 10 f0 00 	mov    $0xf010c7d2,%rax$/;"	l
f010ae25	obj/kern/kernel.asm	/^    f010ae25:	00 00 00 $/;"	l
f010ae28	obj/kern/kernel.asm	/^    f010ae28:	48 c1 e8 10          	shr    $0x10,%rax$/;"	l
f010ae2c	obj/kern/kernel.asm	/^    f010ae2c:	89 c2                	mov    %eax,%edx$/;"	l
f010ae2e	obj/kern/kernel.asm	/^    f010ae2e:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010ae35	obj/kern/kernel.asm	/^    f010ae35:	00 00 00 $/;"	l
f010ae38	obj/kern/kernel.asm	/^    f010ae38:	66 89 90 e6 02 00 00 	mov    %dx,0x2e6(%rax)$/;"	l
f010ae3f	obj/kern/kernel.asm	/^    f010ae3f:	48 b8 d2 c7 10 f0 00 	mov    $0xf010c7d2,%rax$/;"	l
f010ae46	obj/kern/kernel.asm	/^    f010ae46:	00 00 00 $/;"	l
f010ae49	obj/kern/kernel.asm	/^    f010ae49:	48 c1 e8 20          	shr    $0x20,%rax$/;"	l
f010ae4d	obj/kern/kernel.asm	/^    f010ae4d:	89 c2                	mov    %eax,%edx$/;"	l
f010ae4f	obj/kern/kernel.asm	/^    f010ae4f:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010ae56	obj/kern/kernel.asm	/^    f010ae56:	00 00 00 $/;"	l
f010ae59	obj/kern/kernel.asm	/^    f010ae59:	89 90 e8 02 00 00    	mov    %edx,0x2e8(%rax)$/;"	l
f010ae5f	obj/kern/kernel.asm	/^    f010ae5f:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010ae66	obj/kern/kernel.asm	/^    f010ae66:	00 00 00 $/;"	l
f010ae69	obj/kern/kernel.asm	/^    f010ae69:	c7 80 ec 02 00 00 00 	movl   $0x0,0x2ec(%rax)$/;"	l
f010ae70	obj/kern/kernel.asm	/^    f010ae70:	00 00 00 $/;"	l
f010ae73	obj/kern/kernel.asm	/^    f010ae73:	48 b8 dc c7 10 f0 00 	mov    $0xf010c7dc,%rax$/;"	l
f010ae7a	obj/kern/kernel.asm	/^    f010ae7a:	00 00 00 $/;"	l
f010ae7d	obj/kern/kernel.asm	/^    f010ae7d:	89 c2                	mov    %eax,%edx$/;"	l
f010ae7f	obj/kern/kernel.asm	/^    f010ae7f:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010ae86	obj/kern/kernel.asm	/^    f010ae86:	00 00 00 $/;"	l
f010ae89	obj/kern/kernel.asm	/^    f010ae89:	66 89 90 f0 02 00 00 	mov    %dx,0x2f0(%rax)$/;"	l
f010ae90	obj/kern/kernel.asm	/^    f010ae90:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010ae97	obj/kern/kernel.asm	/^    f010ae97:	00 00 00 $/;"	l
f010ae9a	obj/kern/kernel.asm	/^    f010ae9a:	66 c7 80 f2 02 00 00 	movw   $0x8,0x2f2(%rax)$/;"	l
f010aea1	obj/kern/kernel.asm	/^    f010aea1:	08 00 $/;"	l
f010aea3	obj/kern/kernel.asm	/^    f010aea3:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010aeaa	obj/kern/kernel.asm	/^    f010aeaa:	00 00 00 $/;"	l
f010aead	obj/kern/kernel.asm	/^    f010aead:	0f b6 90 f4 02 00 00 	movzbl 0x2f4(%rax),%edx$/;"	l
f010aeb4	obj/kern/kernel.asm	/^    f010aeb4:	83 e2 f8             	and    $0xfffffffffffffff8,%edx$/;"	l
f010aeb7	obj/kern/kernel.asm	/^    f010aeb7:	88 90 f4 02 00 00    	mov    %dl,0x2f4(%rax)$/;"	l
f010aebd	obj/kern/kernel.asm	/^    f010aebd:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010aec4	obj/kern/kernel.asm	/^    f010aec4:	00 00 00 $/;"	l
f010aec7	obj/kern/kernel.asm	/^    f010aec7:	0f b6 90 f4 02 00 00 	movzbl 0x2f4(%rax),%edx$/;"	l
f010aece	obj/kern/kernel.asm	/^    f010aece:	83 e2 07             	and    $0x7,%edx$/;"	l
f010aed1	obj/kern/kernel.asm	/^    f010aed1:	88 90 f4 02 00 00    	mov    %dl,0x2f4(%rax)$/;"	l
f010aed7	obj/kern/kernel.asm	/^    f010aed7:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010aede	obj/kern/kernel.asm	/^    f010aede:	00 00 00 $/;"	l
f010aee1	obj/kern/kernel.asm	/^    f010aee1:	0f b6 90 f5 02 00 00 	movzbl 0x2f5(%rax),%edx$/;"	l
f010aee8	obj/kern/kernel.asm	/^    f010aee8:	83 e2 f0             	and    $0xfffffffffffffff0,%edx$/;"	l
f010aeeb	obj/kern/kernel.asm	/^    f010aeeb:	83 ca 0e             	or     $0xe,%edx$/;"	l
f010aeee	obj/kern/kernel.asm	/^    f010aeee:	88 90 f5 02 00 00    	mov    %dl,0x2f5(%rax)$/;"	l
f010aef4	obj/kern/kernel.asm	/^    f010aef4:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010aefb	obj/kern/kernel.asm	/^    f010aefb:	00 00 00 $/;"	l
f010aefe	obj/kern/kernel.asm	/^    f010aefe:	0f b6 90 f5 02 00 00 	movzbl 0x2f5(%rax),%edx$/;"	l
f010af05	obj/kern/kernel.asm	/^    f010af05:	83 e2 ef             	and    $0xffffffffffffffef,%edx$/;"	l
f010af08	obj/kern/kernel.asm	/^    f010af08:	88 90 f5 02 00 00    	mov    %dl,0x2f5(%rax)$/;"	l
f010af0e	obj/kern/kernel.asm	/^    f010af0e:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010af15	obj/kern/kernel.asm	/^    f010af15:	00 00 00 $/;"	l
f010af18	obj/kern/kernel.asm	/^    f010af18:	0f b6 90 f5 02 00 00 	movzbl 0x2f5(%rax),%edx$/;"	l
f010af1f	obj/kern/kernel.asm	/^    f010af1f:	83 e2 9f             	and    $0xffffffffffffff9f,%edx$/;"	l
f010af22	obj/kern/kernel.asm	/^    f010af22:	88 90 f5 02 00 00    	mov    %dl,0x2f5(%rax)$/;"	l
f010af28	obj/kern/kernel.asm	/^    f010af28:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010af2f	obj/kern/kernel.asm	/^    f010af2f:	00 00 00 $/;"	l
f010af32	obj/kern/kernel.asm	/^    f010af32:	0f b6 90 f5 02 00 00 	movzbl 0x2f5(%rax),%edx$/;"	l
f010af39	obj/kern/kernel.asm	/^    f010af39:	83 ca 80             	or     $0xffffffffffffff80,%edx$/;"	l
f010af3c	obj/kern/kernel.asm	/^    f010af3c:	88 90 f5 02 00 00    	mov    %dl,0x2f5(%rax)$/;"	l
f010af42	obj/kern/kernel.asm	/^    f010af42:	48 b8 dc c7 10 f0 00 	mov    $0xf010c7dc,%rax$/;"	l
f010af49	obj/kern/kernel.asm	/^    f010af49:	00 00 00 $/;"	l
f010af4c	obj/kern/kernel.asm	/^    f010af4c:	48 c1 e8 10          	shr    $0x10,%rax$/;"	l
f010af50	obj/kern/kernel.asm	/^    f010af50:	89 c2                	mov    %eax,%edx$/;"	l
f010af52	obj/kern/kernel.asm	/^    f010af52:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010af59	obj/kern/kernel.asm	/^    f010af59:	00 00 00 $/;"	l
f010af5c	obj/kern/kernel.asm	/^    f010af5c:	66 89 90 f6 02 00 00 	mov    %dx,0x2f6(%rax)$/;"	l
f010af63	obj/kern/kernel.asm	/^    f010af63:	48 b8 dc c7 10 f0 00 	mov    $0xf010c7dc,%rax$/;"	l
f010af6a	obj/kern/kernel.asm	/^    f010af6a:	00 00 00 $/;"	l
f010af6d	obj/kern/kernel.asm	/^    f010af6d:	48 c1 e8 20          	shr    $0x20,%rax$/;"	l
f010af71	obj/kern/kernel.asm	/^    f010af71:	89 c2                	mov    %eax,%edx$/;"	l
f010af73	obj/kern/kernel.asm	/^    f010af73:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010af7a	obj/kern/kernel.asm	/^    f010af7a:	00 00 00 $/;"	l
f010af7d	obj/kern/kernel.asm	/^    f010af7d:	89 90 f8 02 00 00    	mov    %edx,0x2f8(%rax)$/;"	l
f010af83	obj/kern/kernel.asm	/^    f010af83:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010af8a	obj/kern/kernel.asm	/^    f010af8a:	00 00 00 $/;"	l
f010af8d	obj/kern/kernel.asm	/^    f010af8d:	c7 80 fc 02 00 00 00 	movl   $0x0,0x2fc(%rax)$/;"	l
f010af94	obj/kern/kernel.asm	/^    f010af94:	00 00 00 $/;"	l
f010af97	obj/kern/kernel.asm	/^    f010af97:	48 b8 3c c7 10 f0 00 	mov    $0xf010c73c,%rax$/;"	l
f010af9e	obj/kern/kernel.asm	/^    f010af9e:	00 00 00 $/;"	l
f010afa1	obj/kern/kernel.asm	/^    f010afa1:	89 c2                	mov    %eax,%edx$/;"	l
f010afa3	obj/kern/kernel.asm	/^    f010afa3:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010afaa	obj/kern/kernel.asm	/^    f010afaa:	00 00 00 $/;"	l
f010afad	obj/kern/kernel.asm	/^    f010afad:	66 89 90 00 03 00 00 	mov    %dx,0x300(%rax)$/;"	l
f010afb4	obj/kern/kernel.asm	/^    f010afb4:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010afbb	obj/kern/kernel.asm	/^    f010afbb:	00 00 00 $/;"	l
f010afbe	obj/kern/kernel.asm	/^    f010afbe:	66 c7 80 02 03 00 00 	movw   $0x8,0x302(%rax)$/;"	l
f010afc5	obj/kern/kernel.asm	/^    f010afc5:	08 00 $/;"	l
f010afc7	obj/kern/kernel.asm	/^    f010afc7:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010afce	obj/kern/kernel.asm	/^    f010afce:	00 00 00 $/;"	l
f010afd1	obj/kern/kernel.asm	/^    f010afd1:	0f b6 90 04 03 00 00 	movzbl 0x304(%rax),%edx$/;"	l
f010afd8	obj/kern/kernel.asm	/^    f010afd8:	83 e2 f8             	and    $0xfffffffffffffff8,%edx$/;"	l
f010afdb	obj/kern/kernel.asm	/^    f010afdb:	88 90 04 03 00 00    	mov    %dl,0x304(%rax)$/;"	l
f010afe1	obj/kern/kernel.asm	/^    f010afe1:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010afe8	obj/kern/kernel.asm	/^    f010afe8:	00 00 00 $/;"	l
f010afeb	obj/kern/kernel.asm	/^    f010afeb:	0f b6 90 04 03 00 00 	movzbl 0x304(%rax),%edx$/;"	l
f010aff2	obj/kern/kernel.asm	/^    f010aff2:	83 e2 07             	and    $0x7,%edx$/;"	l
f010aff5	obj/kern/kernel.asm	/^    f010aff5:	88 90 04 03 00 00    	mov    %dl,0x304(%rax)$/;"	l
f010affb	obj/kern/kernel.asm	/^    f010affb:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010b002	obj/kern/kernel.asm	/^    f010b002:	00 00 00 $/;"	l
f010b005	obj/kern/kernel.asm	/^    f010b005:	0f b6 90 05 03 00 00 	movzbl 0x305(%rax),%edx$/;"	l
f010b00c	obj/kern/kernel.asm	/^    f010b00c:	83 e2 f0             	and    $0xfffffffffffffff0,%edx$/;"	l
f010b00f	obj/kern/kernel.asm	/^    f010b00f:	83 ca 0e             	or     $0xe,%edx$/;"	l
f010b012	obj/kern/kernel.asm	/^    f010b012:	88 90 05 03 00 00    	mov    %dl,0x305(%rax)$/;"	l
f010b018	obj/kern/kernel.asm	/^    f010b018:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010b01f	obj/kern/kernel.asm	/^    f010b01f:	00 00 00 $/;"	l
f010b022	obj/kern/kernel.asm	/^    f010b022:	0f b6 90 05 03 00 00 	movzbl 0x305(%rax),%edx$/;"	l
f010b029	obj/kern/kernel.asm	/^    f010b029:	83 e2 ef             	and    $0xffffffffffffffef,%edx$/;"	l
f010b02c	obj/kern/kernel.asm	/^    f010b02c:	88 90 05 03 00 00    	mov    %dl,0x305(%rax)$/;"	l
f010b032	obj/kern/kernel.asm	/^    f010b032:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010b039	obj/kern/kernel.asm	/^    f010b039:	00 00 00 $/;"	l
f010b03c	obj/kern/kernel.asm	/^    f010b03c:	0f b6 90 05 03 00 00 	movzbl 0x305(%rax),%edx$/;"	l
f010b043	obj/kern/kernel.asm	/^    f010b043:	83 ca 60             	or     $0x60,%edx$/;"	l
f010b046	obj/kern/kernel.asm	/^    f010b046:	88 90 05 03 00 00    	mov    %dl,0x305(%rax)$/;"	l
f010b04c	obj/kern/kernel.asm	/^    f010b04c:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010b053	obj/kern/kernel.asm	/^    f010b053:	00 00 00 $/;"	l
f010b056	obj/kern/kernel.asm	/^    f010b056:	0f b6 90 05 03 00 00 	movzbl 0x305(%rax),%edx$/;"	l
f010b05d	obj/kern/kernel.asm	/^    f010b05d:	83 ca 80             	or     $0xffffffffffffff80,%edx$/;"	l
f010b060	obj/kern/kernel.asm	/^    f010b060:	88 90 05 03 00 00    	mov    %dl,0x305(%rax)$/;"	l
f010b066	obj/kern/kernel.asm	/^    f010b066:	48 b8 3c c7 10 f0 00 	mov    $0xf010c73c,%rax$/;"	l
f010b06d	obj/kern/kernel.asm	/^    f010b06d:	00 00 00 $/;"	l
f010b070	obj/kern/kernel.asm	/^    f010b070:	48 c1 e8 10          	shr    $0x10,%rax$/;"	l
f010b074	obj/kern/kernel.asm	/^    f010b074:	89 c2                	mov    %eax,%edx$/;"	l
f010b076	obj/kern/kernel.asm	/^    f010b076:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010b07d	obj/kern/kernel.asm	/^    f010b07d:	00 00 00 $/;"	l
f010b080	obj/kern/kernel.asm	/^    f010b080:	66 89 90 06 03 00 00 	mov    %dx,0x306(%rax)$/;"	l
f010b087	obj/kern/kernel.asm	/^    f010b087:	48 b8 3c c7 10 f0 00 	mov    $0xf010c73c,%rax$/;"	l
f010b08e	obj/kern/kernel.asm	/^    f010b08e:	00 00 00 $/;"	l
f010b091	obj/kern/kernel.asm	/^    f010b091:	48 c1 e8 20          	shr    $0x20,%rax$/;"	l
f010b095	obj/kern/kernel.asm	/^    f010b095:	89 c2                	mov    %eax,%edx$/;"	l
f010b097	obj/kern/kernel.asm	/^    f010b097:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010b09e	obj/kern/kernel.asm	/^    f010b09e:	00 00 00 $/;"	l
f010b0a1	obj/kern/kernel.asm	/^    f010b0a1:	89 90 08 03 00 00    	mov    %edx,0x308(%rax)$/;"	l
f010b0a7	obj/kern/kernel.asm	/^    f010b0a7:	48 b8 80 62 a2 f1 00 	mov    $0xf1a26280,%rax$/;"	l
f010b0ae	obj/kern/kernel.asm	/^    f010b0ae:	00 00 00 $/;"	l
f010b0b1	obj/kern/kernel.asm	/^    f010b0b1:	c7 80 0c 03 00 00 00 	movl   $0x0,0x30c(%rax)$/;"	l
f010b0b8	obj/kern/kernel.asm	/^    f010b0b8:	00 00 00 $/;"	l
f010b0bb	obj/kern/kernel.asm	/^    f010b0bb:	48 b8 c9 b0 10 f0 00 	mov    $0xf010b0c9,%rax$/;"	l
f010b0c2	obj/kern/kernel.asm	/^    f010b0c2:	00 00 00 $/;"	l
f010b0c5	obj/kern/kernel.asm	/^    f010b0c5:	ff d0                	callq  *%rax$/;"	l
f010b0c7	obj/kern/kernel.asm	/^    f010b0c7:	c9                   	leaveq $/;"	l
f010b0c8	obj/kern/kernel.asm	/^    f010b0c8:	c3                   	retq   $/;"	l
f010b0c9	obj/kern/kernel.asm	/^    f010b0c9:	55                   	push   %rbp$/;"	l
f010b0ca	obj/kern/kernel.asm	/^    f010b0ca:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010b0cd	obj/kern/kernel.asm	/^    f010b0cd:	53                   	push   %rbx$/;"	l
f010b0ce	obj/kern/kernel.asm	/^    f010b0ce:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
f010b0d2	obj/kern/kernel.asm	/^    f010b0d2:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f010b0d9	obj/kern/kernel.asm	/^    f010b0d9:	00 00 00 $/;"	l
f010b0dc	obj/kern/kernel.asm	/^    f010b0dc:	ff d0                	callq  *%rax$/;"	l
f010b0de	obj/kern/kernel.asm	/^    f010b0de:	48 98                	cltq   $/;"	l
f010b0e0	obj/kern/kernel.asm	/^    f010b0e0:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f010b0e4	obj/kern/kernel.asm	/^    f010b0e4:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010b0e7	obj/kern/kernel.asm	/^    f010b0e7:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f010b0eb	obj/kern/kernel.asm	/^    f010b0eb:	48 29 c2             	sub    %rax,%rdx$/;"	l
f010b0ee	obj/kern/kernel.asm	/^    f010b0ee:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f010b0f5	obj/kern/kernel.asm	/^    f010b0f5:	00 00 00 $/;"	l
f010b0f8	obj/kern/kernel.asm	/^    f010b0f8:	48 8d 1c 02          	lea    (%rdx,%rax,1),%rbx$/;"	l
f010b0fc	obj/kern/kernel.asm	/^    f010b0fc:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f010b103	obj/kern/kernel.asm	/^    f010b103:	00 00 00 $/;"	l
f010b106	obj/kern/kernel.asm	/^    f010b106:	ff d0                	callq  *%rax$/;"	l
f010b108	obj/kern/kernel.asm	/^    f010b108:	48 98                	cltq   $/;"	l
f010b10a	obj/kern/kernel.asm	/^    f010b10a:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f010b10e	obj/kern/kernel.asm	/^    f010b10e:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010b111	obj/kern/kernel.asm	/^    f010b111:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f010b115	obj/kern/kernel.asm	/^    f010b115:	48 29 c2             	sub    %rax,%rdx$/;"	l
f010b118	obj/kern/kernel.asm	/^    f010b118:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f010b11f	obj/kern/kernel.asm	/^    f010b11f:	00 00 00 $/;"	l
f010b122	obj/kern/kernel.asm	/^    f010b122:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010b126	obj/kern/kernel.asm	/^    f010b126:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f010b129	obj/kern/kernel.asm	/^    f010b129:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010b12c	obj/kern/kernel.asm	/^    f010b12c:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f010b12f	obj/kern/kernel.asm	/^    f010b12f:	f7 d8                	neg    %eax$/;"	l
f010b131	obj/kern/kernel.asm	/^    f010b131:	2d 00 00 00 10       	sub    $0x10000000,%eax$/;"	l
f010b136	obj/kern/kernel.asm	/^    f010b136:	89 c0                	mov    %eax,%eax$/;"	l
f010b138	obj/kern/kernel.asm	/^    f010b138:	48 89 43 14          	mov    %rax,0x14(%rbx)$/;"	l
f010b13c	obj/kern/kernel.asm	/^    f010b13c:	48 b8 68 06 13 f0 00 	mov    $0xf0130668,%rax$/;"	l
f010b143	obj/kern/kernel.asm	/^    f010b143:	00 00 00 $/;"	l
f010b146	obj/kern/kernel.asm	/^    f010b146:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010b149	obj/kern/kernel.asm	/^    f010b149:	48 c1 f8 10          	sar    $0x10,%rax$/;"	l
f010b14d	obj/kern/kernel.asm	/^    f010b14d:	48 8d 58 28          	lea    0x28(%rax),%rbx$/;"	l
f010b151	obj/kern/kernel.asm	/^    f010b151:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f010b158	obj/kern/kernel.asm	/^    f010b158:	00 00 00 $/;"	l
f010b15b	obj/kern/kernel.asm	/^    f010b15b:	ff d0                	callq  *%rax$/;"	l
f010b15d	obj/kern/kernel.asm	/^    f010b15d:	48 98                	cltq   $/;"	l
f010b15f	obj/kern/kernel.asm	/^    f010b15f:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f010b163	obj/kern/kernel.asm	/^    f010b163:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010b166	obj/kern/kernel.asm	/^    f010b166:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f010b16a	obj/kern/kernel.asm	/^    f010b16a:	48 29 c2             	sub    %rax,%rdx$/;"	l
f010b16d	obj/kern/kernel.asm	/^    f010b16d:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f010b174	obj/kern/kernel.asm	/^    f010b174:	00 00 00 $/;"	l
f010b177	obj/kern/kernel.asm	/^    f010b177:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010b17b	obj/kern/kernel.asm	/^    f010b17b:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f010b17e	obj/kern/kernel.asm	/^    f010b17e:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010b181	obj/kern/kernel.asm	/^    f010b181:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f010b184	obj/kern/kernel.asm	/^    f010b184:	48 98                	cltq   $/;"	l
f010b186	obj/kern/kernel.asm	/^    f010b186:	48 8d 04 03          	lea    (%rbx,%rax,1),%rax$/;"	l
f010b18a	obj/kern/kernel.asm	/^    f010b18a:	66 c7 00 68 00       	movw   $0x68,(%rax)$/;"	l
f010b18f	obj/kern/kernel.asm	/^    f010b18f:	48 b8 68 06 13 f0 00 	mov    $0xf0130668,%rax$/;"	l
f010b196	obj/kern/kernel.asm	/^    f010b196:	00 00 00 $/;"	l
f010b199	obj/kern/kernel.asm	/^    f010b199:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010b19c	obj/kern/kernel.asm	/^    f010b19c:	48 c1 f8 10          	sar    $0x10,%rax$/;"	l
f010b1a0	obj/kern/kernel.asm	/^    f010b1a0:	48 8d 58 28          	lea    0x28(%rax),%rbx$/;"	l
f010b1a4	obj/kern/kernel.asm	/^    f010b1a4:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f010b1ab	obj/kern/kernel.asm	/^    f010b1ab:	00 00 00 $/;"	l
f010b1ae	obj/kern/kernel.asm	/^    f010b1ae:	ff d0                	callq  *%rax$/;"	l
f010b1b0	obj/kern/kernel.asm	/^    f010b1b0:	48 98                	cltq   $/;"	l
f010b1b2	obj/kern/kernel.asm	/^    f010b1b2:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f010b1b6	obj/kern/kernel.asm	/^    f010b1b6:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010b1b9	obj/kern/kernel.asm	/^    f010b1b9:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f010b1bd	obj/kern/kernel.asm	/^    f010b1bd:	48 29 c2             	sub    %rax,%rdx$/;"	l
f010b1c0	obj/kern/kernel.asm	/^    f010b1c0:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f010b1c7	obj/kern/kernel.asm	/^    f010b1c7:	00 00 00 $/;"	l
f010b1ca	obj/kern/kernel.asm	/^    f010b1ca:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010b1ce	obj/kern/kernel.asm	/^    f010b1ce:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f010b1d1	obj/kern/kernel.asm	/^    f010b1d1:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010b1d4	obj/kern/kernel.asm	/^    f010b1d4:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f010b1d7	obj/kern/kernel.asm	/^    f010b1d7:	48 98                	cltq   $/;"	l
f010b1d9	obj/kern/kernel.asm	/^    f010b1d9:	48 8d 04 03          	lea    (%rbx,%rax,1),%rax$/;"	l
f010b1dd	obj/kern/kernel.asm	/^    f010b1dd:	48 89 c3             	mov    %rax,%rbx$/;"	l
f010b1e0	obj/kern/kernel.asm	/^    f010b1e0:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f010b1e7	obj/kern/kernel.asm	/^    f010b1e7:	00 00 00 $/;"	l
f010b1ea	obj/kern/kernel.asm	/^    f010b1ea:	ff d0                	callq  *%rax$/;"	l
f010b1ec	obj/kern/kernel.asm	/^    f010b1ec:	48 98                	cltq   $/;"	l
f010b1ee	obj/kern/kernel.asm	/^    f010b1ee:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f010b1f2	obj/kern/kernel.asm	/^    f010b1f2:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010b1f5	obj/kern/kernel.asm	/^    f010b1f5:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f010b1f9	obj/kern/kernel.asm	/^    f010b1f9:	48 29 c2             	sub    %rax,%rdx$/;"	l
f010b1fc	obj/kern/kernel.asm	/^    f010b1fc:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f010b203	obj/kern/kernel.asm	/^    f010b203:	00 00 00 $/;"	l
f010b206	obj/kern/kernel.asm	/^    f010b206:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010b20a	obj/kern/kernel.asm	/^    f010b20a:	48 83 c0 10          	add    $0x10,%rax$/;"	l
f010b20e	obj/kern/kernel.asm	/^    f010b20e:	66 89 43 02          	mov    %ax,0x2(%rbx)$/;"	l
f010b212	obj/kern/kernel.asm	/^    f010b212:	48 b8 68 06 13 f0 00 	mov    $0xf0130668,%rax$/;"	l
f010b219	obj/kern/kernel.asm	/^    f010b219:	00 00 00 $/;"	l
f010b21c	obj/kern/kernel.asm	/^    f010b21c:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010b21f	obj/kern/kernel.asm	/^    f010b21f:	48 c1 f8 10          	sar    $0x10,%rax$/;"	l
f010b223	obj/kern/kernel.asm	/^    f010b223:	48 8d 58 28          	lea    0x28(%rax),%rbx$/;"	l
f010b227	obj/kern/kernel.asm	/^    f010b227:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f010b22e	obj/kern/kernel.asm	/^    f010b22e:	00 00 00 $/;"	l
f010b231	obj/kern/kernel.asm	/^    f010b231:	ff d0                	callq  *%rax$/;"	l
f010b233	obj/kern/kernel.asm	/^    f010b233:	48 98                	cltq   $/;"	l
f010b235	obj/kern/kernel.asm	/^    f010b235:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f010b239	obj/kern/kernel.asm	/^    f010b239:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010b23c	obj/kern/kernel.asm	/^    f010b23c:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f010b240	obj/kern/kernel.asm	/^    f010b240:	48 29 c2             	sub    %rax,%rdx$/;"	l
f010b243	obj/kern/kernel.asm	/^    f010b243:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f010b24a	obj/kern/kernel.asm	/^    f010b24a:	00 00 00 $/;"	l
f010b24d	obj/kern/kernel.asm	/^    f010b24d:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010b251	obj/kern/kernel.asm	/^    f010b251:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f010b254	obj/kern/kernel.asm	/^    f010b254:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010b257	obj/kern/kernel.asm	/^    f010b257:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f010b25a	obj/kern/kernel.asm	/^    f010b25a:	48 98                	cltq   $/;"	l
f010b25c	obj/kern/kernel.asm	/^    f010b25c:	48 8d 04 03          	lea    (%rbx,%rax,1),%rax$/;"	l
f010b260	obj/kern/kernel.asm	/^    f010b260:	48 89 c3             	mov    %rax,%rbx$/;"	l
f010b263	obj/kern/kernel.asm	/^    f010b263:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f010b26a	obj/kern/kernel.asm	/^    f010b26a:	00 00 00 $/;"	l
f010b26d	obj/kern/kernel.asm	/^    f010b26d:	ff d0                	callq  *%rax$/;"	l
f010b26f	obj/kern/kernel.asm	/^    f010b26f:	48 98                	cltq   $/;"	l
f010b271	obj/kern/kernel.asm	/^    f010b271:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f010b275	obj/kern/kernel.asm	/^    f010b275:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010b278	obj/kern/kernel.asm	/^    f010b278:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f010b27c	obj/kern/kernel.asm	/^    f010b27c:	48 29 c2             	sub    %rax,%rdx$/;"	l
f010b27f	obj/kern/kernel.asm	/^    f010b27f:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f010b286	obj/kern/kernel.asm	/^    f010b286:	00 00 00 $/;"	l
f010b289	obj/kern/kernel.asm	/^    f010b289:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010b28d	obj/kern/kernel.asm	/^    f010b28d:	48 83 c0 10          	add    $0x10,%rax$/;"	l
f010b291	obj/kern/kernel.asm	/^    f010b291:	48 c1 e8 10          	shr    $0x10,%rax$/;"	l
f010b295	obj/kern/kernel.asm	/^    f010b295:	88 43 04             	mov    %al,0x4(%rbx)$/;"	l
f010b298	obj/kern/kernel.asm	/^    f010b298:	48 b8 68 06 13 f0 00 	mov    $0xf0130668,%rax$/;"	l
f010b29f	obj/kern/kernel.asm	/^    f010b29f:	00 00 00 $/;"	l
f010b2a2	obj/kern/kernel.asm	/^    f010b2a2:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010b2a5	obj/kern/kernel.asm	/^    f010b2a5:	48 c1 f8 10          	sar    $0x10,%rax$/;"	l
f010b2a9	obj/kern/kernel.asm	/^    f010b2a9:	48 8d 58 28          	lea    0x28(%rax),%rbx$/;"	l
f010b2ad	obj/kern/kernel.asm	/^    f010b2ad:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f010b2b4	obj/kern/kernel.asm	/^    f010b2b4:	00 00 00 $/;"	l
f010b2b7	obj/kern/kernel.asm	/^    f010b2b7:	ff d0                	callq  *%rax$/;"	l
f010b2b9	obj/kern/kernel.asm	/^    f010b2b9:	48 98                	cltq   $/;"	l
f010b2bb	obj/kern/kernel.asm	/^    f010b2bb:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f010b2bf	obj/kern/kernel.asm	/^    f010b2bf:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010b2c2	obj/kern/kernel.asm	/^    f010b2c2:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f010b2c6	obj/kern/kernel.asm	/^    f010b2c6:	48 29 c2             	sub    %rax,%rdx$/;"	l
f010b2c9	obj/kern/kernel.asm	/^    f010b2c9:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f010b2d0	obj/kern/kernel.asm	/^    f010b2d0:	00 00 00 $/;"	l
f010b2d3	obj/kern/kernel.asm	/^    f010b2d3:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010b2d7	obj/kern/kernel.asm	/^    f010b2d7:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f010b2da	obj/kern/kernel.asm	/^    f010b2da:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010b2dd	obj/kern/kernel.asm	/^    f010b2dd:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f010b2e0	obj/kern/kernel.asm	/^    f010b2e0:	48 98                	cltq   $/;"	l
f010b2e2	obj/kern/kernel.asm	/^    f010b2e2:	48 8d 04 03          	lea    (%rbx,%rax,1),%rax$/;"	l
f010b2e6	obj/kern/kernel.asm	/^    f010b2e6:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
f010b2ea	obj/kern/kernel.asm	/^    f010b2ea:	83 e2 f0             	and    $0xfffffffffffffff0,%edx$/;"	l
f010b2ed	obj/kern/kernel.asm	/^    f010b2ed:	83 ca 09             	or     $0x9,%edx$/;"	l
f010b2f0	obj/kern/kernel.asm	/^    f010b2f0:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
f010b2f3	obj/kern/kernel.asm	/^    f010b2f3:	48 b8 68 06 13 f0 00 	mov    $0xf0130668,%rax$/;"	l
f010b2fa	obj/kern/kernel.asm	/^    f010b2fa:	00 00 00 $/;"	l
f010b2fd	obj/kern/kernel.asm	/^    f010b2fd:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010b300	obj/kern/kernel.asm	/^    f010b300:	48 c1 f8 10          	sar    $0x10,%rax$/;"	l
f010b304	obj/kern/kernel.asm	/^    f010b304:	48 8d 58 28          	lea    0x28(%rax),%rbx$/;"	l
f010b308	obj/kern/kernel.asm	/^    f010b308:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f010b30f	obj/kern/kernel.asm	/^    f010b30f:	00 00 00 $/;"	l
f010b312	obj/kern/kernel.asm	/^    f010b312:	ff d0                	callq  *%rax$/;"	l
f010b314	obj/kern/kernel.asm	/^    f010b314:	48 98                	cltq   $/;"	l
f010b316	obj/kern/kernel.asm	/^    f010b316:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f010b31a	obj/kern/kernel.asm	/^    f010b31a:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010b31d	obj/kern/kernel.asm	/^    f010b31d:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f010b321	obj/kern/kernel.asm	/^    f010b321:	48 29 c2             	sub    %rax,%rdx$/;"	l
f010b324	obj/kern/kernel.asm	/^    f010b324:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f010b32b	obj/kern/kernel.asm	/^    f010b32b:	00 00 00 $/;"	l
f010b32e	obj/kern/kernel.asm	/^    f010b32e:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010b332	obj/kern/kernel.asm	/^    f010b332:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f010b335	obj/kern/kernel.asm	/^    f010b335:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010b338	obj/kern/kernel.asm	/^    f010b338:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f010b33b	obj/kern/kernel.asm	/^    f010b33b:	48 98                	cltq   $/;"	l
f010b33d	obj/kern/kernel.asm	/^    f010b33d:	48 8d 04 03          	lea    (%rbx,%rax,1),%rax$/;"	l
f010b341	obj/kern/kernel.asm	/^    f010b341:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
f010b345	obj/kern/kernel.asm	/^    f010b345:	83 e2 ef             	and    $0xffffffffffffffef,%edx$/;"	l
f010b348	obj/kern/kernel.asm	/^    f010b348:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
f010b34b	obj/kern/kernel.asm	/^    f010b34b:	48 b8 68 06 13 f0 00 	mov    $0xf0130668,%rax$/;"	l
f010b352	obj/kern/kernel.asm	/^    f010b352:	00 00 00 $/;"	l
f010b355	obj/kern/kernel.asm	/^    f010b355:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010b358	obj/kern/kernel.asm	/^    f010b358:	48 c1 f8 10          	sar    $0x10,%rax$/;"	l
f010b35c	obj/kern/kernel.asm	/^    f010b35c:	48 8d 58 28          	lea    0x28(%rax),%rbx$/;"	l
f010b360	obj/kern/kernel.asm	/^    f010b360:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f010b367	obj/kern/kernel.asm	/^    f010b367:	00 00 00 $/;"	l
f010b36a	obj/kern/kernel.asm	/^    f010b36a:	ff d0                	callq  *%rax$/;"	l
f010b36c	obj/kern/kernel.asm	/^    f010b36c:	48 98                	cltq   $/;"	l
f010b36e	obj/kern/kernel.asm	/^    f010b36e:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f010b372	obj/kern/kernel.asm	/^    f010b372:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010b375	obj/kern/kernel.asm	/^    f010b375:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f010b379	obj/kern/kernel.asm	/^    f010b379:	48 29 c2             	sub    %rax,%rdx$/;"	l
f010b37c	obj/kern/kernel.asm	/^    f010b37c:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f010b383	obj/kern/kernel.asm	/^    f010b383:	00 00 00 $/;"	l
f010b386	obj/kern/kernel.asm	/^    f010b386:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010b38a	obj/kern/kernel.asm	/^    f010b38a:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f010b38d	obj/kern/kernel.asm	/^    f010b38d:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010b390	obj/kern/kernel.asm	/^    f010b390:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f010b393	obj/kern/kernel.asm	/^    f010b393:	48 98                	cltq   $/;"	l
f010b395	obj/kern/kernel.asm	/^    f010b395:	48 8d 04 03          	lea    (%rbx,%rax,1),%rax$/;"	l
f010b399	obj/kern/kernel.asm	/^    f010b399:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
f010b39d	obj/kern/kernel.asm	/^    f010b39d:	83 e2 9f             	and    $0xffffffffffffff9f,%edx$/;"	l
f010b3a0	obj/kern/kernel.asm	/^    f010b3a0:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
f010b3a3	obj/kern/kernel.asm	/^    f010b3a3:	48 b8 68 06 13 f0 00 	mov    $0xf0130668,%rax$/;"	l
f010b3aa	obj/kern/kernel.asm	/^    f010b3aa:	00 00 00 $/;"	l
f010b3ad	obj/kern/kernel.asm	/^    f010b3ad:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010b3b0	obj/kern/kernel.asm	/^    f010b3b0:	48 c1 f8 10          	sar    $0x10,%rax$/;"	l
f010b3b4	obj/kern/kernel.asm	/^    f010b3b4:	48 8d 58 28          	lea    0x28(%rax),%rbx$/;"	l
f010b3b8	obj/kern/kernel.asm	/^    f010b3b8:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f010b3bf	obj/kern/kernel.asm	/^    f010b3bf:	00 00 00 $/;"	l
f010b3c2	obj/kern/kernel.asm	/^    f010b3c2:	ff d0                	callq  *%rax$/;"	l
f010b3c4	obj/kern/kernel.asm	/^    f010b3c4:	48 98                	cltq   $/;"	l
f010b3c6	obj/kern/kernel.asm	/^    f010b3c6:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f010b3ca	obj/kern/kernel.asm	/^    f010b3ca:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010b3cd	obj/kern/kernel.asm	/^    f010b3cd:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f010b3d1	obj/kern/kernel.asm	/^    f010b3d1:	48 29 c2             	sub    %rax,%rdx$/;"	l
f010b3d4	obj/kern/kernel.asm	/^    f010b3d4:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f010b3db	obj/kern/kernel.asm	/^    f010b3db:	00 00 00 $/;"	l
f010b3de	obj/kern/kernel.asm	/^    f010b3de:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010b3e2	obj/kern/kernel.asm	/^    f010b3e2:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f010b3e5	obj/kern/kernel.asm	/^    f010b3e5:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010b3e8	obj/kern/kernel.asm	/^    f010b3e8:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f010b3eb	obj/kern/kernel.asm	/^    f010b3eb:	48 98                	cltq   $/;"	l
f010b3ed	obj/kern/kernel.asm	/^    f010b3ed:	48 8d 04 03          	lea    (%rbx,%rax,1),%rax$/;"	l
f010b3f1	obj/kern/kernel.asm	/^    f010b3f1:	0f b6 50 05          	movzbl 0x5(%rax),%edx$/;"	l
f010b3f5	obj/kern/kernel.asm	/^    f010b3f5:	83 ca 80             	or     $0xffffffffffffff80,%edx$/;"	l
f010b3f8	obj/kern/kernel.asm	/^    f010b3f8:	88 50 05             	mov    %dl,0x5(%rax)$/;"	l
f010b3fb	obj/kern/kernel.asm	/^    f010b3fb:	48 b8 68 06 13 f0 00 	mov    $0xf0130668,%rax$/;"	l
f010b402	obj/kern/kernel.asm	/^    f010b402:	00 00 00 $/;"	l
f010b405	obj/kern/kernel.asm	/^    f010b405:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010b408	obj/kern/kernel.asm	/^    f010b408:	48 c1 f8 10          	sar    $0x10,%rax$/;"	l
f010b40c	obj/kern/kernel.asm	/^    f010b40c:	48 8d 58 28          	lea    0x28(%rax),%rbx$/;"	l
f010b410	obj/kern/kernel.asm	/^    f010b410:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f010b417	obj/kern/kernel.asm	/^    f010b417:	00 00 00 $/;"	l
f010b41a	obj/kern/kernel.asm	/^    f010b41a:	ff d0                	callq  *%rax$/;"	l
f010b41c	obj/kern/kernel.asm	/^    f010b41c:	48 98                	cltq   $/;"	l
f010b41e	obj/kern/kernel.asm	/^    f010b41e:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f010b422	obj/kern/kernel.asm	/^    f010b422:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010b425	obj/kern/kernel.asm	/^    f010b425:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f010b429	obj/kern/kernel.asm	/^    f010b429:	48 29 c2             	sub    %rax,%rdx$/;"	l
f010b42c	obj/kern/kernel.asm	/^    f010b42c:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f010b433	obj/kern/kernel.asm	/^    f010b433:	00 00 00 $/;"	l
f010b436	obj/kern/kernel.asm	/^    f010b436:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010b43a	obj/kern/kernel.asm	/^    f010b43a:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f010b43d	obj/kern/kernel.asm	/^    f010b43d:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010b440	obj/kern/kernel.asm	/^    f010b440:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f010b443	obj/kern/kernel.asm	/^    f010b443:	48 98                	cltq   $/;"	l
f010b445	obj/kern/kernel.asm	/^    f010b445:	48 8d 04 03          	lea    (%rbx,%rax,1),%rax$/;"	l
f010b449	obj/kern/kernel.asm	/^    f010b449:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
f010b44d	obj/kern/kernel.asm	/^    f010b44d:	83 e2 f0             	and    $0xfffffffffffffff0,%edx$/;"	l
f010b450	obj/kern/kernel.asm	/^    f010b450:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
f010b453	obj/kern/kernel.asm	/^    f010b453:	48 b8 68 06 13 f0 00 	mov    $0xf0130668,%rax$/;"	l
f010b45a	obj/kern/kernel.asm	/^    f010b45a:	00 00 00 $/;"	l
f010b45d	obj/kern/kernel.asm	/^    f010b45d:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010b460	obj/kern/kernel.asm	/^    f010b460:	48 c1 f8 10          	sar    $0x10,%rax$/;"	l
f010b464	obj/kern/kernel.asm	/^    f010b464:	48 8d 58 28          	lea    0x28(%rax),%rbx$/;"	l
f010b468	obj/kern/kernel.asm	/^    f010b468:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f010b46f	obj/kern/kernel.asm	/^    f010b46f:	00 00 00 $/;"	l
f010b472	obj/kern/kernel.asm	/^    f010b472:	ff d0                	callq  *%rax$/;"	l
f010b474	obj/kern/kernel.asm	/^    f010b474:	48 98                	cltq   $/;"	l
f010b476	obj/kern/kernel.asm	/^    f010b476:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f010b47a	obj/kern/kernel.asm	/^    f010b47a:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010b47d	obj/kern/kernel.asm	/^    f010b47d:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f010b481	obj/kern/kernel.asm	/^    f010b481:	48 29 c2             	sub    %rax,%rdx$/;"	l
f010b484	obj/kern/kernel.asm	/^    f010b484:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f010b48b	obj/kern/kernel.asm	/^    f010b48b:	00 00 00 $/;"	l
f010b48e	obj/kern/kernel.asm	/^    f010b48e:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010b492	obj/kern/kernel.asm	/^    f010b492:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f010b495	obj/kern/kernel.asm	/^    f010b495:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010b498	obj/kern/kernel.asm	/^    f010b498:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f010b49b	obj/kern/kernel.asm	/^    f010b49b:	48 98                	cltq   $/;"	l
f010b49d	obj/kern/kernel.asm	/^    f010b49d:	48 8d 04 03          	lea    (%rbx,%rax,1),%rax$/;"	l
f010b4a1	obj/kern/kernel.asm	/^    f010b4a1:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
f010b4a5	obj/kern/kernel.asm	/^    f010b4a5:	83 e2 ef             	and    $0xffffffffffffffef,%edx$/;"	l
f010b4a8	obj/kern/kernel.asm	/^    f010b4a8:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
f010b4ab	obj/kern/kernel.asm	/^    f010b4ab:	48 b8 68 06 13 f0 00 	mov    $0xf0130668,%rax$/;"	l
f010b4b2	obj/kern/kernel.asm	/^    f010b4b2:	00 00 00 $/;"	l
f010b4b5	obj/kern/kernel.asm	/^    f010b4b5:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010b4b8	obj/kern/kernel.asm	/^    f010b4b8:	48 c1 f8 10          	sar    $0x10,%rax$/;"	l
f010b4bc	obj/kern/kernel.asm	/^    f010b4bc:	48 8d 58 28          	lea    0x28(%rax),%rbx$/;"	l
f010b4c0	obj/kern/kernel.asm	/^    f010b4c0:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f010b4c7	obj/kern/kernel.asm	/^    f010b4c7:	00 00 00 $/;"	l
f010b4ca	obj/kern/kernel.asm	/^    f010b4ca:	ff d0                	callq  *%rax$/;"	l
f010b4cc	obj/kern/kernel.asm	/^    f010b4cc:	48 98                	cltq   $/;"	l
f010b4ce	obj/kern/kernel.asm	/^    f010b4ce:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f010b4d2	obj/kern/kernel.asm	/^    f010b4d2:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010b4d5	obj/kern/kernel.asm	/^    f010b4d5:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f010b4d9	obj/kern/kernel.asm	/^    f010b4d9:	48 29 c2             	sub    %rax,%rdx$/;"	l
f010b4dc	obj/kern/kernel.asm	/^    f010b4dc:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f010b4e3	obj/kern/kernel.asm	/^    f010b4e3:	00 00 00 $/;"	l
f010b4e6	obj/kern/kernel.asm	/^    f010b4e6:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010b4ea	obj/kern/kernel.asm	/^    f010b4ea:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f010b4ed	obj/kern/kernel.asm	/^    f010b4ed:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010b4f0	obj/kern/kernel.asm	/^    f010b4f0:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f010b4f3	obj/kern/kernel.asm	/^    f010b4f3:	48 98                	cltq   $/;"	l
f010b4f5	obj/kern/kernel.asm	/^    f010b4f5:	48 8d 04 03          	lea    (%rbx,%rax,1),%rax$/;"	l
f010b4f9	obj/kern/kernel.asm	/^    f010b4f9:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
f010b4fd	obj/kern/kernel.asm	/^    f010b4fd:	83 e2 9f             	and    $0xffffffffffffff9f,%edx$/;"	l
f010b500	obj/kern/kernel.asm	/^    f010b500:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
f010b503	obj/kern/kernel.asm	/^    f010b503:	48 b8 68 06 13 f0 00 	mov    $0xf0130668,%rax$/;"	l
f010b50a	obj/kern/kernel.asm	/^    f010b50a:	00 00 00 $/;"	l
f010b50d	obj/kern/kernel.asm	/^    f010b50d:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010b510	obj/kern/kernel.asm	/^    f010b510:	48 c1 f8 10          	sar    $0x10,%rax$/;"	l
f010b514	obj/kern/kernel.asm	/^    f010b514:	48 8d 58 28          	lea    0x28(%rax),%rbx$/;"	l
f010b518	obj/kern/kernel.asm	/^    f010b518:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f010b51f	obj/kern/kernel.asm	/^    f010b51f:	00 00 00 $/;"	l
f010b522	obj/kern/kernel.asm	/^    f010b522:	ff d0                	callq  *%rax$/;"	l
f010b524	obj/kern/kernel.asm	/^    f010b524:	48 98                	cltq   $/;"	l
f010b526	obj/kern/kernel.asm	/^    f010b526:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f010b52a	obj/kern/kernel.asm	/^    f010b52a:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010b52d	obj/kern/kernel.asm	/^    f010b52d:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f010b531	obj/kern/kernel.asm	/^    f010b531:	48 29 c2             	sub    %rax,%rdx$/;"	l
f010b534	obj/kern/kernel.asm	/^    f010b534:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f010b53b	obj/kern/kernel.asm	/^    f010b53b:	00 00 00 $/;"	l
f010b53e	obj/kern/kernel.asm	/^    f010b53e:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010b542	obj/kern/kernel.asm	/^    f010b542:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f010b545	obj/kern/kernel.asm	/^    f010b545:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010b548	obj/kern/kernel.asm	/^    f010b548:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f010b54b	obj/kern/kernel.asm	/^    f010b54b:	48 98                	cltq   $/;"	l
f010b54d	obj/kern/kernel.asm	/^    f010b54d:	48 8d 04 03          	lea    (%rbx,%rax,1),%rax$/;"	l
f010b551	obj/kern/kernel.asm	/^    f010b551:	0f b6 50 06          	movzbl 0x6(%rax),%edx$/;"	l
f010b555	obj/kern/kernel.asm	/^    f010b555:	83 e2 7f             	and    $0x7f,%edx$/;"	l
f010b558	obj/kern/kernel.asm	/^    f010b558:	88 50 06             	mov    %dl,0x6(%rax)$/;"	l
f010b55b	obj/kern/kernel.asm	/^    f010b55b:	48 b8 68 06 13 f0 00 	mov    $0xf0130668,%rax$/;"	l
f010b562	obj/kern/kernel.asm	/^    f010b562:	00 00 00 $/;"	l
f010b565	obj/kern/kernel.asm	/^    f010b565:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010b568	obj/kern/kernel.asm	/^    f010b568:	48 c1 f8 10          	sar    $0x10,%rax$/;"	l
f010b56c	obj/kern/kernel.asm	/^    f010b56c:	48 8d 58 28          	lea    0x28(%rax),%rbx$/;"	l
f010b570	obj/kern/kernel.asm	/^    f010b570:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f010b577	obj/kern/kernel.asm	/^    f010b577:	00 00 00 $/;"	l
f010b57a	obj/kern/kernel.asm	/^    f010b57a:	ff d0                	callq  *%rax$/;"	l
f010b57c	obj/kern/kernel.asm	/^    f010b57c:	48 98                	cltq   $/;"	l
f010b57e	obj/kern/kernel.asm	/^    f010b57e:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f010b582	obj/kern/kernel.asm	/^    f010b582:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010b585	obj/kern/kernel.asm	/^    f010b585:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f010b589	obj/kern/kernel.asm	/^    f010b589:	48 29 c2             	sub    %rax,%rdx$/;"	l
f010b58c	obj/kern/kernel.asm	/^    f010b58c:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f010b593	obj/kern/kernel.asm	/^    f010b593:	00 00 00 $/;"	l
f010b596	obj/kern/kernel.asm	/^    f010b596:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010b59a	obj/kern/kernel.asm	/^    f010b59a:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f010b59d	obj/kern/kernel.asm	/^    f010b59d:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010b5a0	obj/kern/kernel.asm	/^    f010b5a0:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f010b5a3	obj/kern/kernel.asm	/^    f010b5a3:	48 98                	cltq   $/;"	l
f010b5a5	obj/kern/kernel.asm	/^    f010b5a5:	48 8d 04 03          	lea    (%rbx,%rax,1),%rax$/;"	l
f010b5a9	obj/kern/kernel.asm	/^    f010b5a9:	48 89 c3             	mov    %rax,%rbx$/;"	l
f010b5ac	obj/kern/kernel.asm	/^    f010b5ac:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f010b5b3	obj/kern/kernel.asm	/^    f010b5b3:	00 00 00 $/;"	l
f010b5b6	obj/kern/kernel.asm	/^    f010b5b6:	ff d0                	callq  *%rax$/;"	l
f010b5b8	obj/kern/kernel.asm	/^    f010b5b8:	48 98                	cltq   $/;"	l
f010b5ba	obj/kern/kernel.asm	/^    f010b5ba:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f010b5be	obj/kern/kernel.asm	/^    f010b5be:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010b5c1	obj/kern/kernel.asm	/^    f010b5c1:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f010b5c5	obj/kern/kernel.asm	/^    f010b5c5:	48 29 c2             	sub    %rax,%rdx$/;"	l
f010b5c8	obj/kern/kernel.asm	/^    f010b5c8:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f010b5cf	obj/kern/kernel.asm	/^    f010b5cf:	00 00 00 $/;"	l
f010b5d2	obj/kern/kernel.asm	/^    f010b5d2:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010b5d6	obj/kern/kernel.asm	/^    f010b5d6:	48 83 c0 10          	add    $0x10,%rax$/;"	l
f010b5da	obj/kern/kernel.asm	/^    f010b5da:	48 c1 e8 18          	shr    $0x18,%rax$/;"	l
f010b5de	obj/kern/kernel.asm	/^    f010b5de:	88 43 07             	mov    %al,0x7(%rbx)$/;"	l
f010b5e1	obj/kern/kernel.asm	/^    f010b5e1:	48 b8 68 06 13 f0 00 	mov    $0xf0130668,%rax$/;"	l
f010b5e8	obj/kern/kernel.asm	/^    f010b5e8:	00 00 00 $/;"	l
f010b5eb	obj/kern/kernel.asm	/^    f010b5eb:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010b5ee	obj/kern/kernel.asm	/^    f010b5ee:	48 c1 f8 10          	sar    $0x10,%rax$/;"	l
f010b5f2	obj/kern/kernel.asm	/^    f010b5f2:	48 8d 58 28          	lea    0x28(%rax),%rbx$/;"	l
f010b5f6	obj/kern/kernel.asm	/^    f010b5f6:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f010b5fd	obj/kern/kernel.asm	/^    f010b5fd:	00 00 00 $/;"	l
f010b600	obj/kern/kernel.asm	/^    f010b600:	ff d0                	callq  *%rax$/;"	l
f010b602	obj/kern/kernel.asm	/^    f010b602:	48 98                	cltq   $/;"	l
f010b604	obj/kern/kernel.asm	/^    f010b604:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f010b608	obj/kern/kernel.asm	/^    f010b608:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010b60b	obj/kern/kernel.asm	/^    f010b60b:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f010b60f	obj/kern/kernel.asm	/^    f010b60f:	48 29 c2             	sub    %rax,%rdx$/;"	l
f010b612	obj/kern/kernel.asm	/^    f010b612:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f010b619	obj/kern/kernel.asm	/^    f010b619:	00 00 00 $/;"	l
f010b61c	obj/kern/kernel.asm	/^    f010b61c:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010b620	obj/kern/kernel.asm	/^    f010b620:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f010b623	obj/kern/kernel.asm	/^    f010b623:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010b626	obj/kern/kernel.asm	/^    f010b626:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f010b629	obj/kern/kernel.asm	/^    f010b629:	48 98                	cltq   $/;"	l
f010b62b	obj/kern/kernel.asm	/^    f010b62b:	48 8d 04 03          	lea    (%rbx,%rax,1),%rax$/;"	l
f010b62f	obj/kern/kernel.asm	/^    f010b62f:	48 89 c3             	mov    %rax,%rbx$/;"	l
f010b632	obj/kern/kernel.asm	/^    f010b632:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f010b639	obj/kern/kernel.asm	/^    f010b639:	00 00 00 $/;"	l
f010b63c	obj/kern/kernel.asm	/^    f010b63c:	ff d0                	callq  *%rax$/;"	l
f010b63e	obj/kern/kernel.asm	/^    f010b63e:	48 98                	cltq   $/;"	l
f010b640	obj/kern/kernel.asm	/^    f010b640:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f010b644	obj/kern/kernel.asm	/^    f010b644:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010b647	obj/kern/kernel.asm	/^    f010b647:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f010b64b	obj/kern/kernel.asm	/^    f010b64b:	48 29 c2             	sub    %rax,%rdx$/;"	l
f010b64e	obj/kern/kernel.asm	/^    f010b64e:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f010b655	obj/kern/kernel.asm	/^    f010b655:	00 00 00 $/;"	l
f010b658	obj/kern/kernel.asm	/^    f010b658:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010b65c	obj/kern/kernel.asm	/^    f010b65c:	48 83 c0 10          	add    $0x10,%rax$/;"	l
f010b660	obj/kern/kernel.asm	/^    f010b660:	48 c1 e8 20          	shr    $0x20,%rax$/;"	l
f010b664	obj/kern/kernel.asm	/^    f010b664:	89 43 08             	mov    %eax,0x8(%rbx)$/;"	l
f010b667	obj/kern/kernel.asm	/^    f010b667:	48 b8 68 06 13 f0 00 	mov    $0xf0130668,%rax$/;"	l
f010b66e	obj/kern/kernel.asm	/^    f010b66e:	00 00 00 $/;"	l
f010b671	obj/kern/kernel.asm	/^    f010b671:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010b674	obj/kern/kernel.asm	/^    f010b674:	48 c1 f8 10          	sar    $0x10,%rax$/;"	l
f010b678	obj/kern/kernel.asm	/^    f010b678:	48 8d 58 28          	lea    0x28(%rax),%rbx$/;"	l
f010b67c	obj/kern/kernel.asm	/^    f010b67c:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f010b683	obj/kern/kernel.asm	/^    f010b683:	00 00 00 $/;"	l
f010b686	obj/kern/kernel.asm	/^    f010b686:	ff d0                	callq  *%rax$/;"	l
f010b688	obj/kern/kernel.asm	/^    f010b688:	48 98                	cltq   $/;"	l
f010b68a	obj/kern/kernel.asm	/^    f010b68a:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f010b68e	obj/kern/kernel.asm	/^    f010b68e:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010b691	obj/kern/kernel.asm	/^    f010b691:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f010b695	obj/kern/kernel.asm	/^    f010b695:	48 29 c2             	sub    %rax,%rdx$/;"	l
f010b698	obj/kern/kernel.asm	/^    f010b698:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f010b69f	obj/kern/kernel.asm	/^    f010b69f:	00 00 00 $/;"	l
f010b6a2	obj/kern/kernel.asm	/^    f010b6a2:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010b6a6	obj/kern/kernel.asm	/^    f010b6a6:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f010b6a9	obj/kern/kernel.asm	/^    f010b6a9:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010b6ac	obj/kern/kernel.asm	/^    f010b6ac:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f010b6af	obj/kern/kernel.asm	/^    f010b6af:	48 98                	cltq   $/;"	l
f010b6b1	obj/kern/kernel.asm	/^    f010b6b1:	48 8d 04 03          	lea    (%rbx,%rax,1),%rax$/;"	l
f010b6b5	obj/kern/kernel.asm	/^    f010b6b5:	c6 40 0c 00          	movb   $0x0,0xc(%rax)$/;"	l
f010b6b9	obj/kern/kernel.asm	/^    f010b6b9:	48 b8 68 06 13 f0 00 	mov    $0xf0130668,%rax$/;"	l
f010b6c0	obj/kern/kernel.asm	/^    f010b6c0:	00 00 00 $/;"	l
f010b6c3	obj/kern/kernel.asm	/^    f010b6c3:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010b6c6	obj/kern/kernel.asm	/^    f010b6c6:	48 c1 f8 10          	sar    $0x10,%rax$/;"	l
f010b6ca	obj/kern/kernel.asm	/^    f010b6ca:	48 8d 58 28          	lea    0x28(%rax),%rbx$/;"	l
f010b6ce	obj/kern/kernel.asm	/^    f010b6ce:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f010b6d5	obj/kern/kernel.asm	/^    f010b6d5:	00 00 00 $/;"	l
f010b6d8	obj/kern/kernel.asm	/^    f010b6d8:	ff d0                	callq  *%rax$/;"	l
f010b6da	obj/kern/kernel.asm	/^    f010b6da:	48 98                	cltq   $/;"	l
f010b6dc	obj/kern/kernel.asm	/^    f010b6dc:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f010b6e0	obj/kern/kernel.asm	/^    f010b6e0:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010b6e3	obj/kern/kernel.asm	/^    f010b6e3:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f010b6e7	obj/kern/kernel.asm	/^    f010b6e7:	48 29 c2             	sub    %rax,%rdx$/;"	l
f010b6ea	obj/kern/kernel.asm	/^    f010b6ea:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f010b6f1	obj/kern/kernel.asm	/^    f010b6f1:	00 00 00 $/;"	l
f010b6f4	obj/kern/kernel.asm	/^    f010b6f4:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010b6f8	obj/kern/kernel.asm	/^    f010b6f8:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f010b6fb	obj/kern/kernel.asm	/^    f010b6fb:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010b6fe	obj/kern/kernel.asm	/^    f010b6fe:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f010b701	obj/kern/kernel.asm	/^    f010b701:	48 98                	cltq   $/;"	l
f010b703	obj/kern/kernel.asm	/^    f010b703:	48 8d 04 03          	lea    (%rbx,%rax,1),%rax$/;"	l
f010b707	obj/kern/kernel.asm	/^    f010b707:	c6 40 0d 00          	movb   $0x0,0xd(%rax)$/;"	l
f010b70b	obj/kern/kernel.asm	/^    f010b70b:	48 b8 68 06 13 f0 00 	mov    $0xf0130668,%rax$/;"	l
f010b712	obj/kern/kernel.asm	/^    f010b712:	00 00 00 $/;"	l
f010b715	obj/kern/kernel.asm	/^    f010b715:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010b718	obj/kern/kernel.asm	/^    f010b718:	48 c1 f8 10          	sar    $0x10,%rax$/;"	l
f010b71c	obj/kern/kernel.asm	/^    f010b71c:	48 8d 58 28          	lea    0x28(%rax),%rbx$/;"	l
f010b720	obj/kern/kernel.asm	/^    f010b720:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f010b727	obj/kern/kernel.asm	/^    f010b727:	00 00 00 $/;"	l
f010b72a	obj/kern/kernel.asm	/^    f010b72a:	ff d0                	callq  *%rax$/;"	l
f010b72c	obj/kern/kernel.asm	/^    f010b72c:	48 98                	cltq   $/;"	l
f010b72e	obj/kern/kernel.asm	/^    f010b72e:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f010b732	obj/kern/kernel.asm	/^    f010b732:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010b735	obj/kern/kernel.asm	/^    f010b735:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f010b739	obj/kern/kernel.asm	/^    f010b739:	48 29 c2             	sub    %rax,%rdx$/;"	l
f010b73c	obj/kern/kernel.asm	/^    f010b73c:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f010b743	obj/kern/kernel.asm	/^    f010b743:	00 00 00 $/;"	l
f010b746	obj/kern/kernel.asm	/^    f010b746:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010b74a	obj/kern/kernel.asm	/^    f010b74a:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f010b74d	obj/kern/kernel.asm	/^    f010b74d:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010b750	obj/kern/kernel.asm	/^    f010b750:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f010b753	obj/kern/kernel.asm	/^    f010b753:	48 98                	cltq   $/;"	l
f010b755	obj/kern/kernel.asm	/^    f010b755:	48 8d 04 03          	lea    (%rbx,%rax,1),%rax$/;"	l
f010b759	obj/kern/kernel.asm	/^    f010b759:	66 c7 40 0e 00 00    	movw   $0x0,0xe(%rax)$/;"	l
f010b75f	obj/kern/kernel.asm	/^    f010b75f:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f010b766	obj/kern/kernel.asm	/^    f010b766:	00 00 00 $/;"	l
f010b769	obj/kern/kernel.asm	/^    f010b769:	ff d0                	callq  *%rax$/;"	l
f010b76b	obj/kern/kernel.asm	/^    f010b76b:	48 98                	cltq   $/;"	l
f010b76d	obj/kern/kernel.asm	/^    f010b76d:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f010b771	obj/kern/kernel.asm	/^    f010b771:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010b774	obj/kern/kernel.asm	/^    f010b774:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f010b778	obj/kern/kernel.asm	/^    f010b778:	48 29 c2             	sub    %rax,%rdx$/;"	l
f010b77b	obj/kern/kernel.asm	/^    f010b77b:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f010b782	obj/kern/kernel.asm	/^    f010b782:	00 00 00 $/;"	l
f010b785	obj/kern/kernel.asm	/^    f010b785:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010b789	obj/kern/kernel.asm	/^    f010b789:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f010b78c	obj/kern/kernel.asm	/^    f010b78c:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010b78f	obj/kern/kernel.asm	/^    f010b78f:	c1 e0 04             	shl    $0x4,%eax$/;"	l
f010b792	obj/kern/kernel.asm	/^    f010b792:	83 c0 28             	add    $0x28,%eax$/;"	l
f010b795	obj/kern/kernel.asm	/^    f010b795:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f010b798	obj/kern/kernel.asm	/^    f010b798:	66 89 45 e6          	mov    %ax,-0x1a(%rbp)$/;"	l
f010b79c	obj/kern/kernel.asm	/^    f010b79c:	0f b7 45 e6          	movzwl -0x1a(%rbp),%eax$/;"	l
f010b7a0	obj/kern/kernel.asm	/^    f010b7a0:	0f 00 d8             	ltr    %ax$/;"	l
f010b7a3	obj/kern/kernel.asm	/^    f010b7a3:	48 b8 80 72 a2 f1 00 	mov    $0xf1a27280,%rax$/;"	l
f010b7aa	obj/kern/kernel.asm	/^    f010b7aa:	00 00 00 $/;"	l
f010b7ad	obj/kern/kernel.asm	/^    f010b7ad:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
f010b7b1	obj/kern/kernel.asm	/^    f010b7b1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010b7b5	obj/kern/kernel.asm	/^    f010b7b5:	0f 01 18             	lidt   (%rax)$/;"	l
f010b7b8	obj/kern/kernel.asm	/^    f010b7b8:	48 83 c4 18          	add    $0x18,%rsp$/;"	l
f010b7bc	obj/kern/kernel.asm	/^    f010b7bc:	5b                   	pop    %rbx$/;"	l
f010b7bd	obj/kern/kernel.asm	/^    f010b7bd:	c9                   	leaveq $/;"	l
f010b7be	obj/kern/kernel.asm	/^    f010b7be:	c3                   	retq   $/;"	l
f010b7bf	obj/kern/kernel.asm	/^    f010b7bf:	55                   	push   %rbp$/;"	l
f010b7c0	obj/kern/kernel.asm	/^    f010b7c0:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010b7c3	obj/kern/kernel.asm	/^    f010b7c3:	53                   	push   %rbx$/;"	l
f010b7c4	obj/kern/kernel.asm	/^    f010b7c4:	48 83 ec 28          	sub    $0x28,%rsp$/;"	l
f010b7c8	obj/kern/kernel.asm	/^    f010b7c8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)$/;"	l
f010b7cc	obj/kern/kernel.asm	/^    f010b7cc:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f010b7d3	obj/kern/kernel.asm	/^    f010b7d3:	00 00 00 $/;"	l
f010b7d6	obj/kern/kernel.asm	/^    f010b7d6:	ff d0                	callq  *%rax$/;"	l
f010b7d8	obj/kern/kernel.asm	/^    f010b7d8:	89 c2                	mov    %eax,%edx$/;"	l
f010b7da	obj/kern/kernel.asm	/^    f010b7da:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f010b7de	obj/kern/kernel.asm	/^    f010b7de:	48 89 c6             	mov    %rax,%rsi$/;"	l
f010b7e1	obj/kern/kernel.asm	/^    f010b7e1:	48 bf ae 27 11 f0 00 	mov    $0xf01127ae,%rdi$/;"	l
f010b7e8	obj/kern/kernel.asm	/^    f010b7e8:	00 00 00 $/;"	l
f010b7eb	obj/kern/kernel.asm	/^    f010b7eb:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010b7f0	obj/kern/kernel.asm	/^    f010b7f0:	48 b9 eb 88 10 f0 00 	mov    $0xf01088eb,%rcx$/;"	l
f010b7f7	obj/kern/kernel.asm	/^    f010b7f7:	00 00 00 $/;"	l
f010b7fa	obj/kern/kernel.asm	/^    f010b7fa:	ff d1                	callq  *%rcx$/;"	l
f010b7fc	obj/kern/kernel.asm	/^    f010b7fc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f010b800	obj/kern/kernel.asm	/^    f010b800:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010b803	obj/kern/kernel.asm	/^    f010b803:	48 b8 d4 ba 10 f0 00 	mov    $0xf010bad4,%rax$/;"	l
f010b80a	obj/kern/kernel.asm	/^    f010b80a:	00 00 00 $/;"	l
f010b80d	obj/kern/kernel.asm	/^    f010b80d:	ff d0                	callq  *%rax$/;"	l
f010b80f	obj/kern/kernel.asm	/^    f010b80f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f010b813	obj/kern/kernel.asm	/^    f010b813:	0f b7 40 78          	movzwl 0x78(%rax),%eax$/;"	l
f010b817	obj/kern/kernel.asm	/^    f010b817:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f010b81a	obj/kern/kernel.asm	/^    f010b81a:	89 c6                	mov    %eax,%esi$/;"	l
f010b81c	obj/kern/kernel.asm	/^    f010b81c:	48 bf cc 27 11 f0 00 	mov    $0xf01127cc,%rdi$/;"	l
f010b823	obj/kern/kernel.asm	/^    f010b823:	00 00 00 $/;"	l
f010b826	obj/kern/kernel.asm	/^    f010b826:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010b82b	obj/kern/kernel.asm	/^    f010b82b:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f010b832	obj/kern/kernel.asm	/^    f010b832:	00 00 00 $/;"	l
f010b835	obj/kern/kernel.asm	/^    f010b835:	ff d2                	callq  *%rdx$/;"	l
f010b837	obj/kern/kernel.asm	/^    f010b837:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f010b83b	obj/kern/kernel.asm	/^    f010b83b:	0f b7 80 80 00 00 00 	movzwl 0x80(%rax),%eax$/;"	l
f010b842	obj/kern/kernel.asm	/^    f010b842:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f010b845	obj/kern/kernel.asm	/^    f010b845:	89 c6                	mov    %eax,%esi$/;"	l
f010b847	obj/kern/kernel.asm	/^    f010b847:	48 bf df 27 11 f0 00 	mov    $0xf01127df,%rdi$/;"	l
f010b84e	obj/kern/kernel.asm	/^    f010b84e:	00 00 00 $/;"	l
f010b851	obj/kern/kernel.asm	/^    f010b851:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010b856	obj/kern/kernel.asm	/^    f010b856:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f010b85d	obj/kern/kernel.asm	/^    f010b85d:	00 00 00 $/;"	l
f010b860	obj/kern/kernel.asm	/^    f010b860:	ff d2                	callq  *%rdx$/;"	l
f010b862	obj/kern/kernel.asm	/^    f010b862:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f010b866	obj/kern/kernel.asm	/^    f010b866:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax$/;"	l
f010b86d	obj/kern/kernel.asm	/^    f010b86d:	89 c7                	mov    %eax,%edi$/;"	l
f010b86f	obj/kern/kernel.asm	/^    f010b86f:	48 b8 08 8a 10 f0 00 	mov    $0xf0108a08,%rax$/;"	l
f010b876	obj/kern/kernel.asm	/^    f010b876:	00 00 00 $/;"	l
f010b879	obj/kern/kernel.asm	/^    f010b879:	ff d0                	callq  *%rax$/;"	l
f010b87b	obj/kern/kernel.asm	/^    f010b87b:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010b87e	obj/kern/kernel.asm	/^    f010b87e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f010b882	obj/kern/kernel.asm	/^    f010b882:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax$/;"	l
f010b889	obj/kern/kernel.asm	/^    f010b889:	48 89 c6             	mov    %rax,%rsi$/;"	l
f010b88c	obj/kern/kernel.asm	/^    f010b88c:	48 bf f2 27 11 f0 00 	mov    $0xf01127f2,%rdi$/;"	l
f010b893	obj/kern/kernel.asm	/^    f010b893:	00 00 00 $/;"	l
f010b896	obj/kern/kernel.asm	/^    f010b896:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010b89b	obj/kern/kernel.asm	/^    f010b89b:	48 b9 eb 88 10 f0 00 	mov    $0xf01088eb,%rcx$/;"	l
f010b8a2	obj/kern/kernel.asm	/^    f010b8a2:	00 00 00 $/;"	l
f010b8a5	obj/kern/kernel.asm	/^    f010b8a5:	ff d1                	callq  *%rcx$/;"	l
f010b8a7	obj/kern/kernel.asm	/^    f010b8a7:	48 b8 08 73 a2 f1 00 	mov    $0xf1a27308,%rax$/;"	l
f010b8ae	obj/kern/kernel.asm	/^    f010b8ae:	00 00 00 $/;"	l
f010b8b1	obj/kern/kernel.asm	/^    f010b8b1:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010b8b4	obj/kern/kernel.asm	/^    f010b8b4:	48 39 45 d8          	cmp    %rax,-0x28(%rbp)$/;"	l
f010b8b8	obj/kern/kernel.asm	/^    f010b8b8:	75 3a                	jne    fffffffff010b8f4 <end+0xfffffffefe66a554>$/;"	l
f010b8ba	obj/kern/kernel.asm	/^    f010b8ba:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f010b8be	obj/kern/kernel.asm	/^    f010b8be:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax$/;"	l
f010b8c5	obj/kern/kernel.asm	/^    f010b8c5:	48 83 f8 0e          	cmp    $0xe,%rax$/;"	l
f010b8c9	obj/kern/kernel.asm	/^    f010b8c9:	75 29                	jne    fffffffff010b8f4 <end+0xfffffffefe66a554>$/;"	l
f010b8cb	obj/kern/kernel.asm	/^    f010b8cb:	0f 20 d0             	mov    %cr2,%rax$/;"	l
f010b8ce	obj/kern/kernel.asm	/^    f010b8ce:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
f010b8d2	obj/kern/kernel.asm	/^    f010b8d2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010b8d6	obj/kern/kernel.asm	/^    f010b8d6:	48 89 c6             	mov    %rax,%rsi$/;"	l
f010b8d9	obj/kern/kernel.asm	/^    f010b8d9:	48 bf 04 28 11 f0 00 	mov    $0xf0112804,%rdi$/;"	l
f010b8e0	obj/kern/kernel.asm	/^    f010b8e0:	00 00 00 $/;"	l
f010b8e3	obj/kern/kernel.asm	/^    f010b8e3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010b8e8	obj/kern/kernel.asm	/^    f010b8e8:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f010b8ef	obj/kern/kernel.asm	/^    f010b8ef:	00 00 00 $/;"	l
f010b8f2	obj/kern/kernel.asm	/^    f010b8f2:	ff d2                	callq  *%rdx$/;"	l
f010b8f4	obj/kern/kernel.asm	/^    f010b8f4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f010b8f8	obj/kern/kernel.asm	/^    f010b8f8:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax$/;"	l
f010b8ff	obj/kern/kernel.asm	/^    f010b8ff:	48 89 c6             	mov    %rax,%rsi$/;"	l
f010b902	obj/kern/kernel.asm	/^    f010b902:	48 bf 13 28 11 f0 00 	mov    $0xf0112813,%rdi$/;"	l
f010b909	obj/kern/kernel.asm	/^    f010b909:	00 00 00 $/;"	l
f010b90c	obj/kern/kernel.asm	/^    f010b90c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010b911	obj/kern/kernel.asm	/^    f010b911:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f010b918	obj/kern/kernel.asm	/^    f010b918:	00 00 00 $/;"	l
f010b91b	obj/kern/kernel.asm	/^    f010b91b:	ff d2                	callq  *%rdx$/;"	l
f010b91d	obj/kern/kernel.asm	/^    f010b91d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f010b921	obj/kern/kernel.asm	/^    f010b921:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax$/;"	l
f010b928	obj/kern/kernel.asm	/^    f010b928:	48 83 f8 0e          	cmp    $0xe,%rax$/;"	l
f010b92c	obj/kern/kernel.asm	/^    f010b92c:	0f 85 9a 00 00 00    	jne    fffffffff010b9cc <end+0xfffffffefe66a62c>$/;"	l
f010b932	obj/kern/kernel.asm	/^    f010b932:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f010b936	obj/kern/kernel.asm	/^    f010b936:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax$/;"	l
f010b93d	obj/kern/kernel.asm	/^    f010b93d:	83 e0 01             	and    $0x1,%eax$/;"	l
f010b940	obj/kern/kernel.asm	/^    f010b940:	84 c0                	test   %al,%al$/;"	l
f010b942	obj/kern/kernel.asm	/^    f010b942:	74 0c                	je     fffffffff010b950 <end+0xfffffffefe66a5b0>$/;"	l
f010b944	obj/kern/kernel.asm	/^    f010b944:	48 b9 21 28 11 f0 00 	mov    $0xf0112821,%rcx$/;"	l
f010b94b	obj/kern/kernel.asm	/^    f010b94b:	00 00 00 $/;"	l
f010b94e	obj/kern/kernel.asm	/^    f010b94e:	eb 0a                	jmp    fffffffff010b95a <end+0xfffffffefe66a5ba>$/;"	l
f010b950	obj/kern/kernel.asm	/^    f010b950:	48 b9 2c 28 11 f0 00 	mov    $0xf011282c,%rcx$/;"	l
f010b957	obj/kern/kernel.asm	/^    f010b957:	00 00 00 $/;"	l
f010b95a	obj/kern/kernel.asm	/^    f010b95a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f010b95e	obj/kern/kernel.asm	/^    f010b95e:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax$/;"	l
f010b965	obj/kern/kernel.asm	/^    f010b965:	83 e0 02             	and    $0x2,%eax$/;"	l
f010b968	obj/kern/kernel.asm	/^    f010b968:	48 85 c0             	test   %rax,%rax$/;"	l
f010b96b	obj/kern/kernel.asm	/^    f010b96b:	74 0c                	je     fffffffff010b979 <end+0xfffffffefe66a5d9>$/;"	l
f010b96d	obj/kern/kernel.asm	/^    f010b96d:	48 ba 38 28 11 f0 00 	mov    $0xf0112838,%rdx$/;"	l
f010b974	obj/kern/kernel.asm	/^    f010b974:	00 00 00 $/;"	l
f010b977	obj/kern/kernel.asm	/^    f010b977:	eb 0a                	jmp    fffffffff010b983 <end+0xfffffffefe66a5e3>$/;"	l
f010b979	obj/kern/kernel.asm	/^    f010b979:	48 ba 3e 28 11 f0 00 	mov    $0xf011283e,%rdx$/;"	l
f010b980	obj/kern/kernel.asm	/^    f010b980:	00 00 00 $/;"	l
f010b983	obj/kern/kernel.asm	/^    f010b983:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f010b987	obj/kern/kernel.asm	/^    f010b987:	48 8b 80 90 00 00 00 	mov    0x90(%rax),%rax$/;"	l
f010b98e	obj/kern/kernel.asm	/^    f010b98e:	83 e0 04             	and    $0x4,%eax$/;"	l
f010b991	obj/kern/kernel.asm	/^    f010b991:	48 85 c0             	test   %rax,%rax$/;"	l
f010b994	obj/kern/kernel.asm	/^    f010b994:	74 0c                	je     fffffffff010b9a2 <end+0xfffffffefe66a602>$/;"	l
f010b996	obj/kern/kernel.asm	/^    f010b996:	48 b8 43 28 11 f0 00 	mov    $0xf0112843,%rax$/;"	l
f010b99d	obj/kern/kernel.asm	/^    f010b99d:	00 00 00 $/;"	l
f010b9a0	obj/kern/kernel.asm	/^    f010b9a0:	eb 0a                	jmp    fffffffff010b9ac <end+0xfffffffefe66a60c>$/;"	l
f010b9a2	obj/kern/kernel.asm	/^    f010b9a2:	48 b8 48 28 11 f0 00 	mov    $0xf0112848,%rax$/;"	l
f010b9a9	obj/kern/kernel.asm	/^    f010b9a9:	00 00 00 $/;"	l
f010b9ac	obj/kern/kernel.asm	/^    f010b9ac:	48 89 c6             	mov    %rax,%rsi$/;"	l
f010b9af	obj/kern/kernel.asm	/^    f010b9af:	48 bf 4f 28 11 f0 00 	mov    $0xf011284f,%rdi$/;"	l
f010b9b6	obj/kern/kernel.asm	/^    f010b9b6:	00 00 00 $/;"	l
f010b9b9	obj/kern/kernel.asm	/^    f010b9b9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010b9be	obj/kern/kernel.asm	/^    f010b9be:	48 bb eb 88 10 f0 00 	mov    $0xf01088eb,%rbx$/;"	l
f010b9c5	obj/kern/kernel.asm	/^    f010b9c5:	00 00 00 $/;"	l
f010b9c8	obj/kern/kernel.asm	/^    f010b9c8:	ff d3                	callq  *%rbx$/;"	l
f010b9ca	obj/kern/kernel.asm	/^    f010b9ca:	eb 1b                	jmp    fffffffff010b9e7 <end+0xfffffffefe66a647>$/;"	l
f010b9cc	obj/kern/kernel.asm	/^    f010b9cc:	48 bf 5e 28 11 f0 00 	mov    $0xf011285e,%rdi$/;"	l
f010b9d3	obj/kern/kernel.asm	/^    f010b9d3:	00 00 00 $/;"	l
f010b9d6	obj/kern/kernel.asm	/^    f010b9d6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010b9db	obj/kern/kernel.asm	/^    f010b9db:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f010b9e2	obj/kern/kernel.asm	/^    f010b9e2:	00 00 00 $/;"	l
f010b9e5	obj/kern/kernel.asm	/^    f010b9e5:	ff d2                	callq  *%rdx$/;"	l
f010b9e7	obj/kern/kernel.asm	/^    f010b9e7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f010b9eb	obj/kern/kernel.asm	/^    f010b9eb:	48 8b 80 98 00 00 00 	mov    0x98(%rax),%rax$/;"	l
f010b9f2	obj/kern/kernel.asm	/^    f010b9f2:	48 89 c6             	mov    %rax,%rsi$/;"	l
f010b9f5	obj/kern/kernel.asm	/^    f010b9f5:	48 bf 60 28 11 f0 00 	mov    $0xf0112860,%rdi$/;"	l
f010b9fc	obj/kern/kernel.asm	/^    f010b9fc:	00 00 00 $/;"	l
f010b9ff	obj/kern/kernel.asm	/^    f010b9ff:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010ba04	obj/kern/kernel.asm	/^    f010ba04:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f010ba0b	obj/kern/kernel.asm	/^    f010ba0b:	00 00 00 $/;"	l
f010ba0e	obj/kern/kernel.asm	/^    f010ba0e:	ff d2                	callq  *%rdx$/;"	l
f010ba10	obj/kern/kernel.asm	/^    f010ba10:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f010ba14	obj/kern/kernel.asm	/^    f010ba14:	0f b7 80 a0 00 00 00 	movzwl 0xa0(%rax),%eax$/;"	l
f010ba1b	obj/kern/kernel.asm	/^    f010ba1b:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f010ba1e	obj/kern/kernel.asm	/^    f010ba1e:	89 c6                	mov    %eax,%esi$/;"	l
f010ba20	obj/kern/kernel.asm	/^    f010ba20:	48 bf 6f 28 11 f0 00 	mov    $0xf011286f,%rdi$/;"	l
f010ba27	obj/kern/kernel.asm	/^    f010ba27:	00 00 00 $/;"	l
f010ba2a	obj/kern/kernel.asm	/^    f010ba2a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010ba2f	obj/kern/kernel.asm	/^    f010ba2f:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f010ba36	obj/kern/kernel.asm	/^    f010ba36:	00 00 00 $/;"	l
f010ba39	obj/kern/kernel.asm	/^    f010ba39:	ff d2                	callq  *%rdx$/;"	l
f010ba3b	obj/kern/kernel.asm	/^    f010ba3b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f010ba3f	obj/kern/kernel.asm	/^    f010ba3f:	48 8b 80 a8 00 00 00 	mov    0xa8(%rax),%rax$/;"	l
f010ba46	obj/kern/kernel.asm	/^    f010ba46:	48 89 c6             	mov    %rax,%rsi$/;"	l
f010ba49	obj/kern/kernel.asm	/^    f010ba49:	48 bf 82 28 11 f0 00 	mov    $0xf0112882,%rdi$/;"	l
f010ba50	obj/kern/kernel.asm	/^    f010ba50:	00 00 00 $/;"	l
f010ba53	obj/kern/kernel.asm	/^    f010ba53:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010ba58	obj/kern/kernel.asm	/^    f010ba58:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f010ba5f	obj/kern/kernel.asm	/^    f010ba5f:	00 00 00 $/;"	l
f010ba62	obj/kern/kernel.asm	/^    f010ba62:	ff d2                	callq  *%rdx$/;"	l
f010ba64	obj/kern/kernel.asm	/^    f010ba64:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f010ba68	obj/kern/kernel.asm	/^    f010ba68:	0f b7 80 a0 00 00 00 	movzwl 0xa0(%rax),%eax$/;"	l
f010ba6f	obj/kern/kernel.asm	/^    f010ba6f:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f010ba72	obj/kern/kernel.asm	/^    f010ba72:	83 e0 03             	and    $0x3,%eax$/;"	l
f010ba75	obj/kern/kernel.asm	/^    f010ba75:	85 c0                	test   %eax,%eax$/;"	l
f010ba77	obj/kern/kernel.asm	/^    f010ba77:	74 54                	je     fffffffff010bacd <end+0xfffffffefe66a72d>$/;"	l
f010ba79	obj/kern/kernel.asm	/^    f010ba79:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f010ba7d	obj/kern/kernel.asm	/^    f010ba7d:	48 8b 80 b0 00 00 00 	mov    0xb0(%rax),%rax$/;"	l
f010ba84	obj/kern/kernel.asm	/^    f010ba84:	48 89 c6             	mov    %rax,%rsi$/;"	l
f010ba87	obj/kern/kernel.asm	/^    f010ba87:	48 bf 91 28 11 f0 00 	mov    $0xf0112891,%rdi$/;"	l
f010ba8e	obj/kern/kernel.asm	/^    f010ba8e:	00 00 00 $/;"	l
f010ba91	obj/kern/kernel.asm	/^    f010ba91:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010ba96	obj/kern/kernel.asm	/^    f010ba96:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f010ba9d	obj/kern/kernel.asm	/^    f010ba9d:	00 00 00 $/;"	l
f010baa0	obj/kern/kernel.asm	/^    f010baa0:	ff d2                	callq  *%rdx$/;"	l
f010baa2	obj/kern/kernel.asm	/^    f010baa2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f010baa6	obj/kern/kernel.asm	/^    f010baa6:	0f b7 80 b8 00 00 00 	movzwl 0xb8(%rax),%eax$/;"	l
f010baad	obj/kern/kernel.asm	/^    f010baad:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f010bab0	obj/kern/kernel.asm	/^    f010bab0:	89 c6                	mov    %eax,%esi$/;"	l
f010bab2	obj/kern/kernel.asm	/^    f010bab2:	48 bf a0 28 11 f0 00 	mov    $0xf01128a0,%rdi$/;"	l
f010bab9	obj/kern/kernel.asm	/^    f010bab9:	00 00 00 $/;"	l
f010babc	obj/kern/kernel.asm	/^    f010babc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010bac1	obj/kern/kernel.asm	/^    f010bac1:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f010bac8	obj/kern/kernel.asm	/^    f010bac8:	00 00 00 $/;"	l
f010bacb	obj/kern/kernel.asm	/^    f010bacb:	ff d2                	callq  *%rdx$/;"	l
f010bacd	obj/kern/kernel.asm	/^    f010bacd:	48 83 c4 28          	add    $0x28,%rsp$/;"	l
f010bad1	obj/kern/kernel.asm	/^    f010bad1:	5b                   	pop    %rbx$/;"	l
f010bad2	obj/kern/kernel.asm	/^    f010bad2:	c9                   	leaveq $/;"	l
f010bad3	obj/kern/kernel.asm	/^    f010bad3:	c3                   	retq   $/;"	l
f010bad4	obj/kern/kernel.asm	/^    f010bad4:	55                   	push   %rbp$/;"	l
f010bad5	obj/kern/kernel.asm	/^    f010bad5:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010bad8	obj/kern/kernel.asm	/^    f010bad8:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
f010badc	obj/kern/kernel.asm	/^    f010badc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
f010bae0	obj/kern/kernel.asm	/^    f010bae0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f010bae4	obj/kern/kernel.asm	/^    f010bae4:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010bae7	obj/kern/kernel.asm	/^    f010bae7:	48 89 c6             	mov    %rax,%rsi$/;"	l
f010baea	obj/kern/kernel.asm	/^    f010baea:	48 bf b3 28 11 f0 00 	mov    $0xf01128b3,%rdi$/;"	l
f010baf1	obj/kern/kernel.asm	/^    f010baf1:	00 00 00 $/;"	l
f010baf4	obj/kern/kernel.asm	/^    f010baf4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010baf9	obj/kern/kernel.asm	/^    f010baf9:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f010bb00	obj/kern/kernel.asm	/^    f010bb00:	00 00 00 $/;"	l
f010bb03	obj/kern/kernel.asm	/^    f010bb03:	ff d2                	callq  *%rdx$/;"	l
f010bb05	obj/kern/kernel.asm	/^    f010bb05:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f010bb09	obj/kern/kernel.asm	/^    f010bb09:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
f010bb0d	obj/kern/kernel.asm	/^    f010bb0d:	48 89 c6             	mov    %rax,%rsi$/;"	l
f010bb10	obj/kern/kernel.asm	/^    f010bb10:	48 bf c2 28 11 f0 00 	mov    $0xf01128c2,%rdi$/;"	l
f010bb17	obj/kern/kernel.asm	/^    f010bb17:	00 00 00 $/;"	l
f010bb1a	obj/kern/kernel.asm	/^    f010bb1a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010bb1f	obj/kern/kernel.asm	/^    f010bb1f:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f010bb26	obj/kern/kernel.asm	/^    f010bb26:	00 00 00 $/;"	l
f010bb29	obj/kern/kernel.asm	/^    f010bb29:	ff d2                	callq  *%rdx$/;"	l
f010bb2b	obj/kern/kernel.asm	/^    f010bb2b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f010bb2f	obj/kern/kernel.asm	/^    f010bb2f:	48 8b 40 10          	mov    0x10(%rax),%rax$/;"	l
f010bb33	obj/kern/kernel.asm	/^    f010bb33:	48 89 c6             	mov    %rax,%rsi$/;"	l
f010bb36	obj/kern/kernel.asm	/^    f010bb36:	48 bf d1 28 11 f0 00 	mov    $0xf01128d1,%rdi$/;"	l
f010bb3d	obj/kern/kernel.asm	/^    f010bb3d:	00 00 00 $/;"	l
f010bb40	obj/kern/kernel.asm	/^    f010bb40:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010bb45	obj/kern/kernel.asm	/^    f010bb45:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f010bb4c	obj/kern/kernel.asm	/^    f010bb4c:	00 00 00 $/;"	l
f010bb4f	obj/kern/kernel.asm	/^    f010bb4f:	ff d2                	callq  *%rdx$/;"	l
f010bb51	obj/kern/kernel.asm	/^    f010bb51:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f010bb55	obj/kern/kernel.asm	/^    f010bb55:	48 8b 40 18          	mov    0x18(%rax),%rax$/;"	l
f010bb59	obj/kern/kernel.asm	/^    f010bb59:	48 89 c6             	mov    %rax,%rsi$/;"	l
f010bb5c	obj/kern/kernel.asm	/^    f010bb5c:	48 bf e0 28 11 f0 00 	mov    $0xf01128e0,%rdi$/;"	l
f010bb63	obj/kern/kernel.asm	/^    f010bb63:	00 00 00 $/;"	l
f010bb66	obj/kern/kernel.asm	/^    f010bb66:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010bb6b	obj/kern/kernel.asm	/^    f010bb6b:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f010bb72	obj/kern/kernel.asm	/^    f010bb72:	00 00 00 $/;"	l
f010bb75	obj/kern/kernel.asm	/^    f010bb75:	ff d2                	callq  *%rdx$/;"	l
f010bb77	obj/kern/kernel.asm	/^    f010bb77:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f010bb7b	obj/kern/kernel.asm	/^    f010bb7b:	48 8b 40 20          	mov    0x20(%rax),%rax$/;"	l
f010bb7f	obj/kern/kernel.asm	/^    f010bb7f:	48 89 c6             	mov    %rax,%rsi$/;"	l
f010bb82	obj/kern/kernel.asm	/^    f010bb82:	48 bf ef 28 11 f0 00 	mov    $0xf01128ef,%rdi$/;"	l
f010bb89	obj/kern/kernel.asm	/^    f010bb89:	00 00 00 $/;"	l
f010bb8c	obj/kern/kernel.asm	/^    f010bb8c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010bb91	obj/kern/kernel.asm	/^    f010bb91:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f010bb98	obj/kern/kernel.asm	/^    f010bb98:	00 00 00 $/;"	l
f010bb9b	obj/kern/kernel.asm	/^    f010bb9b:	ff d2                	callq  *%rdx$/;"	l
f010bb9d	obj/kern/kernel.asm	/^    f010bb9d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f010bba1	obj/kern/kernel.asm	/^    f010bba1:	48 8b 40 28          	mov    0x28(%rax),%rax$/;"	l
f010bba5	obj/kern/kernel.asm	/^    f010bba5:	48 89 c6             	mov    %rax,%rsi$/;"	l
f010bba8	obj/kern/kernel.asm	/^    f010bba8:	48 bf fe 28 11 f0 00 	mov    $0xf01128fe,%rdi$/;"	l
f010bbaf	obj/kern/kernel.asm	/^    f010bbaf:	00 00 00 $/;"	l
f010bbb2	obj/kern/kernel.asm	/^    f010bbb2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010bbb7	obj/kern/kernel.asm	/^    f010bbb7:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f010bbbe	obj/kern/kernel.asm	/^    f010bbbe:	00 00 00 $/;"	l
f010bbc1	obj/kern/kernel.asm	/^    f010bbc1:	ff d2                	callq  *%rdx$/;"	l
f010bbc3	obj/kern/kernel.asm	/^    f010bbc3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f010bbc7	obj/kern/kernel.asm	/^    f010bbc7:	48 8b 40 30          	mov    0x30(%rax),%rax$/;"	l
f010bbcb	obj/kern/kernel.asm	/^    f010bbcb:	48 89 c6             	mov    %rax,%rsi$/;"	l
f010bbce	obj/kern/kernel.asm	/^    f010bbce:	48 bf 0d 29 11 f0 00 	mov    $0xf011290d,%rdi$/;"	l
f010bbd5	obj/kern/kernel.asm	/^    f010bbd5:	00 00 00 $/;"	l
f010bbd8	obj/kern/kernel.asm	/^    f010bbd8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010bbdd	obj/kern/kernel.asm	/^    f010bbdd:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f010bbe4	obj/kern/kernel.asm	/^    f010bbe4:	00 00 00 $/;"	l
f010bbe7	obj/kern/kernel.asm	/^    f010bbe7:	ff d2                	callq  *%rdx$/;"	l
f010bbe9	obj/kern/kernel.asm	/^    f010bbe9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f010bbed	obj/kern/kernel.asm	/^    f010bbed:	48 8b 40 38          	mov    0x38(%rax),%rax$/;"	l
f010bbf1	obj/kern/kernel.asm	/^    f010bbf1:	48 89 c6             	mov    %rax,%rsi$/;"	l
f010bbf4	obj/kern/kernel.asm	/^    f010bbf4:	48 bf 1b 29 11 f0 00 	mov    $0xf011291b,%rdi$/;"	l
f010bbfb	obj/kern/kernel.asm	/^    f010bbfb:	00 00 00 $/;"	l
f010bbfe	obj/kern/kernel.asm	/^    f010bbfe:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010bc03	obj/kern/kernel.asm	/^    f010bc03:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f010bc0a	obj/kern/kernel.asm	/^    f010bc0a:	00 00 00 $/;"	l
f010bc0d	obj/kern/kernel.asm	/^    f010bc0d:	ff d2                	callq  *%rdx$/;"	l
f010bc0f	obj/kern/kernel.asm	/^    f010bc0f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f010bc13	obj/kern/kernel.asm	/^    f010bc13:	48 8b 40 48          	mov    0x48(%rax),%rax$/;"	l
f010bc17	obj/kern/kernel.asm	/^    f010bc17:	48 89 c6             	mov    %rax,%rsi$/;"	l
f010bc1a	obj/kern/kernel.asm	/^    f010bc1a:	48 bf 29 29 11 f0 00 	mov    $0xf0112929,%rdi$/;"	l
f010bc21	obj/kern/kernel.asm	/^    f010bc21:	00 00 00 $/;"	l
f010bc24	obj/kern/kernel.asm	/^    f010bc24:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010bc29	obj/kern/kernel.asm	/^    f010bc29:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f010bc30	obj/kern/kernel.asm	/^    f010bc30:	00 00 00 $/;"	l
f010bc33	obj/kern/kernel.asm	/^    f010bc33:	ff d2                	callq  *%rdx$/;"	l
f010bc35	obj/kern/kernel.asm	/^    f010bc35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f010bc39	obj/kern/kernel.asm	/^    f010bc39:	48 8b 40 40          	mov    0x40(%rax),%rax$/;"	l
f010bc3d	obj/kern/kernel.asm	/^    f010bc3d:	48 89 c6             	mov    %rax,%rsi$/;"	l
f010bc40	obj/kern/kernel.asm	/^    f010bc40:	48 bf 38 29 11 f0 00 	mov    $0xf0112938,%rdi$/;"	l
f010bc47	obj/kern/kernel.asm	/^    f010bc47:	00 00 00 $/;"	l
f010bc4a	obj/kern/kernel.asm	/^    f010bc4a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010bc4f	obj/kern/kernel.asm	/^    f010bc4f:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f010bc56	obj/kern/kernel.asm	/^    f010bc56:	00 00 00 $/;"	l
f010bc59	obj/kern/kernel.asm	/^    f010bc59:	ff d2                	callq  *%rdx$/;"	l
f010bc5b	obj/kern/kernel.asm	/^    f010bc5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f010bc5f	obj/kern/kernel.asm	/^    f010bc5f:	48 8b 40 50          	mov    0x50(%rax),%rax$/;"	l
f010bc63	obj/kern/kernel.asm	/^    f010bc63:	48 89 c6             	mov    %rax,%rsi$/;"	l
f010bc66	obj/kern/kernel.asm	/^    f010bc66:	48 bf 47 29 11 f0 00 	mov    $0xf0112947,%rdi$/;"	l
f010bc6d	obj/kern/kernel.asm	/^    f010bc6d:	00 00 00 $/;"	l
f010bc70	obj/kern/kernel.asm	/^    f010bc70:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010bc75	obj/kern/kernel.asm	/^    f010bc75:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f010bc7c	obj/kern/kernel.asm	/^    f010bc7c:	00 00 00 $/;"	l
f010bc7f	obj/kern/kernel.asm	/^    f010bc7f:	ff d2                	callq  *%rdx$/;"	l
f010bc81	obj/kern/kernel.asm	/^    f010bc81:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f010bc85	obj/kern/kernel.asm	/^    f010bc85:	48 8b 40 68          	mov    0x68(%rax),%rax$/;"	l
f010bc89	obj/kern/kernel.asm	/^    f010bc89:	48 89 c6             	mov    %rax,%rsi$/;"	l
f010bc8c	obj/kern/kernel.asm	/^    f010bc8c:	48 bf 56 29 11 f0 00 	mov    $0xf0112956,%rdi$/;"	l
f010bc93	obj/kern/kernel.asm	/^    f010bc93:	00 00 00 $/;"	l
f010bc96	obj/kern/kernel.asm	/^    f010bc96:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010bc9b	obj/kern/kernel.asm	/^    f010bc9b:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f010bca2	obj/kern/kernel.asm	/^    f010bca2:	00 00 00 $/;"	l
f010bca5	obj/kern/kernel.asm	/^    f010bca5:	ff d2                	callq  *%rdx$/;"	l
f010bca7	obj/kern/kernel.asm	/^    f010bca7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f010bcab	obj/kern/kernel.asm	/^    f010bcab:	48 8b 40 58          	mov    0x58(%rax),%rax$/;"	l
f010bcaf	obj/kern/kernel.asm	/^    f010bcaf:	48 89 c6             	mov    %rax,%rsi$/;"	l
f010bcb2	obj/kern/kernel.asm	/^    f010bcb2:	48 bf 65 29 11 f0 00 	mov    $0xf0112965,%rdi$/;"	l
f010bcb9	obj/kern/kernel.asm	/^    f010bcb9:	00 00 00 $/;"	l
f010bcbc	obj/kern/kernel.asm	/^    f010bcbc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010bcc1	obj/kern/kernel.asm	/^    f010bcc1:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f010bcc8	obj/kern/kernel.asm	/^    f010bcc8:	00 00 00 $/;"	l
f010bccb	obj/kern/kernel.asm	/^    f010bccb:	ff d2                	callq  *%rdx$/;"	l
f010bccd	obj/kern/kernel.asm	/^    f010bccd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f010bcd1	obj/kern/kernel.asm	/^    f010bcd1:	48 8b 40 60          	mov    0x60(%rax),%rax$/;"	l
f010bcd5	obj/kern/kernel.asm	/^    f010bcd5:	48 89 c6             	mov    %rax,%rsi$/;"	l
f010bcd8	obj/kern/kernel.asm	/^    f010bcd8:	48 bf 74 29 11 f0 00 	mov    $0xf0112974,%rdi$/;"	l
f010bcdf	obj/kern/kernel.asm	/^    f010bcdf:	00 00 00 $/;"	l
f010bce2	obj/kern/kernel.asm	/^    f010bce2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010bce7	obj/kern/kernel.asm	/^    f010bce7:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f010bcee	obj/kern/kernel.asm	/^    f010bcee:	00 00 00 $/;"	l
f010bcf1	obj/kern/kernel.asm	/^    f010bcf1:	ff d2                	callq  *%rdx$/;"	l
f010bcf3	obj/kern/kernel.asm	/^    f010bcf3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f010bcf7	obj/kern/kernel.asm	/^    f010bcf7:	48 8b 40 70          	mov    0x70(%rax),%rax$/;"	l
f010bcfb	obj/kern/kernel.asm	/^    f010bcfb:	48 89 c6             	mov    %rax,%rsi$/;"	l
f010bcfe	obj/kern/kernel.asm	/^    f010bcfe:	48 bf 83 29 11 f0 00 	mov    $0xf0112983,%rdi$/;"	l
f010bd05	obj/kern/kernel.asm	/^    f010bd05:	00 00 00 $/;"	l
f010bd08	obj/kern/kernel.asm	/^    f010bd08:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010bd0d	obj/kern/kernel.asm	/^    f010bd0d:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f010bd14	obj/kern/kernel.asm	/^    f010bd14:	00 00 00 $/;"	l
f010bd17	obj/kern/kernel.asm	/^    f010bd17:	ff d2                	callq  *%rdx$/;"	l
f010bd19	obj/kern/kernel.asm	/^    f010bd19:	c9                   	leaveq $/;"	l
f010bd1a	obj/kern/kernel.asm	/^    f010bd1a:	c3                   	retq   $/;"	l
f010bd1b	obj/kern/kernel.asm	/^    f010bd1b:	55                   	push   %rbp$/;"	l
f010bd1c	obj/kern/kernel.asm	/^    f010bd1c:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010bd1f	obj/kern/kernel.asm	/^    f010bd1f:	53                   	push   %rbx$/;"	l
f010bd20	obj/kern/kernel.asm	/^    f010bd20:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
f010bd24	obj/kern/kernel.asm	/^    f010bd24:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
f010bd28	obj/kern/kernel.asm	/^    f010bd28:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010bd2c	obj/kern/kernel.asm	/^    f010bd2c:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax$/;"	l
f010bd33	obj/kern/kernel.asm	/^    f010bd33:	48 83 f8 27          	cmp    $0x27,%rax$/;"	l
f010bd37	obj/kern/kernel.asm	/^    f010bd37:	75 33                	jne    fffffffff010bd6c <end+0xfffffffefe66a9cc>$/;"	l
f010bd39	obj/kern/kernel.asm	/^    f010bd39:	48 bf 92 29 11 f0 00 	mov    $0xf0112992,%rdi$/;"	l
f010bd40	obj/kern/kernel.asm	/^    f010bd40:	00 00 00 $/;"	l
f010bd43	obj/kern/kernel.asm	/^    f010bd43:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010bd48	obj/kern/kernel.asm	/^    f010bd48:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f010bd4f	obj/kern/kernel.asm	/^    f010bd4f:	00 00 00 $/;"	l
f010bd52	obj/kern/kernel.asm	/^    f010bd52:	ff d2                	callq  *%rdx$/;"	l
f010bd54	obj/kern/kernel.asm	/^    f010bd54:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010bd58	obj/kern/kernel.asm	/^    f010bd58:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010bd5b	obj/kern/kernel.asm	/^    f010bd5b:	48 b8 bf b7 10 f0 00 	mov    $0xf010b7bf,%rax$/;"	l
f010bd62	obj/kern/kernel.asm	/^    f010bd62:	00 00 00 $/;"	l
f010bd65	obj/kern/kernel.asm	/^    f010bd65:	ff d0                	callq  *%rax$/;"	l
f010bd67	obj/kern/kernel.asm	/^    f010bd67:	e9 b8 01 00 00       	jmpq   fffffffff010bf24 <end+0xfffffffefe66ab84>$/;"	l
f010bd6c	obj/kern/kernel.asm	/^    f010bd6c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010bd70	obj/kern/kernel.asm	/^    f010bd70:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax$/;"	l
f010bd77	obj/kern/kernel.asm	/^    f010bd77:	83 f8 30             	cmp    $0x30,%eax$/;"	l
f010bd7a	obj/kern/kernel.asm	/^    f010bd7a:	0f 87 de 00 00 00    	ja     fffffffff010be5e <end+0xfffffffefe66aabe>$/;"	l
f010bd80	obj/kern/kernel.asm	/^    f010bd80:	89 c0                	mov    %eax,%eax$/;"	l
f010bd82	obj/kern/kernel.asm	/^    f010bd82:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
f010bd89	obj/kern/kernel.asm	/^    f010bd89:	00 $/;"	l
f010bd8a	obj/kern/kernel.asm	/^    f010bd8a:	48 b8 d8 29 11 f0 00 	mov    $0xf01129d8,%rax$/;"	l
f010bd91	obj/kern/kernel.asm	/^    f010bd91:	00 00 00 $/;"	l
f010bd94	obj/kern/kernel.asm	/^    f010bd94:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax$/;"	l
f010bd98	obj/kern/kernel.asm	/^    f010bd98:	ff e0                	jmpq   *%rax$/;"	l
f010bd9a	obj/kern/kernel.asm	/^    f010bd9a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010bd9e	obj/kern/kernel.asm	/^    f010bd9e:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010bda1	obj/kern/kernel.asm	/^    f010bda1:	48 b8 31 c2 10 f0 00 	mov    $0xf010c231,%rax$/;"	l
f010bda8	obj/kern/kernel.asm	/^    f010bda8:	00 00 00 $/;"	l
f010bdab	obj/kern/kernel.asm	/^    f010bdab:	ff d0                	callq  *%rax$/;"	l
f010bdad	obj/kern/kernel.asm	/^    f010bdad:	e9 72 01 00 00       	jmpq   fffffffff010bf24 <end+0xfffffffefe66ab84>$/;"	l
f010bdb2	obj/kern/kernel.asm	/^    f010bdb2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010bdb6	obj/kern/kernel.asm	/^    f010bdb6:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010bdb9	obj/kern/kernel.asm	/^    f010bdb9:	48 b8 f4 c2 10 f0 00 	mov    $0xf010c2f4,%rax$/;"	l
f010bdc0	obj/kern/kernel.asm	/^    f010bdc0:	00 00 00 $/;"	l
f010bdc3	obj/kern/kernel.asm	/^    f010bdc3:	ff d0                	callq  *%rax$/;"	l
f010bdc5	obj/kern/kernel.asm	/^    f010bdc5:	e9 5a 01 00 00       	jmpq   fffffffff010bf24 <end+0xfffffffefe66ab84>$/;"	l
f010bdca	obj/kern/kernel.asm	/^    f010bdca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010bdce	obj/kern/kernel.asm	/^    f010bdce:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010bdd1	obj/kern/kernel.asm	/^    f010bdd1:	48 b8 5d c6 10 f0 00 	mov    $0xf010c65d,%rax$/;"	l
f010bdd8	obj/kern/kernel.asm	/^    f010bdd8:	00 00 00 $/;"	l
f010bddb	obj/kern/kernel.asm	/^    f010bddb:	ff d0                	callq  *%rax$/;"	l
f010bddd	obj/kern/kernel.asm	/^    f010bddd:	e9 42 01 00 00       	jmpq   fffffffff010bf24 <end+0xfffffffefe66ab84>$/;"	l
f010bde2	obj/kern/kernel.asm	/^    f010bde2:	48 b8 3a 14 11 f0 00 	mov    $0xf011143a,%rax$/;"	l
f010bde9	obj/kern/kernel.asm	/^    f010bde9:	00 00 00 $/;"	l
f010bdec	obj/kern/kernel.asm	/^    f010bdec:	ff d0                	callq  *%rax$/;"	l
f010bdee	obj/kern/kernel.asm	/^    f010bdee:	48 b8 95 fd 10 f0 00 	mov    $0xf010fd95,%rax$/;"	l
f010bdf5	obj/kern/kernel.asm	/^    f010bdf5:	00 00 00 $/;"	l
f010bdf8	obj/kern/kernel.asm	/^    f010bdf8:	ff d0                	callq  *%rax$/;"	l
f010bdfa	obj/kern/kernel.asm	/^    f010bdfa:	48 b8 40 c8 10 f0 00 	mov    $0xf010c840,%rax$/;"	l
f010be01	obj/kern/kernel.asm	/^    f010be01:	00 00 00 $/;"	l
f010be04	obj/kern/kernel.asm	/^    f010be04:	ff d0                	callq  *%rax$/;"	l
f010be06	obj/kern/kernel.asm	/^    f010be06:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010be0a	obj/kern/kernel.asm	/^    f010be0a:	48 8b 78 40          	mov    0x40(%rax),%rdi$/;"	l
f010be0e	obj/kern/kernel.asm	/^    f010be0e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010be12	obj/kern/kernel.asm	/^    f010be12:	48 8b 70 48          	mov    0x48(%rax),%rsi$/;"	l
f010be16	obj/kern/kernel.asm	/^    f010be16:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010be1a	obj/kern/kernel.asm	/^    f010be1a:	48 8b 48 68          	mov    0x68(%rax),%rcx$/;"	l
f010be1e	obj/kern/kernel.asm	/^    f010be1e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010be22	obj/kern/kernel.asm	/^    f010be22:	48 8b 50 60          	mov    0x60(%rax),%rdx$/;"	l
f010be26	obj/kern/kernel.asm	/^    f010be26:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010be2a	obj/kern/kernel.asm	/^    f010be2a:	48 8b 58 58          	mov    0x58(%rax),%rbx$/;"	l
f010be2e	obj/kern/kernel.asm	/^    f010be2e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010be32	obj/kern/kernel.asm	/^    f010be32:	48 8b 40 70          	mov    0x70(%rax),%rax$/;"	l
f010be36	obj/kern/kernel.asm	/^    f010be36:	49 89 f9             	mov    %rdi,%r9$/;"	l
f010be39	obj/kern/kernel.asm	/^    f010be39:	49 89 f0             	mov    %rsi,%r8$/;"	l
f010be3c	obj/kern/kernel.asm	/^    f010be3c:	48 89 de             	mov    %rbx,%rsi$/;"	l
f010be3f	obj/kern/kernel.asm	/^    f010be3f:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010be42	obj/kern/kernel.asm	/^    f010be42:	48 b8 51 d7 10 f0 00 	mov    $0xf010d751,%rax$/;"	l
f010be49	obj/kern/kernel.asm	/^    f010be49:	00 00 00 $/;"	l
f010be4c	obj/kern/kernel.asm	/^    f010be4c:	ff d0                	callq  *%rax$/;"	l
f010be4e	obj/kern/kernel.asm	/^    f010be4e:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010be51	obj/kern/kernel.asm	/^    f010be51:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010be55	obj/kern/kernel.asm	/^    f010be55:	48 89 50 70          	mov    %rdx,0x70(%rax)$/;"	l
f010be59	obj/kern/kernel.asm	/^    f010be59:	e9 c6 00 00 00       	jmpq   fffffffff010bf24 <end+0xfffffffefe66ab84>$/;"	l
f010be5e	obj/kern/kernel.asm	/^    f010be5e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010be62	obj/kern/kernel.asm	/^    f010be62:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax$/;"	l
f010be69	obj/kern/kernel.asm	/^    f010be69:	48 83 f8 1f          	cmp    $0x1f,%rax$/;"	l
f010be6d	obj/kern/kernel.asm	/^    f010be6d:	76 29                	jbe    fffffffff010be98 <end+0xfffffffefe66aaf8>$/;"	l
f010be6f	obj/kern/kernel.asm	/^    f010be6f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010be73	obj/kern/kernel.asm	/^    f010be73:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax$/;"	l
f010be7a	obj/kern/kernel.asm	/^    f010be7a:	48 83 f8 2f          	cmp    $0x2f,%rax$/;"	l
f010be7e	obj/kern/kernel.asm	/^    f010be7e:	77 18                	ja     fffffffff010be98 <end+0xfffffffefe66aaf8>$/;"	l
f010be80	obj/kern/kernel.asm	/^    f010be80:	48 b8 95 fd 10 f0 00 	mov    $0xf010fd95,%rax$/;"	l
f010be87	obj/kern/kernel.asm	/^    f010be87:	00 00 00 $/;"	l
f010be8a	obj/kern/kernel.asm	/^    f010be8a:	ff d0                	callq  *%rax$/;"	l
f010be8c	obj/kern/kernel.asm	/^    f010be8c:	48 b8 40 c8 10 f0 00 	mov    $0xf010c840,%rax$/;"	l
f010be93	obj/kern/kernel.asm	/^    f010be93:	00 00 00 $/;"	l
f010be96	obj/kern/kernel.asm	/^    f010be96:	ff d0                	callq  *%rax$/;"	l
f010be98	obj/kern/kernel.asm	/^    f010be98:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010be9c	obj/kern/kernel.asm	/^    f010be9c:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010be9f	obj/kern/kernel.asm	/^    f010be9f:	48 b8 bf b7 10 f0 00 	mov    $0xf010b7bf,%rax$/;"	l
f010bea6	obj/kern/kernel.asm	/^    f010bea6:	00 00 00 $/;"	l
f010bea9	obj/kern/kernel.asm	/^    f010bea9:	ff d0                	callq  *%rax$/;"	l
f010beab	obj/kern/kernel.asm	/^    f010beab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010beaf	obj/kern/kernel.asm	/^    f010beaf:	0f b7 80 a0 00 00 00 	movzwl 0xa0(%rax),%eax$/;"	l
f010beb6	obj/kern/kernel.asm	/^    f010beb6:	66 83 f8 08          	cmp    $0x8,%ax$/;"	l
f010beba	obj/kern/kernel.asm	/^    f010beba:	75 2a                	jne    fffffffff010bee6 <end+0xfffffffefe66ab46>$/;"	l
f010bebc	obj/kern/kernel.asm	/^    f010bebc:	48 ba af 29 11 f0 00 	mov    $0xf01129af,%rdx$/;"	l
f010bec3	obj/kern/kernel.asm	/^    f010bec3:	00 00 00 $/;"	l
f010bec6	obj/kern/kernel.asm	/^    f010bec6:	be 43 01 00 00       	mov    $0x143,%esi$/;"	l
f010becb	obj/kern/kernel.asm	/^    f010becb:	48 bf c8 29 11 f0 00 	mov    $0xf01129c8,%rdi$/;"	l
f010bed2	obj/kern/kernel.asm	/^    f010bed2:	00 00 00 $/;"	l
f010bed5	obj/kern/kernel.asm	/^    f010bed5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010beda	obj/kern/kernel.asm	/^    f010beda:	48 b9 18 05 10 f0 00 	mov    $0xf0100518,%rcx$/;"	l
f010bee1	obj/kern/kernel.asm	/^    f010bee1:	00 00 00 $/;"	l
f010bee4	obj/kern/kernel.asm	/^    f010bee4:	ff d1                	callq  *%rcx$/;"	l
f010bee6	obj/kern/kernel.asm	/^    f010bee6:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f010beed	obj/kern/kernel.asm	/^    f010beed:	00 00 00 $/;"	l
f010bef0	obj/kern/kernel.asm	/^    f010bef0:	ff d0                	callq  *%rax$/;"	l
f010bef2	obj/kern/kernel.asm	/^    f010bef2:	48 98                	cltq   $/;"	l
f010bef4	obj/kern/kernel.asm	/^    f010bef4:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f010bef8	obj/kern/kernel.asm	/^    f010bef8:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010befb	obj/kern/kernel.asm	/^    f010befb:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f010beff	obj/kern/kernel.asm	/^    f010beff:	48 29 c2             	sub    %rax,%rdx$/;"	l
f010bf02	obj/kern/kernel.asm	/^    f010bf02:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f010bf09	obj/kern/kernel.asm	/^    f010bf09:	00 00 00 $/;"	l
f010bf0c	obj/kern/kernel.asm	/^    f010bf0c:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010bf10	obj/kern/kernel.asm	/^    f010bf10:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
f010bf14	obj/kern/kernel.asm	/^    f010bf14:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010bf17	obj/kern/kernel.asm	/^    f010bf17:	48 b8 e6 81 10 f0 00 	mov    $0xf01081e6,%rax$/;"	l
f010bf1e	obj/kern/kernel.asm	/^    f010bf1e:	00 00 00 $/;"	l
f010bf21	obj/kern/kernel.asm	/^    f010bf21:	ff d0                	callq  *%rax$/;"	l
f010bf23	obj/kern/kernel.asm	/^    f010bf23:	90                   	nop$/;"	l
f010bf24	obj/kern/kernel.asm	/^    f010bf24:	48 83 c4 18          	add    $0x18,%rsp$/;"	l
f010bf28	obj/kern/kernel.asm	/^    f010bf28:	5b                   	pop    %rbx$/;"	l
f010bf29	obj/kern/kernel.asm	/^    f010bf29:	c9                   	leaveq $/;"	l
f010bf2a	obj/kern/kernel.asm	/^    f010bf2a:	c3                   	retq   $/;"	l
f010bf2b	obj/kern/kernel.asm	/^    f010bf2b:	55                   	push   %rbp$/;"	l
f010bf2c	obj/kern/kernel.asm	/^    f010bf2c:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010bf2f	obj/kern/kernel.asm	/^    f010bf2f:	53                   	push   %rbx$/;"	l
f010bf30	obj/kern/kernel.asm	/^    f010bf30:	48 83 ec 28          	sub    $0x28,%rsp$/;"	l
f010bf34	obj/kern/kernel.asm	/^    f010bf34:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)$/;"	l
f010bf38	obj/kern/kernel.asm	/^    f010bf38:	fc                   	cld    $/;"	l
f010bf39	obj/kern/kernel.asm	/^    f010bf39:	48 b8 48 77 a2 f1 00 	mov    $0xf1a27748,%rax$/;"	l
f010bf40	obj/kern/kernel.asm	/^    f010bf40:	00 00 00 $/;"	l
f010bf43	obj/kern/kernel.asm	/^    f010bf43:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010bf46	obj/kern/kernel.asm	/^    f010bf46:	48 85 c0             	test   %rax,%rax$/;"	l
f010bf49	obj/kern/kernel.asm	/^    f010bf49:	74 01                	je     fffffffff010bf4c <end+0xfffffffefe66abac>$/;"	l
f010bf4b	obj/kern/kernel.asm	/^    f010bf4b:	f4                   	hlt    $/;"	l
f010bf4c	obj/kern/kernel.asm	/^    f010bf4c:	9c                   	pushfq $/;"	l
f010bf4d	obj/kern/kernel.asm	/^    f010bf4d:	58                   	pop    %rax$/;"	l
f010bf4e	obj/kern/kernel.asm	/^    f010bf4e:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
f010bf52	obj/kern/kernel.asm	/^    f010bf52:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010bf56	obj/kern/kernel.asm	/^    f010bf56:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
f010bf5b	obj/kern/kernel.asm	/^    f010bf5b:	48 85 c0             	test   %rax,%rax$/;"	l
f010bf5e	obj/kern/kernel.asm	/^    f010bf5e:	74 34                	je     fffffffff010bf94 <end+0xfffffffefe66abf4>$/;"	l
f010bf60	obj/kern/kernel.asm	/^    f010bf60:	48 b9 60 2b 11 f0 00 	mov    $0xf0112b60,%rcx$/;"	l
f010bf67	obj/kern/kernel.asm	/^    f010bf67:	00 00 00 $/;"	l
f010bf6a	obj/kern/kernel.asm	/^    f010bf6a:	48 ba 79 2b 11 f0 00 	mov    $0xf0112b79,%rdx$/;"	l
f010bf71	obj/kern/kernel.asm	/^    f010bf71:	00 00 00 $/;"	l
f010bf74	obj/kern/kernel.asm	/^    f010bf74:	be 5c 01 00 00       	mov    $0x15c,%esi$/;"	l
f010bf79	obj/kern/kernel.asm	/^    f010bf79:	48 bf c8 29 11 f0 00 	mov    $0xf01129c8,%rdi$/;"	l
f010bf80	obj/kern/kernel.asm	/^    f010bf80:	00 00 00 $/;"	l
f010bf83	obj/kern/kernel.asm	/^    f010bf83:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010bf88	obj/kern/kernel.asm	/^    f010bf88:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f010bf8f	obj/kern/kernel.asm	/^    f010bf8f:	00 00 00 $/;"	l
f010bf92	obj/kern/kernel.asm	/^    f010bf92:	ff d3                	callq  *%rbx$/;"	l
f010bf94	obj/kern/kernel.asm	/^    f010bf94:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f010bf98	obj/kern/kernel.asm	/^    f010bf98:	0f b7 80 a0 00 00 00 	movzwl 0xa0(%rax),%eax$/;"	l
f010bf9f	obj/kern/kernel.asm	/^    f010bf9f:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f010bfa2	obj/kern/kernel.asm	/^    f010bfa2:	83 e0 03             	and    $0x3,%eax$/;"	l
f010bfa5	obj/kern/kernel.asm	/^    f010bfa5:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f010bfa8	obj/kern/kernel.asm	/^    f010bfa8:	0f 85 9f 01 00 00    	jne    fffffffff010c14d <end+0xfffffffefe66adad>$/;"	l
f010bfae	obj/kern/kernel.asm	/^    f010bfae:	48 b8 ec 89 10 f0 00 	mov    $0xf01089ec,%rax$/;"	l
f010bfb5	obj/kern/kernel.asm	/^    f010bfb5:	00 00 00 $/;"	l
f010bfb8	obj/kern/kernel.asm	/^    f010bfb8:	ff d0                	callq  *%rax$/;"	l
f010bfba	obj/kern/kernel.asm	/^    f010bfba:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f010bfc1	obj/kern/kernel.asm	/^    f010bfc1:	00 00 00 $/;"	l
f010bfc4	obj/kern/kernel.asm	/^    f010bfc4:	ff d0                	callq  *%rax$/;"	l
f010bfc6	obj/kern/kernel.asm	/^    f010bfc6:	48 98                	cltq   $/;"	l
f010bfc8	obj/kern/kernel.asm	/^    f010bfc8:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f010bfcc	obj/kern/kernel.asm	/^    f010bfcc:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010bfcf	obj/kern/kernel.asm	/^    f010bfcf:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f010bfd3	obj/kern/kernel.asm	/^    f010bfd3:	48 29 c2             	sub    %rax,%rdx$/;"	l
f010bfd6	obj/kern/kernel.asm	/^    f010bfd6:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f010bfdd	obj/kern/kernel.asm	/^    f010bfdd:	00 00 00 $/;"	l
f010bfe0	obj/kern/kernel.asm	/^    f010bfe0:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010bfe4	obj/kern/kernel.asm	/^    f010bfe4:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
f010bfe8	obj/kern/kernel.asm	/^    f010bfe8:	48 85 c0             	test   %rax,%rax$/;"	l
f010bfeb	obj/kern/kernel.asm	/^    f010bfeb:	75 34                	jne    fffffffff010c021 <end+0xfffffffefe66ac81>$/;"	l
f010bfed	obj/kern/kernel.asm	/^    f010bfed:	48 b9 8e 2b 11 f0 00 	mov    $0xf0112b8e,%rcx$/;"	l
f010bff4	obj/kern/kernel.asm	/^    f010bff4:	00 00 00 $/;"	l
f010bff7	obj/kern/kernel.asm	/^    f010bff7:	48 ba 79 2b 11 f0 00 	mov    $0xf0112b79,%rdx$/;"	l
f010bffe	obj/kern/kernel.asm	/^    f010bffe:	00 00 00 $/;"	l
f010c001	obj/kern/kernel.asm	/^    f010c001:	be 65 01 00 00       	mov    $0x165,%esi$/;"	l
f010c006	obj/kern/kernel.asm	/^    f010c006:	48 bf c8 29 11 f0 00 	mov    $0xf01129c8,%rdi$/;"	l
f010c00d	obj/kern/kernel.asm	/^    f010c00d:	00 00 00 $/;"	l
f010c010	obj/kern/kernel.asm	/^    f010c010:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010c015	obj/kern/kernel.asm	/^    f010c015:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f010c01c	obj/kern/kernel.asm	/^    f010c01c:	00 00 00 $/;"	l
f010c01f	obj/kern/kernel.asm	/^    f010c01f:	ff d3                	callq  *%rbx$/;"	l
f010c021	obj/kern/kernel.asm	/^    f010c021:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f010c028	obj/kern/kernel.asm	/^    f010c028:	00 00 00 $/;"	l
f010c02b	obj/kern/kernel.asm	/^    f010c02b:	ff d0                	callq  *%rax$/;"	l
f010c02d	obj/kern/kernel.asm	/^    f010c02d:	48 98                	cltq   $/;"	l
f010c02f	obj/kern/kernel.asm	/^    f010c02f:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f010c033	obj/kern/kernel.asm	/^    f010c033:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010c036	obj/kern/kernel.asm	/^    f010c036:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f010c03a	obj/kern/kernel.asm	/^    f010c03a:	48 29 c2             	sub    %rax,%rdx$/;"	l
f010c03d	obj/kern/kernel.asm	/^    f010c03d:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f010c044	obj/kern/kernel.asm	/^    f010c044:	00 00 00 $/;"	l
f010c047	obj/kern/kernel.asm	/^    f010c047:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010c04b	obj/kern/kernel.asm	/^    f010c04b:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
f010c04f	obj/kern/kernel.asm	/^    f010c04f:	8b 80 d4 00 00 00    	mov    0xd4(%rax),%eax$/;"	l
f010c055	obj/kern/kernel.asm	/^    f010c055:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f010c058	obj/kern/kernel.asm	/^    f010c058:	75 7b                	jne    fffffffff010c0d5 <end+0xfffffffefe66ad35>$/;"	l
f010c05a	obj/kern/kernel.asm	/^    f010c05a:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f010c061	obj/kern/kernel.asm	/^    f010c061:	00 00 00 $/;"	l
f010c064	obj/kern/kernel.asm	/^    f010c064:	ff d0                	callq  *%rax$/;"	l
f010c066	obj/kern/kernel.asm	/^    f010c066:	48 98                	cltq   $/;"	l
f010c068	obj/kern/kernel.asm	/^    f010c068:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f010c06c	obj/kern/kernel.asm	/^    f010c06c:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010c06f	obj/kern/kernel.asm	/^    f010c06f:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f010c073	obj/kern/kernel.asm	/^    f010c073:	48 29 c2             	sub    %rax,%rdx$/;"	l
f010c076	obj/kern/kernel.asm	/^    f010c076:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f010c07d	obj/kern/kernel.asm	/^    f010c07d:	00 00 00 $/;"	l
f010c080	obj/kern/kernel.asm	/^    f010c080:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010c084	obj/kern/kernel.asm	/^    f010c084:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
f010c088	obj/kern/kernel.asm	/^    f010c088:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010c08b	obj/kern/kernel.asm	/^    f010c08b:	48 b8 9f 7d 10 f0 00 	mov    $0xf0107d9f,%rax$/;"	l
f010c092	obj/kern/kernel.asm	/^    f010c092:	00 00 00 $/;"	l
f010c095	obj/kern/kernel.asm	/^    f010c095:	ff d0                	callq  *%rax$/;"	l
f010c097	obj/kern/kernel.asm	/^    f010c097:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f010c09e	obj/kern/kernel.asm	/^    f010c09e:	00 00 00 $/;"	l
f010c0a1	obj/kern/kernel.asm	/^    f010c0a1:	ff d0                	callq  *%rax$/;"	l
f010c0a3	obj/kern/kernel.asm	/^    f010c0a3:	48 98                	cltq   $/;"	l
f010c0a5	obj/kern/kernel.asm	/^    f010c0a5:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f010c0a9	obj/kern/kernel.asm	/^    f010c0a9:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010c0ac	obj/kern/kernel.asm	/^    f010c0ac:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f010c0b0	obj/kern/kernel.asm	/^    f010c0b0:	48 29 c2             	sub    %rax,%rdx$/;"	l
f010c0b3	obj/kern/kernel.asm	/^    f010c0b3:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f010c0ba	obj/kern/kernel.asm	/^    f010c0ba:	00 00 00 $/;"	l
f010c0bd	obj/kern/kernel.asm	/^    f010c0bd:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010c0c1	obj/kern/kernel.asm	/^    f010c0c1:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)$/;"	l
f010c0c8	obj/kern/kernel.asm	/^    f010c0c8:	00 $/;"	l
f010c0c9	obj/kern/kernel.asm	/^    f010c0c9:	48 b8 40 c8 10 f0 00 	mov    $0xf010c840,%rax$/;"	l
f010c0d0	obj/kern/kernel.asm	/^    f010c0d0:	00 00 00 $/;"	l
f010c0d3	obj/kern/kernel.asm	/^    f010c0d3:	ff d0                	callq  *%rax$/;"	l
f010c0d5	obj/kern/kernel.asm	/^    f010c0d5:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f010c0dc	obj/kern/kernel.asm	/^    f010c0dc:	00 00 00 $/;"	l
f010c0df	obj/kern/kernel.asm	/^    f010c0df:	ff d0                	callq  *%rax$/;"	l
f010c0e1	obj/kern/kernel.asm	/^    f010c0e1:	48 98                	cltq   $/;"	l
f010c0e3	obj/kern/kernel.asm	/^    f010c0e3:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f010c0e7	obj/kern/kernel.asm	/^    f010c0e7:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010c0ea	obj/kern/kernel.asm	/^    f010c0ea:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f010c0ee	obj/kern/kernel.asm	/^    f010c0ee:	48 29 c2             	sub    %rax,%rdx$/;"	l
f010c0f1	obj/kern/kernel.asm	/^    f010c0f1:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f010c0f8	obj/kern/kernel.asm	/^    f010c0f8:	00 00 00 $/;"	l
f010c0fb	obj/kern/kernel.asm	/^    f010c0fb:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010c0ff	obj/kern/kernel.asm	/^    f010c0ff:	48 8b 50 08          	mov    0x8(%rax),%rdx$/;"	l
f010c103	obj/kern/kernel.asm	/^    f010c103:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f010c107	obj/kern/kernel.asm	/^    f010c107:	48 89 c3             	mov    %rax,%rbx$/;"	l
f010c10a	obj/kern/kernel.asm	/^    f010c10a:	b8 18 00 00 00       	mov    $0x18,%eax$/;"	l
f010c10f	obj/kern/kernel.asm	/^    f010c10f:	48 89 d7             	mov    %rdx,%rdi$/;"	l
f010c112	obj/kern/kernel.asm	/^    f010c112:	48 89 de             	mov    %rbx,%rsi$/;"	l
f010c115	obj/kern/kernel.asm	/^    f010c115:	48 89 c1             	mov    %rax,%rcx$/;"	l
f010c118	obj/kern/kernel.asm	/^    f010c118:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)$/;"	l
f010c11b	obj/kern/kernel.asm	/^    f010c11b:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f010c122	obj/kern/kernel.asm	/^    f010c122:	00 00 00 $/;"	l
f010c125	obj/kern/kernel.asm	/^    f010c125:	ff d0                	callq  *%rax$/;"	l
f010c127	obj/kern/kernel.asm	/^    f010c127:	48 98                	cltq   $/;"	l
f010c129	obj/kern/kernel.asm	/^    f010c129:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f010c12d	obj/kern/kernel.asm	/^    f010c12d:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010c130	obj/kern/kernel.asm	/^    f010c130:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f010c134	obj/kern/kernel.asm	/^    f010c134:	48 29 c2             	sub    %rax,%rdx$/;"	l
f010c137	obj/kern/kernel.asm	/^    f010c137:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f010c13e	obj/kern/kernel.asm	/^    f010c13e:	00 00 00 $/;"	l
f010c141	obj/kern/kernel.asm	/^    f010c141:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010c145	obj/kern/kernel.asm	/^    f010c145:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
f010c149	obj/kern/kernel.asm	/^    f010c149:	48 89 45 d8          	mov    %rax,-0x28(%rbp)$/;"	l
f010c14d	obj/kern/kernel.asm	/^    f010c14d:	48 b8 08 73 a2 f1 00 	mov    $0xf1a27308,%rax$/;"	l
f010c154	obj/kern/kernel.asm	/^    f010c154:	00 00 00 $/;"	l
f010c157	obj/kern/kernel.asm	/^    f010c157:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx$/;"	l
f010c15b	obj/kern/kernel.asm	/^    f010c15b:	48 89 10             	mov    %rdx,(%rax)$/;"	l
f010c15e	obj/kern/kernel.asm	/^    f010c15e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f010c162	obj/kern/kernel.asm	/^    f010c162:	48 8b 40 70          	mov    0x70(%rax),%rax$/;"	l
f010c166	obj/kern/kernel.asm	/^    f010c166:	89 45 e4             	mov    %eax,-0x1c(%rbp)$/;"	l
f010c169	obj/kern/kernel.asm	/^    f010c169:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f010c16d	obj/kern/kernel.asm	/^    f010c16d:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010c170	obj/kern/kernel.asm	/^    f010c170:	48 b8 1b bd 10 f0 00 	mov    $0xf010bd1b,%rax$/;"	l
f010c177	obj/kern/kernel.asm	/^    f010c177:	00 00 00 $/;"	l
f010c17a	obj/kern/kernel.asm	/^    f010c17a:	ff d0                	callq  *%rax$/;"	l
f010c17c	obj/kern/kernel.asm	/^    f010c17c:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f010c183	obj/kern/kernel.asm	/^    f010c183:	00 00 00 $/;"	l
f010c186	obj/kern/kernel.asm	/^    f010c186:	ff d0                	callq  *%rax$/;"	l
f010c188	obj/kern/kernel.asm	/^    f010c188:	48 98                	cltq   $/;"	l
f010c18a	obj/kern/kernel.asm	/^    f010c18a:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f010c18e	obj/kern/kernel.asm	/^    f010c18e:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010c191	obj/kern/kernel.asm	/^    f010c191:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f010c195	obj/kern/kernel.asm	/^    f010c195:	48 29 c2             	sub    %rax,%rdx$/;"	l
f010c198	obj/kern/kernel.asm	/^    f010c198:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f010c19f	obj/kern/kernel.asm	/^    f010c19f:	00 00 00 $/;"	l
f010c1a2	obj/kern/kernel.asm	/^    f010c1a2:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010c1a6	obj/kern/kernel.asm	/^    f010c1a6:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
f010c1aa	obj/kern/kernel.asm	/^    f010c1aa:	48 85 c0             	test   %rax,%rax$/;"	l
f010c1ad	obj/kern/kernel.asm	/^    f010c1ad:	74 76                	je     fffffffff010c225 <end+0xfffffffefe66ae85>$/;"	l
f010c1af	obj/kern/kernel.asm	/^    f010c1af:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f010c1b6	obj/kern/kernel.asm	/^    f010c1b6:	00 00 00 $/;"	l
f010c1b9	obj/kern/kernel.asm	/^    f010c1b9:	ff d0                	callq  *%rax$/;"	l
f010c1bb	obj/kern/kernel.asm	/^    f010c1bb:	48 98                	cltq   $/;"	l
f010c1bd	obj/kern/kernel.asm	/^    f010c1bd:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f010c1c1	obj/kern/kernel.asm	/^    f010c1c1:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010c1c4	obj/kern/kernel.asm	/^    f010c1c4:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f010c1c8	obj/kern/kernel.asm	/^    f010c1c8:	48 29 c2             	sub    %rax,%rdx$/;"	l
f010c1cb	obj/kern/kernel.asm	/^    f010c1cb:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f010c1d2	obj/kern/kernel.asm	/^    f010c1d2:	00 00 00 $/;"	l
f010c1d5	obj/kern/kernel.asm	/^    f010c1d5:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010c1d9	obj/kern/kernel.asm	/^    f010c1d9:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
f010c1dd	obj/kern/kernel.asm	/^    f010c1dd:	8b 80 d4 00 00 00    	mov    0xd4(%rax),%eax$/;"	l
f010c1e3	obj/kern/kernel.asm	/^    f010c1e3:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f010c1e6	obj/kern/kernel.asm	/^    f010c1e6:	75 3d                	jne    fffffffff010c225 <end+0xfffffffefe66ae85>$/;"	l
f010c1e8	obj/kern/kernel.asm	/^    f010c1e8:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f010c1ef	obj/kern/kernel.asm	/^    f010c1ef:	00 00 00 $/;"	l
f010c1f2	obj/kern/kernel.asm	/^    f010c1f2:	ff d0                	callq  *%rax$/;"	l
f010c1f4	obj/kern/kernel.asm	/^    f010c1f4:	48 98                	cltq   $/;"	l
f010c1f6	obj/kern/kernel.asm	/^    f010c1f6:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f010c1fa	obj/kern/kernel.asm	/^    f010c1fa:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010c1fd	obj/kern/kernel.asm	/^    f010c1fd:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f010c201	obj/kern/kernel.asm	/^    f010c201:	48 29 c2             	sub    %rax,%rdx$/;"	l
f010c204	obj/kern/kernel.asm	/^    f010c204:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f010c20b	obj/kern/kernel.asm	/^    f010c20b:	00 00 00 $/;"	l
f010c20e	obj/kern/kernel.asm	/^    f010c20e:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010c212	obj/kern/kernel.asm	/^    f010c212:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
f010c216	obj/kern/kernel.asm	/^    f010c216:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010c219	obj/kern/kernel.asm	/^    f010c219:	48 b8 a9 83 10 f0 00 	mov    $0xf01083a9,%rax$/;"	l
f010c220	obj/kern/kernel.asm	/^    f010c220:	00 00 00 $/;"	l
f010c223	obj/kern/kernel.asm	/^    f010c223:	ff d0                	callq  *%rax$/;"	l
f010c225	obj/kern/kernel.asm	/^    f010c225:	48 b8 40 c8 10 f0 00 	mov    $0xf010c840,%rax$/;"	l
f010c22c	obj/kern/kernel.asm	/^    f010c22c:	00 00 00 $/;"	l
f010c22f	obj/kern/kernel.asm	/^    f010c22f:	ff d0                	callq  *%rax$/;"	l
f010c231	obj/kern/kernel.asm	/^    f010c231:	55                   	push   %rbp$/;"	l
f010c232	obj/kern/kernel.asm	/^    f010c232:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010c235	obj/kern/kernel.asm	/^    f010c235:	53                   	push   %rbx$/;"	l
f010c236	obj/kern/kernel.asm	/^    f010c236:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
f010c23a	obj/kern/kernel.asm	/^    f010c23a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
f010c23e	obj/kern/kernel.asm	/^    f010c23e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010c242	obj/kern/kernel.asm	/^    f010c242:	48 8b 98 98 00 00 00 	mov    0x98(%rax),%rbx$/;"	l
f010c249	obj/kern/kernel.asm	/^    f010c249:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f010c250	obj/kern/kernel.asm	/^    f010c250:	00 00 00 $/;"	l
f010c253	obj/kern/kernel.asm	/^    f010c253:	ff d0                	callq  *%rax$/;"	l
f010c255	obj/kern/kernel.asm	/^    f010c255:	48 98                	cltq   $/;"	l
f010c257	obj/kern/kernel.asm	/^    f010c257:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f010c25b	obj/kern/kernel.asm	/^    f010c25b:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010c25e	obj/kern/kernel.asm	/^    f010c25e:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f010c262	obj/kern/kernel.asm	/^    f010c262:	48 29 c2             	sub    %rax,%rdx$/;"	l
f010c265	obj/kern/kernel.asm	/^    f010c265:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f010c26c	obj/kern/kernel.asm	/^    f010c26c:	00 00 00 $/;"	l
f010c26f	obj/kern/kernel.asm	/^    f010c26f:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010c273	obj/kern/kernel.asm	/^    f010c273:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
f010c277	obj/kern/kernel.asm	/^    f010c277:	8b 80 c8 00 00 00    	mov    0xc8(%rax),%eax$/;"	l
f010c27d	obj/kern/kernel.asm	/^    f010c27d:	48 89 da             	mov    %rbx,%rdx$/;"	l
f010c280	obj/kern/kernel.asm	/^    f010c280:	89 c6                	mov    %eax,%esi$/;"	l
f010c282	obj/kern/kernel.asm	/^    f010c282:	48 bf 98 2b 11 f0 00 	mov    $0xf0112b98,%rdi$/;"	l
f010c289	obj/kern/kernel.asm	/^    f010c289:	00 00 00 $/;"	l
f010c28c	obj/kern/kernel.asm	/^    f010c28c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010c291	obj/kern/kernel.asm	/^    f010c291:	48 b9 eb 88 10 f0 00 	mov    $0xf01088eb,%rcx$/;"	l
f010c298	obj/kern/kernel.asm	/^    f010c298:	00 00 00 $/;"	l
f010c29b	obj/kern/kernel.asm	/^    f010c29b:	ff d1                	callq  *%rcx$/;"	l
f010c29d	obj/kern/kernel.asm	/^    f010c29d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010c2a1	obj/kern/kernel.asm	/^    f010c2a1:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010c2a4	obj/kern/kernel.asm	/^    f010c2a4:	48 b8 bf b7 10 f0 00 	mov    $0xf010b7bf,%rax$/;"	l
f010c2ab	obj/kern/kernel.asm	/^    f010c2ab:	00 00 00 $/;"	l
f010c2ae	obj/kern/kernel.asm	/^    f010c2ae:	ff d0                	callq  *%rax$/;"	l
f010c2b0	obj/kern/kernel.asm	/^    f010c2b0:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f010c2b7	obj/kern/kernel.asm	/^    f010c2b7:	00 00 00 $/;"	l
f010c2ba	obj/kern/kernel.asm	/^    f010c2ba:	ff d0                	callq  *%rax$/;"	l
f010c2bc	obj/kern/kernel.asm	/^    f010c2bc:	48 98                	cltq   $/;"	l
f010c2be	obj/kern/kernel.asm	/^    f010c2be:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f010c2c2	obj/kern/kernel.asm	/^    f010c2c2:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010c2c5	obj/kern/kernel.asm	/^    f010c2c5:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f010c2c9	obj/kern/kernel.asm	/^    f010c2c9:	48 29 c2             	sub    %rax,%rdx$/;"	l
f010c2cc	obj/kern/kernel.asm	/^    f010c2cc:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f010c2d3	obj/kern/kernel.asm	/^    f010c2d3:	00 00 00 $/;"	l
f010c2d6	obj/kern/kernel.asm	/^    f010c2d6:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010c2da	obj/kern/kernel.asm	/^    f010c2da:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
f010c2de	obj/kern/kernel.asm	/^    f010c2de:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010c2e1	obj/kern/kernel.asm	/^    f010c2e1:	48 b8 e6 81 10 f0 00 	mov    $0xf01081e6,%rax$/;"	l
f010c2e8	obj/kern/kernel.asm	/^    f010c2e8:	00 00 00 $/;"	l
f010c2eb	obj/kern/kernel.asm	/^    f010c2eb:	ff d0                	callq  *%rax$/;"	l
f010c2ed	obj/kern/kernel.asm	/^    f010c2ed:	48 83 c4 18          	add    $0x18,%rsp$/;"	l
f010c2f1	obj/kern/kernel.asm	/^    f010c2f1:	5b                   	pop    %rbx$/;"	l
f010c2f2	obj/kern/kernel.asm	/^    f010c2f2:	c9                   	leaveq $/;"	l
f010c2f3	obj/kern/kernel.asm	/^    f010c2f3:	c3                   	retq   $/;"	l
f010c2f4	obj/kern/kernel.asm	/^    f010c2f4:	55                   	push   %rbp$/;"	l
f010c2f5	obj/kern/kernel.asm	/^    f010c2f5:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010c2f8	obj/kern/kernel.asm	/^    f010c2f8:	53                   	push   %rbx$/;"	l
f010c2f9	obj/kern/kernel.asm	/^    f010c2f9:	48 83 ec 38          	sub    $0x38,%rsp$/;"	l
f010c2fd	obj/kern/kernel.asm	/^    f010c2fd:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)$/;"	l
f010c301	obj/kern/kernel.asm	/^    f010c301:	0f 20 d0             	mov    %cr2,%rax$/;"	l
f010c304	obj/kern/kernel.asm	/^    f010c304:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
f010c308	obj/kern/kernel.asm	/^    f010c308:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010c30c	obj/kern/kernel.asm	/^    f010c30c:	48 89 45 d0          	mov    %rax,-0x30(%rbp)$/;"	l
f010c310	obj/kern/kernel.asm	/^    f010c310:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f010c314	obj/kern/kernel.asm	/^    f010c314:	0f b7 80 a0 00 00 00 	movzwl 0xa0(%rax),%eax$/;"	l
f010c31b	obj/kern/kernel.asm	/^    f010c31b:	66 83 f8 08          	cmp    $0x8,%ax$/;"	l
f010c31f	obj/kern/kernel.asm	/^    f010c31f:	75 2a                	jne    fffffffff010c34b <end+0xfffffffefe66afab>$/;"	l
f010c321	obj/kern/kernel.asm	/^    f010c321:	48 ba c0 2b 11 f0 00 	mov    $0xf0112bc0,%rdx$/;"	l
f010c328	obj/kern/kernel.asm	/^    f010c328:	00 00 00 $/;"	l
f010c32b	obj/kern/kernel.asm	/^    f010c32b:	be a6 01 00 00       	mov    $0x1a6,%esi$/;"	l
f010c330	obj/kern/kernel.asm	/^    f010c330:	48 bf c8 29 11 f0 00 	mov    $0xf01129c8,%rdi$/;"	l
f010c337	obj/kern/kernel.asm	/^    f010c337:	00 00 00 $/;"	l
f010c33a	obj/kern/kernel.asm	/^    f010c33a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010c33f	obj/kern/kernel.asm	/^    f010c33f:	48 b9 18 05 10 f0 00 	mov    $0xf0100518,%rcx$/;"	l
f010c346	obj/kern/kernel.asm	/^    f010c346:	00 00 00 $/;"	l
f010c349	obj/kern/kernel.asm	/^    f010c349:	ff d1                	callq  *%rcx$/;"	l
f010c34b	obj/kern/kernel.asm	/^    f010c34b:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f010c352	obj/kern/kernel.asm	/^    f010c352:	00 00 00 $/;"	l
f010c355	obj/kern/kernel.asm	/^    f010c355:	ff d0                	callq  *%rax$/;"	l
f010c357	obj/kern/kernel.asm	/^    f010c357:	48 98                	cltq   $/;"	l
f010c359	obj/kern/kernel.asm	/^    f010c359:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f010c35d	obj/kern/kernel.asm	/^    f010c35d:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010c360	obj/kern/kernel.asm	/^    f010c360:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f010c364	obj/kern/kernel.asm	/^    f010c364:	48 29 c2             	sub    %rax,%rdx$/;"	l
f010c367	obj/kern/kernel.asm	/^    f010c367:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f010c36e	obj/kern/kernel.asm	/^    f010c36e:	00 00 00 $/;"	l
f010c371	obj/kern/kernel.asm	/^    f010c371:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010c375	obj/kern/kernel.asm	/^    f010c375:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
f010c379	obj/kern/kernel.asm	/^    f010c379:	48 8b 80 f0 00 00 00 	mov    0xf0(%rax),%rax$/;"	l
f010c380	obj/kern/kernel.asm	/^    f010c380:	48 85 c0             	test   %rax,%rax$/;"	l
f010c383	obj/kern/kernel.asm	/^    f010c383:	0f 84 1a 02 00 00    	je     fffffffff010c5a3 <end+0xfffffffefe66b203>$/;"	l
f010c389	obj/kern/kernel.asm	/^    f010c389:	c7 45 d8 00 00 80 ef 	movl   $0xef800000,-0x28(%rbp)$/;"	l
f010c390	obj/kern/kernel.asm	/^    f010c390:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)$/;"	l
f010c397	obj/kern/kernel.asm	/^    f010c397:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f010c39b	obj/kern/kernel.asm	/^    f010c39b:	48 8b 90 b0 00 00 00 	mov    0xb0(%rax),%rdx$/;"	l
f010c3a2	obj/kern/kernel.asm	/^    f010c3a2:	b8 ff ff 7f ef       	mov    $0xef7fffff,%eax$/;"	l
f010c3a7	obj/kern/kernel.asm	/^    f010c3a7:	48 39 c2             	cmp    %rax,%rdx$/;"	l
f010c3aa	obj/kern/kernel.asm	/^    f010c3aa:	77 28                	ja     fffffffff010c3d4 <end+0xfffffffefe66b034>$/;"	l
f010c3ac	obj/kern/kernel.asm	/^    f010c3ac:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f010c3b0	obj/kern/kernel.asm	/^    f010c3b0:	48 8b 90 b0 00 00 00 	mov    0xb0(%rax),%rdx$/;"	l
f010c3b7	obj/kern/kernel.asm	/^    f010c3b7:	b8 ff ef 7f ef       	mov    $0xef7fefff,%eax$/;"	l
f010c3bc	obj/kern/kernel.asm	/^    f010c3bc:	48 39 c2             	cmp    %rax,%rdx$/;"	l
f010c3bf	obj/kern/kernel.asm	/^    f010c3bf:	76 13                	jbe    fffffffff010c3d4 <end+0xfffffffefe66b034>$/;"	l
f010c3c1	obj/kern/kernel.asm	/^    f010c3c1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f010c3c5	obj/kern/kernel.asm	/^    f010c3c5:	48 8b 80 b0 00 00 00 	mov    0xb0(%rax),%rax$/;"	l
f010c3cc	obj/kern/kernel.asm	/^    f010c3cc:	48 83 e8 08          	sub    $0x8,%rax$/;"	l
f010c3d0	obj/kern/kernel.asm	/^    f010c3d0:	48 89 45 d8          	mov    %rax,-0x28(%rbp)$/;"	l
f010c3d4	obj/kern/kernel.asm	/^    f010c3d4:	48 81 6d d8 a0 00 00 	subq   $0xa0,-0x28(%rbp)$/;"	l
f010c3db	obj/kern/kernel.asm	/^    f010c3db:	00 $/;"	l
f010c3dc	obj/kern/kernel.asm	/^    f010c3dc:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f010c3e0	obj/kern/kernel.asm	/^    f010c3e0:	48 89 45 e0          	mov    %rax,-0x20(%rbp)$/;"	l
f010c3e4	obj/kern/kernel.asm	/^    f010c3e4:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f010c3eb	obj/kern/kernel.asm	/^    f010c3eb:	00 00 00 $/;"	l
f010c3ee	obj/kern/kernel.asm	/^    f010c3ee:	ff d0                	callq  *%rax$/;"	l
f010c3f0	obj/kern/kernel.asm	/^    f010c3f0:	48 98                	cltq   $/;"	l
f010c3f2	obj/kern/kernel.asm	/^    f010c3f2:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f010c3f6	obj/kern/kernel.asm	/^    f010c3f6:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010c3f9	obj/kern/kernel.asm	/^    f010c3f9:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f010c3fd	obj/kern/kernel.asm	/^    f010c3fd:	48 29 c2             	sub    %rax,%rdx$/;"	l
f010c400	obj/kern/kernel.asm	/^    f010c400:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f010c407	obj/kern/kernel.asm	/^    f010c407:	00 00 00 $/;"	l
f010c40a	obj/kern/kernel.asm	/^    f010c40a:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010c40e	obj/kern/kernel.asm	/^    f010c40e:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
f010c412	obj/kern/kernel.asm	/^    f010c412:	48 8b 5d e0          	mov    -0x20(%rbp),%rbx$/;"	l
f010c416	obj/kern/kernel.asm	/^    f010c416:	b9 02 00 00 00       	mov    $0x2,%ecx$/;"	l
f010c41b	obj/kern/kernel.asm	/^    f010c41b:	ba a0 00 00 00       	mov    $0xa0,%edx$/;"	l
f010c420	obj/kern/kernel.asm	/^    f010c420:	48 89 de             	mov    %rbx,%rsi$/;"	l
f010c423	obj/kern/kernel.asm	/^    f010c423:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010c426	obj/kern/kernel.asm	/^    f010c426:	48 b8 b2 34 10 f0 00 	mov    $0xf01034b2,%rax$/;"	l
f010c42d	obj/kern/kernel.asm	/^    f010c42d:	00 00 00 $/;"	l
f010c430	obj/kern/kernel.asm	/^    f010c430:	ff d0                	callq  *%rax$/;"	l
f010c432	obj/kern/kernel.asm	/^    f010c432:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f010c436	obj/kern/kernel.asm	/^    f010c436:	48 8b 90 b0 00 00 00 	mov    0xb0(%rax),%rdx$/;"	l
f010c43d	obj/kern/kernel.asm	/^    f010c43d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
f010c441	obj/kern/kernel.asm	/^    f010c441:	48 89 90 98 00 00 00 	mov    %rdx,0x98(%rax)$/;"	l
f010c448	obj/kern/kernel.asm	/^    f010c448:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f010c44c	obj/kern/kernel.asm	/^    f010c44c:	48 8b 90 a8 00 00 00 	mov    0xa8(%rax),%rdx$/;"	l
f010c453	obj/kern/kernel.asm	/^    f010c453:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
f010c457	obj/kern/kernel.asm	/^    f010c457:	48 89 90 90 00 00 00 	mov    %rdx,0x90(%rax)$/;"	l
f010c45e	obj/kern/kernel.asm	/^    f010c45e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f010c462	obj/kern/kernel.asm	/^    f010c462:	48 8b 90 98 00 00 00 	mov    0x98(%rax),%rdx$/;"	l
f010c469	obj/kern/kernel.asm	/^    f010c469:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
f010c46d	obj/kern/kernel.asm	/^    f010c46d:	48 89 90 88 00 00 00 	mov    %rdx,0x88(%rax)$/;"	l
f010c474	obj/kern/kernel.asm	/^    f010c474:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
f010c478	obj/kern/kernel.asm	/^    f010c478:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx$/;"	l
f010c47c	obj/kern/kernel.asm	/^    f010c47c:	48 8b 0a             	mov    (%rdx),%rcx$/;"	l
f010c47f	obj/kern/kernel.asm	/^    f010c47f:	48 89 48 10          	mov    %rcx,0x10(%rax)$/;"	l
f010c483	obj/kern/kernel.asm	/^    f010c483:	48 8b 4a 08          	mov    0x8(%rdx),%rcx$/;"	l
f010c487	obj/kern/kernel.asm	/^    f010c487:	48 89 48 18          	mov    %rcx,0x18(%rax)$/;"	l
f010c48b	obj/kern/kernel.asm	/^    f010c48b:	48 8b 4a 10          	mov    0x10(%rdx),%rcx$/;"	l
f010c48f	obj/kern/kernel.asm	/^    f010c48f:	48 89 48 20          	mov    %rcx,0x20(%rax)$/;"	l
f010c493	obj/kern/kernel.asm	/^    f010c493:	48 8b 4a 18          	mov    0x18(%rdx),%rcx$/;"	l
f010c497	obj/kern/kernel.asm	/^    f010c497:	48 89 48 28          	mov    %rcx,0x28(%rax)$/;"	l
f010c49b	obj/kern/kernel.asm	/^    f010c49b:	48 8b 4a 20          	mov    0x20(%rdx),%rcx$/;"	l
f010c49f	obj/kern/kernel.asm	/^    f010c49f:	48 89 48 30          	mov    %rcx,0x30(%rax)$/;"	l
f010c4a3	obj/kern/kernel.asm	/^    f010c4a3:	48 8b 4a 28          	mov    0x28(%rdx),%rcx$/;"	l
f010c4a7	obj/kern/kernel.asm	/^    f010c4a7:	48 89 48 38          	mov    %rcx,0x38(%rax)$/;"	l
f010c4ab	obj/kern/kernel.asm	/^    f010c4ab:	48 8b 4a 30          	mov    0x30(%rdx),%rcx$/;"	l
f010c4af	obj/kern/kernel.asm	/^    f010c4af:	48 89 48 40          	mov    %rcx,0x40(%rax)$/;"	l
f010c4b3	obj/kern/kernel.asm	/^    f010c4b3:	48 8b 4a 38          	mov    0x38(%rdx),%rcx$/;"	l
f010c4b7	obj/kern/kernel.asm	/^    f010c4b7:	48 89 48 48          	mov    %rcx,0x48(%rax)$/;"	l
f010c4bb	obj/kern/kernel.asm	/^    f010c4bb:	48 8b 4a 40          	mov    0x40(%rdx),%rcx$/;"	l
f010c4bf	obj/kern/kernel.asm	/^    f010c4bf:	48 89 48 50          	mov    %rcx,0x50(%rax)$/;"	l
f010c4c3	obj/kern/kernel.asm	/^    f010c4c3:	48 8b 4a 48          	mov    0x48(%rdx),%rcx$/;"	l
f010c4c7	obj/kern/kernel.asm	/^    f010c4c7:	48 89 48 58          	mov    %rcx,0x58(%rax)$/;"	l
f010c4cb	obj/kern/kernel.asm	/^    f010c4cb:	48 8b 4a 50          	mov    0x50(%rdx),%rcx$/;"	l
f010c4cf	obj/kern/kernel.asm	/^    f010c4cf:	48 89 48 60          	mov    %rcx,0x60(%rax)$/;"	l
f010c4d3	obj/kern/kernel.asm	/^    f010c4d3:	48 8b 4a 58          	mov    0x58(%rdx),%rcx$/;"	l
f010c4d7	obj/kern/kernel.asm	/^    f010c4d7:	48 89 48 68          	mov    %rcx,0x68(%rax)$/;"	l
f010c4db	obj/kern/kernel.asm	/^    f010c4db:	48 8b 4a 60          	mov    0x60(%rdx),%rcx$/;"	l
f010c4df	obj/kern/kernel.asm	/^    f010c4df:	48 89 48 70          	mov    %rcx,0x70(%rax)$/;"	l
f010c4e3	obj/kern/kernel.asm	/^    f010c4e3:	48 8b 4a 68          	mov    0x68(%rdx),%rcx$/;"	l
f010c4e7	obj/kern/kernel.asm	/^    f010c4e7:	48 89 48 78          	mov    %rcx,0x78(%rax)$/;"	l
f010c4eb	obj/kern/kernel.asm	/^    f010c4eb:	48 8b 52 70          	mov    0x70(%rdx),%rdx$/;"	l
f010c4ef	obj/kern/kernel.asm	/^    f010c4ef:	48 89 90 80 00 00 00 	mov    %rdx,0x80(%rax)$/;"	l
f010c4f6	obj/kern/kernel.asm	/^    f010c4f6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f010c4fa	obj/kern/kernel.asm	/^    f010c4fa:	48 8b 90 90 00 00 00 	mov    0x90(%rax),%rdx$/;"	l
f010c501	obj/kern/kernel.asm	/^    f010c501:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
f010c505	obj/kern/kernel.asm	/^    f010c505:	48 89 50 08          	mov    %rdx,0x8(%rax)$/;"	l
f010c509	obj/kern/kernel.asm	/^    f010c509:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
f010c50d	obj/kern/kernel.asm	/^    f010c50d:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx$/;"	l
f010c511	obj/kern/kernel.asm	/^    f010c511:	48 89 10             	mov    %rdx,(%rax)$/;"	l
f010c514	obj/kern/kernel.asm	/^    f010c514:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f010c51b	obj/kern/kernel.asm	/^    f010c51b:	00 00 00 $/;"	l
f010c51e	obj/kern/kernel.asm	/^    f010c51e:	ff d0                	callq  *%rax$/;"	l
f010c520	obj/kern/kernel.asm	/^    f010c520:	48 98                	cltq   $/;"	l
f010c522	obj/kern/kernel.asm	/^    f010c522:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f010c526	obj/kern/kernel.asm	/^    f010c526:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010c529	obj/kern/kernel.asm	/^    f010c529:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f010c52d	obj/kern/kernel.asm	/^    f010c52d:	48 29 c2             	sub    %rax,%rdx$/;"	l
f010c530	obj/kern/kernel.asm	/^    f010c530:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f010c537	obj/kern/kernel.asm	/^    f010c537:	00 00 00 $/;"	l
f010c53a	obj/kern/kernel.asm	/^    f010c53a:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010c53e	obj/kern/kernel.asm	/^    f010c53e:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
f010c542	obj/kern/kernel.asm	/^    f010c542:	48 8b 80 f0 00 00 00 	mov    0xf0(%rax),%rax$/;"	l
f010c549	obj/kern/kernel.asm	/^    f010c549:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010c54c	obj/kern/kernel.asm	/^    f010c54c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f010c550	obj/kern/kernel.asm	/^    f010c550:	48 89 90 98 00 00 00 	mov    %rdx,0x98(%rax)$/;"	l
f010c557	obj/kern/kernel.asm	/^    f010c557:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx$/;"	l
f010c55b	obj/kern/kernel.asm	/^    f010c55b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f010c55f	obj/kern/kernel.asm	/^    f010c55f:	48 89 90 b0 00 00 00 	mov    %rdx,0xb0(%rax)$/;"	l
f010c566	obj/kern/kernel.asm	/^    f010c566:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f010c56d	obj/kern/kernel.asm	/^    f010c56d:	00 00 00 $/;"	l
f010c570	obj/kern/kernel.asm	/^    f010c570:	ff d0                	callq  *%rax$/;"	l
f010c572	obj/kern/kernel.asm	/^    f010c572:	48 98                	cltq   $/;"	l
f010c574	obj/kern/kernel.asm	/^    f010c574:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f010c578	obj/kern/kernel.asm	/^    f010c578:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010c57b	obj/kern/kernel.asm	/^    f010c57b:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f010c57f	obj/kern/kernel.asm	/^    f010c57f:	48 29 c2             	sub    %rax,%rdx$/;"	l
f010c582	obj/kern/kernel.asm	/^    f010c582:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f010c589	obj/kern/kernel.asm	/^    f010c589:	00 00 00 $/;"	l
f010c58c	obj/kern/kernel.asm	/^    f010c58c:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010c590	obj/kern/kernel.asm	/^    f010c590:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
f010c594	obj/kern/kernel.asm	/^    f010c594:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010c597	obj/kern/kernel.asm	/^    f010c597:	48 b8 a9 83 10 f0 00 	mov    $0xf01083a9,%rax$/;"	l
f010c59e	obj/kern/kernel.asm	/^    f010c59e:	00 00 00 $/;"	l
f010c5a1	obj/kern/kernel.asm	/^    f010c5a1:	ff d0                	callq  *%rax$/;"	l
f010c5a3	obj/kern/kernel.asm	/^    f010c5a3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f010c5a7	obj/kern/kernel.asm	/^    f010c5a7:	48 8b 98 98 00 00 00 	mov    0x98(%rax),%rbx$/;"	l
f010c5ae	obj/kern/kernel.asm	/^    f010c5ae:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f010c5b5	obj/kern/kernel.asm	/^    f010c5b5:	00 00 00 $/;"	l
f010c5b8	obj/kern/kernel.asm	/^    f010c5b8:	ff d0                	callq  *%rax$/;"	l
f010c5ba	obj/kern/kernel.asm	/^    f010c5ba:	48 98                	cltq   $/;"	l
f010c5bc	obj/kern/kernel.asm	/^    f010c5bc:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f010c5c0	obj/kern/kernel.asm	/^    f010c5c0:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010c5c3	obj/kern/kernel.asm	/^    f010c5c3:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f010c5c7	obj/kern/kernel.asm	/^    f010c5c7:	48 29 c2             	sub    %rax,%rdx$/;"	l
f010c5ca	obj/kern/kernel.asm	/^    f010c5ca:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f010c5d1	obj/kern/kernel.asm	/^    f010c5d1:	00 00 00 $/;"	l
f010c5d4	obj/kern/kernel.asm	/^    f010c5d4:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010c5d8	obj/kern/kernel.asm	/^    f010c5d8:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
f010c5dc	obj/kern/kernel.asm	/^    f010c5dc:	8b 80 c8 00 00 00    	mov    0xc8(%rax),%eax$/;"	l
f010c5e2	obj/kern/kernel.asm	/^    f010c5e2:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx$/;"	l
f010c5e6	obj/kern/kernel.asm	/^    f010c5e6:	48 89 d9             	mov    %rbx,%rcx$/;"	l
f010c5e9	obj/kern/kernel.asm	/^    f010c5e9:	89 c6                	mov    %eax,%esi$/;"	l
f010c5eb	obj/kern/kernel.asm	/^    f010c5eb:	48 bf f0 2b 11 f0 00 	mov    $0xf0112bf0,%rdi$/;"	l
f010c5f2	obj/kern/kernel.asm	/^    f010c5f2:	00 00 00 $/;"	l
f010c5f5	obj/kern/kernel.asm	/^    f010c5f5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010c5fa	obj/kern/kernel.asm	/^    f010c5fa:	48 bb eb 88 10 f0 00 	mov    $0xf01088eb,%rbx$/;"	l
f010c601	obj/kern/kernel.asm	/^    f010c601:	00 00 00 $/;"	l
f010c604	obj/kern/kernel.asm	/^    f010c604:	ff d3                	callq  *%rbx$/;"	l
f010c606	obj/kern/kernel.asm	/^    f010c606:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f010c60a	obj/kern/kernel.asm	/^    f010c60a:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010c60d	obj/kern/kernel.asm	/^    f010c60d:	48 b8 bf b7 10 f0 00 	mov    $0xf010b7bf,%rax$/;"	l
f010c614	obj/kern/kernel.asm	/^    f010c614:	00 00 00 $/;"	l
f010c617	obj/kern/kernel.asm	/^    f010c617:	ff d0                	callq  *%rax$/;"	l
f010c619	obj/kern/kernel.asm	/^    f010c619:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f010c620	obj/kern/kernel.asm	/^    f010c620:	00 00 00 $/;"	l
f010c623	obj/kern/kernel.asm	/^    f010c623:	ff d0                	callq  *%rax$/;"	l
f010c625	obj/kern/kernel.asm	/^    f010c625:	48 98                	cltq   $/;"	l
f010c627	obj/kern/kernel.asm	/^    f010c627:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f010c62b	obj/kern/kernel.asm	/^    f010c62b:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010c62e	obj/kern/kernel.asm	/^    f010c62e:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f010c632	obj/kern/kernel.asm	/^    f010c632:	48 29 c2             	sub    %rax,%rdx$/;"	l
f010c635	obj/kern/kernel.asm	/^    f010c635:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f010c63c	obj/kern/kernel.asm	/^    f010c63c:	00 00 00 $/;"	l
f010c63f	obj/kern/kernel.asm	/^    f010c63f:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010c643	obj/kern/kernel.asm	/^    f010c643:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
f010c647	obj/kern/kernel.asm	/^    f010c647:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010c64a	obj/kern/kernel.asm	/^    f010c64a:	48 b8 e6 81 10 f0 00 	mov    $0xf01081e6,%rax$/;"	l
f010c651	obj/kern/kernel.asm	/^    f010c651:	00 00 00 $/;"	l
f010c654	obj/kern/kernel.asm	/^    f010c654:	ff d0                	callq  *%rax$/;"	l
f010c656	obj/kern/kernel.asm	/^    f010c656:	48 83 c4 38          	add    $0x38,%rsp$/;"	l
f010c65a	obj/kern/kernel.asm	/^    f010c65a:	5b                   	pop    %rbx$/;"	l
f010c65b	obj/kern/kernel.asm	/^    f010c65b:	c9                   	leaveq $/;"	l
f010c65c	obj/kern/kernel.asm	/^    f010c65c:	c3                   	retq   $/;"	l
f010c65d	obj/kern/kernel.asm	/^    f010c65d:	55                   	push   %rbp$/;"	l
f010c65e	obj/kern/kernel.asm	/^    f010c65e:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010c661	obj/kern/kernel.asm	/^    f010c661:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
f010c665	obj/kern/kernel.asm	/^    f010c665:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
f010c669	obj/kern/kernel.asm	/^    f010c669:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f010c66d	obj/kern/kernel.asm	/^    f010c66d:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010c670	obj/kern/kernel.asm	/^    f010c670:	48 b8 bf b7 10 f0 00 	mov    $0xf010b7bf,%rax$/;"	l
f010c677	obj/kern/kernel.asm	/^    f010c677:	00 00 00 $/;"	l
f010c67a	obj/kern/kernel.asm	/^    f010c67a:	ff d0                	callq  *%rax$/;"	l
f010c67c	obj/kern/kernel.asm	/^    f010c67c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f010c680	obj/kern/kernel.asm	/^    f010c680:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010c683	obj/kern/kernel.asm	/^    f010c683:	48 b8 2e 19 10 f0 00 	mov    $0xf010192e,%rax$/;"	l
f010c68a	obj/kern/kernel.asm	/^    f010c68a:	00 00 00 $/;"	l
f010c68d	obj/kern/kernel.asm	/^    f010c68d:	ff d0                	callq  *%rax$/;"	l
f010c68f	obj/kern/kernel.asm	/^    f010c68f:	c9                   	leaveq $/;"	l
f010c690	obj/kern/kernel.asm	/^    f010c690:	c3                   	retq   $/;"	l
f010c691	obj/kern/kernel.asm	/^    f010c691:	00 00                	add    %al,(%rax)$/;"	l
f010c694	obj/kern/kernel.asm	/^    f010c694:	6a 00                	pushq  $0x0$/;"	l
f010c696	obj/kern/kernel.asm	/^    f010c696:	6a 00                	pushq  $0x0$/;"	l
f010c698	obj/kern/kernel.asm	/^    f010c698:	e9 49 01 00 00       	jmpq   fffffffff010c7e6 <end+0xfffffffefe66b446>$/;"	l
f010c69d	obj/kern/kernel.asm	/^    f010c69d:	90                   	nop$/;"	l
f010c69e	obj/kern/kernel.asm	/^    f010c69e:	6a 00                	pushq  $0x0$/;"	l
f010c6a0	obj/kern/kernel.asm	/^    f010c6a0:	6a 01                	pushq  $0x1$/;"	l
f010c6a2	obj/kern/kernel.asm	/^    f010c6a2:	e9 3f 01 00 00       	jmpq   fffffffff010c7e6 <end+0xfffffffefe66b446>$/;"	l
f010c6a7	obj/kern/kernel.asm	/^    f010c6a7:	90                   	nop$/;"	l
f010c6a8	obj/kern/kernel.asm	/^    f010c6a8:	6a 00                	pushq  $0x0$/;"	l
f010c6aa	obj/kern/kernel.asm	/^    f010c6aa:	6a 02                	pushq  $0x2$/;"	l
f010c6ac	obj/kern/kernel.asm	/^    f010c6ac:	e9 35 01 00 00       	jmpq   fffffffff010c7e6 <end+0xfffffffefe66b446>$/;"	l
f010c6b1	obj/kern/kernel.asm	/^    f010c6b1:	90                   	nop$/;"	l
f010c6b2	obj/kern/kernel.asm	/^    f010c6b2:	6a 00                	pushq  $0x0$/;"	l
f010c6b4	obj/kern/kernel.asm	/^    f010c6b4:	6a 03                	pushq  $0x3$/;"	l
f010c6b6	obj/kern/kernel.asm	/^    f010c6b6:	e9 2b 01 00 00       	jmpq   fffffffff010c7e6 <end+0xfffffffefe66b446>$/;"	l
f010c6bb	obj/kern/kernel.asm	/^    f010c6bb:	90                   	nop$/;"	l
f010c6bc	obj/kern/kernel.asm	/^    f010c6bc:	6a 00                	pushq  $0x0$/;"	l
f010c6be	obj/kern/kernel.asm	/^    f010c6be:	6a 04                	pushq  $0x4$/;"	l
f010c6c0	obj/kern/kernel.asm	/^    f010c6c0:	e9 21 01 00 00       	jmpq   fffffffff010c7e6 <end+0xfffffffefe66b446>$/;"	l
f010c6c5	obj/kern/kernel.asm	/^    f010c6c5:	90                   	nop$/;"	l
f010c6c6	obj/kern/kernel.asm	/^    f010c6c6:	6a 00                	pushq  $0x0$/;"	l
f010c6c8	obj/kern/kernel.asm	/^    f010c6c8:	6a 05                	pushq  $0x5$/;"	l
f010c6ca	obj/kern/kernel.asm	/^    f010c6ca:	e9 17 01 00 00       	jmpq   fffffffff010c7e6 <end+0xfffffffefe66b446>$/;"	l
f010c6cf	obj/kern/kernel.asm	/^    f010c6cf:	90                   	nop$/;"	l
f010c6d0	obj/kern/kernel.asm	/^    f010c6d0:	6a 00                	pushq  $0x0$/;"	l
f010c6d2	obj/kern/kernel.asm	/^    f010c6d2:	6a 06                	pushq  $0x6$/;"	l
f010c6d4	obj/kern/kernel.asm	/^    f010c6d4:	e9 0d 01 00 00       	jmpq   fffffffff010c7e6 <end+0xfffffffefe66b446>$/;"	l
f010c6d9	obj/kern/kernel.asm	/^    f010c6d9:	90                   	nop$/;"	l
f010c6da	obj/kern/kernel.asm	/^    f010c6da:	6a 00                	pushq  $0x0$/;"	l
f010c6dc	obj/kern/kernel.asm	/^    f010c6dc:	6a 07                	pushq  $0x7$/;"	l
f010c6de	obj/kern/kernel.asm	/^    f010c6de:	e9 03 01 00 00       	jmpq   fffffffff010c7e6 <end+0xfffffffefe66b446>$/;"	l
f010c6e3	obj/kern/kernel.asm	/^    f010c6e3:	90                   	nop$/;"	l
f010c6e4	obj/kern/kernel.asm	/^    f010c6e4:	6a 08                	pushq  $0x8$/;"	l
f010c6e6	obj/kern/kernel.asm	/^    f010c6e6:	e9 fb 00 00 00       	jmpq   fffffffff010c7e6 <end+0xfffffffefe66b446>$/;"	l
f010c6eb	obj/kern/kernel.asm	/^    f010c6eb:	90                   	nop$/;"	l
f010c6ec	obj/kern/kernel.asm	/^    f010c6ec:	6a 0a                	pushq  $0xa$/;"	l
f010c6ee	obj/kern/kernel.asm	/^    f010c6ee:	e9 f3 00 00 00       	jmpq   fffffffff010c7e6 <end+0xfffffffefe66b446>$/;"	l
f010c6f3	obj/kern/kernel.asm	/^    f010c6f3:	90                   	nop$/;"	l
f010c6f4	obj/kern/kernel.asm	/^    f010c6f4:	6a 0b                	pushq  $0xb$/;"	l
f010c6f6	obj/kern/kernel.asm	/^    f010c6f6:	e9 eb 00 00 00       	jmpq   fffffffff010c7e6 <end+0xfffffffefe66b446>$/;"	l
f010c6fb	obj/kern/kernel.asm	/^    f010c6fb:	90                   	nop$/;"	l
f010c6fc	obj/kern/kernel.asm	/^    f010c6fc:	6a 0c                	pushq  $0xc$/;"	l
f010c6fe	obj/kern/kernel.asm	/^    f010c6fe:	e9 e3 00 00 00       	jmpq   fffffffff010c7e6 <end+0xfffffffefe66b446>$/;"	l
f010c703	obj/kern/kernel.asm	/^    f010c703:	90                   	nop$/;"	l
f010c704	obj/kern/kernel.asm	/^    f010c704:	6a 0d                	pushq  $0xd$/;"	l
f010c706	obj/kern/kernel.asm	/^    f010c706:	e9 db 00 00 00       	jmpq   fffffffff010c7e6 <end+0xfffffffefe66b446>$/;"	l
f010c70b	obj/kern/kernel.asm	/^    f010c70b:	90                   	nop$/;"	l
f010c70c	obj/kern/kernel.asm	/^    f010c70c:	6a 0e                	pushq  $0xe$/;"	l
f010c70e	obj/kern/kernel.asm	/^    f010c70e:	e9 d3 00 00 00       	jmpq   fffffffff010c7e6 <end+0xfffffffefe66b446>$/;"	l
f010c713	obj/kern/kernel.asm	/^    f010c713:	90                   	nop$/;"	l
f010c714	obj/kern/kernel.asm	/^    f010c714:	6a 00                	pushq  $0x0$/;"	l
f010c716	obj/kern/kernel.asm	/^    f010c716:	6a 10                	pushq  $0x10$/;"	l
f010c718	obj/kern/kernel.asm	/^    f010c718:	e9 c9 00 00 00       	jmpq   fffffffff010c7e6 <end+0xfffffffefe66b446>$/;"	l
f010c71d	obj/kern/kernel.asm	/^    f010c71d:	90                   	nop$/;"	l
f010c71e	obj/kern/kernel.asm	/^    f010c71e:	6a 00                	pushq  $0x0$/;"	l
f010c720	obj/kern/kernel.asm	/^    f010c720:	6a 11                	pushq  $0x11$/;"	l
f010c722	obj/kern/kernel.asm	/^    f010c722:	e9 bf 00 00 00       	jmpq   fffffffff010c7e6 <end+0xfffffffefe66b446>$/;"	l
f010c727	obj/kern/kernel.asm	/^    f010c727:	90                   	nop$/;"	l
f010c728	obj/kern/kernel.asm	/^    f010c728:	6a 00                	pushq  $0x0$/;"	l
f010c72a	obj/kern/kernel.asm	/^    f010c72a:	6a 12                	pushq  $0x12$/;"	l
f010c72c	obj/kern/kernel.asm	/^    f010c72c:	e9 b5 00 00 00       	jmpq   fffffffff010c7e6 <end+0xfffffffefe66b446>$/;"	l
f010c731	obj/kern/kernel.asm	/^    f010c731:	90                   	nop$/;"	l
f010c732	obj/kern/kernel.asm	/^    f010c732:	6a 00                	pushq  $0x0$/;"	l
f010c734	obj/kern/kernel.asm	/^    f010c734:	6a 13                	pushq  $0x13$/;"	l
f010c736	obj/kern/kernel.asm	/^    f010c736:	e9 ab 00 00 00       	jmpq   fffffffff010c7e6 <end+0xfffffffefe66b446>$/;"	l
f010c73b	obj/kern/kernel.asm	/^    f010c73b:	90                   	nop$/;"	l
f010c73c	obj/kern/kernel.asm	/^    f010c73c:	6a 00                	pushq  $0x0$/;"	l
f010c73e	obj/kern/kernel.asm	/^    f010c73e:	6a 30                	pushq  $0x30$/;"	l
f010c740	obj/kern/kernel.asm	/^    f010c740:	e9 a1 00 00 00       	jmpq   fffffffff010c7e6 <end+0xfffffffefe66b446>$/;"	l
f010c745	obj/kern/kernel.asm	/^    f010c745:	90                   	nop$/;"	l
f010c746	obj/kern/kernel.asm	/^    f010c746:	6a 00                	pushq  $0x0$/;"	l
f010c748	obj/kern/kernel.asm	/^    f010c748:	6a 20                	pushq  $0x20$/;"	l
f010c74a	obj/kern/kernel.asm	/^    f010c74a:	e9 97 00 00 00       	jmpq   fffffffff010c7e6 <end+0xfffffffefe66b446>$/;"	l
f010c74f	obj/kern/kernel.asm	/^    f010c74f:	90                   	nop$/;"	l
f010c750	obj/kern/kernel.asm	/^    f010c750:	6a 00                	pushq  $0x0$/;"	l
f010c752	obj/kern/kernel.asm	/^    f010c752:	6a 21                	pushq  $0x21$/;"	l
f010c754	obj/kern/kernel.asm	/^    f010c754:	e9 8d 00 00 00       	jmpq   fffffffff010c7e6 <end+0xfffffffefe66b446>$/;"	l
f010c759	obj/kern/kernel.asm	/^    f010c759:	90                   	nop$/;"	l
f010c75a	obj/kern/kernel.asm	/^    f010c75a:	6a 00                	pushq  $0x0$/;"	l
f010c75c	obj/kern/kernel.asm	/^    f010c75c:	6a 22                	pushq  $0x22$/;"	l
f010c75e	obj/kern/kernel.asm	/^    f010c75e:	e9 83 00 00 00       	jmpq   fffffffff010c7e6 <end+0xfffffffefe66b446>$/;"	l
f010c763	obj/kern/kernel.asm	/^    f010c763:	90                   	nop$/;"	l
f010c764	obj/kern/kernel.asm	/^    f010c764:	6a 00                	pushq  $0x0$/;"	l
f010c766	obj/kern/kernel.asm	/^    f010c766:	6a 23                	pushq  $0x23$/;"	l
f010c768	obj/kern/kernel.asm	/^    f010c768:	e9 79 00 00 00       	jmpq   fffffffff010c7e6 <end+0xfffffffefe66b446>$/;"	l
f010c76d	obj/kern/kernel.asm	/^    f010c76d:	90                   	nop$/;"	l
f010c76e	obj/kern/kernel.asm	/^    f010c76e:	6a 00                	pushq  $0x0$/;"	l
f010c770	obj/kern/kernel.asm	/^    f010c770:	6a 24                	pushq  $0x24$/;"	l
f010c772	obj/kern/kernel.asm	/^    f010c772:	e9 6f 00 00 00       	jmpq   fffffffff010c7e6 <end+0xfffffffefe66b446>$/;"	l
f010c777	obj/kern/kernel.asm	/^    f010c777:	90                   	nop$/;"	l
f010c778	obj/kern/kernel.asm	/^    f010c778:	6a 00                	pushq  $0x0$/;"	l
f010c77a	obj/kern/kernel.asm	/^    f010c77a:	6a 25                	pushq  $0x25$/;"	l
f010c77c	obj/kern/kernel.asm	/^    f010c77c:	e9 65 00 00 00       	jmpq   fffffffff010c7e6 <end+0xfffffffefe66b446>$/;"	l
f010c781	obj/kern/kernel.asm	/^    f010c781:	90                   	nop$/;"	l
f010c782	obj/kern/kernel.asm	/^    f010c782:	6a 00                	pushq  $0x0$/;"	l
f010c784	obj/kern/kernel.asm	/^    f010c784:	6a 26                	pushq  $0x26$/;"	l
f010c786	obj/kern/kernel.asm	/^    f010c786:	e9 5b 00 00 00       	jmpq   fffffffff010c7e6 <end+0xfffffffefe66b446>$/;"	l
f010c78b	obj/kern/kernel.asm	/^    f010c78b:	90                   	nop$/;"	l
f010c78c	obj/kern/kernel.asm	/^    f010c78c:	6a 00                	pushq  $0x0$/;"	l
f010c78e	obj/kern/kernel.asm	/^    f010c78e:	6a 27                	pushq  $0x27$/;"	l
f010c790	obj/kern/kernel.asm	/^    f010c790:	e9 51 00 00 00       	jmpq   fffffffff010c7e6 <end+0xfffffffefe66b446>$/;"	l
f010c795	obj/kern/kernel.asm	/^    f010c795:	90                   	nop$/;"	l
f010c796	obj/kern/kernel.asm	/^    f010c796:	6a 00                	pushq  $0x0$/;"	l
f010c798	obj/kern/kernel.asm	/^    f010c798:	6a 28                	pushq  $0x28$/;"	l
f010c79a	obj/kern/kernel.asm	/^    f010c79a:	e9 47 00 00 00       	jmpq   fffffffff010c7e6 <end+0xfffffffefe66b446>$/;"	l
f010c79f	obj/kern/kernel.asm	/^    f010c79f:	90                   	nop$/;"	l
f010c7a0	obj/kern/kernel.asm	/^    f010c7a0:	6a 00                	pushq  $0x0$/;"	l
f010c7a2	obj/kern/kernel.asm	/^    f010c7a2:	6a 29                	pushq  $0x29$/;"	l
f010c7a4	obj/kern/kernel.asm	/^    f010c7a4:	e9 3d 00 00 00       	jmpq   fffffffff010c7e6 <end+0xfffffffefe66b446>$/;"	l
f010c7a9	obj/kern/kernel.asm	/^    f010c7a9:	90                   	nop$/;"	l
f010c7aa	obj/kern/kernel.asm	/^    f010c7aa:	6a 00                	pushq  $0x0$/;"	l
f010c7ac	obj/kern/kernel.asm	/^    f010c7ac:	6a 2a                	pushq  $0x2a$/;"	l
f010c7ae	obj/kern/kernel.asm	/^    f010c7ae:	e9 33 00 00 00       	jmpq   fffffffff010c7e6 <end+0xfffffffefe66b446>$/;"	l
f010c7b3	obj/kern/kernel.asm	/^    f010c7b3:	90                   	nop$/;"	l
f010c7b4	obj/kern/kernel.asm	/^    f010c7b4:	6a 00                	pushq  $0x0$/;"	l
f010c7b6	obj/kern/kernel.asm	/^    f010c7b6:	6a 2b                	pushq  $0x2b$/;"	l
f010c7b8	obj/kern/kernel.asm	/^    f010c7b8:	e9 29 00 00 00       	jmpq   fffffffff010c7e6 <end+0xfffffffefe66b446>$/;"	l
f010c7bd	obj/kern/kernel.asm	/^    f010c7bd:	90                   	nop$/;"	l
f010c7be	obj/kern/kernel.asm	/^    f010c7be:	6a 00                	pushq  $0x0$/;"	l
f010c7c0	obj/kern/kernel.asm	/^    f010c7c0:	6a 2c                	pushq  $0x2c$/;"	l
f010c7c2	obj/kern/kernel.asm	/^    f010c7c2:	e9 1f 00 00 00       	jmpq   fffffffff010c7e6 <end+0xfffffffefe66b446>$/;"	l
f010c7c7	obj/kern/kernel.asm	/^    f010c7c7:	90                   	nop$/;"	l
f010c7c8	obj/kern/kernel.asm	/^    f010c7c8:	6a 00                	pushq  $0x0$/;"	l
f010c7ca	obj/kern/kernel.asm	/^    f010c7ca:	6a 2d                	pushq  $0x2d$/;"	l
f010c7cc	obj/kern/kernel.asm	/^    f010c7cc:	e9 15 00 00 00       	jmpq   fffffffff010c7e6 <end+0xfffffffefe66b446>$/;"	l
f010c7d1	obj/kern/kernel.asm	/^    f010c7d1:	90                   	nop$/;"	l
f010c7d2	obj/kern/kernel.asm	/^    f010c7d2:	6a 00                	pushq  $0x0$/;"	l
f010c7d4	obj/kern/kernel.asm	/^    f010c7d4:	6a 2e                	pushq  $0x2e$/;"	l
f010c7d6	obj/kern/kernel.asm	/^    f010c7d6:	e9 0b 00 00 00       	jmpq   fffffffff010c7e6 <end+0xfffffffefe66b446>$/;"	l
f010c7db	obj/kern/kernel.asm	/^    f010c7db:	90                   	nop$/;"	l
f010c7dc	obj/kern/kernel.asm	/^    f010c7dc:	6a 00                	pushq  $0x0$/;"	l
f010c7de	obj/kern/kernel.asm	/^    f010c7de:	6a 2f                	pushq  $0x2f$/;"	l
f010c7e0	obj/kern/kernel.asm	/^    f010c7e0:	e9 01 00 00 00       	jmpq   fffffffff010c7e6 <end+0xfffffffefe66b446>$/;"	l
f010c7e5	obj/kern/kernel.asm	/^    f010c7e5:	90                   	nop$/;"	l
f010c7e6	obj/kern/kernel.asm	/^    f010c7e6:	6a 10                	pushq  $0x10$/;"	l
f010c7e8	obj/kern/kernel.asm	/^    f010c7e8:	6a 10                	pushq  $0x10$/;"	l
f010c7ea	obj/kern/kernel.asm	/^    f010c7ea:	48 83 ec 78          	sub    $0x78,%rsp$/;"	l
f010c7ee	obj/kern/kernel.asm	/^    f010c7ee:	48 89 44 24 70       	mov    %rax,0x70(%rsp)$/;"	l
f010c7f3	obj/kern/kernel.asm	/^    f010c7f3:	48 89 5c 24 68       	mov    %rbx,0x68(%rsp)$/;"	l
f010c7f8	obj/kern/kernel.asm	/^    f010c7f8:	48 89 4c 24 60       	mov    %rcx,0x60(%rsp)$/;"	l
f010c7fd	obj/kern/kernel.asm	/^    f010c7fd:	48 89 54 24 58       	mov    %rdx,0x58(%rsp)$/;"	l
f010c802	obj/kern/kernel.asm	/^    f010c802:	48 89 6c 24 50       	mov    %rbp,0x50(%rsp)$/;"	l
f010c807	obj/kern/kernel.asm	/^    f010c807:	48 89 7c 24 48       	mov    %rdi,0x48(%rsp)$/;"	l
f010c80c	obj/kern/kernel.asm	/^    f010c80c:	48 89 74 24 40       	mov    %rsi,0x40(%rsp)$/;"	l
f010c811	obj/kern/kernel.asm	/^    f010c811:	4c 89 44 24 38       	mov    %r8,0x38(%rsp)$/;"	l
f010c816	obj/kern/kernel.asm	/^    f010c816:	4c 89 4c 24 30       	mov    %r9,0x30(%rsp)$/;"	l
f010c81b	obj/kern/kernel.asm	/^    f010c81b:	4c 89 54 24 28       	mov    %r10,0x28(%rsp)$/;"	l
f010c820	obj/kern/kernel.asm	/^    f010c820:	4c 89 5c 24 20       	mov    %r11,0x20(%rsp)$/;"	l
f010c825	obj/kern/kernel.asm	/^    f010c825:	4c 89 64 24 18       	mov    %r12,0x18(%rsp)$/;"	l
f010c82a	obj/kern/kernel.asm	/^    f010c82a:	4c 89 6c 24 10       	mov    %r13,0x10(%rsp)$/;"	l
f010c82f	obj/kern/kernel.asm	/^    f010c82f:	4c 89 74 24 08       	mov    %r14,0x8(%rsp)$/;"	l
f010c834	obj/kern/kernel.asm	/^    f010c834:	4c 89 3c 24          	mov    %r15,(%rsp)$/;"	l
f010c838	obj/kern/kernel.asm	/^    f010c838:	89 e7                	mov    %esp,%edi$/;"	l
f010c83a	obj/kern/kernel.asm	/^    f010c83a:	e8 ec f6 ff ff       	callq  fffffffff010bf2b <end+0xfffffffefe66ab8b>$/;"	l
f010c840	obj/kern/kernel.asm	/^    f010c840:	55                   	push   %rbp$/;"	l
f010c841	obj/kern/kernel.asm	/^    f010c841:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010c844	obj/kern/kernel.asm	/^    f010c844:	53                   	push   %rbx$/;"	l
f010c845	obj/kern/kernel.asm	/^    f010c845:	48 83 ec 28          	sub    $0x28,%rsp$/;"	l
f010c849	obj/kern/kernel.asm	/^    f010c849:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f010c850	obj/kern/kernel.asm	/^    f010c850:	00 00 00 $/;"	l
f010c853	obj/kern/kernel.asm	/^    f010c853:	ff d0                	callq  *%rax$/;"	l
f010c855	obj/kern/kernel.asm	/^    f010c855:	48 98                	cltq   $/;"	l
f010c857	obj/kern/kernel.asm	/^    f010c857:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f010c85b	obj/kern/kernel.asm	/^    f010c85b:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010c85e	obj/kern/kernel.asm	/^    f010c85e:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f010c862	obj/kern/kernel.asm	/^    f010c862:	48 29 c2             	sub    %rax,%rdx$/;"	l
f010c865	obj/kern/kernel.asm	/^    f010c865:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f010c86c	obj/kern/kernel.asm	/^    f010c86c:	00 00 00 $/;"	l
f010c86f	obj/kern/kernel.asm	/^    f010c86f:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010c873	obj/kern/kernel.asm	/^    f010c873:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
f010c877	obj/kern/kernel.asm	/^    f010c877:	48 85 c0             	test   %rax,%rax$/;"	l
f010c87a	obj/kern/kernel.asm	/^    f010c87a:	74 61                	je     fffffffff010c8dd <end+0xfffffffefe66b53d>$/;"	l
f010c87c	obj/kern/kernel.asm	/^    f010c87c:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f010c883	obj/kern/kernel.asm	/^    f010c883:	00 00 00 $/;"	l
f010c886	obj/kern/kernel.asm	/^    f010c886:	ff d0                	callq  *%rax$/;"	l
f010c888	obj/kern/kernel.asm	/^    f010c888:	48 98                	cltq   $/;"	l
f010c88a	obj/kern/kernel.asm	/^    f010c88a:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f010c88e	obj/kern/kernel.asm	/^    f010c88e:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010c891	obj/kern/kernel.asm	/^    f010c891:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f010c895	obj/kern/kernel.asm	/^    f010c895:	48 29 c2             	sub    %rax,%rdx$/;"	l
f010c898	obj/kern/kernel.asm	/^    f010c898:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f010c89f	obj/kern/kernel.asm	/^    f010c89f:	00 00 00 $/;"	l
f010c8a2	obj/kern/kernel.asm	/^    f010c8a2:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010c8a6	obj/kern/kernel.asm	/^    f010c8a6:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
f010c8aa	obj/kern/kernel.asm	/^    f010c8aa:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010c8ad	obj/kern/kernel.asm	/^    f010c8ad:	48 b8 50 62 a2 f1 00 	mov    $0xf1a26250,%rax$/;"	l
f010c8b4	obj/kern/kernel.asm	/^    f010c8b4:	00 00 00 $/;"	l
f010c8b7	obj/kern/kernel.asm	/^    f010c8b7:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010c8ba	obj/kern/kernel.asm	/^    f010c8ba:	48 89 d1             	mov    %rdx,%rcx$/;"	l
f010c8bd	obj/kern/kernel.asm	/^    f010c8bd:	48 29 c1             	sub    %rax,%rcx$/;"	l
f010c8c0	obj/kern/kernel.asm	/^    f010c8c0:	48 89 c8             	mov    %rcx,%rax$/;"	l
f010c8c3	obj/kern/kernel.asm	/^    f010c8c3:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010c8c6	obj/kern/kernel.asm	/^    f010c8c6:	48 c1 fa 03          	sar    $0x3,%rdx$/;"	l
f010c8ca	obj/kern/kernel.asm	/^    f010c8ca:	48 b8 8b af f8 8a af 	mov    $0xaf8af8af8af8af8b,%rax$/;"	l
f010c8d1	obj/kern/kernel.asm	/^    f010c8d1:	f8 8a af $/;"	l
f010c8d4	obj/kern/kernel.asm	/^    f010c8d4:	48 0f af c2          	imul   %rdx,%rax$/;"	l
f010c8d8	obj/kern/kernel.asm	/^    f010c8d8:	89 45 e4             	mov    %eax,-0x1c(%rbp)$/;"	l
f010c8db	obj/kern/kernel.asm	/^    f010c8db:	eb 07                	jmp    fffffffff010c8e4 <end+0xfffffffefe66b544>$/;"	l
f010c8dd	obj/kern/kernel.asm	/^    f010c8dd:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%rbp)$/;"	l
f010c8e4	obj/kern/kernel.asm	/^    f010c8e4:	8b 45 e4             	mov    -0x1c(%rbp),%eax$/;"	l
f010c8e7	obj/kern/kernel.asm	/^    f010c8e7:	83 c0 01             	add    $0x1,%eax$/;"	l
f010c8ea	obj/kern/kernel.asm	/^    f010c8ea:	89 45 e8             	mov    %eax,-0x18(%rbp)$/;"	l
f010c8ed	obj/kern/kernel.asm	/^    f010c8ed:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%rbp)$/;"	l
f010c8f4	obj/kern/kernel.asm	/^    f010c8f4:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%rbp)$/;"	l
f010c8fb	obj/kern/kernel.asm	/^    f010c8fb:	e9 94 00 00 00       	jmpq   fffffffff010c994 <end+0xfffffffefe66b5f4>$/;"	l
f010c900	obj/kern/kernel.asm	/^    f010c900:	48 b8 50 62 a2 f1 00 	mov    $0xf1a26250,%rax$/;"	l
f010c907	obj/kern/kernel.asm	/^    f010c907:	00 00 00 $/;"	l
f010c90a	obj/kern/kernel.asm	/^    f010c90a:	48 8b 10             	mov    (%rax),%rdx$/;"	l
f010c90d	obj/kern/kernel.asm	/^    f010c90d:	8b 45 e8             	mov    -0x18(%rbp),%eax$/;"	l
f010c910	obj/kern/kernel.asm	/^    f010c910:	48 98                	cltq   $/;"	l
f010c912	obj/kern/kernel.asm	/^    f010c912:	48 69 c0 18 01 00 00 	imul   $0x118,%rax,%rax$/;"	l
f010c919	obj/kern/kernel.asm	/^    f010c919:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010c91d	obj/kern/kernel.asm	/^    f010c91d:	8b 80 d4 00 00 00    	mov    0xd4(%rax),%eax$/;"	l
f010c923	obj/kern/kernel.asm	/^    f010c923:	83 f8 02             	cmp    $0x2,%eax$/;"	l
f010c926	obj/kern/kernel.asm	/^    f010c926:	75 54                	jne    fffffffff010c97c <end+0xfffffffefe66b5dc>$/;"	l
f010c928	obj/kern/kernel.asm	/^    f010c928:	48 b8 50 62 a2 f1 00 	mov    $0xf1a26250,%rax$/;"	l
f010c92f	obj/kern/kernel.asm	/^    f010c92f:	00 00 00 $/;"	l
f010c932	obj/kern/kernel.asm	/^    f010c932:	48 8b 10             	mov    (%rax),%rdx$/;"	l
f010c935	obj/kern/kernel.asm	/^    f010c935:	8b 45 e8             	mov    -0x18(%rbp),%eax$/;"	l
f010c938	obj/kern/kernel.asm	/^    f010c938:	48 98                	cltq   $/;"	l
f010c93a	obj/kern/kernel.asm	/^    f010c93a:	48 69 c0 18 01 00 00 	imul   $0x118,%rax,%rax$/;"	l
f010c941	obj/kern/kernel.asm	/^    f010c941:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010c945	obj/kern/kernel.asm	/^    f010c945:	8b 80 d0 00 00 00    	mov    0xd0(%rax),%eax$/;"	l
f010c94b	obj/kern/kernel.asm	/^    f010c94b:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f010c94e	obj/kern/kernel.asm	/^    f010c94e:	74 2c                	je     fffffffff010c97c <end+0xfffffffefe66b5dc>$/;"	l
f010c950	obj/kern/kernel.asm	/^    f010c950:	48 b8 50 62 a2 f1 00 	mov    $0xf1a26250,%rax$/;"	l
f010c957	obj/kern/kernel.asm	/^    f010c957:	00 00 00 $/;"	l
f010c95a	obj/kern/kernel.asm	/^    f010c95a:	48 8b 10             	mov    (%rax),%rdx$/;"	l
f010c95d	obj/kern/kernel.asm	/^    f010c95d:	8b 45 e8             	mov    -0x18(%rbp),%eax$/;"	l
f010c960	obj/kern/kernel.asm	/^    f010c960:	48 98                	cltq   $/;"	l
f010c962	obj/kern/kernel.asm	/^    f010c962:	48 69 c0 18 01 00 00 	imul   $0x118,%rax,%rax$/;"	l
f010c969	obj/kern/kernel.asm	/^    f010c969:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010c96d	obj/kern/kernel.asm	/^    f010c96d:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010c970	obj/kern/kernel.asm	/^    f010c970:	48 b8 a9 83 10 f0 00 	mov    $0xf01083a9,%rax$/;"	l
f010c977	obj/kern/kernel.asm	/^    f010c977:	00 00 00 $/;"	l
f010c97a	obj/kern/kernel.asm	/^    f010c97a:	ff d0                	callq  *%rax$/;"	l
f010c97c	obj/kern/kernel.asm	/^    f010c97c:	83 45 e8 01          	addl   $0x1,-0x18(%rbp)$/;"	l
f010c980	obj/kern/kernel.asm	/^    f010c980:	81 7d e8 00 04 00 00 	cmpl   $0x400,-0x18(%rbp)$/;"	l
f010c987	obj/kern/kernel.asm	/^    f010c987:	75 07                	jne    fffffffff010c990 <end+0xfffffffefe66b5f0>$/;"	l
f010c989	obj/kern/kernel.asm	/^    f010c989:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)$/;"	l
f010c990	obj/kern/kernel.asm	/^    f010c990:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)$/;"	l
f010c994	obj/kern/kernel.asm	/^    f010c994:	81 7d ec ff 03 00 00 	cmpl   $0x3ff,-0x14(%rbp)$/;"	l
f010c99b	obj/kern/kernel.asm	/^    f010c99b:	0f 8e 5f ff ff ff    	jle    fffffffff010c900 <end+0xfffffffefe66b560>$/;"	l
f010c9a1	obj/kern/kernel.asm	/^    f010c9a1:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f010c9a8	obj/kern/kernel.asm	/^    f010c9a8:	00 00 00 $/;"	l
f010c9ab	obj/kern/kernel.asm	/^    f010c9ab:	ff d0                	callq  *%rax$/;"	l
f010c9ad	obj/kern/kernel.asm	/^    f010c9ad:	48 98                	cltq   $/;"	l
f010c9af	obj/kern/kernel.asm	/^    f010c9af:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f010c9b3	obj/kern/kernel.asm	/^    f010c9b3:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010c9b6	obj/kern/kernel.asm	/^    f010c9b6:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f010c9ba	obj/kern/kernel.asm	/^    f010c9ba:	48 29 c2             	sub    %rax,%rdx$/;"	l
f010c9bd	obj/kern/kernel.asm	/^    f010c9bd:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f010c9c4	obj/kern/kernel.asm	/^    f010c9c4:	00 00 00 $/;"	l
f010c9c7	obj/kern/kernel.asm	/^    f010c9c7:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010c9cb	obj/kern/kernel.asm	/^    f010c9cb:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
f010c9cf	obj/kern/kernel.asm	/^    f010c9cf:	48 85 c0             	test   %rax,%rax$/;"	l
f010c9d2	obj/kern/kernel.asm	/^    f010c9d2:	74 7f                	je     fffffffff010ca53 <end+0xfffffffefe66b6b3>$/;"	l
f010c9d4	obj/kern/kernel.asm	/^    f010c9d4:	81 7d ec 00 04 00 00 	cmpl   $0x400,-0x14(%rbp)$/;"	l
f010c9db	obj/kern/kernel.asm	/^    f010c9db:	75 76                	jne    fffffffff010ca53 <end+0xfffffffefe66b6b3>$/;"	l
f010c9dd	obj/kern/kernel.asm	/^    f010c9dd:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f010c9e4	obj/kern/kernel.asm	/^    f010c9e4:	00 00 00 $/;"	l
f010c9e7	obj/kern/kernel.asm	/^    f010c9e7:	ff d0                	callq  *%rax$/;"	l
f010c9e9	obj/kern/kernel.asm	/^    f010c9e9:	48 98                	cltq   $/;"	l
f010c9eb	obj/kern/kernel.asm	/^    f010c9eb:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f010c9ef	obj/kern/kernel.asm	/^    f010c9ef:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010c9f2	obj/kern/kernel.asm	/^    f010c9f2:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f010c9f6	obj/kern/kernel.asm	/^    f010c9f6:	48 29 c2             	sub    %rax,%rdx$/;"	l
f010c9f9	obj/kern/kernel.asm	/^    f010c9f9:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f010ca00	obj/kern/kernel.asm	/^    f010ca00:	00 00 00 $/;"	l
f010ca03	obj/kern/kernel.asm	/^    f010ca03:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010ca07	obj/kern/kernel.asm	/^    f010ca07:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
f010ca0b	obj/kern/kernel.asm	/^    f010ca0b:	8b 80 d4 00 00 00    	mov    0xd4(%rax),%eax$/;"	l
f010ca11	obj/kern/kernel.asm	/^    f010ca11:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f010ca14	obj/kern/kernel.asm	/^    f010ca14:	75 3d                	jne    fffffffff010ca53 <end+0xfffffffefe66b6b3>$/;"	l
f010ca16	obj/kern/kernel.asm	/^    f010ca16:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f010ca1d	obj/kern/kernel.asm	/^    f010ca1d:	00 00 00 $/;"	l
f010ca20	obj/kern/kernel.asm	/^    f010ca20:	ff d0                	callq  *%rax$/;"	l
f010ca22	obj/kern/kernel.asm	/^    f010ca22:	48 98                	cltq   $/;"	l
f010ca24	obj/kern/kernel.asm	/^    f010ca24:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f010ca28	obj/kern/kernel.asm	/^    f010ca28:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010ca2b	obj/kern/kernel.asm	/^    f010ca2b:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f010ca2f	obj/kern/kernel.asm	/^    f010ca2f:	48 29 c2             	sub    %rax,%rdx$/;"	l
f010ca32	obj/kern/kernel.asm	/^    f010ca32:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f010ca39	obj/kern/kernel.asm	/^    f010ca39:	00 00 00 $/;"	l
f010ca3c	obj/kern/kernel.asm	/^    f010ca3c:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010ca40	obj/kern/kernel.asm	/^    f010ca40:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
f010ca44	obj/kern/kernel.asm	/^    f010ca44:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010ca47	obj/kern/kernel.asm	/^    f010ca47:	48 b8 a9 83 10 f0 00 	mov    $0xf01083a9,%rax$/;"	l
f010ca4e	obj/kern/kernel.asm	/^    f010ca4e:	00 00 00 $/;"	l
f010ca51	obj/kern/kernel.asm	/^    f010ca51:	ff d0                	callq  *%rax$/;"	l
f010ca53	obj/kern/kernel.asm	/^    f010ca53:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)$/;"	l
f010ca5a	obj/kern/kernel.asm	/^    f010ca5a:	eb 7c                	jmp    fffffffff010cad8 <end+0xfffffffefe66b738>$/;"	l
f010ca5c	obj/kern/kernel.asm	/^    f010ca5c:	48 b8 50 62 a2 f1 00 	mov    $0xf1a26250,%rax$/;"	l
f010ca63	obj/kern/kernel.asm	/^    f010ca63:	00 00 00 $/;"	l
f010ca66	obj/kern/kernel.asm	/^    f010ca66:	48 8b 10             	mov    (%rax),%rdx$/;"	l
f010ca69	obj/kern/kernel.asm	/^    f010ca69:	8b 45 e4             	mov    -0x1c(%rbp),%eax$/;"	l
f010ca6c	obj/kern/kernel.asm	/^    f010ca6c:	48 98                	cltq   $/;"	l
f010ca6e	obj/kern/kernel.asm	/^    f010ca6e:	48 69 c0 18 01 00 00 	imul   $0x118,%rax,%rax$/;"	l
f010ca75	obj/kern/kernel.asm	/^    f010ca75:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010ca79	obj/kern/kernel.asm	/^    f010ca79:	8b 80 d0 00 00 00    	mov    0xd0(%rax),%eax$/;"	l
f010ca7f	obj/kern/kernel.asm	/^    f010ca7f:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f010ca82	obj/kern/kernel.asm	/^    f010ca82:	74 50                	je     fffffffff010cad4 <end+0xfffffffefe66b734>$/;"	l
f010ca84	obj/kern/kernel.asm	/^    f010ca84:	48 b8 50 62 a2 f1 00 	mov    $0xf1a26250,%rax$/;"	l
f010ca8b	obj/kern/kernel.asm	/^    f010ca8b:	00 00 00 $/;"	l
f010ca8e	obj/kern/kernel.asm	/^    f010ca8e:	48 8b 10             	mov    (%rax),%rdx$/;"	l
f010ca91	obj/kern/kernel.asm	/^    f010ca91:	8b 45 e4             	mov    -0x1c(%rbp),%eax$/;"	l
f010ca94	obj/kern/kernel.asm	/^    f010ca94:	48 98                	cltq   $/;"	l
f010ca96	obj/kern/kernel.asm	/^    f010ca96:	48 69 c0 18 01 00 00 	imul   $0x118,%rax,%rax$/;"	l
f010ca9d	obj/kern/kernel.asm	/^    f010ca9d:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010caa1	obj/kern/kernel.asm	/^    f010caa1:	8b 80 d4 00 00 00    	mov    0xd4(%rax),%eax$/;"	l
f010caa7	obj/kern/kernel.asm	/^    f010caa7:	83 f8 02             	cmp    $0x2,%eax$/;"	l
f010caaa	obj/kern/kernel.asm	/^    f010caaa:	74 39                	je     fffffffff010cae5 <end+0xfffffffefe66b745>$/;"	l
f010caac	obj/kern/kernel.asm	/^    f010caac:	48 b8 50 62 a2 f1 00 	mov    $0xf1a26250,%rax$/;"	l
f010cab3	obj/kern/kernel.asm	/^    f010cab3:	00 00 00 $/;"	l
f010cab6	obj/kern/kernel.asm	/^    f010cab6:	48 8b 10             	mov    (%rax),%rdx$/;"	l
f010cab9	obj/kern/kernel.asm	/^    f010cab9:	8b 45 e4             	mov    -0x1c(%rbp),%eax$/;"	l
f010cabc	obj/kern/kernel.asm	/^    f010cabc:	48 98                	cltq   $/;"	l
f010cabe	obj/kern/kernel.asm	/^    f010cabe:	48 69 c0 18 01 00 00 	imul   $0x118,%rax,%rax$/;"	l
f010cac5	obj/kern/kernel.asm	/^    f010cac5:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010cac9	obj/kern/kernel.asm	/^    f010cac9:	8b 80 d4 00 00 00    	mov    0xd4(%rax),%eax$/;"	l
f010cacf	obj/kern/kernel.asm	/^    f010cacf:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f010cad2	obj/kern/kernel.asm	/^    f010cad2:	74 11                	je     fffffffff010cae5 <end+0xfffffffefe66b745>$/;"	l
f010cad4	obj/kern/kernel.asm	/^    f010cad4:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)$/;"	l
f010cad8	obj/kern/kernel.asm	/^    f010cad8:	81 7d e4 ff 03 00 00 	cmpl   $0x3ff,-0x1c(%rbp)$/;"	l
f010cadf	obj/kern/kernel.asm	/^    f010cadf:	0f 8e 77 ff ff ff    	jle    fffffffff010ca5c <end+0xfffffffefe66b6bc>$/;"	l
f010cae5	obj/kern/kernel.asm	/^    f010cae5:	81 7d e4 00 04 00 00 	cmpl   $0x400,-0x1c(%rbp)$/;"	l
f010caec	obj/kern/kernel.asm	/^    f010caec:	75 2e                	jne    fffffffff010cb1c <end+0xfffffffefe66b77c>$/;"	l
f010caee	obj/kern/kernel.asm	/^    f010caee:	48 bf 00 2e 11 f0 00 	mov    $0xf0112e00,%rdi$/;"	l
f010caf5	obj/kern/kernel.asm	/^    f010caf5:	00 00 00 $/;"	l
f010caf8	obj/kern/kernel.asm	/^    f010caf8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010cafd	obj/kern/kernel.asm	/^    f010cafd:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f010cb04	obj/kern/kernel.asm	/^    f010cb04:	00 00 00 $/;"	l
f010cb07	obj/kern/kernel.asm	/^    f010cb07:	ff d2                	callq  *%rdx$/;"	l
f010cb09	obj/kern/kernel.asm	/^    f010cb09:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f010cb0e	obj/kern/kernel.asm	/^    f010cb0e:	48 b8 2e 19 10 f0 00 	mov    $0xf010192e,%rax$/;"	l
f010cb15	obj/kern/kernel.asm	/^    f010cb15:	00 00 00 $/;"	l
f010cb18	obj/kern/kernel.asm	/^    f010cb18:	ff d0                	callq  *%rax$/;"	l
f010cb1a	obj/kern/kernel.asm	/^    f010cb1a:	eb ed                	jmp    fffffffff010cb09 <end+0xfffffffefe66b769>$/;"	l
f010cb1c	obj/kern/kernel.asm	/^    f010cb1c:	48 b8 50 62 a2 f1 00 	mov    $0xf1a26250,%rax$/;"	l
f010cb23	obj/kern/kernel.asm	/^    f010cb23:	00 00 00 $/;"	l
f010cb26	obj/kern/kernel.asm	/^    f010cb26:	48 8b 18             	mov    (%rax),%rbx$/;"	l
f010cb29	obj/kern/kernel.asm	/^    f010cb29:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f010cb30	obj/kern/kernel.asm	/^    f010cb30:	00 00 00 $/;"	l
f010cb33	obj/kern/kernel.asm	/^    f010cb33:	ff d0                	callq  *%rax$/;"	l
f010cb35	obj/kern/kernel.asm	/^    f010cb35:	48 98                	cltq   $/;"	l
f010cb37	obj/kern/kernel.asm	/^    f010cb37:	48 69 c0 18 01 00 00 	imul   $0x118,%rax,%rax$/;"	l
f010cb3e	obj/kern/kernel.asm	/^    f010cb3e:	48 8d 04 03          	lea    (%rbx,%rax,1),%rax$/;"	l
f010cb42	obj/kern/kernel.asm	/^    f010cb42:	48 89 45 d8          	mov    %rax,-0x28(%rbp)$/;"	l
f010cb46	obj/kern/kernel.asm	/^    f010cb46:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f010cb4a	obj/kern/kernel.asm	/^    f010cb4a:	8b 80 d4 00 00 00    	mov    0xd4(%rax),%eax$/;"	l
f010cb50	obj/kern/kernel.asm	/^    f010cb50:	83 f8 02             	cmp    $0x2,%eax$/;"	l
f010cb53	obj/kern/kernel.asm	/^    f010cb53:	74 47                	je     fffffffff010cb9c <end+0xfffffffefe66b7fc>$/;"	l
f010cb55	obj/kern/kernel.asm	/^    f010cb55:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f010cb59	obj/kern/kernel.asm	/^    f010cb59:	8b 80 d4 00 00 00    	mov    0xd4(%rax),%eax$/;"	l
f010cb5f	obj/kern/kernel.asm	/^    f010cb5f:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f010cb62	obj/kern/kernel.asm	/^    f010cb62:	74 38                	je     fffffffff010cb9c <end+0xfffffffefe66b7fc>$/;"	l
f010cb64	obj/kern/kernel.asm	/^    f010cb64:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f010cb6b	obj/kern/kernel.asm	/^    f010cb6b:	00 00 00 $/;"	l
f010cb6e	obj/kern/kernel.asm	/^    f010cb6e:	ff d0                	callq  *%rax$/;"	l
f010cb70	obj/kern/kernel.asm	/^    f010cb70:	89 c1                	mov    %eax,%ecx$/;"	l
f010cb72	obj/kern/kernel.asm	/^    f010cb72:	48 ba 20 2e 11 f0 00 	mov    $0xf0112e20,%rdx$/;"	l
f010cb79	obj/kern/kernel.asm	/^    f010cb79:	00 00 00 $/;"	l
f010cb7c	obj/kern/kernel.asm	/^    f010cb7c:	be 52 00 00 00       	mov    $0x52,%esi$/;"	l
f010cb81	obj/kern/kernel.asm	/^    f010cb81:	48 bf 3d 2e 11 f0 00 	mov    $0xf0112e3d,%rdi$/;"	l
f010cb88	obj/kern/kernel.asm	/^    f010cb88:	00 00 00 $/;"	l
f010cb8b	obj/kern/kernel.asm	/^    f010cb8b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010cb90	obj/kern/kernel.asm	/^    f010cb90:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f010cb97	obj/kern/kernel.asm	/^    f010cb97:	00 00 00 $/;"	l
f010cb9a	obj/kern/kernel.asm	/^    f010cb9a:	ff d3                	callq  *%rbx$/;"	l
f010cb9c	obj/kern/kernel.asm	/^    f010cb9c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f010cba0	obj/kern/kernel.asm	/^    f010cba0:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010cba3	obj/kern/kernel.asm	/^    f010cba3:	48 b8 a9 83 10 f0 00 	mov    $0xf01083a9,%rax$/;"	l
f010cbaa	obj/kern/kernel.asm	/^    f010cbaa:	00 00 00 $/;"	l
f010cbad	obj/kern/kernel.asm	/^    f010cbad:	ff d0                	callq  *%rax$/;"	l
f010cbb0	obj/kern/kernel.asm	/^    f010cbb0:	55                   	push   %rbp$/;"	l
f010cbb1	obj/kern/kernel.asm	/^    f010cbb1:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010cbb4	obj/kern/kernel.asm	/^    f010cbb4:	53                   	push   %rbx$/;"	l
f010cbb5	obj/kern/kernel.asm	/^    f010cbb5:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
f010cbb9	obj/kern/kernel.asm	/^    f010cbb9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
f010cbbd	obj/kern/kernel.asm	/^    f010cbbd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
f010cbc1	obj/kern/kernel.asm	/^    f010cbc1:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f010cbc8	obj/kern/kernel.asm	/^    f010cbc8:	00 00 00 $/;"	l
f010cbcb	obj/kern/kernel.asm	/^    f010cbcb:	ff d0                	callq  *%rax$/;"	l
f010cbcd	obj/kern/kernel.asm	/^    f010cbcd:	48 98                	cltq   $/;"	l
f010cbcf	obj/kern/kernel.asm	/^    f010cbcf:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f010cbd3	obj/kern/kernel.asm	/^    f010cbd3:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010cbd6	obj/kern/kernel.asm	/^    f010cbd6:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f010cbda	obj/kern/kernel.asm	/^    f010cbda:	48 29 c2             	sub    %rax,%rdx$/;"	l
f010cbdd	obj/kern/kernel.asm	/^    f010cbdd:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f010cbe4	obj/kern/kernel.asm	/^    f010cbe4:	00 00 00 $/;"	l
f010cbe7	obj/kern/kernel.asm	/^    f010cbe7:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010cbeb	obj/kern/kernel.asm	/^    f010cbeb:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
f010cbef	obj/kern/kernel.asm	/^    f010cbef:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx$/;"	l
f010cbf3	obj/kern/kernel.asm	/^    f010cbf3:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx$/;"	l
f010cbf7	obj/kern/kernel.asm	/^    f010cbf7:	b9 04 00 00 00       	mov    $0x4,%ecx$/;"	l
f010cbfc	obj/kern/kernel.asm	/^    f010cbfc:	48 89 de             	mov    %rbx,%rsi$/;"	l
f010cbff	obj/kern/kernel.asm	/^    f010cbff:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010cc02	obj/kern/kernel.asm	/^    f010cc02:	48 b8 b2 34 10 f0 00 	mov    $0xf01034b2,%rax$/;"	l
f010cc09	obj/kern/kernel.asm	/^    f010cc09:	00 00 00 $/;"	l
f010cc0c	obj/kern/kernel.asm	/^    f010cc0c:	ff d0                	callq  *%rax$/;"	l
f010cc0e	obj/kern/kernel.asm	/^    f010cc0e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
f010cc12	obj/kern/kernel.asm	/^    f010cc12:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
f010cc16	obj/kern/kernel.asm	/^    f010cc16:	48 89 c6             	mov    %rax,%rsi$/;"	l
f010cc19	obj/kern/kernel.asm	/^    f010cc19:	48 bf 50 2e 11 f0 00 	mov    $0xf0112e50,%rdi$/;"	l
f010cc20	obj/kern/kernel.asm	/^    f010cc20:	00 00 00 $/;"	l
f010cc23	obj/kern/kernel.asm	/^    f010cc23:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010cc28	obj/kern/kernel.asm	/^    f010cc28:	48 b9 eb 88 10 f0 00 	mov    $0xf01088eb,%rcx$/;"	l
f010cc2f	obj/kern/kernel.asm	/^    f010cc2f:	00 00 00 $/;"	l
f010cc32	obj/kern/kernel.asm	/^    f010cc32:	ff d1                	callq  *%rcx$/;"	l
f010cc34	obj/kern/kernel.asm	/^    f010cc34:	48 83 c4 18          	add    $0x18,%rsp$/;"	l
f010cc38	obj/kern/kernel.asm	/^    f010cc38:	5b                   	pop    %rbx$/;"	l
f010cc39	obj/kern/kernel.asm	/^    f010cc39:	c9                   	leaveq $/;"	l
f010cc3a	obj/kern/kernel.asm	/^    f010cc3a:	c3                   	retq   $/;"	l
f010cc3b	obj/kern/kernel.asm	/^    f010cc3b:	55                   	push   %rbp$/;"	l
f010cc3c	obj/kern/kernel.asm	/^    f010cc3c:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010cc3f	obj/kern/kernel.asm	/^    f010cc3f:	48 b8 2a 11 10 f0 00 	mov    $0xf010112a,%rax$/;"	l
f010cc46	obj/kern/kernel.asm	/^    f010cc46:	00 00 00 $/;"	l
f010cc49	obj/kern/kernel.asm	/^    f010cc49:	ff d0                	callq  *%rax$/;"	l
f010cc4b	obj/kern/kernel.asm	/^    f010cc4b:	c9                   	leaveq $/;"	l
f010cc4c	obj/kern/kernel.asm	/^    f010cc4c:	c3                   	retq   $/;"	l
f010cc4d	obj/kern/kernel.asm	/^    f010cc4d:	55                   	push   %rbp$/;"	l
f010cc4e	obj/kern/kernel.asm	/^    f010cc4e:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010cc51	obj/kern/kernel.asm	/^    f010cc51:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f010cc58	obj/kern/kernel.asm	/^    f010cc58:	00 00 00 $/;"	l
f010cc5b	obj/kern/kernel.asm	/^    f010cc5b:	ff d0                	callq  *%rax$/;"	l
f010cc5d	obj/kern/kernel.asm	/^    f010cc5d:	48 98                	cltq   $/;"	l
f010cc5f	obj/kern/kernel.asm	/^    f010cc5f:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f010cc63	obj/kern/kernel.asm	/^    f010cc63:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010cc66	obj/kern/kernel.asm	/^    f010cc66:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f010cc6a	obj/kern/kernel.asm	/^    f010cc6a:	48 29 c2             	sub    %rax,%rdx$/;"	l
f010cc6d	obj/kern/kernel.asm	/^    f010cc6d:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f010cc74	obj/kern/kernel.asm	/^    f010cc74:	00 00 00 $/;"	l
f010cc77	obj/kern/kernel.asm	/^    f010cc77:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010cc7b	obj/kern/kernel.asm	/^    f010cc7b:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
f010cc7f	obj/kern/kernel.asm	/^    f010cc7f:	8b 80 c8 00 00 00    	mov    0xc8(%rax),%eax$/;"	l
f010cc85	obj/kern/kernel.asm	/^    f010cc85:	c9                   	leaveq $/;"	l
f010cc86	obj/kern/kernel.asm	/^    f010cc86:	c3                   	retq   $/;"	l
f010cc87	obj/kern/kernel.asm	/^    f010cc87:	55                   	push   %rbp$/;"	l
f010cc88	obj/kern/kernel.asm	/^    f010cc88:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010cc8b	obj/kern/kernel.asm	/^    f010cc8b:	53                   	push   %rbx$/;"	l
f010cc8c	obj/kern/kernel.asm	/^    f010cc8c:	48 83 ec 28          	sub    $0x28,%rsp$/;"	l
f010cc90	obj/kern/kernel.asm	/^    f010cc90:	89 7d dc             	mov    %edi,-0x24(%rbp)$/;"	l
f010cc93	obj/kern/kernel.asm	/^    f010cc93:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx$/;"	l
f010cc97	obj/kern/kernel.asm	/^    f010cc97:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
f010cc9a	obj/kern/kernel.asm	/^    f010cc9a:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
f010cc9f	obj/kern/kernel.asm	/^    f010cc9f:	48 89 ce             	mov    %rcx,%rsi$/;"	l
f010cca2	obj/kern/kernel.asm	/^    f010cca2:	89 c7                	mov    %eax,%edi$/;"	l
f010cca4	obj/kern/kernel.asm	/^    f010cca4:	48 b8 e0 6f 10 f0 00 	mov    $0xf0106fe0,%rax$/;"	l
f010ccab	obj/kern/kernel.asm	/^    f010ccab:	00 00 00 $/;"	l
f010ccae	obj/kern/kernel.asm	/^    f010ccae:	ff d0                	callq  *%rax$/;"	l
f010ccb0	obj/kern/kernel.asm	/^    f010ccb0:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
f010ccb3	obj/kern/kernel.asm	/^    f010ccb3:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)$/;"	l
f010ccb7	obj/kern/kernel.asm	/^    f010ccb7:	79 08                	jns    fffffffff010ccc1 <end+0xfffffffefe66b921>$/;"	l
f010ccb9	obj/kern/kernel.asm	/^    f010ccb9:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
f010ccbc	obj/kern/kernel.asm	/^    f010ccbc:	e9 ff 00 00 00       	jmpq   fffffffff010cdc0 <end+0xfffffffefe66ba20>$/;"	l
f010ccc1	obj/kern/kernel.asm	/^    f010ccc1:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f010ccc8	obj/kern/kernel.asm	/^    f010ccc8:	00 00 00 $/;"	l
f010cccb	obj/kern/kernel.asm	/^    f010cccb:	ff d0                	callq  *%rax$/;"	l
f010cccd	obj/kern/kernel.asm	/^    f010cccd:	48 98                	cltq   $/;"	l
f010cccf	obj/kern/kernel.asm	/^    f010cccf:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f010ccd3	obj/kern/kernel.asm	/^    f010ccd3:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010ccd6	obj/kern/kernel.asm	/^    f010ccd6:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f010ccda	obj/kern/kernel.asm	/^    f010ccda:	48 29 c2             	sub    %rax,%rdx$/;"	l
f010ccdd	obj/kern/kernel.asm	/^    f010ccdd:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f010cce4	obj/kern/kernel.asm	/^    f010cce4:	00 00 00 $/;"	l
f010cce7	obj/kern/kernel.asm	/^    f010cce7:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010cceb	obj/kern/kernel.asm	/^    f010cceb:	48 8b 50 08          	mov    0x8(%rax),%rdx$/;"	l
f010ccef	obj/kern/kernel.asm	/^    f010ccef:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
f010ccf3	obj/kern/kernel.asm	/^    f010ccf3:	48 39 c2             	cmp    %rax,%rdx$/;"	l
f010ccf6	obj/kern/kernel.asm	/^    f010ccf6:	75 53                	jne    fffffffff010cd4b <end+0xfffffffefe66b9ab>$/;"	l
f010ccf8	obj/kern/kernel.asm	/^    f010ccf8:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f010ccff	obj/kern/kernel.asm	/^    f010ccff:	00 00 00 $/;"	l
f010cd02	obj/kern/kernel.asm	/^    f010cd02:	ff d0                	callq  *%rax$/;"	l
f010cd04	obj/kern/kernel.asm	/^    f010cd04:	48 98                	cltq   $/;"	l
f010cd06	obj/kern/kernel.asm	/^    f010cd06:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f010cd0a	obj/kern/kernel.asm	/^    f010cd0a:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010cd0d	obj/kern/kernel.asm	/^    f010cd0d:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f010cd11	obj/kern/kernel.asm	/^    f010cd11:	48 29 c2             	sub    %rax,%rdx$/;"	l
f010cd14	obj/kern/kernel.asm	/^    f010cd14:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f010cd1b	obj/kern/kernel.asm	/^    f010cd1b:	00 00 00 $/;"	l
f010cd1e	obj/kern/kernel.asm	/^    f010cd1e:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010cd22	obj/kern/kernel.asm	/^    f010cd22:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
f010cd26	obj/kern/kernel.asm	/^    f010cd26:	8b 80 c8 00 00 00    	mov    0xc8(%rax),%eax$/;"	l
f010cd2c	obj/kern/kernel.asm	/^    f010cd2c:	89 c6                	mov    %eax,%esi$/;"	l
f010cd2e	obj/kern/kernel.asm	/^    f010cd2e:	48 bf 55 2e 11 f0 00 	mov    $0xf0112e55,%rdi$/;"	l
f010cd35	obj/kern/kernel.asm	/^    f010cd35:	00 00 00 $/;"	l
f010cd38	obj/kern/kernel.asm	/^    f010cd38:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010cd3d	obj/kern/kernel.asm	/^    f010cd3d:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f010cd44	obj/kern/kernel.asm	/^    f010cd44:	00 00 00 $/;"	l
f010cd47	obj/kern/kernel.asm	/^    f010cd47:	ff d2                	callq  *%rdx$/;"	l
f010cd49	obj/kern/kernel.asm	/^    f010cd49:	eb 5d                	jmp    fffffffff010cda8 <end+0xfffffffefe66ba08>$/;"	l
f010cd4b	obj/kern/kernel.asm	/^    f010cd4b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
f010cd4f	obj/kern/kernel.asm	/^    f010cd4f:	8b 98 c8 00 00 00    	mov    0xc8(%rax),%ebx$/;"	l
f010cd55	obj/kern/kernel.asm	/^    f010cd55:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f010cd5c	obj/kern/kernel.asm	/^    f010cd5c:	00 00 00 $/;"	l
f010cd5f	obj/kern/kernel.asm	/^    f010cd5f:	ff d0                	callq  *%rax$/;"	l
f010cd61	obj/kern/kernel.asm	/^    f010cd61:	48 98                	cltq   $/;"	l
f010cd63	obj/kern/kernel.asm	/^    f010cd63:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f010cd67	obj/kern/kernel.asm	/^    f010cd67:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010cd6a	obj/kern/kernel.asm	/^    f010cd6a:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f010cd6e	obj/kern/kernel.asm	/^    f010cd6e:	48 29 c2             	sub    %rax,%rdx$/;"	l
f010cd71	obj/kern/kernel.asm	/^    f010cd71:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f010cd78	obj/kern/kernel.asm	/^    f010cd78:	00 00 00 $/;"	l
f010cd7b	obj/kern/kernel.asm	/^    f010cd7b:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010cd7f	obj/kern/kernel.asm	/^    f010cd7f:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
f010cd83	obj/kern/kernel.asm	/^    f010cd83:	8b 80 c8 00 00 00    	mov    0xc8(%rax),%eax$/;"	l
f010cd89	obj/kern/kernel.asm	/^    f010cd89:	89 da                	mov    %ebx,%edx$/;"	l
f010cd8b	obj/kern/kernel.asm	/^    f010cd8b:	89 c6                	mov    %eax,%esi$/;"	l
f010cd8d	obj/kern/kernel.asm	/^    f010cd8d:	48 bf 70 2e 11 f0 00 	mov    $0xf0112e70,%rdi$/;"	l
f010cd94	obj/kern/kernel.asm	/^    f010cd94:	00 00 00 $/;"	l
f010cd97	obj/kern/kernel.asm	/^    f010cd97:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010cd9c	obj/kern/kernel.asm	/^    f010cd9c:	48 b9 eb 88 10 f0 00 	mov    $0xf01088eb,%rcx$/;"	l
f010cda3	obj/kern/kernel.asm	/^    f010cda3:	00 00 00 $/;"	l
f010cda6	obj/kern/kernel.asm	/^    f010cda6:	ff d1                	callq  *%rcx$/;"	l
f010cda8	obj/kern/kernel.asm	/^    f010cda8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
f010cdac	obj/kern/kernel.asm	/^    f010cdac:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010cdaf	obj/kern/kernel.asm	/^    f010cdaf:	48 b8 e6 81 10 f0 00 	mov    $0xf01081e6,%rax$/;"	l
f010cdb6	obj/kern/kernel.asm	/^    f010cdb6:	00 00 00 $/;"	l
f010cdb9	obj/kern/kernel.asm	/^    f010cdb9:	ff d0                	callq  *%rax$/;"	l
f010cdbb	obj/kern/kernel.asm	/^    f010cdbb:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010cdc0	obj/kern/kernel.asm	/^    f010cdc0:	48 83 c4 28          	add    $0x28,%rsp$/;"	l
f010cdc4	obj/kern/kernel.asm	/^    f010cdc4:	5b                   	pop    %rbx$/;"	l
f010cdc5	obj/kern/kernel.asm	/^    f010cdc5:	c9                   	leaveq $/;"	l
f010cdc6	obj/kern/kernel.asm	/^    f010cdc6:	c3                   	retq   $/;"	l
f010cdc7	obj/kern/kernel.asm	/^    f010cdc7:	55                   	push   %rbp$/;"	l
f010cdc8	obj/kern/kernel.asm	/^    f010cdc8:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010cdcb	obj/kern/kernel.asm	/^    f010cdcb:	48 b8 40 c8 10 f0 00 	mov    $0xf010c840,%rax$/;"	l
f010cdd2	obj/kern/kernel.asm	/^    f010cdd2:	00 00 00 $/;"	l
f010cdd5	obj/kern/kernel.asm	/^    f010cdd5:	ff d0                	callq  *%rax$/;"	l
f010cdd7	obj/kern/kernel.asm	/^    f010cdd7:	55                   	push   %rbp$/;"	l
f010cdd8	obj/kern/kernel.asm	/^    f010cdd8:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010cddb	obj/kern/kernel.asm	/^    f010cddb:	53                   	push   %rbx$/;"	l
f010cddc	obj/kern/kernel.asm	/^    f010cddc:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
f010cde0	obj/kern/kernel.asm	/^    f010cde0:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)$/;"	l
f010cde7	obj/kern/kernel.asm	/^    f010cde7:	00 $/;"	l
f010cde8	obj/kern/kernel.asm	/^    f010cde8:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f010cdef	obj/kern/kernel.asm	/^    f010cdef:	00 00 00 $/;"	l
f010cdf2	obj/kern/kernel.asm	/^    f010cdf2:	ff d0                	callq  *%rax$/;"	l
f010cdf4	obj/kern/kernel.asm	/^    f010cdf4:	48 98                	cltq   $/;"	l
f010cdf6	obj/kern/kernel.asm	/^    f010cdf6:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f010cdfa	obj/kern/kernel.asm	/^    f010cdfa:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010cdfd	obj/kern/kernel.asm	/^    f010cdfd:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f010ce01	obj/kern/kernel.asm	/^    f010ce01:	48 29 c2             	sub    %rax,%rdx$/;"	l
f010ce04	obj/kern/kernel.asm	/^    f010ce04:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f010ce0b	obj/kern/kernel.asm	/^    f010ce0b:	00 00 00 $/;"	l
f010ce0e	obj/kern/kernel.asm	/^    f010ce0e:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010ce12	obj/kern/kernel.asm	/^    f010ce12:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
f010ce16	obj/kern/kernel.asm	/^    f010ce16:	8b 90 c8 00 00 00    	mov    0xc8(%rax),%edx$/;"	l
f010ce1c	obj/kern/kernel.asm	/^    f010ce1c:	48 8d 45 e0          	lea    -0x20(%rbp),%rax$/;"	l
f010ce20	obj/kern/kernel.asm	/^    f010ce20:	89 d6                	mov    %edx,%esi$/;"	l
f010ce22	obj/kern/kernel.asm	/^    f010ce22:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010ce25	obj/kern/kernel.asm	/^    f010ce25:	48 b8 18 78 10 f0 00 	mov    $0xf0107818,%rax$/;"	l
f010ce2c	obj/kern/kernel.asm	/^    f010ce2c:	00 00 00 $/;"	l
f010ce2f	obj/kern/kernel.asm	/^    f010ce2f:	ff d0                	callq  *%rax$/;"	l
f010ce31	obj/kern/kernel.asm	/^    f010ce31:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
f010ce34	obj/kern/kernel.asm	/^    f010ce34:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)$/;"	l
f010ce38	obj/kern/kernel.asm	/^    f010ce38:	74 07                	je     fffffffff010ce41 <end+0xfffffffefe66baa1>$/;"	l
f010ce3a	obj/kern/kernel.asm	/^    f010ce3a:	b8 fb ff ff ff       	mov    $0xfffffffb,%eax$/;"	l
f010ce3f	obj/kern/kernel.asm	/^    f010ce3f:	eb 6d                	jmp    fffffffff010ceae <end+0xfffffffefe66bb0e>$/;"	l
f010ce41	obj/kern/kernel.asm	/^    f010ce41:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
f010ce45	obj/kern/kernel.asm	/^    f010ce45:	c7 80 d4 00 00 00 04 	movl   $0x4,0xd4(%rax)$/;"	l
f010ce4c	obj/kern/kernel.asm	/^    f010ce4c:	00 00 00 $/;"	l
f010ce4f	obj/kern/kernel.asm	/^    f010ce4f:	48 8b 5d e0          	mov    -0x20(%rbp),%rbx$/;"	l
f010ce53	obj/kern/kernel.asm	/^    f010ce53:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f010ce5a	obj/kern/kernel.asm	/^    f010ce5a:	00 00 00 $/;"	l
f010ce5d	obj/kern/kernel.asm	/^    f010ce5d:	ff d0                	callq  *%rax$/;"	l
f010ce5f	obj/kern/kernel.asm	/^    f010ce5f:	48 98                	cltq   $/;"	l
f010ce61	obj/kern/kernel.asm	/^    f010ce61:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f010ce65	obj/kern/kernel.asm	/^    f010ce65:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010ce68	obj/kern/kernel.asm	/^    f010ce68:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f010ce6c	obj/kern/kernel.asm	/^    f010ce6c:	48 29 c2             	sub    %rax,%rdx$/;"	l
f010ce6f	obj/kern/kernel.asm	/^    f010ce6f:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f010ce76	obj/kern/kernel.asm	/^    f010ce76:	00 00 00 $/;"	l
f010ce79	obj/kern/kernel.asm	/^    f010ce79:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010ce7d	obj/kern/kernel.asm	/^    f010ce7d:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
f010ce81	obj/kern/kernel.asm	/^    f010ce81:	48 89 da             	mov    %rbx,%rdx$/;"	l
f010ce84	obj/kern/kernel.asm	/^    f010ce84:	48 89 c3             	mov    %rax,%rbx$/;"	l
f010ce87	obj/kern/kernel.asm	/^    f010ce87:	b8 18 00 00 00       	mov    $0x18,%eax$/;"	l
f010ce8c	obj/kern/kernel.asm	/^    f010ce8c:	48 89 d7             	mov    %rdx,%rdi$/;"	l
f010ce8f	obj/kern/kernel.asm	/^    f010ce8f:	48 89 de             	mov    %rbx,%rsi$/;"	l
f010ce92	obj/kern/kernel.asm	/^    f010ce92:	48 89 c1             	mov    %rax,%rcx$/;"	l
f010ce95	obj/kern/kernel.asm	/^    f010ce95:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)$/;"	l
f010ce98	obj/kern/kernel.asm	/^    f010ce98:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
f010ce9c	obj/kern/kernel.asm	/^    f010ce9c:	48 c7 40 70 00 00 00 	movq   $0x0,0x70(%rax)$/;"	l
f010cea3	obj/kern/kernel.asm	/^    f010cea3:	00 $/;"	l
f010cea4	obj/kern/kernel.asm	/^    f010cea4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
f010cea8	obj/kern/kernel.asm	/^    f010cea8:	8b 80 c8 00 00 00    	mov    0xc8(%rax),%eax$/;"	l
f010ceae	obj/kern/kernel.asm	/^    f010ceae:	48 83 c4 18          	add    $0x18,%rsp$/;"	l
f010ceb2	obj/kern/kernel.asm	/^    f010ceb2:	5b                   	pop    %rbx$/;"	l
f010ceb3	obj/kern/kernel.asm	/^    f010ceb3:	c9                   	leaveq $/;"	l
f010ceb4	obj/kern/kernel.asm	/^    f010ceb4:	c3                   	retq   $/;"	l
f010ceb5	obj/kern/kernel.asm	/^    f010ceb5:	55                   	push   %rbp$/;"	l
f010ceb6	obj/kern/kernel.asm	/^    f010ceb6:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010ceb9	obj/kern/kernel.asm	/^    f010ceb9:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
f010cebd	obj/kern/kernel.asm	/^    f010cebd:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
f010cec0	obj/kern/kernel.asm	/^    f010cec0:	89 75 e8             	mov    %esi,-0x18(%rbp)$/;"	l
f010cec3	obj/kern/kernel.asm	/^    f010cec3:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)$/;"	l
f010ceca	obj/kern/kernel.asm	/^    f010ceca:	00 $/;"	l
f010cecb	obj/kern/kernel.asm	/^    f010cecb:	48 8d 4d f0          	lea    -0x10(%rbp),%rcx$/;"	l
f010cecf	obj/kern/kernel.asm	/^    f010cecf:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
f010ced2	obj/kern/kernel.asm	/^    f010ced2:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
f010ced7	obj/kern/kernel.asm	/^    f010ced7:	48 89 ce             	mov    %rcx,%rsi$/;"	l
f010ceda	obj/kern/kernel.asm	/^    f010ceda:	89 c7                	mov    %eax,%edi$/;"	l
f010cedc	obj/kern/kernel.asm	/^    f010cedc:	48 b8 e0 6f 10 f0 00 	mov    $0xf0106fe0,%rax$/;"	l
f010cee3	obj/kern/kernel.asm	/^    f010cee3:	00 00 00 $/;"	l
f010cee6	obj/kern/kernel.asm	/^    f010cee6:	ff d0                	callq  *%rax$/;"	l
f010cee8	obj/kern/kernel.asm	/^    f010cee8:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
f010ceeb	obj/kern/kernel.asm	/^    f010ceeb:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)$/;"	l
f010ceef	obj/kern/kernel.asm	/^    f010ceef:	74 05                	je     fffffffff010cef6 <end+0xfffffffefe66bb56>$/;"	l
f010cef1	obj/kern/kernel.asm	/^    f010cef1:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
f010cef4	obj/kern/kernel.asm	/^    f010cef4:	eb 23                	jmp    fffffffff010cf19 <end+0xfffffffefe66bb79>$/;"	l
f010cef6	obj/kern/kernel.asm	/^    f010cef6:	83 7d e8 02          	cmpl   $0x2,-0x18(%rbp)$/;"	l
f010cefa	obj/kern/kernel.asm	/^    f010cefa:	74 0d                	je     fffffffff010cf09 <end+0xfffffffefe66bb69>$/;"	l
f010cefc	obj/kern/kernel.asm	/^    f010cefc:	83 7d e8 04          	cmpl   $0x4,-0x18(%rbp)$/;"	l
f010cf00	obj/kern/kernel.asm	/^    f010cf00:	74 07                	je     fffffffff010cf09 <end+0xfffffffefe66bb69>$/;"	l
f010cf02	obj/kern/kernel.asm	/^    f010cf02:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f010cf07	obj/kern/kernel.asm	/^    f010cf07:	eb 10                	jmp    fffffffff010cf19 <end+0xfffffffefe66bb79>$/;"	l
f010cf09	obj/kern/kernel.asm	/^    f010cf09:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
f010cf0d	obj/kern/kernel.asm	/^    f010cf0d:	8b 55 e8             	mov    -0x18(%rbp),%edx$/;"	l
f010cf10	obj/kern/kernel.asm	/^    f010cf10:	89 90 d4 00 00 00    	mov    %edx,0xd4(%rax)$/;"	l
f010cf16	obj/kern/kernel.asm	/^    f010cf16:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
f010cf19	obj/kern/kernel.asm	/^    f010cf19:	c9                   	leaveq $/;"	l
f010cf1a	obj/kern/kernel.asm	/^    f010cf1a:	c3                   	retq   $/;"	l
f010cf1b	obj/kern/kernel.asm	/^    f010cf1b:	55                   	push   %rbp$/;"	l
f010cf1c	obj/kern/kernel.asm	/^    f010cf1c:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010cf1f	obj/kern/kernel.asm	/^    f010cf1f:	53                   	push   %rbx$/;"	l
f010cf20	obj/kern/kernel.asm	/^    f010cf20:	48 83 ec 28          	sub    $0x28,%rsp$/;"	l
f010cf24	obj/kern/kernel.asm	/^    f010cf24:	89 7d dc             	mov    %edi,-0x24(%rbp)$/;"	l
f010cf27	obj/kern/kernel.asm	/^    f010cf27:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)$/;"	l
f010cf2b	obj/kern/kernel.asm	/^    f010cf2b:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)$/;"	l
f010cf32	obj/kern/kernel.asm	/^    f010cf32:	00 $/;"	l
f010cf33	obj/kern/kernel.asm	/^    f010cf33:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx$/;"	l
f010cf37	obj/kern/kernel.asm	/^    f010cf37:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
f010cf3a	obj/kern/kernel.asm	/^    f010cf3a:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
f010cf3f	obj/kern/kernel.asm	/^    f010cf3f:	48 89 ce             	mov    %rcx,%rsi$/;"	l
f010cf42	obj/kern/kernel.asm	/^    f010cf42:	89 c7                	mov    %eax,%edi$/;"	l
f010cf44	obj/kern/kernel.asm	/^    f010cf44:	48 b8 e0 6f 10 f0 00 	mov    $0xf0106fe0,%rax$/;"	l
f010cf4b	obj/kern/kernel.asm	/^    f010cf4b:	00 00 00 $/;"	l
f010cf4e	obj/kern/kernel.asm	/^    f010cf4e:	ff d0                	callq  *%rax$/;"	l
f010cf50	obj/kern/kernel.asm	/^    f010cf50:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
f010cf53	obj/kern/kernel.asm	/^    f010cf53:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)$/;"	l
f010cf57	obj/kern/kernel.asm	/^    f010cf57:	74 07                	je     fffffffff010cf60 <end+0xfffffffefe66bbc0>$/;"	l
f010cf59	obj/kern/kernel.asm	/^    f010cf59:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f010cf5e	obj/kern/kernel.asm	/^    f010cf5e:	eb 1f                	jmp    fffffffff010cf7f <end+0xfffffffefe66bbdf>$/;"	l
f010cf60	obj/kern/kernel.asm	/^    f010cf60:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx$/;"	l
f010cf64	obj/kern/kernel.asm	/^    f010cf64:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f010cf68	obj/kern/kernel.asm	/^    f010cf68:	48 89 c3             	mov    %rax,%rbx$/;"	l
f010cf6b	obj/kern/kernel.asm	/^    f010cf6b:	b8 18 00 00 00       	mov    $0x18,%eax$/;"	l
f010cf70	obj/kern/kernel.asm	/^    f010cf70:	48 89 d7             	mov    %rdx,%rdi$/;"	l
f010cf73	obj/kern/kernel.asm	/^    f010cf73:	48 89 de             	mov    %rbx,%rsi$/;"	l
f010cf76	obj/kern/kernel.asm	/^    f010cf76:	48 89 c1             	mov    %rax,%rcx$/;"	l
f010cf79	obj/kern/kernel.asm	/^    f010cf79:	f3 48 a5             	rep movsq %ds:(%rsi),%es:(%rdi)$/;"	l
f010cf7c	obj/kern/kernel.asm	/^    f010cf7c:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
f010cf7f	obj/kern/kernel.asm	/^    f010cf7f:	48 83 c4 28          	add    $0x28,%rsp$/;"	l
f010cf83	obj/kern/kernel.asm	/^    f010cf83:	5b                   	pop    %rbx$/;"	l
f010cf84	obj/kern/kernel.asm	/^    f010cf84:	c9                   	leaveq $/;"	l
f010cf85	obj/kern/kernel.asm	/^    f010cf85:	c3                   	retq   $/;"	l
f010cf86	obj/kern/kernel.asm	/^    f010cf86:	55                   	push   %rbp$/;"	l
f010cf87	obj/kern/kernel.asm	/^    f010cf87:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010cf8a	obj/kern/kernel.asm	/^    f010cf8a:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
f010cf8e	obj/kern/kernel.asm	/^    f010cf8e:	89 7d ec             	mov    %edi,-0x14(%rbp)$/;"	l
f010cf91	obj/kern/kernel.asm	/^    f010cf91:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
f010cf95	obj/kern/kernel.asm	/^    f010cf95:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)$/;"	l
f010cf9c	obj/kern/kernel.asm	/^    f010cf9c:	00 $/;"	l
f010cf9d	obj/kern/kernel.asm	/^    f010cf9d:	48 8d 4d f0          	lea    -0x10(%rbp),%rcx$/;"	l
f010cfa1	obj/kern/kernel.asm	/^    f010cfa1:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
f010cfa4	obj/kern/kernel.asm	/^    f010cfa4:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
f010cfa9	obj/kern/kernel.asm	/^    f010cfa9:	48 89 ce             	mov    %rcx,%rsi$/;"	l
f010cfac	obj/kern/kernel.asm	/^    f010cfac:	89 c7                	mov    %eax,%edi$/;"	l
f010cfae	obj/kern/kernel.asm	/^    f010cfae:	48 b8 e0 6f 10 f0 00 	mov    $0xf0106fe0,%rax$/;"	l
f010cfb5	obj/kern/kernel.asm	/^    f010cfb5:	00 00 00 $/;"	l
f010cfb8	obj/kern/kernel.asm	/^    f010cfb8:	ff d0                	callq  *%rax$/;"	l
f010cfba	obj/kern/kernel.asm	/^    f010cfba:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
f010cfbd	obj/kern/kernel.asm	/^    f010cfbd:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)$/;"	l
f010cfc1	obj/kern/kernel.asm	/^    f010cfc1:	74 07                	je     fffffffff010cfca <end+0xfffffffefe66bc2a>$/;"	l
f010cfc3	obj/kern/kernel.asm	/^    f010cfc3:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f010cfc8	obj/kern/kernel.asm	/^    f010cfc8:	eb 12                	jmp    fffffffff010cfdc <end+0xfffffffefe66bc3c>$/;"	l
f010cfca	obj/kern/kernel.asm	/^    f010cfca:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
f010cfce	obj/kern/kernel.asm	/^    f010cfce:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx$/;"	l
f010cfd2	obj/kern/kernel.asm	/^    f010cfd2:	48 89 90 f0 00 00 00 	mov    %rdx,0xf0(%rax)$/;"	l
f010cfd9	obj/kern/kernel.asm	/^    f010cfd9:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
f010cfdc	obj/kern/kernel.asm	/^    f010cfdc:	c9                   	leaveq $/;"	l
f010cfdd	obj/kern/kernel.asm	/^    f010cfdd:	c3                   	retq   $/;"	l
f010cfde	obj/kern/kernel.asm	/^    f010cfde:	55                   	push   %rbp$/;"	l
f010cfdf	obj/kern/kernel.asm	/^    f010cfdf:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010cfe2	obj/kern/kernel.asm	/^    f010cfe2:	53                   	push   %rbx$/;"	l
f010cfe3	obj/kern/kernel.asm	/^    f010cfe3:	48 83 ec 58          	sub    $0x58,%rsp$/;"	l
f010cfe7	obj/kern/kernel.asm	/^    f010cfe7:	89 7d bc             	mov    %edi,-0x44(%rbp)$/;"	l
f010cfea	obj/kern/kernel.asm	/^    f010cfea:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)$/;"	l
f010cfee	obj/kern/kernel.asm	/^    f010cfee:	89 55 ac             	mov    %edx,-0x54(%rbp)$/;"	l
f010cff1	obj/kern/kernel.asm	/^    f010cff1:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)$/;"	l
f010cff8	obj/kern/kernel.asm	/^    f010cff8:	00 $/;"	l
f010cff9	obj/kern/kernel.asm	/^    f010cff9:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx$/;"	l
f010cffd	obj/kern/kernel.asm	/^    f010cffd:	8b 45 bc             	mov    -0x44(%rbp),%eax$/;"	l
f010d000	obj/kern/kernel.asm	/^    f010d000:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
f010d005	obj/kern/kernel.asm	/^    f010d005:	48 89 ce             	mov    %rcx,%rsi$/;"	l
f010d008	obj/kern/kernel.asm	/^    f010d008:	89 c7                	mov    %eax,%edi$/;"	l
f010d00a	obj/kern/kernel.asm	/^    f010d00a:	48 b8 e0 6f 10 f0 00 	mov    $0xf0106fe0,%rax$/;"	l
f010d011	obj/kern/kernel.asm	/^    f010d011:	00 00 00 $/;"	l
f010d014	obj/kern/kernel.asm	/^    f010d014:	ff d0                	callq  *%rax$/;"	l
f010d016	obj/kern/kernel.asm	/^    f010d016:	89 45 cc             	mov    %eax,-0x34(%rbp)$/;"	l
f010d019	obj/kern/kernel.asm	/^    f010d019:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)$/;"	l
f010d01d	obj/kern/kernel.asm	/^    f010d01d:	74 0a                	je     fffffffff010d029 <end+0xfffffffefe66bc89>$/;"	l
f010d01f	obj/kern/kernel.asm	/^    f010d01f:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f010d024	obj/kern/kernel.asm	/^    f010d024:	e9 ec 00 00 00       	jmpq   fffffffff010d115 <end+0xfffffffefe66bd75>$/;"	l
f010d029	obj/kern/kernel.asm	/^    f010d029:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx$/;"	l
f010d02d	obj/kern/kernel.asm	/^    f010d02d:	b8 ff ff 7f ef       	mov    $0xef7fffff,%eax$/;"	l
f010d032	obj/kern/kernel.asm	/^    f010d032:	48 39 c2             	cmp    %rax,%rdx$/;"	l
f010d035	obj/kern/kernel.asm	/^    f010d035:	77 3b                	ja     fffffffff010d072 <end+0xfffffffefe66bcd2>$/;"	l
f010d037	obj/kern/kernel.asm	/^    f010d037:	48 c7 45 d8 00 10 00 	movq   $0x1000,-0x28(%rbp)$/;"	l
f010d03e	obj/kern/kernel.asm	/^    f010d03e:	00 $/;"	l
f010d03f	obj/kern/kernel.asm	/^    f010d03f:	48 8b 45 b0          	mov    -0x50(%rbp),%rax$/;"	l
f010d043	obj/kern/kernel.asm	/^    f010d043:	48 03 45 d8          	add    -0x28(%rbp),%rax$/;"	l
f010d047	obj/kern/kernel.asm	/^    f010d047:	48 83 e8 01          	sub    $0x1,%rax$/;"	l
f010d04b	obj/kern/kernel.asm	/^    f010d04b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)$/;"	l
f010d04f	obj/kern/kernel.asm	/^    f010d04f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
f010d053	obj/kern/kernel.asm	/^    f010d053:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010d058	obj/kern/kernel.asm	/^    f010d058:	48 f7 75 d8          	divq   -0x28(%rbp)$/;"	l
f010d05c	obj/kern/kernel.asm	/^    f010d05c:	48 89 d0             	mov    %rdx,%rax$/;"	l
f010d05f	obj/kern/kernel.asm	/^    f010d05f:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx$/;"	l
f010d063	obj/kern/kernel.asm	/^    f010d063:	48 89 d1             	mov    %rdx,%rcx$/;"	l
f010d066	obj/kern/kernel.asm	/^    f010d066:	48 29 c1             	sub    %rax,%rcx$/;"	l
f010d069	obj/kern/kernel.asm	/^    f010d069:	48 89 c8             	mov    %rcx,%rax$/;"	l
f010d06c	obj/kern/kernel.asm	/^    f010d06c:	48 3b 45 b0          	cmp    -0x50(%rbp),%rax$/;"	l
f010d070	obj/kern/kernel.asm	/^    f010d070:	74 0a                	je     fffffffff010d07c <end+0xfffffffefe66bcdc>$/;"	l
f010d072	obj/kern/kernel.asm	/^    f010d072:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f010d077	obj/kern/kernel.asm	/^    f010d077:	e9 99 00 00 00       	jmpq   fffffffff010d115 <end+0xfffffffefe66bd75>$/;"	l
f010d07c	obj/kern/kernel.asm	/^    f010d07c:	8b 45 ac             	mov    -0x54(%rbp),%eax$/;"	l
f010d07f	obj/kern/kernel.asm	/^    f010d07f:	83 e0 05             	and    $0x5,%eax$/;"	l
f010d082	obj/kern/kernel.asm	/^    f010d082:	83 f8 05             	cmp    $0x5,%eax$/;"	l
f010d085	obj/kern/kernel.asm	/^    f010d085:	75 0c                	jne    fffffffff010d093 <end+0xfffffffefe66bcf3>$/;"	l
f010d087	obj/kern/kernel.asm	/^    f010d087:	8b 45 ac             	mov    -0x54(%rbp),%eax$/;"	l
f010d08a	obj/kern/kernel.asm	/^    f010d08a:	25 f8 f1 ff ff       	and    $0xfffff1f8,%eax$/;"	l
f010d08f	obj/kern/kernel.asm	/^    f010d08f:	85 c0                	test   %eax,%eax$/;"	l
f010d091	obj/kern/kernel.asm	/^    f010d091:	74 07                	je     fffffffff010d09a <end+0xfffffffefe66bcfa>$/;"	l
f010d093	obj/kern/kernel.asm	/^    f010d093:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f010d098	obj/kern/kernel.asm	/^    f010d098:	eb 7b                	jmp    fffffffff010d115 <end+0xfffffffefe66bd75>$/;"	l
f010d09a	obj/kern/kernel.asm	/^    f010d09a:	bf 01 00 00 00       	mov    $0x1,%edi$/;"	l
f010d09f	obj/kern/kernel.asm	/^    f010d09f:	48 b8 fd 27 10 f0 00 	mov    $0xf01027fd,%rax$/;"	l
f010d0a6	obj/kern/kernel.asm	/^    f010d0a6:	00 00 00 $/;"	l
f010d0a9	obj/kern/kernel.asm	/^    f010d0a9:	ff d0                	callq  *%rax$/;"	l
f010d0ab	obj/kern/kernel.asm	/^    f010d0ab:	48 89 45 d0          	mov    %rax,-0x30(%rbp)$/;"	l
f010d0af	obj/kern/kernel.asm	/^    f010d0af:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)$/;"	l
f010d0b4	obj/kern/kernel.asm	/^    f010d0b4:	75 07                	jne    fffffffff010d0bd <end+0xfffffffefe66bd1d>$/;"	l
f010d0b6	obj/kern/kernel.asm	/^    f010d0b6:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f010d0bb	obj/kern/kernel.asm	/^    f010d0bb:	eb 58                	jmp    fffffffff010d115 <end+0xfffffffefe66bd75>$/;"	l
f010d0bd	obj/kern/kernel.asm	/^    f010d0bd:	48 8b 45 b0          	mov    -0x50(%rbp),%rax$/;"	l
f010d0c1	obj/kern/kernel.asm	/^    f010d0c1:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
f010d0c5	obj/kern/kernel.asm	/^    f010d0c5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010d0c9	obj/kern/kernel.asm	/^    f010d0c9:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax$/;"	l
f010d0cf	obj/kern/kernel.asm	/^    f010d0cf:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010d0d2	obj/kern/kernel.asm	/^    f010d0d2:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
f010d0d6	obj/kern/kernel.asm	/^    f010d0d6:	48 8b 80 e0 00 00 00 	mov    0xe0(%rax),%rax$/;"	l
f010d0dd	obj/kern/kernel.asm	/^    f010d0dd:	8b 4d ac             	mov    -0x54(%rbp),%ecx$/;"	l
f010d0e0	obj/kern/kernel.asm	/^    f010d0e0:	48 8b 5d d0          	mov    -0x30(%rbp),%rbx$/;"	l
f010d0e4	obj/kern/kernel.asm	/^    f010d0e4:	48 89 de             	mov    %rbx,%rsi$/;"	l
f010d0e7	obj/kern/kernel.asm	/^    f010d0e7:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010d0ea	obj/kern/kernel.asm	/^    f010d0ea:	48 b8 97 2f 10 f0 00 	mov    $0xf0102f97,%rax$/;"	l
f010d0f1	obj/kern/kernel.asm	/^    f010d0f1:	00 00 00 $/;"	l
f010d0f4	obj/kern/kernel.asm	/^    f010d0f4:	ff d0                	callq  *%rax$/;"	l
f010d0f6	obj/kern/kernel.asm	/^    f010d0f6:	89 45 cc             	mov    %eax,-0x34(%rbp)$/;"	l
f010d0f9	obj/kern/kernel.asm	/^    f010d0f9:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)$/;"	l
f010d0fd	obj/kern/kernel.asm	/^    f010d0fd:	74 13                	je     fffffffff010d112 <end+0xfffffffefe66bd72>$/;"	l
f010d0ff	obj/kern/kernel.asm	/^    f010d0ff:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f010d103	obj/kern/kernel.asm	/^    f010d103:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010d106	obj/kern/kernel.asm	/^    f010d106:	48 b8 b6 28 10 f0 00 	mov    $0xf01028b6,%rax$/;"	l
f010d10d	obj/kern/kernel.asm	/^    f010d10d:	00 00 00 $/;"	l
f010d110	obj/kern/kernel.asm	/^    f010d110:	ff d0                	callq  *%rax$/;"	l
f010d112	obj/kern/kernel.asm	/^    f010d112:	8b 45 cc             	mov    -0x34(%rbp),%eax$/;"	l
f010d115	obj/kern/kernel.asm	/^    f010d115:	48 83 c4 58          	add    $0x58,%rsp$/;"	l
f010d119	obj/kern/kernel.asm	/^    f010d119:	5b                   	pop    %rbx$/;"	l
f010d11a	obj/kern/kernel.asm	/^    f010d11a:	c9                   	leaveq $/;"	l
f010d11b	obj/kern/kernel.asm	/^    f010d11b:	c3                   	retq   $/;"	l
f010d11c	obj/kern/kernel.asm	/^    f010d11c:	55                   	push   %rbp$/;"	l
f010d11d	obj/kern/kernel.asm	/^    f010d11d:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010d120	obj/kern/kernel.asm	/^    f010d120:	53                   	push   %rbx$/;"	l
f010d121	obj/kern/kernel.asm	/^    f010d121:	48 81 ec a8 00 00 00 	sub    $0xa8,%rsp$/;"	l
f010d128	obj/kern/kernel.asm	/^    f010d128:	89 bd 7c ff ff ff    	mov    %edi,-0x84(%rbp)$/;"	l
f010d12e	obj/kern/kernel.asm	/^    f010d12e:	48 89 b5 70 ff ff ff 	mov    %rsi,-0x90(%rbp)$/;"	l
f010d135	obj/kern/kernel.asm	/^    f010d135:	89 95 6c ff ff ff    	mov    %edx,-0x94(%rbp)$/;"	l
f010d13b	obj/kern/kernel.asm	/^    f010d13b:	48 89 8d 60 ff ff ff 	mov    %rcx,-0xa0(%rbp)$/;"	l
f010d142	obj/kern/kernel.asm	/^    f010d142:	44 89 85 5c ff ff ff 	mov    %r8d,-0xa4(%rbp)$/;"	l
f010d149	obj/kern/kernel.asm	/^    f010d149:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)$/;"	l
f010d150	obj/kern/kernel.asm	/^    f010d150:	00 $/;"	l
f010d151	obj/kern/kernel.asm	/^    f010d151:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)$/;"	l
f010d158	obj/kern/kernel.asm	/^    f010d158:	00 $/;"	l
f010d159	obj/kern/kernel.asm	/^    f010d159:	48 8d 4d 98          	lea    -0x68(%rbp),%rcx$/;"	l
f010d15d	obj/kern/kernel.asm	/^    f010d15d:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax$/;"	l
f010d163	obj/kern/kernel.asm	/^    f010d163:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
f010d168	obj/kern/kernel.asm	/^    f010d168:	48 89 ce             	mov    %rcx,%rsi$/;"	l
f010d16b	obj/kern/kernel.asm	/^    f010d16b:	89 c7                	mov    %eax,%edi$/;"	l
f010d16d	obj/kern/kernel.asm	/^    f010d16d:	48 b8 e0 6f 10 f0 00 	mov    $0xf0106fe0,%rax$/;"	l
f010d174	obj/kern/kernel.asm	/^    f010d174:	00 00 00 $/;"	l
f010d177	obj/kern/kernel.asm	/^    f010d177:	ff d0                	callq  *%rax$/;"	l
f010d179	obj/kern/kernel.asm	/^    f010d179:	89 45 a0             	mov    %eax,-0x60(%rbp)$/;"	l
f010d17c	obj/kern/kernel.asm	/^    f010d17c:	48 8d 4d 90          	lea    -0x70(%rbp),%rcx$/;"	l
f010d180	obj/kern/kernel.asm	/^    f010d180:	8b 85 6c ff ff ff    	mov    -0x94(%rbp),%eax$/;"	l
f010d186	obj/kern/kernel.asm	/^    f010d186:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
f010d18b	obj/kern/kernel.asm	/^    f010d18b:	48 89 ce             	mov    %rcx,%rsi$/;"	l
f010d18e	obj/kern/kernel.asm	/^    f010d18e:	89 c7                	mov    %eax,%edi$/;"	l
f010d190	obj/kern/kernel.asm	/^    f010d190:	48 b8 e0 6f 10 f0 00 	mov    $0xf0106fe0,%rax$/;"	l
f010d197	obj/kern/kernel.asm	/^    f010d197:	00 00 00 $/;"	l
f010d19a	obj/kern/kernel.asm	/^    f010d19a:	ff d0                	callq  *%rax$/;"	l
f010d19c	obj/kern/kernel.asm	/^    f010d19c:	89 45 a4             	mov    %eax,-0x5c(%rbp)$/;"	l
f010d19f	obj/kern/kernel.asm	/^    f010d19f:	83 7d a0 00          	cmpl   $0x0,-0x60(%rbp)$/;"	l
f010d1a3	obj/kern/kernel.asm	/^    f010d1a3:	75 06                	jne    fffffffff010d1ab <end+0xfffffffefe66be0b>$/;"	l
f010d1a5	obj/kern/kernel.asm	/^    f010d1a5:	83 7d a4 00          	cmpl   $0x0,-0x5c(%rbp)$/;"	l
f010d1a9	obj/kern/kernel.asm	/^    f010d1a9:	74 0a                	je     fffffffff010d1b5 <end+0xfffffffefe66be15>$/;"	l
f010d1ab	obj/kern/kernel.asm	/^    f010d1ab:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f010d1b0	obj/kern/kernel.asm	/^    f010d1b0:	e9 8a 01 00 00       	jmpq   fffffffff010d33f <end+0xfffffffefe66bf9f>$/;"	l
f010d1b5	obj/kern/kernel.asm	/^    f010d1b5:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx$/;"	l
f010d1bc	obj/kern/kernel.asm	/^    f010d1bc:	b8 ff ff 7f ef       	mov    $0xef7fffff,%eax$/;"	l
f010d1c1	obj/kern/kernel.asm	/^    f010d1c1:	48 39 c2             	cmp    %rax,%rdx$/;"	l
f010d1c4	obj/kern/kernel.asm	/^    f010d1c4:	0f 87 93 00 00 00    	ja     fffffffff010d25d <end+0xfffffffefe66bebd>$/;"	l
f010d1ca	obj/kern/kernel.asm	/^    f010d1ca:	48 c7 45 d0 00 10 00 	movq   $0x1000,-0x30(%rbp)$/;"	l
f010d1d1	obj/kern/kernel.asm	/^    f010d1d1:	00 $/;"	l
f010d1d2	obj/kern/kernel.asm	/^    f010d1d2:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax$/;"	l
f010d1d9	obj/kern/kernel.asm	/^    f010d1d9:	48 03 45 d0          	add    -0x30(%rbp),%rax$/;"	l
f010d1dd	obj/kern/kernel.asm	/^    f010d1dd:	48 83 e8 01          	sub    $0x1,%rax$/;"	l
f010d1e1	obj/kern/kernel.asm	/^    f010d1e1:	48 89 45 d8          	mov    %rax,-0x28(%rbp)$/;"	l
f010d1e5	obj/kern/kernel.asm	/^    f010d1e5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f010d1e9	obj/kern/kernel.asm	/^    f010d1e9:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010d1ee	obj/kern/kernel.asm	/^    f010d1ee:	48 f7 75 d0          	divq   -0x30(%rbp)$/;"	l
f010d1f2	obj/kern/kernel.asm	/^    f010d1f2:	48 89 d0             	mov    %rdx,%rax$/;"	l
f010d1f5	obj/kern/kernel.asm	/^    f010d1f5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx$/;"	l
f010d1f9	obj/kern/kernel.asm	/^    f010d1f9:	48 89 d1             	mov    %rdx,%rcx$/;"	l
f010d1fc	obj/kern/kernel.asm	/^    f010d1fc:	48 29 c1             	sub    %rax,%rcx$/;"	l
f010d1ff	obj/kern/kernel.asm	/^    f010d1ff:	48 89 c8             	mov    %rcx,%rax$/;"	l
f010d202	obj/kern/kernel.asm	/^    f010d202:	48 3b 85 70 ff ff ff 	cmp    -0x90(%rbp),%rax$/;"	l
f010d209	obj/kern/kernel.asm	/^    f010d209:	75 52                	jne    fffffffff010d25d <end+0xfffffffefe66bebd>$/;"	l
f010d20b	obj/kern/kernel.asm	/^    f010d20b:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx$/;"	l
f010d212	obj/kern/kernel.asm	/^    f010d212:	b8 ff ff 7f ef       	mov    $0xef7fffff,%eax$/;"	l
f010d217	obj/kern/kernel.asm	/^    f010d217:	48 39 c2             	cmp    %rax,%rdx$/;"	l
f010d21a	obj/kern/kernel.asm	/^    f010d21a:	77 41                	ja     fffffffff010d25d <end+0xfffffffefe66bebd>$/;"	l
f010d21c	obj/kern/kernel.asm	/^    f010d21c:	48 c7 45 e0 00 10 00 	movq   $0x1000,-0x20(%rbp)$/;"	l
f010d223	obj/kern/kernel.asm	/^    f010d223:	00 $/;"	l
f010d224	obj/kern/kernel.asm	/^    f010d224:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax$/;"	l
f010d22b	obj/kern/kernel.asm	/^    f010d22b:	48 03 45 e0          	add    -0x20(%rbp),%rax$/;"	l
f010d22f	obj/kern/kernel.asm	/^    f010d22f:	48 83 e8 01          	sub    $0x1,%rax$/;"	l
f010d233	obj/kern/kernel.asm	/^    f010d233:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
f010d237	obj/kern/kernel.asm	/^    f010d237:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010d23b	obj/kern/kernel.asm	/^    f010d23b:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010d240	obj/kern/kernel.asm	/^    f010d240:	48 f7 75 e0          	divq   -0x20(%rbp)$/;"	l
f010d244	obj/kern/kernel.asm	/^    f010d244:	48 89 d0             	mov    %rdx,%rax$/;"	l
f010d247	obj/kern/kernel.asm	/^    f010d247:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
f010d24b	obj/kern/kernel.asm	/^    f010d24b:	48 89 d1             	mov    %rdx,%rcx$/;"	l
f010d24e	obj/kern/kernel.asm	/^    f010d24e:	48 29 c1             	sub    %rax,%rcx$/;"	l
f010d251	obj/kern/kernel.asm	/^    f010d251:	48 89 c8             	mov    %rcx,%rax$/;"	l
f010d254	obj/kern/kernel.asm	/^    f010d254:	48 3b 85 60 ff ff ff 	cmp    -0xa0(%rbp),%rax$/;"	l
f010d25b	obj/kern/kernel.asm	/^    f010d25b:	74 0a                	je     fffffffff010d267 <end+0xfffffffefe66bec7>$/;"	l
f010d25d	obj/kern/kernel.asm	/^    f010d25d:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f010d262	obj/kern/kernel.asm	/^    f010d262:	e9 d8 00 00 00       	jmpq   fffffffff010d33f <end+0xfffffffefe66bf9f>$/;"	l
f010d267	obj/kern/kernel.asm	/^    f010d267:	48 8b 45 98          	mov    -0x68(%rbp),%rax$/;"	l
f010d26b	obj/kern/kernel.asm	/^    f010d26b:	48 8b 80 e0 00 00 00 	mov    0xe0(%rax),%rax$/;"	l
f010d272	obj/kern/kernel.asm	/^    f010d272:	48 8d 55 88          	lea    -0x78(%rbp),%rdx$/;"	l
f010d276	obj/kern/kernel.asm	/^    f010d276:	48 8b 8d 70 ff ff ff 	mov    -0x90(%rbp),%rcx$/;"	l
f010d27d	obj/kern/kernel.asm	/^    f010d27d:	48 89 ce             	mov    %rcx,%rsi$/;"	l
f010d280	obj/kern/kernel.asm	/^    f010d280:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010d283	obj/kern/kernel.asm	/^    f010d283:	48 b8 9e 30 10 f0 00 	mov    $0xf010309e,%rax$/;"	l
f010d28a	obj/kern/kernel.asm	/^    f010d28a:	00 00 00 $/;"	l
f010d28d	obj/kern/kernel.asm	/^    f010d28d:	ff d0                	callq  *%rax$/;"	l
f010d28f	obj/kern/kernel.asm	/^    f010d28f:	48 89 45 a8          	mov    %rax,-0x58(%rbp)$/;"	l
f010d293	obj/kern/kernel.asm	/^    f010d293:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)$/;"	l
f010d298	obj/kern/kernel.asm	/^    f010d298:	75 0a                	jne    fffffffff010d2a4 <end+0xfffffffefe66bf04>$/;"	l
f010d29a	obj/kern/kernel.asm	/^    f010d29a:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f010d29f	obj/kern/kernel.asm	/^    f010d29f:	e9 9b 00 00 00       	jmpq   fffffffff010d33f <end+0xfffffffefe66bf9f>$/;"	l
f010d2a4	obj/kern/kernel.asm	/^    f010d2a4:	48 8b 45 88          	mov    -0x78(%rbp),%rax$/;"	l
f010d2a8	obj/kern/kernel.asm	/^    f010d2a8:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010d2ab	obj/kern/kernel.asm	/^    f010d2ab:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
f010d2b0	obj/kern/kernel.asm	/^    f010d2b0:	48 89 45 c0          	mov    %rax,-0x40(%rbp)$/;"	l
f010d2b4	obj/kern/kernel.asm	/^    f010d2b4:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
f010d2b8	obj/kern/kernel.asm	/^    f010d2b8:	83 e0 02             	and    $0x2,%eax$/;"	l
f010d2bb	obj/kern/kernel.asm	/^    f010d2bb:	48 85 c0             	test   %rax,%rax$/;"	l
f010d2be	obj/kern/kernel.asm	/^    f010d2be:	0f 94 c0             	sete   %al$/;"	l
f010d2c1	obj/kern/kernel.asm	/^    f010d2c1:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010d2c4	obj/kern/kernel.asm	/^    f010d2c4:	89 45 cc             	mov    %eax,-0x34(%rbp)$/;"	l
f010d2c7	obj/kern/kernel.asm	/^    f010d2c7:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax$/;"	l
f010d2cd	obj/kern/kernel.asm	/^    f010d2cd:	83 e0 05             	and    $0x5,%eax$/;"	l
f010d2d0	obj/kern/kernel.asm	/^    f010d2d0:	83 f8 05             	cmp    $0x5,%eax$/;"	l
f010d2d3	obj/kern/kernel.asm	/^    f010d2d3:	75 22                	jne    fffffffff010d2f7 <end+0xfffffffefe66bf57>$/;"	l
f010d2d5	obj/kern/kernel.asm	/^    f010d2d5:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax$/;"	l
f010d2db	obj/kern/kernel.asm	/^    f010d2db:	25 f8 f1 ff ff       	and    $0xfffff1f8,%eax$/;"	l
f010d2e0	obj/kern/kernel.asm	/^    f010d2e0:	85 c0                	test   %eax,%eax$/;"	l
f010d2e2	obj/kern/kernel.asm	/^    f010d2e2:	75 13                	jne    fffffffff010d2f7 <end+0xfffffffefe66bf57>$/;"	l
f010d2e4	obj/kern/kernel.asm	/^    f010d2e4:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax$/;"	l
f010d2ea	obj/kern/kernel.asm	/^    f010d2ea:	83 e0 02             	and    $0x2,%eax$/;"	l
f010d2ed	obj/kern/kernel.asm	/^    f010d2ed:	85 c0                	test   %eax,%eax$/;"	l
f010d2ef	obj/kern/kernel.asm	/^    f010d2ef:	74 0d                	je     fffffffff010d2fe <end+0xfffffffefe66bf5e>$/;"	l
f010d2f1	obj/kern/kernel.asm	/^    f010d2f1:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)$/;"	l
f010d2f5	obj/kern/kernel.asm	/^    f010d2f5:	74 07                	je     fffffffff010d2fe <end+0xfffffffefe66bf5e>$/;"	l
f010d2f7	obj/kern/kernel.asm	/^    f010d2f7:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f010d2fc	obj/kern/kernel.asm	/^    f010d2fc:	eb 41                	jmp    fffffffff010d33f <end+0xfffffffefe66bf9f>$/;"	l
f010d2fe	obj/kern/kernel.asm	/^    f010d2fe:	48 8b 45 90          	mov    -0x70(%rbp),%rax$/;"	l
f010d302	obj/kern/kernel.asm	/^    f010d302:	48 8b 80 e0 00 00 00 	mov    0xe0(%rax),%rax$/;"	l
f010d309	obj/kern/kernel.asm	/^    f010d309:	8b 8d 5c ff ff ff    	mov    -0xa4(%rbp),%ecx$/;"	l
f010d30f	obj/kern/kernel.asm	/^    f010d30f:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx$/;"	l
f010d316	obj/kern/kernel.asm	/^    f010d316:	48 8b 5d a8          	mov    -0x58(%rbp),%rbx$/;"	l
f010d31a	obj/kern/kernel.asm	/^    f010d31a:	48 89 de             	mov    %rbx,%rsi$/;"	l
f010d31d	obj/kern/kernel.asm	/^    f010d31d:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010d320	obj/kern/kernel.asm	/^    f010d320:	48 b8 97 2f 10 f0 00 	mov    $0xf0102f97,%rax$/;"	l
f010d327	obj/kern/kernel.asm	/^    f010d327:	00 00 00 $/;"	l
f010d32a	obj/kern/kernel.asm	/^    f010d32a:	ff d0                	callq  *%rax$/;"	l
f010d32c	obj/kern/kernel.asm	/^    f010d32c:	89 45 a4             	mov    %eax,-0x5c(%rbp)$/;"	l
f010d32f	obj/kern/kernel.asm	/^    f010d32f:	83 7d a4 00          	cmpl   $0x0,-0x5c(%rbp)$/;"	l
f010d333	obj/kern/kernel.asm	/^    f010d333:	74 07                	je     fffffffff010d33c <end+0xfffffffefe66bf9c>$/;"	l
f010d335	obj/kern/kernel.asm	/^    f010d335:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f010d33a	obj/kern/kernel.asm	/^    f010d33a:	eb 03                	jmp    fffffffff010d33f <end+0xfffffffefe66bf9f>$/;"	l
f010d33c	obj/kern/kernel.asm	/^    f010d33c:	8b 45 a4             	mov    -0x5c(%rbp),%eax$/;"	l
f010d33f	obj/kern/kernel.asm	/^    f010d33f:	48 81 c4 a8 00 00 00 	add    $0xa8,%rsp$/;"	l
f010d346	obj/kern/kernel.asm	/^    f010d346:	5b                   	pop    %rbx$/;"	l
f010d347	obj/kern/kernel.asm	/^    f010d347:	c9                   	leaveq $/;"	l
f010d348	obj/kern/kernel.asm	/^    f010d348:	c3                   	retq   $/;"	l
f010d349	obj/kern/kernel.asm	/^    f010d349:	55                   	push   %rbp$/;"	l
f010d34a	obj/kern/kernel.asm	/^    f010d34a:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010d34d	obj/kern/kernel.asm	/^    f010d34d:	48 83 ec 30          	sub    $0x30,%rsp$/;"	l
f010d351	obj/kern/kernel.asm	/^    f010d351:	89 7d dc             	mov    %edi,-0x24(%rbp)$/;"	l
f010d354	obj/kern/kernel.asm	/^    f010d354:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)$/;"	l
f010d358	obj/kern/kernel.asm	/^    f010d358:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)$/;"	l
f010d35f	obj/kern/kernel.asm	/^    f010d35f:	00 $/;"	l
f010d360	obj/kern/kernel.asm	/^    f010d360:	48 8d 4d e0          	lea    -0x20(%rbp),%rcx$/;"	l
f010d364	obj/kern/kernel.asm	/^    f010d364:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
f010d367	obj/kern/kernel.asm	/^    f010d367:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
f010d36c	obj/kern/kernel.asm	/^    f010d36c:	48 89 ce             	mov    %rcx,%rsi$/;"	l
f010d36f	obj/kern/kernel.asm	/^    f010d36f:	89 c7                	mov    %eax,%edi$/;"	l
f010d371	obj/kern/kernel.asm	/^    f010d371:	48 b8 e0 6f 10 f0 00 	mov    $0xf0106fe0,%rax$/;"	l
f010d378	obj/kern/kernel.asm	/^    f010d378:	00 00 00 $/;"	l
f010d37b	obj/kern/kernel.asm	/^    f010d37b:	ff d0                	callq  *%rax$/;"	l
f010d37d	obj/kern/kernel.asm	/^    f010d37d:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
f010d380	obj/kern/kernel.asm	/^    f010d380:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)$/;"	l
f010d384	obj/kern/kernel.asm	/^    f010d384:	74 07                	je     fffffffff010d38d <end+0xfffffffefe66bfed>$/;"	l
f010d386	obj/kern/kernel.asm	/^    f010d386:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f010d38b	obj/kern/kernel.asm	/^    f010d38b:	eb 76                	jmp    fffffffff010d403 <end+0xfffffffefe66c063>$/;"	l
f010d38d	obj/kern/kernel.asm	/^    f010d38d:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx$/;"	l
f010d391	obj/kern/kernel.asm	/^    f010d391:	b8 ff ff 7f ef       	mov    $0xef7fffff,%eax$/;"	l
f010d396	obj/kern/kernel.asm	/^    f010d396:	48 39 c2             	cmp    %rax,%rdx$/;"	l
f010d399	obj/kern/kernel.asm	/^    f010d399:	77 3b                	ja     fffffffff010d3d6 <end+0xfffffffefe66c036>$/;"	l
f010d39b	obj/kern/kernel.asm	/^    f010d39b:	48 c7 45 f0 00 10 00 	movq   $0x1000,-0x10(%rbp)$/;"	l
f010d3a2	obj/kern/kernel.asm	/^    f010d3a2:	00 $/;"	l
f010d3a3	obj/kern/kernel.asm	/^    f010d3a3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f010d3a7	obj/kern/kernel.asm	/^    f010d3a7:	48 03 45 f0          	add    -0x10(%rbp),%rax$/;"	l
f010d3ab	obj/kern/kernel.asm	/^    f010d3ab:	48 83 e8 01          	sub    $0x1,%rax$/;"	l
f010d3af	obj/kern/kernel.asm	/^    f010d3af:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
f010d3b3	obj/kern/kernel.asm	/^    f010d3b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f010d3b7	obj/kern/kernel.asm	/^    f010d3b7:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010d3bc	obj/kern/kernel.asm	/^    f010d3bc:	48 f7 75 f0          	divq   -0x10(%rbp)$/;"	l
f010d3c0	obj/kern/kernel.asm	/^    f010d3c0:	48 89 d0             	mov    %rdx,%rax$/;"	l
f010d3c3	obj/kern/kernel.asm	/^    f010d3c3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
f010d3c7	obj/kern/kernel.asm	/^    f010d3c7:	48 89 d1             	mov    %rdx,%rcx$/;"	l
f010d3ca	obj/kern/kernel.asm	/^    f010d3ca:	48 29 c1             	sub    %rax,%rcx$/;"	l
f010d3cd	obj/kern/kernel.asm	/^    f010d3cd:	48 89 c8             	mov    %rcx,%rax$/;"	l
f010d3d0	obj/kern/kernel.asm	/^    f010d3d0:	48 3b 45 d0          	cmp    -0x30(%rbp),%rax$/;"	l
f010d3d4	obj/kern/kernel.asm	/^    f010d3d4:	74 07                	je     fffffffff010d3dd <end+0xfffffffefe66c03d>$/;"	l
f010d3d6	obj/kern/kernel.asm	/^    f010d3d6:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f010d3db	obj/kern/kernel.asm	/^    f010d3db:	eb 26                	jmp    fffffffff010d403 <end+0xfffffffefe66c063>$/;"	l
f010d3dd	obj/kern/kernel.asm	/^    f010d3dd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
f010d3e1	obj/kern/kernel.asm	/^    f010d3e1:	48 8b 80 e0 00 00 00 	mov    0xe0(%rax),%rax$/;"	l
f010d3e8	obj/kern/kernel.asm	/^    f010d3e8:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx$/;"	l
f010d3ec	obj/kern/kernel.asm	/^    f010d3ec:	48 89 d6             	mov    %rdx,%rsi$/;"	l
f010d3ef	obj/kern/kernel.asm	/^    f010d3ef:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010d3f2	obj/kern/kernel.asm	/^    f010d3f2:	48 b8 16 31 10 f0 00 	mov    $0xf0103116,%rax$/;"	l
f010d3f9	obj/kern/kernel.asm	/^    f010d3f9:	00 00 00 $/;"	l
f010d3fc	obj/kern/kernel.asm	/^    f010d3fc:	ff d0                	callq  *%rax$/;"	l
f010d3fe	obj/kern/kernel.asm	/^    f010d3fe:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010d403	obj/kern/kernel.asm	/^    f010d403:	c9                   	leaveq $/;"	l
f010d404	obj/kern/kernel.asm	/^    f010d404:	c3                   	retq   $/;"	l
f010d405	obj/kern/kernel.asm	/^    f010d405:	55                   	push   %rbp$/;"	l
f010d406	obj/kern/kernel.asm	/^    f010d406:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010d409	obj/kern/kernel.asm	/^    f010d409:	53                   	push   %rbx$/;"	l
f010d40a	obj/kern/kernel.asm	/^    f010d40a:	48 83 ec 78          	sub    $0x78,%rsp$/;"	l
f010d40e	obj/kern/kernel.asm	/^    f010d40e:	89 7d 9c             	mov    %edi,-0x64(%rbp)$/;"	l
f010d411	obj/kern/kernel.asm	/^    f010d411:	89 75 98             	mov    %esi,-0x68(%rbp)$/;"	l
f010d414	obj/kern/kernel.asm	/^    f010d414:	48 89 55 90          	mov    %rdx,-0x70(%rbp)$/;"	l
f010d418	obj/kern/kernel.asm	/^    f010d418:	89 4d 8c             	mov    %ecx,-0x74(%rbp)$/;"	l
f010d41b	obj/kern/kernel.asm	/^    f010d41b:	48 8d 4d b8          	lea    -0x48(%rbp),%rcx$/;"	l
f010d41f	obj/kern/kernel.asm	/^    f010d41f:	8b 45 9c             	mov    -0x64(%rbp),%eax$/;"	l
f010d422	obj/kern/kernel.asm	/^    f010d422:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010d427	obj/kern/kernel.asm	/^    f010d427:	48 89 ce             	mov    %rcx,%rsi$/;"	l
f010d42a	obj/kern/kernel.asm	/^    f010d42a:	89 c7                	mov    %eax,%edi$/;"	l
f010d42c	obj/kern/kernel.asm	/^    f010d42c:	48 b8 e0 6f 10 f0 00 	mov    $0xf0106fe0,%rax$/;"	l
f010d433	obj/kern/kernel.asm	/^    f010d433:	00 00 00 $/;"	l
f010d436	obj/kern/kernel.asm	/^    f010d436:	ff d0                	callq  *%rax$/;"	l
f010d438	obj/kern/kernel.asm	/^    f010d438:	89 45 c4             	mov    %eax,-0x3c(%rbp)$/;"	l
f010d43b	obj/kern/kernel.asm	/^    f010d43b:	83 7d c4 00          	cmpl   $0x0,-0x3c(%rbp)$/;"	l
f010d43f	obj/kern/kernel.asm	/^    f010d43f:	79 25                	jns    fffffffff010d466 <end+0xfffffffefe66c0c6>$/;"	l
f010d441	obj/kern/kernel.asm	/^    f010d441:	48 bf 88 2e 11 f0 00 	mov    $0xf0112e88,%rdi$/;"	l
f010d448	obj/kern/kernel.asm	/^    f010d448:	00 00 00 $/;"	l
f010d44b	obj/kern/kernel.asm	/^    f010d44b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010d450	obj/kern/kernel.asm	/^    f010d450:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f010d457	obj/kern/kernel.asm	/^    f010d457:	00 00 00 $/;"	l
f010d45a	obj/kern/kernel.asm	/^    f010d45a:	ff d2                	callq  *%rdx$/;"	l
f010d45c	obj/kern/kernel.asm	/^    f010d45c:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f010d461	obj/kern/kernel.asm	/^    f010d461:	e9 5a 01 00 00       	jmpq   fffffffff010d5c0 <end+0xfffffffefe66c220>$/;"	l
f010d466	obj/kern/kernel.asm	/^    f010d466:	48 8d 45 b0          	lea    -0x50(%rbp),%rax$/;"	l
f010d46a	obj/kern/kernel.asm	/^    f010d46a:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010d46f	obj/kern/kernel.asm	/^    f010d46f:	48 89 c6             	mov    %rax,%rsi$/;"	l
f010d472	obj/kern/kernel.asm	/^    f010d472:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f010d477	obj/kern/kernel.asm	/^    f010d477:	48 b8 e0 6f 10 f0 00 	mov    $0xf0106fe0,%rax$/;"	l
f010d47e	obj/kern/kernel.asm	/^    f010d47e:	00 00 00 $/;"	l
f010d481	obj/kern/kernel.asm	/^    f010d481:	ff d0                	callq  *%rax$/;"	l
f010d483	obj/kern/kernel.asm	/^    f010d483:	89 45 c4             	mov    %eax,-0x3c(%rbp)$/;"	l
f010d486	obj/kern/kernel.asm	/^    f010d486:	83 7d c4 00          	cmpl   $0x0,-0x3c(%rbp)$/;"	l
f010d48a	obj/kern/kernel.asm	/^    f010d48a:	79 0a                	jns    fffffffff010d496 <end+0xfffffffefe66c0f6>$/;"	l
f010d48c	obj/kern/kernel.asm	/^    f010d48c:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
f010d491	obj/kern/kernel.asm	/^    f010d491:	e9 2a 01 00 00       	jmpq   fffffffff010d5c0 <end+0xfffffffefe66c220>$/;"	l
f010d496	obj/kern/kernel.asm	/^    f010d496:	48 8b 45 b8          	mov    -0x48(%rbp),%rax$/;"	l
f010d49a	obj/kern/kernel.asm	/^    f010d49a:	0f b6 80 f8 00 00 00 	movzbl 0xf8(%rax),%eax$/;"	l
f010d4a1	obj/kern/kernel.asm	/^    f010d4a1:	83 f0 01             	xor    $0x1,%eax$/;"	l
f010d4a4	obj/kern/kernel.asm	/^    f010d4a4:	84 c0                	test   %al,%al$/;"	l
f010d4a6	obj/kern/kernel.asm	/^    f010d4a6:	74 0a                	je     fffffffff010d4b2 <end+0xfffffffefe66c112>$/;"	l
f010d4a8	obj/kern/kernel.asm	/^    f010d4a8:	b8 f9 ff ff ff       	mov    $0xfffffff9,%eax$/;"	l
f010d4ad	obj/kern/kernel.asm	/^    f010d4ad:	e9 0e 01 00 00       	jmpq   fffffffff010d5c0 <end+0xfffffffefe66c220>$/;"	l
f010d4b2	obj/kern/kernel.asm	/^    f010d4b2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax$/;"	l
f010d4b6	obj/kern/kernel.asm	/^    f010d4b6:	c6 80 f8 00 00 00 00 	movb   $0x0,0xf8(%rax)$/;"	l
f010d4bd	obj/kern/kernel.asm	/^    f010d4bd:	48 8b 5d b8          	mov    -0x48(%rbp),%rbx$/;"	l
f010d4c1	obj/kern/kernel.asm	/^    f010d4c1:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f010d4c8	obj/kern/kernel.asm	/^    f010d4c8:	00 00 00 $/;"	l
f010d4cb	obj/kern/kernel.asm	/^    f010d4cb:	ff d0                	callq  *%rax$/;"	l
f010d4cd	obj/kern/kernel.asm	/^    f010d4cd:	48 98                	cltq   $/;"	l
f010d4cf	obj/kern/kernel.asm	/^    f010d4cf:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f010d4d3	obj/kern/kernel.asm	/^    f010d4d3:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010d4d6	obj/kern/kernel.asm	/^    f010d4d6:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f010d4da	obj/kern/kernel.asm	/^    f010d4da:	48 29 c2             	sub    %rax,%rdx$/;"	l
f010d4dd	obj/kern/kernel.asm	/^    f010d4dd:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f010d4e4	obj/kern/kernel.asm	/^    f010d4e4:	00 00 00 $/;"	l
f010d4e7	obj/kern/kernel.asm	/^    f010d4e7:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010d4eb	obj/kern/kernel.asm	/^    f010d4eb:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
f010d4ef	obj/kern/kernel.asm	/^    f010d4ef:	8b 80 c8 00 00 00    	mov    0xc8(%rax),%eax$/;"	l
f010d4f5	obj/kern/kernel.asm	/^    f010d4f5:	89 83 0c 01 00 00    	mov    %eax,0x10c(%rbx)$/;"	l
f010d4fb	obj/kern/kernel.asm	/^    f010d4fb:	48 8b 45 b8          	mov    -0x48(%rbp),%rax$/;"	l
f010d4ff	obj/kern/kernel.asm	/^    f010d4ff:	8b 55 98             	mov    -0x68(%rbp),%edx$/;"	l
f010d502	obj/kern/kernel.asm	/^    f010d502:	89 90 08 01 00 00    	mov    %edx,0x108(%rax)$/;"	l
f010d508	obj/kern/kernel.asm	/^    f010d508:	48 8b 55 90          	mov    -0x70(%rbp),%rdx$/;"	l
f010d50c	obj/kern/kernel.asm	/^    f010d50c:	b8 ff ff 7f ef       	mov    $0xef7fffff,%eax$/;"	l
f010d511	obj/kern/kernel.asm	/^    f010d511:	48 39 c2             	cmp    %rax,%rdx$/;"	l
f010d514	obj/kern/kernel.asm	/^    f010d514:	0f 87 85 00 00 00    	ja     fffffffff010d59f <end+0xfffffffefe66c1ff>$/;"	l
f010d51a	obj/kern/kernel.asm	/^    f010d51a:	48 8b 45 b0          	mov    -0x50(%rbp),%rax$/;"	l
f010d51e	obj/kern/kernel.asm	/^    f010d51e:	48 8b 80 e0 00 00 00 	mov    0xe0(%rax),%rax$/;"	l
f010d525	obj/kern/kernel.asm	/^    f010d525:	48 8d 55 a8          	lea    -0x58(%rbp),%rdx$/;"	l
f010d529	obj/kern/kernel.asm	/^    f010d529:	48 8b 4d 90          	mov    -0x70(%rbp),%rcx$/;"	l
f010d52d	obj/kern/kernel.asm	/^    f010d52d:	48 89 ce             	mov    %rcx,%rsi$/;"	l
f010d530	obj/kern/kernel.asm	/^    f010d530:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010d533	obj/kern/kernel.asm	/^    f010d533:	48 b8 9e 30 10 f0 00 	mov    $0xf010309e,%rax$/;"	l
f010d53a	obj/kern/kernel.asm	/^    f010d53a:	00 00 00 $/;"	l
f010d53d	obj/kern/kernel.asm	/^    f010d53d:	ff d0                	callq  *%rax$/;"	l
f010d53f	obj/kern/kernel.asm	/^    f010d53f:	48 89 45 d0          	mov    %rax,-0x30(%rbp)$/;"	l
f010d543	obj/kern/kernel.asm	/^    f010d543:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)$/;"	l
f010d548	obj/kern/kernel.asm	/^    f010d548:	75 07                	jne    fffffffff010d551 <end+0xfffffffefe66c1b1>$/;"	l
f010d54a	obj/kern/kernel.asm	/^    f010d54a:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f010d54f	obj/kern/kernel.asm	/^    f010d54f:	eb 6f                	jmp    fffffffff010d5c0 <end+0xfffffffefe66c220>$/;"	l
f010d551	obj/kern/kernel.asm	/^    f010d551:	8b 4d 8c             	mov    -0x74(%rbp),%ecx$/;"	l
f010d554	obj/kern/kernel.asm	/^    f010d554:	48 8b 45 b8          	mov    -0x48(%rbp),%rax$/;"	l
f010d558	obj/kern/kernel.asm	/^    f010d558:	48 8b 90 00 01 00 00 	mov    0x100(%rax),%rdx$/;"	l
f010d55f	obj/kern/kernel.asm	/^    f010d55f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax$/;"	l
f010d563	obj/kern/kernel.asm	/^    f010d563:	48 8b 80 e0 00 00 00 	mov    0xe0(%rax),%rax$/;"	l
f010d56a	obj/kern/kernel.asm	/^    f010d56a:	48 8b 5d d0          	mov    -0x30(%rbp),%rbx$/;"	l
f010d56e	obj/kern/kernel.asm	/^    f010d56e:	48 89 de             	mov    %rbx,%rsi$/;"	l
f010d571	obj/kern/kernel.asm	/^    f010d571:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010d574	obj/kern/kernel.asm	/^    f010d574:	48 b8 97 2f 10 f0 00 	mov    $0xf0102f97,%rax$/;"	l
f010d57b	obj/kern/kernel.asm	/^    f010d57b:	00 00 00 $/;"	l
f010d57e	obj/kern/kernel.asm	/^    f010d57e:	ff d0                	callq  *%rax$/;"	l
f010d580	obj/kern/kernel.asm	/^    f010d580:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
f010d583	obj/kern/kernel.asm	/^    f010d583:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)$/;"	l
f010d587	obj/kern/kernel.asm	/^    f010d587:	74 07                	je     fffffffff010d590 <end+0xfffffffefe66c1f0>$/;"	l
f010d589	obj/kern/kernel.asm	/^    f010d589:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
f010d58e	obj/kern/kernel.asm	/^    f010d58e:	eb 30                	jmp    fffffffff010d5c0 <end+0xfffffffefe66c220>$/;"	l
f010d590	obj/kern/kernel.asm	/^    f010d590:	48 8b 45 b8          	mov    -0x48(%rbp),%rax$/;"	l
f010d594	obj/kern/kernel.asm	/^    f010d594:	8b 55 8c             	mov    -0x74(%rbp),%edx$/;"	l
f010d597	obj/kern/kernel.asm	/^    f010d597:	89 90 10 01 00 00    	mov    %edx,0x110(%rax)$/;"	l
f010d59d	obj/kern/kernel.asm	/^    f010d59d:	eb 0e                	jmp    fffffffff010d5ad <end+0xfffffffefe66c20d>$/;"	l
f010d59f	obj/kern/kernel.asm	/^    f010d59f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax$/;"	l
f010d5a3	obj/kern/kernel.asm	/^    f010d5a3:	c7 80 10 01 00 00 00 	movl   $0x0,0x110(%rax)$/;"	l
f010d5aa	obj/kern/kernel.asm	/^    f010d5aa:	00 00 00 $/;"	l
f010d5ad	obj/kern/kernel.asm	/^    f010d5ad:	48 8b 45 b8          	mov    -0x48(%rbp),%rax$/;"	l
f010d5b1	obj/kern/kernel.asm	/^    f010d5b1:	c7 80 d4 00 00 00 02 	movl   $0x2,0xd4(%rax)$/;"	l
f010d5b8	obj/kern/kernel.asm	/^    f010d5b8:	00 00 00 $/;"	l
f010d5bb	obj/kern/kernel.asm	/^    f010d5bb:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010d5c0	obj/kern/kernel.asm	/^    f010d5c0:	48 83 c4 78          	add    $0x78,%rsp$/;"	l
f010d5c4	obj/kern/kernel.asm	/^    f010d5c4:	5b                   	pop    %rbx$/;"	l
f010d5c5	obj/kern/kernel.asm	/^    f010d5c5:	c9                   	leaveq $/;"	l
f010d5c6	obj/kern/kernel.asm	/^    f010d5c6:	c3                   	retq   $/;"	l
f010d5c7	obj/kern/kernel.asm	/^    f010d5c7:	55                   	push   %rbp$/;"	l
f010d5c8	obj/kern/kernel.asm	/^    f010d5c8:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010d5cb	obj/kern/kernel.asm	/^    f010d5cb:	53                   	push   %rbx$/;"	l
f010d5cc	obj/kern/kernel.asm	/^    f010d5cc:	48 83 ec 28          	sub    $0x28,%rsp$/;"	l
f010d5d0	obj/kern/kernel.asm	/^    f010d5d0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)$/;"	l
f010d5d4	obj/kern/kernel.asm	/^    f010d5d4:	48 8d 45 e0          	lea    -0x20(%rbp),%rax$/;"	l
f010d5d8	obj/kern/kernel.asm	/^    f010d5d8:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010d5dd	obj/kern/kernel.asm	/^    f010d5dd:	48 89 c6             	mov    %rax,%rsi$/;"	l
f010d5e0	obj/kern/kernel.asm	/^    f010d5e0:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f010d5e5	obj/kern/kernel.asm	/^    f010d5e5:	48 b8 e0 6f 10 f0 00 	mov    $0xf0106fe0,%rax$/;"	l
f010d5ec	obj/kern/kernel.asm	/^    f010d5ec:	00 00 00 $/;"	l
f010d5ef	obj/kern/kernel.asm	/^    f010d5ef:	ff d0                	callq  *%rax$/;"	l
f010d5f1	obj/kern/kernel.asm	/^    f010d5f1:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
f010d5f4	obj/kern/kernel.asm	/^    f010d5f4:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)$/;"	l
f010d5f8	obj/kern/kernel.asm	/^    f010d5f8:	79 2f                	jns    fffffffff010d629 <end+0xfffffffefe66c289>$/;"	l
f010d5fa	obj/kern/kernel.asm	/^    f010d5fa:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
f010d5fd	obj/kern/kernel.asm	/^    f010d5fd:	89 c1                	mov    %eax,%ecx$/;"	l
f010d5ff	obj/kern/kernel.asm	/^    f010d5ff:	48 ba b0 2e 11 f0 00 	mov    $0xf0112eb0,%rdx$/;"	l
f010d606	obj/kern/kernel.asm	/^    f010d606:	00 00 00 $/;"	l
f010d609	obj/kern/kernel.asm	/^    f010d609:	be f8 01 00 00       	mov    $0x1f8,%esi$/;"	l
f010d60e	obj/kern/kernel.asm	/^    f010d60e:	48 bf d1 2e 11 f0 00 	mov    $0xf0112ed1,%rdi$/;"	l
f010d615	obj/kern/kernel.asm	/^    f010d615:	00 00 00 $/;"	l
f010d618	obj/kern/kernel.asm	/^    f010d618:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010d61d	obj/kern/kernel.asm	/^    f010d61d:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f010d624	obj/kern/kernel.asm	/^    f010d624:	00 00 00 $/;"	l
f010d627	obj/kern/kernel.asm	/^    f010d627:	ff d3                	callq  *%rbx$/;"	l
f010d629	obj/kern/kernel.asm	/^    f010d629:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx$/;"	l
f010d62d	obj/kern/kernel.asm	/^    f010d62d:	b8 ff ff 7f ef       	mov    $0xef7fffff,%eax$/;"	l
f010d632	obj/kern/kernel.asm	/^    f010d632:	48 39 c2             	cmp    %rax,%rdx$/;"	l
f010d635	obj/kern/kernel.asm	/^    f010d635:	77 15                	ja     fffffffff010d64c <end+0xfffffffefe66c2ac>$/;"	l
f010d637	obj/kern/kernel.asm	/^    f010d637:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f010d63b	obj/kern/kernel.asm	/^    f010d63b:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
f010d640	obj/kern/kernel.asm	/^    f010d640:	48 85 c0             	test   %rax,%rax$/;"	l
f010d643	obj/kern/kernel.asm	/^    f010d643:	74 07                	je     fffffffff010d64c <end+0xfffffffefe66c2ac>$/;"	l
f010d645	obj/kern/kernel.asm	/^    f010d645:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f010d64a	obj/kern/kernel.asm	/^    f010d64a:	eb 57                	jmp    fffffffff010d6a3 <end+0xfffffffefe66c303>$/;"	l
f010d64c	obj/kern/kernel.asm	/^    f010d64c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
f010d650	obj/kern/kernel.asm	/^    f010d650:	c6 80 f8 00 00 00 01 	movb   $0x1,0xf8(%rax)$/;"	l
f010d657	obj/kern/kernel.asm	/^    f010d657:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
f010d65b	obj/kern/kernel.asm	/^    f010d65b:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx$/;"	l
f010d65f	obj/kern/kernel.asm	/^    f010d65f:	48 89 90 00 01 00 00 	mov    %rdx,0x100(%rax)$/;"	l
f010d666	obj/kern/kernel.asm	/^    f010d666:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
f010d66a	obj/kern/kernel.asm	/^    f010d66a:	c7 80 08 01 00 00 00 	movl   $0x0,0x108(%rax)$/;"	l
f010d671	obj/kern/kernel.asm	/^    f010d671:	00 00 00 $/;"	l
f010d674	obj/kern/kernel.asm	/^    f010d674:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
f010d678	obj/kern/kernel.asm	/^    f010d678:	c7 80 10 01 00 00 00 	movl   $0x0,0x110(%rax)$/;"	l
f010d67f	obj/kern/kernel.asm	/^    f010d67f:	00 00 00 $/;"	l
f010d682	obj/kern/kernel.asm	/^    f010d682:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
f010d686	obj/kern/kernel.asm	/^    f010d686:	c7 80 0c 01 00 00 00 	movl   $0x0,0x10c(%rax)$/;"	l
f010d68d	obj/kern/kernel.asm	/^    f010d68d:	00 00 00 $/;"	l
f010d690	obj/kern/kernel.asm	/^    f010d690:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
f010d694	obj/kern/kernel.asm	/^    f010d694:	c7 80 d4 00 00 00 04 	movl   $0x4,0xd4(%rax)$/;"	l
f010d69b	obj/kern/kernel.asm	/^    f010d69b:	00 00 00 $/;"	l
f010d69e	obj/kern/kernel.asm	/^    f010d69e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010d6a3	obj/kern/kernel.asm	/^    f010d6a3:	48 83 c4 28          	add    $0x28,%rsp$/;"	l
f010d6a7	obj/kern/kernel.asm	/^    f010d6a7:	5b                   	pop    %rbx$/;"	l
f010d6a8	obj/kern/kernel.asm	/^    f010d6a8:	c9                   	leaveq $/;"	l
f010d6a9	obj/kern/kernel.asm	/^    f010d6a9:	c3                   	retq   $/;"	l
f010d6aa	obj/kern/kernel.asm	/^    f010d6aa:	55                   	push   %rbp$/;"	l
f010d6ab	obj/kern/kernel.asm	/^    f010d6ab:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010d6ae	obj/kern/kernel.asm	/^    f010d6ae:	48 b8 ac 14 11 f0 00 	mov    $0xf01114ac,%rax$/;"	l
f010d6b5	obj/kern/kernel.asm	/^    f010d6b5:	00 00 00 $/;"	l
f010d6b8	obj/kern/kernel.asm	/^    f010d6b8:	ff d0                	callq  *%rax$/;"	l
f010d6ba	obj/kern/kernel.asm	/^    f010d6ba:	c9                   	leaveq $/;"	l
f010d6bb	obj/kern/kernel.asm	/^    f010d6bb:	c3                   	retq   $/;"	l
f010d6bc	obj/kern/kernel.asm	/^    f010d6bc:	55                   	push   %rbp$/;"	l
f010d6bd	obj/kern/kernel.asm	/^    f010d6bd:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010d6c0	obj/kern/kernel.asm	/^    f010d6c0:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
f010d6c4	obj/kern/kernel.asm	/^    f010d6c4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
f010d6c8	obj/kern/kernel.asm	/^    f010d6c8:	89 75 f4             	mov    %esi,-0xc(%rbp)$/;"	l
f010d6cb	obj/kern/kernel.asm	/^    f010d6cb:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
f010d6cf	obj/kern/kernel.asm	/^    f010d6cf:	b8 ff ff 7f ef       	mov    $0xef7fffff,%eax$/;"	l
f010d6d4	obj/kern/kernel.asm	/^    f010d6d4:	48 39 c2             	cmp    %rax,%rdx$/;"	l
f010d6d7	obj/kern/kernel.asm	/^    f010d6d7:	76 07                	jbe    fffffffff010d6e0 <end+0xfffffffefe66c340>$/;"	l
f010d6d9	obj/kern/kernel.asm	/^    f010d6d9:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f010d6de	obj/kern/kernel.asm	/^    f010d6de:	eb 18                	jmp    fffffffff010d6f8 <end+0xfffffffefe66c358>$/;"	l
f010d6e0	obj/kern/kernel.asm	/^    f010d6e0:	8b 55 f4             	mov    -0xc(%rbp),%edx$/;"	l
f010d6e3	obj/kern/kernel.asm	/^    f010d6e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f010d6e7	obj/kern/kernel.asm	/^    f010d6e7:	89 d6                	mov    %edx,%esi$/;"	l
f010d6e9	obj/kern/kernel.asm	/^    f010d6e9:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010d6ec	obj/kern/kernel.asm	/^    f010d6ec:	48 b8 32 06 11 f0 00 	mov    $0xf0110632,%rax$/;"	l
f010d6f3	obj/kern/kernel.asm	/^    f010d6f3:	00 00 00 $/;"	l
f010d6f6	obj/kern/kernel.asm	/^    f010d6f6:	ff d0                	callq  *%rax$/;"	l
f010d6f8	obj/kern/kernel.asm	/^    f010d6f8:	c9                   	leaveq $/;"	l
f010d6f9	obj/kern/kernel.asm	/^    f010d6f9:	c3                   	retq   $/;"	l
f010d6fa	obj/kern/kernel.asm	/^    f010d6fa:	55                   	push   %rbp$/;"	l
f010d6fb	obj/kern/kernel.asm	/^    f010d6fb:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010d6fe	obj/kern/kernel.asm	/^    f010d6fe:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
f010d702	obj/kern/kernel.asm	/^    f010d702:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
f010d706	obj/kern/kernel.asm	/^    f010d706:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
f010d70a	obj/kern/kernel.asm	/^    f010d70a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx$/;"	l
f010d70e	obj/kern/kernel.asm	/^    f010d70e:	b8 ff ff 7f ef       	mov    $0xef7fffff,%eax$/;"	l
f010d713	obj/kern/kernel.asm	/^    f010d713:	48 39 c2             	cmp    %rax,%rdx$/;"	l
f010d716	obj/kern/kernel.asm	/^    f010d716:	76 07                	jbe    fffffffff010d71f <end+0xfffffffefe66c37f>$/;"	l
f010d718	obj/kern/kernel.asm	/^    f010d718:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f010d71d	obj/kern/kernel.asm	/^    f010d71d:	eb 30                	jmp    fffffffff010d74f <end+0xfffffffefe66c3af>$/;"	l
f010d71f	obj/kern/kernel.asm	/^    f010d71f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f010d723	obj/kern/kernel.asm	/^    f010d723:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010d726	obj/kern/kernel.asm	/^    f010d726:	48 b8 ac 07 11 f0 00 	mov    $0xf01107ac,%rax$/;"	l
f010d72d	obj/kern/kernel.asm	/^    f010d72d:	00 00 00 $/;"	l
f010d730	obj/kern/kernel.asm	/^    f010d730:	ff d0                	callq  *%rax$/;"	l
f010d732	obj/kern/kernel.asm	/^    f010d732:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
f010d736	obj/kern/kernel.asm	/^    f010d736:	89 02                	mov    %eax,(%rdx)$/;"	l
f010d738	obj/kern/kernel.asm	/^    f010d738:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
f010d73c	obj/kern/kernel.asm	/^    f010d73c:	8b 00                	mov    (%rax),%eax$/;"	l
f010d73e	obj/kern/kernel.asm	/^    f010d73e:	85 c0                	test   %eax,%eax$/;"	l
f010d740	obj/kern/kernel.asm	/^    f010d740:	7e 07                	jle    fffffffff010d749 <end+0xfffffffefe66c3a9>$/;"	l
f010d742	obj/kern/kernel.asm	/^    f010d742:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010d747	obj/kern/kernel.asm	/^    f010d747:	eb 06                	jmp    fffffffff010d74f <end+0xfffffffefe66c3af>$/;"	l
f010d749	obj/kern/kernel.asm	/^    f010d749:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
f010d74d	obj/kern/kernel.asm	/^    f010d74d:	8b 00                	mov    (%rax),%eax$/;"	l
f010d74f	obj/kern/kernel.asm	/^    f010d74f:	c9                   	leaveq $/;"	l
f010d750	obj/kern/kernel.asm	/^    f010d750:	c3                   	retq   $/;"	l
f010d751	obj/kern/kernel.asm	/^    f010d751:	55                   	push   %rbp$/;"	l
f010d752	obj/kern/kernel.asm	/^    f010d752:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010d755	obj/kern/kernel.asm	/^    f010d755:	53                   	push   %rbx$/;"	l
f010d756	obj/kern/kernel.asm	/^    f010d756:	48 83 ec 48          	sub    $0x48,%rsp$/;"	l
f010d75a	obj/kern/kernel.asm	/^    f010d75a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)$/;"	l
f010d75e	obj/kern/kernel.asm	/^    f010d75e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)$/;"	l
f010d762	obj/kern/kernel.asm	/^    f010d762:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)$/;"	l
f010d766	obj/kern/kernel.asm	/^    f010d766:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)$/;"	l
f010d76a	obj/kern/kernel.asm	/^    f010d76a:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)$/;"	l
f010d76e	obj/kern/kernel.asm	/^    f010d76e:	4c 89 4d b0          	mov    %r9,-0x50(%rbp)$/;"	l
f010d772	obj/kern/kernel.asm	/^    f010d772:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)$/;"	l
f010d779	obj/kern/kernel.asm	/^    f010d779:	00 $/;"	l
f010d77a	obj/kern/kernel.asm	/^    f010d77a:	48 83 7d d8 10       	cmpq   $0x10,-0x28(%rbp)$/;"	l
f010d77f	obj/kern/kernel.asm	/^    f010d77f:	0f 87 0c 02 00 00    	ja     fffffffff010d991 <end+0xfffffffefe66c5f1>$/;"	l
f010d785	obj/kern/kernel.asm	/^    f010d785:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f010d789	obj/kern/kernel.asm	/^    f010d789:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
f010d790	obj/kern/kernel.asm	/^    f010d790:	00 $/;"	l
f010d791	obj/kern/kernel.asm	/^    f010d791:	48 b8 e0 2e 11 f0 00 	mov    $0xf0112ee0,%rax$/;"	l
f010d798	obj/kern/kernel.asm	/^    f010d798:	00 00 00 $/;"	l
f010d79b	obj/kern/kernel.asm	/^    f010d79b:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax$/;"	l
f010d79f	obj/kern/kernel.asm	/^    f010d79f:	ff e0                	jmpq   *%rax$/;"	l
f010d7a1	obj/kern/kernel.asm	/^    f010d7a1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f010d7a5	obj/kern/kernel.asm	/^    f010d7a5:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx$/;"	l
f010d7a9	obj/kern/kernel.asm	/^    f010d7a9:	48 89 d6             	mov    %rdx,%rsi$/;"	l
f010d7ac	obj/kern/kernel.asm	/^    f010d7ac:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010d7af	obj/kern/kernel.asm	/^    f010d7af:	48 b8 b0 cb 10 f0 00 	mov    $0xf010cbb0,%rax$/;"	l
f010d7b6	obj/kern/kernel.asm	/^    f010d7b6:	00 00 00 $/;"	l
f010d7b9	obj/kern/kernel.asm	/^    f010d7b9:	ff d0                	callq  *%rax$/;"	l
f010d7bb	obj/kern/kernel.asm	/^    f010d7bb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010d7bf	obj/kern/kernel.asm	/^    f010d7bf:	e9 d4 01 00 00       	jmpq   fffffffff010d998 <end+0xfffffffefe66c5f8>$/;"	l
f010d7c4	obj/kern/kernel.asm	/^    f010d7c4:	48 b8 3b cc 10 f0 00 	mov    $0xf010cc3b,%rax$/;"	l
f010d7cb	obj/kern/kernel.asm	/^    f010d7cb:	00 00 00 $/;"	l
f010d7ce	obj/kern/kernel.asm	/^    f010d7ce:	ff d0                	callq  *%rax$/;"	l
f010d7d0	obj/kern/kernel.asm	/^    f010d7d0:	48 98                	cltq   $/;"	l
f010d7d2	obj/kern/kernel.asm	/^    f010d7d2:	e9 c1 01 00 00       	jmpq   fffffffff010d998 <end+0xfffffffefe66c5f8>$/;"	l
f010d7d7	obj/kern/kernel.asm	/^    f010d7d7:	48 b8 4d cc 10 f0 00 	mov    $0xf010cc4d,%rax$/;"	l
f010d7de	obj/kern/kernel.asm	/^    f010d7de:	00 00 00 $/;"	l
f010d7e1	obj/kern/kernel.asm	/^    f010d7e1:	ff d0                	callq  *%rax$/;"	l
f010d7e3	obj/kern/kernel.asm	/^    f010d7e3:	48 98                	cltq   $/;"	l
f010d7e5	obj/kern/kernel.asm	/^    f010d7e5:	e9 ae 01 00 00       	jmpq   fffffffff010d998 <end+0xfffffffefe66c5f8>$/;"	l
f010d7ea	obj/kern/kernel.asm	/^    f010d7ea:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f010d7ee	obj/kern/kernel.asm	/^    f010d7ee:	89 c7                	mov    %eax,%edi$/;"	l
f010d7f0	obj/kern/kernel.asm	/^    f010d7f0:	48 b8 87 cc 10 f0 00 	mov    $0xf010cc87,%rax$/;"	l
f010d7f7	obj/kern/kernel.asm	/^    f010d7f7:	00 00 00 $/;"	l
f010d7fa	obj/kern/kernel.asm	/^    f010d7fa:	ff d0                	callq  *%rax$/;"	l
f010d7fc	obj/kern/kernel.asm	/^    f010d7fc:	48 98                	cltq   $/;"	l
f010d7fe	obj/kern/kernel.asm	/^    f010d7fe:	e9 95 01 00 00       	jmpq   fffffffff010d998 <end+0xfffffffefe66c5f8>$/;"	l
f010d803	obj/kern/kernel.asm	/^    f010d803:	48 b8 c7 cd 10 f0 00 	mov    $0xf010cdc7,%rax$/;"	l
f010d80a	obj/kern/kernel.asm	/^    f010d80a:	00 00 00 $/;"	l
f010d80d	obj/kern/kernel.asm	/^    f010d80d:	ff d0                	callq  *%rax$/;"	l
f010d80f	obj/kern/kernel.asm	/^    f010d80f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010d813	obj/kern/kernel.asm	/^    f010d813:	e9 80 01 00 00       	jmpq   fffffffff010d998 <end+0xfffffffefe66c5f8>$/;"	l
f010d818	obj/kern/kernel.asm	/^    f010d818:	48 b8 d7 cd 10 f0 00 	mov    $0xf010cdd7,%rax$/;"	l
f010d81f	obj/kern/kernel.asm	/^    f010d81f:	00 00 00 $/;"	l
f010d822	obj/kern/kernel.asm	/^    f010d822:	ff d0                	callq  *%rax$/;"	l
f010d824	obj/kern/kernel.asm	/^    f010d824:	48 98                	cltq   $/;"	l
f010d826	obj/kern/kernel.asm	/^    f010d826:	e9 6d 01 00 00       	jmpq   fffffffff010d998 <end+0xfffffffefe66c5f8>$/;"	l
f010d82b	obj/kern/kernel.asm	/^    f010d82b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
f010d82f	obj/kern/kernel.asm	/^    f010d82f:	89 c2                	mov    %eax,%edx$/;"	l
f010d831	obj/kern/kernel.asm	/^    f010d831:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx$/;"	l
f010d835	obj/kern/kernel.asm	/^    f010d835:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f010d839	obj/kern/kernel.asm	/^    f010d839:	48 89 ce             	mov    %rcx,%rsi$/;"	l
f010d83c	obj/kern/kernel.asm	/^    f010d83c:	89 c7                	mov    %eax,%edi$/;"	l
f010d83e	obj/kern/kernel.asm	/^    f010d83e:	48 b8 de cf 10 f0 00 	mov    $0xf010cfde,%rax$/;"	l
f010d845	obj/kern/kernel.asm	/^    f010d845:	00 00 00 $/;"	l
f010d848	obj/kern/kernel.asm	/^    f010d848:	ff d0                	callq  *%rax$/;"	l
f010d84a	obj/kern/kernel.asm	/^    f010d84a:	48 98                	cltq   $/;"	l
f010d84c	obj/kern/kernel.asm	/^    f010d84c:	e9 47 01 00 00       	jmpq   fffffffff010d998 <end+0xfffffffefe66c5f8>$/;"	l
f010d851	obj/kern/kernel.asm	/^    f010d851:	48 8b 45 b0          	mov    -0x50(%rbp),%rax$/;"	l
f010d855	obj/kern/kernel.asm	/^    f010d855:	89 c6                	mov    %eax,%esi$/;"	l
f010d857	obj/kern/kernel.asm	/^    f010d857:	48 8b 4d b8          	mov    -0x48(%rbp),%rcx$/;"	l
f010d85b	obj/kern/kernel.asm	/^    f010d85b:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
f010d85f	obj/kern/kernel.asm	/^    f010d85f:	89 c2                	mov    %eax,%edx$/;"	l
f010d861	obj/kern/kernel.asm	/^    f010d861:	48 8b 5d c8          	mov    -0x38(%rbp),%rbx$/;"	l
f010d865	obj/kern/kernel.asm	/^    f010d865:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f010d869	obj/kern/kernel.asm	/^    f010d869:	41 89 f0             	mov    %esi,%r8d$/;"	l
f010d86c	obj/kern/kernel.asm	/^    f010d86c:	48 89 de             	mov    %rbx,%rsi$/;"	l
f010d86f	obj/kern/kernel.asm	/^    f010d86f:	89 c7                	mov    %eax,%edi$/;"	l
f010d871	obj/kern/kernel.asm	/^    f010d871:	48 b8 1c d1 10 f0 00 	mov    $0xf010d11c,%rax$/;"	l
f010d878	obj/kern/kernel.asm	/^    f010d878:	00 00 00 $/;"	l
f010d87b	obj/kern/kernel.asm	/^    f010d87b:	ff d0                	callq  *%rax$/;"	l
f010d87d	obj/kern/kernel.asm	/^    f010d87d:	48 98                	cltq   $/;"	l
f010d87f	obj/kern/kernel.asm	/^    f010d87f:	e9 14 01 00 00       	jmpq   fffffffff010d998 <end+0xfffffffefe66c5f8>$/;"	l
f010d884	obj/kern/kernel.asm	/^    f010d884:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx$/;"	l
f010d888	obj/kern/kernel.asm	/^    f010d888:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f010d88c	obj/kern/kernel.asm	/^    f010d88c:	48 89 d6             	mov    %rdx,%rsi$/;"	l
f010d88f	obj/kern/kernel.asm	/^    f010d88f:	89 c7                	mov    %eax,%edi$/;"	l
f010d891	obj/kern/kernel.asm	/^    f010d891:	48 b8 49 d3 10 f0 00 	mov    $0xf010d349,%rax$/;"	l
f010d898	obj/kern/kernel.asm	/^    f010d898:	00 00 00 $/;"	l
f010d89b	obj/kern/kernel.asm	/^    f010d89b:	ff d0                	callq  *%rax$/;"	l
f010d89d	obj/kern/kernel.asm	/^    f010d89d:	48 98                	cltq   $/;"	l
f010d89f	obj/kern/kernel.asm	/^    f010d89f:	e9 f4 00 00 00       	jmpq   fffffffff010d998 <end+0xfffffffefe66c5f8>$/;"	l
f010d8a4	obj/kern/kernel.asm	/^    f010d8a4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f010d8a8	obj/kern/kernel.asm	/^    f010d8a8:	89 c2                	mov    %eax,%edx$/;"	l
f010d8aa	obj/kern/kernel.asm	/^    f010d8aa:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f010d8ae	obj/kern/kernel.asm	/^    f010d8ae:	89 d6                	mov    %edx,%esi$/;"	l
f010d8b0	obj/kern/kernel.asm	/^    f010d8b0:	89 c7                	mov    %eax,%edi$/;"	l
f010d8b2	obj/kern/kernel.asm	/^    f010d8b2:	48 b8 b5 ce 10 f0 00 	mov    $0xf010ceb5,%rax$/;"	l
f010d8b9	obj/kern/kernel.asm	/^    f010d8b9:	00 00 00 $/;"	l
f010d8bc	obj/kern/kernel.asm	/^    f010d8bc:	ff d0                	callq  *%rax$/;"	l
f010d8be	obj/kern/kernel.asm	/^    f010d8be:	48 98                	cltq   $/;"	l
f010d8c0	obj/kern/kernel.asm	/^    f010d8c0:	e9 d3 00 00 00       	jmpq   fffffffff010d998 <end+0xfffffffefe66c5f8>$/;"	l
f010d8c5	obj/kern/kernel.asm	/^    f010d8c5:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx$/;"	l
f010d8c9	obj/kern/kernel.asm	/^    f010d8c9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f010d8cd	obj/kern/kernel.asm	/^    f010d8cd:	48 89 d6             	mov    %rdx,%rsi$/;"	l
f010d8d0	obj/kern/kernel.asm	/^    f010d8d0:	89 c7                	mov    %eax,%edi$/;"	l
f010d8d2	obj/kern/kernel.asm	/^    f010d8d2:	48 b8 86 cf 10 f0 00 	mov    $0xf010cf86,%rax$/;"	l
f010d8d9	obj/kern/kernel.asm	/^    f010d8d9:	00 00 00 $/;"	l
f010d8dc	obj/kern/kernel.asm	/^    f010d8dc:	ff d0                	callq  *%rax$/;"	l
f010d8de	obj/kern/kernel.asm	/^    f010d8de:	48 98                	cltq   $/;"	l
f010d8e0	obj/kern/kernel.asm	/^    f010d8e0:	e9 b3 00 00 00       	jmpq   fffffffff010d998 <end+0xfffffffefe66c5f8>$/;"	l
f010d8e5	obj/kern/kernel.asm	/^    f010d8e5:	48 8b 45 b8          	mov    -0x48(%rbp),%rax$/;"	l
f010d8e9	obj/kern/kernel.asm	/^    f010d8e9:	89 c1                	mov    %eax,%ecx$/;"	l
f010d8eb	obj/kern/kernel.asm	/^    f010d8eb:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx$/;"	l
f010d8ef	obj/kern/kernel.asm	/^    f010d8ef:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f010d8f3	obj/kern/kernel.asm	/^    f010d8f3:	89 c3                	mov    %eax,%ebx$/;"	l
f010d8f5	obj/kern/kernel.asm	/^    f010d8f5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f010d8f9	obj/kern/kernel.asm	/^    f010d8f9:	89 de                	mov    %ebx,%esi$/;"	l
f010d8fb	obj/kern/kernel.asm	/^    f010d8fb:	89 c7                	mov    %eax,%edi$/;"	l
f010d8fd	obj/kern/kernel.asm	/^    f010d8fd:	48 b8 05 d4 10 f0 00 	mov    $0xf010d405,%rax$/;"	l
f010d904	obj/kern/kernel.asm	/^    f010d904:	00 00 00 $/;"	l
f010d907	obj/kern/kernel.asm	/^    f010d907:	ff d0                	callq  *%rax$/;"	l
f010d909	obj/kern/kernel.asm	/^    f010d909:	48 98                	cltq   $/;"	l
f010d90b	obj/kern/kernel.asm	/^    f010d90b:	e9 88 00 00 00       	jmpq   fffffffff010d998 <end+0xfffffffefe66c5f8>$/;"	l
f010d910	obj/kern/kernel.asm	/^    f010d910:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f010d914	obj/kern/kernel.asm	/^    f010d914:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010d917	obj/kern/kernel.asm	/^    f010d917:	48 b8 c7 d5 10 f0 00 	mov    $0xf010d5c7,%rax$/;"	l
f010d91e	obj/kern/kernel.asm	/^    f010d91e:	00 00 00 $/;"	l
f010d921	obj/kern/kernel.asm	/^    f010d921:	ff d0                	callq  *%rax$/;"	l
f010d923	obj/kern/kernel.asm	/^    f010d923:	48 98                	cltq   $/;"	l
f010d925	obj/kern/kernel.asm	/^    f010d925:	eb 71                	jmp    fffffffff010d998 <end+0xfffffffefe66c5f8>$/;"	l
f010d927	obj/kern/kernel.asm	/^    f010d927:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx$/;"	l
f010d92b	obj/kern/kernel.asm	/^    f010d92b:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f010d92f	obj/kern/kernel.asm	/^    f010d92f:	48 89 d6             	mov    %rdx,%rsi$/;"	l
f010d932	obj/kern/kernel.asm	/^    f010d932:	89 c7                	mov    %eax,%edi$/;"	l
f010d934	obj/kern/kernel.asm	/^    f010d934:	48 b8 1b cf 10 f0 00 	mov    $0xf010cf1b,%rax$/;"	l
f010d93b	obj/kern/kernel.asm	/^    f010d93b:	00 00 00 $/;"	l
f010d93e	obj/kern/kernel.asm	/^    f010d93e:	ff d0                	callq  *%rax$/;"	l
f010d940	obj/kern/kernel.asm	/^    f010d940:	48 98                	cltq   $/;"	l
f010d942	obj/kern/kernel.asm	/^    f010d942:	eb 54                	jmp    fffffffff010d998 <end+0xfffffffefe66c5f8>$/;"	l
f010d944	obj/kern/kernel.asm	/^    f010d944:	48 b8 aa d6 10 f0 00 	mov    $0xf010d6aa,%rax$/;"	l
f010d94b	obj/kern/kernel.asm	/^    f010d94b:	00 00 00 $/;"	l
f010d94e	obj/kern/kernel.asm	/^    f010d94e:	ff d0                	callq  *%rax$/;"	l
f010d950	obj/kern/kernel.asm	/^    f010d950:	48 98                	cltq   $/;"	l
f010d952	obj/kern/kernel.asm	/^    f010d952:	eb 44                	jmp    fffffffff010d998 <end+0xfffffffefe66c5f8>$/;"	l
f010d954	obj/kern/kernel.asm	/^    f010d954:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f010d958	obj/kern/kernel.asm	/^    f010d958:	89 c2                	mov    %eax,%edx$/;"	l
f010d95a	obj/kern/kernel.asm	/^    f010d95a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f010d95e	obj/kern/kernel.asm	/^    f010d95e:	89 d6                	mov    %edx,%esi$/;"	l
f010d960	obj/kern/kernel.asm	/^    f010d960:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010d963	obj/kern/kernel.asm	/^    f010d963:	48 b8 bc d6 10 f0 00 	mov    $0xf010d6bc,%rax$/;"	l
f010d96a	obj/kern/kernel.asm	/^    f010d96a:	00 00 00 $/;"	l
f010d96d	obj/kern/kernel.asm	/^    f010d96d:	ff d0                	callq  *%rax$/;"	l
f010d96f	obj/kern/kernel.asm	/^    f010d96f:	48 98                	cltq   $/;"	l
f010d971	obj/kern/kernel.asm	/^    f010d971:	eb 25                	jmp    fffffffff010d998 <end+0xfffffffefe66c5f8>$/;"	l
f010d973	obj/kern/kernel.asm	/^    f010d973:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx$/;"	l
f010d977	obj/kern/kernel.asm	/^    f010d977:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f010d97b	obj/kern/kernel.asm	/^    f010d97b:	48 89 d6             	mov    %rdx,%rsi$/;"	l
f010d97e	obj/kern/kernel.asm	/^    f010d97e:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010d981	obj/kern/kernel.asm	/^    f010d981:	48 b8 fa d6 10 f0 00 	mov    $0xf010d6fa,%rax$/;"	l
f010d988	obj/kern/kernel.asm	/^    f010d988:	00 00 00 $/;"	l
f010d98b	obj/kern/kernel.asm	/^    f010d98b:	ff d0                	callq  *%rax$/;"	l
f010d98d	obj/kern/kernel.asm	/^    f010d98d:	48 98                	cltq   $/;"	l
f010d98f	obj/kern/kernel.asm	/^    f010d98f:	eb 07                	jmp    fffffffff010d998 <end+0xfffffffefe66c5f8>$/;"	l
f010d991	obj/kern/kernel.asm	/^    f010d991:	48 c7 c0 fd ff ff ff 	mov    $0xfffffffffffffffd,%rax$/;"	l
f010d998	obj/kern/kernel.asm	/^    f010d998:	48 83 c4 48          	add    $0x48,%rsp$/;"	l
f010d99c	obj/kern/kernel.asm	/^    f010d99c:	5b                   	pop    %rbx$/;"	l
f010d99d	obj/kern/kernel.asm	/^    f010d99d:	c9                   	leaveq $/;"	l
f010d99e	obj/kern/kernel.asm	/^    f010d99e:	c3                   	retq   $/;"	l
f010d9a0	obj/kern/kernel.asm	/^    f010d9a0:	55                   	push   %rbp$/;"	l
f010d9a1	obj/kern/kernel.asm	/^    f010d9a1:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010d9a4	obj/kern/kernel.asm	/^    f010d9a4:	48 83 ec 48          	sub    $0x48,%rsp$/;"	l
f010d9a8	obj/kern/kernel.asm	/^    f010d9a8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)$/;"	l
f010d9ac	obj/kern/kernel.asm	/^    f010d9ac:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)$/;"	l
f010d9b0	obj/kern/kernel.asm	/^    f010d9b0:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)$/;"	l
f010d9b4	obj/kern/kernel.asm	/^    f010d9b4:	89 4d c4             	mov    %ecx,-0x3c(%rbp)$/;"	l
f010d9b7	obj/kern/kernel.asm	/^    f010d9b7:	4c 89 45 b8          	mov    %r8,-0x48(%rbp)$/;"	l
f010d9bb	obj/kern/kernel.asm	/^    f010d9bb:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f010d9bf	obj/kern/kernel.asm	/^    f010d9bf:	8b 00                	mov    (%rax),%eax$/;"	l
f010d9c1	obj/kern/kernel.asm	/^    f010d9c1:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
f010d9c4	obj/kern/kernel.asm	/^    f010d9c4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f010d9c8	obj/kern/kernel.asm	/^    f010d9c8:	8b 00                	mov    (%rax),%eax$/;"	l
f010d9ca	obj/kern/kernel.asm	/^    f010d9ca:	89 45 f0             	mov    %eax,-0x10(%rbp)$/;"	l
f010d9cd	obj/kern/kernel.asm	/^    f010d9cd:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)$/;"	l
f010d9d4	obj/kern/kernel.asm	/^    f010d9d4:	e9 ed 00 00 00       	jmpq   fffffffff010dac6 <end+0xfffffffefe66c726>$/;"	l
f010d9d9	obj/kern/kernel.asm	/^    f010d9d9:	8b 45 f0             	mov    -0x10(%rbp),%eax$/;"	l
f010d9dc	obj/kern/kernel.asm	/^    f010d9dc:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
f010d9df	obj/kern/kernel.asm	/^    f010d9df:	8d 04 02             	lea    (%rdx,%rax,1),%eax$/;"	l
f010d9e2	obj/kern/kernel.asm	/^    f010d9e2:	89 c2                	mov    %eax,%edx$/;"	l
f010d9e4	obj/kern/kernel.asm	/^    f010d9e4:	c1 ea 1f             	shr    $0x1f,%edx$/;"	l
f010d9e7	obj/kern/kernel.asm	/^    f010d9e7:	8d 04 02             	lea    (%rdx,%rax,1),%eax$/;"	l
f010d9ea	obj/kern/kernel.asm	/^    f010d9ea:	d1 f8                	sar    %eax$/;"	d
f010d9ec	obj/kern/kernel.asm	/^    f010d9ec:	89 45 f8             	mov    %eax,-0x8(%rbp)$/;"	l
f010d9ef	obj/kern/kernel.asm	/^    f010d9ef:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
f010d9f2	obj/kern/kernel.asm	/^    f010d9f2:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
f010d9f5	obj/kern/kernel.asm	/^    f010d9f5:	eb 04                	jmp    fffffffff010d9fb <end+0xfffffffefe66c65b>$/;"	l
f010d9f7	obj/kern/kernel.asm	/^    f010d9f7:	83 6d fc 01          	subl   $0x1,-0x4(%rbp)$/;"	l
f010d9fb	obj/kern/kernel.asm	/^    f010d9fb:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
f010d9fe	obj/kern/kernel.asm	/^    f010d9fe:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
f010da01	obj/kern/kernel.asm	/^    f010da01:	7c 23                	jl     fffffffff010da26 <end+0xfffffffefe66c686>$/;"	l
f010da03	obj/kern/kernel.asm	/^    f010da03:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
f010da06	obj/kern/kernel.asm	/^    f010da06:	48 63 d0             	movslq %eax,%rdx$/;"	l
f010da09	obj/kern/kernel.asm	/^    f010da09:	48 89 d0             	mov    %rdx,%rax$/;"	l
f010da0c	obj/kern/kernel.asm	/^    f010da0c:	48 01 c0             	add    %rax,%rax$/;"	l
f010da0f	obj/kern/kernel.asm	/^    f010da0f:	48 01 d0             	add    %rdx,%rax$/;"	l
f010da12	obj/kern/kernel.asm	/^    f010da12:	48 c1 e0 02          	shl    $0x2,%rax$/;"	l
f010da16	obj/kern/kernel.asm	/^    f010da16:	48 03 45 d8          	add    -0x28(%rbp),%rax$/;"	l
f010da1a	obj/kern/kernel.asm	/^    f010da1a:	0f b6 40 04          	movzbl 0x4(%rax),%eax$/;"	l
f010da1e	obj/kern/kernel.asm	/^    f010da1e:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010da21	obj/kern/kernel.asm	/^    f010da21:	3b 45 c4             	cmp    -0x3c(%rbp),%eax$/;"	l
f010da24	obj/kern/kernel.asm	/^    f010da24:	75 d1                	jne    fffffffff010d9f7 <end+0xfffffffefe66c657>$/;"	l
f010da26	obj/kern/kernel.asm	/^    f010da26:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
f010da29	obj/kern/kernel.asm	/^    f010da29:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
f010da2c	obj/kern/kernel.asm	/^    f010da2c:	7d 0e                	jge    fffffffff010da3c <end+0xfffffffefe66c69c>$/;"	l
f010da2e	obj/kern/kernel.asm	/^    f010da2e:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
f010da31	obj/kern/kernel.asm	/^    f010da31:	83 c0 01             	add    $0x1,%eax$/;"	l
f010da34	obj/kern/kernel.asm	/^    f010da34:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
f010da37	obj/kern/kernel.asm	/^    f010da37:	e9 8a 00 00 00       	jmpq   fffffffff010dac6 <end+0xfffffffefe66c726>$/;"	l
f010da3c	obj/kern/kernel.asm	/^    f010da3c:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%rbp)$/;"	l
f010da43	obj/kern/kernel.asm	/^    f010da43:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
f010da46	obj/kern/kernel.asm	/^    f010da46:	48 63 d0             	movslq %eax,%rdx$/;"	l
f010da49	obj/kern/kernel.asm	/^    f010da49:	48 89 d0             	mov    %rdx,%rax$/;"	l
f010da4c	obj/kern/kernel.asm	/^    f010da4c:	48 01 c0             	add    %rax,%rax$/;"	l
f010da4f	obj/kern/kernel.asm	/^    f010da4f:	48 01 d0             	add    %rdx,%rax$/;"	l
f010da52	obj/kern/kernel.asm	/^    f010da52:	48 c1 e0 02          	shl    $0x2,%rax$/;"	l
f010da56	obj/kern/kernel.asm	/^    f010da56:	48 03 45 d8          	add    -0x28(%rbp),%rax$/;"	l
f010da5a	obj/kern/kernel.asm	/^    f010da5a:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
f010da5d	obj/kern/kernel.asm	/^    f010da5d:	89 c0                	mov    %eax,%eax$/;"	l
f010da5f	obj/kern/kernel.asm	/^    f010da5f:	48 3b 45 b8          	cmp    -0x48(%rbp),%rax$/;"	l
f010da63	obj/kern/kernel.asm	/^    f010da63:	73 14                	jae    fffffffff010da79 <end+0xfffffffefe66c6d9>$/;"	l
f010da65	obj/kern/kernel.asm	/^    f010da65:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f010da69	obj/kern/kernel.asm	/^    f010da69:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
f010da6c	obj/kern/kernel.asm	/^    f010da6c:	89 10                	mov    %edx,(%rax)$/;"	l
f010da6e	obj/kern/kernel.asm	/^    f010da6e:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
f010da71	obj/kern/kernel.asm	/^    f010da71:	83 c0 01             	add    $0x1,%eax$/;"	l
f010da74	obj/kern/kernel.asm	/^    f010da74:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
f010da77	obj/kern/kernel.asm	/^    f010da77:	eb 4d                	jmp    fffffffff010dac6 <end+0xfffffffefe66c726>$/;"	l
f010da79	obj/kern/kernel.asm	/^    f010da79:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
f010da7c	obj/kern/kernel.asm	/^    f010da7c:	48 63 d0             	movslq %eax,%rdx$/;"	l
f010da7f	obj/kern/kernel.asm	/^    f010da7f:	48 89 d0             	mov    %rdx,%rax$/;"	l
f010da82	obj/kern/kernel.asm	/^    f010da82:	48 01 c0             	add    %rax,%rax$/;"	l
f010da85	obj/kern/kernel.asm	/^    f010da85:	48 01 d0             	add    %rdx,%rax$/;"	l
f010da88	obj/kern/kernel.asm	/^    f010da88:	48 c1 e0 02          	shl    $0x2,%rax$/;"	l
f010da8c	obj/kern/kernel.asm	/^    f010da8c:	48 03 45 d8          	add    -0x28(%rbp),%rax$/;"	l
f010da90	obj/kern/kernel.asm	/^    f010da90:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
f010da93	obj/kern/kernel.asm	/^    f010da93:	89 c0                	mov    %eax,%eax$/;"	l
f010da95	obj/kern/kernel.asm	/^    f010da95:	48 3b 45 b8          	cmp    -0x48(%rbp),%rax$/;"	l
f010da99	obj/kern/kernel.asm	/^    f010da99:	76 17                	jbe    fffffffff010dab2 <end+0xfffffffefe66c712>$/;"	l
f010da9b	obj/kern/kernel.asm	/^    f010da9b:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
f010da9e	obj/kern/kernel.asm	/^    f010da9e:	8d 50 ff             	lea    -0x1(%rax),%edx$/;"	l
f010daa1	obj/kern/kernel.asm	/^    f010daa1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f010daa5	obj/kern/kernel.asm	/^    f010daa5:	89 10                	mov    %edx,(%rax)$/;"	l
f010daa7	obj/kern/kernel.asm	/^    f010daa7:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
f010daaa	obj/kern/kernel.asm	/^    f010daaa:	83 e8 01             	sub    $0x1,%eax$/;"	l
f010daad	obj/kern/kernel.asm	/^    f010daad:	89 45 f0             	mov    %eax,-0x10(%rbp)$/;"	l
f010dab0	obj/kern/kernel.asm	/^    f010dab0:	eb 14                	jmp    fffffffff010dac6 <end+0xfffffffefe66c726>$/;"	l
f010dab2	obj/kern/kernel.asm	/^    f010dab2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f010dab6	obj/kern/kernel.asm	/^    f010dab6:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
f010dab9	obj/kern/kernel.asm	/^    f010dab9:	89 10                	mov    %edx,(%rax)$/;"	l
f010dabb	obj/kern/kernel.asm	/^    f010dabb:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
f010dabe	obj/kern/kernel.asm	/^    f010dabe:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
f010dac1	obj/kern/kernel.asm	/^    f010dac1:	48 83 45 b8 01       	addq   $0x1,-0x48(%rbp)$/;"	l
f010dac6	obj/kern/kernel.asm	/^    f010dac6:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
f010dac9	obj/kern/kernel.asm	/^    f010dac9:	3b 45 f0             	cmp    -0x10(%rbp),%eax$/;"	l
f010dacc	obj/kern/kernel.asm	/^    f010dacc:	0f 8e 07 ff ff ff    	jle    fffffffff010d9d9 <end+0xfffffffefe66c639>$/;"	l
f010dad2	obj/kern/kernel.asm	/^    f010dad2:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)$/;"	l
f010dad6	obj/kern/kernel.asm	/^    f010dad6:	75 11                	jne    fffffffff010dae9 <end+0xfffffffefe66c749>$/;"	l
f010dad8	obj/kern/kernel.asm	/^    f010dad8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f010dadc	obj/kern/kernel.asm	/^    f010dadc:	8b 00                	mov    (%rax),%eax$/;"	l
f010dade	obj/kern/kernel.asm	/^    f010dade:	8d 50 ff             	lea    -0x1(%rax),%edx$/;"	l
f010dae1	obj/kern/kernel.asm	/^    f010dae1:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f010dae5	obj/kern/kernel.asm	/^    f010dae5:	89 10                	mov    %edx,(%rax)$/;"	l
f010dae7	obj/kern/kernel.asm	/^    f010dae7:	eb 46                	jmp    fffffffff010db2f <end+0xfffffffefe66c78f>$/;"	l
f010dae9	obj/kern/kernel.asm	/^    f010dae9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f010daed	obj/kern/kernel.asm	/^    f010daed:	8b 00                	mov    (%rax),%eax$/;"	l
f010daef	obj/kern/kernel.asm	/^    f010daef:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
f010daf2	obj/kern/kernel.asm	/^    f010daf2:	eb 04                	jmp    fffffffff010daf8 <end+0xfffffffefe66c758>$/;"	l
f010daf4	obj/kern/kernel.asm	/^    f010daf4:	83 6d ec 01          	subl   $0x1,-0x14(%rbp)$/;"	l
f010daf8	obj/kern/kernel.asm	/^    f010daf8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f010dafc	obj/kern/kernel.asm	/^    f010dafc:	8b 00                	mov    (%rax),%eax$/;"	l
f010dafe	obj/kern/kernel.asm	/^    f010dafe:	3b 45 ec             	cmp    -0x14(%rbp),%eax$/;"	l
f010db01	obj/kern/kernel.asm	/^    f010db01:	7d 23                	jge    fffffffff010db26 <end+0xfffffffefe66c786>$/;"	l
f010db03	obj/kern/kernel.asm	/^    f010db03:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
f010db06	obj/kern/kernel.asm	/^    f010db06:	48 63 d0             	movslq %eax,%rdx$/;"	l
f010db09	obj/kern/kernel.asm	/^    f010db09:	48 89 d0             	mov    %rdx,%rax$/;"	l
f010db0c	obj/kern/kernel.asm	/^    f010db0c:	48 01 c0             	add    %rax,%rax$/;"	l
f010db0f	obj/kern/kernel.asm	/^    f010db0f:	48 01 d0             	add    %rdx,%rax$/;"	l
f010db12	obj/kern/kernel.asm	/^    f010db12:	48 c1 e0 02          	shl    $0x2,%rax$/;"	l
f010db16	obj/kern/kernel.asm	/^    f010db16:	48 03 45 d8          	add    -0x28(%rbp),%rax$/;"	l
f010db1a	obj/kern/kernel.asm	/^    f010db1a:	0f b6 40 04          	movzbl 0x4(%rax),%eax$/;"	l
f010db1e	obj/kern/kernel.asm	/^    f010db1e:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010db21	obj/kern/kernel.asm	/^    f010db21:	3b 45 c4             	cmp    -0x3c(%rbp),%eax$/;"	l
f010db24	obj/kern/kernel.asm	/^    f010db24:	75 ce                	jne    fffffffff010daf4 <end+0xfffffffefe66c754>$/;"	l
f010db26	obj/kern/kernel.asm	/^    f010db26:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f010db2a	obj/kern/kernel.asm	/^    f010db2a:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
f010db2d	obj/kern/kernel.asm	/^    f010db2d:	89 10                	mov    %edx,(%rax)$/;"	l
f010db2f	obj/kern/kernel.asm	/^    f010db2f:	c9                   	leaveq $/;"	l
f010db30	obj/kern/kernel.asm	/^    f010db30:	c3                   	retq   $/;"	l
f010db31	obj/kern/kernel.asm	/^    f010db31:	55                   	push   %rbp$/;"	l
f010db32	obj/kern/kernel.asm	/^    f010db32:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010db35	obj/kern/kernel.asm	/^    f010db35:	53                   	push   %rbx$/;"	l
f010db36	obj/kern/kernel.asm	/^    f010db36:	48 83 ec 58          	sub    $0x58,%rsp$/;"	l
f010db3a	obj/kern/kernel.asm	/^    f010db3a:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)$/;"	l
f010db3e	obj/kern/kernel.asm	/^    f010db3e:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)$/;"	l
f010db42	obj/kern/kernel.asm	/^    f010db42:	48 8b 45 a0          	mov    -0x60(%rbp),%rax$/;"	l
f010db46	obj/kern/kernel.asm	/^    f010db46:	48 ba 68 2f 11 f0 00 	mov    $0xf0112f68,%rdx$/;"	l
f010db4d	obj/kern/kernel.asm	/^    f010db4d:	00 00 00 $/;"	l
f010db50	obj/kern/kernel.asm	/^    f010db50:	48 89 10             	mov    %rdx,(%rax)$/;"	l
f010db53	obj/kern/kernel.asm	/^    f010db53:	48 8b 45 a0          	mov    -0x60(%rbp),%rax$/;"	l
f010db57	obj/kern/kernel.asm	/^    f010db57:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)$/;"	l
f010db5e	obj/kern/kernel.asm	/^    f010db5e:	48 8b 45 a0          	mov    -0x60(%rbp),%rax$/;"	l
f010db62	obj/kern/kernel.asm	/^    f010db62:	48 b9 68 2f 11 f0 00 	mov    $0xf0112f68,%rcx$/;"	l
f010db69	obj/kern/kernel.asm	/^    f010db69:	00 00 00 $/;"	l
f010db6c	obj/kern/kernel.asm	/^    f010db6c:	48 89 48 10          	mov    %rcx,0x10(%rax)$/;"	l
f010db70	obj/kern/kernel.asm	/^    f010db70:	48 8b 45 a0          	mov    -0x60(%rbp),%rax$/;"	l
f010db74	obj/kern/kernel.asm	/^    f010db74:	c7 40 18 09 00 00 00 	movl   $0x9,0x18(%rax)$/;"	l
f010db7b	obj/kern/kernel.asm	/^    f010db7b:	48 8b 45 a0          	mov    -0x60(%rbp),%rax$/;"	l
f010db7f	obj/kern/kernel.asm	/^    f010db7f:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx$/;"	l
f010db83	obj/kern/kernel.asm	/^    f010db83:	48 89 50 20          	mov    %rdx,0x20(%rax)$/;"	l
f010db87	obj/kern/kernel.asm	/^    f010db87:	48 8b 45 a0          	mov    -0x60(%rbp),%rax$/;"	l
f010db8b	obj/kern/kernel.asm	/^    f010db8b:	c7 40 28 00 00 00 00 	movl   $0x0,0x28(%rax)$/;"	l
f010db92	obj/kern/kernel.asm	/^    f010db92:	b8 ff ff bf ef       	mov    $0xefbfffff,%eax$/;"	l
f010db97	obj/kern/kernel.asm	/^    f010db97:	48 39 45 a8          	cmp    %rax,-0x58(%rbp)$/;"	l
f010db9b	obj/kern/kernel.asm	/^    f010db9b:	76 3a                	jbe    fffffffff010dbd7 <end+0xfffffffefe66c837>$/;"	l
f010db9d	obj/kern/kernel.asm	/^    f010db9d:	48 bb 60 3a 11 f0 00 	mov    $0xf0113a60,%rbx$/;"	l
f010dba4	obj/kern/kernel.asm	/^    f010dba4:	00 00 00 $/;"	l
f010dba7	obj/kern/kernel.asm	/^    f010dba7:	48 89 5d c8          	mov    %rbx,-0x38(%rbp)$/;"	l
f010dbab	obj/kern/kernel.asm	/^    f010dbab:	48 b8 88 23 12 f0 00 	mov    $0xf0122388,%rax$/;"	l
f010dbb2	obj/kern/kernel.asm	/^    f010dbb2:	00 00 00 $/;"	l
f010dbb5	obj/kern/kernel.asm	/^    f010dbb5:	48 89 45 d0          	mov    %rax,-0x30(%rbp)$/;"	l
f010dbb9	obj/kern/kernel.asm	/^    f010dbb9:	48 ba 89 23 12 f0 00 	mov    $0xf0122389,%rdx$/;"	l
f010dbc0	obj/kern/kernel.asm	/^    f010dbc0:	00 00 00 $/;"	l
f010dbc3	obj/kern/kernel.asm	/^    f010dbc3:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)$/;"	l
f010dbc7	obj/kern/kernel.asm	/^    f010dbc7:	48 b9 51 72 12 f0 00 	mov    $0xf0127251,%rcx$/;"	l
f010dbce	obj/kern/kernel.asm	/^    f010dbce:	00 00 00 $/;"	l
f010dbd1	obj/kern/kernel.asm	/^    f010dbd1:	48 89 4d e0          	mov    %rcx,-0x20(%rbp)$/;"	l
f010dbd5	obj/kern/kernel.asm	/^    f010dbd5:	eb 37                	jmp    fffffffff010dc0e <end+0xfffffffefe66c86e>$/;"	l
f010dbd7	obj/kern/kernel.asm	/^    f010dbd7:	48 c7 45 e8 00 00 20 	movq   $0x200000,-0x18(%rbp)$/;"	l
f010dbde	obj/kern/kernel.asm	/^    f010dbde:	00 $/;"	l
f010dbdf	obj/kern/kernel.asm	/^    f010dbdf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010dbe3	obj/kern/kernel.asm	/^    f010dbe3:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010dbe6	obj/kern/kernel.asm	/^    f010dbe6:	48 89 45 c8          	mov    %rax,-0x38(%rbp)$/;"	l
f010dbea	obj/kern/kernel.asm	/^    f010dbea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010dbee	obj/kern/kernel.asm	/^    f010dbee:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
f010dbf2	obj/kern/kernel.asm	/^    f010dbf2:	48 89 45 d0          	mov    %rax,-0x30(%rbp)$/;"	l
f010dbf6	obj/kern/kernel.asm	/^    f010dbf6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010dbfa	obj/kern/kernel.asm	/^    f010dbfa:	48 8b 40 10          	mov    0x10(%rax),%rax$/;"	l
f010dbfe	obj/kern/kernel.asm	/^    f010dbfe:	48 89 45 d8          	mov    %rax,-0x28(%rbp)$/;"	l
f010dc02	obj/kern/kernel.asm	/^    f010dc02:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010dc06	obj/kern/kernel.asm	/^    f010dc06:	48 8b 40 18          	mov    0x18(%rax),%rax$/;"	l
f010dc0a	obj/kern/kernel.asm	/^    f010dc0a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)$/;"	l
f010dc0e	obj/kern/kernel.asm	/^    f010dc0e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
f010dc12	obj/kern/kernel.asm	/^    f010dc12:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax$/;"	l
f010dc16	obj/kern/kernel.asm	/^    f010dc16:	76 0f                	jbe    fffffffff010dc27 <end+0xfffffffefe66c887>$/;"	l
f010dc18	obj/kern/kernel.asm	/^    f010dc18:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
f010dc1c	obj/kern/kernel.asm	/^    f010dc1c:	48 83 e8 01          	sub    $0x1,%rax$/;"	l
f010dc20	obj/kern/kernel.asm	/^    f010dc20:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f010dc23	obj/kern/kernel.asm	/^    f010dc23:	84 c0                	test   %al,%al$/;"	l
f010dc25	obj/kern/kernel.asm	/^    f010dc25:	74 0a                	je     fffffffff010dc31 <end+0xfffffffefe66c891>$/;"	l
f010dc27	obj/kern/kernel.asm	/^    f010dc27:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f010dc2c	obj/kern/kernel.asm	/^    f010dc2c:	e9 2d 03 00 00       	jmpq   fffffffff010df5e <end+0xfffffffefe66cbbe>$/;"	l
f010dc31	obj/kern/kernel.asm	/^    f010dc31:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%rbp)$/;"	l
f010dc38	obj/kern/kernel.asm	/^    f010dc38:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx$/;"	l
f010dc3c	obj/kern/kernel.asm	/^    f010dc3c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f010dc40	obj/kern/kernel.asm	/^    f010dc40:	48 89 d3             	mov    %rdx,%rbx$/;"	l
f010dc43	obj/kern/kernel.asm	/^    f010dc43:	48 29 c3             	sub    %rax,%rbx$/;"	l
f010dc46	obj/kern/kernel.asm	/^    f010dc46:	48 89 d8             	mov    %rbx,%rax$/;"	l
f010dc49	obj/kern/kernel.asm	/^    f010dc49:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010dc4c	obj/kern/kernel.asm	/^    f010dc4c:	48 c1 fa 02          	sar    $0x2,%rdx$/;"	l
f010dc50	obj/kern/kernel.asm	/^    f010dc50:	48 b8 ab aa aa aa aa 	mov    $0xaaaaaaaaaaaaaaab,%rax$/;"	l
f010dc57	obj/kern/kernel.asm	/^    f010dc57:	aa aa aa $/;"	l
f010dc5a	obj/kern/kernel.asm	/^    f010dc5a:	48 0f af c2          	imul   %rdx,%rax$/;"	l
f010dc5e	obj/kern/kernel.asm	/^    f010dc5e:	83 e8 01             	sub    $0x1,%eax$/;"	l
f010dc61	obj/kern/kernel.asm	/^    f010dc61:	89 45 c0             	mov    %eax,-0x40(%rbp)$/;"	l
f010dc64	obj/kern/kernel.asm	/^    f010dc64:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx$/;"	l
f010dc68	obj/kern/kernel.asm	/^    f010dc68:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx$/;"	l
f010dc6c	obj/kern/kernel.asm	/^    f010dc6c:	48 8d 5d c4          	lea    -0x3c(%rbp),%rbx$/;"	l
f010dc70	obj/kern/kernel.asm	/^    f010dc70:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f010dc74	obj/kern/kernel.asm	/^    f010dc74:	49 89 c8             	mov    %rcx,%r8$/;"	l
f010dc77	obj/kern/kernel.asm	/^    f010dc77:	b9 64 00 00 00       	mov    $0x64,%ecx$/;"	l
f010dc7c	obj/kern/kernel.asm	/^    f010dc7c:	48 89 de             	mov    %rbx,%rsi$/;"	l
f010dc7f	obj/kern/kernel.asm	/^    f010dc7f:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010dc82	obj/kern/kernel.asm	/^    f010dc82:	48 b8 a0 d9 10 f0 00 	mov    $0xf010d9a0,%rax$/;"	l
f010dc89	obj/kern/kernel.asm	/^    f010dc89:	00 00 00 $/;"	l
f010dc8c	obj/kern/kernel.asm	/^    f010dc8c:	ff d0                	callq  *%rax$/;"	l
f010dc8e	obj/kern/kernel.asm	/^    f010dc8e:	8b 45 c4             	mov    -0x3c(%rbp),%eax$/;"	l
f010dc91	obj/kern/kernel.asm	/^    f010dc91:	85 c0                	test   %eax,%eax$/;"	l
f010dc93	obj/kern/kernel.asm	/^    f010dc93:	75 0a                	jne    fffffffff010dc9f <end+0xfffffffefe66c8ff>$/;"	l
f010dc95	obj/kern/kernel.asm	/^    f010dc95:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f010dc9a	obj/kern/kernel.asm	/^    f010dc9a:	e9 bf 02 00 00       	jmpq   fffffffff010df5e <end+0xfffffffefe66cbbe>$/;"	l
f010dc9f	obj/kern/kernel.asm	/^    f010dc9f:	8b 45 c4             	mov    -0x3c(%rbp),%eax$/;"	l
f010dca2	obj/kern/kernel.asm	/^    f010dca2:	89 45 bc             	mov    %eax,-0x44(%rbp)$/;"	l
f010dca5	obj/kern/kernel.asm	/^    f010dca5:	8b 45 c0             	mov    -0x40(%rbp),%eax$/;"	l
f010dca8	obj/kern/kernel.asm	/^    f010dca8:	89 45 b8             	mov    %eax,-0x48(%rbp)$/;"	l
f010dcab	obj/kern/kernel.asm	/^    f010dcab:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx$/;"	l
f010dcaf	obj/kern/kernel.asm	/^    f010dcaf:	48 8d 55 b8          	lea    -0x48(%rbp),%rdx$/;"	l
f010dcb3	obj/kern/kernel.asm	/^    f010dcb3:	48 8d 5d bc          	lea    -0x44(%rbp),%rbx$/;"	l
f010dcb7	obj/kern/kernel.asm	/^    f010dcb7:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f010dcbb	obj/kern/kernel.asm	/^    f010dcbb:	49 89 c8             	mov    %rcx,%r8$/;"	l
f010dcbe	obj/kern/kernel.asm	/^    f010dcbe:	b9 24 00 00 00       	mov    $0x24,%ecx$/;"	l
f010dcc3	obj/kern/kernel.asm	/^    f010dcc3:	48 89 de             	mov    %rbx,%rsi$/;"	l
f010dcc6	obj/kern/kernel.asm	/^    f010dcc6:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010dcc9	obj/kern/kernel.asm	/^    f010dcc9:	48 b8 a0 d9 10 f0 00 	mov    $0xf010d9a0,%rax$/;"	l
f010dcd0	obj/kern/kernel.asm	/^    f010dcd0:	00 00 00 $/;"	l
f010dcd3	obj/kern/kernel.asm	/^    f010dcd3:	ff d0                	callq  *%rax$/;"	l
f010dcd5	obj/kern/kernel.asm	/^    f010dcd5:	8b 55 bc             	mov    -0x44(%rbp),%edx$/;"	l
f010dcd8	obj/kern/kernel.asm	/^    f010dcd8:	8b 45 b8             	mov    -0x48(%rbp),%eax$/;"	l
f010dcdb	obj/kern/kernel.asm	/^    f010dcdb:	39 c2                	cmp    %eax,%edx$/;"	l
f010dcdd	obj/kern/kernel.asm	/^    f010dcdd:	0f 8f 99 00 00 00    	jg     fffffffff010dd7c <end+0xfffffffefe66c9dc>$/;"	l
f010dce3	obj/kern/kernel.asm	/^    f010dce3:	8b 45 bc             	mov    -0x44(%rbp),%eax$/;"	l
f010dce6	obj/kern/kernel.asm	/^    f010dce6:	48 63 d0             	movslq %eax,%rdx$/;"	l
f010dce9	obj/kern/kernel.asm	/^    f010dce9:	48 89 d0             	mov    %rdx,%rax$/;"	l
f010dcec	obj/kern/kernel.asm	/^    f010dcec:	48 01 c0             	add    %rax,%rax$/;"	l
f010dcef	obj/kern/kernel.asm	/^    f010dcef:	48 01 d0             	add    %rdx,%rax$/;"	l
f010dcf2	obj/kern/kernel.asm	/^    f010dcf2:	48 c1 e0 02          	shl    $0x2,%rax$/;"	l
f010dcf6	obj/kern/kernel.asm	/^    f010dcf6:	48 03 45 c8          	add    -0x38(%rbp),%rax$/;"	l
f010dcfa	obj/kern/kernel.asm	/^    f010dcfa:	8b 00                	mov    (%rax),%eax$/;"	l
f010dcfc	obj/kern/kernel.asm	/^    f010dcfc:	89 c0                	mov    %eax,%eax$/;"	l
f010dcfe	obj/kern/kernel.asm	/^    f010dcfe:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx$/;"	l
f010dd02	obj/kern/kernel.asm	/^    f010dd02:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx$/;"	l
f010dd06	obj/kern/kernel.asm	/^    f010dd06:	48 89 cb             	mov    %rcx,%rbx$/;"	l
f010dd09	obj/kern/kernel.asm	/^    f010dd09:	48 29 d3             	sub    %rdx,%rbx$/;"	l
f010dd0c	obj/kern/kernel.asm	/^    f010dd0c:	48 89 da             	mov    %rbx,%rdx$/;"	l
f010dd0f	obj/kern/kernel.asm	/^    f010dd0f:	48 39 d0             	cmp    %rdx,%rax$/;"	l
f010dd12	obj/kern/kernel.asm	/^    f010dd12:	7d 2a                	jge    fffffffff010dd3e <end+0xfffffffefe66c99e>$/;"	l
f010dd14	obj/kern/kernel.asm	/^    f010dd14:	8b 45 bc             	mov    -0x44(%rbp),%eax$/;"	l
f010dd17	obj/kern/kernel.asm	/^    f010dd17:	48 63 d0             	movslq %eax,%rdx$/;"	l
f010dd1a	obj/kern/kernel.asm	/^    f010dd1a:	48 89 d0             	mov    %rdx,%rax$/;"	l
f010dd1d	obj/kern/kernel.asm	/^    f010dd1d:	48 01 c0             	add    %rax,%rax$/;"	l
f010dd20	obj/kern/kernel.asm	/^    f010dd20:	48 01 d0             	add    %rdx,%rax$/;"	l
f010dd23	obj/kern/kernel.asm	/^    f010dd23:	48 c1 e0 02          	shl    $0x2,%rax$/;"	l
f010dd27	obj/kern/kernel.asm	/^    f010dd27:	48 03 45 c8          	add    -0x38(%rbp),%rax$/;"	l
f010dd2b	obj/kern/kernel.asm	/^    f010dd2b:	8b 00                	mov    (%rax),%eax$/;"	l
f010dd2d	obj/kern/kernel.asm	/^    f010dd2d:	89 c0                	mov    %eax,%eax$/;"	l
f010dd2f	obj/kern/kernel.asm	/^    f010dd2f:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010dd32	obj/kern/kernel.asm	/^    f010dd32:	48 03 55 d8          	add    -0x28(%rbp),%rdx$/;"	l
f010dd36	obj/kern/kernel.asm	/^    f010dd36:	48 8b 45 a0          	mov    -0x60(%rbp),%rax$/;"	l
f010dd3a	obj/kern/kernel.asm	/^    f010dd3a:	48 89 50 10          	mov    %rdx,0x10(%rax)$/;"	l
f010dd3e	obj/kern/kernel.asm	/^    f010dd3e:	8b 45 bc             	mov    -0x44(%rbp),%eax$/;"	l
f010dd41	obj/kern/kernel.asm	/^    f010dd41:	48 63 d0             	movslq %eax,%rdx$/;"	l
f010dd44	obj/kern/kernel.asm	/^    f010dd44:	48 89 d0             	mov    %rdx,%rax$/;"	l
f010dd47	obj/kern/kernel.asm	/^    f010dd47:	48 01 c0             	add    %rax,%rax$/;"	l
f010dd4a	obj/kern/kernel.asm	/^    f010dd4a:	48 01 d0             	add    %rdx,%rax$/;"	l
f010dd4d	obj/kern/kernel.asm	/^    f010dd4d:	48 c1 e0 02          	shl    $0x2,%rax$/;"	l
f010dd51	obj/kern/kernel.asm	/^    f010dd51:	48 03 45 c8          	add    -0x38(%rbp),%rax$/;"	l
f010dd55	obj/kern/kernel.asm	/^    f010dd55:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
f010dd58	obj/kern/kernel.asm	/^    f010dd58:	89 c2                	mov    %eax,%edx$/;"	l
f010dd5a	obj/kern/kernel.asm	/^    f010dd5a:	48 8b 45 a0          	mov    -0x60(%rbp),%rax$/;"	l
f010dd5e	obj/kern/kernel.asm	/^    f010dd5e:	48 89 50 20          	mov    %rdx,0x20(%rax)$/;"	l
f010dd62	obj/kern/kernel.asm	/^    f010dd62:	48 8b 45 a0          	mov    -0x60(%rbp),%rax$/;"	l
f010dd66	obj/kern/kernel.asm	/^    f010dd66:	48 8b 40 20          	mov    0x20(%rax),%rax$/;"	l
f010dd6a	obj/kern/kernel.asm	/^    f010dd6a:	48 29 45 a8          	sub    %rax,-0x58(%rbp)$/;"	l
f010dd6e	obj/kern/kernel.asm	/^    f010dd6e:	8b 45 bc             	mov    -0x44(%rbp),%eax$/;"	l
f010dd71	obj/kern/kernel.asm	/^    f010dd71:	89 45 b4             	mov    %eax,-0x4c(%rbp)$/;"	l
f010dd74	obj/kern/kernel.asm	/^    f010dd74:	8b 45 b8             	mov    -0x48(%rbp),%eax$/;"	l
f010dd77	obj/kern/kernel.asm	/^    f010dd77:	89 45 b0             	mov    %eax,-0x50(%rbp)$/;"	l
f010dd7a	obj/kern/kernel.asm	/^    f010dd7a:	eb 18                	jmp    fffffffff010dd94 <end+0xfffffffefe66c9f4>$/;"	l
f010dd7c	obj/kern/kernel.asm	/^    f010dd7c:	48 8b 45 a0          	mov    -0x60(%rbp),%rax$/;"	l
f010dd80	obj/kern/kernel.asm	/^    f010dd80:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx$/;"	l
f010dd84	obj/kern/kernel.asm	/^    f010dd84:	48 89 50 20          	mov    %rdx,0x20(%rax)$/;"	l
f010dd88	obj/kern/kernel.asm	/^    f010dd88:	8b 45 c4             	mov    -0x3c(%rbp),%eax$/;"	l
f010dd8b	obj/kern/kernel.asm	/^    f010dd8b:	89 45 b4             	mov    %eax,-0x4c(%rbp)$/;"	l
f010dd8e	obj/kern/kernel.asm	/^    f010dd8e:	8b 45 c0             	mov    -0x40(%rbp),%eax$/;"	l
f010dd91	obj/kern/kernel.asm	/^    f010dd91:	89 45 b0             	mov    %eax,-0x50(%rbp)$/;"	l
f010dd94	obj/kern/kernel.asm	/^    f010dd94:	48 8b 45 a0          	mov    -0x60(%rbp),%rax$/;"	l
f010dd98	obj/kern/kernel.asm	/^    f010dd98:	48 8b 40 10          	mov    0x10(%rax),%rax$/;"	l
f010dd9c	obj/kern/kernel.asm	/^    f010dd9c:	be 3a 00 00 00       	mov    $0x3a,%esi$/;"	l
f010dda1	obj/kern/kernel.asm	/^    f010dda1:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010dda4	obj/kern/kernel.asm	/^    f010dda4:	48 b8 0a ee 10 f0 00 	mov    $0xf010ee0a,%rax$/;"	l
f010ddab	obj/kern/kernel.asm	/^    f010ddab:	00 00 00 $/;"	l
f010ddae	obj/kern/kernel.asm	/^    f010ddae:	ff d0                	callq  *%rax$/;"	l
f010ddb0	obj/kern/kernel.asm	/^    f010ddb0:	89 c2                	mov    %eax,%edx$/;"	l
f010ddb2	obj/kern/kernel.asm	/^    f010ddb2:	48 8b 45 a0          	mov    -0x60(%rbp),%rax$/;"	l
f010ddb6	obj/kern/kernel.asm	/^    f010ddb6:	48 8b 40 10          	mov    0x10(%rax),%rax$/;"	l
f010ddba	obj/kern/kernel.asm	/^    f010ddba:	89 d1                	mov    %edx,%ecx$/;"	l
f010ddbc	obj/kern/kernel.asm	/^    f010ddbc:	29 c1                	sub    %eax,%ecx$/;"	l
f010ddbe	obj/kern/kernel.asm	/^    f010ddbe:	89 c8                	mov    %ecx,%eax$/;"	l
f010ddc0	obj/kern/kernel.asm	/^    f010ddc0:	89 c2                	mov    %eax,%edx$/;"	l
f010ddc2	obj/kern/kernel.asm	/^    f010ddc2:	48 8b 45 a0          	mov    -0x60(%rbp),%rax$/;"	l
f010ddc6	obj/kern/kernel.asm	/^    f010ddc6:	89 50 18             	mov    %edx,0x18(%rax)$/;"	l
f010ddc9	obj/kern/kernel.asm	/^    f010ddc9:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx$/;"	l
f010ddcd	obj/kern/kernel.asm	/^    f010ddcd:	48 8d 55 b0          	lea    -0x50(%rbp),%rdx$/;"	l
f010ddd1	obj/kern/kernel.asm	/^    f010ddd1:	48 8d 5d b4          	lea    -0x4c(%rbp),%rbx$/;"	l
f010ddd5	obj/kern/kernel.asm	/^    f010ddd5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f010ddd9	obj/kern/kernel.asm	/^    f010ddd9:	49 89 c8             	mov    %rcx,%r8$/;"	l
f010dddc	obj/kern/kernel.asm	/^    f010dddc:	b9 44 00 00 00       	mov    $0x44,%ecx$/;"	l
f010dde1	obj/kern/kernel.asm	/^    f010dde1:	48 89 de             	mov    %rbx,%rsi$/;"	l
f010dde4	obj/kern/kernel.asm	/^    f010dde4:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010dde7	obj/kern/kernel.asm	/^    f010dde7:	48 b8 a0 d9 10 f0 00 	mov    $0xf010d9a0,%rax$/;"	l
f010ddee	obj/kern/kernel.asm	/^    f010ddee:	00 00 00 $/;"	l
f010ddf1	obj/kern/kernel.asm	/^    f010ddf1:	ff d0                	callq  *%rax$/;"	l
f010ddf3	obj/kern/kernel.asm	/^    f010ddf3:	8b 55 b4             	mov    -0x4c(%rbp),%edx$/;"	l
f010ddf6	obj/kern/kernel.asm	/^    f010ddf6:	8b 45 b0             	mov    -0x50(%rbp),%eax$/;"	l
f010ddf9	obj/kern/kernel.asm	/^    f010ddf9:	39 c2                	cmp    %eax,%edx$/;"	l
f010ddfb	obj/kern/kernel.asm	/^    f010ddfb:	7e 0a                	jle    fffffffff010de07 <end+0xfffffffefe66ca67>$/;"	l
f010ddfd	obj/kern/kernel.asm	/^    f010ddfd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
f010de02	obj/kern/kernel.asm	/^    f010de02:	e9 57 01 00 00       	jmpq   fffffffff010df5e <end+0xfffffffefe66cbbe>$/;"	l
f010de07	obj/kern/kernel.asm	/^    f010de07:	8b 45 b4             	mov    -0x4c(%rbp),%eax$/;"	l
f010de0a	obj/kern/kernel.asm	/^    f010de0a:	48 63 d0             	movslq %eax,%rdx$/;"	l
f010de0d	obj/kern/kernel.asm	/^    f010de0d:	48 89 d0             	mov    %rdx,%rax$/;"	l
f010de10	obj/kern/kernel.asm	/^    f010de10:	48 01 c0             	add    %rax,%rax$/;"	l
f010de13	obj/kern/kernel.asm	/^    f010de13:	48 01 d0             	add    %rdx,%rax$/;"	l
f010de16	obj/kern/kernel.asm	/^    f010de16:	48 c1 e0 02          	shl    $0x2,%rax$/;"	l
f010de1a	obj/kern/kernel.asm	/^    f010de1a:	48 03 45 c8          	add    -0x38(%rbp),%rax$/;"	l
f010de1e	obj/kern/kernel.asm	/^    f010de1e:	0f b7 40 06          	movzwl 0x6(%rax),%eax$/;"	l
f010de22	obj/kern/kernel.asm	/^    f010de22:	0f b7 d0             	movzwl %ax,%edx$/;"	l
f010de25	obj/kern/kernel.asm	/^    f010de25:	48 8b 45 a0          	mov    -0x60(%rbp),%rax$/;"	l
f010de29	obj/kern/kernel.asm	/^    f010de29:	89 50 08             	mov    %edx,0x8(%rax)$/;"	l
f010de2c	obj/kern/kernel.asm	/^    f010de2c:	eb 09                	jmp    fffffffff010de37 <end+0xfffffffefe66ca97>$/;"	l
f010de2e	obj/kern/kernel.asm	/^    f010de2e:	8b 45 b4             	mov    -0x4c(%rbp),%eax$/;"	l
f010de31	obj/kern/kernel.asm	/^    f010de31:	83 e8 01             	sub    $0x1,%eax$/;"	l
f010de34	obj/kern/kernel.asm	/^    f010de34:	89 45 b4             	mov    %eax,-0x4c(%rbp)$/;"	l
f010de37	obj/kern/kernel.asm	/^    f010de37:	8b 55 b4             	mov    -0x4c(%rbp),%edx$/;"	l
f010de3a	obj/kern/kernel.asm	/^    f010de3a:	8b 45 c4             	mov    -0x3c(%rbp),%eax$/;"	l
f010de3d	obj/kern/kernel.asm	/^    f010de3d:	39 c2                	cmp    %eax,%edx$/;"	l
f010de3f	obj/kern/kernel.asm	/^    f010de3f:	7c 5c                	jl     fffffffff010de9d <end+0xfffffffefe66cafd>$/;"	l
f010de41	obj/kern/kernel.asm	/^    f010de41:	8b 45 b4             	mov    -0x4c(%rbp),%eax$/;"	l
f010de44	obj/kern/kernel.asm	/^    f010de44:	48 63 d0             	movslq %eax,%rdx$/;"	l
f010de47	obj/kern/kernel.asm	/^    f010de47:	48 89 d0             	mov    %rdx,%rax$/;"	l
f010de4a	obj/kern/kernel.asm	/^    f010de4a:	48 01 c0             	add    %rax,%rax$/;"	l
f010de4d	obj/kern/kernel.asm	/^    f010de4d:	48 01 d0             	add    %rdx,%rax$/;"	l
f010de50	obj/kern/kernel.asm	/^    f010de50:	48 c1 e0 02          	shl    $0x2,%rax$/;"	l
f010de54	obj/kern/kernel.asm	/^    f010de54:	48 03 45 c8          	add    -0x38(%rbp),%rax$/;"	l
f010de58	obj/kern/kernel.asm	/^    f010de58:	0f b6 40 04          	movzbl 0x4(%rax),%eax$/;"	l
f010de5c	obj/kern/kernel.asm	/^    f010de5c:	3c 84                	cmp    $0x84,%al$/;"	l
f010de5e	obj/kern/kernel.asm	/^    f010de5e:	74 3d                	je     fffffffff010de9d <end+0xfffffffefe66cafd>$/;"	l
f010de60	obj/kern/kernel.asm	/^    f010de60:	8b 45 b4             	mov    -0x4c(%rbp),%eax$/;"	l
f010de63	obj/kern/kernel.asm	/^    f010de63:	48 63 d0             	movslq %eax,%rdx$/;"	l
f010de66	obj/kern/kernel.asm	/^    f010de66:	48 89 d0             	mov    %rdx,%rax$/;"	l
f010de69	obj/kern/kernel.asm	/^    f010de69:	48 01 c0             	add    %rax,%rax$/;"	l
f010de6c	obj/kern/kernel.asm	/^    f010de6c:	48 01 d0             	add    %rdx,%rax$/;"	l
f010de6f	obj/kern/kernel.asm	/^    f010de6f:	48 c1 e0 02          	shl    $0x2,%rax$/;"	l
f010de73	obj/kern/kernel.asm	/^    f010de73:	48 03 45 c8          	add    -0x38(%rbp),%rax$/;"	l
f010de77	obj/kern/kernel.asm	/^    f010de77:	0f b6 40 04          	movzbl 0x4(%rax),%eax$/;"	l
f010de7b	obj/kern/kernel.asm	/^    f010de7b:	3c 64                	cmp    $0x64,%al$/;"	l
f010de7d	obj/kern/kernel.asm	/^    f010de7d:	75 af                	jne    fffffffff010de2e <end+0xfffffffefe66ca8e>$/;"	l
f010de7f	obj/kern/kernel.asm	/^    f010de7f:	8b 45 b4             	mov    -0x4c(%rbp),%eax$/;"	l
f010de82	obj/kern/kernel.asm	/^    f010de82:	48 63 d0             	movslq %eax,%rdx$/;"	l
f010de85	obj/kern/kernel.asm	/^    f010de85:	48 89 d0             	mov    %rdx,%rax$/;"	l
f010de88	obj/kern/kernel.asm	/^    f010de88:	48 01 c0             	add    %rax,%rax$/;"	l
f010de8b	obj/kern/kernel.asm	/^    f010de8b:	48 01 d0             	add    %rdx,%rax$/;"	l
f010de8e	obj/kern/kernel.asm	/^    f010de8e:	48 c1 e0 02          	shl    $0x2,%rax$/;"	l
f010de92	obj/kern/kernel.asm	/^    f010de92:	48 03 45 c8          	add    -0x38(%rbp),%rax$/;"	l
f010de96	obj/kern/kernel.asm	/^    f010de96:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
f010de99	obj/kern/kernel.asm	/^    f010de99:	85 c0                	test   %eax,%eax$/;"	l
f010de9b	obj/kern/kernel.asm	/^    f010de9b:	74 91                	je     fffffffff010de2e <end+0xfffffffefe66ca8e>$/;"	l
f010de9d	obj/kern/kernel.asm	/^    f010de9d:	8b 55 b4             	mov    -0x4c(%rbp),%edx$/;"	l
f010dea0	obj/kern/kernel.asm	/^    f010dea0:	8b 45 c4             	mov    -0x3c(%rbp),%eax$/;"	l
f010dea3	obj/kern/kernel.asm	/^    f010dea3:	39 c2                	cmp    %eax,%edx$/;"	l
f010dea5	obj/kern/kernel.asm	/^    f010dea5:	7c 5a                	jl     fffffffff010df01 <end+0xfffffffefe66cb61>$/;"	l
f010dea7	obj/kern/kernel.asm	/^    f010dea7:	8b 45 b4             	mov    -0x4c(%rbp),%eax$/;"	l
f010deaa	obj/kern/kernel.asm	/^    f010deaa:	48 63 d0             	movslq %eax,%rdx$/;"	l
f010dead	obj/kern/kernel.asm	/^    f010dead:	48 89 d0             	mov    %rdx,%rax$/;"	l
f010deb0	obj/kern/kernel.asm	/^    f010deb0:	48 01 c0             	add    %rax,%rax$/;"	l
f010deb3	obj/kern/kernel.asm	/^    f010deb3:	48 01 d0             	add    %rdx,%rax$/;"	l
f010deb6	obj/kern/kernel.asm	/^    f010deb6:	48 c1 e0 02          	shl    $0x2,%rax$/;"	l
f010deba	obj/kern/kernel.asm	/^    f010deba:	48 03 45 c8          	add    -0x38(%rbp),%rax$/;"	l
f010debe	obj/kern/kernel.asm	/^    f010debe:	8b 00                	mov    (%rax),%eax$/;"	l
f010dec0	obj/kern/kernel.asm	/^    f010dec0:	89 c0                	mov    %eax,%eax$/;"	l
f010dec2	obj/kern/kernel.asm	/^    f010dec2:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx$/;"	l
f010dec6	obj/kern/kernel.asm	/^    f010dec6:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx$/;"	l
f010deca	obj/kern/kernel.asm	/^    f010deca:	48 89 cb             	mov    %rcx,%rbx$/;"	l
f010decd	obj/kern/kernel.asm	/^    f010decd:	48 29 d3             	sub    %rdx,%rbx$/;"	l
f010ded0	obj/kern/kernel.asm	/^    f010ded0:	48 89 da             	mov    %rbx,%rdx$/;"	l
f010ded3	obj/kern/kernel.asm	/^    f010ded3:	48 39 d0             	cmp    %rdx,%rax$/;"	l
f010ded6	obj/kern/kernel.asm	/^    f010ded6:	7d 29                	jge    fffffffff010df01 <end+0xfffffffefe66cb61>$/;"	l
f010ded8	obj/kern/kernel.asm	/^    f010ded8:	8b 45 b4             	mov    -0x4c(%rbp),%eax$/;"	l
f010dedb	obj/kern/kernel.asm	/^    f010dedb:	48 63 d0             	movslq %eax,%rdx$/;"	l
f010dede	obj/kern/kernel.asm	/^    f010dede:	48 89 d0             	mov    %rdx,%rax$/;"	l
f010dee1	obj/kern/kernel.asm	/^    f010dee1:	48 01 c0             	add    %rax,%rax$/;"	l
f010dee4	obj/kern/kernel.asm	/^    f010dee4:	48 01 d0             	add    %rdx,%rax$/;"	l
f010dee7	obj/kern/kernel.asm	/^    f010dee7:	48 c1 e0 02          	shl    $0x2,%rax$/;"	l
f010deeb	obj/kern/kernel.asm	/^    f010deeb:	48 03 45 c8          	add    -0x38(%rbp),%rax$/;"	l
f010deef	obj/kern/kernel.asm	/^    f010deef:	8b 00                	mov    (%rax),%eax$/;"	l
f010def1	obj/kern/kernel.asm	/^    f010def1:	89 c0                	mov    %eax,%eax$/;"	l
f010def3	obj/kern/kernel.asm	/^    f010def3:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010def6	obj/kern/kernel.asm	/^    f010def6:	48 03 55 d8          	add    -0x28(%rbp),%rdx$/;"	l
f010defa	obj/kern/kernel.asm	/^    f010defa:	48 8b 45 a0          	mov    -0x60(%rbp),%rax$/;"	l
f010defe	obj/kern/kernel.asm	/^    f010defe:	48 89 10             	mov    %rdx,(%rax)$/;"	l
f010df01	obj/kern/kernel.asm	/^    f010df01:	8b 55 bc             	mov    -0x44(%rbp),%edx$/;"	l
f010df04	obj/kern/kernel.asm	/^    f010df04:	8b 45 b8             	mov    -0x48(%rbp),%eax$/;"	l
f010df07	obj/kern/kernel.asm	/^    f010df07:	39 c2                	cmp    %eax,%edx$/;"	l
f010df09	obj/kern/kernel.asm	/^    f010df09:	7d 4e                	jge    fffffffff010df59 <end+0xfffffffefe66cbb9>$/;"	l
f010df0b	obj/kern/kernel.asm	/^    f010df0b:	8b 45 bc             	mov    -0x44(%rbp),%eax$/;"	l
f010df0e	obj/kern/kernel.asm	/^    f010df0e:	83 c0 01             	add    $0x1,%eax$/;"	l
f010df11	obj/kern/kernel.asm	/^    f010df11:	89 45 b4             	mov    %eax,-0x4c(%rbp)$/;"	l
f010df14	obj/kern/kernel.asm	/^    f010df14:	eb 1a                	jmp    fffffffff010df30 <end+0xfffffffefe66cb90>$/;"	l
f010df16	obj/kern/kernel.asm	/^    f010df16:	48 8b 45 a0          	mov    -0x60(%rbp),%rax$/;"	l
f010df1a	obj/kern/kernel.asm	/^    f010df1a:	8b 40 28             	mov    0x28(%rax),%eax$/;"	l
f010df1d	obj/kern/kernel.asm	/^    f010df1d:	8d 50 01             	lea    0x1(%rax),%edx$/;"	l
f010df20	obj/kern/kernel.asm	/^    f010df20:	48 8b 45 a0          	mov    -0x60(%rbp),%rax$/;"	l
f010df24	obj/kern/kernel.asm	/^    f010df24:	89 50 28             	mov    %edx,0x28(%rax)$/;"	l
f010df27	obj/kern/kernel.asm	/^    f010df27:	8b 45 b4             	mov    -0x4c(%rbp),%eax$/;"	l
f010df2a	obj/kern/kernel.asm	/^    f010df2a:	83 c0 01             	add    $0x1,%eax$/;"	l
f010df2d	obj/kern/kernel.asm	/^    f010df2d:	89 45 b4             	mov    %eax,-0x4c(%rbp)$/;"	l
f010df30	obj/kern/kernel.asm	/^    f010df30:	8b 55 b4             	mov    -0x4c(%rbp),%edx$/;"	l
f010df33	obj/kern/kernel.asm	/^    f010df33:	8b 45 b8             	mov    -0x48(%rbp),%eax$/;"	l
f010df36	obj/kern/kernel.asm	/^    f010df36:	39 c2                	cmp    %eax,%edx$/;"	l
f010df38	obj/kern/kernel.asm	/^    f010df38:	7d 1f                	jge    fffffffff010df59 <end+0xfffffffefe66cbb9>$/;"	l
f010df3a	obj/kern/kernel.asm	/^    f010df3a:	8b 45 b4             	mov    -0x4c(%rbp),%eax$/;"	l
f010df3d	obj/kern/kernel.asm	/^    f010df3d:	48 63 d0             	movslq %eax,%rdx$/;"	l
f010df40	obj/kern/kernel.asm	/^    f010df40:	48 89 d0             	mov    %rdx,%rax$/;"	l
f010df43	obj/kern/kernel.asm	/^    f010df43:	48 01 c0             	add    %rax,%rax$/;"	l
f010df46	obj/kern/kernel.asm	/^    f010df46:	48 01 d0             	add    %rdx,%rax$/;"	l
f010df49	obj/kern/kernel.asm	/^    f010df49:	48 c1 e0 02          	shl    $0x2,%rax$/;"	l
f010df4d	obj/kern/kernel.asm	/^    f010df4d:	48 03 45 c8          	add    -0x38(%rbp),%rax$/;"	l
f010df51	obj/kern/kernel.asm	/^    f010df51:	0f b6 40 04          	movzbl 0x4(%rax),%eax$/;"	l
f010df55	obj/kern/kernel.asm	/^    f010df55:	3c a0                	cmp    $0xa0,%al$/;"	l
f010df57	obj/kern/kernel.asm	/^    f010df57:	74 bd                	je     fffffffff010df16 <end+0xfffffffefe66cb76>$/;"	l
f010df59	obj/kern/kernel.asm	/^    f010df59:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010df5e	obj/kern/kernel.asm	/^    f010df5e:	48 83 c4 58          	add    $0x58,%rsp$/;"	l
f010df62	obj/kern/kernel.asm	/^    f010df62:	5b                   	pop    %rbx$/;"	l
f010df63	obj/kern/kernel.asm	/^    f010df63:	c9                   	leaveq $/;"	l
f010df64	obj/kern/kernel.asm	/^    f010df64:	c3                   	retq   $/;"	l
f010df65	obj/kern/kernel.asm	/^    f010df65:	00 00                	add    %al,(%rax)$/;"	l
f010df68	obj/kern/kernel.asm	/^    f010df68:	55                   	push   %rbp$/;"	l
f010df69	obj/kern/kernel.asm	/^    f010df69:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010df6c	obj/kern/kernel.asm	/^    f010df6c:	53                   	push   %rbx$/;"	l
f010df6d	obj/kern/kernel.asm	/^    f010df6d:	48 83 ec 48          	sub    $0x48,%rsp$/;"	l
f010df71	obj/kern/kernel.asm	/^    f010df71:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
f010df75	obj/kern/kernel.asm	/^    f010df75:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
f010df79	obj/kern/kernel.asm	/^    f010df79:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)$/;"	l
f010df7d	obj/kern/kernel.asm	/^    f010df7d:	89 4d d4             	mov    %ecx,-0x2c(%rbp)$/;"	l
f010df80	obj/kern/kernel.asm	/^    f010df80:	44 89 45 d0          	mov    %r8d,-0x30(%rbp)$/;"	l
f010df84	obj/kern/kernel.asm	/^    f010df84:	44 89 4d cc          	mov    %r9d,-0x34(%rbp)$/;"	l
f010df88	obj/kern/kernel.asm	/^    f010df88:	8b 45 d4             	mov    -0x2c(%rbp),%eax$/;"	l
f010df8b	obj/kern/kernel.asm	/^    f010df8b:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax$/;"	l
f010df8f	obj/kern/kernel.asm	/^    f010df8f:	77 57                	ja     fffffffff010dfe8 <end+0xfffffffefe66cc48>$/;"	l
f010df91	obj/kern/kernel.asm	/^    f010df91:	8b 45 d0             	mov    -0x30(%rbp),%eax$/;"	l
f010df94	obj/kern/kernel.asm	/^    f010df94:	8d 78 ff             	lea    -0x1(%rax),%edi$/;"	l
f010df97	obj/kern/kernel.asm	/^    f010df97:	8b 45 d4             	mov    -0x2c(%rbp),%eax$/;"	l
f010df9a	obj/kern/kernel.asm	/^    f010df9a:	48 89 45 b8          	mov    %rax,-0x48(%rbp)$/;"	l
f010df9e	obj/kern/kernel.asm	/^    f010df9e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f010dfa2	obj/kern/kernel.asm	/^    f010dfa2:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010dfa7	obj/kern/kernel.asm	/^    f010dfa7:	48 f7 75 b8          	divq   -0x48(%rbp)$/;"	l
f010dfab	obj/kern/kernel.asm	/^    f010dfab:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010dfae	obj/kern/kernel.asm	/^    f010dfae:	8b 75 cc             	mov    -0x34(%rbp),%esi$/;"	l
f010dfb1	obj/kern/kernel.asm	/^    f010dfb1:	8b 4d d4             	mov    -0x2c(%rbp),%ecx$/;"	l
f010dfb4	obj/kern/kernel.asm	/^    f010dfb4:	48 8b 5d e0          	mov    -0x20(%rbp),%rbx$/;"	l
f010dfb8	obj/kern/kernel.asm	/^    f010dfb8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010dfbc	obj/kern/kernel.asm	/^    f010dfbc:	41 89 f1             	mov    %esi,%r9d$/;"	l
f010dfbf	obj/kern/kernel.asm	/^    f010dfbf:	41 89 f8             	mov    %edi,%r8d$/;"	l
f010dfc2	obj/kern/kernel.asm	/^    f010dfc2:	48 89 de             	mov    %rbx,%rsi$/;"	l
f010dfc5	obj/kern/kernel.asm	/^    f010dfc5:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010dfc8	obj/kern/kernel.asm	/^    f010dfc8:	48 b8 68 df 10 f0 00 	mov    $0xf010df68,%rax$/;"	l
f010dfcf	obj/kern/kernel.asm	/^    f010dfcf:	00 00 00 $/;"	l
f010dfd2	obj/kern/kernel.asm	/^    f010dfd2:	ff d0                	callq  *%rax$/;"	l
f010dfd4	obj/kern/kernel.asm	/^    f010dfd4:	eb 1c                	jmp    fffffffff010dff2 <end+0xfffffffefe66cc52>$/;"	l
f010dfd6	obj/kern/kernel.asm	/^    f010dfd6:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx$/;"	l
f010dfda	obj/kern/kernel.asm	/^    f010dfda:	8b 45 cc             	mov    -0x34(%rbp),%eax$/;"	l
f010dfdd	obj/kern/kernel.asm	/^    f010dfdd:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx$/;"	l
f010dfe1	obj/kern/kernel.asm	/^    f010dfe1:	48 89 d6             	mov    %rdx,%rsi$/;"	l
f010dfe4	obj/kern/kernel.asm	/^    f010dfe4:	89 c7                	mov    %eax,%edi$/;"	l
f010dfe6	obj/kern/kernel.asm	/^    f010dfe6:	ff d1                	callq  *%rcx$/;"	l
f010dfe8	obj/kern/kernel.asm	/^    f010dfe8:	83 6d d0 01          	subl   $0x1,-0x30(%rbp)$/;"	l
f010dfec	obj/kern/kernel.asm	/^    f010dfec:	83 7d d0 00          	cmpl   $0x0,-0x30(%rbp)$/;"	l
f010dff0	obj/kern/kernel.asm	/^    f010dff0:	7f e4                	jg     fffffffff010dfd6 <end+0xfffffffefe66cc36>$/;"	l
f010dff2	obj/kern/kernel.asm	/^    f010dff2:	8b 4d d4             	mov    -0x2c(%rbp),%ecx$/;"	l
f010dff5	obj/kern/kernel.asm	/^    f010dff5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f010dff9	obj/kern/kernel.asm	/^    f010dff9:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
f010dffe	obj/kern/kernel.asm	/^    f010dffe:	48 f7 f1             	div    %rcx$/;"	l
f010e001	obj/kern/kernel.asm	/^    f010e001:	48 89 d0             	mov    %rdx,%rax$/;"	l
f010e004	obj/kern/kernel.asm	/^    f010e004:	48 ba 58 31 11 f0 00 	mov    $0xf0113158,%rdx$/;"	l
f010e00b	obj/kern/kernel.asm	/^    f010e00b:	00 00 00 $/;"	l
f010e00e	obj/kern/kernel.asm	/^    f010e00e:	0f b6 04 02          	movzbl (%rdx,%rax,1),%eax$/;"	l
f010e012	obj/kern/kernel.asm	/^    f010e012:	0f be c0             	movsbl %al,%eax$/;"	l
f010e015	obj/kern/kernel.asm	/^    f010e015:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx$/;"	l
f010e019	obj/kern/kernel.asm	/^    f010e019:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx$/;"	l
f010e01d	obj/kern/kernel.asm	/^    f010e01d:	48 89 d6             	mov    %rdx,%rsi$/;"	l
f010e020	obj/kern/kernel.asm	/^    f010e020:	89 c7                	mov    %eax,%edi$/;"	l
f010e022	obj/kern/kernel.asm	/^    f010e022:	ff d1                	callq  *%rcx$/;"	l
f010e024	obj/kern/kernel.asm	/^    f010e024:	48 83 c4 48          	add    $0x48,%rsp$/;"	l
f010e028	obj/kern/kernel.asm	/^    f010e028:	5b                   	pop    %rbx$/;"	l
f010e029	obj/kern/kernel.asm	/^    f010e029:	c9                   	leaveq $/;"	l
f010e02a	obj/kern/kernel.asm	/^    f010e02a:	c3                   	retq   $/;"	l
f010e02b	obj/kern/kernel.asm	/^    f010e02b:	55                   	push   %rbp$/;"	l
f010e02c	obj/kern/kernel.asm	/^    f010e02c:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010e02f	obj/kern/kernel.asm	/^    f010e02f:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
f010e033	obj/kern/kernel.asm	/^    f010e033:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
f010e037	obj/kern/kernel.asm	/^    f010e037:	89 75 e4             	mov    %esi,-0x1c(%rbp)$/;"	l
f010e03a	obj/kern/kernel.asm	/^    f010e03a:	83 7d e4 01          	cmpl   $0x1,-0x1c(%rbp)$/;"	l
f010e03e	obj/kern/kernel.asm	/^    f010e03e:	7e 3b                	jle    fffffffff010e07b <end+0xfffffffefe66ccdb>$/;"	l
f010e040	obj/kern/kernel.asm	/^    f010e040:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010e044	obj/kern/kernel.asm	/^    f010e044:	8b 10                	mov    (%rax),%edx$/;"	l
f010e046	obj/kern/kernel.asm	/^    f010e046:	83 fa 2f             	cmp    $0x2f,%edx$/;"	l
f010e049	obj/kern/kernel.asm	/^    f010e049:	77 15                	ja     fffffffff010e060 <end+0xfffffffefe66ccc0>$/;"	l
f010e04b	obj/kern/kernel.asm	/^    f010e04b:	48 8b 48 10          	mov    0x10(%rax),%rcx$/;"	l
f010e04f	obj/kern/kernel.asm	/^    f010e04f:	8b 10                	mov    (%rax),%edx$/;"	l
f010e051	obj/kern/kernel.asm	/^    f010e051:	89 d2                	mov    %edx,%edx$/;"	l
f010e053	obj/kern/kernel.asm	/^    f010e053:	48 8d 14 11          	lea    (%rcx,%rdx,1),%rdx$/;"	l
f010e057	obj/kern/kernel.asm	/^    f010e057:	8b 08                	mov    (%rax),%ecx$/;"	l
f010e059	obj/kern/kernel.asm	/^    f010e059:	83 c1 08             	add    $0x8,%ecx$/;"	l
f010e05c	obj/kern/kernel.asm	/^    f010e05c:	89 08                	mov    %ecx,(%rax)$/;"	l
f010e05e	obj/kern/kernel.asm	/^    f010e05e:	eb 0f                	jmp    fffffffff010e06f <end+0xfffffffefe66cccf>$/;"	l
f010e060	obj/kern/kernel.asm	/^    f010e060:	48 8b 48 08          	mov    0x8(%rax),%rcx$/;"	l
f010e064	obj/kern/kernel.asm	/^    f010e064:	48 89 ca             	mov    %rcx,%rdx$/;"	l
f010e067	obj/kern/kernel.asm	/^    f010e067:	48 83 c1 08          	add    $0x8,%rcx$/;"	l
f010e06b	obj/kern/kernel.asm	/^    f010e06b:	48 89 48 08          	mov    %rcx,0x8(%rax)$/;"	l
f010e06f	obj/kern/kernel.asm	/^    f010e06f:	48 89 d0             	mov    %rdx,%rax$/;"	l
f010e072	obj/kern/kernel.asm	/^    f010e072:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010e075	obj/kern/kernel.asm	/^    f010e075:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
f010e079	obj/kern/kernel.asm	/^    f010e079:	eb 7b                	jmp    fffffffff010e0f6 <end+0xfffffffefe66cd56>$/;"	l
f010e07b	obj/kern/kernel.asm	/^    f010e07b:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)$/;"	l
f010e07f	obj/kern/kernel.asm	/^    f010e07f:	74 3b                	je     fffffffff010e0bc <end+0xfffffffefe66cd1c>$/;"	l
f010e081	obj/kern/kernel.asm	/^    f010e081:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010e085	obj/kern/kernel.asm	/^    f010e085:	8b 10                	mov    (%rax),%edx$/;"	l
f010e087	obj/kern/kernel.asm	/^    f010e087:	83 fa 2f             	cmp    $0x2f,%edx$/;"	l
f010e08a	obj/kern/kernel.asm	/^    f010e08a:	77 15                	ja     fffffffff010e0a1 <end+0xfffffffefe66cd01>$/;"	l
f010e08c	obj/kern/kernel.asm	/^    f010e08c:	48 8b 48 10          	mov    0x10(%rax),%rcx$/;"	l
f010e090	obj/kern/kernel.asm	/^    f010e090:	8b 10                	mov    (%rax),%edx$/;"	l
f010e092	obj/kern/kernel.asm	/^    f010e092:	89 d2                	mov    %edx,%edx$/;"	l
f010e094	obj/kern/kernel.asm	/^    f010e094:	48 8d 14 11          	lea    (%rcx,%rdx,1),%rdx$/;"	l
f010e098	obj/kern/kernel.asm	/^    f010e098:	8b 08                	mov    (%rax),%ecx$/;"	l
f010e09a	obj/kern/kernel.asm	/^    f010e09a:	83 c1 08             	add    $0x8,%ecx$/;"	l
f010e09d	obj/kern/kernel.asm	/^    f010e09d:	89 08                	mov    %ecx,(%rax)$/;"	l
f010e09f	obj/kern/kernel.asm	/^    f010e09f:	eb 0f                	jmp    fffffffff010e0b0 <end+0xfffffffefe66cd10>$/;"	l
f010e0a1	obj/kern/kernel.asm	/^    f010e0a1:	48 8b 48 08          	mov    0x8(%rax),%rcx$/;"	l
f010e0a5	obj/kern/kernel.asm	/^    f010e0a5:	48 89 ca             	mov    %rcx,%rdx$/;"	l
f010e0a8	obj/kern/kernel.asm	/^    f010e0a8:	48 83 c1 08          	add    $0x8,%rcx$/;"	l
f010e0ac	obj/kern/kernel.asm	/^    f010e0ac:	48 89 48 08          	mov    %rcx,0x8(%rax)$/;"	l
f010e0b0	obj/kern/kernel.asm	/^    f010e0b0:	48 89 d0             	mov    %rdx,%rax$/;"	l
f010e0b3	obj/kern/kernel.asm	/^    f010e0b3:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010e0b6	obj/kern/kernel.asm	/^    f010e0b6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
f010e0ba	obj/kern/kernel.asm	/^    f010e0ba:	eb 3a                	jmp    fffffffff010e0f6 <end+0xfffffffefe66cd56>$/;"	l
f010e0bc	obj/kern/kernel.asm	/^    f010e0bc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010e0c0	obj/kern/kernel.asm	/^    f010e0c0:	8b 10                	mov    (%rax),%edx$/;"	l
f010e0c2	obj/kern/kernel.asm	/^    f010e0c2:	83 fa 2f             	cmp    $0x2f,%edx$/;"	l
f010e0c5	obj/kern/kernel.asm	/^    f010e0c5:	77 15                	ja     fffffffff010e0dc <end+0xfffffffefe66cd3c>$/;"	l
f010e0c7	obj/kern/kernel.asm	/^    f010e0c7:	48 8b 48 10          	mov    0x10(%rax),%rcx$/;"	l
f010e0cb	obj/kern/kernel.asm	/^    f010e0cb:	8b 10                	mov    (%rax),%edx$/;"	l
f010e0cd	obj/kern/kernel.asm	/^    f010e0cd:	89 d2                	mov    %edx,%edx$/;"	l
f010e0cf	obj/kern/kernel.asm	/^    f010e0cf:	48 8d 14 11          	lea    (%rcx,%rdx,1),%rdx$/;"	l
f010e0d3	obj/kern/kernel.asm	/^    f010e0d3:	8b 08                	mov    (%rax),%ecx$/;"	l
f010e0d5	obj/kern/kernel.asm	/^    f010e0d5:	83 c1 08             	add    $0x8,%ecx$/;"	l
f010e0d8	obj/kern/kernel.asm	/^    f010e0d8:	89 08                	mov    %ecx,(%rax)$/;"	l
f010e0da	obj/kern/kernel.asm	/^    f010e0da:	eb 0f                	jmp    fffffffff010e0eb <end+0xfffffffefe66cd4b>$/;"	l
f010e0dc	obj/kern/kernel.asm	/^    f010e0dc:	48 8b 48 08          	mov    0x8(%rax),%rcx$/;"	l
f010e0e0	obj/kern/kernel.asm	/^    f010e0e0:	48 89 ca             	mov    %rcx,%rdx$/;"	l
f010e0e3	obj/kern/kernel.asm	/^    f010e0e3:	48 83 c1 08          	add    $0x8,%rcx$/;"	l
f010e0e7	obj/kern/kernel.asm	/^    f010e0e7:	48 89 48 08          	mov    %rcx,0x8(%rax)$/;"	l
f010e0eb	obj/kern/kernel.asm	/^    f010e0eb:	48 89 d0             	mov    %rdx,%rax$/;"	l
f010e0ee	obj/kern/kernel.asm	/^    f010e0ee:	8b 00                	mov    (%rax),%eax$/;"	l
f010e0f0	obj/kern/kernel.asm	/^    f010e0f0:	89 c0                	mov    %eax,%eax$/;"	l
f010e0f2	obj/kern/kernel.asm	/^    f010e0f2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
f010e0f6	obj/kern/kernel.asm	/^    f010e0f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f010e0fa	obj/kern/kernel.asm	/^    f010e0fa:	c9                   	leaveq $/;"	l
f010e0fb	obj/kern/kernel.asm	/^    f010e0fb:	c3                   	retq   $/;"	l
f010e0fc	obj/kern/kernel.asm	/^    f010e0fc:	55                   	push   %rbp$/;"	l
f010e0fd	obj/kern/kernel.asm	/^    f010e0fd:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010e100	obj/kern/kernel.asm	/^    f010e100:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
f010e104	obj/kern/kernel.asm	/^    f010e104:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
f010e108	obj/kern/kernel.asm	/^    f010e108:	89 75 e4             	mov    %esi,-0x1c(%rbp)$/;"	l
f010e10b	obj/kern/kernel.asm	/^    f010e10b:	83 7d e4 01          	cmpl   $0x1,-0x1c(%rbp)$/;"	l
f010e10f	obj/kern/kernel.asm	/^    f010e10f:	7e 3b                	jle    fffffffff010e14c <end+0xfffffffefe66cdac>$/;"	l
f010e111	obj/kern/kernel.asm	/^    f010e111:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010e115	obj/kern/kernel.asm	/^    f010e115:	8b 10                	mov    (%rax),%edx$/;"	l
f010e117	obj/kern/kernel.asm	/^    f010e117:	83 fa 2f             	cmp    $0x2f,%edx$/;"	l
f010e11a	obj/kern/kernel.asm	/^    f010e11a:	77 15                	ja     fffffffff010e131 <end+0xfffffffefe66cd91>$/;"	l
f010e11c	obj/kern/kernel.asm	/^    f010e11c:	48 8b 48 10          	mov    0x10(%rax),%rcx$/;"	l
f010e120	obj/kern/kernel.asm	/^    f010e120:	8b 10                	mov    (%rax),%edx$/;"	l
f010e122	obj/kern/kernel.asm	/^    f010e122:	89 d2                	mov    %edx,%edx$/;"	l
f010e124	obj/kern/kernel.asm	/^    f010e124:	48 8d 14 11          	lea    (%rcx,%rdx,1),%rdx$/;"	l
f010e128	obj/kern/kernel.asm	/^    f010e128:	8b 08                	mov    (%rax),%ecx$/;"	l
f010e12a	obj/kern/kernel.asm	/^    f010e12a:	83 c1 08             	add    $0x8,%ecx$/;"	l
f010e12d	obj/kern/kernel.asm	/^    f010e12d:	89 08                	mov    %ecx,(%rax)$/;"	l
f010e12f	obj/kern/kernel.asm	/^    f010e12f:	eb 0f                	jmp    fffffffff010e140 <end+0xfffffffefe66cda0>$/;"	l
f010e131	obj/kern/kernel.asm	/^    f010e131:	48 8b 48 08          	mov    0x8(%rax),%rcx$/;"	l
f010e135	obj/kern/kernel.asm	/^    f010e135:	48 89 ca             	mov    %rcx,%rdx$/;"	l
f010e138	obj/kern/kernel.asm	/^    f010e138:	48 83 c1 08          	add    $0x8,%rcx$/;"	l
f010e13c	obj/kern/kernel.asm	/^    f010e13c:	48 89 48 08          	mov    %rcx,0x8(%rax)$/;"	l
f010e140	obj/kern/kernel.asm	/^    f010e140:	48 89 d0             	mov    %rdx,%rax$/;"	l
f010e143	obj/kern/kernel.asm	/^    f010e143:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010e146	obj/kern/kernel.asm	/^    f010e146:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
f010e14a	obj/kern/kernel.asm	/^    f010e14a:	eb 7b                	jmp    fffffffff010e1c7 <end+0xfffffffefe66ce27>$/;"	l
f010e14c	obj/kern/kernel.asm	/^    f010e14c:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)$/;"	l
f010e150	obj/kern/kernel.asm	/^    f010e150:	74 3b                	je     fffffffff010e18d <end+0xfffffffefe66cded>$/;"	l
f010e152	obj/kern/kernel.asm	/^    f010e152:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010e156	obj/kern/kernel.asm	/^    f010e156:	8b 10                	mov    (%rax),%edx$/;"	l
f010e158	obj/kern/kernel.asm	/^    f010e158:	83 fa 2f             	cmp    $0x2f,%edx$/;"	l
f010e15b	obj/kern/kernel.asm	/^    f010e15b:	77 15                	ja     fffffffff010e172 <end+0xfffffffefe66cdd2>$/;"	l
f010e15d	obj/kern/kernel.asm	/^    f010e15d:	48 8b 48 10          	mov    0x10(%rax),%rcx$/;"	l
f010e161	obj/kern/kernel.asm	/^    f010e161:	8b 10                	mov    (%rax),%edx$/;"	l
f010e163	obj/kern/kernel.asm	/^    f010e163:	89 d2                	mov    %edx,%edx$/;"	l
f010e165	obj/kern/kernel.asm	/^    f010e165:	48 8d 14 11          	lea    (%rcx,%rdx,1),%rdx$/;"	l
f010e169	obj/kern/kernel.asm	/^    f010e169:	8b 08                	mov    (%rax),%ecx$/;"	l
f010e16b	obj/kern/kernel.asm	/^    f010e16b:	83 c1 08             	add    $0x8,%ecx$/;"	l
f010e16e	obj/kern/kernel.asm	/^    f010e16e:	89 08                	mov    %ecx,(%rax)$/;"	l
f010e170	obj/kern/kernel.asm	/^    f010e170:	eb 0f                	jmp    fffffffff010e181 <end+0xfffffffefe66cde1>$/;"	l
f010e172	obj/kern/kernel.asm	/^    f010e172:	48 8b 48 08          	mov    0x8(%rax),%rcx$/;"	l
f010e176	obj/kern/kernel.asm	/^    f010e176:	48 89 ca             	mov    %rcx,%rdx$/;"	l
f010e179	obj/kern/kernel.asm	/^    f010e179:	48 83 c1 08          	add    $0x8,%rcx$/;"	l
f010e17d	obj/kern/kernel.asm	/^    f010e17d:	48 89 48 08          	mov    %rcx,0x8(%rax)$/;"	l
f010e181	obj/kern/kernel.asm	/^    f010e181:	48 89 d0             	mov    %rdx,%rax$/;"	l
f010e184	obj/kern/kernel.asm	/^    f010e184:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010e187	obj/kern/kernel.asm	/^    f010e187:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
f010e18b	obj/kern/kernel.asm	/^    f010e18b:	eb 3a                	jmp    fffffffff010e1c7 <end+0xfffffffefe66ce27>$/;"	l
f010e18d	obj/kern/kernel.asm	/^    f010e18d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010e191	obj/kern/kernel.asm	/^    f010e191:	8b 10                	mov    (%rax),%edx$/;"	l
f010e193	obj/kern/kernel.asm	/^    f010e193:	83 fa 2f             	cmp    $0x2f,%edx$/;"	l
f010e196	obj/kern/kernel.asm	/^    f010e196:	77 15                	ja     fffffffff010e1ad <end+0xfffffffefe66ce0d>$/;"	l
f010e198	obj/kern/kernel.asm	/^    f010e198:	48 8b 48 10          	mov    0x10(%rax),%rcx$/;"	l
f010e19c	obj/kern/kernel.asm	/^    f010e19c:	8b 10                	mov    (%rax),%edx$/;"	l
f010e19e	obj/kern/kernel.asm	/^    f010e19e:	89 d2                	mov    %edx,%edx$/;"	l
f010e1a0	obj/kern/kernel.asm	/^    f010e1a0:	48 8d 14 11          	lea    (%rcx,%rdx,1),%rdx$/;"	l
f010e1a4	obj/kern/kernel.asm	/^    f010e1a4:	8b 08                	mov    (%rax),%ecx$/;"	l
f010e1a6	obj/kern/kernel.asm	/^    f010e1a6:	83 c1 08             	add    $0x8,%ecx$/;"	l
f010e1a9	obj/kern/kernel.asm	/^    f010e1a9:	89 08                	mov    %ecx,(%rax)$/;"	l
f010e1ab	obj/kern/kernel.asm	/^    f010e1ab:	eb 0f                	jmp    fffffffff010e1bc <end+0xfffffffefe66ce1c>$/;"	l
f010e1ad	obj/kern/kernel.asm	/^    f010e1ad:	48 8b 48 08          	mov    0x8(%rax),%rcx$/;"	l
f010e1b1	obj/kern/kernel.asm	/^    f010e1b1:	48 89 ca             	mov    %rcx,%rdx$/;"	l
f010e1b4	obj/kern/kernel.asm	/^    f010e1b4:	48 83 c1 08          	add    $0x8,%rcx$/;"	l
f010e1b8	obj/kern/kernel.asm	/^    f010e1b8:	48 89 48 08          	mov    %rcx,0x8(%rax)$/;"	l
f010e1bc	obj/kern/kernel.asm	/^    f010e1bc:	48 89 d0             	mov    %rdx,%rax$/;"	l
f010e1bf	obj/kern/kernel.asm	/^    f010e1bf:	8b 00                	mov    (%rax),%eax$/;"	l
f010e1c1	obj/kern/kernel.asm	/^    f010e1c1:	48 98                	cltq   $/;"	l
f010e1c3	obj/kern/kernel.asm	/^    f010e1c3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
f010e1c7	obj/kern/kernel.asm	/^    f010e1c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f010e1cb	obj/kern/kernel.asm	/^    f010e1cb:	c9                   	leaveq $/;"	l
f010e1cc	obj/kern/kernel.asm	/^    f010e1cc:	c3                   	retq   $/;"	l
f010e1cd	obj/kern/kernel.asm	/^    f010e1cd:	55                   	push   %rbp$/;"	l
f010e1ce	obj/kern/kernel.asm	/^    f010e1ce:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010e1d1	obj/kern/kernel.asm	/^    f010e1d1:	41 54                	push   %r12$/;"	l
f010e1d3	obj/kern/kernel.asm	/^    f010e1d3:	53                   	push   %rbx$/;"	l
f010e1d4	obj/kern/kernel.asm	/^    f010e1d4:	48 83 ec 60          	sub    $0x60,%rsp$/;"	l
f010e1d8	obj/kern/kernel.asm	/^    f010e1d8:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)$/;"	l
f010e1dc	obj/kern/kernel.asm	/^    f010e1dc:	48 89 75 a0          	mov    %rsi,-0x60(%rbp)$/;"	l
f010e1e0	obj/kern/kernel.asm	/^    f010e1e0:	48 89 55 98          	mov    %rdx,-0x68(%rbp)$/;"	l
f010e1e4	obj/kern/kernel.asm	/^    f010e1e4:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)$/;"	l
f010e1e8	obj/kern/kernel.asm	/^    f010e1e8:	48 8d 45 b0          	lea    -0x50(%rbp),%rax$/;"	l
f010e1ec	obj/kern/kernel.asm	/^    f010e1ec:	48 8b 55 90          	mov    -0x70(%rbp),%rdx$/;"	l
f010e1f0	obj/kern/kernel.asm	/^    f010e1f0:	48 8b 0a             	mov    (%rdx),%rcx$/;"	l
f010e1f3	obj/kern/kernel.asm	/^    f010e1f3:	48 89 08             	mov    %rcx,(%rax)$/;"	l
f010e1f6	obj/kern/kernel.asm	/^    f010e1f6:	48 8b 4a 08          	mov    0x8(%rdx),%rcx$/;"	l
f010e1fa	obj/kern/kernel.asm	/^    f010e1fa:	48 89 48 08          	mov    %rcx,0x8(%rax)$/;"	l
f010e1fe	obj/kern/kernel.asm	/^    f010e1fe:	48 8b 52 10          	mov    0x10(%rdx),%rdx$/;"	l
f010e202	obj/kern/kernel.asm	/^    f010e202:	48 89 50 10          	mov    %rdx,0x10(%rax)$/;"	l
f010e206	obj/kern/kernel.asm	/^    f010e206:	eb 17                	jmp    fffffffff010e21f <end+0xfffffffefe66ce7f>$/;"	l
f010e208	obj/kern/kernel.asm	/^    f010e208:	85 db                	test   %ebx,%ebx$/;"	l
f010e20a	obj/kern/kernel.asm	/^    f010e20a:	0f 84 e5 04 00 00    	je     fffffffff010e6f5 <end+0xfffffffefe66d355>$/;"	l
f010e210	obj/kern/kernel.asm	/^    f010e210:	48 8b 45 a0          	mov    -0x60(%rbp),%rax$/;"	l
f010e214	obj/kern/kernel.asm	/^    f010e214:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx$/;"	l
f010e218	obj/kern/kernel.asm	/^    f010e218:	48 89 c6             	mov    %rax,%rsi$/;"	l
f010e21b	obj/kern/kernel.asm	/^    f010e21b:	89 df                	mov    %ebx,%edi$/;"	l
f010e21d	obj/kern/kernel.asm	/^    f010e21d:	ff d2                	callq  *%rdx$/;"	l
f010e21f	obj/kern/kernel.asm	/^    f010e21f:	48 8b 45 98          	mov    -0x68(%rbp),%rax$/;"	l
f010e223	obj/kern/kernel.asm	/^    f010e223:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f010e226	obj/kern/kernel.asm	/^    f010e226:	0f b6 d8             	movzbl %al,%ebx$/;"	l
f010e229	obj/kern/kernel.asm	/^    f010e229:	83 fb 25             	cmp    $0x25,%ebx$/;"	l
f010e22c	obj/kern/kernel.asm	/^    f010e22c:	0f 95 c0             	setne  %al$/;"	l
f010e22f	obj/kern/kernel.asm	/^    f010e22f:	48 83 45 98 01       	addq   $0x1,-0x68(%rbp)$/;"	l
f010e234	obj/kern/kernel.asm	/^    f010e234:	84 c0                	test   %al,%al$/;"	l
f010e236	obj/kern/kernel.asm	/^    f010e236:	75 d0                	jne    fffffffff010e208 <end+0xfffffffefe66ce68>$/;"	l
f010e238	obj/kern/kernel.asm	/^    f010e238:	c6 45 ef 20          	movb   $0x20,-0x11(%rbp)$/;"	l
f010e23c	obj/kern/kernel.asm	/^    f010e23c:	c7 45 e0 ff ff ff ff 	movl   $0xffffffff,-0x20(%rbp)$/;"	l
f010e243	obj/kern/kernel.asm	/^    f010e243:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%rbp)$/;"	l
f010e24a	obj/kern/kernel.asm	/^    f010e24a:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)$/;"	l
f010e251	obj/kern/kernel.asm	/^    f010e251:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)$/;"	l
f010e258	obj/kern/kernel.asm	/^    f010e258:	eb 04                	jmp    fffffffff010e25e <end+0xfffffffefe66cebe>$/;"	l
f010e25a	obj/kern/kernel.asm	/^    f010e25a:	90                   	nop$/;"	l
f010e25b	obj/kern/kernel.asm	/^    f010e25b:	eb 01                	jmp    fffffffff010e25e <end+0xfffffffefe66cebe>$/;"	l
f010e25d	obj/kern/kernel.asm	/^    f010e25d:	90                   	nop$/;"	l
f010e25e	obj/kern/kernel.asm	/^    f010e25e:	48 8b 45 98          	mov    -0x68(%rbp),%rax$/;"	l
f010e262	obj/kern/kernel.asm	/^    f010e262:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f010e265	obj/kern/kernel.asm	/^    f010e265:	0f b6 d8             	movzbl %al,%ebx$/;"	l
f010e268	obj/kern/kernel.asm	/^    f010e268:	89 d8                	mov    %ebx,%eax$/;"	l
f010e26a	obj/kern/kernel.asm	/^    f010e26a:	48 83 45 98 01       	addq   $0x1,-0x68(%rbp)$/;"	l
f010e26f	obj/kern/kernel.asm	/^    f010e26f:	83 e8 23             	sub    $0x23,%eax$/;"	l
f010e272	obj/kern/kernel.asm	/^    f010e272:	83 f8 55             	cmp    $0x55,%eax$/;"	l
f010e275	obj/kern/kernel.asm	/^    f010e275:	0f 87 47 04 00 00    	ja     fffffffff010e6c2 <end+0xfffffffefe66d322>$/;"	l
f010e27b	obj/kern/kernel.asm	/^    f010e27b:	89 c0                	mov    %eax,%eax$/;"	l
f010e27d	obj/kern/kernel.asm	/^    f010e27d:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
f010e284	obj/kern/kernel.asm	/^    f010e284:	00 $/;"	l
f010e285	obj/kern/kernel.asm	/^    f010e285:	48 b8 80 31 11 f0 00 	mov    $0xf0113180,%rax$/;"	l
f010e28c	obj/kern/kernel.asm	/^    f010e28c:	00 00 00 $/;"	l
f010e28f	obj/kern/kernel.asm	/^    f010e28f:	48 8b 04 02          	mov    (%rdx,%rax,1),%rax$/;"	l
f010e293	obj/kern/kernel.asm	/^    f010e293:	ff e0                	jmpq   *%rax$/;"	l
f010e295	obj/kern/kernel.asm	/^    f010e295:	c6 45 ef 2d          	movb   $0x2d,-0x11(%rbp)$/;"	l
f010e299	obj/kern/kernel.asm	/^    f010e299:	eb c3                	jmp    fffffffff010e25e <end+0xfffffffefe66cebe>$/;"	l
f010e29b	obj/kern/kernel.asm	/^    f010e29b:	c6 45 ef 30          	movb   $0x30,-0x11(%rbp)$/;"	l
f010e29f	obj/kern/kernel.asm	/^    f010e29f:	eb bd                	jmp    fffffffff010e25e <end+0xfffffffefe66cebe>$/;"	l
f010e2a1	obj/kern/kernel.asm	/^    f010e2a1:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%rbp)$/;"	l
f010e2a8	obj/kern/kernel.asm	/^    f010e2a8:	8b 55 e4             	mov    -0x1c(%rbp),%edx$/;"	l
f010e2ab	obj/kern/kernel.asm	/^    f010e2ab:	89 d0                	mov    %edx,%eax$/;"	l
f010e2ad	obj/kern/kernel.asm	/^    f010e2ad:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f010e2b0	obj/kern/kernel.asm	/^    f010e2b0:	01 d0                	add    %edx,%eax$/;"	l
f010e2b2	obj/kern/kernel.asm	/^    f010e2b2:	01 c0                	add    %eax,%eax$/;"	l
f010e2b4	obj/kern/kernel.asm	/^    f010e2b4:	01 d8                	add    %ebx,%eax$/;"	l
f010e2b6	obj/kern/kernel.asm	/^    f010e2b6:	83 e8 30             	sub    $0x30,%eax$/;"	l
f010e2b9	obj/kern/kernel.asm	/^    f010e2b9:	89 45 e4             	mov    %eax,-0x1c(%rbp)$/;"	l
f010e2bc	obj/kern/kernel.asm	/^    f010e2bc:	48 8b 45 98          	mov    -0x68(%rbp),%rax$/;"	l
f010e2c0	obj/kern/kernel.asm	/^    f010e2c0:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f010e2c3	obj/kern/kernel.asm	/^    f010e2c3:	0f be d8             	movsbl %al,%ebx$/;"	l
f010e2c6	obj/kern/kernel.asm	/^    f010e2c6:	83 fb 2f             	cmp    $0x2f,%ebx$/;"	l
f010e2c9	obj/kern/kernel.asm	/^    f010e2c9:	7e 64                	jle    fffffffff010e32f <end+0xfffffffefe66cf8f>$/;"	l
f010e2cb	obj/kern/kernel.asm	/^    f010e2cb:	83 fb 39             	cmp    $0x39,%ebx$/;"	l
f010e2ce	obj/kern/kernel.asm	/^    f010e2ce:	7f 62                	jg     fffffffff010e332 <end+0xfffffffefe66cf92>$/;"	l
f010e2d0	obj/kern/kernel.asm	/^    f010e2d0:	48 83 45 98 01       	addq   $0x1,-0x68(%rbp)$/;"	l
f010e2d5	obj/kern/kernel.asm	/^    f010e2d5:	eb d1                	jmp    fffffffff010e2a8 <end+0xfffffffefe66cf08>$/;"	l
f010e2d7	obj/kern/kernel.asm	/^    f010e2d7:	8b 45 b0             	mov    -0x50(%rbp),%eax$/;"	l
f010e2da	obj/kern/kernel.asm	/^    f010e2da:	83 f8 2f             	cmp    $0x2f,%eax$/;"	l
f010e2dd	obj/kern/kernel.asm	/^    f010e2dd:	77 18                	ja     fffffffff010e2f7 <end+0xfffffffefe66cf57>$/;"	l
f010e2df	obj/kern/kernel.asm	/^    f010e2df:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx$/;"	l
f010e2e3	obj/kern/kernel.asm	/^    f010e2e3:	8b 45 b0             	mov    -0x50(%rbp),%eax$/;"	l
f010e2e6	obj/kern/kernel.asm	/^    f010e2e6:	89 c0                	mov    %eax,%eax$/;"	l
f010e2e8	obj/kern/kernel.asm	/^    f010e2e8:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010e2ec	obj/kern/kernel.asm	/^    f010e2ec:	8b 55 b0             	mov    -0x50(%rbp),%edx$/;"	l
f010e2ef	obj/kern/kernel.asm	/^    f010e2ef:	83 c2 08             	add    $0x8,%edx$/;"	l
f010e2f2	obj/kern/kernel.asm	/^    f010e2f2:	89 55 b0             	mov    %edx,-0x50(%rbp)$/;"	l
f010e2f5	obj/kern/kernel.asm	/^    f010e2f5:	eb 0f                	jmp    fffffffff010e306 <end+0xfffffffefe66cf66>$/;"	l
f010e2f7	obj/kern/kernel.asm	/^    f010e2f7:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx$/;"	l
f010e2fb	obj/kern/kernel.asm	/^    f010e2fb:	48 89 d0             	mov    %rdx,%rax$/;"	l
f010e2fe	obj/kern/kernel.asm	/^    f010e2fe:	48 83 c2 08          	add    $0x8,%rdx$/;"	l
f010e302	obj/kern/kernel.asm	/^    f010e302:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)$/;"	l
f010e306	obj/kern/kernel.asm	/^    f010e306:	8b 00                	mov    (%rax),%eax$/;"	l
f010e308	obj/kern/kernel.asm	/^    f010e308:	89 45 e4             	mov    %eax,-0x1c(%rbp)$/;"	l
f010e30b	obj/kern/kernel.asm	/^    f010e30b:	eb 26                	jmp    fffffffff010e333 <end+0xfffffffefe66cf93>$/;"	l
f010e30d	obj/kern/kernel.asm	/^    f010e30d:	83 7d e0 00          	cmpl   $0x0,-0x20(%rbp)$/;"	l
f010e311	obj/kern/kernel.asm	/^    f010e311:	0f 89 43 ff ff ff    	jns    fffffffff010e25a <end+0xfffffffefe66ceba>$/;"	l
f010e317	obj/kern/kernel.asm	/^    f010e317:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%rbp)$/;"	l
f010e31e	obj/kern/kernel.asm	/^    f010e31e:	e9 3b ff ff ff       	jmpq   fffffffff010e25e <end+0xfffffffefe66cebe>$/;"	l
f010e323	obj/kern/kernel.asm	/^    f010e323:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%rbp)$/;"	l
f010e32a	obj/kern/kernel.asm	/^    f010e32a:	e9 2f ff ff ff       	jmpq   fffffffff010e25e <end+0xfffffffefe66cebe>$/;"	l
f010e32f	obj/kern/kernel.asm	/^    f010e32f:	90                   	nop$/;"	l
f010e330	obj/kern/kernel.asm	/^    f010e330:	eb 01                	jmp    fffffffff010e333 <end+0xfffffffefe66cf93>$/;"	l
f010e332	obj/kern/kernel.asm	/^    f010e332:	90                   	nop$/;"	l
f010e333	obj/kern/kernel.asm	/^    f010e333:	83 7d e0 00          	cmpl   $0x0,-0x20(%rbp)$/;"	l
f010e337	obj/kern/kernel.asm	/^    f010e337:	0f 89 20 ff ff ff    	jns    fffffffff010e25d <end+0xfffffffefe66cebd>$/;"	l
f010e33d	obj/kern/kernel.asm	/^    f010e33d:	8b 45 e4             	mov    -0x1c(%rbp),%eax$/;"	l
f010e340	obj/kern/kernel.asm	/^    f010e340:	89 45 e0             	mov    %eax,-0x20(%rbp)$/;"	l
f010e343	obj/kern/kernel.asm	/^    f010e343:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%rbp)$/;"	l
f010e34a	obj/kern/kernel.asm	/^    f010e34a:	e9 0f ff ff ff       	jmpq   fffffffff010e25e <end+0xfffffffefe66cebe>$/;"	l
f010e34f	obj/kern/kernel.asm	/^    f010e34f:	83 45 dc 01          	addl   $0x1,-0x24(%rbp)$/;"	l
f010e353	obj/kern/kernel.asm	/^    f010e353:	e9 06 ff ff ff       	jmpq   fffffffff010e25e <end+0xfffffffefe66cebe>$/;"	l
f010e358	obj/kern/kernel.asm	/^    f010e358:	8b 45 b0             	mov    -0x50(%rbp),%eax$/;"	l
f010e35b	obj/kern/kernel.asm	/^    f010e35b:	83 f8 2f             	cmp    $0x2f,%eax$/;"	l
f010e35e	obj/kern/kernel.asm	/^    f010e35e:	77 18                	ja     fffffffff010e378 <end+0xfffffffefe66cfd8>$/;"	l
f010e360	obj/kern/kernel.asm	/^    f010e360:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx$/;"	l
f010e364	obj/kern/kernel.asm	/^    f010e364:	8b 45 b0             	mov    -0x50(%rbp),%eax$/;"	l
f010e367	obj/kern/kernel.asm	/^    f010e367:	89 c0                	mov    %eax,%eax$/;"	l
f010e369	obj/kern/kernel.asm	/^    f010e369:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010e36d	obj/kern/kernel.asm	/^    f010e36d:	8b 55 b0             	mov    -0x50(%rbp),%edx$/;"	l
f010e370	obj/kern/kernel.asm	/^    f010e370:	83 c2 08             	add    $0x8,%edx$/;"	l
f010e373	obj/kern/kernel.asm	/^    f010e373:	89 55 b0             	mov    %edx,-0x50(%rbp)$/;"	l
f010e376	obj/kern/kernel.asm	/^    f010e376:	eb 0f                	jmp    fffffffff010e387 <end+0xfffffffefe66cfe7>$/;"	l
f010e378	obj/kern/kernel.asm	/^    f010e378:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx$/;"	l
f010e37c	obj/kern/kernel.asm	/^    f010e37c:	48 89 d0             	mov    %rdx,%rax$/;"	l
f010e37f	obj/kern/kernel.asm	/^    f010e37f:	48 83 c2 08          	add    $0x8,%rdx$/;"	l
f010e383	obj/kern/kernel.asm	/^    f010e383:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)$/;"	l
f010e387	obj/kern/kernel.asm	/^    f010e387:	8b 00                	mov    (%rax),%eax$/;"	l
f010e389	obj/kern/kernel.asm	/^    f010e389:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx$/;"	l
f010e38d	obj/kern/kernel.asm	/^    f010e38d:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx$/;"	l
f010e391	obj/kern/kernel.asm	/^    f010e391:	48 89 d6             	mov    %rdx,%rsi$/;"	l
f010e394	obj/kern/kernel.asm	/^    f010e394:	89 c7                	mov    %eax,%edi$/;"	l
f010e396	obj/kern/kernel.asm	/^    f010e396:	ff d1                	callq  *%rcx$/;"	l
f010e398	obj/kern/kernel.asm	/^    f010e398:	e9 52 03 00 00       	jmpq   fffffffff010e6ef <end+0xfffffffefe66d34f>$/;"	l
f010e39d	obj/kern/kernel.asm	/^    f010e39d:	8b 45 b0             	mov    -0x50(%rbp),%eax$/;"	l
f010e3a0	obj/kern/kernel.asm	/^    f010e3a0:	83 f8 2f             	cmp    $0x2f,%eax$/;"	l
f010e3a3	obj/kern/kernel.asm	/^    f010e3a3:	77 18                	ja     fffffffff010e3bd <end+0xfffffffefe66d01d>$/;"	l
f010e3a5	obj/kern/kernel.asm	/^    f010e3a5:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx$/;"	l
f010e3a9	obj/kern/kernel.asm	/^    f010e3a9:	8b 45 b0             	mov    -0x50(%rbp),%eax$/;"	l
f010e3ac	obj/kern/kernel.asm	/^    f010e3ac:	89 c0                	mov    %eax,%eax$/;"	l
f010e3ae	obj/kern/kernel.asm	/^    f010e3ae:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010e3b2	obj/kern/kernel.asm	/^    f010e3b2:	8b 55 b0             	mov    -0x50(%rbp),%edx$/;"	l
f010e3b5	obj/kern/kernel.asm	/^    f010e3b5:	83 c2 08             	add    $0x8,%edx$/;"	l
f010e3b8	obj/kern/kernel.asm	/^    f010e3b8:	89 55 b0             	mov    %edx,-0x50(%rbp)$/;"	l
f010e3bb	obj/kern/kernel.asm	/^    f010e3bb:	eb 0f                	jmp    fffffffff010e3cc <end+0xfffffffefe66d02c>$/;"	l
f010e3bd	obj/kern/kernel.asm	/^    f010e3bd:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx$/;"	l
f010e3c1	obj/kern/kernel.asm	/^    f010e3c1:	48 89 d0             	mov    %rdx,%rax$/;"	l
f010e3c4	obj/kern/kernel.asm	/^    f010e3c4:	48 83 c2 08          	add    $0x8,%rdx$/;"	l
f010e3c8	obj/kern/kernel.asm	/^    f010e3c8:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)$/;"	l
f010e3cc	obj/kern/kernel.asm	/^    f010e3cc:	8b 18                	mov    (%rax),%ebx$/;"	l
f010e3ce	obj/kern/kernel.asm	/^    f010e3ce:	85 db                	test   %ebx,%ebx$/;"	l
f010e3d0	obj/kern/kernel.asm	/^    f010e3d0:	79 02                	jns    fffffffff010e3d4 <end+0xfffffffefe66d034>$/;"	l
f010e3d2	obj/kern/kernel.asm	/^    f010e3d2:	f7 db                	neg    %ebx$/;"	l
f010e3d4	obj/kern/kernel.asm	/^    f010e3d4:	83 fb 12             	cmp    $0x12,%ebx$/;"	l
f010e3d7	obj/kern/kernel.asm	/^    f010e3d7:	7f 18                	jg     fffffffff010e3f1 <end+0xfffffffefe66d051>$/;"	l
f010e3d9	obj/kern/kernel.asm	/^    f010e3d9:	89 da                	mov    %ebx,%edx$/;"	l
f010e3db	obj/kern/kernel.asm	/^    f010e3db:	48 b8 c0 30 11 f0 00 	mov    $0xf01130c0,%rax$/;"	l
f010e3e2	obj/kern/kernel.asm	/^    f010e3e2:	00 00 00 $/;"	l
f010e3e5	obj/kern/kernel.asm	/^    f010e3e5:	48 63 d2             	movslq %edx,%rdx$/;"	l
f010e3e8	obj/kern/kernel.asm	/^    f010e3e8:	4c 8b 24 d0          	mov    (%rax,%rdx,8),%r12$/;"	l
f010e3ec	obj/kern/kernel.asm	/^    f010e3ec:	4d 85 e4             	test   %r12,%r12$/;"	l
f010e3ef	obj/kern/kernel.asm	/^    f010e3ef:	75 2e                	jne    fffffffff010e41f <end+0xfffffffefe66d07f>$/;"	l
f010e3f1	obj/kern/kernel.asm	/^    f010e3f1:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi$/;"	l
f010e3f5	obj/kern/kernel.asm	/^    f010e3f5:	48 8b 45 a8          	mov    -0x58(%rbp),%rax$/;"	l
f010e3f9	obj/kern/kernel.asm	/^    f010e3f9:	89 d9                	mov    %ebx,%ecx$/;"	l
f010e3fb	obj/kern/kernel.asm	/^    f010e3fb:	48 ba 69 31 11 f0 00 	mov    $0xf0113169,%rdx$/;"	l
f010e402	obj/kern/kernel.asm	/^    f010e402:	00 00 00 $/;"	l
f010e405	obj/kern/kernel.asm	/^    f010e405:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010e408	obj/kern/kernel.asm	/^    f010e408:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010e40d	obj/kern/kernel.asm	/^    f010e40d:	48 bb fe e6 10 f0 00 	mov    $0xf010e6fe,%rbx$/;"	l
f010e414	obj/kern/kernel.asm	/^    f010e414:	00 00 00 $/;"	l
f010e417	obj/kern/kernel.asm	/^    f010e417:	ff d3                	callq  *%rbx$/;"	l
f010e419	obj/kern/kernel.asm	/^    f010e419:	90                   	nop$/;"	l
f010e41a	obj/kern/kernel.asm	/^    f010e41a:	e9 d0 02 00 00       	jmpq   fffffffff010e6ef <end+0xfffffffefe66d34f>$/;"	l
f010e41f	obj/kern/kernel.asm	/^    f010e41f:	48 8b 5d a0          	mov    -0x60(%rbp),%rbx$/;"	l
f010e423	obj/kern/kernel.asm	/^    f010e423:	48 8b 45 a8          	mov    -0x58(%rbp),%rax$/;"	l
f010e427	obj/kern/kernel.asm	/^    f010e427:	4c 89 e1             	mov    %r12,%rcx$/;"	l
f010e42a	obj/kern/kernel.asm	/^    f010e42a:	48 ba 72 31 11 f0 00 	mov    $0xf0113172,%rdx$/;"	l
f010e431	obj/kern/kernel.asm	/^    f010e431:	00 00 00 $/;"	l
f010e434	obj/kern/kernel.asm	/^    f010e434:	48 89 de             	mov    %rbx,%rsi$/;"	l
f010e437	obj/kern/kernel.asm	/^    f010e437:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010e43a	obj/kern/kernel.asm	/^    f010e43a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010e43f	obj/kern/kernel.asm	/^    f010e43f:	48 bb fe e6 10 f0 00 	mov    $0xf010e6fe,%rbx$/;"	l
f010e446	obj/kern/kernel.asm	/^    f010e446:	00 00 00 $/;"	l
f010e449	obj/kern/kernel.asm	/^    f010e449:	ff d3                	callq  *%rbx$/;"	l
f010e44b	obj/kern/kernel.asm	/^    f010e44b:	e9 9f 02 00 00       	jmpq   fffffffff010e6ef <end+0xfffffffefe66d34f>$/;"	l
f010e450	obj/kern/kernel.asm	/^    f010e450:	8b 45 b0             	mov    -0x50(%rbp),%eax$/;"	l
f010e453	obj/kern/kernel.asm	/^    f010e453:	83 f8 2f             	cmp    $0x2f,%eax$/;"	l
f010e456	obj/kern/kernel.asm	/^    f010e456:	77 18                	ja     fffffffff010e470 <end+0xfffffffefe66d0d0>$/;"	l
f010e458	obj/kern/kernel.asm	/^    f010e458:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx$/;"	l
f010e45c	obj/kern/kernel.asm	/^    f010e45c:	8b 45 b0             	mov    -0x50(%rbp),%eax$/;"	l
f010e45f	obj/kern/kernel.asm	/^    f010e45f:	89 c0                	mov    %eax,%eax$/;"	l
f010e461	obj/kern/kernel.asm	/^    f010e461:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010e465	obj/kern/kernel.asm	/^    f010e465:	8b 55 b0             	mov    -0x50(%rbp),%edx$/;"	l
f010e468	obj/kern/kernel.asm	/^    f010e468:	83 c2 08             	add    $0x8,%edx$/;"	l
f010e46b	obj/kern/kernel.asm	/^    f010e46b:	89 55 b0             	mov    %edx,-0x50(%rbp)$/;"	l
f010e46e	obj/kern/kernel.asm	/^    f010e46e:	eb 0f                	jmp    fffffffff010e47f <end+0xfffffffefe66d0df>$/;"	l
f010e470	obj/kern/kernel.asm	/^    f010e470:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx$/;"	l
f010e474	obj/kern/kernel.asm	/^    f010e474:	48 89 d0             	mov    %rdx,%rax$/;"	l
f010e477	obj/kern/kernel.asm	/^    f010e477:	48 83 c2 08          	add    $0x8,%rdx$/;"	l
f010e47b	obj/kern/kernel.asm	/^    f010e47b:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)$/;"	l
f010e47f	obj/kern/kernel.asm	/^    f010e47f:	4c 8b 20             	mov    (%rax),%r12$/;"	l
f010e482	obj/kern/kernel.asm	/^    f010e482:	4d 85 e4             	test   %r12,%r12$/;"	l
f010e485	obj/kern/kernel.asm	/^    f010e485:	75 0a                	jne    fffffffff010e491 <end+0xfffffffefe66d0f1>$/;"	l
f010e487	obj/kern/kernel.asm	/^    f010e487:	49 bc 75 31 11 f0 00 	mov    $0xf0113175,%r12$/;"	l
f010e48e	obj/kern/kernel.asm	/^    f010e48e:	00 00 00 $/;"	l
f010e491	obj/kern/kernel.asm	/^    f010e491:	83 7d e0 00          	cmpl   $0x0,-0x20(%rbp)$/;"	l
f010e495	obj/kern/kernel.asm	/^    f010e495:	7e 7a                	jle    fffffffff010e511 <end+0xfffffffefe66d171>$/;"	l
f010e497	obj/kern/kernel.asm	/^    f010e497:	80 7d ef 2d          	cmpb   $0x2d,-0x11(%rbp)$/;"	l
f010e49b	obj/kern/kernel.asm	/^    f010e49b:	74 77                	je     fffffffff010e514 <end+0xfffffffefe66d174>$/;"	l
f010e49d	obj/kern/kernel.asm	/^    f010e49d:	8b 45 e4             	mov    -0x1c(%rbp),%eax$/;"	l
f010e4a0	obj/kern/kernel.asm	/^    f010e4a0:	48 98                	cltq   $/;"	l
f010e4a2	obj/kern/kernel.asm	/^    f010e4a2:	48 89 c6             	mov    %rax,%rsi$/;"	l
f010e4a5	obj/kern/kernel.asm	/^    f010e4a5:	4c 89 e7             	mov    %r12,%rdi$/;"	l
f010e4a8	obj/kern/kernel.asm	/^    f010e4a8:	48 b8 6e eb 10 f0 00 	mov    $0xf010eb6e,%rax$/;"	l
f010e4af	obj/kern/kernel.asm	/^    f010e4af:	00 00 00 $/;"	l
f010e4b2	obj/kern/kernel.asm	/^    f010e4b2:	ff d0                	callq  *%rax$/;"	l
f010e4b4	obj/kern/kernel.asm	/^    f010e4b4:	29 45 e0             	sub    %eax,-0x20(%rbp)$/;"	l
f010e4b7	obj/kern/kernel.asm	/^    f010e4b7:	eb 17                	jmp    fffffffff010e4d0 <end+0xfffffffefe66d130>$/;"	l
f010e4b9	obj/kern/kernel.asm	/^    f010e4b9:	0f be 45 ef          	movsbl -0x11(%rbp),%eax$/;"	l
f010e4bd	obj/kern/kernel.asm	/^    f010e4bd:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx$/;"	l
f010e4c1	obj/kern/kernel.asm	/^    f010e4c1:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx$/;"	l
f010e4c5	obj/kern/kernel.asm	/^    f010e4c5:	48 89 d6             	mov    %rdx,%rsi$/;"	l
f010e4c8	obj/kern/kernel.asm	/^    f010e4c8:	89 c7                	mov    %eax,%edi$/;"	l
f010e4ca	obj/kern/kernel.asm	/^    f010e4ca:	ff d1                	callq  *%rcx$/;"	l
f010e4cc	obj/kern/kernel.asm	/^    f010e4cc:	83 6d e0 01          	subl   $0x1,-0x20(%rbp)$/;"	l
f010e4d0	obj/kern/kernel.asm	/^    f010e4d0:	83 7d e0 00          	cmpl   $0x0,-0x20(%rbp)$/;"	l
f010e4d4	obj/kern/kernel.asm	/^    f010e4d4:	7f e3                	jg     fffffffff010e4b9 <end+0xfffffffefe66d119>$/;"	l
f010e4d6	obj/kern/kernel.asm	/^    f010e4d6:	eb 3d                	jmp    fffffffff010e515 <end+0xfffffffefe66d175>$/;"	l
f010e4d8	obj/kern/kernel.asm	/^    f010e4d8:	83 7d e8 00          	cmpl   $0x0,-0x18(%rbp)$/;"	l
f010e4dc	obj/kern/kernel.asm	/^    f010e4dc:	74 1e                	je     fffffffff010e4fc <end+0xfffffffefe66d15c>$/;"	l
f010e4de	obj/kern/kernel.asm	/^    f010e4de:	83 fb 1f             	cmp    $0x1f,%ebx$/;"	l
f010e4e1	obj/kern/kernel.asm	/^    f010e4e1:	7e 05                	jle    fffffffff010e4e8 <end+0xfffffffefe66d148>$/;"	l
f010e4e3	obj/kern/kernel.asm	/^    f010e4e3:	83 fb 7e             	cmp    $0x7e,%ebx$/;"	l
f010e4e6	obj/kern/kernel.asm	/^    f010e4e6:	7e 14                	jle    fffffffff010e4fc <end+0xfffffffefe66d15c>$/;"	l
f010e4e8	obj/kern/kernel.asm	/^    f010e4e8:	48 8b 45 a0          	mov    -0x60(%rbp),%rax$/;"	l
f010e4ec	obj/kern/kernel.asm	/^    f010e4ec:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx$/;"	l
f010e4f0	obj/kern/kernel.asm	/^    f010e4f0:	48 89 c6             	mov    %rax,%rsi$/;"	l
f010e4f3	obj/kern/kernel.asm	/^    f010e4f3:	bf 3f 00 00 00       	mov    $0x3f,%edi$/;"	l
f010e4f8	obj/kern/kernel.asm	/^    f010e4f8:	ff d2                	callq  *%rdx$/;"	l
f010e4fa	obj/kern/kernel.asm	/^    f010e4fa:	eb 0f                	jmp    fffffffff010e50b <end+0xfffffffefe66d16b>$/;"	l
f010e4fc	obj/kern/kernel.asm	/^    f010e4fc:	48 8b 45 a0          	mov    -0x60(%rbp),%rax$/;"	l
f010e500	obj/kern/kernel.asm	/^    f010e500:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx$/;"	l
f010e504	obj/kern/kernel.asm	/^    f010e504:	48 89 c6             	mov    %rax,%rsi$/;"	l
f010e507	obj/kern/kernel.asm	/^    f010e507:	89 df                	mov    %ebx,%edi$/;"	l
f010e509	obj/kern/kernel.asm	/^    f010e509:	ff d2                	callq  *%rdx$/;"	l
f010e50b	obj/kern/kernel.asm	/^    f010e50b:	83 6d e0 01          	subl   $0x1,-0x20(%rbp)$/;"	l
f010e50f	obj/kern/kernel.asm	/^    f010e50f:	eb 04                	jmp    fffffffff010e515 <end+0xfffffffefe66d175>$/;"	l
f010e511	obj/kern/kernel.asm	/^    f010e511:	90                   	nop$/;"	l
f010e512	obj/kern/kernel.asm	/^    f010e512:	eb 01                	jmp    fffffffff010e515 <end+0xfffffffefe66d175>$/;"	l
f010e514	obj/kern/kernel.asm	/^    f010e514:	90                   	nop$/;"	l
f010e515	obj/kern/kernel.asm	/^    f010e515:	41 0f b6 04 24       	movzbl (%r12),%eax$/;"	l
f010e51a	obj/kern/kernel.asm	/^    f010e51a:	0f be d8             	movsbl %al,%ebx$/;"	l
f010e51d	obj/kern/kernel.asm	/^    f010e51d:	85 db                	test   %ebx,%ebx$/;"	l
f010e51f	obj/kern/kernel.asm	/^    f010e51f:	0f 95 c0             	setne  %al$/;"	l
f010e522	obj/kern/kernel.asm	/^    f010e522:	49 83 c4 01          	add    $0x1,%r12$/;"	l
f010e526	obj/kern/kernel.asm	/^    f010e526:	84 c0                	test   %al,%al$/;"	l
f010e528	obj/kern/kernel.asm	/^    f010e528:	74 28                	je     fffffffff010e552 <end+0xfffffffefe66d1b2>$/;"	l
f010e52a	obj/kern/kernel.asm	/^    f010e52a:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)$/;"	l
f010e52e	obj/kern/kernel.asm	/^    f010e52e:	78 a8                	js     fffffffff010e4d8 <end+0xfffffffefe66d138>$/;"	l
f010e530	obj/kern/kernel.asm	/^    f010e530:	83 6d e4 01          	subl   $0x1,-0x1c(%rbp)$/;"	l
f010e534	obj/kern/kernel.asm	/^    f010e534:	83 7d e4 00          	cmpl   $0x0,-0x1c(%rbp)$/;"	l
f010e538	obj/kern/kernel.asm	/^    f010e538:	79 9e                	jns    fffffffff010e4d8 <end+0xfffffffefe66d138>$/;"	l
f010e53a	obj/kern/kernel.asm	/^    f010e53a:	eb 16                	jmp    fffffffff010e552 <end+0xfffffffefe66d1b2>$/;"	l
f010e53c	obj/kern/kernel.asm	/^    f010e53c:	48 8b 45 a0          	mov    -0x60(%rbp),%rax$/;"	l
f010e540	obj/kern/kernel.asm	/^    f010e540:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx$/;"	l
f010e544	obj/kern/kernel.asm	/^    f010e544:	48 89 c6             	mov    %rax,%rsi$/;"	l
f010e547	obj/kern/kernel.asm	/^    f010e547:	bf 20 00 00 00       	mov    $0x20,%edi$/;"	l
f010e54c	obj/kern/kernel.asm	/^    f010e54c:	ff d2                	callq  *%rdx$/;"	l
f010e54e	obj/kern/kernel.asm	/^    f010e54e:	83 6d e0 01          	subl   $0x1,-0x20(%rbp)$/;"	l
f010e552	obj/kern/kernel.asm	/^    f010e552:	83 7d e0 00          	cmpl   $0x0,-0x20(%rbp)$/;"	l
f010e556	obj/kern/kernel.asm	/^    f010e556:	7f e4                	jg     fffffffff010e53c <end+0xfffffffefe66d19c>$/;"	l
f010e558	obj/kern/kernel.asm	/^    f010e558:	e9 92 01 00 00       	jmpq   fffffffff010e6ef <end+0xfffffffefe66d34f>$/;"	l
f010e55d	obj/kern/kernel.asm	/^    f010e55d:	8b 55 dc             	mov    -0x24(%rbp),%edx$/;"	l
f010e560	obj/kern/kernel.asm	/^    f010e560:	48 8d 45 b0          	lea    -0x50(%rbp),%rax$/;"	l
f010e564	obj/kern/kernel.asm	/^    f010e564:	89 d6                	mov    %edx,%esi$/;"	l
f010e566	obj/kern/kernel.asm	/^    f010e566:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010e569	obj/kern/kernel.asm	/^    f010e569:	48 b8 fc e0 10 f0 00 	mov    $0xf010e0fc,%rax$/;"	l
f010e570	obj/kern/kernel.asm	/^    f010e570:	00 00 00 $/;"	l
f010e573	obj/kern/kernel.asm	/^    f010e573:	ff d0                	callq  *%rax$/;"	l
f010e575	obj/kern/kernel.asm	/^    f010e575:	48 89 45 d0          	mov    %rax,-0x30(%rbp)$/;"	l
f010e579	obj/kern/kernel.asm	/^    f010e579:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f010e57d	obj/kern/kernel.asm	/^    f010e57d:	48 85 c0             	test   %rax,%rax$/;"	l
f010e580	obj/kern/kernel.asm	/^    f010e580:	79 1d                	jns    fffffffff010e59f <end+0xfffffffefe66d1ff>$/;"	l
f010e582	obj/kern/kernel.asm	/^    f010e582:	48 8b 45 a0          	mov    -0x60(%rbp),%rax$/;"	l
f010e586	obj/kern/kernel.asm	/^    f010e586:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx$/;"	l
f010e58a	obj/kern/kernel.asm	/^    f010e58a:	48 89 c6             	mov    %rax,%rsi$/;"	l
f010e58d	obj/kern/kernel.asm	/^    f010e58d:	bf 2d 00 00 00       	mov    $0x2d,%edi$/;"	l
f010e592	obj/kern/kernel.asm	/^    f010e592:	ff d2                	callq  *%rdx$/;"	l
f010e594	obj/kern/kernel.asm	/^    f010e594:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f010e598	obj/kern/kernel.asm	/^    f010e598:	48 f7 d8             	neg    %rax$/;"	l
f010e59b	obj/kern/kernel.asm	/^    f010e59b:	48 89 45 d0          	mov    %rax,-0x30(%rbp)$/;"	l
f010e59f	obj/kern/kernel.asm	/^    f010e59f:	c7 45 d8 0a 00 00 00 	movl   $0xa,-0x28(%rbp)$/;"	l
f010e5a6	obj/kern/kernel.asm	/^    f010e5a6:	e9 d6 00 00 00       	jmpq   fffffffff010e681 <end+0xfffffffefe66d2e1>$/;"	l
f010e5ab	obj/kern/kernel.asm	/^    f010e5ab:	8b 55 dc             	mov    -0x24(%rbp),%edx$/;"	l
f010e5ae	obj/kern/kernel.asm	/^    f010e5ae:	48 8d 45 b0          	lea    -0x50(%rbp),%rax$/;"	l
f010e5b2	obj/kern/kernel.asm	/^    f010e5b2:	89 d6                	mov    %edx,%esi$/;"	l
f010e5b4	obj/kern/kernel.asm	/^    f010e5b4:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010e5b7	obj/kern/kernel.asm	/^    f010e5b7:	48 b8 2b e0 10 f0 00 	mov    $0xf010e02b,%rax$/;"	l
f010e5be	obj/kern/kernel.asm	/^    f010e5be:	00 00 00 $/;"	l
f010e5c1	obj/kern/kernel.asm	/^    f010e5c1:	ff d0                	callq  *%rax$/;"	l
f010e5c3	obj/kern/kernel.asm	/^    f010e5c3:	48 89 45 d0          	mov    %rax,-0x30(%rbp)$/;"	l
f010e5c7	obj/kern/kernel.asm	/^    f010e5c7:	c7 45 d8 0a 00 00 00 	movl   $0xa,-0x28(%rbp)$/;"	l
f010e5ce	obj/kern/kernel.asm	/^    f010e5ce:	e9 ae 00 00 00       	jmpq   fffffffff010e681 <end+0xfffffffefe66d2e1>$/;"	l
f010e5d3	obj/kern/kernel.asm	/^    f010e5d3:	8b 55 dc             	mov    -0x24(%rbp),%edx$/;"	l
f010e5d6	obj/kern/kernel.asm	/^    f010e5d6:	48 8d 45 b0          	lea    -0x50(%rbp),%rax$/;"	l
f010e5da	obj/kern/kernel.asm	/^    f010e5da:	89 d6                	mov    %edx,%esi$/;"	l
f010e5dc	obj/kern/kernel.asm	/^    f010e5dc:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010e5df	obj/kern/kernel.asm	/^    f010e5df:	48 b8 2b e0 10 f0 00 	mov    $0xf010e02b,%rax$/;"	l
f010e5e6	obj/kern/kernel.asm	/^    f010e5e6:	00 00 00 $/;"	l
f010e5e9	obj/kern/kernel.asm	/^    f010e5e9:	ff d0                	callq  *%rax$/;"	l
f010e5eb	obj/kern/kernel.asm	/^    f010e5eb:	48 89 45 d0          	mov    %rax,-0x30(%rbp)$/;"	l
f010e5ef	obj/kern/kernel.asm	/^    f010e5ef:	c7 45 d8 08 00 00 00 	movl   $0x8,-0x28(%rbp)$/;"	l
f010e5f6	obj/kern/kernel.asm	/^    f010e5f6:	e9 86 00 00 00       	jmpq   fffffffff010e681 <end+0xfffffffefe66d2e1>$/;"	l
f010e5fb	obj/kern/kernel.asm	/^    f010e5fb:	48 8b 45 a0          	mov    -0x60(%rbp),%rax$/;"	l
f010e5ff	obj/kern/kernel.asm	/^    f010e5ff:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx$/;"	l
f010e603	obj/kern/kernel.asm	/^    f010e603:	48 89 c6             	mov    %rax,%rsi$/;"	l
f010e606	obj/kern/kernel.asm	/^    f010e606:	bf 30 00 00 00       	mov    $0x30,%edi$/;"	l
f010e60b	obj/kern/kernel.asm	/^    f010e60b:	ff d2                	callq  *%rdx$/;"	l
f010e60d	obj/kern/kernel.asm	/^    f010e60d:	48 8b 45 a0          	mov    -0x60(%rbp),%rax$/;"	l
f010e611	obj/kern/kernel.asm	/^    f010e611:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx$/;"	l
f010e615	obj/kern/kernel.asm	/^    f010e615:	48 89 c6             	mov    %rax,%rsi$/;"	l
f010e618	obj/kern/kernel.asm	/^    f010e618:	bf 78 00 00 00       	mov    $0x78,%edi$/;"	l
f010e61d	obj/kern/kernel.asm	/^    f010e61d:	ff d2                	callq  *%rdx$/;"	l
f010e61f	obj/kern/kernel.asm	/^    f010e61f:	8b 45 b0             	mov    -0x50(%rbp),%eax$/;"	l
f010e622	obj/kern/kernel.asm	/^    f010e622:	83 f8 2f             	cmp    $0x2f,%eax$/;"	l
f010e625	obj/kern/kernel.asm	/^    f010e625:	77 18                	ja     fffffffff010e63f <end+0xfffffffefe66d29f>$/;"	l
f010e627	obj/kern/kernel.asm	/^    f010e627:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx$/;"	l
f010e62b	obj/kern/kernel.asm	/^    f010e62b:	8b 45 b0             	mov    -0x50(%rbp),%eax$/;"	l
f010e62e	obj/kern/kernel.asm	/^    f010e62e:	89 c0                	mov    %eax,%eax$/;"	l
f010e630	obj/kern/kernel.asm	/^    f010e630:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010e634	obj/kern/kernel.asm	/^    f010e634:	8b 55 b0             	mov    -0x50(%rbp),%edx$/;"	l
f010e637	obj/kern/kernel.asm	/^    f010e637:	83 c2 08             	add    $0x8,%edx$/;"	l
f010e63a	obj/kern/kernel.asm	/^    f010e63a:	89 55 b0             	mov    %edx,-0x50(%rbp)$/;"	l
f010e63d	obj/kern/kernel.asm	/^    f010e63d:	eb 0f                	jmp    fffffffff010e64e <end+0xfffffffefe66d2ae>$/;"	l
f010e63f	obj/kern/kernel.asm	/^    f010e63f:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx$/;"	l
f010e643	obj/kern/kernel.asm	/^    f010e643:	48 89 d0             	mov    %rdx,%rax$/;"	l
f010e646	obj/kern/kernel.asm	/^    f010e646:	48 83 c2 08          	add    $0x8,%rdx$/;"	l
f010e64a	obj/kern/kernel.asm	/^    f010e64a:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)$/;"	l
f010e64e	obj/kern/kernel.asm	/^    f010e64e:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010e651	obj/kern/kernel.asm	/^    f010e651:	48 89 45 d0          	mov    %rax,-0x30(%rbp)$/;"	l
f010e655	obj/kern/kernel.asm	/^    f010e655:	c7 45 d8 10 00 00 00 	movl   $0x10,-0x28(%rbp)$/;"	l
f010e65c	obj/kern/kernel.asm	/^    f010e65c:	eb 23                	jmp    fffffffff010e681 <end+0xfffffffefe66d2e1>$/;"	l
f010e65e	obj/kern/kernel.asm	/^    f010e65e:	8b 55 dc             	mov    -0x24(%rbp),%edx$/;"	l
f010e661	obj/kern/kernel.asm	/^    f010e661:	48 8d 45 b0          	lea    -0x50(%rbp),%rax$/;"	l
f010e665	obj/kern/kernel.asm	/^    f010e665:	89 d6                	mov    %edx,%esi$/;"	l
f010e667	obj/kern/kernel.asm	/^    f010e667:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010e66a	obj/kern/kernel.asm	/^    f010e66a:	48 b8 2b e0 10 f0 00 	mov    $0xf010e02b,%rax$/;"	l
f010e671	obj/kern/kernel.asm	/^    f010e671:	00 00 00 $/;"	l
f010e674	obj/kern/kernel.asm	/^    f010e674:	ff d0                	callq  *%rax$/;"	l
f010e676	obj/kern/kernel.asm	/^    f010e676:	48 89 45 d0          	mov    %rax,-0x30(%rbp)$/;"	l
f010e67a	obj/kern/kernel.asm	/^    f010e67a:	c7 45 d8 10 00 00 00 	movl   $0x10,-0x28(%rbp)$/;"	l
f010e681	obj/kern/kernel.asm	/^    f010e681:	0f be 7d ef          	movsbl -0x11(%rbp),%edi$/;"	l
f010e685	obj/kern/kernel.asm	/^    f010e685:	8b 4d d8             	mov    -0x28(%rbp),%ecx$/;"	l
f010e688	obj/kern/kernel.asm	/^    f010e688:	8b 75 e0             	mov    -0x20(%rbp),%esi$/;"	l
f010e68b	obj/kern/kernel.asm	/^    f010e68b:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx$/;"	l
f010e68f	obj/kern/kernel.asm	/^    f010e68f:	48 8b 5d a0          	mov    -0x60(%rbp),%rbx$/;"	l
f010e693	obj/kern/kernel.asm	/^    f010e693:	48 8b 45 a8          	mov    -0x58(%rbp),%rax$/;"	l
f010e697	obj/kern/kernel.asm	/^    f010e697:	41 89 f9             	mov    %edi,%r9d$/;"	l
f010e69a	obj/kern/kernel.asm	/^    f010e69a:	41 89 f0             	mov    %esi,%r8d$/;"	l
f010e69d	obj/kern/kernel.asm	/^    f010e69d:	48 89 de             	mov    %rbx,%rsi$/;"	l
f010e6a0	obj/kern/kernel.asm	/^    f010e6a0:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010e6a3	obj/kern/kernel.asm	/^    f010e6a3:	48 b8 68 df 10 f0 00 	mov    $0xf010df68,%rax$/;"	l
f010e6aa	obj/kern/kernel.asm	/^    f010e6aa:	00 00 00 $/;"	l
f010e6ad	obj/kern/kernel.asm	/^    f010e6ad:	ff d0                	callq  *%rax$/;"	l
f010e6af	obj/kern/kernel.asm	/^    f010e6af:	eb 3e                	jmp    fffffffff010e6ef <end+0xfffffffefe66d34f>$/;"	l
f010e6b1	obj/kern/kernel.asm	/^    f010e6b1:	48 8b 45 a0          	mov    -0x60(%rbp),%rax$/;"	l
f010e6b5	obj/kern/kernel.asm	/^    f010e6b5:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx$/;"	l
f010e6b9	obj/kern/kernel.asm	/^    f010e6b9:	48 89 c6             	mov    %rax,%rsi$/;"	l
f010e6bc	obj/kern/kernel.asm	/^    f010e6bc:	89 df                	mov    %ebx,%edi$/;"	l
f010e6be	obj/kern/kernel.asm	/^    f010e6be:	ff d2                	callq  *%rdx$/;"	l
f010e6c0	obj/kern/kernel.asm	/^    f010e6c0:	eb 2d                	jmp    fffffffff010e6ef <end+0xfffffffefe66d34f>$/;"	l
f010e6c2	obj/kern/kernel.asm	/^    f010e6c2:	48 8b 45 a0          	mov    -0x60(%rbp),%rax$/;"	l
f010e6c6	obj/kern/kernel.asm	/^    f010e6c6:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx$/;"	l
f010e6ca	obj/kern/kernel.asm	/^    f010e6ca:	48 89 c6             	mov    %rax,%rsi$/;"	l
f010e6cd	obj/kern/kernel.asm	/^    f010e6cd:	bf 25 00 00 00       	mov    $0x25,%edi$/;"	l
f010e6d2	obj/kern/kernel.asm	/^    f010e6d2:	ff d2                	callq  *%rdx$/;"	l
f010e6d4	obj/kern/kernel.asm	/^    f010e6d4:	48 83 6d 98 01       	subq   $0x1,-0x68(%rbp)$/;"	l
f010e6d9	obj/kern/kernel.asm	/^    f010e6d9:	eb 05                	jmp    fffffffff010e6e0 <end+0xfffffffefe66d340>$/;"	l
f010e6db	obj/kern/kernel.asm	/^    f010e6db:	48 83 6d 98 01       	subq   $0x1,-0x68(%rbp)$/;"	l
f010e6e0	obj/kern/kernel.asm	/^    f010e6e0:	48 8b 45 98          	mov    -0x68(%rbp),%rax$/;"	l
f010e6e4	obj/kern/kernel.asm	/^    f010e6e4:	48 83 e8 01          	sub    $0x1,%rax$/;"	l
f010e6e8	obj/kern/kernel.asm	/^    f010e6e8:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f010e6eb	obj/kern/kernel.asm	/^    f010e6eb:	3c 25                	cmp    $0x25,%al$/;"	l
f010e6ed	obj/kern/kernel.asm	/^    f010e6ed:	75 ec                	jne    fffffffff010e6db <end+0xfffffffefe66d33b>$/;"	l
f010e6ef	obj/kern/kernel.asm	/^    f010e6ef:	90                   	nop$/;"	l
f010e6f0	obj/kern/kernel.asm	/^    f010e6f0:	e9 2a fb ff ff       	jmpq   fffffffff010e21f <end+0xfffffffefe66ce7f>$/;"	l
f010e6f5	obj/kern/kernel.asm	/^    f010e6f5:	48 83 c4 60          	add    $0x60,%rsp$/;"	l
f010e6f9	obj/kern/kernel.asm	/^    f010e6f9:	5b                   	pop    %rbx$/;"	l
f010e6fa	obj/kern/kernel.asm	/^    f010e6fa:	41 5c                	pop    %r12$/;"	l
f010e6fc	obj/kern/kernel.asm	/^    f010e6fc:	c9                   	leaveq $/;"	l
f010e6fd	obj/kern/kernel.asm	/^    f010e6fd:	c3                   	retq   $/;"	l
f010e6fe	obj/kern/kernel.asm	/^    f010e6fe:	55                   	push   %rbp$/;"	l
f010e6ff	obj/kern/kernel.asm	/^    f010e6ff:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010e702	obj/kern/kernel.asm	/^    f010e702:	53                   	push   %rbx$/;"	l
f010e703	obj/kern/kernel.asm	/^    f010e703:	48 81 ec f8 00 00 00 	sub    $0xf8,%rsp$/;"	l
f010e70a	obj/kern/kernel.asm	/^    f010e70a:	48 89 bd 18 ff ff ff 	mov    %rdi,-0xe8(%rbp)$/;"	l
f010e711	obj/kern/kernel.asm	/^    f010e711:	48 89 b5 10 ff ff ff 	mov    %rsi,-0xf0(%rbp)$/;"	l
f010e718	obj/kern/kernel.asm	/^    f010e718:	48 89 8d 58 ff ff ff 	mov    %rcx,-0xa8(%rbp)$/;"	l
f010e71f	obj/kern/kernel.asm	/^    f010e71f:	4c 89 85 60 ff ff ff 	mov    %r8,-0xa0(%rbp)$/;"	l
f010e726	obj/kern/kernel.asm	/^    f010e726:	4c 89 8d 68 ff ff ff 	mov    %r9,-0x98(%rbp)$/;"	l
f010e72d	obj/kern/kernel.asm	/^    f010e72d:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010e730	obj/kern/kernel.asm	/^    f010e730:	48 8d 0c 85 00 00 00 	lea    0x0(,%rax,4),%rcx$/;"	l
f010e737	obj/kern/kernel.asm	/^    f010e737:	00 $/;"	l
f010e738	obj/kern/kernel.asm	/^    f010e738:	48 b8 6b e7 10 f0 00 	mov    $0xf010e76b,%rax$/;"	l
f010e73f	obj/kern/kernel.asm	/^    f010e73f:	00 00 00 $/;"	l
f010e742	obj/kern/kernel.asm	/^    f010e742:	48 29 c8             	sub    %rcx,%rax$/;"	l
f010e745	obj/kern/kernel.asm	/^    f010e745:	48 8d 4d ef          	lea    -0x11(%rbp),%rcx$/;"	l
f010e749	obj/kern/kernel.asm	/^    f010e749:	ff e0                	jmpq   *%rax$/;"	l
f010e74b	obj/kern/kernel.asm	/^    f010e74b:	0f 29 79 f1          	movaps %xmm7,-0xf(%rcx)$/;"	l
f010e74f	obj/kern/kernel.asm	/^    f010e74f:	0f 29 71 e1          	movaps %xmm6,-0x1f(%rcx)$/;"	l
f010e753	obj/kern/kernel.asm	/^    f010e753:	0f 29 69 d1          	movaps %xmm5,-0x2f(%rcx)$/;"	l
f010e757	obj/kern/kernel.asm	/^    f010e757:	0f 29 61 c1          	movaps %xmm4,-0x3f(%rcx)$/;"	l
f010e75b	obj/kern/kernel.asm	/^    f010e75b:	0f 29 59 b1          	movaps %xmm3,-0x4f(%rcx)$/;"	l
f010e75f	obj/kern/kernel.asm	/^    f010e75f:	0f 29 51 a1          	movaps %xmm2,-0x5f(%rcx)$/;"	l
f010e763	obj/kern/kernel.asm	/^    f010e763:	0f 29 49 91          	movaps %xmm1,-0x6f(%rcx)$/;"	l
f010e767	obj/kern/kernel.asm	/^    f010e767:	0f 29 41 81          	movaps %xmm0,-0x7f(%rcx)$/;"	l
f010e76b	obj/kern/kernel.asm	/^    f010e76b:	48 89 95 08 ff ff ff 	mov    %rdx,-0xf8(%rbp)$/;"	l
f010e772	obj/kern/kernel.asm	/^    f010e772:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax$/;"	l
f010e779	obj/kern/kernel.asm	/^    f010e779:	c7 00 18 00 00 00    	movl   $0x18,(%rax)$/;"	l
f010e77f	obj/kern/kernel.asm	/^    f010e77f:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax$/;"	l
f010e786	obj/kern/kernel.asm	/^    f010e786:	c7 40 04 30 00 00 00 	movl   $0x30,0x4(%rax)$/;"	l
f010e78d	obj/kern/kernel.asm	/^    f010e78d:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax$/;"	l
f010e794	obj/kern/kernel.asm	/^    f010e794:	48 8d 55 10          	lea    0x10(%rbp),%rdx$/;"	l
f010e798	obj/kern/kernel.asm	/^    f010e798:	48 89 50 08          	mov    %rdx,0x8(%rax)$/;"	l
f010e79c	obj/kern/kernel.asm	/^    f010e79c:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax$/;"	l
f010e7a3	obj/kern/kernel.asm	/^    f010e7a3:	48 8d 95 40 ff ff ff 	lea    -0xc0(%rbp),%rdx$/;"	l
f010e7aa	obj/kern/kernel.asm	/^    f010e7aa:	48 89 50 10          	mov    %rdx,0x10(%rax)$/;"	l
f010e7ae	obj/kern/kernel.asm	/^    f010e7ae:	48 8d 8d 20 ff ff ff 	lea    -0xe0(%rbp),%rcx$/;"	l
f010e7b5	obj/kern/kernel.asm	/^    f010e7b5:	48 8b 95 08 ff ff ff 	mov    -0xf8(%rbp),%rdx$/;"	l
f010e7bc	obj/kern/kernel.asm	/^    f010e7bc:	48 8b 9d 10 ff ff ff 	mov    -0xf0(%rbp),%rbx$/;"	l
f010e7c3	obj/kern/kernel.asm	/^    f010e7c3:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax$/;"	l
f010e7ca	obj/kern/kernel.asm	/^    f010e7ca:	48 89 de             	mov    %rbx,%rsi$/;"	l
f010e7cd	obj/kern/kernel.asm	/^    f010e7cd:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010e7d0	obj/kern/kernel.asm	/^    f010e7d0:	48 b8 cd e1 10 f0 00 	mov    $0xf010e1cd,%rax$/;"	l
f010e7d7	obj/kern/kernel.asm	/^    f010e7d7:	00 00 00 $/;"	l
f010e7da	obj/kern/kernel.asm	/^    f010e7da:	ff d0                	callq  *%rax$/;"	l
f010e7dc	obj/kern/kernel.asm	/^    f010e7dc:	48 81 c4 f8 00 00 00 	add    $0xf8,%rsp$/;"	l
f010e7e3	obj/kern/kernel.asm	/^    f010e7e3:	5b                   	pop    %rbx$/;"	l
f010e7e4	obj/kern/kernel.asm	/^    f010e7e4:	c9                   	leaveq $/;"	l
f010e7e5	obj/kern/kernel.asm	/^    f010e7e5:	c3                   	retq   $/;"	l
f010e7e6	obj/kern/kernel.asm	/^    f010e7e6:	55                   	push   %rbp$/;"	l
f010e7e7	obj/kern/kernel.asm	/^    f010e7e7:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010e7ea	obj/kern/kernel.asm	/^    f010e7ea:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
f010e7ee	obj/kern/kernel.asm	/^    f010e7ee:	89 7d fc             	mov    %edi,-0x4(%rbp)$/;"	l
f010e7f1	obj/kern/kernel.asm	/^    f010e7f1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
f010e7f5	obj/kern/kernel.asm	/^    f010e7f5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
f010e7f9	obj/kern/kernel.asm	/^    f010e7f9:	8b 40 10             	mov    0x10(%rax),%eax$/;"	l
f010e7fc	obj/kern/kernel.asm	/^    f010e7fc:	8d 50 01             	lea    0x1(%rax),%edx$/;"	l
f010e7ff	obj/kern/kernel.asm	/^    f010e7ff:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
f010e803	obj/kern/kernel.asm	/^    f010e803:	89 50 10             	mov    %edx,0x10(%rax)$/;"	l
f010e806	obj/kern/kernel.asm	/^    f010e806:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
f010e80a	obj/kern/kernel.asm	/^    f010e80a:	48 8b 10             	mov    (%rax),%rdx$/;"	l
f010e80d	obj/kern/kernel.asm	/^    f010e80d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
f010e811	obj/kern/kernel.asm	/^    f010e811:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
f010e815	obj/kern/kernel.asm	/^    f010e815:	48 39 c2             	cmp    %rax,%rdx$/;"	l
f010e818	obj/kern/kernel.asm	/^    f010e818:	73 17                	jae    fffffffff010e831 <end+0xfffffffefe66d491>$/;"	l
f010e81a	obj/kern/kernel.asm	/^    f010e81a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
f010e81e	obj/kern/kernel.asm	/^    f010e81e:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010e821	obj/kern/kernel.asm	/^    f010e821:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
f010e824	obj/kern/kernel.asm	/^    f010e824:	88 10                	mov    %dl,(%rax)$/;"	l
f010e826	obj/kern/kernel.asm	/^    f010e826:	48 8d 50 01          	lea    0x1(%rax),%rdx$/;"	l
f010e82a	obj/kern/kernel.asm	/^    f010e82a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
f010e82e	obj/kern/kernel.asm	/^    f010e82e:	48 89 10             	mov    %rdx,(%rax)$/;"	l
f010e831	obj/kern/kernel.asm	/^    f010e831:	c9                   	leaveq $/;"	l
f010e832	obj/kern/kernel.asm	/^    f010e832:	c3                   	retq   $/;"	l
f010e833	obj/kern/kernel.asm	/^    f010e833:	55                   	push   %rbp$/;"	l
f010e834	obj/kern/kernel.asm	/^    f010e834:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010e837	obj/kern/kernel.asm	/^    f010e837:	53                   	push   %rbx$/;"	l
f010e838	obj/kern/kernel.asm	/^    f010e838:	48 83 ec 68          	sub    $0x68,%rsp$/;"	l
f010e83c	obj/kern/kernel.asm	/^    f010e83c:	48 89 7d a8          	mov    %rdi,-0x58(%rbp)$/;"	l
f010e840	obj/kern/kernel.asm	/^    f010e840:	89 75 a4             	mov    %esi,-0x5c(%rbp)$/;"	l
f010e843	obj/kern/kernel.asm	/^    f010e843:	48 89 55 98          	mov    %rdx,-0x68(%rbp)$/;"	l
f010e847	obj/kern/kernel.asm	/^    f010e847:	48 89 4d 90          	mov    %rcx,-0x70(%rbp)$/;"	l
f010e84b	obj/kern/kernel.asm	/^    f010e84b:	48 8d 45 d0          	lea    -0x30(%rbp),%rax$/;"	l
f010e84f	obj/kern/kernel.asm	/^    f010e84f:	48 8b 55 90          	mov    -0x70(%rbp),%rdx$/;"	l
f010e853	obj/kern/kernel.asm	/^    f010e853:	48 8b 0a             	mov    (%rdx),%rcx$/;"	l
f010e856	obj/kern/kernel.asm	/^    f010e856:	48 89 08             	mov    %rcx,(%rax)$/;"	l
f010e859	obj/kern/kernel.asm	/^    f010e859:	48 8b 4a 08          	mov    0x8(%rdx),%rcx$/;"	l
f010e85d	obj/kern/kernel.asm	/^    f010e85d:	48 89 48 08          	mov    %rcx,0x8(%rax)$/;"	l
f010e861	obj/kern/kernel.asm	/^    f010e861:	48 8b 52 10          	mov    0x10(%rdx),%rdx$/;"	l
f010e865	obj/kern/kernel.asm	/^    f010e865:	48 89 50 10          	mov    %rdx,0x10(%rax)$/;"	l
f010e869	obj/kern/kernel.asm	/^    f010e869:	8b 45 a4             	mov    -0x5c(%rbp),%eax$/;"	l
f010e86c	obj/kern/kernel.asm	/^    f010e86c:	48 98                	cltq   $/;"	l
f010e86e	obj/kern/kernel.asm	/^    f010e86e:	48 83 e8 01          	sub    $0x1,%rax$/;"	l
f010e872	obj/kern/kernel.asm	/^    f010e872:	48 03 45 a8          	add    -0x58(%rbp),%rax$/;"	l
f010e876	obj/kern/kernel.asm	/^    f010e876:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx$/;"	l
f010e87a	obj/kern/kernel.asm	/^    f010e87a:	48 89 55 b0          	mov    %rdx,-0x50(%rbp)$/;"	l
f010e87e	obj/kern/kernel.asm	/^    f010e87e:	48 89 45 b8          	mov    %rax,-0x48(%rbp)$/;"	l
f010e882	obj/kern/kernel.asm	/^    f010e882:	c7 45 c0 00 00 00 00 	movl   $0x0,-0x40(%rbp)$/;"	l
f010e889	obj/kern/kernel.asm	/^    f010e889:	48 83 7d a8 00       	cmpq   $0x0,-0x58(%rbp)$/;"	l
f010e88e	obj/kern/kernel.asm	/^    f010e88e:	74 06                	je     fffffffff010e896 <end+0xfffffffefe66d4f6>$/;"	l
f010e890	obj/kern/kernel.asm	/^    f010e890:	83 7d a4 00          	cmpl   $0x0,-0x5c(%rbp)$/;"	l
f010e894	obj/kern/kernel.asm	/^    f010e894:	7f 07                	jg     fffffffff010e89d <end+0xfffffffefe66d4fd>$/;"	l
f010e896	obj/kern/kernel.asm	/^    f010e896:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
f010e89b	obj/kern/kernel.asm	/^    f010e89b:	eb 32                	jmp    fffffffff010e8cf <end+0xfffffffefe66d52f>$/;"	l
f010e89d	obj/kern/kernel.asm	/^    f010e89d:	48 b8 e6 e7 10 f0 00 	mov    $0xf010e7e6,%rax$/;"	l
f010e8a4	obj/kern/kernel.asm	/^    f010e8a4:	00 00 00 $/;"	l
f010e8a7	obj/kern/kernel.asm	/^    f010e8a7:	48 8d 4d d0          	lea    -0x30(%rbp),%rcx$/;"	l
f010e8ab	obj/kern/kernel.asm	/^    f010e8ab:	48 8b 55 98          	mov    -0x68(%rbp),%rdx$/;"	l
f010e8af	obj/kern/kernel.asm	/^    f010e8af:	48 8d 5d b0          	lea    -0x50(%rbp),%rbx$/;"	l
f010e8b3	obj/kern/kernel.asm	/^    f010e8b3:	48 89 de             	mov    %rbx,%rsi$/;"	l
f010e8b6	obj/kern/kernel.asm	/^    f010e8b6:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010e8b9	obj/kern/kernel.asm	/^    f010e8b9:	48 b8 cd e1 10 f0 00 	mov    $0xf010e1cd,%rax$/;"	l
f010e8c0	obj/kern/kernel.asm	/^    f010e8c0:	00 00 00 $/;"	l
f010e8c3	obj/kern/kernel.asm	/^    f010e8c3:	ff d0                	callq  *%rax$/;"	l
f010e8c5	obj/kern/kernel.asm	/^    f010e8c5:	48 8b 45 b0          	mov    -0x50(%rbp),%rax$/;"	l
f010e8c9	obj/kern/kernel.asm	/^    f010e8c9:	c6 00 00             	movb   $0x0,(%rax)$/;"	l
f010e8cc	obj/kern/kernel.asm	/^    f010e8cc:	8b 45 c0             	mov    -0x40(%rbp),%eax$/;"	l
f010e8cf	obj/kern/kernel.asm	/^    f010e8cf:	48 83 c4 68          	add    $0x68,%rsp$/;"	l
f010e8d3	obj/kern/kernel.asm	/^    f010e8d3:	5b                   	pop    %rbx$/;"	l
f010e8d4	obj/kern/kernel.asm	/^    f010e8d4:	c9                   	leaveq $/;"	l
f010e8d5	obj/kern/kernel.asm	/^    f010e8d5:	c3                   	retq   $/;"	l
f010e8d6	obj/kern/kernel.asm	/^    f010e8d6:	55                   	push   %rbp$/;"	l
f010e8d7	obj/kern/kernel.asm	/^    f010e8d7:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010e8da	obj/kern/kernel.asm	/^    f010e8da:	53                   	push   %rbx$/;"	l
f010e8db	obj/kern/kernel.asm	/^    f010e8db:	48 81 ec 18 01 00 00 	sub    $0x118,%rsp$/;"	l
f010e8e2	obj/kern/kernel.asm	/^    f010e8e2:	48 89 bd f8 fe ff ff 	mov    %rdi,-0x108(%rbp)$/;"	l
f010e8e9	obj/kern/kernel.asm	/^    f010e8e9:	89 b5 f4 fe ff ff    	mov    %esi,-0x10c(%rbp)$/;"	l
f010e8ef	obj/kern/kernel.asm	/^    f010e8ef:	48 89 8d 58 ff ff ff 	mov    %rcx,-0xa8(%rbp)$/;"	l
f010e8f6	obj/kern/kernel.asm	/^    f010e8f6:	4c 89 85 60 ff ff ff 	mov    %r8,-0xa0(%rbp)$/;"	l
f010e8fd	obj/kern/kernel.asm	/^    f010e8fd:	4c 89 8d 68 ff ff ff 	mov    %r9,-0x98(%rbp)$/;"	l
f010e904	obj/kern/kernel.asm	/^    f010e904:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010e907	obj/kern/kernel.asm	/^    f010e907:	48 8d 0c 85 00 00 00 	lea    0x0(,%rax,4),%rcx$/;"	l
f010e90e	obj/kern/kernel.asm	/^    f010e90e:	00 $/;"	l
f010e90f	obj/kern/kernel.asm	/^    f010e90f:	48 b8 42 e9 10 f0 00 	mov    $0xf010e942,%rax$/;"	l
f010e916	obj/kern/kernel.asm	/^    f010e916:	00 00 00 $/;"	l
f010e919	obj/kern/kernel.asm	/^    f010e919:	48 29 c8             	sub    %rcx,%rax$/;"	l
f010e91c	obj/kern/kernel.asm	/^    f010e91c:	48 8d 4d ef          	lea    -0x11(%rbp),%rcx$/;"	l
f010e920	obj/kern/kernel.asm	/^    f010e920:	ff e0                	jmpq   *%rax$/;"	l
f010e922	obj/kern/kernel.asm	/^    f010e922:	0f 29 79 f1          	movaps %xmm7,-0xf(%rcx)$/;"	l
f010e926	obj/kern/kernel.asm	/^    f010e926:	0f 29 71 e1          	movaps %xmm6,-0x1f(%rcx)$/;"	l
f010e92a	obj/kern/kernel.asm	/^    f010e92a:	0f 29 69 d1          	movaps %xmm5,-0x2f(%rcx)$/;"	l
f010e92e	obj/kern/kernel.asm	/^    f010e92e:	0f 29 61 c1          	movaps %xmm4,-0x3f(%rcx)$/;"	l
f010e932	obj/kern/kernel.asm	/^    f010e932:	0f 29 59 b1          	movaps %xmm3,-0x4f(%rcx)$/;"	l
f010e936	obj/kern/kernel.asm	/^    f010e936:	0f 29 51 a1          	movaps %xmm2,-0x5f(%rcx)$/;"	l
f010e93a	obj/kern/kernel.asm	/^    f010e93a:	0f 29 49 91          	movaps %xmm1,-0x6f(%rcx)$/;"	l
f010e93e	obj/kern/kernel.asm	/^    f010e93e:	0f 29 41 81          	movaps %xmm0,-0x7f(%rcx)$/;"	l
f010e942	obj/kern/kernel.asm	/^    f010e942:	48 89 95 e8 fe ff ff 	mov    %rdx,-0x118(%rbp)$/;"	l
f010e949	obj/kern/kernel.asm	/^    f010e949:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax$/;"	l
f010e950	obj/kern/kernel.asm	/^    f010e950:	c7 00 18 00 00 00    	movl   $0x18,(%rax)$/;"	l
f010e956	obj/kern/kernel.asm	/^    f010e956:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax$/;"	l
f010e95d	obj/kern/kernel.asm	/^    f010e95d:	c7 40 04 30 00 00 00 	movl   $0x30,0x4(%rax)$/;"	l
f010e964	obj/kern/kernel.asm	/^    f010e964:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax$/;"	l
f010e96b	obj/kern/kernel.asm	/^    f010e96b:	48 8d 55 10          	lea    0x10(%rbp),%rdx$/;"	l
f010e96f	obj/kern/kernel.asm	/^    f010e96f:	48 89 50 08          	mov    %rdx,0x8(%rax)$/;"	l
f010e973	obj/kern/kernel.asm	/^    f010e973:	48 8d 85 20 ff ff ff 	lea    -0xe0(%rbp),%rax$/;"	l
f010e97a	obj/kern/kernel.asm	/^    f010e97a:	48 8d 95 40 ff ff ff 	lea    -0xc0(%rbp),%rdx$/;"	l
f010e981	obj/kern/kernel.asm	/^    f010e981:	48 89 50 10          	mov    %rdx,0x10(%rax)$/;"	l
f010e985	obj/kern/kernel.asm	/^    f010e985:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax$/;"	l
f010e98c	obj/kern/kernel.asm	/^    f010e98c:	48 8d 95 20 ff ff ff 	lea    -0xe0(%rbp),%rdx$/;"	l
f010e993	obj/kern/kernel.asm	/^    f010e993:	48 8b 0a             	mov    (%rdx),%rcx$/;"	l
f010e996	obj/kern/kernel.asm	/^    f010e996:	48 89 08             	mov    %rcx,(%rax)$/;"	l
f010e999	obj/kern/kernel.asm	/^    f010e999:	48 8b 4a 08          	mov    0x8(%rdx),%rcx$/;"	l
f010e99d	obj/kern/kernel.asm	/^    f010e99d:	48 89 48 08          	mov    %rcx,0x8(%rax)$/;"	l
f010e9a1	obj/kern/kernel.asm	/^    f010e9a1:	48 8b 52 10          	mov    0x10(%rdx),%rdx$/;"	l
f010e9a5	obj/kern/kernel.asm	/^    f010e9a5:	48 89 50 10          	mov    %rdx,0x10(%rax)$/;"	l
f010e9a9	obj/kern/kernel.asm	/^    f010e9a9:	48 8d 8d 00 ff ff ff 	lea    -0x100(%rbp),%rcx$/;"	l
f010e9b0	obj/kern/kernel.asm	/^    f010e9b0:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx$/;"	l
f010e9b7	obj/kern/kernel.asm	/^    f010e9b7:	8b 9d f4 fe ff ff    	mov    -0x10c(%rbp),%ebx$/;"	l
f010e9bd	obj/kern/kernel.asm	/^    f010e9bd:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax$/;"	l
f010e9c4	obj/kern/kernel.asm	/^    f010e9c4:	89 de                	mov    %ebx,%esi$/;"	l
f010e9c6	obj/kern/kernel.asm	/^    f010e9c6:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010e9c9	obj/kern/kernel.asm	/^    f010e9c9:	48 b8 33 e8 10 f0 00 	mov    $0xf010e833,%rax$/;"	l
f010e9d0	obj/kern/kernel.asm	/^    f010e9d0:	00 00 00 $/;"	l
f010e9d3	obj/kern/kernel.asm	/^    f010e9d3:	ff d0                	callq  *%rax$/;"	l
f010e9d5	obj/kern/kernel.asm	/^    f010e9d5:	89 85 3c ff ff ff    	mov    %eax,-0xc4(%rbp)$/;"	l
f010e9db	obj/kern/kernel.asm	/^    f010e9db:	8b 85 3c ff ff ff    	mov    -0xc4(%rbp),%eax$/;"	l
f010e9e1	obj/kern/kernel.asm	/^    f010e9e1:	48 81 c4 18 01 00 00 	add    $0x118,%rsp$/;"	l
f010e9e8	obj/kern/kernel.asm	/^    f010e9e8:	5b                   	pop    %rbx$/;"	l
f010e9e9	obj/kern/kernel.asm	/^    f010e9e9:	c9                   	leaveq $/;"	l
f010e9ea	obj/kern/kernel.asm	/^    f010e9ea:	c3                   	retq   $/;"	l
f010e9ec	obj/kern/kernel.asm	/^    f010e9ec:	55                   	push   %rbp$/;"	l
f010e9ed	obj/kern/kernel.asm	/^    f010e9ed:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010e9f0	obj/kern/kernel.asm	/^    f010e9f0:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
f010e9f4	obj/kern/kernel.asm	/^    f010e9f4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
f010e9f8	obj/kern/kernel.asm	/^    f010e9f8:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)$/;"	l
f010e9fd	obj/kern/kernel.asm	/^    f010e9fd:	74 22                	je     fffffffff010ea21 <end+0xfffffffefe66d681>$/;"	l
f010e9ff	obj/kern/kernel.asm	/^    f010e9ff:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010ea03	obj/kern/kernel.asm	/^    f010ea03:	48 89 c6             	mov    %rax,%rsi$/;"	l
f010ea06	obj/kern/kernel.asm	/^    f010ea06:	48 bf 30 34 11 f0 00 	mov    $0xf0113430,%rdi$/;"	l
f010ea0d	obj/kern/kernel.asm	/^    f010ea0d:	00 00 00 $/;"	l
f010ea10	obj/kern/kernel.asm	/^    f010ea10:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010ea15	obj/kern/kernel.asm	/^    f010ea15:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f010ea1c	obj/kern/kernel.asm	/^    f010ea1c:	00 00 00 $/;"	l
f010ea1f	obj/kern/kernel.asm	/^    f010ea1f:	ff d2                	callq  *%rdx$/;"	l
f010ea21	obj/kern/kernel.asm	/^    f010ea21:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)$/;"	l
f010ea28	obj/kern/kernel.asm	/^    f010ea28:	bf 00 00 00 00       	mov    $0x0,%edi$/;"	l
f010ea2d	obj/kern/kernel.asm	/^    f010ea2d:	48 b8 b7 12 10 f0 00 	mov    $0xf01012b7,%rax$/;"	l
f010ea34	obj/kern/kernel.asm	/^    f010ea34:	00 00 00 $/;"	l
f010ea37	obj/kern/kernel.asm	/^    f010ea37:	ff d0                	callq  *%rax$/;"	l
f010ea39	obj/kern/kernel.asm	/^    f010ea39:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
f010ea3c	obj/kern/kernel.asm	/^    f010ea3c:	eb 01                	jmp    fffffffff010ea3f <end+0xfffffffefe66d69f>$/;"	l
f010ea3e	obj/kern/kernel.asm	/^    f010ea3e:	90                   	nop$/;"	l
f010ea3f	obj/kern/kernel.asm	/^    f010ea3f:	48 b8 95 12 10 f0 00 	mov    $0xf0101295,%rax$/;"	l
f010ea46	obj/kern/kernel.asm	/^    f010ea46:	00 00 00 $/;"	l
f010ea49	obj/kern/kernel.asm	/^    f010ea49:	ff d0                	callq  *%rax$/;"	l
f010ea4b	obj/kern/kernel.asm	/^    f010ea4b:	89 45 f8             	mov    %eax,-0x8(%rbp)$/;"	l
f010ea4e	obj/kern/kernel.asm	/^    f010ea4e:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)$/;"	l
f010ea52	obj/kern/kernel.asm	/^    f010ea52:	79 2a                	jns    fffffffff010ea7e <end+0xfffffffefe66d6de>$/;"	l
f010ea54	obj/kern/kernel.asm	/^    f010ea54:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
f010ea57	obj/kern/kernel.asm	/^    f010ea57:	89 c6                	mov    %eax,%esi$/;"	l
f010ea59	obj/kern/kernel.asm	/^    f010ea59:	48 bf 33 34 11 f0 00 	mov    $0xf0113433,%rdi$/;"	l
f010ea60	obj/kern/kernel.asm	/^    f010ea60:	00 00 00 $/;"	l
f010ea63	obj/kern/kernel.asm	/^    f010ea63:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010ea68	obj/kern/kernel.asm	/^    f010ea68:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f010ea6f	obj/kern/kernel.asm	/^    f010ea6f:	00 00 00 $/;"	l
f010ea72	obj/kern/kernel.asm	/^    f010ea72:	ff d2                	callq  *%rdx$/;"	l
f010ea74	obj/kern/kernel.asm	/^    f010ea74:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010ea79	obj/kern/kernel.asm	/^    f010ea79:	e9 c0 00 00 00       	jmpq   fffffffff010eb3e <end+0xfffffffefe66d79e>$/;"	l
f010ea7e	obj/kern/kernel.asm	/^    f010ea7e:	83 7d f8 08          	cmpl   $0x8,-0x8(%rbp)$/;"	l
f010ea82	obj/kern/kernel.asm	/^    f010ea82:	74 06                	je     fffffffff010ea8a <end+0xfffffffefe66d6ea>$/;"	l
f010ea84	obj/kern/kernel.asm	/^    f010ea84:	83 7d f8 7f          	cmpl   $0x7f,-0x8(%rbp)$/;"	l
f010ea88	obj/kern/kernel.asm	/^    f010ea88:	75 26                	jne    fffffffff010eab0 <end+0xfffffffefe66d710>$/;"	l
f010ea8a	obj/kern/kernel.asm	/^    f010ea8a:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)$/;"	l
f010ea8e	obj/kern/kernel.asm	/^    f010ea8e:	7e 20                	jle    fffffffff010eab0 <end+0xfffffffefe66d710>$/;"	l
f010ea90	obj/kern/kernel.asm	/^    f010ea90:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)$/;"	l
f010ea94	obj/kern/kernel.asm	/^    f010ea94:	74 11                	je     fffffffff010eaa7 <end+0xfffffffefe66d707>$/;"	l
f010ea96	obj/kern/kernel.asm	/^    f010ea96:	bf 08 00 00 00       	mov    $0x8,%edi$/;"	l
f010ea9b	obj/kern/kernel.asm	/^    f010ea9b:	48 b8 77 12 10 f0 00 	mov    $0xf0101277,%rax$/;"	l
f010eaa2	obj/kern/kernel.asm	/^    f010eaa2:	00 00 00 $/;"	l
f010eaa5	obj/kern/kernel.asm	/^    f010eaa5:	ff d0                	callq  *%rax$/;"	l
f010eaa7	obj/kern/kernel.asm	/^    f010eaa7:	83 6d f4 01          	subl   $0x1,-0xc(%rbp)$/;"	l
f010eaab	obj/kern/kernel.asm	/^    f010eaab:	e9 89 00 00 00       	jmpq   fffffffff010eb39 <end+0xfffffffefe66d799>$/;"	l
f010eab0	obj/kern/kernel.asm	/^    f010eab0:	83 7d f8 1f          	cmpl   $0x1f,-0x8(%rbp)$/;"	l
f010eab4	obj/kern/kernel.asm	/^    f010eab4:	7e 3d                	jle    fffffffff010eaf3 <end+0xfffffffefe66d753>$/;"	l
f010eab6	obj/kern/kernel.asm	/^    f010eab6:	81 7d f4 fe 03 00 00 	cmpl   $0x3fe,-0xc(%rbp)$/;"	l
f010eabd	obj/kern/kernel.asm	/^    f010eabd:	7f 34                	jg     fffffffff010eaf3 <end+0xfffffffefe66d753>$/;"	l
f010eabf	obj/kern/kernel.asm	/^    f010eabf:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)$/;"	l
f010eac3	obj/kern/kernel.asm	/^    f010eac3:	74 11                	je     fffffffff010ead6 <end+0xfffffffefe66d736>$/;"	l
f010eac5	obj/kern/kernel.asm	/^    f010eac5:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
f010eac8	obj/kern/kernel.asm	/^    f010eac8:	89 c7                	mov    %eax,%edi$/;"	l
f010eaca	obj/kern/kernel.asm	/^    f010eaca:	48 b8 77 12 10 f0 00 	mov    $0xf0101277,%rax$/;"	l
f010ead1	obj/kern/kernel.asm	/^    f010ead1:	00 00 00 $/;"	l
f010ead4	obj/kern/kernel.asm	/^    f010ead4:	ff d0                	callq  *%rax$/;"	l
f010ead6	obj/kern/kernel.asm	/^    f010ead6:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
f010ead9	obj/kern/kernel.asm	/^    f010ead9:	8b 55 f8             	mov    -0x8(%rbp),%edx$/;"	l
f010eadc	obj/kern/kernel.asm	/^    f010eadc:	89 d1                	mov    %edx,%ecx$/;"	l
f010eade	obj/kern/kernel.asm	/^    f010eade:	48 ba 20 73 a2 f1 00 	mov    $0xf1a27320,%rdx$/;"	l
f010eae5	obj/kern/kernel.asm	/^    f010eae5:	00 00 00 $/;"	l
f010eae8	obj/kern/kernel.asm	/^    f010eae8:	48 98                	cltq   $/;"	l
f010eaea	obj/kern/kernel.asm	/^    f010eaea:	88 0c 02             	mov    %cl,(%rdx,%rax,1)$/;"	l
f010eaed	obj/kern/kernel.asm	/^    f010eaed:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)$/;"	l
f010eaf1	obj/kern/kernel.asm	/^    f010eaf1:	eb 46                	jmp    fffffffff010eb39 <end+0xfffffffefe66d799>$/;"	l
f010eaf3	obj/kern/kernel.asm	/^    f010eaf3:	83 7d f8 0a          	cmpl   $0xa,-0x8(%rbp)$/;"	l
f010eaf7	obj/kern/kernel.asm	/^    f010eaf7:	74 0a                	je     fffffffff010eb03 <end+0xfffffffefe66d763>$/;"	l
f010eaf9	obj/kern/kernel.asm	/^    f010eaf9:	83 7d f8 0d          	cmpl   $0xd,-0x8(%rbp)$/;"	l
f010eafd	obj/kern/kernel.asm	/^    f010eafd:	0f 85 3b ff ff ff    	jne    fffffffff010ea3e <end+0xfffffffefe66d69e>$/;"	l
f010eb03	obj/kern/kernel.asm	/^    f010eb03:	83 7d fc 00          	cmpl   $0x0,-0x4(%rbp)$/;"	l
f010eb07	obj/kern/kernel.asm	/^    f010eb07:	74 11                	je     fffffffff010eb1a <end+0xfffffffefe66d77a>$/;"	l
f010eb09	obj/kern/kernel.asm	/^    f010eb09:	bf 0a 00 00 00       	mov    $0xa,%edi$/;"	l
f010eb0e	obj/kern/kernel.asm	/^    f010eb0e:	48 b8 77 12 10 f0 00 	mov    $0xf0101277,%rax$/;"	l
f010eb15	obj/kern/kernel.asm	/^    f010eb15:	00 00 00 $/;"	l
f010eb18	obj/kern/kernel.asm	/^    f010eb18:	ff d0                	callq  *%rax$/;"	l
f010eb1a	obj/kern/kernel.asm	/^    f010eb1a:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
f010eb1d	obj/kern/kernel.asm	/^    f010eb1d:	48 ba 20 73 a2 f1 00 	mov    $0xf1a27320,%rdx$/;"	l
f010eb24	obj/kern/kernel.asm	/^    f010eb24:	00 00 00 $/;"	l
f010eb27	obj/kern/kernel.asm	/^    f010eb27:	48 98                	cltq   $/;"	l
f010eb29	obj/kern/kernel.asm	/^    f010eb29:	c6 04 02 00          	movb   $0x0,(%rdx,%rax,1)$/;"	l
f010eb2d	obj/kern/kernel.asm	/^    f010eb2d:	48 b8 20 73 a2 f1 00 	mov    $0xf1a27320,%rax$/;"	l
f010eb34	obj/kern/kernel.asm	/^    f010eb34:	00 00 00 $/;"	l
f010eb37	obj/kern/kernel.asm	/^    f010eb37:	eb 05                	jmp    fffffffff010eb3e <end+0xfffffffefe66d79e>$/;"	l
f010eb39	obj/kern/kernel.asm	/^    f010eb39:	e9 01 ff ff ff       	jmpq   fffffffff010ea3f <end+0xfffffffefe66d69f>$/;"	l
f010eb3e	obj/kern/kernel.asm	/^    f010eb3e:	c9                   	leaveq $/;"	l
f010eb3f	obj/kern/kernel.asm	/^    f010eb3f:	c3                   	retq   $/;"	l
f010eb40	obj/kern/kernel.asm	/^    f010eb40:	55                   	push   %rbp$/;"	l
f010eb41	obj/kern/kernel.asm	/^    f010eb41:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010eb44	obj/kern/kernel.asm	/^    f010eb44:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
f010eb48	obj/kern/kernel.asm	/^    f010eb48:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
f010eb4c	obj/kern/kernel.asm	/^    f010eb4c:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
f010eb53	obj/kern/kernel.asm	/^    f010eb53:	eb 09                	jmp    fffffffff010eb5e <end+0xfffffffefe66d7be>$/;"	l
f010eb55	obj/kern/kernel.asm	/^    f010eb55:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
f010eb59	obj/kern/kernel.asm	/^    f010eb59:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)$/;"	l
f010eb5e	obj/kern/kernel.asm	/^    f010eb5e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010eb62	obj/kern/kernel.asm	/^    f010eb62:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f010eb65	obj/kern/kernel.asm	/^    f010eb65:	84 c0                	test   %al,%al$/;"	l
f010eb67	obj/kern/kernel.asm	/^    f010eb67:	75 ec                	jne    fffffffff010eb55 <end+0xfffffffefe66d7b5>$/;"	l
f010eb69	obj/kern/kernel.asm	/^    f010eb69:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
f010eb6c	obj/kern/kernel.asm	/^    f010eb6c:	c9                   	leaveq $/;"	l
f010eb6d	obj/kern/kernel.asm	/^    f010eb6d:	c3                   	retq   $/;"	l
f010eb6e	obj/kern/kernel.asm	/^    f010eb6e:	55                   	push   %rbp$/;"	l
f010eb6f	obj/kern/kernel.asm	/^    f010eb6f:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010eb72	obj/kern/kernel.asm	/^    f010eb72:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
f010eb76	obj/kern/kernel.asm	/^    f010eb76:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
f010eb7a	obj/kern/kernel.asm	/^    f010eb7a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
f010eb7e	obj/kern/kernel.asm	/^    f010eb7e:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
f010eb85	obj/kern/kernel.asm	/^    f010eb85:	eb 0e                	jmp    fffffffff010eb95 <end+0xfffffffefe66d7f5>$/;"	l
f010eb87	obj/kern/kernel.asm	/^    f010eb87:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)$/;"	l
f010eb8b	obj/kern/kernel.asm	/^    f010eb8b:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)$/;"	l
f010eb90	obj/kern/kernel.asm	/^    f010eb90:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)$/;"	l
f010eb95	obj/kern/kernel.asm	/^    f010eb95:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)$/;"	l
f010eb9a	obj/kern/kernel.asm	/^    f010eb9a:	74 0b                	je     fffffffff010eba7 <end+0xfffffffefe66d807>$/;"	l
f010eb9c	obj/kern/kernel.asm	/^    f010eb9c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010eba0	obj/kern/kernel.asm	/^    f010eba0:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f010eba3	obj/kern/kernel.asm	/^    f010eba3:	84 c0                	test   %al,%al$/;"	l
f010eba5	obj/kern/kernel.asm	/^    f010eba5:	75 e0                	jne    fffffffff010eb87 <end+0xfffffffefe66d7e7>$/;"	l
f010eba7	obj/kern/kernel.asm	/^    f010eba7:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
f010ebaa	obj/kern/kernel.asm	/^    f010ebaa:	c9                   	leaveq $/;"	l
f010ebab	obj/kern/kernel.asm	/^    f010ebab:	c3                   	retq   $/;"	l
f010ebac	obj/kern/kernel.asm	/^    f010ebac:	55                   	push   %rbp$/;"	l
f010ebad	obj/kern/kernel.asm	/^    f010ebad:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010ebb0	obj/kern/kernel.asm	/^    f010ebb0:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
f010ebb4	obj/kern/kernel.asm	/^    f010ebb4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
f010ebb8	obj/kern/kernel.asm	/^    f010ebb8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
f010ebbc	obj/kern/kernel.asm	/^    f010ebbc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010ebc0	obj/kern/kernel.asm	/^    f010ebc0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
f010ebc4	obj/kern/kernel.asm	/^    f010ebc4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
f010ebc8	obj/kern/kernel.asm	/^    f010ebc8:	0f b6 10             	movzbl (%rax),%edx$/;"	l
f010ebcb	obj/kern/kernel.asm	/^    f010ebcb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010ebcf	obj/kern/kernel.asm	/^    f010ebcf:	88 10                	mov    %dl,(%rax)$/;"	l
f010ebd1	obj/kern/kernel.asm	/^    f010ebd1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010ebd5	obj/kern/kernel.asm	/^    f010ebd5:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f010ebd8	obj/kern/kernel.asm	/^    f010ebd8:	84 c0                	test   %al,%al$/;"	l
f010ebda	obj/kern/kernel.asm	/^    f010ebda:	0f 95 c0             	setne  %al$/;"	l
f010ebdd	obj/kern/kernel.asm	/^    f010ebdd:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)$/;"	l
f010ebe2	obj/kern/kernel.asm	/^    f010ebe2:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)$/;"	l
f010ebe7	obj/kern/kernel.asm	/^    f010ebe7:	84 c0                	test   %al,%al$/;"	l
f010ebe9	obj/kern/kernel.asm	/^    f010ebe9:	75 d9                	jne    fffffffff010ebc4 <end+0xfffffffefe66d824>$/;"	l
f010ebeb	obj/kern/kernel.asm	/^    f010ebeb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f010ebef	obj/kern/kernel.asm	/^    f010ebef:	c9                   	leaveq $/;"	l
f010ebf0	obj/kern/kernel.asm	/^    f010ebf0:	c3                   	retq   $/;"	l
f010ebf1	obj/kern/kernel.asm	/^    f010ebf1:	55                   	push   %rbp$/;"	l
f010ebf2	obj/kern/kernel.asm	/^    f010ebf2:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010ebf5	obj/kern/kernel.asm	/^    f010ebf5:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
f010ebf9	obj/kern/kernel.asm	/^    f010ebf9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
f010ebfd	obj/kern/kernel.asm	/^    f010ebfd:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
f010ec01	obj/kern/kernel.asm	/^    f010ec01:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010ec05	obj/kern/kernel.asm	/^    f010ec05:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010ec08	obj/kern/kernel.asm	/^    f010ec08:	48 b8 40 eb 10 f0 00 	mov    $0xf010eb40,%rax$/;"	l
f010ec0f	obj/kern/kernel.asm	/^    f010ec0f:	00 00 00 $/;"	l
f010ec12	obj/kern/kernel.asm	/^    f010ec12:	ff d0                	callq  *%rax$/;"	l
f010ec14	obj/kern/kernel.asm	/^    f010ec14:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
f010ec17	obj/kern/kernel.asm	/^    f010ec17:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
f010ec1a	obj/kern/kernel.asm	/^    f010ec1a:	48 98                	cltq   $/;"	l
f010ec1c	obj/kern/kernel.asm	/^    f010ec1c:	48 03 45 e8          	add    -0x18(%rbp),%rax$/;"	l
f010ec20	obj/kern/kernel.asm	/^    f010ec20:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx$/;"	l
f010ec24	obj/kern/kernel.asm	/^    f010ec24:	48 89 d6             	mov    %rdx,%rsi$/;"	l
f010ec27	obj/kern/kernel.asm	/^    f010ec27:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010ec2a	obj/kern/kernel.asm	/^    f010ec2a:	48 b8 ac eb 10 f0 00 	mov    $0xf010ebac,%rax$/;"	l
f010ec31	obj/kern/kernel.asm	/^    f010ec31:	00 00 00 $/;"	l
f010ec34	obj/kern/kernel.asm	/^    f010ec34:	ff d0                	callq  *%rax$/;"	l
f010ec36	obj/kern/kernel.asm	/^    f010ec36:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010ec3a	obj/kern/kernel.asm	/^    f010ec3a:	c9                   	leaveq $/;"	l
f010ec3b	obj/kern/kernel.asm	/^    f010ec3b:	c3                   	retq   $/;"	l
f010ec3c	obj/kern/kernel.asm	/^    f010ec3c:	55                   	push   %rbp$/;"	l
f010ec3d	obj/kern/kernel.asm	/^    f010ec3d:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010ec40	obj/kern/kernel.asm	/^    f010ec40:	48 83 ec 28          	sub    $0x28,%rsp$/;"	l
f010ec44	obj/kern/kernel.asm	/^    f010ec44:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
f010ec48	obj/kern/kernel.asm	/^    f010ec48:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
f010ec4c	obj/kern/kernel.asm	/^    f010ec4c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)$/;"	l
f010ec50	obj/kern/kernel.asm	/^    f010ec50:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010ec54	obj/kern/kernel.asm	/^    f010ec54:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
f010ec58	obj/kern/kernel.asm	/^    f010ec58:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)$/;"	l
f010ec5f	obj/kern/kernel.asm	/^    f010ec5f:	00 $/;"	l
f010ec60	obj/kern/kernel.asm	/^    f010ec60:	eb 27                	jmp    fffffffff010ec89 <end+0xfffffffefe66d8e9>$/;"	l
f010ec62	obj/kern/kernel.asm	/^    f010ec62:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
f010ec66	obj/kern/kernel.asm	/^    f010ec66:	0f b6 10             	movzbl (%rax),%edx$/;"	l
f010ec69	obj/kern/kernel.asm	/^    f010ec69:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010ec6d	obj/kern/kernel.asm	/^    f010ec6d:	88 10                	mov    %dl,(%rax)$/;"	l
f010ec6f	obj/kern/kernel.asm	/^    f010ec6f:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)$/;"	l
f010ec74	obj/kern/kernel.asm	/^    f010ec74:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
f010ec78	obj/kern/kernel.asm	/^    f010ec78:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f010ec7b	obj/kern/kernel.asm	/^    f010ec7b:	84 c0                	test   %al,%al$/;"	l
f010ec7d	obj/kern/kernel.asm	/^    f010ec7d:	74 05                	je     fffffffff010ec84 <end+0xfffffffefe66d8e4>$/;"	l
f010ec7f	obj/kern/kernel.asm	/^    f010ec7f:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)$/;"	l
f010ec84	obj/kern/kernel.asm	/^    f010ec84:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)$/;"	l
f010ec89	obj/kern/kernel.asm	/^    f010ec89:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
f010ec8d	obj/kern/kernel.asm	/^    f010ec8d:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax$/;"	l
f010ec91	obj/kern/kernel.asm	/^    f010ec91:	72 cf                	jb     fffffffff010ec62 <end+0xfffffffefe66d8c2>$/;"	l
f010ec93	obj/kern/kernel.asm	/^    f010ec93:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f010ec97	obj/kern/kernel.asm	/^    f010ec97:	c9                   	leaveq $/;"	l
f010ec98	obj/kern/kernel.asm	/^    f010ec98:	c3                   	retq   $/;"	l
f010ec99	obj/kern/kernel.asm	/^    f010ec99:	55                   	push   %rbp$/;"	l
f010ec9a	obj/kern/kernel.asm	/^    f010ec9a:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010ec9d	obj/kern/kernel.asm	/^    f010ec9d:	48 83 ec 28          	sub    $0x28,%rsp$/;"	l
f010eca1	obj/kern/kernel.asm	/^    f010eca1:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
f010eca5	obj/kern/kernel.asm	/^    f010eca5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
f010eca9	obj/kern/kernel.asm	/^    f010eca9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)$/;"	l
f010ecad	obj/kern/kernel.asm	/^    f010ecad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010ecb1	obj/kern/kernel.asm	/^    f010ecb1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
f010ecb5	obj/kern/kernel.asm	/^    f010ecb5:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)$/;"	l
f010ecba	obj/kern/kernel.asm	/^    f010ecba:	74 37                	je     fffffffff010ecf3 <end+0xfffffffefe66d953>$/;"	l
f010ecbc	obj/kern/kernel.asm	/^    f010ecbc:	eb 17                	jmp    fffffffff010ecd5 <end+0xfffffffefe66d935>$/;"	l
f010ecbe	obj/kern/kernel.asm	/^    f010ecbe:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
f010ecc2	obj/kern/kernel.asm	/^    f010ecc2:	0f b6 10             	movzbl (%rax),%edx$/;"	l
f010ecc5	obj/kern/kernel.asm	/^    f010ecc5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010ecc9	obj/kern/kernel.asm	/^    f010ecc9:	88 10                	mov    %dl,(%rax)$/;"	l
f010eccb	obj/kern/kernel.asm	/^    f010eccb:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)$/;"	l
f010ecd0	obj/kern/kernel.asm	/^    f010ecd0:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)$/;"	l
f010ecd5	obj/kern/kernel.asm	/^    f010ecd5:	48 83 6d d8 01       	subq   $0x1,-0x28(%rbp)$/;"	l
f010ecda	obj/kern/kernel.asm	/^    f010ecda:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)$/;"	l
f010ecdf	obj/kern/kernel.asm	/^    f010ecdf:	74 0b                	je     fffffffff010ecec <end+0xfffffffefe66d94c>$/;"	l
f010ece1	obj/kern/kernel.asm	/^    f010ece1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
f010ece5	obj/kern/kernel.asm	/^    f010ece5:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f010ece8	obj/kern/kernel.asm	/^    f010ece8:	84 c0                	test   %al,%al$/;"	l
f010ecea	obj/kern/kernel.asm	/^    f010ecea:	75 d2                	jne    fffffffff010ecbe <end+0xfffffffefe66d91e>$/;"	l
f010ecec	obj/kern/kernel.asm	/^    f010ecec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010ecf0	obj/kern/kernel.asm	/^    f010ecf0:	c6 00 00             	movb   $0x0,(%rax)$/;"	l
f010ecf3	obj/kern/kernel.asm	/^    f010ecf3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
f010ecf7	obj/kern/kernel.asm	/^    f010ecf7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f010ecfb	obj/kern/kernel.asm	/^    f010ecfb:	48 89 d1             	mov    %rdx,%rcx$/;"	l
f010ecfe	obj/kern/kernel.asm	/^    f010ecfe:	48 29 c1             	sub    %rax,%rcx$/;"	l
f010ed01	obj/kern/kernel.asm	/^    f010ed01:	48 89 c8             	mov    %rcx,%rax$/;"	l
f010ed04	obj/kern/kernel.asm	/^    f010ed04:	c9                   	leaveq $/;"	l
f010ed05	obj/kern/kernel.asm	/^    f010ed05:	c3                   	retq   $/;"	l
f010ed06	obj/kern/kernel.asm	/^    f010ed06:	55                   	push   %rbp$/;"	l
f010ed07	obj/kern/kernel.asm	/^    f010ed07:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010ed0a	obj/kern/kernel.asm	/^    f010ed0a:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
f010ed0e	obj/kern/kernel.asm	/^    f010ed0e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
f010ed12	obj/kern/kernel.asm	/^    f010ed12:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
f010ed16	obj/kern/kernel.asm	/^    f010ed16:	eb 0a                	jmp    fffffffff010ed22 <end+0xfffffffefe66d982>$/;"	l
f010ed18	obj/kern/kernel.asm	/^    f010ed18:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)$/;"	l
f010ed1d	obj/kern/kernel.asm	/^    f010ed1d:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)$/;"	l
f010ed22	obj/kern/kernel.asm	/^    f010ed22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f010ed26	obj/kern/kernel.asm	/^    f010ed26:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f010ed29	obj/kern/kernel.asm	/^    f010ed29:	84 c0                	test   %al,%al$/;"	l
f010ed2b	obj/kern/kernel.asm	/^    f010ed2b:	74 12                	je     fffffffff010ed3f <end+0xfffffffefe66d99f>$/;"	l
f010ed2d	obj/kern/kernel.asm	/^    f010ed2d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f010ed31	obj/kern/kernel.asm	/^    f010ed31:	0f b6 10             	movzbl (%rax),%edx$/;"	l
f010ed34	obj/kern/kernel.asm	/^    f010ed34:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
f010ed38	obj/kern/kernel.asm	/^    f010ed38:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f010ed3b	obj/kern/kernel.asm	/^    f010ed3b:	38 c2                	cmp    %al,%dl$/;"	l
f010ed3d	obj/kern/kernel.asm	/^    f010ed3d:	74 d9                	je     fffffffff010ed18 <end+0xfffffffefe66d978>$/;"	l
f010ed3f	obj/kern/kernel.asm	/^    f010ed3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f010ed43	obj/kern/kernel.asm	/^    f010ed43:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f010ed46	obj/kern/kernel.asm	/^    f010ed46:	0f b6 d0             	movzbl %al,%edx$/;"	l
f010ed49	obj/kern/kernel.asm	/^    f010ed49:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
f010ed4d	obj/kern/kernel.asm	/^    f010ed4d:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f010ed50	obj/kern/kernel.asm	/^    f010ed50:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010ed53	obj/kern/kernel.asm	/^    f010ed53:	89 d1                	mov    %edx,%ecx$/;"	l
f010ed55	obj/kern/kernel.asm	/^    f010ed55:	29 c1                	sub    %eax,%ecx$/;"	l
f010ed57	obj/kern/kernel.asm	/^    f010ed57:	89 c8                	mov    %ecx,%eax$/;"	l
f010ed59	obj/kern/kernel.asm	/^    f010ed59:	c9                   	leaveq $/;"	l
f010ed5a	obj/kern/kernel.asm	/^    f010ed5a:	c3                   	retq   $/;"	l
f010ed5b	obj/kern/kernel.asm	/^    f010ed5b:	55                   	push   %rbp$/;"	l
f010ed5c	obj/kern/kernel.asm	/^    f010ed5c:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010ed5f	obj/kern/kernel.asm	/^    f010ed5f:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
f010ed63	obj/kern/kernel.asm	/^    f010ed63:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
f010ed67	obj/kern/kernel.asm	/^    f010ed67:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
f010ed6b	obj/kern/kernel.asm	/^    f010ed6b:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)$/;"	l
f010ed6f	obj/kern/kernel.asm	/^    f010ed6f:	eb 0f                	jmp    fffffffff010ed80 <end+0xfffffffefe66d9e0>$/;"	l
f010ed71	obj/kern/kernel.asm	/^    f010ed71:	48 83 6d e8 01       	subq   $0x1,-0x18(%rbp)$/;"	l
f010ed76	obj/kern/kernel.asm	/^    f010ed76:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)$/;"	l
f010ed7b	obj/kern/kernel.asm	/^    f010ed7b:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)$/;"	l
f010ed80	obj/kern/kernel.asm	/^    f010ed80:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)$/;"	l
f010ed85	obj/kern/kernel.asm	/^    f010ed85:	74 1d                	je     fffffffff010eda4 <end+0xfffffffefe66da04>$/;"	l
f010ed87	obj/kern/kernel.asm	/^    f010ed87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f010ed8b	obj/kern/kernel.asm	/^    f010ed8b:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f010ed8e	obj/kern/kernel.asm	/^    f010ed8e:	84 c0                	test   %al,%al$/;"	l
f010ed90	obj/kern/kernel.asm	/^    f010ed90:	74 12                	je     fffffffff010eda4 <end+0xfffffffefe66da04>$/;"	l
f010ed92	obj/kern/kernel.asm	/^    f010ed92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f010ed96	obj/kern/kernel.asm	/^    f010ed96:	0f b6 10             	movzbl (%rax),%edx$/;"	l
f010ed99	obj/kern/kernel.asm	/^    f010ed99:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
f010ed9d	obj/kern/kernel.asm	/^    f010ed9d:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f010eda0	obj/kern/kernel.asm	/^    f010eda0:	38 c2                	cmp    %al,%dl$/;"	l
f010eda2	obj/kern/kernel.asm	/^    f010eda2:	74 cd                	je     fffffffff010ed71 <end+0xfffffffefe66d9d1>$/;"	l
f010eda4	obj/kern/kernel.asm	/^    f010eda4:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)$/;"	l
f010eda9	obj/kern/kernel.asm	/^    f010eda9:	75 07                	jne    fffffffff010edb2 <end+0xfffffffefe66da12>$/;"	l
f010edab	obj/kern/kernel.asm	/^    f010edab:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010edb0	obj/kern/kernel.asm	/^    f010edb0:	eb 1a                	jmp    fffffffff010edcc <end+0xfffffffefe66da2c>$/;"	l
f010edb2	obj/kern/kernel.asm	/^    f010edb2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f010edb6	obj/kern/kernel.asm	/^    f010edb6:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f010edb9	obj/kern/kernel.asm	/^    f010edb9:	0f b6 d0             	movzbl %al,%edx$/;"	l
f010edbc	obj/kern/kernel.asm	/^    f010edbc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
f010edc0	obj/kern/kernel.asm	/^    f010edc0:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f010edc3	obj/kern/kernel.asm	/^    f010edc3:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010edc6	obj/kern/kernel.asm	/^    f010edc6:	89 d1                	mov    %edx,%ecx$/;"	l
f010edc8	obj/kern/kernel.asm	/^    f010edc8:	29 c1                	sub    %eax,%ecx$/;"	l
f010edca	obj/kern/kernel.asm	/^    f010edca:	89 c8                	mov    %ecx,%eax$/;"	l
f010edcc	obj/kern/kernel.asm	/^    f010edcc:	c9                   	leaveq $/;"	l
f010edcd	obj/kern/kernel.asm	/^    f010edcd:	c3                   	retq   $/;"	l
f010edce	obj/kern/kernel.asm	/^    f010edce:	55                   	push   %rbp$/;"	l
f010edcf	obj/kern/kernel.asm	/^    f010edcf:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010edd2	obj/kern/kernel.asm	/^    f010edd2:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
f010edd6	obj/kern/kernel.asm	/^    f010edd6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
f010edda	obj/kern/kernel.asm	/^    f010edda:	89 f0                	mov    %esi,%eax$/;"	l
f010eddc	obj/kern/kernel.asm	/^    f010eddc:	88 45 f4             	mov    %al,-0xc(%rbp)$/;"	l
f010eddf	obj/kern/kernel.asm	/^    f010eddf:	eb 17                	jmp    fffffffff010edf8 <end+0xfffffffefe66da58>$/;"	l
f010ede1	obj/kern/kernel.asm	/^    f010ede1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f010ede5	obj/kern/kernel.asm	/^    f010ede5:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f010ede8	obj/kern/kernel.asm	/^    f010ede8:	3a 45 f4             	cmp    -0xc(%rbp),%al$/;"	l
f010edeb	obj/kern/kernel.asm	/^    f010edeb:	75 06                	jne    fffffffff010edf3 <end+0xfffffffefe66da53>$/;"	l
f010eded	obj/kern/kernel.asm	/^    f010eded:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f010edf1	obj/kern/kernel.asm	/^    f010edf1:	eb 15                	jmp    fffffffff010ee08 <end+0xfffffffefe66da68>$/;"	l
f010edf3	obj/kern/kernel.asm	/^    f010edf3:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)$/;"	l
f010edf8	obj/kern/kernel.asm	/^    f010edf8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f010edfc	obj/kern/kernel.asm	/^    f010edfc:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f010edff	obj/kern/kernel.asm	/^    f010edff:	84 c0                	test   %al,%al$/;"	l
f010ee01	obj/kern/kernel.asm	/^    f010ee01:	75 de                	jne    fffffffff010ede1 <end+0xfffffffefe66da41>$/;"	l
f010ee03	obj/kern/kernel.asm	/^    f010ee03:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010ee08	obj/kern/kernel.asm	/^    f010ee08:	c9                   	leaveq $/;"	l
f010ee09	obj/kern/kernel.asm	/^    f010ee09:	c3                   	retq   $/;"	l
f010ee0a	obj/kern/kernel.asm	/^    f010ee0a:	55                   	push   %rbp$/;"	l
f010ee0b	obj/kern/kernel.asm	/^    f010ee0b:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010ee0e	obj/kern/kernel.asm	/^    f010ee0e:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
f010ee12	obj/kern/kernel.asm	/^    f010ee12:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
f010ee16	obj/kern/kernel.asm	/^    f010ee16:	89 f0                	mov    %esi,%eax$/;"	l
f010ee18	obj/kern/kernel.asm	/^    f010ee18:	88 45 f4             	mov    %al,-0xc(%rbp)$/;"	l
f010ee1b	obj/kern/kernel.asm	/^    f010ee1b:	eb 11                	jmp    fffffffff010ee2e <end+0xfffffffefe66da8e>$/;"	l
f010ee1d	obj/kern/kernel.asm	/^    f010ee1d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f010ee21	obj/kern/kernel.asm	/^    f010ee21:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f010ee24	obj/kern/kernel.asm	/^    f010ee24:	3a 45 f4             	cmp    -0xc(%rbp),%al$/;"	l
f010ee27	obj/kern/kernel.asm	/^    f010ee27:	74 12                	je     fffffffff010ee3b <end+0xfffffffefe66da9b>$/;"	l
f010ee29	obj/kern/kernel.asm	/^    f010ee29:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)$/;"	l
f010ee2e	obj/kern/kernel.asm	/^    f010ee2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f010ee32	obj/kern/kernel.asm	/^    f010ee32:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f010ee35	obj/kern/kernel.asm	/^    f010ee35:	84 c0                	test   %al,%al$/;"	l
f010ee37	obj/kern/kernel.asm	/^    f010ee37:	75 e4                	jne    fffffffff010ee1d <end+0xfffffffefe66da7d>$/;"	l
f010ee39	obj/kern/kernel.asm	/^    f010ee39:	eb 01                	jmp    fffffffff010ee3c <end+0xfffffffefe66da9c>$/;"	l
f010ee3b	obj/kern/kernel.asm	/^    f010ee3b:	90                   	nop$/;"	l
f010ee3c	obj/kern/kernel.asm	/^    f010ee3c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f010ee40	obj/kern/kernel.asm	/^    f010ee40:	c9                   	leaveq $/;"	l
f010ee41	obj/kern/kernel.asm	/^    f010ee41:	c3                   	retq   $/;"	l
f010ee42	obj/kern/kernel.asm	/^    f010ee42:	55                   	push   %rbp$/;"	l
f010ee43	obj/kern/kernel.asm	/^    f010ee43:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010ee46	obj/kern/kernel.asm	/^    f010ee46:	48 83 ec 28          	sub    $0x28,%rsp$/;"	l
f010ee4a	obj/kern/kernel.asm	/^    f010ee4a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
f010ee4e	obj/kern/kernel.asm	/^    f010ee4e:	89 75 e4             	mov    %esi,-0x1c(%rbp)$/;"	l
f010ee51	obj/kern/kernel.asm	/^    f010ee51:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)$/;"	l
f010ee55	obj/kern/kernel.asm	/^    f010ee55:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)$/;"	l
f010ee5a	obj/kern/kernel.asm	/^    f010ee5a:	75 06                	jne    fffffffff010ee62 <end+0xfffffffefe66dac2>$/;"	l
f010ee5c	obj/kern/kernel.asm	/^    f010ee5c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010ee60	obj/kern/kernel.asm	/^    f010ee60:	eb 69                	jmp    fffffffff010eecb <end+0xfffffffefe66db2b>$/;"	l
f010ee62	obj/kern/kernel.asm	/^    f010ee62:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010ee66	obj/kern/kernel.asm	/^    f010ee66:	83 e0 03             	and    $0x3,%eax$/;"	l
f010ee69	obj/kern/kernel.asm	/^    f010ee69:	48 85 c0             	test   %rax,%rax$/;"	l
f010ee6c	obj/kern/kernel.asm	/^    f010ee6c:	75 48                	jne    fffffffff010eeb6 <end+0xfffffffefe66db16>$/;"	l
f010ee6e	obj/kern/kernel.asm	/^    f010ee6e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f010ee72	obj/kern/kernel.asm	/^    f010ee72:	83 e0 03             	and    $0x3,%eax$/;"	l
f010ee75	obj/kern/kernel.asm	/^    f010ee75:	48 85 c0             	test   %rax,%rax$/;"	l
f010ee78	obj/kern/kernel.asm	/^    f010ee78:	75 3c                	jne    fffffffff010eeb6 <end+0xfffffffefe66db16>$/;"	l
f010ee7a	obj/kern/kernel.asm	/^    f010ee7a:	81 65 e4 ff 00 00 00 	andl   $0xff,-0x1c(%rbp)$/;"	l
f010ee81	obj/kern/kernel.asm	/^    f010ee81:	8b 45 e4             	mov    -0x1c(%rbp),%eax$/;"	l
f010ee84	obj/kern/kernel.asm	/^    f010ee84:	89 c2                	mov    %eax,%edx$/;"	l
f010ee86	obj/kern/kernel.asm	/^    f010ee86:	c1 e2 18             	shl    $0x18,%edx$/;"	l
f010ee89	obj/kern/kernel.asm	/^    f010ee89:	8b 45 e4             	mov    -0x1c(%rbp),%eax$/;"	l
f010ee8c	obj/kern/kernel.asm	/^    f010ee8c:	c1 e0 10             	shl    $0x10,%eax$/;"	l
f010ee8f	obj/kern/kernel.asm	/^    f010ee8f:	09 c2                	or     %eax,%edx$/;"	l
f010ee91	obj/kern/kernel.asm	/^    f010ee91:	8b 45 e4             	mov    -0x1c(%rbp),%eax$/;"	l
f010ee94	obj/kern/kernel.asm	/^    f010ee94:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f010ee97	obj/kern/kernel.asm	/^    f010ee97:	09 d0                	or     %edx,%eax$/;"	l
f010ee99	obj/kern/kernel.asm	/^    f010ee99:	09 45 e4             	or     %eax,-0x1c(%rbp)$/;"	l
f010ee9c	obj/kern/kernel.asm	/^    f010ee9c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f010eea0	obj/kern/kernel.asm	/^    f010eea0:	48 89 c1             	mov    %rax,%rcx$/;"	l
f010eea3	obj/kern/kernel.asm	/^    f010eea3:	48 c1 e9 02          	shr    $0x2,%rcx$/;"	l
f010eea7	obj/kern/kernel.asm	/^    f010eea7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
f010eeab	obj/kern/kernel.asm	/^    f010eeab:	8b 45 e4             	mov    -0x1c(%rbp),%eax$/;"	l
f010eeae	obj/kern/kernel.asm	/^    f010eeae:	48 89 d7             	mov    %rdx,%rdi$/;"	l
f010eeb1	obj/kern/kernel.asm	/^    f010eeb1:	fc                   	cld    $/;"	l
f010eeb2	obj/kern/kernel.asm	/^    f010eeb2:	f3 ab                	rep stos %eax,%es:(%rdi)$/;"	l
f010eeb4	obj/kern/kernel.asm	/^    f010eeb4:	eb 11                	jmp    fffffffff010eec7 <end+0xfffffffefe66db27>$/;"	l
f010eeb6	obj/kern/kernel.asm	/^    f010eeb6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
f010eeba	obj/kern/kernel.asm	/^    f010eeba:	8b 45 e4             	mov    -0x1c(%rbp),%eax$/;"	l
f010eebd	obj/kern/kernel.asm	/^    f010eebd:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx$/;"	l
f010eec1	obj/kern/kernel.asm	/^    f010eec1:	48 89 d7             	mov    %rdx,%rdi$/;"	l
f010eec4	obj/kern/kernel.asm	/^    f010eec4:	fc                   	cld    $/;"	l
f010eec5	obj/kern/kernel.asm	/^    f010eec5:	f3 aa                	rep stos %al,%es:(%rdi)$/;"	l
f010eec7	obj/kern/kernel.asm	/^    f010eec7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010eecb	obj/kern/kernel.asm	/^    f010eecb:	c9                   	leaveq $/;"	l
f010eecc	obj/kern/kernel.asm	/^    f010eecc:	c3                   	retq   $/;"	l
f010eecd	obj/kern/kernel.asm	/^    f010eecd:	55                   	push   %rbp$/;"	l
f010eece	obj/kern/kernel.asm	/^    f010eece:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010eed1	obj/kern/kernel.asm	/^    f010eed1:	53                   	push   %rbx$/;"	l
f010eed2	obj/kern/kernel.asm	/^    f010eed2:	48 83 ec 28          	sub    $0x28,%rsp$/;"	l
f010eed6	obj/kern/kernel.asm	/^    f010eed6:	48 89 7d e0          	mov    %rdi,-0x20(%rbp)$/;"	l
f010eeda	obj/kern/kernel.asm	/^    f010eeda:	48 89 75 d8          	mov    %rsi,-0x28(%rbp)$/;"	l
f010eede	obj/kern/kernel.asm	/^    f010eede:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)$/;"	l
f010eee2	obj/kern/kernel.asm	/^    f010eee2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f010eee6	obj/kern/kernel.asm	/^    f010eee6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
f010eeea	obj/kern/kernel.asm	/^    f010eeea:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
f010eeee	obj/kern/kernel.asm	/^    f010eeee:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
f010eef2	obj/kern/kernel.asm	/^    f010eef2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010eef6	obj/kern/kernel.asm	/^    f010eef6:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
f010eefa	obj/kern/kernel.asm	/^    f010eefa:	0f 83 8c 00 00 00    	jae    fffffffff010ef8c <end+0xfffffffefe66dbec>$/;"	l
f010ef00	obj/kern/kernel.asm	/^    f010ef00:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f010ef04	obj/kern/kernel.asm	/^    f010ef04:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
f010ef08	obj/kern/kernel.asm	/^    f010ef08:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010ef0c	obj/kern/kernel.asm	/^    f010ef0c:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax$/;"	l
f010ef10	obj/kern/kernel.asm	/^    f010ef10:	76 7a                	jbe    fffffffff010ef8c <end+0xfffffffefe66dbec>$/;"	l
f010ef12	obj/kern/kernel.asm	/^    f010ef12:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f010ef16	obj/kern/kernel.asm	/^    f010ef16:	48 01 45 e8          	add    %rax,-0x18(%rbp)$/;"	l
f010ef1a	obj/kern/kernel.asm	/^    f010ef1a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f010ef1e	obj/kern/kernel.asm	/^    f010ef1e:	48 01 45 f0          	add    %rax,-0x10(%rbp)$/;"	l
f010ef22	obj/kern/kernel.asm	/^    f010ef22:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010ef26	obj/kern/kernel.asm	/^    f010ef26:	83 e0 03             	and    $0x3,%eax$/;"	l
f010ef29	obj/kern/kernel.asm	/^    f010ef29:	48 85 c0             	test   %rax,%rax$/;"	l
f010ef2c	obj/kern/kernel.asm	/^    f010ef2c:	75 3b                	jne    fffffffff010ef69 <end+0xfffffffefe66dbc9>$/;"	l
f010ef2e	obj/kern/kernel.asm	/^    f010ef2e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
f010ef32	obj/kern/kernel.asm	/^    f010ef32:	83 e0 03             	and    $0x3,%eax$/;"	l
f010ef35	obj/kern/kernel.asm	/^    f010ef35:	48 85 c0             	test   %rax,%rax$/;"	l
f010ef38	obj/kern/kernel.asm	/^    f010ef38:	75 2f                	jne    fffffffff010ef69 <end+0xfffffffefe66dbc9>$/;"	l
f010ef3a	obj/kern/kernel.asm	/^    f010ef3a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f010ef3e	obj/kern/kernel.asm	/^    f010ef3e:	83 e0 03             	and    $0x3,%eax$/;"	l
f010ef41	obj/kern/kernel.asm	/^    f010ef41:	48 85 c0             	test   %rax,%rax$/;"	l
f010ef44	obj/kern/kernel.asm	/^    f010ef44:	75 23                	jne    fffffffff010ef69 <end+0xfffffffefe66dbc9>$/;"	l
f010ef46	obj/kern/kernel.asm	/^    f010ef46:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
f010ef4a	obj/kern/kernel.asm	/^    f010ef4a:	48 83 e8 04          	sub    $0x4,%rax$/;"	l
f010ef4e	obj/kern/kernel.asm	/^    f010ef4e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
f010ef52	obj/kern/kernel.asm	/^    f010ef52:	48 83 ea 04          	sub    $0x4,%rdx$/;"	l
f010ef56	obj/kern/kernel.asm	/^    f010ef56:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx$/;"	l
f010ef5a	obj/kern/kernel.asm	/^    f010ef5a:	48 c1 e9 02          	shr    $0x2,%rcx$/;"	l
f010ef5e	obj/kern/kernel.asm	/^    f010ef5e:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010ef61	obj/kern/kernel.asm	/^    f010ef61:	48 89 d6             	mov    %rdx,%rsi$/;"	l
f010ef64	obj/kern/kernel.asm	/^    f010ef64:	fd                   	std    $/;"	l
f010ef65	obj/kern/kernel.asm	/^    f010ef65:	f3 a5                	rep movsl %ds:(%rsi),%es:(%rdi)$/;"	l
f010ef67	obj/kern/kernel.asm	/^    f010ef67:	eb 20                	jmp    fffffffff010ef89 <end+0xfffffffefe66dbe9>$/;"	l
f010ef69	obj/kern/kernel.asm	/^    f010ef69:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
f010ef6d	obj/kern/kernel.asm	/^    f010ef6d:	48 8d 50 ff          	lea    -0x1(%rax),%rdx$/;"	l
f010ef71	obj/kern/kernel.asm	/^    f010ef71:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010ef75	obj/kern/kernel.asm	/^    f010ef75:	48 8d 58 ff          	lea    -0x1(%rax),%rbx$/;"	l
f010ef79	obj/kern/kernel.asm	/^    f010ef79:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f010ef7d	obj/kern/kernel.asm	/^    f010ef7d:	48 89 d7             	mov    %rdx,%rdi$/;"	l
f010ef80	obj/kern/kernel.asm	/^    f010ef80:	48 89 de             	mov    %rbx,%rsi$/;"	l
f010ef83	obj/kern/kernel.asm	/^    f010ef83:	48 89 c1             	mov    %rax,%rcx$/;"	l
f010ef86	obj/kern/kernel.asm	/^    f010ef86:	fd                   	std    $/;"	l
f010ef87	obj/kern/kernel.asm	/^    f010ef87:	f3 a4                	rep movsb %ds:(%rsi),%es:(%rdi)$/;"	l
f010ef89	obj/kern/kernel.asm	/^    f010ef89:	fc                   	cld    $/;"	l
f010ef8a	obj/kern/kernel.asm	/^    f010ef8a:	eb 57                	jmp    fffffffff010efe3 <end+0xfffffffefe66dc43>$/;"	l
f010ef8c	obj/kern/kernel.asm	/^    f010ef8c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010ef90	obj/kern/kernel.asm	/^    f010ef90:	83 e0 03             	and    $0x3,%eax$/;"	l
f010ef93	obj/kern/kernel.asm	/^    f010ef93:	48 85 c0             	test   %rax,%rax$/;"	l
f010ef96	obj/kern/kernel.asm	/^    f010ef96:	75 36                	jne    fffffffff010efce <end+0xfffffffefe66dc2e>$/;"	l
f010ef98	obj/kern/kernel.asm	/^    f010ef98:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
f010ef9c	obj/kern/kernel.asm	/^    f010ef9c:	83 e0 03             	and    $0x3,%eax$/;"	l
f010ef9f	obj/kern/kernel.asm	/^    f010ef9f:	48 85 c0             	test   %rax,%rax$/;"	l
f010efa2	obj/kern/kernel.asm	/^    f010efa2:	75 2a                	jne    fffffffff010efce <end+0xfffffffefe66dc2e>$/;"	l
f010efa4	obj/kern/kernel.asm	/^    f010efa4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f010efa8	obj/kern/kernel.asm	/^    f010efa8:	83 e0 03             	and    $0x3,%eax$/;"	l
f010efab	obj/kern/kernel.asm	/^    f010efab:	48 85 c0             	test   %rax,%rax$/;"	l
f010efae	obj/kern/kernel.asm	/^    f010efae:	75 1e                	jne    fffffffff010efce <end+0xfffffffefe66dc2e>$/;"	l
f010efb0	obj/kern/kernel.asm	/^    f010efb0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f010efb4	obj/kern/kernel.asm	/^    f010efb4:	48 89 c1             	mov    %rax,%rcx$/;"	l
f010efb7	obj/kern/kernel.asm	/^    f010efb7:	48 c1 e9 02          	shr    $0x2,%rcx$/;"	l
f010efbb	obj/kern/kernel.asm	/^    f010efbb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
f010efbf	obj/kern/kernel.asm	/^    f010efbf:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
f010efc3	obj/kern/kernel.asm	/^    f010efc3:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010efc6	obj/kern/kernel.asm	/^    f010efc6:	48 89 d6             	mov    %rdx,%rsi$/;"	l
f010efc9	obj/kern/kernel.asm	/^    f010efc9:	fc                   	cld    $/;"	l
f010efca	obj/kern/kernel.asm	/^    f010efca:	f3 a5                	rep movsl %ds:(%rsi),%es:(%rdi)$/;"	l
f010efcc	obj/kern/kernel.asm	/^    f010efcc:	eb 15                	jmp    fffffffff010efe3 <end+0xfffffffefe66dc43>$/;"	l
f010efce	obj/kern/kernel.asm	/^    f010efce:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
f010efd2	obj/kern/kernel.asm	/^    f010efd2:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
f010efd6	obj/kern/kernel.asm	/^    f010efd6:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx$/;"	l
f010efda	obj/kern/kernel.asm	/^    f010efda:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010efdd	obj/kern/kernel.asm	/^    f010efdd:	48 89 d6             	mov    %rdx,%rsi$/;"	l
f010efe0	obj/kern/kernel.asm	/^    f010efe0:	fc                   	cld    $/;"	l
f010efe1	obj/kern/kernel.asm	/^    f010efe1:	f3 a4                	rep movsb %ds:(%rsi),%es:(%rdi)$/;"	l
f010efe3	obj/kern/kernel.asm	/^    f010efe3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
f010efe7	obj/kern/kernel.asm	/^    f010efe7:	48 83 c4 28          	add    $0x28,%rsp$/;"	l
f010efeb	obj/kern/kernel.asm	/^    f010efeb:	5b                   	pop    %rbx$/;"	l
f010efec	obj/kern/kernel.asm	/^    f010efec:	c9                   	leaveq $/;"	l
f010efed	obj/kern/kernel.asm	/^    f010efed:	c3                   	retq   $/;"	l
f010efee	obj/kern/kernel.asm	/^    f010efee:	55                   	push   %rbp$/;"	l
f010efef	obj/kern/kernel.asm	/^    f010efef:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010eff2	obj/kern/kernel.asm	/^    f010eff2:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
f010eff6	obj/kern/kernel.asm	/^    f010eff6:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
f010effa	obj/kern/kernel.asm	/^    f010effa:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
f010effe	obj/kern/kernel.asm	/^    f010effe:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)$/;"	l
f010f002	obj/kern/kernel.asm	/^    f010f002:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
f010f006	obj/kern/kernel.asm	/^    f010f006:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx$/;"	l
f010f00a	obj/kern/kernel.asm	/^    f010f00a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f010f00e	obj/kern/kernel.asm	/^    f010f00e:	48 89 ce             	mov    %rcx,%rsi$/;"	l
f010f011	obj/kern/kernel.asm	/^    f010f011:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010f014	obj/kern/kernel.asm	/^    f010f014:	48 b8 cd ee 10 f0 00 	mov    $0xf010eecd,%rax$/;"	l
f010f01b	obj/kern/kernel.asm	/^    f010f01b:	00 00 00 $/;"	l
f010f01e	obj/kern/kernel.asm	/^    f010f01e:	ff d0                	callq  *%rax$/;"	l
f010f020	obj/kern/kernel.asm	/^    f010f020:	c9                   	leaveq $/;"	l
f010f021	obj/kern/kernel.asm	/^    f010f021:	c3                   	retq   $/;"	l
f010f022	obj/kern/kernel.asm	/^    f010f022:	55                   	push   %rbp$/;"	l
f010f023	obj/kern/kernel.asm	/^    f010f023:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010f026	obj/kern/kernel.asm	/^    f010f026:	48 83 ec 28          	sub    $0x28,%rsp$/;"	l
f010f02a	obj/kern/kernel.asm	/^    f010f02a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
f010f02e	obj/kern/kernel.asm	/^    f010f02e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)$/;"	l
f010f032	obj/kern/kernel.asm	/^    f010f032:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)$/;"	l
f010f036	obj/kern/kernel.asm	/^    f010f036:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010f03a	obj/kern/kernel.asm	/^    f010f03a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
f010f03e	obj/kern/kernel.asm	/^    f010f03e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
f010f042	obj/kern/kernel.asm	/^    f010f042:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
f010f046	obj/kern/kernel.asm	/^    f010f046:	eb 38                	jmp    fffffffff010f080 <end+0xfffffffefe66dce0>$/;"	l
f010f048	obj/kern/kernel.asm	/^    f010f048:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
f010f04c	obj/kern/kernel.asm	/^    f010f04c:	0f b6 10             	movzbl (%rax),%edx$/;"	l
f010f04f	obj/kern/kernel.asm	/^    f010f04f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f010f053	obj/kern/kernel.asm	/^    f010f053:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f010f056	obj/kern/kernel.asm	/^    f010f056:	38 c2                	cmp    %al,%dl$/;"	l
f010f058	obj/kern/kernel.asm	/^    f010f058:	74 1c                	je     fffffffff010f076 <end+0xfffffffefe66dcd6>$/;"	l
f010f05a	obj/kern/kernel.asm	/^    f010f05a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
f010f05e	obj/kern/kernel.asm	/^    f010f05e:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f010f061	obj/kern/kernel.asm	/^    f010f061:	0f b6 d0             	movzbl %al,%edx$/;"	l
f010f064	obj/kern/kernel.asm	/^    f010f064:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f010f068	obj/kern/kernel.asm	/^    f010f068:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f010f06b	obj/kern/kernel.asm	/^    f010f06b:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010f06e	obj/kern/kernel.asm	/^    f010f06e:	89 d1                	mov    %edx,%ecx$/;"	l
f010f070	obj/kern/kernel.asm	/^    f010f070:	29 c1                	sub    %eax,%ecx$/;"	l
f010f072	obj/kern/kernel.asm	/^    f010f072:	89 c8                	mov    %ecx,%eax$/;"	l
f010f074	obj/kern/kernel.asm	/^    f010f074:	eb 20                	jmp    fffffffff010f096 <end+0xfffffffefe66dcf6>$/;"	l
f010f076	obj/kern/kernel.asm	/^    f010f076:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)$/;"	l
f010f07b	obj/kern/kernel.asm	/^    f010f07b:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)$/;"	l
f010f080	obj/kern/kernel.asm	/^    f010f080:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)$/;"	l
f010f085	obj/kern/kernel.asm	/^    f010f085:	0f 95 c0             	setne  %al$/;"	l
f010f088	obj/kern/kernel.asm	/^    f010f088:	48 83 6d d8 01       	subq   $0x1,-0x28(%rbp)$/;"	l
f010f08d	obj/kern/kernel.asm	/^    f010f08d:	84 c0                	test   %al,%al$/;"	l
f010f08f	obj/kern/kernel.asm	/^    f010f08f:	75 b7                	jne    fffffffff010f048 <end+0xfffffffefe66dca8>$/;"	l
f010f091	obj/kern/kernel.asm	/^    f010f091:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010f096	obj/kern/kernel.asm	/^    f010f096:	c9                   	leaveq $/;"	l
f010f097	obj/kern/kernel.asm	/^    f010f097:	c3                   	retq   $/;"	l
f010f098	obj/kern/kernel.asm	/^    f010f098:	55                   	push   %rbp$/;"	l
f010f099	obj/kern/kernel.asm	/^    f010f099:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010f09c	obj/kern/kernel.asm	/^    f010f09c:	48 83 ec 28          	sub    $0x28,%rsp$/;"	l
f010f0a0	obj/kern/kernel.asm	/^    f010f0a0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
f010f0a4	obj/kern/kernel.asm	/^    f010f0a4:	89 75 e4             	mov    %esi,-0x1c(%rbp)$/;"	l
f010f0a7	obj/kern/kernel.asm	/^    f010f0a7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)$/;"	l
f010f0ab	obj/kern/kernel.asm	/^    f010f0ab:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f010f0af	obj/kern/kernel.asm	/^    f010f0af:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
f010f0b3	obj/kern/kernel.asm	/^    f010f0b3:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010f0b7	obj/kern/kernel.asm	/^    f010f0b7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
f010f0bb	obj/kern/kernel.asm	/^    f010f0bb:	eb 13                	jmp    fffffffff010f0d0 <end+0xfffffffefe66dd30>$/;"	l
f010f0bd	obj/kern/kernel.asm	/^    f010f0bd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010f0c1	obj/kern/kernel.asm	/^    f010f0c1:	0f b6 10             	movzbl (%rax),%edx$/;"	l
f010f0c4	obj/kern/kernel.asm	/^    f010f0c4:	8b 45 e4             	mov    -0x1c(%rbp),%eax$/;"	l
f010f0c7	obj/kern/kernel.asm	/^    f010f0c7:	38 c2                	cmp    %al,%dl$/;"	l
f010f0c9	obj/kern/kernel.asm	/^    f010f0c9:	74 11                	je     fffffffff010f0dc <end+0xfffffffefe66dd3c>$/;"	l
f010f0cb	obj/kern/kernel.asm	/^    f010f0cb:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)$/;"	l
f010f0d0	obj/kern/kernel.asm	/^    f010f0d0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010f0d4	obj/kern/kernel.asm	/^    f010f0d4:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax$/;"	l
f010f0d8	obj/kern/kernel.asm	/^    f010f0d8:	72 e3                	jb     fffffffff010f0bd <end+0xfffffffefe66dd1d>$/;"	l
f010f0da	obj/kern/kernel.asm	/^    f010f0da:	eb 01                	jmp    fffffffff010f0dd <end+0xfffffffefe66dd3d>$/;"	l
f010f0dc	obj/kern/kernel.asm	/^    f010f0dc:	90                   	nop$/;"	l
f010f0dd	obj/kern/kernel.asm	/^    f010f0dd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f010f0e1	obj/kern/kernel.asm	/^    f010f0e1:	c9                   	leaveq $/;"	l
f010f0e2	obj/kern/kernel.asm	/^    f010f0e2:	c3                   	retq   $/;"	l
f010f0e3	obj/kern/kernel.asm	/^    f010f0e3:	55                   	push   %rbp$/;"	l
f010f0e4	obj/kern/kernel.asm	/^    f010f0e4:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010f0e7	obj/kern/kernel.asm	/^    f010f0e7:	48 83 ec 38          	sub    $0x38,%rsp$/;"	l
f010f0eb	obj/kern/kernel.asm	/^    f010f0eb:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)$/;"	l
f010f0ef	obj/kern/kernel.asm	/^    f010f0ef:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)$/;"	l
f010f0f3	obj/kern/kernel.asm	/^    f010f0f3:	89 55 cc             	mov    %edx,-0x34(%rbp)$/;"	l
f010f0f6	obj/kern/kernel.asm	/^    f010f0f6:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)$/;"	l
f010f0fd	obj/kern/kernel.asm	/^    f010f0fd:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)$/;"	l
f010f104	obj/kern/kernel.asm	/^    f010f104:	00 $/;"	l
f010f105	obj/kern/kernel.asm	/^    f010f105:	eb 05                	jmp    fffffffff010f10c <end+0xfffffffefe66dd6c>$/;"	l
f010f107	obj/kern/kernel.asm	/^    f010f107:	48 83 45 d8 01       	addq   $0x1,-0x28(%rbp)$/;"	l
f010f10c	obj/kern/kernel.asm	/^    f010f10c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f010f110	obj/kern/kernel.asm	/^    f010f110:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f010f113	obj/kern/kernel.asm	/^    f010f113:	3c 20                	cmp    $0x20,%al$/;"	l
f010f115	obj/kern/kernel.asm	/^    f010f115:	74 f0                	je     fffffffff010f107 <end+0xfffffffefe66dd67>$/;"	l
f010f117	obj/kern/kernel.asm	/^    f010f117:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f010f11b	obj/kern/kernel.asm	/^    f010f11b:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f010f11e	obj/kern/kernel.asm	/^    f010f11e:	3c 09                	cmp    $0x9,%al$/;"	l
f010f120	obj/kern/kernel.asm	/^    f010f120:	74 e5                	je     fffffffff010f107 <end+0xfffffffefe66dd67>$/;"	l
f010f122	obj/kern/kernel.asm	/^    f010f122:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f010f126	obj/kern/kernel.asm	/^    f010f126:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f010f129	obj/kern/kernel.asm	/^    f010f129:	3c 2b                	cmp    $0x2b,%al$/;"	l
f010f12b	obj/kern/kernel.asm	/^    f010f12b:	75 07                	jne    fffffffff010f134 <end+0xfffffffefe66dd94>$/;"	l
f010f12d	obj/kern/kernel.asm	/^    f010f12d:	48 83 45 d8 01       	addq   $0x1,-0x28(%rbp)$/;"	l
f010f132	obj/kern/kernel.asm	/^    f010f132:	eb 17                	jmp    fffffffff010f14b <end+0xfffffffefe66ddab>$/;"	l
f010f134	obj/kern/kernel.asm	/^    f010f134:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f010f138	obj/kern/kernel.asm	/^    f010f138:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f010f13b	obj/kern/kernel.asm	/^    f010f13b:	3c 2d                	cmp    $0x2d,%al$/;"	l
f010f13d	obj/kern/kernel.asm	/^    f010f13d:	75 0c                	jne    fffffffff010f14b <end+0xfffffffefe66ddab>$/;"	l
f010f13f	obj/kern/kernel.asm	/^    f010f13f:	48 83 45 d8 01       	addq   $0x1,-0x28(%rbp)$/;"	l
f010f144	obj/kern/kernel.asm	/^    f010f144:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%rbp)$/;"	l
f010f14b	obj/kern/kernel.asm	/^    f010f14b:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)$/;"	l
f010f14f	obj/kern/kernel.asm	/^    f010f14f:	74 06                	je     fffffffff010f157 <end+0xfffffffefe66ddb7>$/;"	l
f010f151	obj/kern/kernel.asm	/^    f010f151:	83 7d cc 10          	cmpl   $0x10,-0x34(%rbp)$/;"	l
f010f155	obj/kern/kernel.asm	/^    f010f155:	75 28                	jne    fffffffff010f17f <end+0xfffffffefe66dddf>$/;"	l
f010f157	obj/kern/kernel.asm	/^    f010f157:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f010f15b	obj/kern/kernel.asm	/^    f010f15b:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f010f15e	obj/kern/kernel.asm	/^    f010f15e:	3c 30                	cmp    $0x30,%al$/;"	l
f010f160	obj/kern/kernel.asm	/^    f010f160:	75 1d                	jne    fffffffff010f17f <end+0xfffffffefe66dddf>$/;"	l
f010f162	obj/kern/kernel.asm	/^    f010f162:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f010f166	obj/kern/kernel.asm	/^    f010f166:	48 83 c0 01          	add    $0x1,%rax$/;"	l
f010f16a	obj/kern/kernel.asm	/^    f010f16a:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f010f16d	obj/kern/kernel.asm	/^    f010f16d:	3c 78                	cmp    $0x78,%al$/;"	l
f010f16f	obj/kern/kernel.asm	/^    f010f16f:	75 0e                	jne    fffffffff010f17f <end+0xfffffffefe66dddf>$/;"	l
f010f171	obj/kern/kernel.asm	/^    f010f171:	48 83 45 d8 02       	addq   $0x2,-0x28(%rbp)$/;"	l
f010f176	obj/kern/kernel.asm	/^    f010f176:	c7 45 cc 10 00 00 00 	movl   $0x10,-0x34(%rbp)$/;"	l
f010f17d	obj/kern/kernel.asm	/^    f010f17d:	eb 2c                	jmp    fffffffff010f1ab <end+0xfffffffefe66de0b>$/;"	l
f010f17f	obj/kern/kernel.asm	/^    f010f17f:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)$/;"	l
f010f183	obj/kern/kernel.asm	/^    f010f183:	75 19                	jne    fffffffff010f19e <end+0xfffffffefe66ddfe>$/;"	l
f010f185	obj/kern/kernel.asm	/^    f010f185:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f010f189	obj/kern/kernel.asm	/^    f010f189:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f010f18c	obj/kern/kernel.asm	/^    f010f18c:	3c 30                	cmp    $0x30,%al$/;"	l
f010f18e	obj/kern/kernel.asm	/^    f010f18e:	75 0e                	jne    fffffffff010f19e <end+0xfffffffefe66ddfe>$/;"	l
f010f190	obj/kern/kernel.asm	/^    f010f190:	48 83 45 d8 01       	addq   $0x1,-0x28(%rbp)$/;"	l
f010f195	obj/kern/kernel.asm	/^    f010f195:	c7 45 cc 08 00 00 00 	movl   $0x8,-0x34(%rbp)$/;"	l
f010f19c	obj/kern/kernel.asm	/^    f010f19c:	eb 0d                	jmp    fffffffff010f1ab <end+0xfffffffefe66de0b>$/;"	l
f010f19e	obj/kern/kernel.asm	/^    f010f19e:	83 7d cc 00          	cmpl   $0x0,-0x34(%rbp)$/;"	l
f010f1a2	obj/kern/kernel.asm	/^    f010f1a2:	75 07                	jne    fffffffff010f1ab <end+0xfffffffefe66de0b>$/;"	l
f010f1a4	obj/kern/kernel.asm	/^    f010f1a4:	c7 45 cc 0a 00 00 00 	movl   $0xa,-0x34(%rbp)$/;"	l
f010f1ab	obj/kern/kernel.asm	/^    f010f1ab:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f010f1af	obj/kern/kernel.asm	/^    f010f1af:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f010f1b2	obj/kern/kernel.asm	/^    f010f1b2:	3c 2f                	cmp    $0x2f,%al$/;"	l
f010f1b4	obj/kern/kernel.asm	/^    f010f1b4:	7e 1d                	jle    fffffffff010f1d3 <end+0xfffffffefe66de33>$/;"	l
f010f1b6	obj/kern/kernel.asm	/^    f010f1b6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f010f1ba	obj/kern/kernel.asm	/^    f010f1ba:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f010f1bd	obj/kern/kernel.asm	/^    f010f1bd:	3c 39                	cmp    $0x39,%al$/;"	l
f010f1bf	obj/kern/kernel.asm	/^    f010f1bf:	7f 12                	jg     fffffffff010f1d3 <end+0xfffffffefe66de33>$/;"	l
f010f1c1	obj/kern/kernel.asm	/^    f010f1c1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f010f1c5	obj/kern/kernel.asm	/^    f010f1c5:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f010f1c8	obj/kern/kernel.asm	/^    f010f1c8:	0f be c0             	movsbl %al,%eax$/;"	l
f010f1cb	obj/kern/kernel.asm	/^    f010f1cb:	83 e8 30             	sub    $0x30,%eax$/;"	l
f010f1ce	obj/kern/kernel.asm	/^    f010f1ce:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
f010f1d1	obj/kern/kernel.asm	/^    f010f1d1:	eb 4e                	jmp    fffffffff010f221 <end+0xfffffffefe66de81>$/;"	l
f010f1d3	obj/kern/kernel.asm	/^    f010f1d3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f010f1d7	obj/kern/kernel.asm	/^    f010f1d7:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f010f1da	obj/kern/kernel.asm	/^    f010f1da:	3c 60                	cmp    $0x60,%al$/;"	l
f010f1dc	obj/kern/kernel.asm	/^    f010f1dc:	7e 1d                	jle    fffffffff010f1fb <end+0xfffffffefe66de5b>$/;"	l
f010f1de	obj/kern/kernel.asm	/^    f010f1de:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f010f1e2	obj/kern/kernel.asm	/^    f010f1e2:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f010f1e5	obj/kern/kernel.asm	/^    f010f1e5:	3c 7a                	cmp    $0x7a,%al$/;"	l
f010f1e7	obj/kern/kernel.asm	/^    f010f1e7:	7f 12                	jg     fffffffff010f1fb <end+0xfffffffefe66de5b>$/;"	l
f010f1e9	obj/kern/kernel.asm	/^    f010f1e9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f010f1ed	obj/kern/kernel.asm	/^    f010f1ed:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f010f1f0	obj/kern/kernel.asm	/^    f010f1f0:	0f be c0             	movsbl %al,%eax$/;"	l
f010f1f3	obj/kern/kernel.asm	/^    f010f1f3:	83 e8 57             	sub    $0x57,%eax$/;"	l
f010f1f6	obj/kern/kernel.asm	/^    f010f1f6:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
f010f1f9	obj/kern/kernel.asm	/^    f010f1f9:	eb 26                	jmp    fffffffff010f221 <end+0xfffffffefe66de81>$/;"	l
f010f1fb	obj/kern/kernel.asm	/^    f010f1fb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f010f1ff	obj/kern/kernel.asm	/^    f010f1ff:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f010f202	obj/kern/kernel.asm	/^    f010f202:	3c 40                	cmp    $0x40,%al$/;"	l
f010f204	obj/kern/kernel.asm	/^    f010f204:	7e 48                	jle    fffffffff010f24e <end+0xfffffffefe66deae>$/;"	l
f010f206	obj/kern/kernel.asm	/^    f010f206:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f010f20a	obj/kern/kernel.asm	/^    f010f20a:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f010f20d	obj/kern/kernel.asm	/^    f010f20d:	3c 5a                	cmp    $0x5a,%al$/;"	l
f010f20f	obj/kern/kernel.asm	/^    f010f20f:	7f 3d                	jg     fffffffff010f24e <end+0xfffffffefe66deae>$/;"	l
f010f211	obj/kern/kernel.asm	/^    f010f211:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f010f215	obj/kern/kernel.asm	/^    f010f215:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f010f218	obj/kern/kernel.asm	/^    f010f218:	0f be c0             	movsbl %al,%eax$/;"	l
f010f21b	obj/kern/kernel.asm	/^    f010f21b:	83 e8 37             	sub    $0x37,%eax$/;"	l
f010f21e	obj/kern/kernel.asm	/^    f010f21e:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
f010f221	obj/kern/kernel.asm	/^    f010f221:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
f010f224	obj/kern/kernel.asm	/^    f010f224:	3b 45 cc             	cmp    -0x34(%rbp),%eax$/;"	l
f010f227	obj/kern/kernel.asm	/^    f010f227:	7d 24                	jge    fffffffff010f24d <end+0xfffffffefe66dead>$/;"	l
f010f229	obj/kern/kernel.asm	/^    f010f229:	48 83 45 d8 01       	addq   $0x1,-0x28(%rbp)$/;"	l
f010f22e	obj/kern/kernel.asm	/^    f010f22e:	8b 45 cc             	mov    -0x34(%rbp),%eax$/;"	l
f010f231	obj/kern/kernel.asm	/^    f010f231:	48 98                	cltq   $/;"	l
f010f233	obj/kern/kernel.asm	/^    f010f233:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010f236	obj/kern/kernel.asm	/^    f010f236:	48 0f af 55 f0       	imul   -0x10(%rbp),%rdx$/;"	l
f010f23b	obj/kern/kernel.asm	/^    f010f23b:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
f010f23e	obj/kern/kernel.asm	/^    f010f23e:	48 98                	cltq   $/;"	l
f010f240	obj/kern/kernel.asm	/^    f010f240:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010f244	obj/kern/kernel.asm	/^    f010f244:	48 89 45 f0          	mov    %rax,-0x10(%rbp)$/;"	l
f010f248	obj/kern/kernel.asm	/^    f010f248:	e9 5e ff ff ff       	jmpq   fffffffff010f1ab <end+0xfffffffefe66de0b>$/;"	l
f010f24d	obj/kern/kernel.asm	/^    f010f24d:	90                   	nop$/;"	l
f010f24e	obj/kern/kernel.asm	/^    f010f24e:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)$/;"	l
f010f253	obj/kern/kernel.asm	/^    f010f253:	74 0b                	je     fffffffff010f260 <end+0xfffffffefe66dec0>$/;"	l
f010f255	obj/kern/kernel.asm	/^    f010f255:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f010f259	obj/kern/kernel.asm	/^    f010f259:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx$/;"	l
f010f25d	obj/kern/kernel.asm	/^    f010f25d:	48 89 10             	mov    %rdx,(%rax)$/;"	l
f010f260	obj/kern/kernel.asm	/^    f010f260:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)$/;"	l
f010f264	obj/kern/kernel.asm	/^    f010f264:	74 09                	je     fffffffff010f26f <end+0xfffffffefe66decf>$/;"	l
f010f266	obj/kern/kernel.asm	/^    f010f266:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
f010f26a	obj/kern/kernel.asm	/^    f010f26a:	48 f7 d8             	neg    %rax$/;"	l
f010f26d	obj/kern/kernel.asm	/^    f010f26d:	eb 04                	jmp    fffffffff010f273 <end+0xfffffffefe66ded3>$/;"	l
f010f26f	obj/kern/kernel.asm	/^    f010f26f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax$/;"	l
f010f273	obj/kern/kernel.asm	/^    f010f273:	c9                   	leaveq $/;"	l
f010f274	obj/kern/kernel.asm	/^    f010f274:	c3                   	retq   $/;"	l
f010f275	obj/kern/kernel.asm	/^    f010f275:	00 00                	add    %al,(%rax)$/;"	l
f010f278	obj/kern/kernel.asm	/^    f010f278:	fa                   	cli    $/;"	l
f010f279	obj/kern/kernel.asm	/^    f010f279:	31 c0                	xor    %eax,%eax$/;"	l
f010f27b	obj/kern/kernel.asm	/^    f010f27b:	8e d8                	mov    %eax,%ds$/;"	l
f010f27d	obj/kern/kernel.asm	/^    f010f27d:	8e c0                	mov    %eax,%es$/;"	l
f010f27f	obj/kern/kernel.asm	/^    f010f27f:	8e d0                	mov    %eax,%ss$/;"	l
f010f281	obj/kern/kernel.asm	/^    f010f281:	0f 01 16             	lgdt   (%rsi)$/;"	l
f010f284	obj/kern/kernel.asm	/^    f010f284:	e0 70                	loopne fffffffff010f2f6 <end+0xfffffffefe66df56>$/;"	l
f010f286	obj/kern/kernel.asm	/^    f010f286:	0f 20 c0             	mov    %cr0,%rax$/;"	l
f010f289	obj/kern/kernel.asm	/^    f010f289:	66 83 c8 01          	or     $0x1,%ax$/;"	l
f010f28d	obj/kern/kernel.asm	/^    f010f28d:	0f 22 c0             	mov    %rax,%cr0$/;"	l
f010f290	obj/kern/kernel.asm	/^    f010f290:	ea                   	(bad)  $/;"	l
f010f291	obj/kern/kernel.asm	/^    f010f291:	1d 70 08 00 66       	sbb    $0x66000870,%eax$/;"	l
f010f295	obj/kern/kernel.asm	/^    f010f295:	66 b8 10 00          	mov    $0x10,%ax$/;"	l
f010f299	obj/kern/kernel.asm	/^    f010f299:	8e d8                	mov    %eax,%ds$/;"	l
f010f29b	obj/kern/kernel.asm	/^    f010f29b:	8e c0                	mov    %eax,%es$/;"	l
f010f29d	obj/kern/kernel.asm	/^    f010f29d:	8e d0                	mov    %eax,%ss$/;"	l
f010f29f	obj/kern/kernel.asm	/^    f010f29f:	66 b8 00 00          	mov    $0x0,%ax$/;"	l
f010f2a3	obj/kern/kernel.asm	/^    f010f2a3:	8e e0                	mov    %eax,%fs$/;"	l
f010f2a5	obj/kern/kernel.asm	/^    f010f2a5:	8e e8                	mov    %eax,%gs$/;"	l
f010f2a7	obj/kern/kernel.asm	/^    f010f2a7:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
f010f2ac	obj/kern/kernel.asm	/^    f010f2ac:	0f 22 e0             	mov    %rax,%cr4$/;"	l
f010f2af	obj/kern/kernel.asm	/^    f010f2af:	0f 01 15 c0 70 00 00 	lgdt   0x70c0(%rip)        # fffffffff0116376 <end+0xfffffffefe674fd6>$/;"	l
f010f2b6	obj/kern/kernel.asm	/^    f010f2b6:	0f 20 c0             	mov    %cr0,%rax$/;"	l
f010f2b9	obj/kern/kernel.asm	/^    f010f2b9:	83 c8 01             	or     $0x1,%eax$/;"	l
f010f2bc	obj/kern/kernel.asm	/^    f010f2bc:	0f 22 c0             	mov    %rax,%cr0$/;"	l
f010f2bf	obj/kern/kernel.asm	/^    f010f2bf:	b8 00 80 00 00       	mov    $0x8000,%eax$/;"	l
f010f2c4	obj/kern/kernel.asm	/^    f010f2c4:	0f 22 d8             	mov    %rax,%cr3$/;"	l
f010f2c7	obj/kern/kernel.asm	/^    f010f2c7:	b9 80 00 00 c0       	mov    $0xc0000080,%ecx$/;"	l
f010f2cc	obj/kern/kernel.asm	/^    f010f2cc:	0f 32                	rdmsr  $/;"	l
f010f2ce	obj/kern/kernel.asm	/^    f010f2ce:	0f ba e8 08          	bts    $0x8,%eax$/;"	l
f010f2d2	obj/kern/kernel.asm	/^    f010f2d2:	0f 30                	wrmsr  $/;"	l
f010f2d4	obj/kern/kernel.asm	/^    f010f2d4:	0f 20 c0             	mov    %cr0,%rax$/;"	l
f010f2d7	obj/kern/kernel.asm	/^    f010f2d7:	0d 01 00 01 80       	or     $0x80010001,%eax$/;"	l
f010f2dc	obj/kern/kernel.asm	/^    f010f2dc:	0f 22 c0             	mov    %rax,%cr0$/;"	l
f010f2df	obj/kern/kernel.asm	/^    f010f2df:	ea                   	(bad)  $/;"	l
f010f2e0	obj/kern/kernel.asm	/^    f010f2e0:	6e                   	outsb  %ds:(%rsi),(%dx)$/;"	l
f010f2e1	obj/kern/kernel.asm	/^    f010f2e1:	70 00                	jo     fffffffff010f2e3 <end+0xfffffffefe66df43>$/;"	l
f010f2e3	obj/kern/kernel.asm	/^    f010f2e3:	00 08                	add    %cl,(%rax)$/;"	l
f010f2e6	obj/kern/kernel.asm	/^    f010f2e6:	66 b8 10 00          	mov    $0x10,%ax$/;"	l
f010f2ea	obj/kern/kernel.asm	/^    f010f2ea:	8e d8                	mov    %eax,%ds$/;"	l
f010f2ec	obj/kern/kernel.asm	/^    f010f2ec:	8e c0                	mov    %eax,%es$/;"	l
f010f2ee	obj/kern/kernel.asm	/^    f010f2ee:	8e d0                	mov    %eax,%ss$/;"	l
f010f2f0	obj/kern/kernel.asm	/^    f010f2f0:	66 b8 00 00          	mov    $0x0,%ax$/;"	l
f010f2f4	obj/kern/kernel.asm	/^    f010f2f4:	8e e0                	mov    %eax,%fs$/;"	l
f010f2f6	obj/kern/kernel.asm	/^    f010f2f6:	8e e8                	mov    %eax,%gs$/;"	l
f010f2f8	obj/kern/kernel.asm	/^    f010f2f8:	48 a1 50 77 a2 f1 00 	mov    0xf1a27750,%rax$/;"	l
f010f2ff	obj/kern/kernel.asm	/^    f010f2ff:	00 00 00 $/;"	l
f010f302	obj/kern/kernel.asm	/^    f010f302:	48 89 c4             	mov    %rax,%rsp$/;"	l
f010f305	obj/kern/kernel.asm	/^    f010f305:	48 c7 c5 00 00 00 00 	mov    $0x0,%rbp$/;"	l
f010f30c	obj/kern/kernel.asm	/^    f010f30c:	48 b8 51 04 10 f0 00 	mov    $0xf0100451,%rax$/;"	l
f010f313	obj/kern/kernel.asm	/^    f010f313:	00 00 00 $/;"	l
f010f316	obj/kern/kernel.asm	/^    f010f316:	ff d0                	callq  *%rax$/;"	l
f010f318	obj/kern/kernel.asm	/^    f010f318:	eb fe                	jmp    fffffffff010f318 <end+0xfffffffefe66df78>$/;"	l
f010f31a	obj/kern/kernel.asm	/^    f010f31a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)$/;"	l
f010f328	obj/kern/kernel.asm	/^    f010f328:	ff                   	(bad)  $/;"	l
f010f329	obj/kern/kernel.asm	/^    f010f329:	ff 00                	incl   (%rax)$/;"	l
f010f32b	obj/kern/kernel.asm	/^    f010f32b:	00 00                	add    %al,(%rax)$/;"	l
f010f32d	obj/kern/kernel.asm	/^    f010f32d:	9a                   	(bad)  $/;"	l
f010f32e	obj/kern/kernel.asm	/^    f010f32e:	af                   	scas   %es:(%rdi),%eax$/;"	l
f010f32f	obj/kern/kernel.asm	/^    f010f32f:	00 ff                	add    %bh,%bh$/;"	l
f010f331	obj/kern/kernel.asm	/^    f010f331:	ff 00                	incl   (%rax)$/;"	l
f010f333	obj/kern/kernel.asm	/^    f010f333:	00 00                	add    %al,(%rax)$/;"	l
f010f335	obj/kern/kernel.asm	/^    f010f335:	92                   	xchg   %eax,%edx$/;"	l
f010f336	obj/kern/kernel.asm	/^    f010f336:	af                   	scas   %es:(%rdi),%eax$/;"	l
f010f338	obj/kern/kernel.asm	/^    f010f338:	17                   	(bad)  $/;"	l
f010f339	obj/kern/kernel.asm	/^    f010f339:	00 a8 70 00 00 66    	add    %ch,0x66000070(%rax)$/;"	l
f010f33f	obj/kern/kernel.asm	/^    f010f33f:	90                   	nop$/;"	l
f010f348	obj/kern/kernel.asm	/^    f010f348:	ff                   	(bad)  $/;"	l
f010f349	obj/kern/kernel.asm	/^    f010f349:	ff 00                	incl   (%rax)$/;"	l
f010f34b	obj/kern/kernel.asm	/^    f010f34b:	00 00                	add    %al,(%rax)$/;"	l
f010f34d	obj/kern/kernel.asm	/^    f010f34d:	9a                   	(bad)  $/;"	l
f010f34e	obj/kern/kernel.asm	/^    f010f34e:	cf                   	iret   $/;"	l
f010f34f	obj/kern/kernel.asm	/^    f010f34f:	00 ff                	add    %bh,%bh$/;"	l
f010f351	obj/kern/kernel.asm	/^    f010f351:	ff 00                	incl   (%rax)$/;"	l
f010f353	obj/kern/kernel.asm	/^    f010f353:	00 00                	add    %al,(%rax)$/;"	l
f010f355	obj/kern/kernel.asm	/^    f010f355:	92                   	xchg   %eax,%edx$/;"	l
f010f356	obj/kern/kernel.asm	/^    f010f356:	cf                   	iret   $/;"	l
f010f358	obj/kern/kernel.asm	/^    f010f358:	17                   	(bad)  $/;"	l
f010f359	obj/kern/kernel.asm	/^    f010f359:	00 c8                	add    %cl,%al$/;"	l
f010f35b	obj/kern/kernel.asm	/^    f010f35b:	70 00                	jo     fffffffff010f35d <end+0xfffffffefe66dfbd>$/;"	l
f010f35e	obj/kern/kernel.asm	/^    f010f35e:	90                   	nop$/;"	l
f010f360	obj/kern/kernel.asm	/^    f010f360:	55                   	push   %rbp$/;"	l
f010f361	obj/kern/kernel.asm	/^    f010f361:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010f364	obj/kern/kernel.asm	/^    f010f364:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
f010f368	obj/kern/kernel.asm	/^    f010f368:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
f010f36c	obj/kern/kernel.asm	/^    f010f36c:	89 75 e4             	mov    %esi,-0x1c(%rbp)$/;"	l
f010f36f	obj/kern/kernel.asm	/^    f010f36f:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)$/;"	l
f010f376	obj/kern/kernel.asm	/^    f010f376:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)$/;"	l
f010f37d	obj/kern/kernel.asm	/^    f010f37d:	eb 1a                	jmp    fffffffff010f399 <end+0xfffffffefe66dff9>$/;"	l
f010f37f	obj/kern/kernel.asm	/^    f010f37f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
f010f383	obj/kern/kernel.asm	/^    f010f383:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
f010f386	obj/kern/kernel.asm	/^    f010f386:	48 98                	cltq   $/;"	l
f010f388	obj/kern/kernel.asm	/^    f010f388:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f010f38c	obj/kern/kernel.asm	/^    f010f38c:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f010f38f	obj/kern/kernel.asm	/^    f010f38f:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010f392	obj/kern/kernel.asm	/^    f010f392:	01 45 fc             	add    %eax,-0x4(%rbp)$/;"	l
f010f395	obj/kern/kernel.asm	/^    f010f395:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)$/;"	l
f010f399	obj/kern/kernel.asm	/^    f010f399:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
f010f39c	obj/kern/kernel.asm	/^    f010f39c:	3b 45 e4             	cmp    -0x1c(%rbp),%eax$/;"	l
f010f39f	obj/kern/kernel.asm	/^    f010f39f:	7c de                	jl     fffffffff010f37f <end+0xfffffffefe66dfdf>$/;"	l
f010f3a1	obj/kern/kernel.asm	/^    f010f3a1:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
f010f3a4	obj/kern/kernel.asm	/^    f010f3a4:	c9                   	leaveq $/;"	l
f010f3a5	obj/kern/kernel.asm	/^    f010f3a5:	c3                   	retq   $/;"	l
f010f3a6	obj/kern/kernel.asm	/^    f010f3a6:	55                   	push   %rbp$/;"	l
f010f3a7	obj/kern/kernel.asm	/^    f010f3a7:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010f3aa	obj/kern/kernel.asm	/^    f010f3aa:	53                   	push   %rbx$/;"	l
f010f3ab	obj/kern/kernel.asm	/^    f010f3ab:	48 83 ec 48          	sub    $0x48,%rsp$/;"	l
f010f3af	obj/kern/kernel.asm	/^    f010f3af:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)$/;"	l
f010f3b3	obj/kern/kernel.asm	/^    f010f3b3:	89 75 b4             	mov    %esi,-0x4c(%rbp)$/;"	l
f010f3b6	obj/kern/kernel.asm	/^    f010f3b6:	48 8b 45 b8          	mov    -0x48(%rbp),%rax$/;"	l
f010f3ba	obj/kern/kernel.asm	/^    f010f3ba:	48 89 45 d0          	mov    %rax,-0x30(%rbp)$/;"	l
f010f3be	obj/kern/kernel.asm	/^    f010f3be:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f010f3c2	obj/kern/kernel.asm	/^    f010f3c2:	48 c1 e8 0c          	shr    $0xc,%rax$/;"	l
f010f3c6	obj/kern/kernel.asm	/^    f010f3c6:	89 45 dc             	mov    %eax,-0x24(%rbp)$/;"	l
f010f3c9	obj/kern/kernel.asm	/^    f010f3c9:	8b 55 dc             	mov    -0x24(%rbp),%edx$/;"	l
f010f3cc	obj/kern/kernel.asm	/^    f010f3cc:	48 b8 68 77 a2 f1 00 	mov    $0xf1a27768,%rax$/;"	l
f010f3d3	obj/kern/kernel.asm	/^    f010f3d3:	00 00 00 $/;"	l
f010f3d6	obj/kern/kernel.asm	/^    f010f3d6:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010f3d9	obj/kern/kernel.asm	/^    f010f3d9:	48 39 c2             	cmp    %rax,%rdx$/;"	l
f010f3dc	obj/kern/kernel.asm	/^    f010f3dc:	72 31                	jb     fffffffff010f40f <end+0xfffffffefe66e06f>$/;"	l
f010f3de	obj/kern/kernel.asm	/^    f010f3de:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f010f3e2	obj/kern/kernel.asm	/^    f010f3e2:	48 89 c1             	mov    %rax,%rcx$/;"	l
f010f3e5	obj/kern/kernel.asm	/^    f010f3e5:	48 ba 48 34 11 f0 00 	mov    $0xf0113448,%rdx$/;"	l
f010f3ec	obj/kern/kernel.asm	/^    f010f3ec:	00 00 00 $/;"	l
f010f3ef	obj/kern/kernel.asm	/^    f010f3ef:	be 57 00 00 00       	mov    $0x57,%esi$/;"	l
f010f3f4	obj/kern/kernel.asm	/^    f010f3f4:	48 bf 6b 34 11 f0 00 	mov    $0xf011346b,%rdi$/;"	l
f010f3fb	obj/kern/kernel.asm	/^    f010f3fb:	00 00 00 $/;"	l
f010f3fe	obj/kern/kernel.asm	/^    f010f3fe:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010f403	obj/kern/kernel.asm	/^    f010f403:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f010f40a	obj/kern/kernel.asm	/^    f010f40a:	00 00 00 $/;"	l
f010f40d	obj/kern/kernel.asm	/^    f010f40d:	ff d3                	callq  *%rbx$/;"	l
f010f40f	obj/kern/kernel.asm	/^    f010f40f:	b8 00 00 00 f0       	mov    $0xf0000000,%eax$/;"	l
f010f414	obj/kern/kernel.asm	/^    f010f414:	48 03 45 d0          	add    -0x30(%rbp),%rax$/;"	l
f010f418	obj/kern/kernel.asm	/^    f010f418:	48 89 45 c0          	mov    %rax,-0x40(%rbp)$/;"	l
f010f41c	obj/kern/kernel.asm	/^    f010f41c:	8b 45 b4             	mov    -0x4c(%rbp),%eax$/;"	l
f010f41f	obj/kern/kernel.asm	/^    f010f41f:	48 98                	cltq   $/;"	l
f010f421	obj/kern/kernel.asm	/^    f010f421:	48 03 45 b8          	add    -0x48(%rbp),%rax$/;"	l
f010f425	obj/kern/kernel.asm	/^    f010f425:	48 89 45 e0          	mov    %rax,-0x20(%rbp)$/;"	l
f010f429	obj/kern/kernel.asm	/^    f010f429:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
f010f42d	obj/kern/kernel.asm	/^    f010f42d:	48 c1 e8 0c          	shr    $0xc,%rax$/;"	l
f010f431	obj/kern/kernel.asm	/^    f010f431:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
f010f434	obj/kern/kernel.asm	/^    f010f434:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
f010f437	obj/kern/kernel.asm	/^    f010f437:	48 b8 68 77 a2 f1 00 	mov    $0xf1a27768,%rax$/;"	l
f010f43e	obj/kern/kernel.asm	/^    f010f43e:	00 00 00 $/;"	l
f010f441	obj/kern/kernel.asm	/^    f010f441:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010f444	obj/kern/kernel.asm	/^    f010f444:	48 39 c2             	cmp    %rax,%rdx$/;"	l
f010f447	obj/kern/kernel.asm	/^    f010f447:	72 31                	jb     fffffffff010f47a <end+0xfffffffefe66e0da>$/;"	l
f010f449	obj/kern/kernel.asm	/^    f010f449:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
f010f44d	obj/kern/kernel.asm	/^    f010f44d:	48 89 c1             	mov    %rax,%rcx$/;"	l
f010f450	obj/kern/kernel.asm	/^    f010f450:	48 ba 48 34 11 f0 00 	mov    $0xf0113448,%rdx$/;"	l
f010f457	obj/kern/kernel.asm	/^    f010f457:	00 00 00 $/;"	l
f010f45a	obj/kern/kernel.asm	/^    f010f45a:	be 57 00 00 00       	mov    $0x57,%esi$/;"	l
f010f45f	obj/kern/kernel.asm	/^    f010f45f:	48 bf 6b 34 11 f0 00 	mov    $0xf011346b,%rdi$/;"	l
f010f466	obj/kern/kernel.asm	/^    f010f466:	00 00 00 $/;"	l
f010f469	obj/kern/kernel.asm	/^    f010f469:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010f46e	obj/kern/kernel.asm	/^    f010f46e:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f010f475	obj/kern/kernel.asm	/^    f010f475:	00 00 00 $/;"	l
f010f478	obj/kern/kernel.asm	/^    f010f478:	ff d3                	callq  *%rbx$/;"	l
f010f47a	obj/kern/kernel.asm	/^    f010f47a:	b8 00 00 00 f0       	mov    $0xf0000000,%eax$/;"	l
f010f47f	obj/kern/kernel.asm	/^    f010f47f:	48 03 45 e0          	add    -0x20(%rbp),%rax$/;"	l
f010f483	obj/kern/kernel.asm	/^    f010f483:	48 89 45 c8          	mov    %rax,-0x38(%rbp)$/;"	l
f010f487	obj/kern/kernel.asm	/^    f010f487:	eb 4d                	jmp    fffffffff010f4d6 <end+0xfffffffefe66e136>$/;"	l
f010f489	obj/kern/kernel.asm	/^    f010f489:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
f010f48d	obj/kern/kernel.asm	/^    f010f48d:	ba 04 00 00 00       	mov    $0x4,%edx$/;"	l
f010f492	obj/kern/kernel.asm	/^    f010f492:	48 be 7b 34 11 f0 00 	mov    $0xf011347b,%rsi$/;"	l
f010f499	obj/kern/kernel.asm	/^    f010f499:	00 00 00 $/;"	l
f010f49c	obj/kern/kernel.asm	/^    f010f49c:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010f49f	obj/kern/kernel.asm	/^    f010f49f:	48 b8 22 f0 10 f0 00 	mov    $0xf010f022,%rax$/;"	l
f010f4a6	obj/kern/kernel.asm	/^    f010f4a6:	00 00 00 $/;"	l
f010f4a9	obj/kern/kernel.asm	/^    f010f4a9:	ff d0                	callq  *%rax$/;"	l
f010f4ab	obj/kern/kernel.asm	/^    f010f4ab:	85 c0                	test   %eax,%eax$/;"	l
f010f4ad	obj/kern/kernel.asm	/^    f010f4ad:	75 22                	jne    fffffffff010f4d1 <end+0xfffffffefe66e131>$/;"	l
f010f4af	obj/kern/kernel.asm	/^    f010f4af:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
f010f4b3	obj/kern/kernel.asm	/^    f010f4b3:	be 10 00 00 00       	mov    $0x10,%esi$/;"	l
f010f4b8	obj/kern/kernel.asm	/^    f010f4b8:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010f4bb	obj/kern/kernel.asm	/^    f010f4bb:	48 b8 60 f3 10 f0 00 	mov    $0xf010f360,%rax$/;"	l
f010f4c2	obj/kern/kernel.asm	/^    f010f4c2:	00 00 00 $/;"	l
f010f4c5	obj/kern/kernel.asm	/^    f010f4c5:	ff d0                	callq  *%rax$/;"	l
f010f4c7	obj/kern/kernel.asm	/^    f010f4c7:	84 c0                	test   %al,%al$/;"	l
f010f4c9	obj/kern/kernel.asm	/^    f010f4c9:	75 06                	jne    fffffffff010f4d1 <end+0xfffffffefe66e131>$/;"	l
f010f4cb	obj/kern/kernel.asm	/^    f010f4cb:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
f010f4cf	obj/kern/kernel.asm	/^    f010f4cf:	eb 14                	jmp    fffffffff010f4e5 <end+0xfffffffefe66e145>$/;"	l
f010f4d1	obj/kern/kernel.asm	/^    f010f4d1:	48 83 45 c0 10       	addq   $0x10,-0x40(%rbp)$/;"	l
f010f4d6	obj/kern/kernel.asm	/^    f010f4d6:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
f010f4da	obj/kern/kernel.asm	/^    f010f4da:	48 3b 45 c8          	cmp    -0x38(%rbp),%rax$/;"	l
f010f4de	obj/kern/kernel.asm	/^    f010f4de:	72 a9                	jb     fffffffff010f489 <end+0xfffffffefe66e0e9>$/;"	l
f010f4e0	obj/kern/kernel.asm	/^    f010f4e0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010f4e5	obj/kern/kernel.asm	/^    f010f4e5:	48 83 c4 48          	add    $0x48,%rsp$/;"	l
f010f4e9	obj/kern/kernel.asm	/^    f010f4e9:	5b                   	pop    %rbx$/;"	l
f010f4ea	obj/kern/kernel.asm	/^    f010f4ea:	c9                   	leaveq $/;"	l
f010f4eb	obj/kern/kernel.asm	/^    f010f4eb:	c3                   	retq   $/;"	l
f010f4ec	obj/kern/kernel.asm	/^    f010f4ec:	55                   	push   %rbp$/;"	l
f010f4ed	obj/kern/kernel.asm	/^    f010f4ed:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010f4f0	obj/kern/kernel.asm	/^    f010f4f0:	53                   	push   %rbx$/;"	l
f010f4f1	obj/kern/kernel.asm	/^    f010f4f1:	48 83 ec 38          	sub    $0x38,%rsp$/;"	l
f010f4f5	obj/kern/kernel.asm	/^    f010f4f5:	48 c7 45 e0 00 04 00 	movq   $0x400,-0x20(%rbp)$/;"	l
f010f4fc	obj/kern/kernel.asm	/^    f010f4fc:	00 $/;"	l
f010f4fd	obj/kern/kernel.asm	/^    f010f4fd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
f010f501	obj/kern/kernel.asm	/^    f010f501:	48 c1 e8 0c          	shr    $0xc,%rax$/;"	l
f010f505	obj/kern/kernel.asm	/^    f010f505:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
f010f508	obj/kern/kernel.asm	/^    f010f508:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
f010f50b	obj/kern/kernel.asm	/^    f010f50b:	48 b8 68 77 a2 f1 00 	mov    $0xf1a27768,%rax$/;"	l
f010f512	obj/kern/kernel.asm	/^    f010f512:	00 00 00 $/;"	l
f010f515	obj/kern/kernel.asm	/^    f010f515:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010f518	obj/kern/kernel.asm	/^    f010f518:	48 39 c2             	cmp    %rax,%rdx$/;"	l
f010f51b	obj/kern/kernel.asm	/^    f010f51b:	72 31                	jb     fffffffff010f54e <end+0xfffffffefe66e1ae>$/;"	l
f010f51d	obj/kern/kernel.asm	/^    f010f51d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
f010f521	obj/kern/kernel.asm	/^    f010f521:	48 89 c1             	mov    %rax,%rcx$/;"	l
f010f524	obj/kern/kernel.asm	/^    f010f524:	48 ba 48 34 11 f0 00 	mov    $0xf0113448,%rdx$/;"	l
f010f52b	obj/kern/kernel.asm	/^    f010f52b:	00 00 00 $/;"	l
f010f52e	obj/kern/kernel.asm	/^    f010f52e:	be 6f 00 00 00       	mov    $0x6f,%esi$/;"	l
f010f533	obj/kern/kernel.asm	/^    f010f533:	48 bf 6b 34 11 f0 00 	mov    $0xf011346b,%rdi$/;"	l
f010f53a	obj/kern/kernel.asm	/^    f010f53a:	00 00 00 $/;"	l
f010f53d	obj/kern/kernel.asm	/^    f010f53d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010f542	obj/kern/kernel.asm	/^    f010f542:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f010f549	obj/kern/kernel.asm	/^    f010f549:	00 00 00 $/;"	l
f010f54c	obj/kern/kernel.asm	/^    f010f54c:	ff d3                	callq  *%rbx$/;"	l
f010f54e	obj/kern/kernel.asm	/^    f010f54e:	b8 00 00 00 f0       	mov    $0xf0000000,%eax$/;"	l
f010f553	obj/kern/kernel.asm	/^    f010f553:	48 03 45 e0          	add    -0x20(%rbp),%rax$/;"	l
f010f557	obj/kern/kernel.asm	/^    f010f557:	48 89 45 c8          	mov    %rax,-0x38(%rbp)$/;"	l
f010f55b	obj/kern/kernel.asm	/^    f010f55b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f010f55f	obj/kern/kernel.asm	/^    f010f55f:	48 83 c0 0e          	add    $0xe,%rax$/;"	l
f010f563	obj/kern/kernel.asm	/^    f010f563:	0f b7 00             	movzwl (%rax),%eax$/;"	l
f010f566	obj/kern/kernel.asm	/^    f010f566:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f010f569	obj/kern/kernel.asm	/^    f010f569:	89 45 d4             	mov    %eax,-0x2c(%rbp)$/;"	l
f010f56c	obj/kern/kernel.asm	/^    f010f56c:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)$/;"	l
f010f570	obj/kern/kernel.asm	/^    f010f570:	74 2c                	je     fffffffff010f59e <end+0xfffffffefe66e1fe>$/;"	l
f010f572	obj/kern/kernel.asm	/^    f010f572:	c1 65 d4 04          	shll   $0x4,-0x2c(%rbp)$/;"	l
f010f576	obj/kern/kernel.asm	/^    f010f576:	8b 45 d4             	mov    -0x2c(%rbp),%eax$/;"	l
f010f579	obj/kern/kernel.asm	/^    f010f579:	be 00 04 00 00       	mov    $0x400,%esi$/;"	l
f010f57e	obj/kern/kernel.asm	/^    f010f57e:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010f581	obj/kern/kernel.asm	/^    f010f581:	48 b8 a6 f3 10 f0 00 	mov    $0xf010f3a6,%rax$/;"	l
f010f588	obj/kern/kernel.asm	/^    f010f588:	00 00 00 $/;"	l
f010f58b	obj/kern/kernel.asm	/^    f010f58b:	ff d0                	callq  *%rax$/;"	l
f010f58d	obj/kern/kernel.asm	/^    f010f58d:	48 89 45 d8          	mov    %rax,-0x28(%rbp)$/;"	l
f010f591	obj/kern/kernel.asm	/^    f010f591:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)$/;"	l
f010f596	obj/kern/kernel.asm	/^    f010f596:	74 49                	je     fffffffff010f5e1 <end+0xfffffffefe66e241>$/;"	l
f010f598	obj/kern/kernel.asm	/^    f010f598:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f010f59c	obj/kern/kernel.asm	/^    f010f59c:	eb 5a                	jmp    fffffffff010f5f8 <end+0xfffffffefe66e258>$/;"	l
f010f59e	obj/kern/kernel.asm	/^    f010f59e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f010f5a2	obj/kern/kernel.asm	/^    f010f5a2:	48 83 c0 13          	add    $0x13,%rax$/;"	l
f010f5a6	obj/kern/kernel.asm	/^    f010f5a6:	0f b7 00             	movzwl (%rax),%eax$/;"	l
f010f5a9	obj/kern/kernel.asm	/^    f010f5a9:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f010f5ac	obj/kern/kernel.asm	/^    f010f5ac:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
f010f5af	obj/kern/kernel.asm	/^    f010f5af:	89 45 d4             	mov    %eax,-0x2c(%rbp)$/;"	l
f010f5b2	obj/kern/kernel.asm	/^    f010f5b2:	8b 45 d4             	mov    -0x2c(%rbp),%eax$/;"	l
f010f5b5	obj/kern/kernel.asm	/^    f010f5b5:	2d 00 04 00 00       	sub    $0x400,%eax$/;"	l
f010f5ba	obj/kern/kernel.asm	/^    f010f5ba:	89 c0                	mov    %eax,%eax$/;"	l
f010f5bc	obj/kern/kernel.asm	/^    f010f5bc:	be 00 04 00 00       	mov    $0x400,%esi$/;"	l
f010f5c1	obj/kern/kernel.asm	/^    f010f5c1:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010f5c4	obj/kern/kernel.asm	/^    f010f5c4:	48 b8 a6 f3 10 f0 00 	mov    $0xf010f3a6,%rax$/;"	l
f010f5cb	obj/kern/kernel.asm	/^    f010f5cb:	00 00 00 $/;"	l
f010f5ce	obj/kern/kernel.asm	/^    f010f5ce:	ff d0                	callq  *%rax$/;"	l
f010f5d0	obj/kern/kernel.asm	/^    f010f5d0:	48 89 45 d8          	mov    %rax,-0x28(%rbp)$/;"	l
f010f5d4	obj/kern/kernel.asm	/^    f010f5d4:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)$/;"	l
f010f5d9	obj/kern/kernel.asm	/^    f010f5d9:	74 07                	je     fffffffff010f5e2 <end+0xfffffffefe66e242>$/;"	l
f010f5db	obj/kern/kernel.asm	/^    f010f5db:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f010f5df	obj/kern/kernel.asm	/^    f010f5df:	eb 17                	jmp    fffffffff010f5f8 <end+0xfffffffefe66e258>$/;"	l
f010f5e1	obj/kern/kernel.asm	/^    f010f5e1:	90                   	nop$/;"	l
f010f5e2	obj/kern/kernel.asm	/^    f010f5e2:	be 00 00 01 00       	mov    $0x10000,%esi$/;"	l
f010f5e7	obj/kern/kernel.asm	/^    f010f5e7:	bf 00 00 0f 00       	mov    $0xf0000,%edi$/;"	l
f010f5ec	obj/kern/kernel.asm	/^    f010f5ec:	48 b8 a6 f3 10 f0 00 	mov    $0xf010f3a6,%rax$/;"	l
f010f5f3	obj/kern/kernel.asm	/^    f010f5f3:	00 00 00 $/;"	l
f010f5f6	obj/kern/kernel.asm	/^    f010f5f6:	ff d0                	callq  *%rax$/;"	l
f010f5f8	obj/kern/kernel.asm	/^    f010f5f8:	48 83 c4 38          	add    $0x38,%rsp$/;"	l
f010f5fc	obj/kern/kernel.asm	/^    f010f5fc:	5b                   	pop    %rbx$/;"	l
f010f5fd	obj/kern/kernel.asm	/^    f010f5fd:	c9                   	leaveq $/;"	l
f010f5fe	obj/kern/kernel.asm	/^    f010f5fe:	c3                   	retq   $/;"	l
f010f5ff	obj/kern/kernel.asm	/^    f010f5ff:	55                   	push   %rbp$/;"	l
f010f600	obj/kern/kernel.asm	/^    f010f600:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010f603	obj/kern/kernel.asm	/^    f010f603:	53                   	push   %rbx$/;"	l
f010f604	obj/kern/kernel.asm	/^    f010f604:	48 83 ec 38          	sub    $0x38,%rsp$/;"	l
f010f608	obj/kern/kernel.asm	/^    f010f608:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)$/;"	l
f010f60c	obj/kern/kernel.asm	/^    f010f60c:	48 b8 ec f4 10 f0 00 	mov    $0xf010f4ec,%rax$/;"	l
f010f613	obj/kern/kernel.asm	/^    f010f613:	00 00 00 $/;"	l
f010f616	obj/kern/kernel.asm	/^    f010f616:	ff d0                	callq  *%rax$/;"	l
f010f618	obj/kern/kernel.asm	/^    f010f618:	48 89 45 d8          	mov    %rax,-0x28(%rbp)$/;"	l
f010f61c	obj/kern/kernel.asm	/^    f010f61c:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)$/;"	l
f010f621	obj/kern/kernel.asm	/^    f010f621:	75 0a                	jne    fffffffff010f62d <end+0xfffffffefe66e28d>$/;"	l
f010f623	obj/kern/kernel.asm	/^    f010f623:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010f628	obj/kern/kernel.asm	/^    f010f628:	e9 ea 01 00 00       	jmpq   fffffffff010f817 <end+0xfffffffefe66e477>$/;"	l
f010f62d	obj/kern/kernel.asm	/^    f010f62d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f010f631	obj/kern/kernel.asm	/^    f010f631:	8b 40 04             	mov    0x4(%rax),%eax$/;"	l
f010f634	obj/kern/kernel.asm	/^    f010f634:	85 c0                	test   %eax,%eax$/;"	l
f010f636	obj/kern/kernel.asm	/^    f010f636:	74 0c                	je     fffffffff010f644 <end+0xfffffffefe66e2a4>$/;"	l
f010f638	obj/kern/kernel.asm	/^    f010f638:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f010f63c	obj/kern/kernel.asm	/^    f010f63c:	0f b6 40 0b          	movzbl 0xb(%rax),%eax$/;"	l
f010f640	obj/kern/kernel.asm	/^    f010f640:	84 c0                	test   %al,%al$/;"	l
f010f642	obj/kern/kernel.asm	/^    f010f642:	74 25                	je     fffffffff010f669 <end+0xfffffffefe66e2c9>$/;"	l
f010f644	obj/kern/kernel.asm	/^    f010f644:	48 bf 80 34 11 f0 00 	mov    $0xf0113480,%rdi$/;"	l
f010f64b	obj/kern/kernel.asm	/^    f010f64b:	00 00 00 $/;"	l
f010f64e	obj/kern/kernel.asm	/^    f010f64e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010f653	obj/kern/kernel.asm	/^    f010f653:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f010f65a	obj/kern/kernel.asm	/^    f010f65a:	00 00 00 $/;"	l
f010f65d	obj/kern/kernel.asm	/^    f010f65d:	ff d2                	callq  *%rdx$/;"	l
f010f65f	obj/kern/kernel.asm	/^    f010f65f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010f664	obj/kern/kernel.asm	/^    f010f664:	e9 ae 01 00 00       	jmpq   fffffffff010f817 <end+0xfffffffefe66e477>$/;"	l
f010f669	obj/kern/kernel.asm	/^    f010f669:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f010f66d	obj/kern/kernel.asm	/^    f010f66d:	8b 40 04             	mov    0x4(%rax),%eax$/;"	l
f010f670	obj/kern/kernel.asm	/^    f010f670:	89 c0                	mov    %eax,%eax$/;"	l
f010f672	obj/kern/kernel.asm	/^    f010f672:	48 89 45 e0          	mov    %rax,-0x20(%rbp)$/;"	l
f010f676	obj/kern/kernel.asm	/^    f010f676:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
f010f67a	obj/kern/kernel.asm	/^    f010f67a:	48 c1 e8 0c          	shr    $0xc,%rax$/;"	l
f010f67e	obj/kern/kernel.asm	/^    f010f67e:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
f010f681	obj/kern/kernel.asm	/^    f010f681:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
f010f684	obj/kern/kernel.asm	/^    f010f684:	48 b8 68 77 a2 f1 00 	mov    $0xf1a27768,%rax$/;"	l
f010f68b	obj/kern/kernel.asm	/^    f010f68b:	00 00 00 $/;"	l
f010f68e	obj/kern/kernel.asm	/^    f010f68e:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010f691	obj/kern/kernel.asm	/^    f010f691:	48 39 c2             	cmp    %rax,%rdx$/;"	l
f010f694	obj/kern/kernel.asm	/^    f010f694:	72 31                	jb     fffffffff010f6c7 <end+0xfffffffefe66e327>$/;"	l
f010f696	obj/kern/kernel.asm	/^    f010f696:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
f010f69a	obj/kern/kernel.asm	/^    f010f69a:	48 89 c1             	mov    %rax,%rcx$/;"	l
f010f69d	obj/kern/kernel.asm	/^    f010f69d:	48 ba 48 34 11 f0 00 	mov    $0xf0113448,%rdx$/;"	l
f010f6a4	obj/kern/kernel.asm	/^    f010f6a4:	00 00 00 $/;"	l
f010f6a7	obj/kern/kernel.asm	/^    f010f6a7:	be 90 00 00 00       	mov    $0x90,%esi$/;"	l
f010f6ac	obj/kern/kernel.asm	/^    f010f6ac:	48 bf 6b 34 11 f0 00 	mov    $0xf011346b,%rdi$/;"	l
f010f6b3	obj/kern/kernel.asm	/^    f010f6b3:	00 00 00 $/;"	l
f010f6b6	obj/kern/kernel.asm	/^    f010f6b6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010f6bb	obj/kern/kernel.asm	/^    f010f6bb:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f010f6c2	obj/kern/kernel.asm	/^    f010f6c2:	00 00 00 $/;"	l
f010f6c5	obj/kern/kernel.asm	/^    f010f6c5:	ff d3                	callq  *%rbx$/;"	l
f010f6c7	obj/kern/kernel.asm	/^    f010f6c7:	b8 00 00 00 f0       	mov    $0xf0000000,%eax$/;"	l
f010f6cc	obj/kern/kernel.asm	/^    f010f6cc:	48 03 45 e0          	add    -0x20(%rbp),%rax$/;"	l
f010f6d0	obj/kern/kernel.asm	/^    f010f6d0:	48 89 45 d0          	mov    %rax,-0x30(%rbp)$/;"	l
f010f6d4	obj/kern/kernel.asm	/^    f010f6d4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f010f6d8	obj/kern/kernel.asm	/^    f010f6d8:	ba 04 00 00 00       	mov    $0x4,%edx$/;"	l
f010f6dd	obj/kern/kernel.asm	/^    f010f6dd:	48 be ad 34 11 f0 00 	mov    $0xf01134ad,%rsi$/;"	l
f010f6e4	obj/kern/kernel.asm	/^    f010f6e4:	00 00 00 $/;"	l
f010f6e7	obj/kern/kernel.asm	/^    f010f6e7:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010f6ea	obj/kern/kernel.asm	/^    f010f6ea:	48 b8 22 f0 10 f0 00 	mov    $0xf010f022,%rax$/;"	l
f010f6f1	obj/kern/kernel.asm	/^    f010f6f1:	00 00 00 $/;"	l
f010f6f4	obj/kern/kernel.asm	/^    f010f6f4:	ff d0                	callq  *%rax$/;"	l
f010f6f6	obj/kern/kernel.asm	/^    f010f6f6:	85 c0                	test   %eax,%eax$/;"	l
f010f6f8	obj/kern/kernel.asm	/^    f010f6f8:	74 25                	je     fffffffff010f71f <end+0xfffffffefe66e37f>$/;"	l
f010f6fa	obj/kern/kernel.asm	/^    f010f6fa:	48 bf b8 34 11 f0 00 	mov    $0xf01134b8,%rdi$/;"	l
f010f701	obj/kern/kernel.asm	/^    f010f701:	00 00 00 $/;"	l
f010f704	obj/kern/kernel.asm	/^    f010f704:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010f709	obj/kern/kernel.asm	/^    f010f709:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f010f710	obj/kern/kernel.asm	/^    f010f710:	00 00 00 $/;"	l
f010f713	obj/kern/kernel.asm	/^    f010f713:	ff d2                	callq  *%rdx$/;"	l
f010f715	obj/kern/kernel.asm	/^    f010f715:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010f71a	obj/kern/kernel.asm	/^    f010f71a:	e9 f8 00 00 00       	jmpq   fffffffff010f817 <end+0xfffffffefe66e477>$/;"	l
f010f71f	obj/kern/kernel.asm	/^    f010f71f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f010f723	obj/kern/kernel.asm	/^    f010f723:	0f b7 40 04          	movzwl 0x4(%rax),%eax$/;"	l
f010f727	obj/kern/kernel.asm	/^    f010f727:	0f b7 d0             	movzwl %ax,%edx$/;"	l
f010f72a	obj/kern/kernel.asm	/^    f010f72a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f010f72e	obj/kern/kernel.asm	/^    f010f72e:	89 d6                	mov    %edx,%esi$/;"	l
f010f730	obj/kern/kernel.asm	/^    f010f730:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010f733	obj/kern/kernel.asm	/^    f010f733:	48 b8 60 f3 10 f0 00 	mov    $0xf010f360,%rax$/;"	l
f010f73a	obj/kern/kernel.asm	/^    f010f73a:	00 00 00 $/;"	l
f010f73d	obj/kern/kernel.asm	/^    f010f73d:	ff d0                	callq  *%rax$/;"	l
f010f73f	obj/kern/kernel.asm	/^    f010f73f:	84 c0                	test   %al,%al$/;"	l
f010f741	obj/kern/kernel.asm	/^    f010f741:	74 25                	je     fffffffff010f768 <end+0xfffffffefe66e3c8>$/;"	l
f010f743	obj/kern/kernel.asm	/^    f010f743:	48 bf f0 34 11 f0 00 	mov    $0xf01134f0,%rdi$/;"	l
f010f74a	obj/kern/kernel.asm	/^    f010f74a:	00 00 00 $/;"	l
f010f74d	obj/kern/kernel.asm	/^    f010f74d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010f752	obj/kern/kernel.asm	/^    f010f752:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f010f759	obj/kern/kernel.asm	/^    f010f759:	00 00 00 $/;"	l
f010f75c	obj/kern/kernel.asm	/^    f010f75c:	ff d2                	callq  *%rdx$/;"	l
f010f75e	obj/kern/kernel.asm	/^    f010f75e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010f763	obj/kern/kernel.asm	/^    f010f763:	e9 af 00 00 00       	jmpq   fffffffff010f817 <end+0xfffffffefe66e477>$/;"	l
f010f768	obj/kern/kernel.asm	/^    f010f768:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f010f76c	obj/kern/kernel.asm	/^    f010f76c:	0f b6 40 06          	movzbl 0x6(%rax),%eax$/;"	l
f010f770	obj/kern/kernel.asm	/^    f010f770:	3c 01                	cmp    $0x1,%al$/;"	l
f010f772	obj/kern/kernel.asm	/^    f010f772:	74 3b                	je     fffffffff010f7af <end+0xfffffffefe66e40f>$/;"	l
f010f774	obj/kern/kernel.asm	/^    f010f774:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f010f778	obj/kern/kernel.asm	/^    f010f778:	0f b6 40 06          	movzbl 0x6(%rax),%eax$/;"	l
f010f77c	obj/kern/kernel.asm	/^    f010f77c:	3c 04                	cmp    $0x4,%al$/;"	l
f010f77e	obj/kern/kernel.asm	/^    f010f77e:	74 2f                	je     fffffffff010f7af <end+0xfffffffefe66e40f>$/;"	l
f010f780	obj/kern/kernel.asm	/^    f010f780:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f010f784	obj/kern/kernel.asm	/^    f010f784:	0f b6 40 06          	movzbl 0x6(%rax),%eax$/;"	l
f010f788	obj/kern/kernel.asm	/^    f010f788:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010f78b	obj/kern/kernel.asm	/^    f010f78b:	89 c6                	mov    %eax,%esi$/;"	l
f010f78d	obj/kern/kernel.asm	/^    f010f78d:	48 bf 18 35 11 f0 00 	mov    $0xf0113518,%rdi$/;"	l
f010f794	obj/kern/kernel.asm	/^    f010f794:	00 00 00 $/;"	l
f010f797	obj/kern/kernel.asm	/^    f010f797:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010f79c	obj/kern/kernel.asm	/^    f010f79c:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f010f7a3	obj/kern/kernel.asm	/^    f010f7a3:	00 00 00 $/;"	l
f010f7a6	obj/kern/kernel.asm	/^    f010f7a6:	ff d2                	callq  *%rdx$/;"	l
f010f7a8	obj/kern/kernel.asm	/^    f010f7a8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010f7ad	obj/kern/kernel.asm	/^    f010f7ad:	eb 68                	jmp    fffffffff010f817 <end+0xfffffffefe66e477>$/;"	l
f010f7af	obj/kern/kernel.asm	/^    f010f7af:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f010f7b3	obj/kern/kernel.asm	/^    f010f7b3:	0f b7 40 28          	movzwl 0x28(%rax),%eax$/;"	l
f010f7b7	obj/kern/kernel.asm	/^    f010f7b7:	0f b7 d0             	movzwl %ax,%edx$/;"	l
f010f7ba	obj/kern/kernel.asm	/^    f010f7ba:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f010f7be	obj/kern/kernel.asm	/^    f010f7be:	0f b7 40 04          	movzwl 0x4(%rax),%eax$/;"	l
f010f7c2	obj/kern/kernel.asm	/^    f010f7c2:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f010f7c5	obj/kern/kernel.asm	/^    f010f7c5:	48 03 45 d0          	add    -0x30(%rbp),%rax$/;"	l
f010f7c9	obj/kern/kernel.asm	/^    f010f7c9:	89 d6                	mov    %edx,%esi$/;"	l
f010f7cb	obj/kern/kernel.asm	/^    f010f7cb:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010f7ce	obj/kern/kernel.asm	/^    f010f7ce:	48 b8 60 f3 10 f0 00 	mov    $0xf010f360,%rax$/;"	l
f010f7d5	obj/kern/kernel.asm	/^    f010f7d5:	00 00 00 $/;"	l
f010f7d8	obj/kern/kernel.asm	/^    f010f7d8:	ff d0                	callq  *%rax$/;"	l
f010f7da	obj/kern/kernel.asm	/^    f010f7da:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx$/;"	l
f010f7de	obj/kern/kernel.asm	/^    f010f7de:	0f b6 52 2a          	movzbl 0x2a(%rdx),%edx$/;"	l
f010f7e2	obj/kern/kernel.asm	/^    f010f7e2:	38 d0                	cmp    %dl,%al$/;"	l
f010f7e4	obj/kern/kernel.asm	/^    f010f7e4:	74 22                	je     fffffffff010f808 <end+0xfffffffefe66e468>$/;"	l
f010f7e6	obj/kern/kernel.asm	/^    f010f7e6:	48 bf 38 35 11 f0 00 	mov    $0xf0113538,%rdi$/;"	l
f010f7ed	obj/kern/kernel.asm	/^    f010f7ed:	00 00 00 $/;"	l
f010f7f0	obj/kern/kernel.asm	/^    f010f7f0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010f7f5	obj/kern/kernel.asm	/^    f010f7f5:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f010f7fc	obj/kern/kernel.asm	/^    f010f7fc:	00 00 00 $/;"	l
f010f7ff	obj/kern/kernel.asm	/^    f010f7ff:	ff d2                	callq  *%rdx$/;"	l
f010f801	obj/kern/kernel.asm	/^    f010f801:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010f806	obj/kern/kernel.asm	/^    f010f806:	eb 0f                	jmp    fffffffff010f817 <end+0xfffffffefe66e477>$/;"	l
f010f808	obj/kern/kernel.asm	/^    f010f808:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f010f80c	obj/kern/kernel.asm	/^    f010f80c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx$/;"	l
f010f810	obj/kern/kernel.asm	/^    f010f810:	48 89 10             	mov    %rdx,(%rax)$/;"	l
f010f813	obj/kern/kernel.asm	/^    f010f813:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f010f817	obj/kern/kernel.asm	/^    f010f817:	48 83 c4 38          	add    $0x38,%rsp$/;"	l
f010f81b	obj/kern/kernel.asm	/^    f010f81b:	5b                   	pop    %rbx$/;"	l
f010f81c	obj/kern/kernel.asm	/^    f010f81c:	c9                   	leaveq $/;"	l
f010f81d	obj/kern/kernel.asm	/^    f010f81d:	c3                   	retq   $/;"	l
f010f81e	obj/kern/kernel.asm	/^    f010f81e:	55                   	push   %rbp$/;"	l
f010f81f	obj/kern/kernel.asm	/^    f010f81f:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010f822	obj/kern/kernel.asm	/^    f010f822:	53                   	push   %rbx$/;"	l
f010f823	obj/kern/kernel.asm	/^    f010f823:	48 83 ec 48          	sub    $0x48,%rsp$/;"	l
f010f827	obj/kern/kernel.asm	/^    f010f827:	48 b8 e0 83 a2 f1 00 	mov    $0xf1a283e0,%rax$/;"	l
f010f82e	obj/kern/kernel.asm	/^    f010f82e:	00 00 00 $/;"	l
f010f831	obj/kern/kernel.asm	/^    f010f831:	48 ba 20 80 a2 f1 00 	mov    $0xf1a28020,%rdx$/;"	l
f010f838	obj/kern/kernel.asm	/^    f010f838:	00 00 00 $/;"	l
f010f83b	obj/kern/kernel.asm	/^    f010f83b:	48 89 10             	mov    %rdx,(%rax)$/;"	l
f010f83e	obj/kern/kernel.asm	/^    f010f83e:	48 8d 45 b8          	lea    -0x48(%rbp),%rax$/;"	l
f010f842	obj/kern/kernel.asm	/^    f010f842:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010f845	obj/kern/kernel.asm	/^    f010f845:	48 b8 ff f5 10 f0 00 	mov    $0xf010f5ff,%rax$/;"	l
f010f84c	obj/kern/kernel.asm	/^    f010f84c:	00 00 00 $/;"	l
f010f84f	obj/kern/kernel.asm	/^    f010f84f:	ff d0                	callq  *%rax$/;"	l
f010f851	obj/kern/kernel.asm	/^    f010f851:	48 89 45 c0          	mov    %rax,-0x40(%rbp)$/;"	l
f010f855	obj/kern/kernel.asm	/^    f010f855:	48 83 7d c0 00       	cmpq   $0x0,-0x40(%rbp)$/;"	l
f010f85a	obj/kern/kernel.asm	/^    f010f85a:	0f 84 b8 02 00 00    	je     fffffffff010fb18 <end+0xfffffffefe66e778>$/;"	l
f010f860	obj/kern/kernel.asm	/^    f010f860:	48 b8 00 80 a2 f1 00 	mov    $0xf1a28000,%rax$/;"	l
f010f867	obj/kern/kernel.asm	/^    f010f867:	00 00 00 $/;"	l
f010f86a	obj/kern/kernel.asm	/^    f010f86a:	c7 00 01 00 00 00    	movl   $0x1,(%rax)$/;"	l
f010f870	obj/kern/kernel.asm	/^    f010f870:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
f010f874	obj/kern/kernel.asm	/^    f010f874:	8b 40 24             	mov    0x24(%rax),%eax$/;"	l
f010f877	obj/kern/kernel.asm	/^    f010f877:	89 c2                	mov    %eax,%edx$/;"	l
f010f879	obj/kern/kernel.asm	/^    f010f879:	48 b8 00 90 a6 f1 00 	mov    $0xf1a69000,%rax$/;"	l
f010f880	obj/kern/kernel.asm	/^    f010f880:	00 00 00 $/;"	l
f010f883	obj/kern/kernel.asm	/^    f010f883:	48 89 10             	mov    %rdx,(%rax)$/;"	l
f010f886	obj/kern/kernel.asm	/^    f010f886:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
f010f88a	obj/kern/kernel.asm	/^    f010f88a:	48 83 c0 2c          	add    $0x2c,%rax$/;"	l
f010f88e	obj/kern/kernel.asm	/^    f010f88e:	48 89 45 d0          	mov    %rax,-0x30(%rbp)$/;"	l
f010f892	obj/kern/kernel.asm	/^    f010f892:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%rbp)$/;"	l
f010f899	obj/kern/kernel.asm	/^    f010f899:	e9 5d 01 00 00       	jmpq   fffffffff010f9fb <end+0xfffffffefe66e65b>$/;"	l
f010f89e	obj/kern/kernel.asm	/^    f010f89e:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f010f8a2	obj/kern/kernel.asm	/^    f010f8a2:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f010f8a5	obj/kern/kernel.asm	/^    f010f8a5:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010f8a8	obj/kern/kernel.asm	/^    f010f8a8:	85 c0                	test   %eax,%eax$/;"	l
f010f8aa	obj/kern/kernel.asm	/^    f010f8aa:	74 16                	je     fffffffff010f8c2 <end+0xfffffffefe66e522>$/;"	l
f010f8ac	obj/kern/kernel.asm	/^    f010f8ac:	85 c0                	test   %eax,%eax$/;"	l
f010f8ae	obj/kern/kernel.asm	/^    f010f8ae:	0f 88 fe 00 00 00    	js     fffffffff010f9b2 <end+0xfffffffefe66e612>$/;"	l
f010f8b4	obj/kern/kernel.asm	/^    f010f8b4:	83 f8 04             	cmp    $0x4,%eax$/;"	l
f010f8b7	obj/kern/kernel.asm	/^    f010f8b7:	0f 8f f5 00 00 00    	jg     fffffffff010f9b2 <end+0xfffffffefe66e612>$/;"	l
f010f8bd	obj/kern/kernel.asm	/^    f010f8bd:	e9 e9 00 00 00       	jmpq   fffffffff010f9ab <end+0xfffffffefe66e60b>$/;"	l
f010f8c2	obj/kern/kernel.asm	/^    f010f8c2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f010f8c6	obj/kern/kernel.asm	/^    f010f8c6:	48 89 45 c8          	mov    %rax,-0x38(%rbp)$/;"	l
f010f8ca	obj/kern/kernel.asm	/^    f010f8ca:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f010f8ce	obj/kern/kernel.asm	/^    f010f8ce:	0f b6 40 03          	movzbl 0x3(%rax),%eax$/;"	l
f010f8d2	obj/kern/kernel.asm	/^    f010f8d2:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010f8d5	obj/kern/kernel.asm	/^    f010f8d5:	83 e0 02             	and    $0x2,%eax$/;"	l
f010f8d8	obj/kern/kernel.asm	/^    f010f8d8:	85 c0                	test   %eax,%eax$/;"	l
f010f8da	obj/kern/kernel.asm	/^    f010f8da:	74 36                	je     fffffffff010f912 <end+0xfffffffefe66e572>$/;"	l
f010f8dc	obj/kern/kernel.asm	/^    f010f8dc:	48 b8 e8 83 a2 f1 00 	mov    $0xf1a283e8,%rax$/;"	l
f010f8e3	obj/kern/kernel.asm	/^    f010f8e3:	00 00 00 $/;"	l
f010f8e6	obj/kern/kernel.asm	/^    f010f8e6:	8b 00                	mov    (%rax),%eax$/;"	l
f010f8e8	obj/kern/kernel.asm	/^    f010f8e8:	48 98                	cltq   $/;"	l
f010f8ea	obj/kern/kernel.asm	/^    f010f8ea:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f010f8ee	obj/kern/kernel.asm	/^    f010f8ee:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010f8f1	obj/kern/kernel.asm	/^    f010f8f1:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f010f8f5	obj/kern/kernel.asm	/^    f010f8f5:	48 29 c2             	sub    %rax,%rdx$/;"	l
f010f8f8	obj/kern/kernel.asm	/^    f010f8f8:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f010f8ff	obj/kern/kernel.asm	/^    f010f8ff:	00 00 00 $/;"	l
f010f902	obj/kern/kernel.asm	/^    f010f902:	48 01 c2             	add    %rax,%rdx$/;"	l
f010f905	obj/kern/kernel.asm	/^    f010f905:	48 b8 e0 83 a2 f1 00 	mov    $0xf1a283e0,%rax$/;"	l
f010f90c	obj/kern/kernel.asm	/^    f010f90c:	00 00 00 $/;"	l
f010f90f	obj/kern/kernel.asm	/^    f010f90f:	48 89 10             	mov    %rdx,(%rax)$/;"	l
f010f912	obj/kern/kernel.asm	/^    f010f912:	48 b8 e8 83 a2 f1 00 	mov    $0xf1a283e8,%rax$/;"	l
f010f919	obj/kern/kernel.asm	/^    f010f919:	00 00 00 $/;"	l
f010f91c	obj/kern/kernel.asm	/^    f010f91c:	8b 00                	mov    (%rax),%eax$/;"	l
f010f91e	obj/kern/kernel.asm	/^    f010f91e:	83 f8 07             	cmp    $0x7,%eax$/;"	l
f010f921	obj/kern/kernel.asm	/^    f010f921:	7f 59                	jg     fffffffff010f97c <end+0xfffffffefe66e5dc>$/;"	l
f010f923	obj/kern/kernel.asm	/^    f010f923:	48 b8 e8 83 a2 f1 00 	mov    $0xf1a283e8,%rax$/;"	l
f010f92a	obj/kern/kernel.asm	/^    f010f92a:	00 00 00 $/;"	l
f010f92d	obj/kern/kernel.asm	/^    f010f92d:	8b 10                	mov    (%rax),%edx$/;"	l
f010f92f	obj/kern/kernel.asm	/^    f010f92f:	48 b8 e8 83 a2 f1 00 	mov    $0xf1a283e8,%rax$/;"	l
f010f936	obj/kern/kernel.asm	/^    f010f936:	00 00 00 $/;"	l
f010f939	obj/kern/kernel.asm	/^    f010f939:	8b 00                	mov    (%rax),%eax$/;"	l
f010f93b	obj/kern/kernel.asm	/^    f010f93b:	89 c3                	mov    %eax,%ebx$/;"	l
f010f93d	obj/kern/kernel.asm	/^    f010f93d:	48 b9 20 80 a2 f1 00 	mov    $0xf1a28020,%rcx$/;"	l
f010f944	obj/kern/kernel.asm	/^    f010f944:	00 00 00 $/;"	l
f010f947	obj/kern/kernel.asm	/^    f010f947:	48 63 c2             	movslq %edx,%rax$/;"	l
f010f94a	obj/kern/kernel.asm	/^    f010f94a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx$/;"	l
f010f951	obj/kern/kernel.asm	/^    f010f951:	00 $/;"	l
f010f952	obj/kern/kernel.asm	/^    f010f952:	48 89 d0             	mov    %rdx,%rax$/;"	l
f010f955	obj/kern/kernel.asm	/^    f010f955:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
f010f959	obj/kern/kernel.asm	/^    f010f959:	48 29 d0             	sub    %rdx,%rax$/;"	l
f010f95c	obj/kern/kernel.asm	/^    f010f95c:	88 1c 08             	mov    %bl,(%rax,%rcx,1)$/;"	l
f010f95f	obj/kern/kernel.asm	/^    f010f95f:	48 b8 e8 83 a2 f1 00 	mov    $0xf1a283e8,%rax$/;"	l
f010f966	obj/kern/kernel.asm	/^    f010f966:	00 00 00 $/;"	l
f010f969	obj/kern/kernel.asm	/^    f010f969:	8b 00                	mov    (%rax),%eax$/;"	l
f010f96b	obj/kern/kernel.asm	/^    f010f96b:	8d 50 01             	lea    0x1(%rax),%edx$/;"	l
f010f96e	obj/kern/kernel.asm	/^    f010f96e:	48 b8 e8 83 a2 f1 00 	mov    $0xf1a283e8,%rax$/;"	l
f010f975	obj/kern/kernel.asm	/^    f010f975:	00 00 00 $/;"	l
f010f978	obj/kern/kernel.asm	/^    f010f978:	89 10                	mov    %edx,(%rax)$/;"	l
f010f97a	obj/kern/kernel.asm	/^    f010f97a:	eb 28                	jmp    fffffffff010f9a4 <end+0xfffffffefe66e604>$/;"	l
f010f97c	obj/kern/kernel.asm	/^    f010f97c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f010f980	obj/kern/kernel.asm	/^    f010f980:	0f b6 40 01          	movzbl 0x1(%rax),%eax$/;"	l
f010f984	obj/kern/kernel.asm	/^    f010f984:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010f987	obj/kern/kernel.asm	/^    f010f987:	89 c6                	mov    %eax,%esi$/;"	l
f010f989	obj/kern/kernel.asm	/^    f010f989:	48 bf 68 35 11 f0 00 	mov    $0xf0113568,%rdi$/;"	l
f010f990	obj/kern/kernel.asm	/^    f010f990:	00 00 00 $/;"	l
f010f993	obj/kern/kernel.asm	/^    f010f993:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010f998	obj/kern/kernel.asm	/^    f010f998:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f010f99f	obj/kern/kernel.asm	/^    f010f99f:	00 00 00 $/;"	l
f010f9a2	obj/kern/kernel.asm	/^    f010f9a2:	ff d2                	callq  *%rdx$/;"	l
f010f9a4	obj/kern/kernel.asm	/^    f010f9a4:	48 83 45 d0 14       	addq   $0x14,-0x30(%rbp)$/;"	l
f010f9a9	obj/kern/kernel.asm	/^    f010f9a9:	eb 4c                	jmp    fffffffff010f9f7 <end+0xfffffffefe66e657>$/;"	l
f010f9ab	obj/kern/kernel.asm	/^    f010f9ab:	48 83 45 d0 08       	addq   $0x8,-0x30(%rbp)$/;"	l
f010f9b0	obj/kern/kernel.asm	/^    f010f9b0:	eb 45                	jmp    fffffffff010f9f7 <end+0xfffffffefe66e657>$/;"	l
f010f9b2	obj/kern/kernel.asm	/^    f010f9b2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f010f9b6	obj/kern/kernel.asm	/^    f010f9b6:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f010f9b9	obj/kern/kernel.asm	/^    f010f9b9:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010f9bc	obj/kern/kernel.asm	/^    f010f9bc:	89 c6                	mov    %eax,%esi$/;"	l
f010f9be	obj/kern/kernel.asm	/^    f010f9be:	48 bf 90 35 11 f0 00 	mov    $0xf0113590,%rdi$/;"	l
f010f9c5	obj/kern/kernel.asm	/^    f010f9c5:	00 00 00 $/;"	l
f010f9c8	obj/kern/kernel.asm	/^    f010f9c8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010f9cd	obj/kern/kernel.asm	/^    f010f9cd:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f010f9d4	obj/kern/kernel.asm	/^    f010f9d4:	00 00 00 $/;"	l
f010f9d7	obj/kern/kernel.asm	/^    f010f9d7:	ff d2                	callq  *%rdx$/;"	l
f010f9d9	obj/kern/kernel.asm	/^    f010f9d9:	48 b8 00 80 a2 f1 00 	mov    $0xf1a28000,%rax$/;"	l
f010f9e0	obj/kern/kernel.asm	/^    f010f9e0:	00 00 00 $/;"	l
f010f9e3	obj/kern/kernel.asm	/^    f010f9e3:	c7 00 00 00 00 00    	movl   $0x0,(%rax)$/;"	l
f010f9e9	obj/kern/kernel.asm	/^    f010f9e9:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
f010f9ed	obj/kern/kernel.asm	/^    f010f9ed:	0f b7 40 22          	movzwl 0x22(%rax),%eax$/;"	l
f010f9f1	obj/kern/kernel.asm	/^    f010f9f1:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f010f9f4	obj/kern/kernel.asm	/^    f010f9f4:	89 45 d8             	mov    %eax,-0x28(%rbp)$/;"	l
f010f9f7	obj/kern/kernel.asm	/^    f010f9f7:	83 45 d8 01          	addl   $0x1,-0x28(%rbp)$/;"	l
f010f9fb	obj/kern/kernel.asm	/^    f010f9fb:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
f010f9ff	obj/kern/kernel.asm	/^    f010f9ff:	0f b7 40 22          	movzwl 0x22(%rax),%eax$/;"	l
f010fa03	obj/kern/kernel.asm	/^    f010fa03:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f010fa06	obj/kern/kernel.asm	/^    f010fa06:	3b 45 d8             	cmp    -0x28(%rbp),%eax$/;"	l
f010fa09	obj/kern/kernel.asm	/^    f010fa09:	0f 87 8f fe ff ff    	ja     fffffffff010f89e <end+0xfffffffefe66e4fe>$/;"	l
f010fa0f	obj/kern/kernel.asm	/^    f010fa0f:	48 b8 e0 83 a2 f1 00 	mov    $0xf1a283e0,%rax$/;"	l
f010fa16	obj/kern/kernel.asm	/^    f010fa16:	00 00 00 $/;"	l
f010fa19	obj/kern/kernel.asm	/^    f010fa19:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010fa1c	obj/kern/kernel.asm	/^    f010fa1c:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%rax)$/;"	l
f010fa23	obj/kern/kernel.asm	/^    f010fa23:	48 b8 00 80 a2 f1 00 	mov    $0xf1a28000,%rax$/;"	l
f010fa2a	obj/kern/kernel.asm	/^    f010fa2a:	00 00 00 $/;"	l
f010fa2d	obj/kern/kernel.asm	/^    f010fa2d:	8b 00                	mov    (%rax),%eax$/;"	l
f010fa2f	obj/kern/kernel.asm	/^    f010fa2f:	85 c0                	test   %eax,%eax$/;"	l
f010fa31	obj/kern/kernel.asm	/^    f010fa31:	75 41                	jne    fffffffff010fa74 <end+0xfffffffefe66e6d4>$/;"	l
f010fa33	obj/kern/kernel.asm	/^    f010fa33:	48 b8 e8 83 a2 f1 00 	mov    $0xf1a283e8,%rax$/;"	l
f010fa3a	obj/kern/kernel.asm	/^    f010fa3a:	00 00 00 $/;"	l
f010fa3d	obj/kern/kernel.asm	/^    f010fa3d:	c7 00 01 00 00 00    	movl   $0x1,(%rax)$/;"	l
f010fa43	obj/kern/kernel.asm	/^    f010fa43:	48 b8 00 90 a6 f1 00 	mov    $0xf1a69000,%rax$/;"	l
f010fa4a	obj/kern/kernel.asm	/^    f010fa4a:	00 00 00 $/;"	l
f010fa4d	obj/kern/kernel.asm	/^    f010fa4d:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)$/;"	l
f010fa54	obj/kern/kernel.asm	/^    f010fa54:	48 bf b0 35 11 f0 00 	mov    $0xf01135b0,%rdi$/;"	l
f010fa5b	obj/kern/kernel.asm	/^    f010fa5b:	00 00 00 $/;"	l
f010fa5e	obj/kern/kernel.asm	/^    f010fa5e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010fa63	obj/kern/kernel.asm	/^    f010fa63:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f010fa6a	obj/kern/kernel.asm	/^    f010fa6a:	00 00 00 $/;"	l
f010fa6d	obj/kern/kernel.asm	/^    f010fa6d:	ff d2                	callq  *%rdx$/;"	l
f010fa6f	obj/kern/kernel.asm	/^    f010fa6f:	e9 a5 00 00 00       	jmpq   fffffffff010fb19 <end+0xfffffffefe66e779>$/;"	l
f010fa74	obj/kern/kernel.asm	/^    f010fa74:	48 b8 e8 83 a2 f1 00 	mov    $0xf1a283e8,%rax$/;"	l
f010fa7b	obj/kern/kernel.asm	/^    f010fa7b:	00 00 00 $/;"	l
f010fa7e	obj/kern/kernel.asm	/^    f010fa7e:	8b 10                	mov    (%rax),%edx$/;"	l
f010fa80	obj/kern/kernel.asm	/^    f010fa80:	48 b8 e0 83 a2 f1 00 	mov    $0xf1a283e0,%rax$/;"	l
f010fa87	obj/kern/kernel.asm	/^    f010fa87:	00 00 00 $/;"	l
f010fa8a	obj/kern/kernel.asm	/^    f010fa8a:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010fa8d	obj/kern/kernel.asm	/^    f010fa8d:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f010fa90	obj/kern/kernel.asm	/^    f010fa90:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010fa93	obj/kern/kernel.asm	/^    f010fa93:	89 c6                	mov    %eax,%esi$/;"	l
f010fa95	obj/kern/kernel.asm	/^    f010fa95:	48 bf dc 35 11 f0 00 	mov    $0xf01135dc,%rdi$/;"	l
f010fa9c	obj/kern/kernel.asm	/^    f010fa9c:	00 00 00 $/;"	l
f010fa9f	obj/kern/kernel.asm	/^    f010fa9f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010faa4	obj/kern/kernel.asm	/^    f010faa4:	48 b9 eb 88 10 f0 00 	mov    $0xf01088eb,%rcx$/;"	l
f010faab	obj/kern/kernel.asm	/^    f010faab:	00 00 00 $/;"	l
f010faae	obj/kern/kernel.asm	/^    f010faae:	ff d1                	callq  *%rcx$/;"	l
f010fab0	obj/kern/kernel.asm	/^    f010fab0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax$/;"	l
f010fab4	obj/kern/kernel.asm	/^    f010fab4:	0f b6 40 0c          	movzbl 0xc(%rax),%eax$/;"	l
f010fab8	obj/kern/kernel.asm	/^    f010fab8:	84 c0                	test   %al,%al$/;"	l
f010faba	obj/kern/kernel.asm	/^    f010faba:	74 5d                	je     fffffffff010fb19 <end+0xfffffffefe66e779>$/;"	l
f010fabc	obj/kern/kernel.asm	/^    f010fabc:	48 bf 00 36 11 f0 00 	mov    $0xf0113600,%rdi$/;"	l
f010fac3	obj/kern/kernel.asm	/^    f010fac3:	00 00 00 $/;"	l
f010fac6	obj/kern/kernel.asm	/^    f010fac6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010facb	obj/kern/kernel.asm	/^    f010facb:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f010fad2	obj/kern/kernel.asm	/^    f010fad2:	00 00 00 $/;"	l
f010fad5	obj/kern/kernel.asm	/^    f010fad5:	ff d2                	callq  *%rdx$/;"	l
f010fad7	obj/kern/kernel.asm	/^    f010fad7:	c7 45 e0 22 00 00 00 	movl   $0x22,-0x20(%rbp)$/;"	l
f010fade	obj/kern/kernel.asm	/^    f010fade:	c6 45 df 70          	movb   $0x70,-0x21(%rbp)$/;"	l
f010fae2	obj/kern/kernel.asm	/^    f010fae2:	0f b6 45 df          	movzbl -0x21(%rbp),%eax$/;"	l
f010fae6	obj/kern/kernel.asm	/^    f010fae6:	8b 55 e0             	mov    -0x20(%rbp),%edx$/;"	l
f010fae9	obj/kern/kernel.asm	/^    f010fae9:	ee                   	out    %al,(%dx)$/;"	l
f010faea	obj/kern/kernel.asm	/^    f010faea:	c7 45 e4 23 00 00 00 	movl   $0x23,-0x1c(%rbp)$/;"	l
f010faf1	obj/kern/kernel.asm	/^    f010faf1:	8b 45 e4             	mov    -0x1c(%rbp),%eax$/;"	l
f010faf4	obj/kern/kernel.asm	/^    f010faf4:	89 c2                	mov    %eax,%edx$/;"	l
f010faf6	obj/kern/kernel.asm	/^    f010faf6:	ec                   	in     (%dx),%al$/;"	l
f010faf7	obj/kern/kernel.asm	/^    f010faf7:	88 45 ea             	mov    %al,-0x16(%rbp)$/;"	l
f010fafa	obj/kern/kernel.asm	/^    f010fafa:	0f b6 45 ea          	movzbl -0x16(%rbp),%eax$/;"	l
f010fafe	obj/kern/kernel.asm	/^    f010fafe:	83 c8 01             	or     $0x1,%eax$/;"	l
f010fb01	obj/kern/kernel.asm	/^    f010fb01:	0f b6 c0             	movzbl %al,%eax$/;"	l
f010fb04	obj/kern/kernel.asm	/^    f010fb04:	c7 45 ec 23 00 00 00 	movl   $0x23,-0x14(%rbp)$/;"	l
f010fb0b	obj/kern/kernel.asm	/^    f010fb0b:	88 45 eb             	mov    %al,-0x15(%rbp)$/;"	l
f010fb0e	obj/kern/kernel.asm	/^    f010fb0e:	0f b6 45 eb          	movzbl -0x15(%rbp),%eax$/;"	l
f010fb12	obj/kern/kernel.asm	/^    f010fb12:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
f010fb15	obj/kern/kernel.asm	/^    f010fb15:	ee                   	out    %al,(%dx)$/;"	l
f010fb16	obj/kern/kernel.asm	/^    f010fb16:	eb 01                	jmp    fffffffff010fb19 <end+0xfffffffefe66e779>$/;"	l
f010fb18	obj/kern/kernel.asm	/^    f010fb18:	90                   	nop$/;"	l
f010fb19	obj/kern/kernel.asm	/^    f010fb19:	48 83 c4 48          	add    $0x48,%rsp$/;"	l
f010fb1d	obj/kern/kernel.asm	/^    f010fb1d:	5b                   	pop    %rbx$/;"	l
f010fb1e	obj/kern/kernel.asm	/^    f010fb1e:	c9                   	leaveq $/;"	l
f010fb1f	obj/kern/kernel.asm	/^    f010fb1f:	c3                   	retq   $/;"	l
f010fb20	obj/kern/kernel.asm	/^    f010fb20:	55                   	push   %rbp$/;"	l
f010fb21	obj/kern/kernel.asm	/^    f010fb21:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010fb24	obj/kern/kernel.asm	/^    f010fb24:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
f010fb28	obj/kern/kernel.asm	/^    f010fb28:	89 7d fc             	mov    %edi,-0x4(%rbp)$/;"	l
f010fb2b	obj/kern/kernel.asm	/^    f010fb2b:	89 75 f8             	mov    %esi,-0x8(%rbp)$/;"	l
f010fb2e	obj/kern/kernel.asm	/^    f010fb2e:	48 b8 08 90 a6 f1 00 	mov    $0xf1a69008,%rax$/;"	l
f010fb35	obj/kern/kernel.asm	/^    f010fb35:	00 00 00 $/;"	l
f010fb38	obj/kern/kernel.asm	/^    f010fb38:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010fb3b	obj/kern/kernel.asm	/^    f010fb3b:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
f010fb3e	obj/kern/kernel.asm	/^    f010fb3e:	48 63 d2             	movslq %edx,%rdx$/;"	l
f010fb41	obj/kern/kernel.asm	/^    f010fb41:	48 c1 e2 02          	shl    $0x2,%rdx$/;"	l
f010fb45	obj/kern/kernel.asm	/^    f010fb45:	48 8d 14 10          	lea    (%rax,%rdx,1),%rdx$/;"	l
f010fb49	obj/kern/kernel.asm	/^    f010fb49:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
f010fb4c	obj/kern/kernel.asm	/^    f010fb4c:	89 02                	mov    %eax,(%rdx)$/;"	l
f010fb4e	obj/kern/kernel.asm	/^    f010fb4e:	48 b8 08 90 a6 f1 00 	mov    $0xf1a69008,%rax$/;"	l
f010fb55	obj/kern/kernel.asm	/^    f010fb55:	00 00 00 $/;"	l
f010fb58	obj/kern/kernel.asm	/^    f010fb58:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010fb5b	obj/kern/kernel.asm	/^    f010fb5b:	48 83 c0 20          	add    $0x20,%rax$/;"	l
f010fb5f	obj/kern/kernel.asm	/^    f010fb5f:	8b 00                	mov    (%rax),%eax$/;"	l
f010fb61	obj/kern/kernel.asm	/^    f010fb61:	c9                   	leaveq $/;"	l
f010fb62	obj/kern/kernel.asm	/^    f010fb62:	c3                   	retq   $/;"	l
f010fb63	obj/kern/kernel.asm	/^    f010fb63:	55                   	push   %rbp$/;"	l
f010fb64	obj/kern/kernel.asm	/^    f010fb64:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010fb67	obj/kern/kernel.asm	/^    f010fb67:	48 b8 00 90 a6 f1 00 	mov    $0xf1a69000,%rax$/;"	l
f010fb6e	obj/kern/kernel.asm	/^    f010fb6e:	00 00 00 $/;"	l
f010fb71	obj/kern/kernel.asm	/^    f010fb71:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010fb74	obj/kern/kernel.asm	/^    f010fb74:	48 85 c0             	test   %rax,%rax$/;"	l
f010fb77	obj/kern/kernel.asm	/^    f010fb77:	0f 84 e0 01 00 00    	je     fffffffff010fd5d <end+0xfffffffefe66e9bd>$/;"	l
f010fb7d	obj/kern/kernel.asm	/^    f010fb7d:	48 b8 00 90 a6 f1 00 	mov    $0xf1a69000,%rax$/;"	l
f010fb84	obj/kern/kernel.asm	/^    f010fb84:	00 00 00 $/;"	l
f010fb87	obj/kern/kernel.asm	/^    f010fb87:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010fb8a	obj/kern/kernel.asm	/^    f010fb8a:	be 00 10 00 00       	mov    $0x1000,%esi$/;"	l
f010fb8f	obj/kern/kernel.asm	/^    f010fb8f:	48 89 c7             	mov    %rax,%rdi$/;"	l
f010fb92	obj/kern/kernel.asm	/^    f010fb92:	48 b8 61 32 10 f0 00 	mov    $0xf0103261,%rax$/;"	l
f010fb99	obj/kern/kernel.asm	/^    f010fb99:	00 00 00 $/;"	l
f010fb9c	obj/kern/kernel.asm	/^    f010fb9c:	ff d0                	callq  *%rax$/;"	l
f010fb9e	obj/kern/kernel.asm	/^    f010fb9e:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010fba1	obj/kern/kernel.asm	/^    f010fba1:	48 b8 08 90 a6 f1 00 	mov    $0xf1a69008,%rax$/;"	l
f010fba8	obj/kern/kernel.asm	/^    f010fba8:	00 00 00 $/;"	l
f010fbab	obj/kern/kernel.asm	/^    f010fbab:	48 89 10             	mov    %rdx,(%rax)$/;"	l
f010fbae	obj/kern/kernel.asm	/^    f010fbae:	be 27 01 00 00       	mov    $0x127,%esi$/;"	l
f010fbb3	obj/kern/kernel.asm	/^    f010fbb3:	bf 3c 00 00 00       	mov    $0x3c,%edi$/;"	l
f010fbb8	obj/kern/kernel.asm	/^    f010fbb8:	48 b8 20 fb 10 f0 00 	mov    $0xf010fb20,%rax$/;"	l
f010fbbf	obj/kern/kernel.asm	/^    f010fbbf:	00 00 00 $/;"	l
f010fbc2	obj/kern/kernel.asm	/^    f010fbc2:	ff d0                	callq  *%rax$/;"	l
f010fbc4	obj/kern/kernel.asm	/^    f010fbc4:	be 0b 00 00 00       	mov    $0xb,%esi$/;"	l
f010fbc9	obj/kern/kernel.asm	/^    f010fbc9:	bf f8 00 00 00       	mov    $0xf8,%edi$/;"	l
f010fbce	obj/kern/kernel.asm	/^    f010fbce:	48 b8 20 fb 10 f0 00 	mov    $0xf010fb20,%rax$/;"	l
f010fbd5	obj/kern/kernel.asm	/^    f010fbd5:	00 00 00 $/;"	l
f010fbd8	obj/kern/kernel.asm	/^    f010fbd8:	ff d0                	callq  *%rax$/;"	l
f010fbda	obj/kern/kernel.asm	/^    f010fbda:	be 20 00 02 00       	mov    $0x20020,%esi$/;"	l
f010fbdf	obj/kern/kernel.asm	/^    f010fbdf:	bf c8 00 00 00       	mov    $0xc8,%edi$/;"	l
f010fbe4	obj/kern/kernel.asm	/^    f010fbe4:	48 b8 20 fb 10 f0 00 	mov    $0xf010fb20,%rax$/;"	l
f010fbeb	obj/kern/kernel.asm	/^    f010fbeb:	00 00 00 $/;"	l
f010fbee	obj/kern/kernel.asm	/^    f010fbee:	ff d0                	callq  *%rax$/;"	l
f010fbf0	obj/kern/kernel.asm	/^    f010fbf0:	be 80 96 98 00       	mov    $0x989680,%esi$/;"	l
f010fbf5	obj/kern/kernel.asm	/^    f010fbf5:	bf e0 00 00 00       	mov    $0xe0,%edi$/;"	l
f010fbfa	obj/kern/kernel.asm	/^    f010fbfa:	48 b8 20 fb 10 f0 00 	mov    $0xf010fb20,%rax$/;"	l
f010fc01	obj/kern/kernel.asm	/^    f010fc01:	00 00 00 $/;"	l
f010fc04	obj/kern/kernel.asm	/^    f010fc04:	ff d0                	callq  *%rax$/;"	l
f010fc06	obj/kern/kernel.asm	/^    f010fc06:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f010fc0d	obj/kern/kernel.asm	/^    f010fc0d:	00 00 00 $/;"	l
f010fc10	obj/kern/kernel.asm	/^    f010fc10:	ff d0                	callq  *%rax$/;"	l
f010fc12	obj/kern/kernel.asm	/^    f010fc12:	48 98                	cltq   $/;"	l
f010fc14	obj/kern/kernel.asm	/^    f010fc14:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f010fc18	obj/kern/kernel.asm	/^    f010fc18:	48 89 c2             	mov    %rax,%rdx$/;"	l
f010fc1b	obj/kern/kernel.asm	/^    f010fc1b:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f010fc1f	obj/kern/kernel.asm	/^    f010fc1f:	48 29 c2             	sub    %rax,%rdx$/;"	l
f010fc22	obj/kern/kernel.asm	/^    f010fc22:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f010fc29	obj/kern/kernel.asm	/^    f010fc29:	00 00 00 $/;"	l
f010fc2c	obj/kern/kernel.asm	/^    f010fc2c:	48 01 c2             	add    %rax,%rdx$/;"	l
f010fc2f	obj/kern/kernel.asm	/^    f010fc2f:	48 b8 e0 83 a2 f1 00 	mov    $0xf1a283e0,%rax$/;"	l
f010fc36	obj/kern/kernel.asm	/^    f010fc36:	00 00 00 $/;"	l
f010fc39	obj/kern/kernel.asm	/^    f010fc39:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010fc3c	obj/kern/kernel.asm	/^    f010fc3c:	48 39 c2             	cmp    %rax,%rdx$/;"	l
f010fc3f	obj/kern/kernel.asm	/^    f010fc3f:	74 16                	je     fffffffff010fc57 <end+0xfffffffefe66e8b7>$/;"	l
f010fc41	obj/kern/kernel.asm	/^    f010fc41:	be 00 00 01 00       	mov    $0x10000,%esi$/;"	l
f010fc46	obj/kern/kernel.asm	/^    f010fc46:	bf d4 00 00 00       	mov    $0xd4,%edi$/;"	l
f010fc4b	obj/kern/kernel.asm	/^    f010fc4b:	48 b8 20 fb 10 f0 00 	mov    $0xf010fb20,%rax$/;"	l
f010fc52	obj/kern/kernel.asm	/^    f010fc52:	00 00 00 $/;"	l
f010fc55	obj/kern/kernel.asm	/^    f010fc55:	ff d0                	callq  *%rax$/;"	l
f010fc57	obj/kern/kernel.asm	/^    f010fc57:	be 00 00 01 00       	mov    $0x10000,%esi$/;"	l
f010fc5c	obj/kern/kernel.asm	/^    f010fc5c:	bf d8 00 00 00       	mov    $0xd8,%edi$/;"	l
f010fc61	obj/kern/kernel.asm	/^    f010fc61:	48 b8 20 fb 10 f0 00 	mov    $0xf010fb20,%rax$/;"	l
f010fc68	obj/kern/kernel.asm	/^    f010fc68:	00 00 00 $/;"	l
f010fc6b	obj/kern/kernel.asm	/^    f010fc6b:	ff d0                	callq  *%rax$/;"	l
f010fc6d	obj/kern/kernel.asm	/^    f010fc6d:	48 b8 08 90 a6 f1 00 	mov    $0xf1a69008,%rax$/;"	l
f010fc74	obj/kern/kernel.asm	/^    f010fc74:	00 00 00 $/;"	l
f010fc77	obj/kern/kernel.asm	/^    f010fc77:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010fc7a	obj/kern/kernel.asm	/^    f010fc7a:	48 83 c0 30          	add    $0x30,%rax$/;"	l
f010fc7e	obj/kern/kernel.asm	/^    f010fc7e:	8b 00                	mov    (%rax),%eax$/;"	l
f010fc80	obj/kern/kernel.asm	/^    f010fc80:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f010fc83	obj/kern/kernel.asm	/^    f010fc83:	25 ff 00 00 00       	and    $0xff,%eax$/;"	l
f010fc88	obj/kern/kernel.asm	/^    f010fc88:	83 f8 03             	cmp    $0x3,%eax$/;"	l
f010fc8b	obj/kern/kernel.asm	/^    f010fc8b:	76 16                	jbe    fffffffff010fca3 <end+0xfffffffefe66e903>$/;"	l
f010fc8d	obj/kern/kernel.asm	/^    f010fc8d:	be 00 00 01 00       	mov    $0x10000,%esi$/;"	l
f010fc92	obj/kern/kernel.asm	/^    f010fc92:	bf d0 00 00 00       	mov    $0xd0,%edi$/;"	l
f010fc97	obj/kern/kernel.asm	/^    f010fc97:	48 b8 20 fb 10 f0 00 	mov    $0xf010fb20,%rax$/;"	l
f010fc9e	obj/kern/kernel.asm	/^    f010fc9e:	00 00 00 $/;"	l
f010fca1	obj/kern/kernel.asm	/^    f010fca1:	ff d0                	callq  *%rax$/;"	l
f010fca3	obj/kern/kernel.asm	/^    f010fca3:	be 33 00 00 00       	mov    $0x33,%esi$/;"	l
f010fca8	obj/kern/kernel.asm	/^    f010fca8:	bf dc 00 00 00       	mov    $0xdc,%edi$/;"	l
f010fcad	obj/kern/kernel.asm	/^    f010fcad:	48 b8 20 fb 10 f0 00 	mov    $0xf010fb20,%rax$/;"	l
f010fcb4	obj/kern/kernel.asm	/^    f010fcb4:	00 00 00 $/;"	l
f010fcb7	obj/kern/kernel.asm	/^    f010fcb7:	ff d0                	callq  *%rax$/;"	l
f010fcb9	obj/kern/kernel.asm	/^    f010fcb9:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f010fcbe	obj/kern/kernel.asm	/^    f010fcbe:	bf a0 00 00 00       	mov    $0xa0,%edi$/;"	l
f010fcc3	obj/kern/kernel.asm	/^    f010fcc3:	48 b8 20 fb 10 f0 00 	mov    $0xf010fb20,%rax$/;"	l
f010fcca	obj/kern/kernel.asm	/^    f010fcca:	00 00 00 $/;"	l
f010fccd	obj/kern/kernel.asm	/^    f010fccd:	ff d0                	callq  *%rax$/;"	l
f010fccf	obj/kern/kernel.asm	/^    f010fccf:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f010fcd4	obj/kern/kernel.asm	/^    f010fcd4:	bf a0 00 00 00       	mov    $0xa0,%edi$/;"	l
f010fcd9	obj/kern/kernel.asm	/^    f010fcd9:	48 b8 20 fb 10 f0 00 	mov    $0xf010fb20,%rax$/;"	l
f010fce0	obj/kern/kernel.asm	/^    f010fce0:	00 00 00 $/;"	l
f010fce3	obj/kern/kernel.asm	/^    f010fce3:	ff d0                	callq  *%rax$/;"	l
f010fce5	obj/kern/kernel.asm	/^    f010fce5:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f010fcea	obj/kern/kernel.asm	/^    f010fcea:	bf 2c 00 00 00       	mov    $0x2c,%edi$/;"	l
f010fcef	obj/kern/kernel.asm	/^    f010fcef:	48 b8 20 fb 10 f0 00 	mov    $0xf010fb20,%rax$/;"	l
f010fcf6	obj/kern/kernel.asm	/^    f010fcf6:	00 00 00 $/;"	l
f010fcf9	obj/kern/kernel.asm	/^    f010fcf9:	ff d0                	callq  *%rax$/;"	l
f010fcfb	obj/kern/kernel.asm	/^    f010fcfb:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f010fd00	obj/kern/kernel.asm	/^    f010fd00:	bf c4 00 00 00       	mov    $0xc4,%edi$/;"	l
f010fd05	obj/kern/kernel.asm	/^    f010fd05:	48 b8 20 fb 10 f0 00 	mov    $0xf010fb20,%rax$/;"	l
f010fd0c	obj/kern/kernel.asm	/^    f010fd0c:	00 00 00 $/;"	l
f010fd0f	obj/kern/kernel.asm	/^    f010fd0f:	ff d0                	callq  *%rax$/;"	l
f010fd11	obj/kern/kernel.asm	/^    f010fd11:	be 00 85 08 00       	mov    $0x88500,%esi$/;"	l
f010fd16	obj/kern/kernel.asm	/^    f010fd16:	bf c0 00 00 00       	mov    $0xc0,%edi$/;"	l
f010fd1b	obj/kern/kernel.asm	/^    f010fd1b:	48 b8 20 fb 10 f0 00 	mov    $0xf010fb20,%rax$/;"	l
f010fd22	obj/kern/kernel.asm	/^    f010fd22:	00 00 00 $/;"	l
f010fd25	obj/kern/kernel.asm	/^    f010fd25:	ff d0                	callq  *%rax$/;"	l
f010fd27	obj/kern/kernel.asm	/^    f010fd27:	48 b8 08 90 a6 f1 00 	mov    $0xf1a69008,%rax$/;"	l
f010fd2e	obj/kern/kernel.asm	/^    f010fd2e:	00 00 00 $/;"	l
f010fd31	obj/kern/kernel.asm	/^    f010fd31:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010fd34	obj/kern/kernel.asm	/^    f010fd34:	48 05 00 03 00 00    	add    $0x300,%rax$/;"	l
f010fd3a	obj/kern/kernel.asm	/^    f010fd3a:	8b 00                	mov    (%rax),%eax$/;"	l
f010fd3c	obj/kern/kernel.asm	/^    f010fd3c:	25 00 10 00 00       	and    $0x1000,%eax$/;"	l
f010fd41	obj/kern/kernel.asm	/^    f010fd41:	85 c0                	test   %eax,%eax$/;"	l
f010fd43	obj/kern/kernel.asm	/^    f010fd43:	75 e2                	jne    fffffffff010fd27 <end+0xfffffffefe66e987>$/;"	l
f010fd45	obj/kern/kernel.asm	/^    f010fd45:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f010fd4a	obj/kern/kernel.asm	/^    f010fd4a:	bf 20 00 00 00       	mov    $0x20,%edi$/;"	l
f010fd4f	obj/kern/kernel.asm	/^    f010fd4f:	48 b8 20 fb 10 f0 00 	mov    $0xf010fb20,%rax$/;"	l
f010fd56	obj/kern/kernel.asm	/^    f010fd56:	00 00 00 $/;"	l
f010fd59	obj/kern/kernel.asm	/^    f010fd59:	ff d0                	callq  *%rax$/;"	l
f010fd5b	obj/kern/kernel.asm	/^    f010fd5b:	eb 01                	jmp    fffffffff010fd5e <end+0xfffffffefe66e9be>$/;"	l
f010fd5d	obj/kern/kernel.asm	/^    f010fd5d:	90                   	nop$/;"	l
f010fd5e	obj/kern/kernel.asm	/^    f010fd5e:	c9                   	leaveq $/;"	l
f010fd5f	obj/kern/kernel.asm	/^    f010fd5f:	c3                   	retq   $/;"	l
f010fd60	obj/kern/kernel.asm	/^    f010fd60:	55                   	push   %rbp$/;"	l
f010fd61	obj/kern/kernel.asm	/^    f010fd61:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010fd64	obj/kern/kernel.asm	/^    f010fd64:	48 b8 08 90 a6 f1 00 	mov    $0xf1a69008,%rax$/;"	l
f010fd6b	obj/kern/kernel.asm	/^    f010fd6b:	00 00 00 $/;"	l
f010fd6e	obj/kern/kernel.asm	/^    f010fd6e:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010fd71	obj/kern/kernel.asm	/^    f010fd71:	48 85 c0             	test   %rax,%rax$/;"	l
f010fd74	obj/kern/kernel.asm	/^    f010fd74:	74 18                	je     fffffffff010fd8e <end+0xfffffffefe66e9ee>$/;"	l
f010fd76	obj/kern/kernel.asm	/^    f010fd76:	48 b8 08 90 a6 f1 00 	mov    $0xf1a69008,%rax$/;"	l
f010fd7d	obj/kern/kernel.asm	/^    f010fd7d:	00 00 00 $/;"	l
f010fd80	obj/kern/kernel.asm	/^    f010fd80:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010fd83	obj/kern/kernel.asm	/^    f010fd83:	48 83 c0 20          	add    $0x20,%rax$/;"	l
f010fd87	obj/kern/kernel.asm	/^    f010fd87:	8b 00                	mov    (%rax),%eax$/;"	l
f010fd89	obj/kern/kernel.asm	/^    f010fd89:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f010fd8c	obj/kern/kernel.asm	/^    f010fd8c:	eb 05                	jmp    fffffffff010fd93 <end+0xfffffffefe66e9f3>$/;"	l
f010fd8e	obj/kern/kernel.asm	/^    f010fd8e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010fd93	obj/kern/kernel.asm	/^    f010fd93:	c9                   	leaveq $/;"	l
f010fd94	obj/kern/kernel.asm	/^    f010fd94:	c3                   	retq   $/;"	l
f010fd95	obj/kern/kernel.asm	/^    f010fd95:	55                   	push   %rbp$/;"	l
f010fd96	obj/kern/kernel.asm	/^    f010fd96:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010fd99	obj/kern/kernel.asm	/^    f010fd99:	48 b8 08 90 a6 f1 00 	mov    $0xf1a69008,%rax$/;"	l
f010fda0	obj/kern/kernel.asm	/^    f010fda0:	00 00 00 $/;"	l
f010fda3	obj/kern/kernel.asm	/^    f010fda3:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010fda6	obj/kern/kernel.asm	/^    f010fda6:	48 85 c0             	test   %rax,%rax$/;"	l
f010fda9	obj/kern/kernel.asm	/^    f010fda9:	74 16                	je     fffffffff010fdc1 <end+0xfffffffefe66ea21>$/;"	l
f010fdab	obj/kern/kernel.asm	/^    f010fdab:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f010fdb0	obj/kern/kernel.asm	/^    f010fdb0:	bf 2c 00 00 00       	mov    $0x2c,%edi$/;"	l
f010fdb5	obj/kern/kernel.asm	/^    f010fdb5:	48 b8 20 fb 10 f0 00 	mov    $0xf010fb20,%rax$/;"	l
f010fdbc	obj/kern/kernel.asm	/^    f010fdbc:	00 00 00 $/;"	l
f010fdbf	obj/kern/kernel.asm	/^    f010fdbf:	ff d0                	callq  *%rax$/;"	l
f010fdc1	obj/kern/kernel.asm	/^    f010fdc1:	c9                   	leaveq $/;"	l
f010fdc2	obj/kern/kernel.asm	/^    f010fdc2:	c3                   	retq   $/;"	l
f010fdc3	obj/kern/kernel.asm	/^    f010fdc3:	55                   	push   %rbp$/;"	l
f010fdc4	obj/kern/kernel.asm	/^    f010fdc4:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010fdc7	obj/kern/kernel.asm	/^    f010fdc7:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
f010fdcb	obj/kern/kernel.asm	/^    f010fdcb:	89 7d fc             	mov    %edi,-0x4(%rbp)$/;"	l
f010fdce	obj/kern/kernel.asm	/^    f010fdce:	c9                   	leaveq $/;"	l
f010fdcf	obj/kern/kernel.asm	/^    f010fdcf:	c3                   	retq   $/;"	l
f010fdd0	obj/kern/kernel.asm	/^    f010fdd0:	55                   	push   %rbp$/;"	l
f010fdd1	obj/kern/kernel.asm	/^    f010fdd1:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010fdd4	obj/kern/kernel.asm	/^    f010fdd4:	53                   	push   %rbx$/;"	l
f010fdd5	obj/kern/kernel.asm	/^    f010fdd5:	48 83 ec 48          	sub    $0x48,%rsp$/;"	l
f010fdd9	obj/kern/kernel.asm	/^    f010fdd9:	89 f8                	mov    %edi,%eax$/;"	l
f010fddb	obj/kern/kernel.asm	/^    f010fddb:	89 75 b8             	mov    %esi,-0x48(%rbp)$/;"	l
f010fdde	obj/kern/kernel.asm	/^    f010fdde:	88 45 bc             	mov    %al,-0x44(%rbp)$/;"	l
f010fde1	obj/kern/kernel.asm	/^    f010fde1:	c7 45 e4 70 00 00 00 	movl   $0x70,-0x1c(%rbp)$/;"	l
f010fde8	obj/kern/kernel.asm	/^    f010fde8:	c6 45 e3 0f          	movb   $0xf,-0x1d(%rbp)$/;"	l
f010fdec	obj/kern/kernel.asm	/^    f010fdec:	0f b6 45 e3          	movzbl -0x1d(%rbp),%eax$/;"	l
f010fdf0	obj/kern/kernel.asm	/^    f010fdf0:	8b 55 e4             	mov    -0x1c(%rbp),%edx$/;"	l
f010fdf3	obj/kern/kernel.asm	/^    f010fdf3:	ee                   	out    %al,(%dx)$/;"	l
f010fdf4	obj/kern/kernel.asm	/^    f010fdf4:	c7 45 ec 71 00 00 00 	movl   $0x71,-0x14(%rbp)$/;"	l
f010fdfb	obj/kern/kernel.asm	/^    f010fdfb:	c6 45 eb 0a          	movb   $0xa,-0x15(%rbp)$/;"	l
f010fdff	obj/kern/kernel.asm	/^    f010fdff:	0f b6 45 eb          	movzbl -0x15(%rbp),%eax$/;"	l
f010fe03	obj/kern/kernel.asm	/^    f010fe03:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
f010fe06	obj/kern/kernel.asm	/^    f010fe06:	ee                   	out    %al,(%dx)$/;"	l
f010fe07	obj/kern/kernel.asm	/^    f010fe07:	48 c7 45 d0 67 04 00 	movq   $0x467,-0x30(%rbp)$/;"	l
f010fe0e	obj/kern/kernel.asm	/^    f010fe0e:	00 $/;"	l
f010fe0f	obj/kern/kernel.asm	/^    f010fe0f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f010fe13	obj/kern/kernel.asm	/^    f010fe13:	48 c1 e8 0c          	shr    $0xc,%rax$/;"	l
f010fe17	obj/kern/kernel.asm	/^    f010fe17:	89 45 dc             	mov    %eax,-0x24(%rbp)$/;"	l
f010fe1a	obj/kern/kernel.asm	/^    f010fe1a:	8b 55 dc             	mov    -0x24(%rbp),%edx$/;"	l
f010fe1d	obj/kern/kernel.asm	/^    f010fe1d:	48 b8 68 77 a2 f1 00 	mov    $0xf1a27768,%rax$/;"	l
f010fe24	obj/kern/kernel.asm	/^    f010fe24:	00 00 00 $/;"	l
f010fe27	obj/kern/kernel.asm	/^    f010fe27:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010fe2a	obj/kern/kernel.asm	/^    f010fe2a:	48 39 c2             	cmp    %rax,%rdx$/;"	l
f010fe2d	obj/kern/kernel.asm	/^    f010fe2d:	72 31                	jb     fffffffff010fe60 <end+0xfffffffefe66eac0>$/;"	l
f010fe2f	obj/kern/kernel.asm	/^    f010fe2f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f010fe33	obj/kern/kernel.asm	/^    f010fe33:	48 89 c1             	mov    %rax,%rcx$/;"	l
f010fe36	obj/kern/kernel.asm	/^    f010fe36:	48 ba 48 36 11 f0 00 	mov    $0xf0113648,%rdx$/;"	l
f010fe3d	obj/kern/kernel.asm	/^    f010fe3d:	00 00 00 $/;"	l
f010fe40	obj/kern/kernel.asm	/^    f010fe40:	be 98 00 00 00       	mov    $0x98,%esi$/;"	l
f010fe45	obj/kern/kernel.asm	/^    f010fe45:	48 bf 6b 36 11 f0 00 	mov    $0xf011366b,%rdi$/;"	l
f010fe4c	obj/kern/kernel.asm	/^    f010fe4c:	00 00 00 $/;"	l
f010fe4f	obj/kern/kernel.asm	/^    f010fe4f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f010fe54	obj/kern/kernel.asm	/^    f010fe54:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f010fe5b	obj/kern/kernel.asm	/^    f010fe5b:	00 00 00 $/;"	l
f010fe5e	obj/kern/kernel.asm	/^    f010fe5e:	ff d3                	callq  *%rbx$/;"	l
f010fe60	obj/kern/kernel.asm	/^    f010fe60:	b8 00 00 00 f0       	mov    $0xf0000000,%eax$/;"	l
f010fe65	obj/kern/kernel.asm	/^    f010fe65:	48 03 45 d0          	add    -0x30(%rbp),%rax$/;"	l
f010fe69	obj/kern/kernel.asm	/^    f010fe69:	48 89 45 c8          	mov    %rax,-0x38(%rbp)$/;"	l
f010fe6d	obj/kern/kernel.asm	/^    f010fe6d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f010fe71	obj/kern/kernel.asm	/^    f010fe71:	66 c7 00 00 00       	movw   $0x0,(%rax)$/;"	l
f010fe76	obj/kern/kernel.asm	/^    f010fe76:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f010fe7a	obj/kern/kernel.asm	/^    f010fe7a:	48 8d 50 02          	lea    0x2(%rax),%rdx$/;"	l
f010fe7e	obj/kern/kernel.asm	/^    f010fe7e:	8b 45 b8             	mov    -0x48(%rbp),%eax$/;"	l
f010fe81	obj/kern/kernel.asm	/^    f010fe81:	c1 e8 04             	shr    $0x4,%eax$/;"	l
f010fe84	obj/kern/kernel.asm	/^    f010fe84:	66 89 02             	mov    %ax,(%rdx)$/;"	l
f010fe87	obj/kern/kernel.asm	/^    f010fe87:	0f b6 45 bc          	movzbl -0x44(%rbp),%eax$/;"	l
f010fe8b	obj/kern/kernel.asm	/^    f010fe8b:	c1 e0 18             	shl    $0x18,%eax$/;"	l
f010fe8e	obj/kern/kernel.asm	/^    f010fe8e:	89 c6                	mov    %eax,%esi$/;"	l
f010fe90	obj/kern/kernel.asm	/^    f010fe90:	bf c4 00 00 00       	mov    $0xc4,%edi$/;"	l
f010fe95	obj/kern/kernel.asm	/^    f010fe95:	48 b8 20 fb 10 f0 00 	mov    $0xf010fb20,%rax$/;"	l
f010fe9c	obj/kern/kernel.asm	/^    f010fe9c:	00 00 00 $/;"	l
f010fe9f	obj/kern/kernel.asm	/^    f010fe9f:	ff d0                	callq  *%rax$/;"	l
f010fea1	obj/kern/kernel.asm	/^    f010fea1:	be 00 c5 00 00       	mov    $0xc500,%esi$/;"	l
f010fea6	obj/kern/kernel.asm	/^    f010fea6:	bf c0 00 00 00       	mov    $0xc0,%edi$/;"	l
f010feab	obj/kern/kernel.asm	/^    f010feab:	48 b8 20 fb 10 f0 00 	mov    $0xf010fb20,%rax$/;"	l
f010feb2	obj/kern/kernel.asm	/^    f010feb2:	00 00 00 $/;"	l
f010feb5	obj/kern/kernel.asm	/^    f010feb5:	ff d0                	callq  *%rax$/;"	l
f010feb7	obj/kern/kernel.asm	/^    f010feb7:	bf c8 00 00 00       	mov    $0xc8,%edi$/;"	l
f010febc	obj/kern/kernel.asm	/^    f010febc:	48 b8 c3 fd 10 f0 00 	mov    $0xf010fdc3,%rax$/;"	l
f010fec3	obj/kern/kernel.asm	/^    f010fec3:	00 00 00 $/;"	l
f010fec6	obj/kern/kernel.asm	/^    f010fec6:	ff d0                	callq  *%rax$/;"	l
f010fec8	obj/kern/kernel.asm	/^    f010fec8:	be 00 85 00 00       	mov    $0x8500,%esi$/;"	l
f010fecd	obj/kern/kernel.asm	/^    f010fecd:	bf c0 00 00 00       	mov    $0xc0,%edi$/;"	l
f010fed2	obj/kern/kernel.asm	/^    f010fed2:	48 b8 20 fb 10 f0 00 	mov    $0xf010fb20,%rax$/;"	l
f010fed9	obj/kern/kernel.asm	/^    f010fed9:	00 00 00 $/;"	l
f010fedc	obj/kern/kernel.asm	/^    f010fedc:	ff d0                	callq  *%rax$/;"	l
f010fede	obj/kern/kernel.asm	/^    f010fede:	bf 64 00 00 00       	mov    $0x64,%edi$/;"	l
f010fee3	obj/kern/kernel.asm	/^    f010fee3:	48 b8 c3 fd 10 f0 00 	mov    $0xf010fdc3,%rax$/;"	l
f010feea	obj/kern/kernel.asm	/^    f010feea:	00 00 00 $/;"	l
f010feed	obj/kern/kernel.asm	/^    f010feed:	ff d0                	callq  *%rax$/;"	l
f010feef	obj/kern/kernel.asm	/^    f010feef:	c7 45 c4 00 00 00 00 	movl   $0x0,-0x3c(%rbp)$/;"	l
f010fef6	obj/kern/kernel.asm	/^    f010fef6:	eb 4b                	jmp    fffffffff010ff43 <end+0xfffffffefe66eba3>$/;"	l
f010fef8	obj/kern/kernel.asm	/^    f010fef8:	0f b6 45 bc          	movzbl -0x44(%rbp),%eax$/;"	l
f010fefc	obj/kern/kernel.asm	/^    f010fefc:	c1 e0 18             	shl    $0x18,%eax$/;"	l
f010feff	obj/kern/kernel.asm	/^    f010feff:	89 c6                	mov    %eax,%esi$/;"	l
f010ff01	obj/kern/kernel.asm	/^    f010ff01:	bf c4 00 00 00       	mov    $0xc4,%edi$/;"	l
f010ff06	obj/kern/kernel.asm	/^    f010ff06:	48 b8 20 fb 10 f0 00 	mov    $0xf010fb20,%rax$/;"	l
f010ff0d	obj/kern/kernel.asm	/^    f010ff0d:	00 00 00 $/;"	l
f010ff10	obj/kern/kernel.asm	/^    f010ff10:	ff d0                	callq  *%rax$/;"	l
f010ff12	obj/kern/kernel.asm	/^    f010ff12:	8b 45 b8             	mov    -0x48(%rbp),%eax$/;"	l
f010ff15	obj/kern/kernel.asm	/^    f010ff15:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
f010ff18	obj/kern/kernel.asm	/^    f010ff18:	80 cc 06             	or     $0x6,%ah$/;"	l
f010ff1b	obj/kern/kernel.asm	/^    f010ff1b:	89 c6                	mov    %eax,%esi$/;"	l
f010ff1d	obj/kern/kernel.asm	/^    f010ff1d:	bf c0 00 00 00       	mov    $0xc0,%edi$/;"	l
f010ff22	obj/kern/kernel.asm	/^    f010ff22:	48 b8 20 fb 10 f0 00 	mov    $0xf010fb20,%rax$/;"	l
f010ff29	obj/kern/kernel.asm	/^    f010ff29:	00 00 00 $/;"	l
f010ff2c	obj/kern/kernel.asm	/^    f010ff2c:	ff d0                	callq  *%rax$/;"	l
f010ff2e	obj/kern/kernel.asm	/^    f010ff2e:	bf c8 00 00 00       	mov    $0xc8,%edi$/;"	l
f010ff33	obj/kern/kernel.asm	/^    f010ff33:	48 b8 c3 fd 10 f0 00 	mov    $0xf010fdc3,%rax$/;"	l
f010ff3a	obj/kern/kernel.asm	/^    f010ff3a:	00 00 00 $/;"	l
f010ff3d	obj/kern/kernel.asm	/^    f010ff3d:	ff d0                	callq  *%rax$/;"	l
f010ff3f	obj/kern/kernel.asm	/^    f010ff3f:	83 45 c4 01          	addl   $0x1,-0x3c(%rbp)$/;"	l
f010ff43	obj/kern/kernel.asm	/^    f010ff43:	83 7d c4 01          	cmpl   $0x1,-0x3c(%rbp)$/;"	l
f010ff47	obj/kern/kernel.asm	/^    f010ff47:	7e af                	jle    fffffffff010fef8 <end+0xfffffffefe66eb58>$/;"	l
f010ff49	obj/kern/kernel.asm	/^    f010ff49:	48 83 c4 48          	add    $0x48,%rsp$/;"	l
f010ff4d	obj/kern/kernel.asm	/^    f010ff4d:	5b                   	pop    %rbx$/;"	l
f010ff4e	obj/kern/kernel.asm	/^    f010ff4e:	c9                   	leaveq $/;"	l
f010ff4f	obj/kern/kernel.asm	/^    f010ff4f:	c3                   	retq   $/;"	l
f010ff50	obj/kern/kernel.asm	/^    f010ff50:	55                   	push   %rbp$/;"	l
f010ff51	obj/kern/kernel.asm	/^    f010ff51:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010ff54	obj/kern/kernel.asm	/^    f010ff54:	48 83 ec 08          	sub    $0x8,%rsp$/;"	l
f010ff58	obj/kern/kernel.asm	/^    f010ff58:	89 7d fc             	mov    %edi,-0x4(%rbp)$/;"	l
f010ff5b	obj/kern/kernel.asm	/^    f010ff5b:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
f010ff5e	obj/kern/kernel.asm	/^    f010ff5e:	0d 00 00 0c 00       	or     $0xc0000,%eax$/;"	l
f010ff63	obj/kern/kernel.asm	/^    f010ff63:	89 c6                	mov    %eax,%esi$/;"	l
f010ff65	obj/kern/kernel.asm	/^    f010ff65:	bf c0 00 00 00       	mov    $0xc0,%edi$/;"	l
f010ff6a	obj/kern/kernel.asm	/^    f010ff6a:	48 b8 20 fb 10 f0 00 	mov    $0xf010fb20,%rax$/;"	l
f010ff71	obj/kern/kernel.asm	/^    f010ff71:	00 00 00 $/;"	l
f010ff74	obj/kern/kernel.asm	/^    f010ff74:	ff d0                	callq  *%rax$/;"	l
f010ff76	obj/kern/kernel.asm	/^    f010ff76:	48 b8 08 90 a6 f1 00 	mov    $0xf1a69008,%rax$/;"	l
f010ff7d	obj/kern/kernel.asm	/^    f010ff7d:	00 00 00 $/;"	l
f010ff80	obj/kern/kernel.asm	/^    f010ff80:	48 8b 00             	mov    (%rax),%rax$/;"	l
f010ff83	obj/kern/kernel.asm	/^    f010ff83:	48 05 00 03 00 00    	add    $0x300,%rax$/;"	l
f010ff89	obj/kern/kernel.asm	/^    f010ff89:	8b 00                	mov    (%rax),%eax$/;"	l
f010ff8b	obj/kern/kernel.asm	/^    f010ff8b:	25 00 10 00 00       	and    $0x1000,%eax$/;"	l
f010ff90	obj/kern/kernel.asm	/^    f010ff90:	85 c0                	test   %eax,%eax$/;"	l
f010ff92	obj/kern/kernel.asm	/^    f010ff92:	75 e2                	jne    fffffffff010ff76 <end+0xfffffffefe66ebd6>$/;"	l
f010ff94	obj/kern/kernel.asm	/^    f010ff94:	c9                   	leaveq $/;"	l
f010ff95	obj/kern/kernel.asm	/^    f010ff95:	c3                   	retq   $/;"	l
f010ff98	obj/kern/kernel.asm	/^    f010ff98:	55                   	push   %rbp$/;"	l
f010ff99	obj/kern/kernel.asm	/^    f010ff99:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010ff9c	obj/kern/kernel.asm	/^    f010ff9c:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
f010ffa0	obj/kern/kernel.asm	/^    f010ffa0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
f010ffa4	obj/kern/kernel.asm	/^    f010ffa4:	89 75 e4             	mov    %esi,-0x1c(%rbp)$/;"	l
f010ffa7	obj/kern/kernel.asm	/^    f010ffa7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
f010ffab	obj/kern/kernel.asm	/^    f010ffab:	8b 45 e4             	mov    -0x1c(%rbp),%eax$/;"	l
f010ffae	obj/kern/kernel.asm	/^    f010ffae:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx$/;"	l
f010ffb2	obj/kern/kernel.asm	/^    f010ffb2:	f0 87 02             	lock xchg %eax,(%rdx)$/;"	l
f010ffb5	obj/kern/kernel.asm	/^    f010ffb5:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
f010ffb8	obj/kern/kernel.asm	/^    f010ffb8:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
f010ffbb	obj/kern/kernel.asm	/^    f010ffbb:	c9                   	leaveq $/;"	l
f010ffbc	obj/kern/kernel.asm	/^    f010ffbc:	c3                   	retq   $/;"	l
f010ffbd	obj/kern/kernel.asm	/^    f010ffbd:	55                   	push   %rbp$/;"	l
f010ffbe	obj/kern/kernel.asm	/^    f010ffbe:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f010ffc1	obj/kern/kernel.asm	/^    f010ffc1:	48 83 ec 28          	sub    $0x28,%rsp$/;"	l
f010ffc5	obj/kern/kernel.asm	/^    f010ffc5:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)$/;"	l
f010ffc9	obj/kern/kernel.asm	/^    f010ffc9:	48 89 e8             	mov    %rbp,%rax$/;"	l
f010ffcc	obj/kern/kernel.asm	/^    f010ffcc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)$/;"	l
f010ffd0	obj/kern/kernel.asm	/^    f010ffd0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f010ffd4	obj/kern/kernel.asm	/^    f010ffd4:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
f010ffd8	obj/kern/kernel.asm	/^    f010ffd8:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)$/;"	l
f010ffdf	obj/kern/kernel.asm	/^    f010ffdf:	eb 3c                	jmp    fffffffff011001d <end+0xfffffffefe66ec7d>$/;"	l
f010ffe1	obj/kern/kernel.asm	/^    f010ffe1:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)$/;"	l
f010ffe6	obj/kern/kernel.asm	/^    f010ffe6:	74 55                	je     fffffffff011003d <end+0xfffffffefe66ec9d>$/;"	l
f010ffe8	obj/kern/kernel.asm	/^    f010ffe8:	b8 ff ff bf ef       	mov    $0xefbfffff,%eax$/;"	l
f010ffed	obj/kern/kernel.asm	/^    f010ffed:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)$/;"	l
f010fff1	obj/kern/kernel.asm	/^    f010fff1:	76 4a                	jbe    fffffffff011003d <end+0xfffffffefe66ec9d>$/;"	l
f010fff3	obj/kern/kernel.asm	/^    f010fff3:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
f010fff6	obj/kern/kernel.asm	/^    f010fff6:	48 98                	cltq   $/;"	l
f010fff8	obj/kern/kernel.asm	/^    f010fff8:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f010fffc	obj/kern/kernel.asm	/^    f010fffc:	48 03 45 d8          	add    -0x28(%rbp),%rax$/;"	l
f0110000	obj/kern/kernel.asm	/^    f0110000:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx$/;"	l
f0110004	obj/kern/kernel.asm	/^    f0110004:	48 83 c2 08          	add    $0x8,%rdx$/;"	l
f0110008	obj/kern/kernel.asm	/^    f0110008:	48 8b 12             	mov    (%rdx),%rdx$/;"	l
f011000b	obj/kern/kernel.asm	/^    f011000b:	48 89 10             	mov    %rdx,(%rax)$/;"	l
f011000e	obj/kern/kernel.asm	/^    f011000e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f0110012	obj/kern/kernel.asm	/^    f0110012:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0110015	obj/kern/kernel.asm	/^    f0110015:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
f0110019	obj/kern/kernel.asm	/^    f0110019:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)$/;"	l
f011001d	obj/kern/kernel.asm	/^    f011001d:	83 7d f4 09          	cmpl   $0x9,-0xc(%rbp)$/;"	l
f0110021	obj/kern/kernel.asm	/^    f0110021:	7e be                	jle    fffffffff010ffe1 <end+0xfffffffefe66ec41>$/;"	l
f0110023	obj/kern/kernel.asm	/^    f0110023:	eb 18                	jmp    fffffffff011003d <end+0xfffffffefe66ec9d>$/;"	l
f0110025	obj/kern/kernel.asm	/^    f0110025:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
f0110028	obj/kern/kernel.asm	/^    f0110028:	48 98                	cltq   $/;"	l
f011002a	obj/kern/kernel.asm	/^    f011002a:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f011002e	obj/kern/kernel.asm	/^    f011002e:	48 03 45 d8          	add    -0x28(%rbp),%rax$/;"	l
f0110032	obj/kern/kernel.asm	/^    f0110032:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)$/;"	l
f0110039	obj/kern/kernel.asm	/^    f0110039:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)$/;"	l
f011003d	obj/kern/kernel.asm	/^    f011003d:	83 7d f4 09          	cmpl   $0x9,-0xc(%rbp)$/;"	l
f0110041	obj/kern/kernel.asm	/^    f0110041:	7e e2                	jle    fffffffff0110025 <end+0xfffffffefe66ec85>$/;"	l
f0110043	obj/kern/kernel.asm	/^    f0110043:	c9                   	leaveq $/;"	l
f0110044	obj/kern/kernel.asm	/^    f0110044:	c3                   	retq   $/;"	l
f0110045	obj/kern/kernel.asm	/^    f0110045:	55                   	push   %rbp$/;"	l
f0110046	obj/kern/kernel.asm	/^    f0110046:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f0110049	obj/kern/kernel.asm	/^    f0110049:	53                   	push   %rbx$/;"	l
f011004a	obj/kern/kernel.asm	/^    f011004a:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
f011004e	obj/kern/kernel.asm	/^    f011004e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
f0110052	obj/kern/kernel.asm	/^    f0110052:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f0110056	obj/kern/kernel.asm	/^    f0110056:	8b 00                	mov    (%rax),%eax$/;"	l
f0110058	obj/kern/kernel.asm	/^    f0110058:	85 c0                	test   %eax,%eax$/;"	l
f011005a	obj/kern/kernel.asm	/^    f011005a:	74 3e                	je     fffffffff011009a <end+0xfffffffefe66ecfa>$/;"	l
f011005c	obj/kern/kernel.asm	/^    f011005c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f0110060	obj/kern/kernel.asm	/^    f0110060:	48 8b 58 10          	mov    0x10(%rax),%rbx$/;"	l
f0110064	obj/kern/kernel.asm	/^    f0110064:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f011006b	obj/kern/kernel.asm	/^    f011006b:	00 00 00 $/;"	l
f011006e	obj/kern/kernel.asm	/^    f011006e:	ff d0                	callq  *%rax$/;"	l
f0110070	obj/kern/kernel.asm	/^    f0110070:	48 98                	cltq   $/;"	l
f0110072	obj/kern/kernel.asm	/^    f0110072:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f0110076	obj/kern/kernel.asm	/^    f0110076:	48 89 c2             	mov    %rax,%rdx$/;"	l
f0110079	obj/kern/kernel.asm	/^    f0110079:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f011007d	obj/kern/kernel.asm	/^    f011007d:	48 29 c2             	sub    %rax,%rdx$/;"	l
f0110080	obj/kern/kernel.asm	/^    f0110080:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f0110087	obj/kern/kernel.asm	/^    f0110087:	00 00 00 $/;"	l
f011008a	obj/kern/kernel.asm	/^    f011008a:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f011008e	obj/kern/kernel.asm	/^    f011008e:	48 39 c3             	cmp    %rax,%rbx$/;"	l
f0110091	obj/kern/kernel.asm	/^    f0110091:	75 07                	jne    fffffffff011009a <end+0xfffffffefe66ecfa>$/;"	l
f0110093	obj/kern/kernel.asm	/^    f0110093:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0110098	obj/kern/kernel.asm	/^    f0110098:	eb 05                	jmp    fffffffff011009f <end+0xfffffffefe66ecff>$/;"	l
f011009a	obj/kern/kernel.asm	/^    f011009a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f011009f	obj/kern/kernel.asm	/^    f011009f:	48 83 c4 18          	add    $0x18,%rsp$/;"	l
f01100a3	obj/kern/kernel.asm	/^    f01100a3:	5b                   	pop    %rbx$/;"	l
f01100a4	obj/kern/kernel.asm	/^    f01100a4:	c9                   	leaveq $/;"	l
f01100a5	obj/kern/kernel.asm	/^    f01100a5:	c3                   	retq   $/;"	l
f01100a6	obj/kern/kernel.asm	/^    f01100a6:	55                   	push   %rbp$/;"	l
f01100a7	obj/kern/kernel.asm	/^    f01100a7:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f01100aa	obj/kern/kernel.asm	/^    f01100aa:	48 83 ec 10          	sub    $0x10,%rsp$/;"	l
f01100ae	obj/kern/kernel.asm	/^    f01100ae:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)$/;"	l
f01100b2	obj/kern/kernel.asm	/^    f01100b2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)$/;"	l
f01100b6	obj/kern/kernel.asm	/^    f01100b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f01100ba	obj/kern/kernel.asm	/^    f01100ba:	c7 00 00 00 00 00    	movl   $0x0,(%rax)$/;"	l
f01100c0	obj/kern/kernel.asm	/^    f01100c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f01100c4	obj/kern/kernel.asm	/^    f01100c4:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx$/;"	l
f01100c8	obj/kern/kernel.asm	/^    f01100c8:	48 89 50 08          	mov    %rdx,0x8(%rax)$/;"	l
f01100cc	obj/kern/kernel.asm	/^    f01100cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax$/;"	l
f01100d0	obj/kern/kernel.asm	/^    f01100d0:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)$/;"	l
f01100d7	obj/kern/kernel.asm	/^    f01100d7:	00 $/;"	l
f01100d8	obj/kern/kernel.asm	/^    f01100d8:	c9                   	leaveq $/;"	l
f01100d9	obj/kern/kernel.asm	/^    f01100d9:	c3                   	retq   $/;"	l
f01100da	obj/kern/kernel.asm	/^    f01100da:	55                   	push   %rbp$/;"	l
f01100db	obj/kern/kernel.asm	/^    f01100db:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f01100de	obj/kern/kernel.asm	/^    f01100de:	53                   	push   %rbx$/;"	l
f01100df	obj/kern/kernel.asm	/^    f01100df:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
f01100e3	obj/kern/kernel.asm	/^    f01100e3:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
f01100e7	obj/kern/kernel.asm	/^    f01100e7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f01100eb	obj/kern/kernel.asm	/^    f01100eb:	48 89 c7             	mov    %rax,%rdi$/;"	l
f01100ee	obj/kern/kernel.asm	/^    f01100ee:	48 b8 45 00 11 f0 00 	mov    $0xf0110045,%rax$/;"	l
f01100f5	obj/kern/kernel.asm	/^    f01100f5:	00 00 00 $/;"	l
f01100f8	obj/kern/kernel.asm	/^    f01100f8:	ff d0                	callq  *%rax$/;"	l
f01100fa	obj/kern/kernel.asm	/^    f01100fa:	85 c0                	test   %eax,%eax$/;"	l
f01100fc	obj/kern/kernel.asm	/^    f01100fc:	74 47                	je     fffffffff0110145 <end+0xfffffffefe66eda5>$/;"	l
f01100fe	obj/kern/kernel.asm	/^    f01100fe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f0110102	obj/kern/kernel.asm	/^    f0110102:	48 8b 58 08          	mov    0x8(%rax),%rbx$/;"	l
f0110106	obj/kern/kernel.asm	/^    f0110106:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f011010d	obj/kern/kernel.asm	/^    f011010d:	00 00 00 $/;"	l
f0110110	obj/kern/kernel.asm	/^    f0110110:	ff d0                	callq  *%rax$/;"	l
f0110112	obj/kern/kernel.asm	/^    f0110112:	49 89 d8             	mov    %rbx,%r8$/;"	l
f0110115	obj/kern/kernel.asm	/^    f0110115:	89 c1                	mov    %eax,%ecx$/;"	l
f0110117	obj/kern/kernel.asm	/^    f0110117:	48 ba 88 36 11 f0 00 	mov    $0xf0113688,%rdx$/;"	l
f011011e	obj/kern/kernel.asm	/^    f011011e:	00 00 00 $/;"	l
f0110121	obj/kern/kernel.asm	/^    f0110121:	be 41 00 00 00       	mov    $0x41,%esi$/;"	l
f0110126	obj/kern/kernel.asm	/^    f0110126:	48 bf b2 36 11 f0 00 	mov    $0xf01136b2,%rdi$/;"	l
f011012d	obj/kern/kernel.asm	/^    f011012d:	00 00 00 $/;"	l
f0110130	obj/kern/kernel.asm	/^    f0110130:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0110135	obj/kern/kernel.asm	/^    f0110135:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f011013c	obj/kern/kernel.asm	/^    f011013c:	00 00 00 $/;"	l
f011013f	obj/kern/kernel.asm	/^    f011013f:	ff d3                	callq  *%rbx$/;"	l
f0110141	obj/kern/kernel.asm	/^    f0110141:	f3 90                	pause  $/;"	l
f0110143	obj/kern/kernel.asm	/^    f0110143:	eb 01                	jmp    fffffffff0110146 <end+0xfffffffefe66eda6>$/;"	l
f0110145	obj/kern/kernel.asm	/^    f0110145:	90                   	nop$/;"	l
f0110146	obj/kern/kernel.asm	/^    f0110146:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f011014a	obj/kern/kernel.asm	/^    f011014a:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
f011014f	obj/kern/kernel.asm	/^    f011014f:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0110152	obj/kern/kernel.asm	/^    f0110152:	48 b8 98 ff 10 f0 00 	mov    $0xf010ff98,%rax$/;"	l
f0110159	obj/kern/kernel.asm	/^    f0110159:	00 00 00 $/;"	l
f011015c	obj/kern/kernel.asm	/^    f011015c:	ff d0                	callq  *%rax$/;"	l
f011015e	obj/kern/kernel.asm	/^    f011015e:	85 c0                	test   %eax,%eax$/;"	l
f0110160	obj/kern/kernel.asm	/^    f0110160:	75 df                	jne    fffffffff0110141 <end+0xfffffffefe66eda1>$/;"	l
f0110162	obj/kern/kernel.asm	/^    f0110162:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f0110169	obj/kern/kernel.asm	/^    f0110169:	00 00 00 $/;"	l
f011016c	obj/kern/kernel.asm	/^    f011016c:	ff d0                	callq  *%rax$/;"	l
f011016e	obj/kern/kernel.asm	/^    f011016e:	48 98                	cltq   $/;"	l
f0110170	obj/kern/kernel.asm	/^    f0110170:	48 c1 e0 03          	shl    $0x3,%rax$/;"	l
f0110174	obj/kern/kernel.asm	/^    f0110174:	48 89 c2             	mov    %rax,%rdx$/;"	l
f0110177	obj/kern/kernel.asm	/^    f0110177:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f011017b	obj/kern/kernel.asm	/^    f011017b:	48 29 c2             	sub    %rax,%rdx$/;"	l
f011017e	obj/kern/kernel.asm	/^    f011017e:	48 b8 20 80 a2 f1 00 	mov    $0xf1a28020,%rax$/;"	l
f0110185	obj/kern/kernel.asm	/^    f0110185:	00 00 00 $/;"	l
f0110188	obj/kern/kernel.asm	/^    f0110188:	48 01 c2             	add    %rax,%rdx$/;"	l
f011018b	obj/kern/kernel.asm	/^    f011018b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f011018f	obj/kern/kernel.asm	/^    f011018f:	48 89 50 10          	mov    %rdx,0x10(%rax)$/;"	l
f0110193	obj/kern/kernel.asm	/^    f0110193:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f0110197	obj/kern/kernel.asm	/^    f0110197:	48 83 c0 18          	add    $0x18,%rax$/;"	l
f011019b	obj/kern/kernel.asm	/^    f011019b:	48 89 c7             	mov    %rax,%rdi$/;"	l
f011019e	obj/kern/kernel.asm	/^    f011019e:	48 b8 bd ff 10 f0 00 	mov    $0xf010ffbd,%rax$/;"	l
f01101a5	obj/kern/kernel.asm	/^    f01101a5:	00 00 00 $/;"	l
f01101a8	obj/kern/kernel.asm	/^    f01101a8:	ff d0                	callq  *%rax$/;"	l
f01101aa	obj/kern/kernel.asm	/^    f01101aa:	48 83 c4 18          	add    $0x18,%rsp$/;"	l
f01101ae	obj/kern/kernel.asm	/^    f01101ae:	5b                   	pop    %rbx$/;"	l
f01101af	obj/kern/kernel.asm	/^    f01101af:	c9                   	leaveq $/;"	l
f01101b0	obj/kern/kernel.asm	/^    f01101b0:	c3                   	retq   $/;"	l
f01101b1	obj/kern/kernel.asm	/^    f01101b1:	55                   	push   %rbp$/;"	l
f01101b2	obj/kern/kernel.asm	/^    f01101b2:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f01101b5	obj/kern/kernel.asm	/^    f01101b5:	41 54                	push   %r12$/;"	l
f01101b7	obj/kern/kernel.asm	/^    f01101b7:	53                   	push   %rbx$/;"	l
f01101b8	obj/kern/kernel.asm	/^    f01101b8:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp$/;"	l
f01101bc	obj/kern/kernel.asm	/^    f01101bc:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)$/;"	l
f01101c0	obj/kern/kernel.asm	/^    f01101c0:	48 8b 45 88          	mov    -0x78(%rbp),%rax$/;"	l
f01101c4	obj/kern/kernel.asm	/^    f01101c4:	48 89 c7             	mov    %rax,%rdi$/;"	l
f01101c7	obj/kern/kernel.asm	/^    f01101c7:	48 b8 45 00 11 f0 00 	mov    $0xf0110045,%rax$/;"	l
f01101ce	obj/kern/kernel.asm	/^    f01101ce:	00 00 00 $/;"	l
f01101d1	obj/kern/kernel.asm	/^    f01101d1:	ff d0                	callq  *%rax$/;"	l
f01101d3	obj/kern/kernel.asm	/^    f01101d3:	85 c0                	test   %eax,%eax$/;"	l
f01101d5	obj/kern/kernel.asm	/^    f01101d5:	0f 85 5a 01 00 00    	jne    fffffffff0110335 <end+0xfffffffefe66ef95>$/;"	l
f01101db	obj/kern/kernel.asm	/^    f01101db:	48 8b 45 88          	mov    -0x78(%rbp),%rax$/;"	l
f01101df	obj/kern/kernel.asm	/^    f01101df:	48 8d 48 18          	lea    0x18(%rax),%rcx$/;"	l
f01101e3	obj/kern/kernel.asm	/^    f01101e3:	48 8d 45 c0          	lea    -0x40(%rbp),%rax$/;"	l
f01101e7	obj/kern/kernel.asm	/^    f01101e7:	ba 28 00 00 00       	mov    $0x28,%edx$/;"	l
f01101ec	obj/kern/kernel.asm	/^    f01101ec:	48 89 ce             	mov    %rcx,%rsi$/;"	l
f01101ef	obj/kern/kernel.asm	/^    f01101ef:	48 89 c7             	mov    %rax,%rdi$/;"	l
f01101f2	obj/kern/kernel.asm	/^    f01101f2:	48 b8 cd ee 10 f0 00 	mov    $0xf010eecd,%rax$/;"	l
f01101f9	obj/kern/kernel.asm	/^    f01101f9:	00 00 00 $/;"	l
f01101fc	obj/kern/kernel.asm	/^    f01101fc:	ff d0                	callq  *%rax$/;"	l
f01101fe	obj/kern/kernel.asm	/^    f01101fe:	48 8b 45 88          	mov    -0x78(%rbp),%rax$/;"	l
f0110202	obj/kern/kernel.asm	/^    f0110202:	48 8b 40 10          	mov    0x10(%rax),%rax$/;"	l
f0110206	obj/kern/kernel.asm	/^    f0110206:	0f b6 00             	movzbl (%rax),%eax$/;"	l
f0110209	obj/kern/kernel.asm	/^    f0110209:	44 0f b6 e0          	movzbl %al,%r12d$/;"	l
f011020d	obj/kern/kernel.asm	/^    f011020d:	48 8b 45 88          	mov    -0x78(%rbp),%rax$/;"	l
f0110211	obj/kern/kernel.asm	/^    f0110211:	48 8b 58 08          	mov    0x8(%rax),%rbx$/;"	l
f0110215	obj/kern/kernel.asm	/^    f0110215:	48 b8 60 fd 10 f0 00 	mov    $0xf010fd60,%rax$/;"	l
f011021c	obj/kern/kernel.asm	/^    f011021c:	00 00 00 $/;"	l
f011021f	obj/kern/kernel.asm	/^    f011021f:	ff d0                	callq  *%rax$/;"	l
f0110221	obj/kern/kernel.asm	/^    f0110221:	44 89 e1             	mov    %r12d,%ecx$/;"	l
f0110224	obj/kern/kernel.asm	/^    f0110224:	48 89 da             	mov    %rbx,%rdx$/;"	l
f0110227	obj/kern/kernel.asm	/^    f0110227:	89 c6                	mov    %eax,%esi$/;"	l
f0110229	obj/kern/kernel.asm	/^    f0110229:	48 bf c8 36 11 f0 00 	mov    $0xf01136c8,%rdi$/;"	l
f0110230	obj/kern/kernel.asm	/^    f0110230:	00 00 00 $/;"	l
f0110233	obj/kern/kernel.asm	/^    f0110233:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0110238	obj/kern/kernel.asm	/^    f0110238:	48 bb eb 88 10 f0 00 	mov    $0xf01088eb,%rbx$/;"	l
f011023f	obj/kern/kernel.asm	/^    f011023f:	00 00 00 $/;"	l
f0110242	obj/kern/kernel.asm	/^    f0110242:	ff d3                	callq  *%rbx$/;"	l
f0110244	obj/kern/kernel.asm	/^    f0110244:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)$/;"	l
f011024b	obj/kern/kernel.asm	/^    f011024b:	e9 a4 00 00 00       	jmpq   fffffffff01102f4 <end+0xfffffffefe66ef54>$/;"	l
f0110250	obj/kern/kernel.asm	/^    f0110250:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
f0110253	obj/kern/kernel.asm	/^    f0110253:	48 98                	cltq   $/;"	l
f0110255	obj/kern/kernel.asm	/^    f0110255:	8b 44 85 c0          	mov    -0x40(%rbp,%rax,4),%eax$/;"	l
f0110259	obj/kern/kernel.asm	/^    f0110259:	89 c0                	mov    %eax,%eax$/;"	l
f011025b	obj/kern/kernel.asm	/^    f011025b:	48 8d 55 90          	lea    -0x70(%rbp),%rdx$/;"	l
f011025f	obj/kern/kernel.asm	/^    f011025f:	48 89 d6             	mov    %rdx,%rsi$/;"	l
f0110262	obj/kern/kernel.asm	/^    f0110262:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0110265	obj/kern/kernel.asm	/^    f0110265:	48 b8 31 db 10 f0 00 	mov    $0xf010db31,%rax$/;"	l
f011026c	obj/kern/kernel.asm	/^    f011026c:	00 00 00 $/;"	l
f011026f	obj/kern/kernel.asm	/^    f011026f:	ff d0                	callq  *%rax$/;"	l
f0110271	obj/kern/kernel.asm	/^    f0110271:	85 c0                	test   %eax,%eax$/;"	l
f0110273	obj/kern/kernel.asm	/^    f0110273:	78 55                	js     fffffffff01102ca <end+0xfffffffefe66ef2a>$/;"	l
f0110275	obj/kern/kernel.asm	/^    f0110275:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
f0110278	obj/kern/kernel.asm	/^    f0110278:	48 98                	cltq   $/;"	l
f011027a	obj/kern/kernel.asm	/^    f011027a:	8b 44 85 c0          	mov    -0x40(%rbp,%rax,4),%eax$/;"	l
f011027e	obj/kern/kernel.asm	/^    f011027e:	89 c2                	mov    %eax,%edx$/;"	l
f0110280	obj/kern/kernel.asm	/^    f0110280:	48 8b 45 b0          	mov    -0x50(%rbp),%rax$/;"	l
f0110284	obj/kern/kernel.asm	/^    f0110284:	48 89 d7             	mov    %rdx,%rdi$/;"	l
f0110287	obj/kern/kernel.asm	/^    f0110287:	48 29 c7             	sub    %rax,%rdi$/;"	l
f011028a	obj/kern/kernel.asm	/^    f011028a:	48 8b 75 a0          	mov    -0x60(%rbp),%rsi$/;"	l
f011028e	obj/kern/kernel.asm	/^    f011028e:	8b 5d a8             	mov    -0x58(%rbp),%ebx$/;"	l
f0110291	obj/kern/kernel.asm	/^    f0110291:	8b 4d 98             	mov    -0x68(%rbp),%ecx$/;"	l
f0110294	obj/kern/kernel.asm	/^    f0110294:	48 8b 55 90          	mov    -0x70(%rbp),%rdx$/;"	l
f0110298	obj/kern/kernel.asm	/^    f0110298:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
f011029b	obj/kern/kernel.asm	/^    f011029b:	48 98                	cltq   $/;"	l
f011029d	obj/kern/kernel.asm	/^    f011029d:	8b 44 85 c0          	mov    -0x40(%rbp,%rax,4),%eax$/;"	l
f01102a1	obj/kern/kernel.asm	/^    f01102a1:	48 89 3c 24          	mov    %rdi,(%rsp)$/;"	l
f01102a5	obj/kern/kernel.asm	/^    f01102a5:	49 89 f1             	mov    %rsi,%r9$/;"	l
f01102a8	obj/kern/kernel.asm	/^    f01102a8:	41 89 d8             	mov    %ebx,%r8d$/;"	l
f01102ab	obj/kern/kernel.asm	/^    f01102ab:	89 c6                	mov    %eax,%esi$/;"	l
f01102ad	obj/kern/kernel.asm	/^    f01102ad:	48 bf fe 36 11 f0 00 	mov    $0xf01136fe,%rdi$/;"	l
f01102b4	obj/kern/kernel.asm	/^    f01102b4:	00 00 00 $/;"	l
f01102b7	obj/kern/kernel.asm	/^    f01102b7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01102bc	obj/kern/kernel.asm	/^    f01102bc:	48 bb eb 88 10 f0 00 	mov    $0xf01088eb,%rbx$/;"	l
f01102c3	obj/kern/kernel.asm	/^    f01102c3:	00 00 00 $/;"	l
f01102c6	obj/kern/kernel.asm	/^    f01102c6:	ff d3                	callq  *%rbx$/;"	l
f01102c8	obj/kern/kernel.asm	/^    f01102c8:	eb 26                	jmp    fffffffff01102f0 <end+0xfffffffefe66ef50>$/;"	l
f01102ca	obj/kern/kernel.asm	/^    f01102ca:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
f01102cd	obj/kern/kernel.asm	/^    f01102cd:	48 98                	cltq   $/;"	l
f01102cf	obj/kern/kernel.asm	/^    f01102cf:	8b 44 85 c0          	mov    -0x40(%rbp,%rax,4),%eax$/;"	l
f01102d3	obj/kern/kernel.asm	/^    f01102d3:	89 c6                	mov    %eax,%esi$/;"	l
f01102d5	obj/kern/kernel.asm	/^    f01102d5:	48 bf 15 37 11 f0 00 	mov    $0xf0113715,%rdi$/;"	l
f01102dc	obj/kern/kernel.asm	/^    f01102dc:	00 00 00 $/;"	l
f01102df	obj/kern/kernel.asm	/^    f01102df:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01102e4	obj/kern/kernel.asm	/^    f01102e4:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f01102eb	obj/kern/kernel.asm	/^    f01102eb:	00 00 00 $/;"	l
f01102ee	obj/kern/kernel.asm	/^    f01102ee:	ff d2                	callq  *%rdx$/;"	l
f01102f0	obj/kern/kernel.asm	/^    f01102f0:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)$/;"	l
f01102f4	obj/kern/kernel.asm	/^    f01102f4:	83 7d ec 09          	cmpl   $0x9,-0x14(%rbp)$/;"	l
f01102f8	obj/kern/kernel.asm	/^    f01102f8:	7f 11                	jg     fffffffff011030b <end+0xfffffffefe66ef6b>$/;"	l
f01102fa	obj/kern/kernel.asm	/^    f01102fa:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
f01102fd	obj/kern/kernel.asm	/^    f01102fd:	48 98                	cltq   $/;"	l
f01102ff	obj/kern/kernel.asm	/^    f01102ff:	8b 44 85 c0          	mov    -0x40(%rbp,%rax,4),%eax$/;"	l
f0110303	obj/kern/kernel.asm	/^    f0110303:	85 c0                	test   %eax,%eax$/;"	l
f0110305	obj/kern/kernel.asm	/^    f0110305:	0f 85 45 ff ff ff    	jne    fffffffff0110250 <end+0xfffffffefe66eeb0>$/;"	l
f011030b	obj/kern/kernel.asm	/^    f011030b:	48 ba 1d 37 11 f0 00 	mov    $0xf011371d,%rdx$/;"	l
f0110312	obj/kern/kernel.asm	/^    f0110312:	00 00 00 $/;"	l
f0110315	obj/kern/kernel.asm	/^    f0110315:	be 67 00 00 00       	mov    $0x67,%esi$/;"	l
f011031a	obj/kern/kernel.asm	/^    f011031a:	48 bf b2 36 11 f0 00 	mov    $0xf01136b2,%rdi$/;"	l
f0110321	obj/kern/kernel.asm	/^    f0110321:	00 00 00 $/;"	l
f0110324	obj/kern/kernel.asm	/^    f0110324:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0110329	obj/kern/kernel.asm	/^    f0110329:	48 b9 18 05 10 f0 00 	mov    $0xf0100518,%rcx$/;"	l
f0110330	obj/kern/kernel.asm	/^    f0110330:	00 00 00 $/;"	l
f0110333	obj/kern/kernel.asm	/^    f0110333:	ff d1                	callq  *%rcx$/;"	l
f0110335	obj/kern/kernel.asm	/^    f0110335:	48 8b 45 88          	mov    -0x78(%rbp),%rax$/;"	l
f0110339	obj/kern/kernel.asm	/^    f0110339:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)$/;"	l
f0110340	obj/kern/kernel.asm	/^    f0110340:	00 $/;"	l
f0110341	obj/kern/kernel.asm	/^    f0110341:	48 8b 45 88          	mov    -0x78(%rbp),%rax$/;"	l
f0110345	obj/kern/kernel.asm	/^    f0110345:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)$/;"	l
f011034c	obj/kern/kernel.asm	/^    f011034c:	00 $/;"	l
f011034d	obj/kern/kernel.asm	/^    f011034d:	48 8b 45 88          	mov    -0x78(%rbp),%rax$/;"	l
f0110351	obj/kern/kernel.asm	/^    f0110351:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0110356	obj/kern/kernel.asm	/^    f0110356:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0110359	obj/kern/kernel.asm	/^    f0110359:	48 b8 98 ff 10 f0 00 	mov    $0xf010ff98,%rax$/;"	l
f0110360	obj/kern/kernel.asm	/^    f0110360:	00 00 00 $/;"	l
f0110363	obj/kern/kernel.asm	/^    f0110363:	ff d0                	callq  *%rax$/;"	l
f0110365	obj/kern/kernel.asm	/^    f0110365:	48 83 ec 80          	sub    $0xffffffffffffff80,%rsp$/;"	l
f0110369	obj/kern/kernel.asm	/^    f0110369:	5b                   	pop    %rbx$/;"	l
f011036a	obj/kern/kernel.asm	/^    f011036a:	41 5c                	pop    %r12$/;"	l
f011036c	obj/kern/kernel.asm	/^    f011036c:	c9                   	leaveq $/;"	l
f011036d	obj/kern/kernel.asm	/^    f011036d:	c3                   	retq   $/;"	l
f0110370	obj/kern/kernel.asm	/^    f0110370:	55                   	push   %rbp$/;"	l
f0110371	obj/kern/kernel.asm	/^    f0110371:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f0110374	obj/kern/kernel.asm	/^    f0110374:	53                   	push   %rbx$/;"	l
f0110375	obj/kern/kernel.asm	/^    f0110375:	48 83 ec 38          	sub    $0x38,%rsp$/;"	l
f0110379	obj/kern/kernel.asm	/^    f0110379:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)$/;"	l
f011037d	obj/kern/kernel.asm	/^    f011037d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f0110381	obj/kern/kernel.asm	/^    f0110381:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0110384	obj/kern/kernel.asm	/^    f0110384:	48 b8 61 11 11 f0 00 	mov    $0xf0111161,%rax$/;"	l
f011038b	obj/kern/kernel.asm	/^    f011038b:	00 00 00 $/;"	l
f011038e	obj/kern/kernel.asm	/^    f011038e:	ff d0                	callq  *%rax$/;"	l
f0110390	obj/kern/kernel.asm	/^    f0110390:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f0110394	obj/kern/kernel.asm	/^    f0110394:	8b 40 30             	mov    0x30(%rax),%eax$/;"	l
f0110397	obj/kern/kernel.asm	/^    f0110397:	89 c2                	mov    %eax,%edx$/;"	l
f0110399	obj/kern/kernel.asm	/^    f0110399:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f011039d	obj/kern/kernel.asm	/^    f011039d:	8b 40 18             	mov    0x18(%rax),%eax$/;"	l
f01103a0	obj/kern/kernel.asm	/^    f01103a0:	89 c0                	mov    %eax,%eax$/;"	l
f01103a2	obj/kern/kernel.asm	/^    f01103a2:	48 89 d6             	mov    %rdx,%rsi$/;"	l
f01103a5	obj/kern/kernel.asm	/^    f01103a5:	48 89 c7             	mov    %rax,%rdi$/;"	l
f01103a8	obj/kern/kernel.asm	/^    f01103a8:	48 b8 61 32 10 f0 00 	mov    $0xf0103261,%rax$/;"	l
f01103af	obj/kern/kernel.asm	/^    f01103af:	00 00 00 $/;"	l
f01103b2	obj/kern/kernel.asm	/^    f01103b2:	ff d0                	callq  *%rax$/;"	l
f01103b4	obj/kern/kernel.asm	/^    f01103b4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f01103b8	obj/kern/kernel.asm	/^    f01103b8:	8b 40 18             	mov    0x18(%rax),%eax$/;"	l
f01103bb	obj/kern/kernel.asm	/^    f01103bb:	89 c1                	mov    %eax,%ecx$/;"	l
f01103bd	obj/kern/kernel.asm	/^    f01103bd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f01103c1	obj/kern/kernel.asm	/^    f01103c1:	8b 40 30             	mov    0x30(%rax),%eax$/;"	l
f01103c4	obj/kern/kernel.asm	/^    f01103c4:	89 c2                	mov    %eax,%edx$/;"	l
f01103c6	obj/kern/kernel.asm	/^    f01103c6:	48 b8 60 77 a2 f1 00 	mov    $0xf1a27760,%rax$/;"	l
f01103cd	obj/kern/kernel.asm	/^    f01103cd:	00 00 00 $/;"	l
f01103d0	obj/kern/kernel.asm	/^    f01103d0:	48 8b 00             	mov    (%rax),%rax$/;"	l
f01103d3	obj/kern/kernel.asm	/^    f01103d3:	41 b8 1a 00 00 00    	mov    $0x1a,%r8d$/;"	l
f01103d9	obj/kern/kernel.asm	/^    f01103d9:	be 00 00 00 f0       	mov    $0xf0000000,%esi$/;"	l
f01103de	obj/kern/kernel.asm	/^    f01103de:	48 89 c7             	mov    %rax,%rdi$/;"	l
f01103e1	obj/kern/kernel.asm	/^    f01103e1:	48 b8 ee 2e 10 f0 00 	mov    $0xf0102eee,%rax$/;"	l
f01103e8	obj/kern/kernel.asm	/^    f01103e8:	00 00 00 $/;"	l
f01103eb	obj/kern/kernel.asm	/^    f01103eb:	ff d0                	callq  *%rax$/;"	l
f01103ed	obj/kern/kernel.asm	/^    f01103ed:	48 b8 78 77 a2 f1 00 	mov    $0xf1a27778,%rax$/;"	l
f01103f4	obj/kern/kernel.asm	/^    f01103f4:	00 00 00 $/;"	l
f01103f7	obj/kern/kernel.asm	/^    f01103f7:	c7 00 00 00 00 f0    	movl   $0xf0000000,(%rax)$/;"	l
f01103fd	obj/kern/kernel.asm	/^    f01103fd:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)$/;"	l
f0110404	obj/kern/kernel.asm	/^    f0110404:	48 bf 30 37 11 f0 00 	mov    $0xf0113730,%rdi$/;"	l
f011040b	obj/kern/kernel.asm	/^    f011040b:	00 00 00 $/;"	l
f011040e	obj/kern/kernel.asm	/^    f011040e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0110413	obj/kern/kernel.asm	/^    f0110413:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f011041a	obj/kern/kernel.asm	/^    f011041a:	00 00 00 $/;"	l
f011041d	obj/kern/kernel.asm	/^    f011041d:	ff d2                	callq  *%rdx$/;"	l
f011041f	obj/kern/kernel.asm	/^    f011041f:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f0110424	obj/kern/kernel.asm	/^    f0110424:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0110429	obj/kern/kernel.asm	/^    f0110429:	48 bf 20 90 a8 f1 00 	mov    $0xf1a89020,%rdi$/;"	l
f0110430	obj/kern/kernel.asm	/^    f0110430:	00 00 00 $/;"	l
f0110433	obj/kern/kernel.asm	/^    f0110433:	48 b8 42 ee 10 f0 00 	mov    $0xf010ee42,%rax$/;"	l
f011043a	obj/kern/kernel.asm	/^    f011043a:	00 00 00 $/;"	l
f011043d	obj/kern/kernel.asm	/^    f011043d:	ff d0                	callq  *%rax$/;"	l
f011043f	obj/kern/kernel.asm	/^    f011043f:	ba 80 7b 01 00       	mov    $0x17b80,%edx$/;"	l
f0110444	obj/kern/kernel.asm	/^    f0110444:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0110449	obj/kern/kernel.asm	/^    f0110449:	48 bf 20 94 a8 f1 00 	mov    $0xf1a89420,%rdi$/;"	l
f0110450	obj/kern/kernel.asm	/^    f0110450:	00 00 00 $/;"	l
f0110453	obj/kern/kernel.asm	/^    f0110453:	48 b8 42 ee 10 f0 00 	mov    $0xf010ee42,%rax$/;"	l
f011045a	obj/kern/kernel.asm	/^    f011045a:	00 00 00 $/;"	l
f011045d	obj/kern/kernel.asm	/^    f011045d:	ff d0                	callq  *%rax$/;"	l
f011045f	obj/kern/kernel.asm	/^    f011045f:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)$/;"	l
f0110466	obj/kern/kernel.asm	/^    f0110466:	e9 ba 00 00 00       	jmpq   fffffffff0110525 <end+0xfffffffefe66f185>$/;"	l
f011046b	obj/kern/kernel.asm	/^    f011046b:	8b 4d dc             	mov    -0x24(%rbp),%ecx$/;"	l
f011046e	obj/kern/kernel.asm	/^    f011046e:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
f0110471	obj/kern/kernel.asm	/^    f0110471:	89 c0                	mov    %eax,%eax$/;"	l
f0110473	obj/kern/kernel.asm	/^    f0110473:	48 69 d0 ee 05 00 00 	imul   $0x5ee,%rax,%rdx$/;"	l
f011047a	obj/kern/kernel.asm	/^    f011047a:	48 b8 20 94 a8 f1 00 	mov    $0xf1a89420,%rax$/;"	l
f0110481	obj/kern/kernel.asm	/^    f0110481:	00 00 00 $/;"	l
f0110484	obj/kern/kernel.asm	/^    f0110484:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f0110488	obj/kern/kernel.asm	/^    f0110488:	48 89 45 e0          	mov    %rax,-0x20(%rbp)$/;"	l
f011048c	obj/kern/kernel.asm	/^    f011048c:	b8 ff ff ff ef       	mov    $0xefffffff,%eax$/;"	l
f0110491	obj/kern/kernel.asm	/^    f0110491:	48 39 45 e0          	cmp    %rax,-0x20(%rbp)$/;"	l
f0110495	obj/kern/kernel.asm	/^    f0110495:	77 31                	ja     fffffffff01104c8 <end+0xfffffffefe66f128>$/;"	l
f0110497	obj/kern/kernel.asm	/^    f0110497:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
f011049b	obj/kern/kernel.asm	/^    f011049b:	48 89 c1             	mov    %rax,%rcx$/;"	l
f011049e	obj/kern/kernel.asm	/^    f011049e:	48 ba 48 37 11 f0 00 	mov    $0xf0113748,%rdx$/;"	l
f01104a5	obj/kern/kernel.asm	/^    f01104a5:	00 00 00 $/;"	l
f01104a8	obj/kern/kernel.asm	/^    f01104a8:	be 2a 00 00 00       	mov    $0x2a,%esi$/;"	l
f01104ad	obj/kern/kernel.asm	/^    f01104ad:	48 bf 6c 37 11 f0 00 	mov    $0xf011376c,%rdi$/;"	l
f01104b4	obj/kern/kernel.asm	/^    f01104b4:	00 00 00 $/;"	l
f01104b7	obj/kern/kernel.asm	/^    f01104b7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01104bc	obj/kern/kernel.asm	/^    f01104bc:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f01104c3	obj/kern/kernel.asm	/^    f01104c3:	00 00 00 $/;"	l
f01104c6	obj/kern/kernel.asm	/^    f01104c6:	ff d3                	callq  *%rbx$/;"	l
f01104c8	obj/kern/kernel.asm	/^    f01104c8:	48 b8 00 00 00 10 ff 	mov    $0xffffffff10000000,%rax$/;"	l
f01104cf	obj/kern/kernel.asm	/^    f01104cf:	ff ff ff $/;"	l
f01104d2	obj/kern/kernel.asm	/^    f01104d2:	48 89 c2             	mov    %rax,%rdx$/;"	l
f01104d5	obj/kern/kernel.asm	/^    f01104d5:	48 03 55 e0          	add    -0x20(%rbp),%rdx$/;"	l
f01104d9	obj/kern/kernel.asm	/^    f01104d9:	48 b8 20 90 a8 f1 00 	mov    $0xf1a89020,%rax$/;"	l
f01104e0	obj/kern/kernel.asm	/^    f01104e0:	00 00 00 $/;"	l
f01104e3	obj/kern/kernel.asm	/^    f01104e3:	89 c9                	mov    %ecx,%ecx$/;"	l
f01104e5	obj/kern/kernel.asm	/^    f01104e5:	48 c1 e1 04          	shl    $0x4,%rcx$/;"	l
f01104e9	obj/kern/kernel.asm	/^    f01104e9:	48 89 14 01          	mov    %rdx,(%rcx,%rax,1)$/;"	l
f01104ed	obj/kern/kernel.asm	/^    f01104ed:	8b 4d dc             	mov    -0x24(%rbp),%ecx$/;"	l
f01104f0	obj/kern/kernel.asm	/^    f01104f0:	8b 55 dc             	mov    -0x24(%rbp),%edx$/;"	l
f01104f3	obj/kern/kernel.asm	/^    f01104f3:	48 b8 20 90 a8 f1 00 	mov    $0xf1a89020,%rax$/;"	l
f01104fa	obj/kern/kernel.asm	/^    f01104fa:	00 00 00 $/;"	l
f01104fd	obj/kern/kernel.asm	/^    f01104fd:	89 d2                	mov    %edx,%edx$/;"	l
f01104ff	obj/kern/kernel.asm	/^    f01104ff:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f0110503	obj/kern/kernel.asm	/^    f0110503:	0f b6 44 02 0c       	movzbl 0xc(%rdx,%rax,1),%eax$/;"	l
f0110508	obj/kern/kernel.asm	/^    f0110508:	89 c2                	mov    %eax,%edx$/;"	l
f011050a	obj/kern/kernel.asm	/^    f011050a:	83 ca 01             	or     $0x1,%edx$/;"	l
f011050d	obj/kern/kernel.asm	/^    f011050d:	48 b8 20 90 a8 f1 00 	mov    $0xf1a89020,%rax$/;"	l
f0110514	obj/kern/kernel.asm	/^    f0110514:	00 00 00 $/;"	l
f0110517	obj/kern/kernel.asm	/^    f0110517:	89 c9                	mov    %ecx,%ecx$/;"	l
f0110519	obj/kern/kernel.asm	/^    f0110519:	48 c1 e1 04          	shl    $0x4,%rcx$/;"	l
f011051d	obj/kern/kernel.asm	/^    f011051d:	88 54 01 0c          	mov    %dl,0xc(%rcx,%rax,1)$/;"	l
f0110521	obj/kern/kernel.asm	/^    f0110521:	83 45 dc 01          	addl   $0x1,-0x24(%rbp)$/;"	l
f0110525	obj/kern/kernel.asm	/^    f0110525:	83 7d dc 3f          	cmpl   $0x3f,-0x24(%rbp)$/;"	l
f0110529	obj/kern/kernel.asm	/^    f0110529:	0f 86 3c ff ff ff    	jbe    fffffffff011046b <end+0xfffffffefe66f0cb>$/;"	l
f011052f	obj/kern/kernel.asm	/^    f011052f:	48 bf 79 37 11 f0 00 	mov    $0xf0113779,%rdi$/;"	l
f0110536	obj/kern/kernel.asm	/^    f0110536:	00 00 00 $/;"	l
f0110539	obj/kern/kernel.asm	/^    f0110539:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f011053e	obj/kern/kernel.asm	/^    f011053e:	48 ba eb 88 10 f0 00 	mov    $0xf01088eb,%rdx$/;"	l
f0110545	obj/kern/kernel.asm	/^    f0110545:	00 00 00 $/;"	l
f0110548	obj/kern/kernel.asm	/^    f0110548:	ff d2                	callq  *%rdx$/;"	l
f011054a	obj/kern/kernel.asm	/^    f011054a:	ba 00 04 00 00       	mov    $0x400,%edx$/;"	l
f011054f	obj/kern/kernel.asm	/^    f011054f:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0110554	obj/kern/kernel.asm	/^    f0110554:	48 bf a0 0f aa f1 00 	mov    $0xf1aa0fa0,%rdi$/;"	l
f011055b	obj/kern/kernel.asm	/^    f011055b:	00 00 00 $/;"	l
f011055e	obj/kern/kernel.asm	/^    f011055e:	48 b8 42 ee 10 f0 00 	mov    $0xf010ee42,%rax$/;"	l
f0110565	obj/kern/kernel.asm	/^    f0110565:	00 00 00 $/;"	l
f0110568	obj/kern/kernel.asm	/^    f0110568:	ff d0                	callq  *%rax$/;"	l
f011056a	obj/kern/kernel.asm	/^    f011056a:	ba 00 00 02 00       	mov    $0x20000,%edx$/;"	l
f011056f	obj/kern/kernel.asm	/^    f011056f:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0110574	obj/kern/kernel.asm	/^    f0110574:	48 bf 20 90 a6 f1 00 	mov    $0xf1a69020,%rdi$/;"	l
f011057b	obj/kern/kernel.asm	/^    f011057b:	00 00 00 $/;"	l
f011057e	obj/kern/kernel.asm	/^    f011057e:	48 b8 42 ee 10 f0 00 	mov    $0xf010ee42,%rax$/;"	l
f0110585	obj/kern/kernel.asm	/^    f0110585:	00 00 00 $/;"	l
f0110588	obj/kern/kernel.asm	/^    f0110588:	ff d0                	callq  *%rax$/;"	l
f011058a	obj/kern/kernel.asm	/^    f011058a:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)$/;"	l
f0110591	obj/kern/kernel.asm	/^    f0110591:	e9 86 00 00 00       	jmpq   fffffffff011061c <end+0xfffffffefe66f27c>$/;"	l
f0110596	obj/kern/kernel.asm	/^    f0110596:	8b 4d dc             	mov    -0x24(%rbp),%ecx$/;"	l
f0110599	obj/kern/kernel.asm	/^    f0110599:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
f011059c	obj/kern/kernel.asm	/^    f011059c:	89 c0                	mov    %eax,%eax$/;"	l
f011059e	obj/kern/kernel.asm	/^    f011059e:	48 89 c2             	mov    %rax,%rdx$/;"	l
f01105a1	obj/kern/kernel.asm	/^    f01105a1:	48 c1 e2 0b          	shl    $0xb,%rdx$/;"	l
f01105a5	obj/kern/kernel.asm	/^    f01105a5:	48 b8 20 90 a6 f1 00 	mov    $0xf1a69020,%rax$/;"	l
f01105ac	obj/kern/kernel.asm	/^    f01105ac:	00 00 00 $/;"	l
f01105af	obj/kern/kernel.asm	/^    f01105af:	48 8d 04 02          	lea    (%rdx,%rax,1),%rax$/;"	l
f01105b3	obj/kern/kernel.asm	/^    f01105b3:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
f01105b7	obj/kern/kernel.asm	/^    f01105b7:	b8 ff ff ff ef       	mov    $0xefffffff,%eax$/;"	l
f01105bc	obj/kern/kernel.asm	/^    f01105bc:	48 39 45 e8          	cmp    %rax,-0x18(%rbp)$/;"	l
f01105c0	obj/kern/kernel.asm	/^    f01105c0:	77 31                	ja     fffffffff01105f3 <end+0xfffffffefe66f253>$/;"	l
f01105c2	obj/kern/kernel.asm	/^    f01105c2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f01105c6	obj/kern/kernel.asm	/^    f01105c6:	48 89 c1             	mov    %rax,%rcx$/;"	l
f01105c9	obj/kern/kernel.asm	/^    f01105c9:	48 ba 48 37 11 f0 00 	mov    $0xf0113748,%rdx$/;"	l
f01105d0	obj/kern/kernel.asm	/^    f01105d0:	00 00 00 $/;"	l
f01105d3	obj/kern/kernel.asm	/^    f01105d3:	be 33 00 00 00       	mov    $0x33,%esi$/;"	l
f01105d8	obj/kern/kernel.asm	/^    f01105d8:	48 bf 6c 37 11 f0 00 	mov    $0xf011376c,%rdi$/;"	l
f01105df	obj/kern/kernel.asm	/^    f01105df:	00 00 00 $/;"	l
f01105e2	obj/kern/kernel.asm	/^    f01105e2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01105e7	obj/kern/kernel.asm	/^    f01105e7:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f01105ee	obj/kern/kernel.asm	/^    f01105ee:	00 00 00 $/;"	l
f01105f1	obj/kern/kernel.asm	/^    f01105f1:	ff d3                	callq  *%rbx$/;"	l
f01105f3	obj/kern/kernel.asm	/^    f01105f3:	48 b8 00 00 00 10 ff 	mov    $0xffffffff10000000,%rax$/;"	l
f01105fa	obj/kern/kernel.asm	/^    f01105fa:	ff ff ff $/;"	l
f01105fd	obj/kern/kernel.asm	/^    f01105fd:	48 89 c2             	mov    %rax,%rdx$/;"	l
f0110600	obj/kern/kernel.asm	/^    f0110600:	48 03 55 e8          	add    -0x18(%rbp),%rdx$/;"	l
f0110604	obj/kern/kernel.asm	/^    f0110604:	48 b8 a0 0f aa f1 00 	mov    $0xf1aa0fa0,%rax$/;"	l
f011060b	obj/kern/kernel.asm	/^    f011060b:	00 00 00 $/;"	l
f011060e	obj/kern/kernel.asm	/^    f011060e:	89 c9                	mov    %ecx,%ecx$/;"	l
f0110610	obj/kern/kernel.asm	/^    f0110610:	48 c1 e1 04          	shl    $0x4,%rcx$/;"	l
f0110614	obj/kern/kernel.asm	/^    f0110614:	48 89 14 01          	mov    %rdx,(%rcx,%rax,1)$/;"	l
f0110618	obj/kern/kernel.asm	/^    f0110618:	83 45 dc 01          	addl   $0x1,-0x24(%rbp)$/;"	l
f011061c	obj/kern/kernel.asm	/^    f011061c:	83 7d dc 3f          	cmpl   $0x3f,-0x24(%rbp)$/;"	l
f0110620	obj/kern/kernel.asm	/^    f0110620:	0f 86 70 ff ff ff    	jbe    fffffffff0110596 <end+0xfffffffefe66f1f6>$/;"	l
f0110626	obj/kern/kernel.asm	/^    f0110626:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f011062b	obj/kern/kernel.asm	/^    f011062b:	48 83 c4 38          	add    $0x38,%rsp$/;"	l
f011062f	obj/kern/kernel.asm	/^    f011062f:	5b                   	pop    %rbx$/;"	l
f0110630	obj/kern/kernel.asm	/^    f0110630:	c9                   	leaveq $/;"	l
f0110631	obj/kern/kernel.asm	/^    f0110631:	c3                   	retq   $/;"	l
f0110632	obj/kern/kernel.asm	/^    f0110632:	55                   	push   %rbp$/;"	l
f0110633	obj/kern/kernel.asm	/^    f0110633:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f0110636	obj/kern/kernel.asm	/^    f0110636:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
f011063a	obj/kern/kernel.asm	/^    f011063a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
f011063e	obj/kern/kernel.asm	/^    f011063e:	89 75 e4             	mov    %esi,-0x1c(%rbp)$/;"	l
f0110641	obj/kern/kernel.asm	/^    f0110641:	81 7d e4 ee 05 00 00 	cmpl   $0x5ee,-0x1c(%rbp)$/;"	l
f0110648	obj/kern/kernel.asm	/^    f0110648:	7e 0a                	jle    fffffffff0110654 <end+0xfffffffefe66f2b4>$/;"	l
f011064a	obj/kern/kernel.asm	/^    f011064a:	b8 ee ff ff ff       	mov    $0xffffffee,%eax$/;"	l
f011064f	obj/kern/kernel.asm	/^    f011064f:	e9 56 01 00 00       	jmpq   fffffffff01107aa <end+0xfffffffefe66f40a>$/;"	l
f0110654	obj/kern/kernel.asm	/^    f0110654:	48 b8 78 77 a2 f1 00 	mov    $0xf1a27778,%rax$/;"	l
f011065b	obj/kern/kernel.asm	/^    f011065b:	00 00 00 $/;"	l
f011065e	obj/kern/kernel.asm	/^    f011065e:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0110661	obj/kern/kernel.asm	/^    f0110661:	48 05 18 38 00 00    	add    $0x3818,%rax$/;"	l
f0110667	obj/kern/kernel.asm	/^    f0110667:	8b 00                	mov    (%rax),%eax$/;"	l
f0110669	obj/kern/kernel.asm	/^    f0110669:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
f011066c	obj/kern/kernel.asm	/^    f011066c:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
f011066f	obj/kern/kernel.asm	/^    f011066f:	48 b8 20 90 a8 f1 00 	mov    $0xf1a89020,%rax$/;"	l
f0110676	obj/kern/kernel.asm	/^    f0110676:	00 00 00 $/;"	l
f0110679	obj/kern/kernel.asm	/^    f0110679:	89 d2                	mov    %edx,%edx$/;"	l
f011067b	obj/kern/kernel.asm	/^    f011067b:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f011067f	obj/kern/kernel.asm	/^    f011067f:	0f b6 44 02 0c       	movzbl 0xc(%rdx,%rax,1),%eax$/;"	l
f0110684	obj/kern/kernel.asm	/^    f0110684:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0110687	obj/kern/kernel.asm	/^    f0110687:	83 e0 01             	and    $0x1,%eax$/;"	l
f011068a	obj/kern/kernel.asm	/^    f011068a:	84 c0                	test   %al,%al$/;"	l
f011068c	obj/kern/kernel.asm	/^    f011068c:	0f 84 13 01 00 00    	je     fffffffff01107a5 <end+0xfffffffefe66f405>$/;"	l
f0110692	obj/kern/kernel.asm	/^    f0110692:	8b 45 e4             	mov    -0x1c(%rbp),%eax$/;"	l
f0110695	obj/kern/kernel.asm	/^    f0110695:	48 63 d0             	movslq %eax,%rdx$/;"	l
f0110698	obj/kern/kernel.asm	/^    f0110698:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
f011069b	obj/kern/kernel.asm	/^    f011069b:	89 c0                	mov    %eax,%eax$/;"	l
f011069d	obj/kern/kernel.asm	/^    f011069d:	48 69 c8 ee 05 00 00 	imul   $0x5ee,%rax,%rcx$/;"	l
f01106a4	obj/kern/kernel.asm	/^    f01106a4:	48 b8 20 94 a8 f1 00 	mov    $0xf1a89420,%rax$/;"	l
f01106ab	obj/kern/kernel.asm	/^    f01106ab:	00 00 00 $/;"	l
f01106ae	obj/kern/kernel.asm	/^    f01106ae:	48 01 c1             	add    %rax,%rcx$/;"	l
f01106b1	obj/kern/kernel.asm	/^    f01106b1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f01106b5	obj/kern/kernel.asm	/^    f01106b5:	48 89 c6             	mov    %rax,%rsi$/;"	l
f01106b8	obj/kern/kernel.asm	/^    f01106b8:	48 89 cf             	mov    %rcx,%rdi$/;"	l
f01106bb	obj/kern/kernel.asm	/^    f01106bb:	48 b8 cd ee 10 f0 00 	mov    $0xf010eecd,%rax$/;"	l
f01106c2	obj/kern/kernel.asm	/^    f01106c2:	00 00 00 $/;"	l
f01106c5	obj/kern/kernel.asm	/^    f01106c5:	ff d0                	callq  *%rax$/;"	l
f01106c7	obj/kern/kernel.asm	/^    f01106c7:	8b 4d fc             	mov    -0x4(%rbp),%ecx$/;"	l
f01106ca	obj/kern/kernel.asm	/^    f01106ca:	8b 45 e4             	mov    -0x1c(%rbp),%eax$/;"	l
f01106cd	obj/kern/kernel.asm	/^    f01106cd:	89 c2                	mov    %eax,%edx$/;"	l
f01106cf	obj/kern/kernel.asm	/^    f01106cf:	48 b8 20 90 a8 f1 00 	mov    $0xf1a89020,%rax$/;"	l
f01106d6	obj/kern/kernel.asm	/^    f01106d6:	00 00 00 $/;"	l
f01106d9	obj/kern/kernel.asm	/^    f01106d9:	89 c9                	mov    %ecx,%ecx$/;"	l
f01106db	obj/kern/kernel.asm	/^    f01106db:	48 c1 e1 04          	shl    $0x4,%rcx$/;"	l
f01106df	obj/kern/kernel.asm	/^    f01106df:	66 89 54 01 08       	mov    %dx,0x8(%rcx,%rax,1)$/;"	l
f01106e4	obj/kern/kernel.asm	/^    f01106e4:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
f01106e7	obj/kern/kernel.asm	/^    f01106e7:	8b 4d fc             	mov    -0x4(%rbp),%ecx$/;"	l
f01106ea	obj/kern/kernel.asm	/^    f01106ea:	48 b8 20 90 a8 f1 00 	mov    $0xf1a89020,%rax$/;"	l
f01106f1	obj/kern/kernel.asm	/^    f01106f1:	00 00 00 $/;"	l
f01106f4	obj/kern/kernel.asm	/^    f01106f4:	89 c9                	mov    %ecx,%ecx$/;"	l
f01106f6	obj/kern/kernel.asm	/^    f01106f6:	48 c1 e1 04          	shl    $0x4,%rcx$/;"	l
f01106fa	obj/kern/kernel.asm	/^    f01106fa:	0f b6 44 01 0c       	movzbl 0xc(%rcx,%rax,1),%eax$/;"	l
f01106ff	obj/kern/kernel.asm	/^    f01106ff:	89 c1                	mov    %eax,%ecx$/;"	l
f0110701	obj/kern/kernel.asm	/^    f0110701:	83 e1 fe             	and    $0xfffffffffffffffe,%ecx$/;"	l
f0110704	obj/kern/kernel.asm	/^    f0110704:	48 b8 20 90 a8 f1 00 	mov    $0xf1a89020,%rax$/;"	l
f011070b	obj/kern/kernel.asm	/^    f011070b:	00 00 00 $/;"	l
f011070e	obj/kern/kernel.asm	/^    f011070e:	89 d2                	mov    %edx,%edx$/;"	l
f0110710	obj/kern/kernel.asm	/^    f0110710:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f0110714	obj/kern/kernel.asm	/^    f0110714:	88 4c 02 0c          	mov    %cl,0xc(%rdx,%rax,1)$/;"	l
f0110718	obj/kern/kernel.asm	/^    f0110718:	8b 4d fc             	mov    -0x4(%rbp),%ecx$/;"	l
f011071b	obj/kern/kernel.asm	/^    f011071b:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
f011071e	obj/kern/kernel.asm	/^    f011071e:	48 b8 20 90 a8 f1 00 	mov    $0xf1a89020,%rax$/;"	l
f0110725	obj/kern/kernel.asm	/^    f0110725:	00 00 00 $/;"	l
f0110728	obj/kern/kernel.asm	/^    f0110728:	89 d2                	mov    %edx,%edx$/;"	l
f011072a	obj/kern/kernel.asm	/^    f011072a:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f011072e	obj/kern/kernel.asm	/^    f011072e:	0f b6 44 02 0b       	movzbl 0xb(%rdx,%rax,1),%eax$/;"	l
f0110733	obj/kern/kernel.asm	/^    f0110733:	89 c2                	mov    %eax,%edx$/;"	l
f0110735	obj/kern/kernel.asm	/^    f0110735:	83 ca 08             	or     $0x8,%edx$/;"	l
f0110738	obj/kern/kernel.asm	/^    f0110738:	48 b8 20 90 a8 f1 00 	mov    $0xf1a89020,%rax$/;"	l
f011073f	obj/kern/kernel.asm	/^    f011073f:	00 00 00 $/;"	l
f0110742	obj/kern/kernel.asm	/^    f0110742:	89 c9                	mov    %ecx,%ecx$/;"	l
f0110744	obj/kern/kernel.asm	/^    f0110744:	48 c1 e1 04          	shl    $0x4,%rcx$/;"	l
f0110748	obj/kern/kernel.asm	/^    f0110748:	88 54 01 0b          	mov    %dl,0xb(%rcx,%rax,1)$/;"	l
f011074c	obj/kern/kernel.asm	/^    f011074c:	8b 4d fc             	mov    -0x4(%rbp),%ecx$/;"	l
f011074f	obj/kern/kernel.asm	/^    f011074f:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
f0110752	obj/kern/kernel.asm	/^    f0110752:	48 b8 20 90 a8 f1 00 	mov    $0xf1a89020,%rax$/;"	l
f0110759	obj/kern/kernel.asm	/^    f0110759:	00 00 00 $/;"	l
f011075c	obj/kern/kernel.asm	/^    f011075c:	89 d2                	mov    %edx,%edx$/;"	l
f011075e	obj/kern/kernel.asm	/^    f011075e:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f0110762	obj/kern/kernel.asm	/^    f0110762:	0f b6 44 02 0b       	movzbl 0xb(%rdx,%rax,1),%eax$/;"	l
f0110767	obj/kern/kernel.asm	/^    f0110767:	89 c2                	mov    %eax,%edx$/;"	l
f0110769	obj/kern/kernel.asm	/^    f0110769:	83 ca 01             	or     $0x1,%edx$/;"	l
f011076c	obj/kern/kernel.asm	/^    f011076c:	48 b8 20 90 a8 f1 00 	mov    $0xf1a89020,%rax$/;"	l
f0110773	obj/kern/kernel.asm	/^    f0110773:	00 00 00 $/;"	l
f0110776	obj/kern/kernel.asm	/^    f0110776:	89 c9                	mov    %ecx,%ecx$/;"	l
f0110778	obj/kern/kernel.asm	/^    f0110778:	48 c1 e1 04          	shl    $0x4,%rcx$/;"	l
f011077c	obj/kern/kernel.asm	/^    f011077c:	88 54 01 0b          	mov    %dl,0xb(%rcx,%rax,1)$/;"	l
f0110780	obj/kern/kernel.asm	/^    f0110780:	48 b8 78 77 a2 f1 00 	mov    $0xf1a27778,%rax$/;"	l
f0110787	obj/kern/kernel.asm	/^    f0110787:	00 00 00 $/;"	l
f011078a	obj/kern/kernel.asm	/^    f011078a:	48 8b 00             	mov    (%rax),%rax$/;"	l
f011078d	obj/kern/kernel.asm	/^    f011078d:	48 05 18 38 00 00    	add    $0x3818,%rax$/;"	l
f0110793	obj/kern/kernel.asm	/^    f0110793:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
f0110796	obj/kern/kernel.asm	/^    f0110796:	83 c2 01             	add    $0x1,%edx$/;"	l
f0110799	obj/kern/kernel.asm	/^    f0110799:	83 e2 3f             	and    $0x3f,%edx$/;"	l
f011079c	obj/kern/kernel.asm	/^    f011079c:	89 10                	mov    %edx,(%rax)$/;"	l
f011079e	obj/kern/kernel.asm	/^    f011079e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01107a3	obj/kern/kernel.asm	/^    f01107a3:	eb 05                	jmp    fffffffff01107aa <end+0xfffffffefe66f40a>$/;"	l
f01107a5	obj/kern/kernel.asm	/^    f01107a5:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax$/;"	l
f01107aa	obj/kern/kernel.asm	/^    f01107aa:	c9                   	leaveq $/;"	l
f01107ab	obj/kern/kernel.asm	/^    f01107ab:	c3                   	retq   $/;"	l
f01107ac	obj/kern/kernel.asm	/^    f01107ac:	55                   	push   %rbp$/;"	l
f01107ad	obj/kern/kernel.asm	/^    f01107ad:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f01107b0	obj/kern/kernel.asm	/^    f01107b0:	48 83 ec 20          	sub    $0x20,%rsp$/;"	l
f01107b4	obj/kern/kernel.asm	/^    f01107b4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
f01107b8	obj/kern/kernel.asm	/^    f01107b8:	48 b8 78 77 a2 f1 00 	mov    $0xf1a27778,%rax$/;"	l
f01107bf	obj/kern/kernel.asm	/^    f01107bf:	00 00 00 $/;"	l
f01107c2	obj/kern/kernel.asm	/^    f01107c2:	48 8b 00             	mov    (%rax),%rax$/;"	l
f01107c5	obj/kern/kernel.asm	/^    f01107c5:	48 05 18 28 00 00    	add    $0x2818,%rax$/;"	l
f01107cb	obj/kern/kernel.asm	/^    f01107cb:	8b 00                	mov    (%rax),%eax$/;"	l
f01107cd	obj/kern/kernel.asm	/^    f01107cd:	89 45 f8             	mov    %eax,-0x8(%rbp)$/;"	l
f01107d0	obj/kern/kernel.asm	/^    f01107d0:	8b 55 f8             	mov    -0x8(%rbp),%edx$/;"	l
f01107d3	obj/kern/kernel.asm	/^    f01107d3:	48 b8 a0 0f aa f1 00 	mov    $0xf1aa0fa0,%rax$/;"	l
f01107da	obj/kern/kernel.asm	/^    f01107da:	00 00 00 $/;"	l
f01107dd	obj/kern/kernel.asm	/^    f01107dd:	89 d2                	mov    %edx,%edx$/;"	l
f01107df	obj/kern/kernel.asm	/^    f01107df:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f01107e3	obj/kern/kernel.asm	/^    f01107e3:	0f b6 44 02 0c       	movzbl 0xc(%rdx,%rax,1),%eax$/;"	l
f01107e8	obj/kern/kernel.asm	/^    f01107e8:	0f b6 c0             	movzbl %al,%eax$/;"	l
f01107eb	obj/kern/kernel.asm	/^    f01107eb:	83 e0 01             	and    $0x1,%eax$/;"	l
f01107ee	obj/kern/kernel.asm	/^    f01107ee:	84 c0                	test   %al,%al$/;"	l
f01107f0	obj/kern/kernel.asm	/^    f01107f0:	0f 84 27 01 00 00    	je     fffffffff011091d <end+0xfffffffefe66f57d>$/;"	l
f01107f6	obj/kern/kernel.asm	/^    f01107f6:	8b 55 f8             	mov    -0x8(%rbp),%edx$/;"	l
f01107f9	obj/kern/kernel.asm	/^    f01107f9:	48 b8 a0 0f aa f1 00 	mov    $0xf1aa0fa0,%rax$/;"	l
f0110800	obj/kern/kernel.asm	/^    f0110800:	00 00 00 $/;"	l
f0110803	obj/kern/kernel.asm	/^    f0110803:	89 d2                	mov    %edx,%edx$/;"	l
f0110805	obj/kern/kernel.asm	/^    f0110805:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f0110809	obj/kern/kernel.asm	/^    f0110809:	0f b6 44 02 0c       	movzbl 0xc(%rdx,%rax,1),%eax$/;"	l
f011080e	obj/kern/kernel.asm	/^    f011080e:	0f b6 c0             	movzbl %al,%eax$/;"	l
f0110811	obj/kern/kernel.asm	/^    f0110811:	83 e0 02             	and    $0x2,%eax$/;"	l
f0110814	obj/kern/kernel.asm	/^    f0110814:	85 c0                	test   %eax,%eax$/;"	l
f0110816	obj/kern/kernel.asm	/^    f0110816:	75 2a                	jne    fffffffff0110842 <end+0xfffffffefe66f4a2>$/;"	l
f0110818	obj/kern/kernel.asm	/^    f0110818:	48 ba 95 37 11 f0 00 	mov    $0xf0113795,%rdx$/;"	l
f011081f	obj/kern/kernel.asm	/^    f011081f:	00 00 00 $/;"	l
f0110822	obj/kern/kernel.asm	/^    f0110822:	be a2 00 00 00       	mov    $0xa2,%esi$/;"	l
f0110827	obj/kern/kernel.asm	/^    f0110827:	48 bf 6c 37 11 f0 00 	mov    $0xf011376c,%rdi$/;"	l
f011082e	obj/kern/kernel.asm	/^    f011082e:	00 00 00 $/;"	l
f0110831	obj/kern/kernel.asm	/^    f0110831:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0110836	obj/kern/kernel.asm	/^    f0110836:	48 b9 18 05 10 f0 00 	mov    $0xf0100518,%rcx$/;"	l
f011083d	obj/kern/kernel.asm	/^    f011083d:	00 00 00 $/;"	l
f0110840	obj/kern/kernel.asm	/^    f0110840:	ff d1                	callq  *%rcx$/;"	l
f0110842	obj/kern/kernel.asm	/^    f0110842:	8b 55 f8             	mov    -0x8(%rbp),%edx$/;"	l
f0110845	obj/kern/kernel.asm	/^    f0110845:	48 b8 a0 0f aa f1 00 	mov    $0xf1aa0fa0,%rax$/;"	l
f011084c	obj/kern/kernel.asm	/^    f011084c:	00 00 00 $/;"	l
f011084f	obj/kern/kernel.asm	/^    f011084f:	89 d2                	mov    %edx,%edx$/;"	l
f0110851	obj/kern/kernel.asm	/^    f0110851:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f0110855	obj/kern/kernel.asm	/^    f0110855:	0f b7 44 02 08       	movzwl 0x8(%rdx,%rax,1),%eax$/;"	l
f011085a	obj/kern/kernel.asm	/^    f011085a:	0f b7 c0             	movzwl %ax,%eax$/;"	l
f011085d	obj/kern/kernel.asm	/^    f011085d:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
f0110860	obj/kern/kernel.asm	/^    f0110860:	8b 55 fc             	mov    -0x4(%rbp),%edx$/;"	l
f0110863	obj/kern/kernel.asm	/^    f0110863:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
f0110866	obj/kern/kernel.asm	/^    f0110866:	89 c0                	mov    %eax,%eax$/;"	l
f0110868	obj/kern/kernel.asm	/^    f0110868:	48 89 c1             	mov    %rax,%rcx$/;"	l
f011086b	obj/kern/kernel.asm	/^    f011086b:	48 c1 e1 0b          	shl    $0xb,%rcx$/;"	l
f011086f	obj/kern/kernel.asm	/^    f011086f:	48 b8 20 90 a6 f1 00 	mov    $0xf1a69020,%rax$/;"	l
f0110876	obj/kern/kernel.asm	/^    f0110876:	00 00 00 $/;"	l
f0110879	obj/kern/kernel.asm	/^    f0110879:	48 01 c1             	add    %rax,%rcx$/;"	l
f011087c	obj/kern/kernel.asm	/^    f011087c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f0110880	obj/kern/kernel.asm	/^    f0110880:	48 89 ce             	mov    %rcx,%rsi$/;"	l
f0110883	obj/kern/kernel.asm	/^    f0110883:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0110886	obj/kern/kernel.asm	/^    f0110886:	48 b8 cd ee 10 f0 00 	mov    $0xf010eecd,%rax$/;"	l
f011088d	obj/kern/kernel.asm	/^    f011088d:	00 00 00 $/;"	l
f0110890	obj/kern/kernel.asm	/^    f0110890:	ff d0                	callq  *%rax$/;"	l
f0110892	obj/kern/kernel.asm	/^    f0110892:	8b 55 f8             	mov    -0x8(%rbp),%edx$/;"	l
f0110895	obj/kern/kernel.asm	/^    f0110895:	8b 4d f8             	mov    -0x8(%rbp),%ecx$/;"	l
f0110898	obj/kern/kernel.asm	/^    f0110898:	48 b8 a0 0f aa f1 00 	mov    $0xf1aa0fa0,%rax$/;"	l
f011089f	obj/kern/kernel.asm	/^    f011089f:	00 00 00 $/;"	l
f01108a2	obj/kern/kernel.asm	/^    f01108a2:	89 c9                	mov    %ecx,%ecx$/;"	l
f01108a4	obj/kern/kernel.asm	/^    f01108a4:	48 c1 e1 04          	shl    $0x4,%rcx$/;"	l
f01108a8	obj/kern/kernel.asm	/^    f01108a8:	0f b6 44 01 0c       	movzbl 0xc(%rcx,%rax,1),%eax$/;"	l
f01108ad	obj/kern/kernel.asm	/^    f01108ad:	89 c1                	mov    %eax,%ecx$/;"	l
f01108af	obj/kern/kernel.asm	/^    f01108af:	83 e1 fe             	and    $0xfffffffffffffffe,%ecx$/;"	l
f01108b2	obj/kern/kernel.asm	/^    f01108b2:	48 b8 a0 0f aa f1 00 	mov    $0xf1aa0fa0,%rax$/;"	l
f01108b9	obj/kern/kernel.asm	/^    f01108b9:	00 00 00 $/;"	l
f01108bc	obj/kern/kernel.asm	/^    f01108bc:	89 d2                	mov    %edx,%edx$/;"	l
f01108be	obj/kern/kernel.asm	/^    f01108be:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f01108c2	obj/kern/kernel.asm	/^    f01108c2:	88 4c 02 0c          	mov    %cl,0xc(%rdx,%rax,1)$/;"	l
f01108c6	obj/kern/kernel.asm	/^    f01108c6:	8b 55 f8             	mov    -0x8(%rbp),%edx$/;"	l
f01108c9	obj/kern/kernel.asm	/^    f01108c9:	8b 4d f8             	mov    -0x8(%rbp),%ecx$/;"	l
f01108cc	obj/kern/kernel.asm	/^    f01108cc:	48 b8 a0 0f aa f1 00 	mov    $0xf1aa0fa0,%rax$/;"	l
f01108d3	obj/kern/kernel.asm	/^    f01108d3:	00 00 00 $/;"	l
f01108d6	obj/kern/kernel.asm	/^    f01108d6:	89 c9                	mov    %ecx,%ecx$/;"	l
f01108d8	obj/kern/kernel.asm	/^    f01108d8:	48 c1 e1 04          	shl    $0x4,%rcx$/;"	l
f01108dc	obj/kern/kernel.asm	/^    f01108dc:	0f b6 44 01 0c       	movzbl 0xc(%rcx,%rax,1),%eax$/;"	l
f01108e1	obj/kern/kernel.asm	/^    f01108e1:	89 c1                	mov    %eax,%ecx$/;"	l
f01108e3	obj/kern/kernel.asm	/^    f01108e3:	83 e1 fd             	and    $0xfffffffffffffffd,%ecx$/;"	l
f01108e6	obj/kern/kernel.asm	/^    f01108e6:	48 b8 a0 0f aa f1 00 	mov    $0xf1aa0fa0,%rax$/;"	l
f01108ed	obj/kern/kernel.asm	/^    f01108ed:	00 00 00 $/;"	l
f01108f0	obj/kern/kernel.asm	/^    f01108f0:	89 d2                	mov    %edx,%edx$/;"	l
f01108f2	obj/kern/kernel.asm	/^    f01108f2:	48 c1 e2 04          	shl    $0x4,%rdx$/;"	l
f01108f6	obj/kern/kernel.asm	/^    f01108f6:	88 4c 02 0c          	mov    %cl,0xc(%rdx,%rax,1)$/;"	l
f01108fa	obj/kern/kernel.asm	/^    f01108fa:	48 b8 78 77 a2 f1 00 	mov    $0xf1a27778,%rax$/;"	l
f0110901	obj/kern/kernel.asm	/^    f0110901:	00 00 00 $/;"	l
f0110904	obj/kern/kernel.asm	/^    f0110904:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0110907	obj/kern/kernel.asm	/^    f0110907:	48 05 18 28 00 00    	add    $0x2818,%rax$/;"	l
f011090d	obj/kern/kernel.asm	/^    f011090d:	8b 55 f8             	mov    -0x8(%rbp),%edx$/;"	l
f0110910	obj/kern/kernel.asm	/^    f0110910:	83 c2 01             	add    $0x1,%edx$/;"	l
f0110913	obj/kern/kernel.asm	/^    f0110913:	83 e2 3f             	and    $0x3f,%edx$/;"	l
f0110916	obj/kern/kernel.asm	/^    f0110916:	89 10                	mov    %edx,(%rax)$/;"	l
f0110918	obj/kern/kernel.asm	/^    f0110918:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
f011091b	obj/kern/kernel.asm	/^    f011091b:	eb 05                	jmp    fffffffff0110922 <end+0xfffffffefe66f582>$/;"	l
f011091d	obj/kern/kernel.asm	/^    f011091d:	b8 ef ff ff ff       	mov    $0xffffffef,%eax$/;"	l
f0110922	obj/kern/kernel.asm	/^    f0110922:	c9                   	leaveq $/;"	l
f0110923	obj/kern/kernel.asm	/^    f0110923:	c3                   	retq   $/;"	l
f0110924	obj/kern/kernel.asm	/^    f0110924:	55                   	push   %rbp$/;"	l
f0110925	obj/kern/kernel.asm	/^    f0110925:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f0110928	obj/kern/kernel.asm	/^    f0110928:	53                   	push   %rbx$/;"	l
f0110929	obj/kern/kernel.asm	/^    f0110929:	48 83 ec 28          	sub    $0x28,%rsp$/;"	l
f011092d	obj/kern/kernel.asm	/^    f011092d:	89 7d dc             	mov    %edi,-0x24(%rbp)$/;"	l
f0110930	obj/kern/kernel.asm	/^    f0110930:	89 75 d8             	mov    %esi,-0x28(%rbp)$/;"	l
f0110933	obj/kern/kernel.asm	/^    f0110933:	89 55 d4             	mov    %edx,-0x2c(%rbp)$/;"	l
f0110936	obj/kern/kernel.asm	/^    f0110936:	89 4d d0             	mov    %ecx,-0x30(%rbp)$/;"	l
f0110939	obj/kern/kernel.asm	/^    f0110939:	81 7d dc ff 00 00 00 	cmpl   $0xff,-0x24(%rbp)$/;"	l
f0110940	obj/kern/kernel.asm	/^    f0110940:	76 34                	jbe    fffffffff0110976 <end+0xfffffffefe66f5d6>$/;"	l
f0110942	obj/kern/kernel.asm	/^    f0110942:	48 b9 b0 37 11 f0 00 	mov    $0xf01137b0,%rcx$/;"	l
f0110949	obj/kern/kernel.asm	/^    f0110949:	00 00 00 $/;"	l
f011094c	obj/kern/kernel.asm	/^    f011094c:	48 ba ba 37 11 f0 00 	mov    $0xf01137ba,%rdx$/;"	l
f0110953	obj/kern/kernel.asm	/^    f0110953:	00 00 00 $/;"	l
f0110956	obj/kern/kernel.asm	/^    f0110956:	be 2b 00 00 00       	mov    $0x2b,%esi$/;"	l
f011095b	obj/kern/kernel.asm	/^    f011095b:	48 bf cf 37 11 f0 00 	mov    $0xf01137cf,%rdi$/;"	l
f0110962	obj/kern/kernel.asm	/^    f0110962:	00 00 00 $/;"	l
f0110965	obj/kern/kernel.asm	/^    f0110965:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f011096a	obj/kern/kernel.asm	/^    f011096a:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0110971	obj/kern/kernel.asm	/^    f0110971:	00 00 00 $/;"	l
f0110974	obj/kern/kernel.asm	/^    f0110974:	ff d3                	callq  *%rbx$/;"	l
f0110976	obj/kern/kernel.asm	/^    f0110976:	83 7d d8 1f          	cmpl   $0x1f,-0x28(%rbp)$/;"	l
f011097a	obj/kern/kernel.asm	/^    f011097a:	76 34                	jbe    fffffffff01109b0 <end+0xfffffffefe66f610>$/;"	l
f011097c	obj/kern/kernel.asm	/^    f011097c:	48 b9 da 37 11 f0 00 	mov    $0xf01137da,%rcx$/;"	l
f0110983	obj/kern/kernel.asm	/^    f0110983:	00 00 00 $/;"	l
f0110986	obj/kern/kernel.asm	/^    f0110986:	48 ba ba 37 11 f0 00 	mov    $0xf01137ba,%rdx$/;"	l
f011098d	obj/kern/kernel.asm	/^    f011098d:	00 00 00 $/;"	l
f0110990	obj/kern/kernel.asm	/^    f0110990:	be 2c 00 00 00       	mov    $0x2c,%esi$/;"	l
f0110995	obj/kern/kernel.asm	/^    f0110995:	48 bf cf 37 11 f0 00 	mov    $0xf01137cf,%rdi$/;"	l
f011099c	obj/kern/kernel.asm	/^    f011099c:	00 00 00 $/;"	l
f011099f	obj/kern/kernel.asm	/^    f011099f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01109a4	obj/kern/kernel.asm	/^    f01109a4:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f01109ab	obj/kern/kernel.asm	/^    f01109ab:	00 00 00 $/;"	l
f01109ae	obj/kern/kernel.asm	/^    f01109ae:	ff d3                	callq  *%rbx$/;"	l
f01109b0	obj/kern/kernel.asm	/^    f01109b0:	83 7d d4 07          	cmpl   $0x7,-0x2c(%rbp)$/;"	l
f01109b4	obj/kern/kernel.asm	/^    f01109b4:	76 34                	jbe    fffffffff01109ea <end+0xfffffffefe66f64a>$/;"	l
f01109b6	obj/kern/kernel.asm	/^    f01109b6:	48 b9 e3 37 11 f0 00 	mov    $0xf01137e3,%rcx$/;"	l
f01109bd	obj/kern/kernel.asm	/^    f01109bd:	00 00 00 $/;"	l
f01109c0	obj/kern/kernel.asm	/^    f01109c0:	48 ba ba 37 11 f0 00 	mov    $0xf01137ba,%rdx$/;"	l
f01109c7	obj/kern/kernel.asm	/^    f01109c7:	00 00 00 $/;"	l
f01109ca	obj/kern/kernel.asm	/^    f01109ca:	be 2d 00 00 00       	mov    $0x2d,%esi$/;"	l
f01109cf	obj/kern/kernel.asm	/^    f01109cf:	48 bf cf 37 11 f0 00 	mov    $0xf01137cf,%rdi$/;"	l
f01109d6	obj/kern/kernel.asm	/^    f01109d6:	00 00 00 $/;"	l
f01109d9	obj/kern/kernel.asm	/^    f01109d9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01109de	obj/kern/kernel.asm	/^    f01109de:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f01109e5	obj/kern/kernel.asm	/^    f01109e5:	00 00 00 $/;"	l
f01109e8	obj/kern/kernel.asm	/^    f01109e8:	ff d3                	callq  *%rbx$/;"	l
f01109ea	obj/kern/kernel.asm	/^    f01109ea:	81 7d d0 ff 00 00 00 	cmpl   $0xff,-0x30(%rbp)$/;"	l
f01109f1	obj/kern/kernel.asm	/^    f01109f1:	76 34                	jbe    fffffffff0110a27 <end+0xfffffffefe66f687>$/;"	l
f01109f3	obj/kern/kernel.asm	/^    f01109f3:	48 b9 ec 37 11 f0 00 	mov    $0xf01137ec,%rcx$/;"	l
f01109fa	obj/kern/kernel.asm	/^    f01109fa:	00 00 00 $/;"	l
f01109fd	obj/kern/kernel.asm	/^    f01109fd:	48 ba ba 37 11 f0 00 	mov    $0xf01137ba,%rdx$/;"	l
f0110a04	obj/kern/kernel.asm	/^    f0110a04:	00 00 00 $/;"	l
f0110a07	obj/kern/kernel.asm	/^    f0110a07:	be 2e 00 00 00       	mov    $0x2e,%esi$/;"	l
f0110a0c	obj/kern/kernel.asm	/^    f0110a0c:	48 bf cf 37 11 f0 00 	mov    $0xf01137cf,%rdi$/;"	l
f0110a13	obj/kern/kernel.asm	/^    f0110a13:	00 00 00 $/;"	l
f0110a16	obj/kern/kernel.asm	/^    f0110a16:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0110a1b	obj/kern/kernel.asm	/^    f0110a1b:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0110a22	obj/kern/kernel.asm	/^    f0110a22:	00 00 00 $/;"	l
f0110a25	obj/kern/kernel.asm	/^    f0110a25:	ff d3                	callq  *%rbx$/;"	l
f0110a27	obj/kern/kernel.asm	/^    f0110a27:	8b 45 d0             	mov    -0x30(%rbp),%eax$/;"	l
f0110a2a	obj/kern/kernel.asm	/^    f0110a2a:	83 e0 03             	and    $0x3,%eax$/;"	l
f0110a2d	obj/kern/kernel.asm	/^    f0110a2d:	85 c0                	test   %eax,%eax$/;"	l
f0110a2f	obj/kern/kernel.asm	/^    f0110a2f:	74 34                	je     fffffffff0110a65 <end+0xfffffffefe66f6c5>$/;"	l
f0110a31	obj/kern/kernel.asm	/^    f0110a31:	48 b9 f9 37 11 f0 00 	mov    $0xf01137f9,%rcx$/;"	l
f0110a38	obj/kern/kernel.asm	/^    f0110a38:	00 00 00 $/;"	l
f0110a3b	obj/kern/kernel.asm	/^    f0110a3b:	48 ba ba 37 11 f0 00 	mov    $0xf01137ba,%rdx$/;"	l
f0110a42	obj/kern/kernel.asm	/^    f0110a42:	00 00 00 $/;"	l
f0110a45	obj/kern/kernel.asm	/^    f0110a45:	be 2f 00 00 00       	mov    $0x2f,%esi$/;"	l
f0110a4a	obj/kern/kernel.asm	/^    f0110a4a:	48 bf cf 37 11 f0 00 	mov    $0xf01137cf,%rdi$/;"	l
f0110a51	obj/kern/kernel.asm	/^    f0110a51:	00 00 00 $/;"	l
f0110a54	obj/kern/kernel.asm	/^    f0110a54:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0110a59	obj/kern/kernel.asm	/^    f0110a59:	48 bb 18 05 10 f0 00 	mov    $0xf0100518,%rbx$/;"	l
f0110a60	obj/kern/kernel.asm	/^    f0110a60:	00 00 00 $/;"	l
f0110a63	obj/kern/kernel.asm	/^    f0110a63:	ff d3                	callq  *%rbx$/;"	l
f0110a65	obj/kern/kernel.asm	/^    f0110a65:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
f0110a68	obj/kern/kernel.asm	/^    f0110a68:	89 c2                	mov    %eax,%edx$/;"	l
f0110a6a	obj/kern/kernel.asm	/^    f0110a6a:	c1 e2 10             	shl    $0x10,%edx$/;"	l
f0110a6d	obj/kern/kernel.asm	/^    f0110a6d:	8b 45 d8             	mov    -0x28(%rbp),%eax$/;"	l
f0110a70	obj/kern/kernel.asm	/^    f0110a70:	c1 e0 0b             	shl    $0xb,%eax$/;"	l
f0110a73	obj/kern/kernel.asm	/^    f0110a73:	09 c2                	or     %eax,%edx$/;"	l
f0110a75	obj/kern/kernel.asm	/^    f0110a75:	8b 45 d4             	mov    -0x2c(%rbp),%eax$/;"	l
f0110a78	obj/kern/kernel.asm	/^    f0110a78:	c1 e0 08             	shl    $0x8,%eax$/;"	l
f0110a7b	obj/kern/kernel.asm	/^    f0110a7b:	09 d0                	or     %edx,%eax$/;"	l
f0110a7d	obj/kern/kernel.asm	/^    f0110a7d:	0b 45 d0             	or     -0x30(%rbp),%eax$/;"	l
f0110a80	obj/kern/kernel.asm	/^    f0110a80:	0d 00 00 00 80       	or     $0x80000000,%eax$/;"	l
f0110a85	obj/kern/kernel.asm	/^    f0110a85:	89 45 e4             	mov    %eax,-0x1c(%rbp)$/;"	l
f0110a88	obj/kern/kernel.asm	/^    f0110a88:	48 b8 04 07 13 f0 00 	mov    $0xf0130704,%rax$/;"	l
f0110a8f	obj/kern/kernel.asm	/^    f0110a8f:	00 00 00 $/;"	l
f0110a92	obj/kern/kernel.asm	/^    f0110a92:	8b 00                	mov    (%rax),%eax$/;"	l
f0110a94	obj/kern/kernel.asm	/^    f0110a94:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
f0110a97	obj/kern/kernel.asm	/^    f0110a97:	8b 45 e4             	mov    -0x1c(%rbp),%eax$/;"	l
f0110a9a	obj/kern/kernel.asm	/^    f0110a9a:	89 45 e8             	mov    %eax,-0x18(%rbp)$/;"	l
f0110a9d	obj/kern/kernel.asm	/^    f0110a9d:	8b 45 e8             	mov    -0x18(%rbp),%eax$/;"	l
f0110aa0	obj/kern/kernel.asm	/^    f0110aa0:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
f0110aa3	obj/kern/kernel.asm	/^    f0110aa3:	ef                   	out    %eax,(%dx)$/;"	l
f0110aa4	obj/kern/kernel.asm	/^    f0110aa4:	48 83 c4 28          	add    $0x28,%rsp$/;"	l
f0110aa8	obj/kern/kernel.asm	/^    f0110aa8:	5b                   	pop    %rbx$/;"	l
f0110aa9	obj/kern/kernel.asm	/^    f0110aa9:	c9                   	leaveq $/;"	l
f0110aaa	obj/kern/kernel.asm	/^    f0110aaa:	c3                   	retq   $/;"	l
f0110aab	obj/kern/kernel.asm	/^    f0110aab:	55                   	push   %rbp$/;"	l
f0110aac	obj/kern/kernel.asm	/^    f0110aac:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f0110aaf	obj/kern/kernel.asm	/^    f0110aaf:	53                   	push   %rbx$/;"	l
f0110ab0	obj/kern/kernel.asm	/^    f0110ab0:	48 83 ec 28          	sub    $0x28,%rsp$/;"	l
f0110ab4	obj/kern/kernel.asm	/^    f0110ab4:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)$/;"	l
f0110ab8	obj/kern/kernel.asm	/^    f0110ab8:	89 75 d4             	mov    %esi,-0x2c(%rbp)$/;"	l
f0110abb	obj/kern/kernel.asm	/^    f0110abb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f0110abf	obj/kern/kernel.asm	/^    f0110abf:	8b 50 0c             	mov    0xc(%rax),%edx$/;"	l
f0110ac2	obj/kern/kernel.asm	/^    f0110ac2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f0110ac6	obj/kern/kernel.asm	/^    f0110ac6:	8b 58 08             	mov    0x8(%rax),%ebx$/;"	l
f0110ac9	obj/kern/kernel.asm	/^    f0110ac9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f0110acd	obj/kern/kernel.asm	/^    f0110acd:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0110ad0	obj/kern/kernel.asm	/^    f0110ad0:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
f0110ad3	obj/kern/kernel.asm	/^    f0110ad3:	8b 4d d4             	mov    -0x2c(%rbp),%ecx$/;"	l
f0110ad6	obj/kern/kernel.asm	/^    f0110ad6:	89 de                	mov    %ebx,%esi$/;"	l
f0110ad8	obj/kern/kernel.asm	/^    f0110ad8:	89 c7                	mov    %eax,%edi$/;"	l
f0110ada	obj/kern/kernel.asm	/^    f0110ada:	48 b8 24 09 11 f0 00 	mov    $0xf0110924,%rax$/;"	l
f0110ae1	obj/kern/kernel.asm	/^    f0110ae1:	00 00 00 $/;"	l
f0110ae4	obj/kern/kernel.asm	/^    f0110ae4:	ff d0                	callq  *%rax$/;"	l
f0110ae6	obj/kern/kernel.asm	/^    f0110ae6:	48 b8 08 07 13 f0 00 	mov    $0xf0130708,%rax$/;"	l
f0110aed	obj/kern/kernel.asm	/^    f0110aed:	00 00 00 $/;"	l
f0110af0	obj/kern/kernel.asm	/^    f0110af0:	8b 00                	mov    (%rax),%eax$/;"	l
f0110af2	obj/kern/kernel.asm	/^    f0110af2:	89 45 e8             	mov    %eax,-0x18(%rbp)$/;"	l
f0110af5	obj/kern/kernel.asm	/^    f0110af5:	8b 45 e8             	mov    -0x18(%rbp),%eax$/;"	l
f0110af8	obj/kern/kernel.asm	/^    f0110af8:	89 c2                	mov    %eax,%edx$/;"	l
f0110afa	obj/kern/kernel.asm	/^    f0110afa:	ed                   	in     (%dx),%eax$/;"	l
f0110afb	obj/kern/kernel.asm	/^    f0110afb:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
f0110afe	obj/kern/kernel.asm	/^    f0110afe:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
f0110b01	obj/kern/kernel.asm	/^    f0110b01:	48 83 c4 28          	add    $0x28,%rsp$/;"	l
f0110b05	obj/kern/kernel.asm	/^    f0110b05:	5b                   	pop    %rbx$/;"	l
f0110b06	obj/kern/kernel.asm	/^    f0110b06:	c9                   	leaveq $/;"	l
f0110b07	obj/kern/kernel.asm	/^    f0110b07:	c3                   	retq   $/;"	l
f0110b08	obj/kern/kernel.asm	/^    f0110b08:	55                   	push   %rbp$/;"	l
f0110b09	obj/kern/kernel.asm	/^    f0110b09:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f0110b0c	obj/kern/kernel.asm	/^    f0110b0c:	53                   	push   %rbx$/;"	l
f0110b0d	obj/kern/kernel.asm	/^    f0110b0d:	48 83 ec 28          	sub    $0x28,%rsp$/;"	l
f0110b11	obj/kern/kernel.asm	/^    f0110b11:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)$/;"	l
f0110b15	obj/kern/kernel.asm	/^    f0110b15:	89 75 d4             	mov    %esi,-0x2c(%rbp)$/;"	l
f0110b18	obj/kern/kernel.asm	/^    f0110b18:	89 55 d0             	mov    %edx,-0x30(%rbp)$/;"	l
f0110b1b	obj/kern/kernel.asm	/^    f0110b1b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f0110b1f	obj/kern/kernel.asm	/^    f0110b1f:	8b 50 0c             	mov    0xc(%rax),%edx$/;"	l
f0110b22	obj/kern/kernel.asm	/^    f0110b22:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f0110b26	obj/kern/kernel.asm	/^    f0110b26:	8b 58 08             	mov    0x8(%rax),%ebx$/;"	l
f0110b29	obj/kern/kernel.asm	/^    f0110b29:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f0110b2d	obj/kern/kernel.asm	/^    f0110b2d:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0110b30	obj/kern/kernel.asm	/^    f0110b30:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
f0110b33	obj/kern/kernel.asm	/^    f0110b33:	8b 4d d4             	mov    -0x2c(%rbp),%ecx$/;"	l
f0110b36	obj/kern/kernel.asm	/^    f0110b36:	89 de                	mov    %ebx,%esi$/;"	l
f0110b38	obj/kern/kernel.asm	/^    f0110b38:	89 c7                	mov    %eax,%edi$/;"	l
f0110b3a	obj/kern/kernel.asm	/^    f0110b3a:	48 b8 24 09 11 f0 00 	mov    $0xf0110924,%rax$/;"	l
f0110b41	obj/kern/kernel.asm	/^    f0110b41:	00 00 00 $/;"	l
f0110b44	obj/kern/kernel.asm	/^    f0110b44:	ff d0                	callq  *%rax$/;"	l
f0110b46	obj/kern/kernel.asm	/^    f0110b46:	48 b8 08 07 13 f0 00 	mov    $0xf0130708,%rax$/;"	l
f0110b4d	obj/kern/kernel.asm	/^    f0110b4d:	00 00 00 $/;"	l
f0110b50	obj/kern/kernel.asm	/^    f0110b50:	8b 00                	mov    (%rax),%eax$/;"	l
f0110b52	obj/kern/kernel.asm	/^    f0110b52:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
f0110b55	obj/kern/kernel.asm	/^    f0110b55:	8b 45 d0             	mov    -0x30(%rbp),%eax$/;"	l
f0110b58	obj/kern/kernel.asm	/^    f0110b58:	89 45 e8             	mov    %eax,-0x18(%rbp)$/;"	l
f0110b5b	obj/kern/kernel.asm	/^    f0110b5b:	8b 45 e8             	mov    -0x18(%rbp),%eax$/;"	l
f0110b5e	obj/kern/kernel.asm	/^    f0110b5e:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
f0110b61	obj/kern/kernel.asm	/^    f0110b61:	ef                   	out    %eax,(%dx)$/;"	l
f0110b62	obj/kern/kernel.asm	/^    f0110b62:	48 83 c4 28          	add    $0x28,%rsp$/;"	l
f0110b66	obj/kern/kernel.asm	/^    f0110b66:	5b                   	pop    %rbx$/;"	l
f0110b67	obj/kern/kernel.asm	/^    f0110b67:	c9                   	leaveq $/;"	l
f0110b68	obj/kern/kernel.asm	/^    f0110b68:	c3                   	retq   $/;"	l
f0110b69	obj/kern/kernel.asm	/^    f0110b69:	55                   	push   %rbp$/;"	l
f0110b6a	obj/kern/kernel.asm	/^    f0110b6a:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f0110b6d	obj/kern/kernel.asm	/^    f0110b6d:	53                   	push   %rbx$/;"	l
f0110b6e	obj/kern/kernel.asm	/^    f0110b6e:	48 83 ec 38          	sub    $0x38,%rsp$/;"	l
f0110b72	obj/kern/kernel.asm	/^    f0110b72:	89 7d dc             	mov    %edi,-0x24(%rbp)$/;"	l
f0110b75	obj/kern/kernel.asm	/^    f0110b75:	89 75 d8             	mov    %esi,-0x28(%rbp)$/;"	l
f0110b78	obj/kern/kernel.asm	/^    f0110b78:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)$/;"	l
f0110b7c	obj/kern/kernel.asm	/^    f0110b7c:	48 89 4d c8          	mov    %rcx,-0x38(%rbp)$/;"	l
f0110b80	obj/kern/kernel.asm	/^    f0110b80:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)$/;"	l
f0110b87	obj/kern/kernel.asm	/^    f0110b87:	e9 8d 00 00 00       	jmpq   fffffffff0110c19 <end+0xfffffffefe66f879>$/;"	l
f0110b8c	obj/kern/kernel.asm	/^    f0110b8c:	8b 45 e8             	mov    -0x18(%rbp),%eax$/;"	l
f0110b8f	obj/kern/kernel.asm	/^    f0110b8f:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
f0110b93	obj/kern/kernel.asm	/^    f0110b93:	48 03 45 d0          	add    -0x30(%rbp),%rax$/;"	l
f0110b97	obj/kern/kernel.asm	/^    f0110b97:	8b 00                	mov    (%rax),%eax$/;"	l
f0110b99	obj/kern/kernel.asm	/^    f0110b99:	3b 45 dc             	cmp    -0x24(%rbp),%eax$/;"	l
f0110b9c	obj/kern/kernel.asm	/^    f0110b9c:	75 77                	jne    fffffffff0110c15 <end+0xfffffffefe66f875>$/;"	l
f0110b9e	obj/kern/kernel.asm	/^    f0110b9e:	8b 45 e8             	mov    -0x18(%rbp),%eax$/;"	l
f0110ba1	obj/kern/kernel.asm	/^    f0110ba1:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
f0110ba5	obj/kern/kernel.asm	/^    f0110ba5:	48 03 45 d0          	add    -0x30(%rbp),%rax$/;"	l
f0110ba9	obj/kern/kernel.asm	/^    f0110ba9:	8b 40 04             	mov    0x4(%rax),%eax$/;"	l
f0110bac	obj/kern/kernel.asm	/^    f0110bac:	3b 45 d8             	cmp    -0x28(%rbp),%eax$/;"	l
f0110baf	obj/kern/kernel.asm	/^    f0110baf:	75 64                	jne    fffffffff0110c15 <end+0xfffffffefe66f875>$/;"	l
f0110bb1	obj/kern/kernel.asm	/^    f0110bb1:	8b 45 e8             	mov    -0x18(%rbp),%eax$/;"	l
f0110bb4	obj/kern/kernel.asm	/^    f0110bb4:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
f0110bb8	obj/kern/kernel.asm	/^    f0110bb8:	48 03 45 d0          	add    -0x30(%rbp),%rax$/;"	l
f0110bbc	obj/kern/kernel.asm	/^    f0110bbc:	48 8b 50 08          	mov    0x8(%rax),%rdx$/;"	l
f0110bc0	obj/kern/kernel.asm	/^    f0110bc0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f0110bc4	obj/kern/kernel.asm	/^    f0110bc4:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0110bc7	obj/kern/kernel.asm	/^    f0110bc7:	ff d2                	callq  *%rdx$/;"	l
f0110bc9	obj/kern/kernel.asm	/^    f0110bc9:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
f0110bcc	obj/kern/kernel.asm	/^    f0110bcc:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)$/;"	l
f0110bd0	obj/kern/kernel.asm	/^    f0110bd0:	7e 05                	jle    fffffffff0110bd7 <end+0xfffffffefe66f837>$/;"	l
f0110bd2	obj/kern/kernel.asm	/^    f0110bd2:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
f0110bd5	obj/kern/kernel.asm	/^    f0110bd5:	eb 5f                	jmp    fffffffff0110c36 <end+0xfffffffefe66f896>$/;"	l
f0110bd7	obj/kern/kernel.asm	/^    f0110bd7:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)$/;"	l
f0110bdb	obj/kern/kernel.asm	/^    f0110bdb:	79 38                	jns    fffffffff0110c15 <end+0xfffffffefe66f875>$/;"	l
f0110bdd	obj/kern/kernel.asm	/^    f0110bdd:	8b 45 e8             	mov    -0x18(%rbp),%eax$/;"	l
f0110be0	obj/kern/kernel.asm	/^    f0110be0:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
f0110be4	obj/kern/kernel.asm	/^    f0110be4:	48 03 45 d0          	add    -0x30(%rbp),%rax$/;"	l
f0110be8	obj/kern/kernel.asm	/^    f0110be8:	48 8b 48 08          	mov    0x8(%rax),%rcx$/;"	l
f0110bec	obj/kern/kernel.asm	/^    f0110bec:	8b 5d ec             	mov    -0x14(%rbp),%ebx$/;"	l
f0110bef	obj/kern/kernel.asm	/^    f0110bef:	8b 55 d8             	mov    -0x28(%rbp),%edx$/;"	l
f0110bf2	obj/kern/kernel.asm	/^    f0110bf2:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
f0110bf5	obj/kern/kernel.asm	/^    f0110bf5:	41 89 d8             	mov    %ebx,%r8d$/;"	l
f0110bf8	obj/kern/kernel.asm	/^    f0110bf8:	89 c6                	mov    %eax,%esi$/;"	l
f0110bfa	obj/kern/kernel.asm	/^    f0110bfa:	48 bf 10 38 11 f0 00 	mov    $0xf0113810,%rdi$/;"	l
f0110c01	obj/kern/kernel.asm	/^    f0110c01:	00 00 00 $/;"	l
f0110c04	obj/kern/kernel.asm	/^    f0110c04:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0110c09	obj/kern/kernel.asm	/^    f0110c09:	48 bb eb 88 10 f0 00 	mov    $0xf01088eb,%rbx$/;"	l
f0110c10	obj/kern/kernel.asm	/^    f0110c10:	00 00 00 $/;"	l
f0110c13	obj/kern/kernel.asm	/^    f0110c13:	ff d3                	callq  *%rbx$/;"	l
f0110c15	obj/kern/kernel.asm	/^    f0110c15:	83 45 e8 01          	addl   $0x1,-0x18(%rbp)$/;"	l
f0110c19	obj/kern/kernel.asm	/^    f0110c19:	8b 45 e8             	mov    -0x18(%rbp),%eax$/;"	l
f0110c1c	obj/kern/kernel.asm	/^    f0110c1c:	48 c1 e0 04          	shl    $0x4,%rax$/;"	l
f0110c20	obj/kern/kernel.asm	/^    f0110c20:	48 03 45 d0          	add    -0x30(%rbp),%rax$/;"	l
f0110c24	obj/kern/kernel.asm	/^    f0110c24:	48 8b 40 08          	mov    0x8(%rax),%rax$/;"	l
f0110c28	obj/kern/kernel.asm	/^    f0110c28:	48 85 c0             	test   %rax,%rax$/;"	l
f0110c2b	obj/kern/kernel.asm	/^    f0110c2b:	0f 85 5b ff ff ff    	jne    fffffffff0110b8c <end+0xfffffffefe66f7ec>$/;"	l
f0110c31	obj/kern/kernel.asm	/^    f0110c31:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0110c36	obj/kern/kernel.asm	/^    f0110c36:	48 83 c4 38          	add    $0x38,%rsp$/;"	l
f0110c3a	obj/kern/kernel.asm	/^    f0110c3a:	5b                   	pop    %rbx$/;"	l
f0110c3b	obj/kern/kernel.asm	/^    f0110c3b:	c9                   	leaveq $/;"	l
f0110c3c	obj/kern/kernel.asm	/^    f0110c3c:	c3                   	retq   $/;"	l
f0110c3d	obj/kern/kernel.asm	/^    f0110c3d:	55                   	push   %rbp$/;"	l
f0110c3e	obj/kern/kernel.asm	/^    f0110c3e:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f0110c41	obj/kern/kernel.asm	/^    f0110c41:	53                   	push   %rbx$/;"	l
f0110c42	obj/kern/kernel.asm	/^    f0110c42:	48 83 ec 18          	sub    $0x18,%rsp$/;"	l
f0110c46	obj/kern/kernel.asm	/^    f0110c46:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)$/;"	l
f0110c4a	obj/kern/kernel.asm	/^    f0110c4a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f0110c4e	obj/kern/kernel.asm	/^    f0110c4e:	8b 40 14             	mov    0x14(%rax),%eax$/;"	l
f0110c51	obj/kern/kernel.asm	/^    f0110c51:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0110c54	obj/kern/kernel.asm	/^    f0110c54:	0f b6 f0             	movzbl %al,%esi$/;"	l
f0110c57	obj/kern/kernel.asm	/^    f0110c57:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f0110c5b	obj/kern/kernel.asm	/^    f0110c5b:	8b 40 14             	mov    0x14(%rax),%eax$/;"	l
f0110c5e	obj/kern/kernel.asm	/^    f0110c5e:	89 c3                	mov    %eax,%ebx$/;"	l
f0110c60	obj/kern/kernel.asm	/^    f0110c60:	c1 eb 18             	shr    $0x18,%ebx$/;"	l
f0110c63	obj/kern/kernel.asm	/^    f0110c63:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f0110c67	obj/kern/kernel.asm	/^    f0110c67:	48 89 c1             	mov    %rax,%rcx$/;"	l
f0110c6a	obj/kern/kernel.asm	/^    f0110c6a:	48 ba 20 07 13 f0 00 	mov    $0xf0130720,%rdx$/;"	l
f0110c71	obj/kern/kernel.asm	/^    f0110c71:	00 00 00 $/;"	l
f0110c74	obj/kern/kernel.asm	/^    f0110c74:	89 df                	mov    %ebx,%edi$/;"	l
f0110c76	obj/kern/kernel.asm	/^    f0110c76:	48 b8 69 0b 11 f0 00 	mov    $0xf0110b69,%rax$/;"	l
f0110c7d	obj/kern/kernel.asm	/^    f0110c7d:	00 00 00 $/;"	l
f0110c80	obj/kern/kernel.asm	/^    f0110c80:	ff d0                	callq  *%rax$/;"	l
f0110c82	obj/kern/kernel.asm	/^    f0110c82:	85 c0                	test   %eax,%eax$/;"	l
f0110c84	obj/kern/kernel.asm	/^    f0110c84:	75 39                	jne    fffffffff0110cbf <end+0xfffffffefe66f91f>$/;"	l
f0110c86	obj/kern/kernel.asm	/^    f0110c86:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f0110c8a	obj/kern/kernel.asm	/^    f0110c8a:	8b 40 10             	mov    0x10(%rax),%eax$/;"	l
f0110c8d	obj/kern/kernel.asm	/^    f0110c8d:	89 c6                	mov    %eax,%esi$/;"	l
f0110c8f	obj/kern/kernel.asm	/^    f0110c8f:	c1 ee 10             	shr    $0x10,%esi$/;"	l
f0110c92	obj/kern/kernel.asm	/^    f0110c92:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f0110c96	obj/kern/kernel.asm	/^    f0110c96:	8b 40 10             	mov    0x10(%rax),%eax$/;"	l
f0110c99	obj/kern/kernel.asm	/^    f0110c99:	0f b7 d8             	movzwl %ax,%ebx$/;"	l
f0110c9c	obj/kern/kernel.asm	/^    f0110c9c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f0110ca0	obj/kern/kernel.asm	/^    f0110ca0:	48 89 c1             	mov    %rax,%rcx$/;"	l
f0110ca3	obj/kern/kernel.asm	/^    f0110ca3:	48 ba 40 07 13 f0 00 	mov    $0xf0130740,%rdx$/;"	l
f0110caa	obj/kern/kernel.asm	/^    f0110caa:	00 00 00 $/;"	l
f0110cad	obj/kern/kernel.asm	/^    f0110cad:	89 df                	mov    %ebx,%edi$/;"	l
f0110caf	obj/kern/kernel.asm	/^    f0110caf:	48 b8 69 0b 11 f0 00 	mov    $0xf0110b69,%rax$/;"	l
f0110cb6	obj/kern/kernel.asm	/^    f0110cb6:	00 00 00 $/;"	l
f0110cb9	obj/kern/kernel.asm	/^    f0110cb9:	ff d0                	callq  *%rax$/;"	l
f0110cbb	obj/kern/kernel.asm	/^    f0110cbb:	85 c0                	test   %eax,%eax$/;"	l
f0110cbd	obj/kern/kernel.asm	/^    f0110cbd:	74 07                	je     fffffffff0110cc6 <end+0xfffffffefe66f926>$/;"	l
f0110cbf	obj/kern/kernel.asm	/^    f0110cbf:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0110cc4	obj/kern/kernel.asm	/^    f0110cc4:	eb 05                	jmp    fffffffff0110ccb <end+0xfffffffefe66f92b>$/;"	l
f0110cc6	obj/kern/kernel.asm	/^    f0110cc6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0110ccb	obj/kern/kernel.asm	/^    f0110ccb:	48 83 c4 18          	add    $0x18,%rsp$/;"	l
f0110ccf	obj/kern/kernel.asm	/^    f0110ccf:	5b                   	pop    %rbx$/;"	l
f0110cd0	obj/kern/kernel.asm	/^    f0110cd0:	c9                   	leaveq $/;"	l
f0110cd1	obj/kern/kernel.asm	/^    f0110cd1:	c3                   	retq   $/;"	l
f0110cd2	obj/kern/kernel.asm	/^    f0110cd2:	55                   	push   %rbp$/;"	l
f0110cd3	obj/kern/kernel.asm	/^    f0110cd3:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f0110cd6	obj/kern/kernel.asm	/^    f0110cd6:	53                   	push   %rbx$/;"	l
f0110cd7	obj/kern/kernel.asm	/^    f0110cd7:	48 83 ec 48          	sub    $0x48,%rsp$/;"	l
f0110cdb	obj/kern/kernel.asm	/^    f0110cdb:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)$/;"	l
f0110cdf	obj/kern/kernel.asm	/^    f0110cdf:	48 b8 60 07 13 f0 00 	mov    $0xf0130760,%rax$/;"	l
f0110ce6	obj/kern/kernel.asm	/^    f0110ce6:	00 00 00 $/;"	l
f0110ce9	obj/kern/kernel.asm	/^    f0110ce9:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0110cec	obj/kern/kernel.asm	/^    f0110cec:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
f0110cf0	obj/kern/kernel.asm	/^    f0110cf0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f0110cf4	obj/kern/kernel.asm	/^    f0110cf4:	8b 40 14             	mov    0x14(%rax),%eax$/;"	l
f0110cf7	obj/kern/kernel.asm	/^    f0110cf7:	c1 e8 18             	shr    $0x18,%eax$/;"	l
f0110cfa	obj/kern/kernel.asm	/^    f0110cfa:	83 f8 06             	cmp    $0x6,%eax$/;"	l
f0110cfd	obj/kern/kernel.asm	/^    f0110cfd:	77 20                	ja     fffffffff0110d1f <end+0xfffffffefe66f97f>$/;"	l
f0110cff	obj/kern/kernel.asm	/^    f0110cff:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f0110d03	obj/kern/kernel.asm	/^    f0110d03:	8b 40 14             	mov    0x14(%rax),%eax$/;"	l
f0110d06	obj/kern/kernel.asm	/^    f0110d06:	89 c2                	mov    %eax,%edx$/;"	l
f0110d08	obj/kern/kernel.asm	/^    f0110d08:	c1 ea 18             	shr    $0x18,%edx$/;"	l
f0110d0b	obj/kern/kernel.asm	/^    f0110d0b:	48 b8 60 07 13 f0 00 	mov    $0xf0130760,%rax$/;"	l
f0110d12	obj/kern/kernel.asm	/^    f0110d12:	00 00 00 $/;"	l
f0110d15	obj/kern/kernel.asm	/^    f0110d15:	89 d2                	mov    %edx,%edx$/;"	l
f0110d17	obj/kern/kernel.asm	/^    f0110d17:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax$/;"	l
f0110d1b	obj/kern/kernel.asm	/^    f0110d1b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)$/;"	l
f0110d1f	obj/kern/kernel.asm	/^    f0110d1f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f0110d23	obj/kern/kernel.asm	/^    f0110d23:	0f b6 40 48          	movzbl 0x48(%rax),%eax$/;"	l
f0110d27	obj/kern/kernel.asm	/^    f0110d27:	0f b6 d8             	movzbl %al,%ebx$/;"	l
f0110d2a	obj/kern/kernel.asm	/^    f0110d2a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f0110d2e	obj/kern/kernel.asm	/^    f0110d2e:	8b 40 14             	mov    0x14(%rax),%eax$/;"	l
f0110d31	obj/kern/kernel.asm	/^    f0110d31:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0110d34	obj/kern/kernel.asm	/^    f0110d34:	0f b6 f8             	movzbl %al,%edi$/;"	l
f0110d37	obj/kern/kernel.asm	/^    f0110d37:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f0110d3b	obj/kern/kernel.asm	/^    f0110d3b:	8b 40 14             	mov    0x14(%rax),%eax$/;"	l
f0110d3e	obj/kern/kernel.asm	/^    f0110d3e:	89 c6                	mov    %eax,%esi$/;"	l
f0110d40	obj/kern/kernel.asm	/^    f0110d40:	c1 ee 18             	shr    $0x18,%esi$/;"	l
f0110d43	obj/kern/kernel.asm	/^    f0110d43:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f0110d47	obj/kern/kernel.asm	/^    f0110d47:	8b 40 10             	mov    0x10(%rax),%eax$/;"	l
f0110d4a	obj/kern/kernel.asm	/^    f0110d4a:	41 89 c1             	mov    %eax,%r9d$/;"	l
f0110d4d	obj/kern/kernel.asm	/^    f0110d4d:	41 c1 e9 10          	shr    $0x10,%r9d$/;"	l
f0110d51	obj/kern/kernel.asm	/^    f0110d51:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f0110d55	obj/kern/kernel.asm	/^    f0110d55:	8b 40 10             	mov    0x10(%rax),%eax$/;"	l
f0110d58	obj/kern/kernel.asm	/^    f0110d58:	44 0f b7 c0          	movzwl %ax,%r8d$/;"	l
f0110d5c	obj/kern/kernel.asm	/^    f0110d5c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f0110d60	obj/kern/kernel.asm	/^    f0110d60:	8b 48 0c             	mov    0xc(%rax),%ecx$/;"	l
f0110d63	obj/kern/kernel.asm	/^    f0110d63:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f0110d67	obj/kern/kernel.asm	/^    f0110d67:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
f0110d6a	obj/kern/kernel.asm	/^    f0110d6a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f0110d6e	obj/kern/kernel.asm	/^    f0110d6e:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0110d71	obj/kern/kernel.asm	/^    f0110d71:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
f0110d74	obj/kern/kernel.asm	/^    f0110d74:	89 5c 24 18          	mov    %ebx,0x18(%rsp)$/;"	l
f0110d78	obj/kern/kernel.asm	/^    f0110d78:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx$/;"	l
f0110d7c	obj/kern/kernel.asm	/^    f0110d7c:	48 89 5c 24 10       	mov    %rbx,0x10(%rsp)$/;"	l
f0110d81	obj/kern/kernel.asm	/^    f0110d81:	89 7c 24 08          	mov    %edi,0x8(%rsp)$/;"	l
f0110d85	obj/kern/kernel.asm	/^    f0110d85:	89 34 24             	mov    %esi,(%rsp)$/;"	l
f0110d88	obj/kern/kernel.asm	/^    f0110d88:	89 c6                	mov    %eax,%esi$/;"	l
f0110d8a	obj/kern/kernel.asm	/^    f0110d8a:	48 bf b0 38 11 f0 00 	mov    $0xf01138b0,%rdi$/;"	l
f0110d91	obj/kern/kernel.asm	/^    f0110d91:	00 00 00 $/;"	l
f0110d94	obj/kern/kernel.asm	/^    f0110d94:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0110d99	obj/kern/kernel.asm	/^    f0110d99:	48 bb eb 88 10 f0 00 	mov    $0xf01088eb,%rbx$/;"	l
f0110da0	obj/kern/kernel.asm	/^    f0110da0:	00 00 00 $/;"	l
f0110da3	obj/kern/kernel.asm	/^    f0110da3:	ff d3                	callq  *%rbx$/;"	l
f0110da5	obj/kern/kernel.asm	/^    f0110da5:	48 83 c4 48          	add    $0x48,%rsp$/;"	l
f0110da9	obj/kern/kernel.asm	/^    f0110da9:	5b                   	pop    %rbx$/;"	l
f0110daa	obj/kern/kernel.asm	/^    f0110daa:	c9                   	leaveq $/;"	l
f0110dab	obj/kern/kernel.asm	/^    f0110dab:	c3                   	retq   $/;"	l
f0110dac	obj/kern/kernel.asm	/^    f0110dac:	55                   	push   %rbp$/;"	l
f0110dad	obj/kern/kernel.asm	/^    f0110dad:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f0110db0	obj/kern/kernel.asm	/^    f0110db0:	48 81 ec 10 01 00 00 	sub    $0x110,%rsp$/;"	l
f0110db7	obj/kern/kernel.asm	/^    f0110db7:	48 89 bd f8 fe ff ff 	mov    %rdi,-0x108(%rbp)$/;"	l
f0110dbe	obj/kern/kernel.asm	/^    f0110dbe:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)$/;"	l
f0110dc5	obj/kern/kernel.asm	/^    f0110dc5:	48 8d 45 a0          	lea    -0x60(%rbp),%rax$/;"	l
f0110dc9	obj/kern/kernel.asm	/^    f0110dc9:	ba 50 00 00 00       	mov    $0x50,%edx$/;"	l
f0110dce	obj/kern/kernel.asm	/^    f0110dce:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0110dd3	obj/kern/kernel.asm	/^    f0110dd3:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0110dd6	obj/kern/kernel.asm	/^    f0110dd6:	48 b8 42 ee 10 f0 00 	mov    $0xf010ee42,%rax$/;"	l
f0110ddd	obj/kern/kernel.asm	/^    f0110ddd:	00 00 00 $/;"	l
f0110de0	obj/kern/kernel.asm	/^    f0110de0:	ff d0                	callq  *%rax$/;"	l
f0110de2	obj/kern/kernel.asm	/^    f0110de2:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax$/;"	l
f0110de9	obj/kern/kernel.asm	/^    f0110de9:	48 89 45 a0          	mov    %rax,-0x60(%rbp)$/;"	l
f0110ded	obj/kern/kernel.asm	/^    f0110ded:	c7 45 a8 00 00 00 00 	movl   $0x0,-0x58(%rbp)$/;"	l
f0110df4	obj/kern/kernel.asm	/^    f0110df4:	e9 21 02 00 00       	jmpq   fffffffff011101a <end+0xfffffffefe66fc7a>$/;"	l
f0110df9	obj/kern/kernel.asm	/^    f0110df9:	48 8d 45 a0          	lea    -0x60(%rbp),%rax$/;"	l
f0110dfd	obj/kern/kernel.asm	/^    f0110dfd:	be 0c 00 00 00       	mov    $0xc,%esi$/;"	l
f0110e02	obj/kern/kernel.asm	/^    f0110e02:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0110e05	obj/kern/kernel.asm	/^    f0110e05:	48 b8 ab 0a 11 f0 00 	mov    $0xf0110aab,%rax$/;"	l
f0110e0c	obj/kern/kernel.asm	/^    f0110e0c:	00 00 00 $/;"	l
f0110e0f	obj/kern/kernel.asm	/^    f0110e0f:	ff d0                	callq  *%rax$/;"	l
f0110e11	obj/kern/kernel.asm	/^    f0110e11:	89 45 f8             	mov    %eax,-0x8(%rbp)$/;"	l
f0110e14	obj/kern/kernel.asm	/^    f0110e14:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
f0110e17	obj/kern/kernel.asm	/^    f0110e17:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0110e1a	obj/kern/kernel.asm	/^    f0110e1a:	83 e0 7f             	and    $0x7f,%eax$/;"	l
f0110e1d	obj/kern/kernel.asm	/^    f0110e1d:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0110e20	obj/kern/kernel.asm	/^    f0110e20:	0f 87 ea 01 00 00    	ja     fffffffff0111010 <end+0xfffffffefe66fc70>$/;"	l
f0110e26	obj/kern/kernel.asm	/^    f0110e26:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)$/;"	l
f0110e2a	obj/kern/kernel.asm	/^    f0110e2a:	48 8b 45 a0          	mov    -0x60(%rbp),%rax$/;"	l
f0110e2e	obj/kern/kernel.asm	/^    f0110e2e:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)$/;"	l
f0110e35	obj/kern/kernel.asm	/^    f0110e35:	48 8b 45 a8          	mov    -0x58(%rbp),%rax$/;"	l
f0110e39	obj/kern/kernel.asm	/^    f0110e39:	48 89 85 58 ff ff ff 	mov    %rax,-0xa8(%rbp)$/;"	l
f0110e40	obj/kern/kernel.asm	/^    f0110e40:	48 8b 45 b0          	mov    -0x50(%rbp),%rax$/;"	l
f0110e44	obj/kern/kernel.asm	/^    f0110e44:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)$/;"	l
f0110e4b	obj/kern/kernel.asm	/^    f0110e4b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax$/;"	l
f0110e4f	obj/kern/kernel.asm	/^    f0110e4f:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)$/;"	l
f0110e56	obj/kern/kernel.asm	/^    f0110e56:	48 8b 45 c0          	mov    -0x40(%rbp),%rax$/;"	l
f0110e5a	obj/kern/kernel.asm	/^    f0110e5a:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)$/;"	l
f0110e61	obj/kern/kernel.asm	/^    f0110e61:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f0110e65	obj/kern/kernel.asm	/^    f0110e65:	48 89 85 78 ff ff ff 	mov    %rax,-0x88(%rbp)$/;"	l
f0110e6c	obj/kern/kernel.asm	/^    f0110e6c:	48 8b 45 d0          	mov    -0x30(%rbp),%rax$/;"	l
f0110e70	obj/kern/kernel.asm	/^    f0110e70:	48 89 45 80          	mov    %rax,-0x80(%rbp)$/;"	l
f0110e74	obj/kern/kernel.asm	/^    f0110e74:	48 8b 45 d8          	mov    -0x28(%rbp),%rax$/;"	l
f0110e78	obj/kern/kernel.asm	/^    f0110e78:	48 89 45 88          	mov    %rax,-0x78(%rbp)$/;"	l
f0110e7c	obj/kern/kernel.asm	/^    f0110e7c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax$/;"	l
f0110e80	obj/kern/kernel.asm	/^    f0110e80:	48 89 45 90          	mov    %rax,-0x70(%rbp)$/;"	l
f0110e84	obj/kern/kernel.asm	/^    f0110e84:	48 8b 45 e8          	mov    -0x18(%rbp),%rax$/;"	l
f0110e88	obj/kern/kernel.asm	/^    f0110e88:	48 89 45 98          	mov    %rax,-0x68(%rbp)$/;"	l
f0110e8c	obj/kern/kernel.asm	/^    f0110e8c:	c7 85 5c ff ff ff 00 	movl   $0x0,-0xa4(%rbp)$/;"	l
f0110e93	obj/kern/kernel.asm	/^    f0110e93:	00 00 00 $/;"	l
f0110e96	obj/kern/kernel.asm	/^    f0110e96:	e9 4d 01 00 00       	jmpq   fffffffff0110fe8 <end+0xfffffffefe66fc48>$/;"	l
f0110e9b	obj/kern/kernel.asm	/^    f0110e9b:	48 8b 85 50 ff ff ff 	mov    -0xb0(%rbp),%rax$/;"	l
f0110ea2	obj/kern/kernel.asm	/^    f0110ea2:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)$/;"	l
f0110ea9	obj/kern/kernel.asm	/^    f0110ea9:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax$/;"	l
f0110eb0	obj/kern/kernel.asm	/^    f0110eb0:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)$/;"	l
f0110eb7	obj/kern/kernel.asm	/^    f0110eb7:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax$/;"	l
f0110ebe	obj/kern/kernel.asm	/^    f0110ebe:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)$/;"	l
f0110ec5	obj/kern/kernel.asm	/^    f0110ec5:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax$/;"	l
f0110ecc	obj/kern/kernel.asm	/^    f0110ecc:	48 89 85 18 ff ff ff 	mov    %rax,-0xe8(%rbp)$/;"	l
f0110ed3	obj/kern/kernel.asm	/^    f0110ed3:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax$/;"	l
f0110eda	obj/kern/kernel.asm	/^    f0110eda:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)$/;"	l
f0110ee1	obj/kern/kernel.asm	/^    f0110ee1:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax$/;"	l
f0110ee8	obj/kern/kernel.asm	/^    f0110ee8:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)$/;"	l
f0110eef	obj/kern/kernel.asm	/^    f0110eef:	48 8b 45 80          	mov    -0x80(%rbp),%rax$/;"	l
f0110ef3	obj/kern/kernel.asm	/^    f0110ef3:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)$/;"	l
f0110efa	obj/kern/kernel.asm	/^    f0110efa:	48 8b 45 88          	mov    -0x78(%rbp),%rax$/;"	l
f0110efe	obj/kern/kernel.asm	/^    f0110efe:	48 89 85 38 ff ff ff 	mov    %rax,-0xc8(%rbp)$/;"	l
f0110f05	obj/kern/kernel.asm	/^    f0110f05:	48 8b 45 90          	mov    -0x70(%rbp),%rax$/;"	l
f0110f09	obj/kern/kernel.asm	/^    f0110f09:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)$/;"	l
f0110f10	obj/kern/kernel.asm	/^    f0110f10:	48 8b 45 98          	mov    -0x68(%rbp),%rax$/;"	l
f0110f14	obj/kern/kernel.asm	/^    f0110f14:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)$/;"	l
f0110f1b	obj/kern/kernel.asm	/^    f0110f1b:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax$/;"	l
f0110f22	obj/kern/kernel.asm	/^    f0110f22:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f0110f27	obj/kern/kernel.asm	/^    f0110f27:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0110f2a	obj/kern/kernel.asm	/^    f0110f2a:	48 b8 ab 0a 11 f0 00 	mov    $0xf0110aab,%rax$/;"	l
f0110f31	obj/kern/kernel.asm	/^    f0110f31:	00 00 00 $/;"	l
f0110f34	obj/kern/kernel.asm	/^    f0110f34:	ff d0                	callq  *%rax$/;"	l
f0110f36	obj/kern/kernel.asm	/^    f0110f36:	89 85 10 ff ff ff    	mov    %eax,-0xf0(%rbp)$/;"	l
f0110f3c	obj/kern/kernel.asm	/^    f0110f3c:	8b 85 10 ff ff ff    	mov    -0xf0(%rbp),%eax$/;"	l
f0110f42	obj/kern/kernel.asm	/^    f0110f42:	25 ff ff 00 00       	and    $0xffff,%eax$/;"	l
f0110f47	obj/kern/kernel.asm	/^    f0110f47:	3d ff ff 00 00       	cmp    $0xffff,%eax$/;"	l
f0110f4c	obj/kern/kernel.asm	/^    f0110f4c:	0f 84 86 00 00 00    	je     fffffffff0110fd8 <end+0xfffffffefe66fc38>$/;"	l
f0110f52	obj/kern/kernel.asm	/^    f0110f52:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax$/;"	l
f0110f59	obj/kern/kernel.asm	/^    f0110f59:	be 3c 00 00 00       	mov    $0x3c,%esi$/;"	l
f0110f5e	obj/kern/kernel.asm	/^    f0110f5e:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0110f61	obj/kern/kernel.asm	/^    f0110f61:	48 b8 ab 0a 11 f0 00 	mov    $0xf0110aab,%rax$/;"	l
f0110f68	obj/kern/kernel.asm	/^    f0110f68:	00 00 00 $/;"	l
f0110f6b	obj/kern/kernel.asm	/^    f0110f6b:	ff d0                	callq  *%rax$/;"	l
f0110f6d	obj/kern/kernel.asm	/^    f0110f6d:	89 45 fc             	mov    %eax,-0x4(%rbp)$/;"	l
f0110f70	obj/kern/kernel.asm	/^    f0110f70:	8b 45 fc             	mov    -0x4(%rbp),%eax$/;"	l
f0110f73	obj/kern/kernel.asm	/^    f0110f73:	88 85 48 ff ff ff    	mov    %al,-0xb8(%rbp)$/;"	l
f0110f79	obj/kern/kernel.asm	/^    f0110f79:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax$/;"	l
f0110f80	obj/kern/kernel.asm	/^    f0110f80:	be 08 00 00 00       	mov    $0x8,%esi$/;"	l
f0110f85	obj/kern/kernel.asm	/^    f0110f85:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0110f88	obj/kern/kernel.asm	/^    f0110f88:	48 b8 ab 0a 11 f0 00 	mov    $0xf0110aab,%rax$/;"	l
f0110f8f	obj/kern/kernel.asm	/^    f0110f8f:	00 00 00 $/;"	l
f0110f92	obj/kern/kernel.asm	/^    f0110f92:	ff d0                	callq  *%rax$/;"	l
f0110f94	obj/kern/kernel.asm	/^    f0110f94:	89 85 14 ff ff ff    	mov    %eax,-0xec(%rbp)$/;"	l
f0110f9a	obj/kern/kernel.asm	/^    f0110f9a:	48 b8 00 07 13 f0 00 	mov    $0xf0130700,%rax$/;"	l
f0110fa1	obj/kern/kernel.asm	/^    f0110fa1:	00 00 00 $/;"	l
f0110fa4	obj/kern/kernel.asm	/^    f0110fa4:	8b 00                	mov    (%rax),%eax$/;"	l
f0110fa6	obj/kern/kernel.asm	/^    f0110fa6:	85 c0                	test   %eax,%eax$/;"	l
f0110fa8	obj/kern/kernel.asm	/^    f0110fa8:	74 16                	je     fffffffff0110fc0 <end+0xfffffffefe66fc20>$/;"	l
f0110faa	obj/kern/kernel.asm	/^    f0110faa:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax$/;"	l
f0110fb1	obj/kern/kernel.asm	/^    f0110fb1:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0110fb4	obj/kern/kernel.asm	/^    f0110fb4:	48 b8 d2 0c 11 f0 00 	mov    $0xf0110cd2,%rax$/;"	l
f0110fbb	obj/kern/kernel.asm	/^    f0110fbb:	00 00 00 $/;"	l
f0110fbe	obj/kern/kernel.asm	/^    f0110fbe:	ff d0                	callq  *%rax$/;"	l
f0110fc0	obj/kern/kernel.asm	/^    f0110fc0:	48 8d 85 00 ff ff ff 	lea    -0x100(%rbp),%rax$/;"	l
f0110fc7	obj/kern/kernel.asm	/^    f0110fc7:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0110fca	obj/kern/kernel.asm	/^    f0110fca:	48 b8 3d 0c 11 f0 00 	mov    $0xf0110c3d,%rax$/;"	l
f0110fd1	obj/kern/kernel.asm	/^    f0110fd1:	00 00 00 $/;"	l
f0110fd4	obj/kern/kernel.asm	/^    f0110fd4:	ff d0                	callq  *%rax$/;"	l
f0110fd6	obj/kern/kernel.asm	/^    f0110fd6:	eb 01                	jmp    fffffffff0110fd9 <end+0xfffffffefe66fc39>$/;"	l
f0110fd8	obj/kern/kernel.asm	/^    f0110fd8:	90                   	nop$/;"	l
f0110fd9	obj/kern/kernel.asm	/^    f0110fd9:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax$/;"	l
f0110fdf	obj/kern/kernel.asm	/^    f0110fdf:	83 c0 01             	add    $0x1,%eax$/;"	l
f0110fe2	obj/kern/kernel.asm	/^    f0110fe2:	89 85 5c ff ff ff    	mov    %eax,-0xa4(%rbp)$/;"	l
f0110fe8	obj/kern/kernel.asm	/^    f0110fe8:	8b 95 5c ff ff ff    	mov    -0xa4(%rbp),%edx$/;"	l
f0110fee	obj/kern/kernel.asm	/^    f0110fee:	8b 45 f8             	mov    -0x8(%rbp),%eax$/;"	l
f0110ff1	obj/kern/kernel.asm	/^    f0110ff1:	25 00 00 80 00       	and    $0x800000,%eax$/;"	l
f0110ff6	obj/kern/kernel.asm	/^    f0110ff6:	85 c0                	test   %eax,%eax$/;"	l
f0110ff8	obj/kern/kernel.asm	/^    f0110ff8:	74 07                	je     fffffffff0111001 <end+0xfffffffefe66fc61>$/;"	l
f0110ffa	obj/kern/kernel.asm	/^    f0110ffa:	b8 08 00 00 00       	mov    $0x8,%eax$/;"	l
f0110fff	obj/kern/kernel.asm	/^    f0110fff:	eb 05                	jmp    fffffffff0111006 <end+0xfffffffefe66fc66>$/;"	l
f0111001	obj/kern/kernel.asm	/^    f0111001:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f0111006	obj/kern/kernel.asm	/^    f0111006:	39 c2                	cmp    %eax,%edx$/;"	l
f0111008	obj/kern/kernel.asm	/^    f0111008:	0f 82 8d fe ff ff    	jb     fffffffff0110e9b <end+0xfffffffefe66fafb>$/;"	l
f011100e	obj/kern/kernel.asm	/^    f011100e:	eb 01                	jmp    fffffffff0111011 <end+0xfffffffefe66fc71>$/;"	l
f0111010	obj/kern/kernel.asm	/^    f0111010:	90                   	nop$/;"	l
f0111011	obj/kern/kernel.asm	/^    f0111011:	8b 45 a8             	mov    -0x58(%rbp),%eax$/;"	l
f0111014	obj/kern/kernel.asm	/^    f0111014:	83 c0 01             	add    $0x1,%eax$/;"	l
f0111017	obj/kern/kernel.asm	/^    f0111017:	89 45 a8             	mov    %eax,-0x58(%rbp)$/;"	l
f011101a	obj/kern/kernel.asm	/^    f011101a:	8b 45 a8             	mov    -0x58(%rbp),%eax$/;"	l
f011101d	obj/kern/kernel.asm	/^    f011101d:	83 f8 1f             	cmp    $0x1f,%eax$/;"	l
f0111020	obj/kern/kernel.asm	/^    f0111020:	0f 86 d3 fd ff ff    	jbe    fffffffff0110df9 <end+0xfffffffefe66fa59>$/;"	l
f0111026	obj/kern/kernel.asm	/^    f0111026:	8b 45 f4             	mov    -0xc(%rbp),%eax$/;"	l
f0111029	obj/kern/kernel.asm	/^    f0111029:	c9                   	leaveq $/;"	l
f011102a	obj/kern/kernel.asm	/^    f011102a:	c3                   	retq   $/;"	l
f011102b	obj/kern/kernel.asm	/^    f011102b:	55                   	push   %rbp$/;"	l
f011102c	obj/kern/kernel.asm	/^    f011102c:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f011102f	obj/kern/kernel.asm	/^    f011102f:	53                   	push   %rbx$/;"	l
f0111030	obj/kern/kernel.asm	/^    f0111030:	48 83 ec 38          	sub    $0x38,%rsp$/;"	l
f0111034	obj/kern/kernel.asm	/^    f0111034:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)$/;"	l
f0111038	obj/kern/kernel.asm	/^    f0111038:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f011103c	obj/kern/kernel.asm	/^    f011103c:	be 1c 00 00 00       	mov    $0x1c,%esi$/;"	l
f0111041	obj/kern/kernel.asm	/^    f0111041:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0111044	obj/kern/kernel.asm	/^    f0111044:	48 b8 ab 0a 11 f0 00 	mov    $0xf0110aab,%rax$/;"	l
f011104b	obj/kern/kernel.asm	/^    f011104b:	00 00 00 $/;"	l
f011104e	obj/kern/kernel.asm	/^    f011104e:	ff d0                	callq  *%rax$/;"	l
f0111050	obj/kern/kernel.asm	/^    f0111050:	89 45 e8             	mov    %eax,-0x18(%rbp)$/;"	l
f0111053	obj/kern/kernel.asm	/^    f0111053:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f0111057	obj/kern/kernel.asm	/^    f0111057:	be 18 00 00 00       	mov    $0x18,%esi$/;"	l
f011105c	obj/kern/kernel.asm	/^    f011105c:	48 89 c7             	mov    %rax,%rdi$/;"	l
f011105f	obj/kern/kernel.asm	/^    f011105f:	48 b8 ab 0a 11 f0 00 	mov    $0xf0110aab,%rax$/;"	l
f0111066	obj/kern/kernel.asm	/^    f0111066:	00 00 00 $/;"	l
f0111069	obj/kern/kernel.asm	/^    f0111069:	ff d0                	callq  *%rax$/;"	l
f011106b	obj/kern/kernel.asm	/^    f011106b:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
f011106e	obj/kern/kernel.asm	/^    f011106e:	8b 45 e8             	mov    -0x18(%rbp),%eax$/;"	l
f0111071	obj/kern/kernel.asm	/^    f0111071:	83 e0 0f             	and    $0xf,%eax$/;"	l
f0111074	obj/kern/kernel.asm	/^    f0111074:	83 f8 01             	cmp    $0x1,%eax$/;"	l
f0111077	obj/kern/kernel.asm	/^    f0111077:	75 3f                	jne    fffffffff01110b8 <end+0xfffffffefe66fd18>$/;"	l
f0111079	obj/kern/kernel.asm	/^    f0111079:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f011107d	obj/kern/kernel.asm	/^    f011107d:	8b 48 0c             	mov    0xc(%rax),%ecx$/;"	l
f0111080	obj/kern/kernel.asm	/^    f0111080:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f0111084	obj/kern/kernel.asm	/^    f0111084:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
f0111087	obj/kern/kernel.asm	/^    f0111087:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f011108b	obj/kern/kernel.asm	/^    f011108b:	48 8b 00             	mov    (%rax),%rax$/;"	l
f011108e	obj/kern/kernel.asm	/^    f011108e:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
f0111091	obj/kern/kernel.asm	/^    f0111091:	89 c6                	mov    %eax,%esi$/;"	l
f0111093	obj/kern/kernel.asm	/^    f0111093:	48 bf f0 38 11 f0 00 	mov    $0xf01138f0,%rdi$/;"	l
f011109a	obj/kern/kernel.asm	/^    f011109a:	00 00 00 $/;"	l
f011109d	obj/kern/kernel.asm	/^    f011109d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01110a2	obj/kern/kernel.asm	/^    f01110a2:	48 bb eb 88 10 f0 00 	mov    $0xf01088eb,%rbx$/;"	l
f01110a9	obj/kern/kernel.asm	/^    f01110a9:	00 00 00 $/;"	l
f01110ac	obj/kern/kernel.asm	/^    f01110ac:	ff d3                	callq  *%rbx$/;"	l
f01110ae	obj/kern/kernel.asm	/^    f01110ae:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01110b3	obj/kern/kernel.asm	/^    f01110b3:	e9 a2 00 00 00       	jmpq   fffffffff011115a <end+0xfffffffefe66fdba>$/;"	l
f01110b8	obj/kern/kernel.asm	/^    f01110b8:	48 8d 45 d0          	lea    -0x30(%rbp),%rax$/;"	l
f01110bc	obj/kern/kernel.asm	/^    f01110bc:	ba 10 00 00 00       	mov    $0x10,%edx$/;"	l
f01110c1	obj/kern/kernel.asm	/^    f01110c1:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01110c6	obj/kern/kernel.asm	/^    f01110c6:	48 89 c7             	mov    %rax,%rdi$/;"	l
f01110c9	obj/kern/kernel.asm	/^    f01110c9:	48 b8 42 ee 10 f0 00 	mov    $0xf010ee42,%rax$/;"	l
f01110d0	obj/kern/kernel.asm	/^    f01110d0:	00 00 00 $/;"	l
f01110d3	obj/kern/kernel.asm	/^    f01110d3:	ff d0                	callq  *%rax$/;"	l
f01110d5	obj/kern/kernel.asm	/^    f01110d5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f01110d9	obj/kern/kernel.asm	/^    f01110d9:	48 89 45 d0          	mov    %rax,-0x30(%rbp)$/;"	l
f01110dd	obj/kern/kernel.asm	/^    f01110dd:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
f01110e0	obj/kern/kernel.asm	/^    f01110e0:	c1 e8 08             	shr    $0x8,%eax$/;"	l
f01110e3	obj/kern/kernel.asm	/^    f01110e3:	25 ff 00 00 00       	and    $0xff,%eax$/;"	l
f01110e8	obj/kern/kernel.asm	/^    f01110e8:	89 45 d8             	mov    %eax,-0x28(%rbp)$/;"	l
f01110eb	obj/kern/kernel.asm	/^    f01110eb:	48 b8 00 07 13 f0 00 	mov    $0xf0130700,%rax$/;"	l
f01110f2	obj/kern/kernel.asm	/^    f01110f2:	00 00 00 $/;"	l
f01110f5	obj/kern/kernel.asm	/^    f01110f5:	8b 00                	mov    (%rax),%eax$/;"	l
f01110f7	obj/kern/kernel.asm	/^    f01110f7:	85 c0                	test   %eax,%eax$/;"	l
f01110f9	obj/kern/kernel.asm	/^    f01110f9:	74 47                	je     fffffffff0111142 <end+0xfffffffefe66fda2>$/;"	l
f01110fb	obj/kern/kernel.asm	/^    f01110fb:	8b 45 ec             	mov    -0x14(%rbp),%eax$/;"	l
f01110fe	obj/kern/kernel.asm	/^    f01110fe:	c1 e8 10             	shr    $0x10,%eax$/;"	l
f0111101	obj/kern/kernel.asm	/^    f0111101:	0f b6 f0             	movzbl %al,%esi$/;"	l
f0111104	obj/kern/kernel.asm	/^    f0111104:	8b 5d d8             	mov    -0x28(%rbp),%ebx$/;"	l
f0111107	obj/kern/kernel.asm	/^    f0111107:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f011110b	obj/kern/kernel.asm	/^    f011110b:	8b 48 0c             	mov    0xc(%rax),%ecx$/;"	l
f011110e	obj/kern/kernel.asm	/^    f011110e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f0111112	obj/kern/kernel.asm	/^    f0111112:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
f0111115	obj/kern/kernel.asm	/^    f0111115:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f0111119	obj/kern/kernel.asm	/^    f0111119:	48 8b 00             	mov    (%rax),%rax$/;"	l
f011111c	obj/kern/kernel.asm	/^    f011111c:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
f011111f	obj/kern/kernel.asm	/^    f011111f:	41 89 f1             	mov    %esi,%r9d$/;"	l
f0111122	obj/kern/kernel.asm	/^    f0111122:	41 89 d8             	mov    %ebx,%r8d$/;"	l
f0111125	obj/kern/kernel.asm	/^    f0111125:	89 c6                	mov    %eax,%esi$/;"	l
f0111127	obj/kern/kernel.asm	/^    f0111127:	48 bf 28 39 11 f0 00 	mov    $0xf0113928,%rdi$/;"	l
f011112e	obj/kern/kernel.asm	/^    f011112e:	00 00 00 $/;"	l
f0111131	obj/kern/kernel.asm	/^    f0111131:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0111136	obj/kern/kernel.asm	/^    f0111136:	48 bb eb 88 10 f0 00 	mov    $0xf01088eb,%rbx$/;"	l
f011113d	obj/kern/kernel.asm	/^    f011113d:	00 00 00 $/;"	l
f0111140	obj/kern/kernel.asm	/^    f0111140:	ff d3                	callq  *%rbx$/;"	l
f0111142	obj/kern/kernel.asm	/^    f0111142:	48 8d 45 d0          	lea    -0x30(%rbp),%rax$/;"	l
f0111146	obj/kern/kernel.asm	/^    f0111146:	48 89 c7             	mov    %rax,%rdi$/;"	l
f0111149	obj/kern/kernel.asm	/^    f0111149:	48 b8 ac 0d 11 f0 00 	mov    $0xf0110dac,%rax$/;"	l
f0111150	obj/kern/kernel.asm	/^    f0111150:	00 00 00 $/;"	l
f0111153	obj/kern/kernel.asm	/^    f0111153:	ff d0                	callq  *%rax$/;"	l
f0111155	obj/kern/kernel.asm	/^    f0111155:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
f011115a	obj/kern/kernel.asm	/^    f011115a:	48 83 c4 38          	add    $0x38,%rsp$/;"	l
f011115e	obj/kern/kernel.asm	/^    f011115e:	5b                   	pop    %rbx$/;"	l
f011115f	obj/kern/kernel.asm	/^    f011115f:	c9                   	leaveq $/;"	l
f0111160	obj/kern/kernel.asm	/^    f0111160:	c3                   	retq   $/;"	l
f0111161	obj/kern/kernel.asm	/^    f0111161:	55                   	push   %rbp$/;"	l
f0111162	obj/kern/kernel.asm	/^    f0111162:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f0111165	obj/kern/kernel.asm	/^    f0111165:	53                   	push   %rbx$/;"	l
f0111166	obj/kern/kernel.asm	/^    f0111166:	48 83 ec 58          	sub    $0x58,%rsp$/;"	l
f011116a	obj/kern/kernel.asm	/^    f011116a:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)$/;"	l
f011116e	obj/kern/kernel.asm	/^    f011116e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f0111172	obj/kern/kernel.asm	/^    f0111172:	ba 07 00 00 00       	mov    $0x7,%edx$/;"	l
f0111177	obj/kern/kernel.asm	/^    f0111177:	be 04 00 00 00       	mov    $0x4,%esi$/;"	l
f011117c	obj/kern/kernel.asm	/^    f011117c:	48 89 c7             	mov    %rax,%rdi$/;"	l
f011117f	obj/kern/kernel.asm	/^    f011117f:	48 b8 08 0b 11 f0 00 	mov    $0xf0110b08,%rax$/;"	l
f0111186	obj/kern/kernel.asm	/^    f0111186:	00 00 00 $/;"	l
f0111189	obj/kern/kernel.asm	/^    f0111189:	ff d0                	callq  *%rax$/;"	l
f011118b	obj/kern/kernel.asm	/^    f011118b:	c7 45 d8 10 00 00 00 	movl   $0x10,-0x28(%rbp)$/;"	l
f0111192	obj/kern/kernel.asm	/^    f0111192:	e9 ef 01 00 00       	jmpq   fffffffff0111386 <end+0xfffffffefe66ffe6>$/;"	l
f0111197	obj/kern/kernel.asm	/^    f0111197:	8b 55 d8             	mov    -0x28(%rbp),%edx$/;"	l
f011119a	obj/kern/kernel.asm	/^    f011119a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f011119e	obj/kern/kernel.asm	/^    f011119e:	89 d6                	mov    %edx,%esi$/;"	l
f01111a0	obj/kern/kernel.asm	/^    f01111a0:	48 89 c7             	mov    %rax,%rdi$/;"	l
f01111a3	obj/kern/kernel.asm	/^    f01111a3:	48 b8 ab 0a 11 f0 00 	mov    $0xf0110aab,%rax$/;"	l
f01111aa	obj/kern/kernel.asm	/^    f01111aa:	00 00 00 $/;"	l
f01111ad	obj/kern/kernel.asm	/^    f01111ad:	ff d0                	callq  *%rax$/;"	l
f01111af	obj/kern/kernel.asm	/^    f01111af:	89 45 dc             	mov    %eax,-0x24(%rbp)$/;"	l
f01111b2	obj/kern/kernel.asm	/^    f01111b2:	c7 45 d4 04 00 00 00 	movl   $0x4,-0x2c(%rbp)$/;"	l
f01111b9	obj/kern/kernel.asm	/^    f01111b9:	8b 4d d8             	mov    -0x28(%rbp),%ecx$/;"	l
f01111bc	obj/kern/kernel.asm	/^    f01111bc:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f01111c0	obj/kern/kernel.asm	/^    f01111c0:	ba ff ff ff ff       	mov    $0xffffffff,%edx$/;"	l
f01111c5	obj/kern/kernel.asm	/^    f01111c5:	89 ce                	mov    %ecx,%esi$/;"	l
f01111c7	obj/kern/kernel.asm	/^    f01111c7:	48 89 c7             	mov    %rax,%rdi$/;"	l
f01111ca	obj/kern/kernel.asm	/^    f01111ca:	48 b8 08 0b 11 f0 00 	mov    $0xf0110b08,%rax$/;"	l
f01111d1	obj/kern/kernel.asm	/^    f01111d1:	00 00 00 $/;"	l
f01111d4	obj/kern/kernel.asm	/^    f01111d4:	ff d0                	callq  *%rax$/;"	l
f01111d6	obj/kern/kernel.asm	/^    f01111d6:	8b 55 d8             	mov    -0x28(%rbp),%edx$/;"	l
f01111d9	obj/kern/kernel.asm	/^    f01111d9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f01111dd	obj/kern/kernel.asm	/^    f01111dd:	89 d6                	mov    %edx,%esi$/;"	l
f01111df	obj/kern/kernel.asm	/^    f01111df:	48 89 c7             	mov    %rax,%rdi$/;"	l
f01111e2	obj/kern/kernel.asm	/^    f01111e2:	48 b8 ab 0a 11 f0 00 	mov    $0xf0110aab,%rax$/;"	l
f01111e9	obj/kern/kernel.asm	/^    f01111e9:	00 00 00 $/;"	l
f01111ec	obj/kern/kernel.asm	/^    f01111ec:	ff d0                	callq  *%rax$/;"	l
f01111ee	obj/kern/kernel.asm	/^    f01111ee:	89 45 e0             	mov    %eax,-0x20(%rbp)$/;"	l
f01111f1	obj/kern/kernel.asm	/^    f01111f1:	83 7d e0 00          	cmpl   $0x0,-0x20(%rbp)$/;"	l
f01111f5	obj/kern/kernel.asm	/^    f01111f5:	0f 84 84 01 00 00    	je     fffffffff011137f <end+0xfffffffefe66ffdf>$/;"	l
f01111fb	obj/kern/kernel.asm	/^    f01111fb:	8b 45 d8             	mov    -0x28(%rbp),%eax$/;"	l
f01111fe	obj/kern/kernel.asm	/^    f01111fe:	83 e8 10             	sub    $0x10,%eax$/;"	l
f0111201	obj/kern/kernel.asm	/^    f0111201:	c1 e8 02             	shr    $0x2,%eax$/;"	l
f0111204	obj/kern/kernel.asm	/^    f0111204:	89 45 e4             	mov    %eax,-0x1c(%rbp)$/;"	l
f0111207	obj/kern/kernel.asm	/^    f0111207:	8b 45 e0             	mov    -0x20(%rbp),%eax$/;"	l
f011120a	obj/kern/kernel.asm	/^    f011120a:	83 e0 01             	and    $0x1,%eax$/;"	l
f011120d	obj/kern/kernel.asm	/^    f011120d:	85 c0                	test   %eax,%eax$/;"	l
f011120f	obj/kern/kernel.asm	/^    f011120f:	75 64                	jne    fffffffff0111275 <end+0xfffffffefe66fed5>$/;"	l
f0111211	obj/kern/kernel.asm	/^    f0111211:	8b 45 e0             	mov    -0x20(%rbp),%eax$/;"	l
f0111214	obj/kern/kernel.asm	/^    f0111214:	83 e0 06             	and    $0x6,%eax$/;"	l
f0111217	obj/kern/kernel.asm	/^    f0111217:	83 f8 04             	cmp    $0x4,%eax$/;"	l
f011121a	obj/kern/kernel.asm	/^    f011121a:	75 07                	jne    fffffffff0111223 <end+0xfffffffefe66fe83>$/;"	l
f011121c	obj/kern/kernel.asm	/^    f011121c:	c7 45 d4 08 00 00 00 	movl   $0x8,-0x2c(%rbp)$/;"	l
f0111223	obj/kern/kernel.asm	/^    f0111223:	8b 45 e0             	mov    -0x20(%rbp),%eax$/;"	l
f0111226	obj/kern/kernel.asm	/^    f0111226:	83 e0 f0             	and    $0xfffffffffffffff0,%eax$/;"	l
f0111229	obj/kern/kernel.asm	/^    f0111229:	f7 d8                	neg    %eax$/;"	l
f011122b	obj/kern/kernel.asm	/^    f011122b:	23 45 e0             	and    -0x20(%rbp),%eax$/;"	l
f011122e	obj/kern/kernel.asm	/^    f011122e:	83 e0 f0             	and    $0xfffffffffffffff0,%eax$/;"	l
f0111231	obj/kern/kernel.asm	/^    f0111231:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
f0111234	obj/kern/kernel.asm	/^    f0111234:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
f0111237	obj/kern/kernel.asm	/^    f0111237:	83 e0 f0             	and    $0xfffffffffffffff0,%eax$/;"	l
f011123a	obj/kern/kernel.asm	/^    f011123a:	89 45 e8             	mov    %eax,-0x18(%rbp)$/;"	l
f011123d	obj/kern/kernel.asm	/^    f011123d:	48 b8 20 77 a2 f1 00 	mov    $0xf1a27720,%rax$/;"	l
f0111244	obj/kern/kernel.asm	/^    f0111244:	00 00 00 $/;"	l
f0111247	obj/kern/kernel.asm	/^    f0111247:	8b 00                	mov    (%rax),%eax$/;"	l
f0111249	obj/kern/kernel.asm	/^    f0111249:	85 c0                	test   %eax,%eax$/;"	l
f011124b	obj/kern/kernel.asm	/^    f011124b:	74 7a                	je     fffffffff01112c7 <end+0xfffffffefe66ff27>$/;"	l
f011124d	obj/kern/kernel.asm	/^    f011124d:	8b 4d e8             	mov    -0x18(%rbp),%ecx$/;"	l
f0111250	obj/kern/kernel.asm	/^    f0111250:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
f0111253	obj/kern/kernel.asm	/^    f0111253:	8b 45 e4             	mov    -0x1c(%rbp),%eax$/;"	l
f0111256	obj/kern/kernel.asm	/^    f0111256:	89 c6                	mov    %eax,%esi$/;"	l
f0111258	obj/kern/kernel.asm	/^    f0111258:	48 bf 58 39 11 f0 00 	mov    $0xf0113958,%rdi$/;"	l
f011125f	obj/kern/kernel.asm	/^    f011125f:	00 00 00 $/;"	l
f0111262	obj/kern/kernel.asm	/^    f0111262:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0111267	obj/kern/kernel.asm	/^    f0111267:	48 bb eb 88 10 f0 00 	mov    $0xf01088eb,%rbx$/;"	l
f011126e	obj/kern/kernel.asm	/^    f011126e:	00 00 00 $/;"	l
f0111271	obj/kern/kernel.asm	/^    f0111271:	ff d3                	callq  *%rbx$/;"	l
f0111273	obj/kern/kernel.asm	/^    f0111273:	eb 53                	jmp    fffffffff01112c8 <end+0xfffffffefe66ff28>$/;"	l
f0111275	obj/kern/kernel.asm	/^    f0111275:	8b 45 e0             	mov    -0x20(%rbp),%eax$/;"	l
f0111278	obj/kern/kernel.asm	/^    f0111278:	83 e0 fc             	and    $0xfffffffffffffffc,%eax$/;"	l
f011127b	obj/kern/kernel.asm	/^    f011127b:	f7 d8                	neg    %eax$/;"	l
f011127d	obj/kern/kernel.asm	/^    f011127d:	23 45 e0             	and    -0x20(%rbp),%eax$/;"	l
f0111280	obj/kern/kernel.asm	/^    f0111280:	83 e0 fc             	and    $0xfffffffffffffffc,%eax$/;"	l
f0111283	obj/kern/kernel.asm	/^    f0111283:	89 45 ec             	mov    %eax,-0x14(%rbp)$/;"	l
f0111286	obj/kern/kernel.asm	/^    f0111286:	8b 45 dc             	mov    -0x24(%rbp),%eax$/;"	l
f0111289	obj/kern/kernel.asm	/^    f0111289:	83 e0 fc             	and    $0xfffffffffffffffc,%eax$/;"	l
f011128c	obj/kern/kernel.asm	/^    f011128c:	89 45 e8             	mov    %eax,-0x18(%rbp)$/;"	l
f011128f	obj/kern/kernel.asm	/^    f011128f:	48 b8 20 77 a2 f1 00 	mov    $0xf1a27720,%rax$/;"	l
f0111296	obj/kern/kernel.asm	/^    f0111296:	00 00 00 $/;"	l
f0111299	obj/kern/kernel.asm	/^    f0111299:	8b 00                	mov    (%rax),%eax$/;"	l
f011129b	obj/kern/kernel.asm	/^    f011129b:	85 c0                	test   %eax,%eax$/;"	l
f011129d	obj/kern/kernel.asm	/^    f011129d:	74 29                	je     fffffffff01112c8 <end+0xfffffffefe66ff28>$/;"	l
f011129f	obj/kern/kernel.asm	/^    f011129f:	8b 4d e8             	mov    -0x18(%rbp),%ecx$/;"	l
f01112a2	obj/kern/kernel.asm	/^    f01112a2:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
f01112a5	obj/kern/kernel.asm	/^    f01112a5:	8b 45 e4             	mov    -0x1c(%rbp),%eax$/;"	l
f01112a8	obj/kern/kernel.asm	/^    f01112a8:	89 c6                	mov    %eax,%esi$/;"	l
f01112aa	obj/kern/kernel.asm	/^    f01112aa:	48 bf 80 39 11 f0 00 	mov    $0xf0113980,%rdi$/;"	l
f01112b1	obj/kern/kernel.asm	/^    f01112b1:	00 00 00 $/;"	l
f01112b4	obj/kern/kernel.asm	/^    f01112b4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01112b9	obj/kern/kernel.asm	/^    f01112b9:	48 bb eb 88 10 f0 00 	mov    $0xf01088eb,%rbx$/;"	l
f01112c0	obj/kern/kernel.asm	/^    f01112c0:	00 00 00 $/;"	l
f01112c3	obj/kern/kernel.asm	/^    f01112c3:	ff d3                	callq  *%rbx$/;"	l
f01112c5	obj/kern/kernel.asm	/^    f01112c5:	eb 01                	jmp    fffffffff01112c8 <end+0xfffffffefe66ff28>$/;"	l
f01112c7	obj/kern/kernel.asm	/^    f01112c7:	90                   	nop$/;"	l
f01112c8	obj/kern/kernel.asm	/^    f01112c8:	8b 55 dc             	mov    -0x24(%rbp),%edx$/;"	l
f01112cb	obj/kern/kernel.asm	/^    f01112cb:	8b 4d d8             	mov    -0x28(%rbp),%ecx$/;"	l
f01112ce	obj/kern/kernel.asm	/^    f01112ce:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f01112d2	obj/kern/kernel.asm	/^    f01112d2:	89 ce                	mov    %ecx,%esi$/;"	l
f01112d4	obj/kern/kernel.asm	/^    f01112d4:	48 89 c7             	mov    %rax,%rdi$/;"	l
f01112d7	obj/kern/kernel.asm	/^    f01112d7:	48 b8 08 0b 11 f0 00 	mov    $0xf0110b08,%rax$/;"	l
f01112de	obj/kern/kernel.asm	/^    f01112de:	00 00 00 $/;"	l
f01112e1	obj/kern/kernel.asm	/^    f01112e1:	ff d0                	callq  *%rax$/;"	l
f01112e3	obj/kern/kernel.asm	/^    f01112e3:	8b 55 e4             	mov    -0x1c(%rbp),%edx$/;"	l
f01112e6	obj/kern/kernel.asm	/^    f01112e6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f01112ea	obj/kern/kernel.asm	/^    f01112ea:	48 63 d2             	movslq %edx,%rdx$/;"	l
f01112ed	obj/kern/kernel.asm	/^    f01112ed:	48 8d 4a 04          	lea    0x4(%rdx),%rcx$/;"	l
f01112f1	obj/kern/kernel.asm	/^    f01112f1:	8b 55 e8             	mov    -0x18(%rbp),%edx$/;"	l
f01112f4	obj/kern/kernel.asm	/^    f01112f4:	89 54 88 08          	mov    %edx,0x8(%rax,%rcx,4)$/;"	l
f01112f8	obj/kern/kernel.asm	/^    f01112f8:	8b 55 e4             	mov    -0x1c(%rbp),%edx$/;"	l
f01112fb	obj/kern/kernel.asm	/^    f01112fb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f01112ff	obj/kern/kernel.asm	/^    f01112ff:	48 63 d2             	movslq %edx,%rdx$/;"	l
f0111302	obj/kern/kernel.asm	/^    f0111302:	48 8d 4a 0c          	lea    0xc(%rdx),%rcx$/;"	l
f0111306	obj/kern/kernel.asm	/^    f0111306:	8b 55 ec             	mov    -0x14(%rbp),%edx$/;"	l
f0111309	obj/kern/kernel.asm	/^    f0111309:	89 14 88             	mov    %edx,(%rax,%rcx,4)$/;"	l
f011130c	obj/kern/kernel.asm	/^    f011130c:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)$/;"	l
f0111310	obj/kern/kernel.asm	/^    f0111310:	74 6e                	je     fffffffff0111380 <end+0xfffffffefe66ffe0>$/;"	l
f0111312	obj/kern/kernel.asm	/^    f0111312:	83 7d e8 00          	cmpl   $0x0,-0x18(%rbp)$/;"	l
f0111316	obj/kern/kernel.asm	/^    f0111316:	75 68                	jne    fffffffff0111380 <end+0xfffffffefe66ffe0>$/;"	l
f0111318	obj/kern/kernel.asm	/^    f0111318:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f011131c	obj/kern/kernel.asm	/^    f011131c:	8b 40 10             	mov    0x10(%rax),%eax$/;"	l
f011131f	obj/kern/kernel.asm	/^    f011131f:	89 c7                	mov    %eax,%edi$/;"	l
f0111321	obj/kern/kernel.asm	/^    f0111321:	c1 ef 10             	shr    $0x10,%edi$/;"	l
f0111324	obj/kern/kernel.asm	/^    f0111324:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f0111328	obj/kern/kernel.asm	/^    f0111328:	8b 40 10             	mov    0x10(%rax),%eax$/;"	l
f011132b	obj/kern/kernel.asm	/^    f011132b:	0f b7 f0             	movzwl %ax,%esi$/;"	l
f011132e	obj/kern/kernel.asm	/^    f011132e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f0111332	obj/kern/kernel.asm	/^    f0111332:	8b 48 0c             	mov    0xc(%rax),%ecx$/;"	l
f0111335	obj/kern/kernel.asm	/^    f0111335:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f0111339	obj/kern/kernel.asm	/^    f0111339:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
f011133c	obj/kern/kernel.asm	/^    f011133c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f0111340	obj/kern/kernel.asm	/^    f0111340:	48 8b 00             	mov    (%rax),%rax$/;"	l
f0111343	obj/kern/kernel.asm	/^    f0111343:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
f0111346	obj/kern/kernel.asm	/^    f0111346:	8b 5d ec             	mov    -0x14(%rbp),%ebx$/;"	l
f0111349	obj/kern/kernel.asm	/^    f0111349:	89 5c 24 10          	mov    %ebx,0x10(%rsp)$/;"	l
f011134d	obj/kern/kernel.asm	/^    f011134d:	8b 5d e8             	mov    -0x18(%rbp),%ebx$/;"	l
f0111350	obj/kern/kernel.asm	/^    f0111350:	89 5c 24 08          	mov    %ebx,0x8(%rsp)$/;"	l
f0111354	obj/kern/kernel.asm	/^    f0111354:	8b 5d e4             	mov    -0x1c(%rbp),%ebx$/;"	l
f0111357	obj/kern/kernel.asm	/^    f0111357:	89 1c 24             	mov    %ebx,(%rsp)$/;"	l
f011135a	obj/kern/kernel.asm	/^    f011135a:	41 89 f9             	mov    %edi,%r9d$/;"	l
f011135d	obj/kern/kernel.asm	/^    f011135d:	41 89 f0             	mov    %esi,%r8d$/;"	l
f0111360	obj/kern/kernel.asm	/^    f0111360:	89 c6                	mov    %eax,%esi$/;"	l
f0111362	obj/kern/kernel.asm	/^    f0111362:	48 bf a8 39 11 f0 00 	mov    $0xf01139a8,%rdi$/;"	l
f0111369	obj/kern/kernel.asm	/^    f0111369:	00 00 00 $/;"	l
f011136c	obj/kern/kernel.asm	/^    f011136c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f0111371	obj/kern/kernel.asm	/^    f0111371:	48 bb eb 88 10 f0 00 	mov    $0xf01088eb,%rbx$/;"	l
f0111378	obj/kern/kernel.asm	/^    f0111378:	00 00 00 $/;"	l
f011137b	obj/kern/kernel.asm	/^    f011137b:	ff d3                	callq  *%rbx$/;"	l
f011137d	obj/kern/kernel.asm	/^    f011137d:	eb 01                	jmp    fffffffff0111380 <end+0xfffffffefe66ffe0>$/;"	l
f011137f	obj/kern/kernel.asm	/^    f011137f:	90                   	nop$/;"	l
f0111380	obj/kern/kernel.asm	/^    f0111380:	8b 45 d4             	mov    -0x2c(%rbp),%eax$/;"	l
f0111383	obj/kern/kernel.asm	/^    f0111383:	01 45 d8             	add    %eax,-0x28(%rbp)$/;"	l
f0111386	obj/kern/kernel.asm	/^    f0111386:	83 7d d8 27          	cmpl   $0x27,-0x28(%rbp)$/;"	l
f011138a	obj/kern/kernel.asm	/^    f011138a:	0f 86 07 fe ff ff    	jbe    fffffffff0111197 <end+0xfffffffefe66fdf7>$/;"	l
f0111390	obj/kern/kernel.asm	/^    f0111390:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f0111394	obj/kern/kernel.asm	/^    f0111394:	8b 40 10             	mov    0x10(%rax),%eax$/;"	l
f0111397	obj/kern/kernel.asm	/^    f0111397:	89 c6                	mov    %eax,%esi$/;"	l
f0111399	obj/kern/kernel.asm	/^    f0111399:	c1 ee 10             	shr    $0x10,%esi$/;"	l
f011139c	obj/kern/kernel.asm	/^    f011139c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f01113a0	obj/kern/kernel.asm	/^    f01113a0:	8b 40 10             	mov    0x10(%rax),%eax$/;"	l
f01113a3	obj/kern/kernel.asm	/^    f01113a3:	0f b7 d8             	movzwl %ax,%ebx$/;"	l
f01113a6	obj/kern/kernel.asm	/^    f01113a6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f01113aa	obj/kern/kernel.asm	/^    f01113aa:	8b 48 0c             	mov    0xc(%rax),%ecx$/;"	l
f01113ad	obj/kern/kernel.asm	/^    f01113ad:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f01113b1	obj/kern/kernel.asm	/^    f01113b1:	8b 50 08             	mov    0x8(%rax),%edx$/;"	l
f01113b4	obj/kern/kernel.asm	/^    f01113b4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax$/;"	l
f01113b8	obj/kern/kernel.asm	/^    f01113b8:	48 8b 00             	mov    (%rax),%rax$/;"	l
f01113bb	obj/kern/kernel.asm	/^    f01113bb:	8b 40 08             	mov    0x8(%rax),%eax$/;"	l
f01113be	obj/kern/kernel.asm	/^    f01113be:	41 89 f1             	mov    %esi,%r9d$/;"	l
f01113c1	obj/kern/kernel.asm	/^    f01113c1:	41 89 d8             	mov    %ebx,%r8d$/;"	l
f01113c4	obj/kern/kernel.asm	/^    f01113c4:	89 c6                	mov    %eax,%esi$/;"	l
f01113c6	obj/kern/kernel.asm	/^    f01113c6:	48 bf 08 3a 11 f0 00 	mov    $0xf0113a08,%rdi$/;"	l
f01113cd	obj/kern/kernel.asm	/^    f01113cd:	00 00 00 $/;"	l
f01113d0	obj/kern/kernel.asm	/^    f01113d0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f01113d5	obj/kern/kernel.asm	/^    f01113d5:	48 bb eb 88 10 f0 00 	mov    $0xf01088eb,%rbx$/;"	l
f01113dc	obj/kern/kernel.asm	/^    f01113dc:	00 00 00 $/;"	l
f01113df	obj/kern/kernel.asm	/^    f01113df:	ff d3                	callq  *%rbx$/;"	l
f01113e1	obj/kern/kernel.asm	/^    f01113e1:	48 83 c4 58          	add    $0x58,%rsp$/;"	l
f01113e5	obj/kern/kernel.asm	/^    f01113e5:	5b                   	pop    %rbx$/;"	l
f01113e6	obj/kern/kernel.asm	/^    f01113e6:	c9                   	leaveq $/;"	l
f01113e7	obj/kern/kernel.asm	/^    f01113e7:	c3                   	retq   $/;"	l
f01113e8	obj/kern/kernel.asm	/^    f01113e8:	55                   	push   %rbp$/;"	l
f01113e9	obj/kern/kernel.asm	/^    f01113e9:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f01113ec	obj/kern/kernel.asm	/^    f01113ec:	ba 10 00 00 00       	mov    $0x10,%edx$/;"	l
f01113f1	obj/kern/kernel.asm	/^    f01113f1:	be 00 00 00 00       	mov    $0x0,%esi$/;"	l
f01113f6	obj/kern/kernel.asm	/^    f01113f6:	48 bf 30 77 a2 f1 00 	mov    $0xf1a27730,%rdi$/;"	l
f01113fd	obj/kern/kernel.asm	/^    f01113fd:	00 00 00 $/;"	l
f0111400	obj/kern/kernel.asm	/^    f0111400:	48 b8 42 ee 10 f0 00 	mov    $0xf010ee42,%rax$/;"	l
f0111407	obj/kern/kernel.asm	/^    f0111407:	00 00 00 $/;"	l
f011140a	obj/kern/kernel.asm	/^    f011140a:	ff d0                	callq  *%rax$/;"	l
f011140c	obj/kern/kernel.asm	/^    f011140c:	48 bf 30 77 a2 f1 00 	mov    $0xf1a27730,%rdi$/;"	l
f0111413	obj/kern/kernel.asm	/^    f0111413:	00 00 00 $/;"	l
f0111416	obj/kern/kernel.asm	/^    f0111416:	48 b8 ac 0d 11 f0 00 	mov    $0xf0110dac,%rax$/;"	l
f011141d	obj/kern/kernel.asm	/^    f011141d:	00 00 00 $/;"	l
f0111420	obj/kern/kernel.asm	/^    f0111420:	ff d0                	callq  *%rax$/;"	l
f0111422	obj/kern/kernel.asm	/^    f0111422:	c9                   	leaveq $/;"	l
f0111423	obj/kern/kernel.asm	/^    f0111423:	c3                   	retq   $/;"	l
f0111424	obj/kern/kernel.asm	/^    f0111424:	55                   	push   %rbp$/;"	l
f0111425	obj/kern/kernel.asm	/^    f0111425:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f0111428	obj/kern/kernel.asm	/^    f0111428:	48 b8 40 77 a2 f1 00 	mov    $0xf1a27740,%rax$/;"	l
f011142f	obj/kern/kernel.asm	/^    f011142f:	00 00 00 $/;"	l
f0111432	obj/kern/kernel.asm	/^    f0111432:	c7 00 00 00 00 00    	movl   $0x0,(%rax)$/;"	l
f0111438	obj/kern/kernel.asm	/^    f0111438:	c9                   	leaveq $/;"	l
f0111439	obj/kern/kernel.asm	/^    f0111439:	c3                   	retq   $/;"	l
f011143a	obj/kern/kernel.asm	/^    f011143a:	55                   	push   %rbp$/;"	l
f011143b	obj/kern/kernel.asm	/^    f011143b:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f011143e	obj/kern/kernel.asm	/^    f011143e:	48 b8 40 77 a2 f1 00 	mov    $0xf1a27740,%rax$/;"	l
f0111445	obj/kern/kernel.asm	/^    f0111445:	00 00 00 $/;"	l
f0111448	obj/kern/kernel.asm	/^    f0111448:	8b 00                	mov    (%rax),%eax$/;"	l
f011144a	obj/kern/kernel.asm	/^    f011144a:	8d 50 01             	lea    0x1(%rax),%edx$/;"	l
f011144d	obj/kern/kernel.asm	/^    f011144d:	48 b8 40 77 a2 f1 00 	mov    $0xf1a27740,%rax$/;"	l
f0111454	obj/kern/kernel.asm	/^    f0111454:	00 00 00 $/;"	l
f0111457	obj/kern/kernel.asm	/^    f0111457:	89 10                	mov    %edx,(%rax)$/;"	l
f0111459	obj/kern/kernel.asm	/^    f0111459:	48 b8 40 77 a2 f1 00 	mov    $0xf1a27740,%rax$/;"	l
f0111460	obj/kern/kernel.asm	/^    f0111460:	00 00 00 $/;"	l
f0111463	obj/kern/kernel.asm	/^    f0111463:	8b 10                	mov    (%rax),%edx$/;"	l
f0111465	obj/kern/kernel.asm	/^    f0111465:	89 d0                	mov    %edx,%eax$/;"	l
f0111467	obj/kern/kernel.asm	/^    f0111467:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f011146a	obj/kern/kernel.asm	/^    f011146a:	01 d0                	add    %edx,%eax$/;"	l
f011146c	obj/kern/kernel.asm	/^    f011146c:	01 c0                	add    %eax,%eax$/;"	l
f011146e	obj/kern/kernel.asm	/^    f011146e:	89 c2                	mov    %eax,%edx$/;"	l
f0111470	obj/kern/kernel.asm	/^    f0111470:	48 b8 40 77 a2 f1 00 	mov    $0xf1a27740,%rax$/;"	l
f0111477	obj/kern/kernel.asm	/^    f0111477:	00 00 00 $/;"	l
f011147a	obj/kern/kernel.asm	/^    f011147a:	8b 00                	mov    (%rax),%eax$/;"	l
f011147c	obj/kern/kernel.asm	/^    f011147c:	39 c2                	cmp    %eax,%edx$/;"	l
f011147e	obj/kern/kernel.asm	/^    f011147e:	73 2a                	jae    fffffffff01114aa <end+0xfffffffefe67010a>$/;"	l
f0111480	obj/kern/kernel.asm	/^    f0111480:	48 ba 37 3a 11 f0 00 	mov    $0xf0113a37,%rdx$/;"	l
f0111487	obj/kern/kernel.asm	/^    f0111487:	00 00 00 $/;"	l
f011148a	obj/kern/kernel.asm	/^    f011148a:	be 13 00 00 00       	mov    $0x13,%esi$/;"	l
f011148f	obj/kern/kernel.asm	/^    f011148f:	48 bf 52 3a 11 f0 00 	mov    $0xf0113a52,%rdi$/;"	l
f0111496	obj/kern/kernel.asm	/^    f0111496:	00 00 00 $/;"	l
f0111499	obj/kern/kernel.asm	/^    f0111499:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
f011149e	obj/kern/kernel.asm	/^    f011149e:	48 b9 18 05 10 f0 00 	mov    $0xf0100518,%rcx$/;"	l
f01114a5	obj/kern/kernel.asm	/^    f01114a5:	00 00 00 $/;"	l
f01114a8	obj/kern/kernel.asm	/^    f01114a8:	ff d1                	callq  *%rcx$/;"	l
f01114aa	obj/kern/kernel.asm	/^    f01114aa:	c9                   	leaveq $/;"	l
f01114ab	obj/kern/kernel.asm	/^    f01114ab:	c3                   	retq   $/;"	l
f01114ac	obj/kern/kernel.asm	/^    f01114ac:	55                   	push   %rbp$/;"	l
f01114ad	obj/kern/kernel.asm	/^    f01114ad:	48 89 e5             	mov    %rsp,%rbp$/;"	l
f01114b0	obj/kern/kernel.asm	/^    f01114b0:	48 b8 40 77 a2 f1 00 	mov    $0xf1a27740,%rax$/;"	l
f01114b7	obj/kern/kernel.asm	/^    f01114b7:	00 00 00 $/;"	l
f01114ba	obj/kern/kernel.asm	/^    f01114ba:	8b 10                	mov    (%rax),%edx$/;"	l
f01114bc	obj/kern/kernel.asm	/^    f01114bc:	89 d0                	mov    %edx,%eax$/;"	l
f01114be	obj/kern/kernel.asm	/^    f01114be:	c1 e0 02             	shl    $0x2,%eax$/;"	l
f01114c1	obj/kern/kernel.asm	/^    f01114c1:	01 d0                	add    %edx,%eax$/;"	l
f01114c3	obj/kern/kernel.asm	/^    f01114c3:	01 c0                	add    %eax,%eax$/;"	l
f01114c5	obj/kern/kernel.asm	/^    f01114c5:	c9                   	leaveq $/;"	l
f01114c6	obj/kern/kernel.asm	/^    f01114c6:	c3                   	retq   $/;"	l
f_direct	inc/fs.h	/^	uint32_t f_direct[NDIRECT];	\/\/ direct blocks$/;"	m	struct:File
f_indirect	inc/fs.h	/^	uint32_t f_indirect;		\/\/ indirect block$/;"	m	struct:File
f_name	inc/fs.h	/^	char f_name[MAXNAMELEN];	\/\/ filename$/;"	m	struct:File
f_pad	inc/fs.h	/^	uint8_t f_pad[256 - MAXNAMELEN - 8 - 4*NDIRECT - 4];$/;"	m	struct:File
f_size	inc/fs.h	/^	off_t f_size;			\/\/ file size in bytes$/;"	m	struct:File
f_type	inc/fs.h	/^	uint32_t f_type;		\/\/ file type$/;"	m	struct:File
false	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon3
fault_va	obj/kern/kernel.asm	/^	fault_va = rcr2();$/;"	d
fcstab	net/lwip/netif/ppp/ppp.c	/^static const u_short fcstab[256] = {$/;"	v	file:
fd	lib/fprintf.c	/^	int fd;		\/\/ file descriptor$/;"	m	struct:printbuf	file:
fd	net/lwip/netif/ppp/ppp.c	/^  sio_fd_t fd;                  \/* File device ID of port. *\/$/;"	m	struct:PPPControl_s	file:
fd	obj/fs/fs.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/fs/fs.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/net/ns.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/net/ns.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/net/testinput.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/net/testinput.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/net/testoutput.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/net/testoutput.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/echosrv.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/echosrv.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/echotest.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/echotest.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/forktree.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/forktree.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/hello.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/hello.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/httpd.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/httpd.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/icode.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/icode.asm	/^	fd = -1;$/;"	d
fd	obj/user/icode.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/icode.asm	/^	fd = r;$/;"	d
fd	obj/user/idle.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/idle.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/init.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/init.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/pingpong.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/pingpong.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/primes.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/primes.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testfile.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testfile.asm	/^	fd = (struct Fd*) (0xD0000000 + r*PGSIZE);$/;"	d
fd	obj/user/testfile.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/testtime.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/testtime.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd	obj/user/writemotd.asm	/^		fd = INDEX2FD(i);$/;"	d
fd	obj/user/writemotd.asm	/^	fd = INDEX2FD(fdnum);$/;"	d
fd2data	lib/fd.c	/^fd2data(struct Fd *fd)$/;"	f
fd2num	lib/fd.c	/^fd2num(struct Fd *fd)$/;"	f
fd2sockid	lib/sockets.c	/^fd2sockid(int fd)$/;"	f	file:
fd_alloc	lib/fd.c	/^fd_alloc(struct Fd **fd_store)$/;"	f
fd_bits	net/lwip/include/lwip/sockets.h	/^          unsigned char fd_bits [(FD_SETSIZE+7)\/8];$/;"	m	struct:fd_set
fd_close	lib/fd.c	/^fd_close(struct Fd *fd, bool must_exist)$/;"	f
fd_dev_id	inc/fd.h	/^	int fd_dev_id;$/;"	m	struct:Fd
fd_file	inc/fd.h	/^		struct FdFile fd_file;$/;"	m	union:Fd::__anon2	typeref:struct:Fd::__anon2::FdFile
fd_lookup	lib/fd.c	/^fd_lookup(int fdnum, struct Fd **fd_store)$/;"	f
fd_offset	inc/fd.h	/^	off_t fd_offset;$/;"	m	struct:Fd
fd_omode	inc/fd.h	/^	int fd_omode;$/;"	m	struct:Fd
fd_set	net/lwip/include/lwip/sockets.h	/^        } fd_set;$/;"	t	typeref:struct:fd_set
fd_set	net/lwip/include/lwip/sockets.h	/^  typedef struct fd_set {$/;"	s
fd_sock	inc/fd.h	/^		struct FdSock fd_sock;$/;"	m	union:Fd::__anon2	typeref:struct:Fd::__anon2::FdSock
fdcopy	obj/user/testfile.asm	/^	fdcopy = *FVA;$/;"	d
feature	kern/mpconfig.c	/^	uint32_t feature;               \/\/ feature flags from CPUID instruction$/;"	m	struct:mpproc	file:
field_len	obj/net/ns.asm	/^        field_len = DHCP_FILE_LEN + DHCP_SNAME_LEN;$/;"	d
field_len	obj/net/ns.asm	/^        field_len = DHCP_FILE_LEN;$/;"	d
field_len	obj/net/ns.asm	/^        field_len = DHCP_SNAME_LEN;$/;"	d
file	net/lwip/core/memp.c	/^  const char *file;$/;"	m	struct:memp	file:
file_block_walk	fs/fs.c	/^file_block_walk(struct File *f, uint32_t filebno, uint32_t **ppdiskbno, bool alloc)$/;"	f	file:
file_create	fs/fs.c	/^file_create(const char *path, struct File **pf)$/;"	f
file_flush	fs/fs.c	/^file_flush(struct File *f)$/;"	f
file_free_block	fs/fs.c	/^file_free_block(struct File *f, uint32_t filebno)$/;"	f	file:
file_get_block	fs/fs.c	/^file_get_block(struct File *f, uint32_t filebno, char **blk)$/;"	f
file_open	fs/fs.c	/^file_open(const char *path, struct File **pf)$/;"	f
file_read	fs/fs.c	/^file_read(struct File *f, void *buf, size_t count, off_t offset)$/;"	f
file_remove	fs/fs.c	/^file_remove(const char *path)$/;"	f
file_set_size	fs/fs.c	/^file_set_size(struct File *f, off_t newsize)$/;"	f
file_truncate_blocks	fs/fs.c	/^file_truncate_blocks(struct File *f, off_t newsize)$/;"	f	file:
file_write	fs/fs.c	/^file_write(struct File *f, const void *buf, size_t count, off_t offset)$/;"	f
fileid	obj/fs/fs.asm	/^	fileid = r;$/;"	d
fileno	gradelib.py	/^    def fileno(self):$/;"	f
fileno	gradelib.py	/^    def fileno(self):$/;"	m	class:GDBClient
find_entry	net/lwip/netif/etharp.c	/^find_entry(struct ip_addr *ipaddr, u8_t flags, struct netif *netif)$/;"	f	file:
finishdir	fs/fsformat.c	/^finishdir(struct Dir *d)$/;"	f
finishdisk	fs/fsformat.c	/^finishdisk(void)$/;"	f
finished	net/lwip/netif/ppp/fsm.h	/^  void (*finished)(fsm*);                           \/* Called when we don't want the lower layer *\/$/;"	m	struct:fsm_callbacks
finishfile	fs/fsformat.c	/^finishfile(struct File *f, uint32_t start, uint32_t len)$/;"	f
first	obj/net/ns.asm	/^        first = 0;$/;"	d
first	obj/net/testinput.asm	/^		first = 0;$/;"	d
first_free_page	obj/kern/kernel.asm	/^	first_free_page = (char *) boot_alloc(0);$/;"	d
fl	obj/kern/kernel.asm	/^	fl = page_free_list;$/;"	d
flags	kern/mpconfig.c	/^	uint8_t flags;                  \/\/ CPU flags$/;"	m	struct:mpproc	file:
flags	net/lwip/api/sockets.c	/^  u16_t flags;$/;"	m	struct:lwip_socket	file:
flags	net/lwip/core/tcp_in.c	/^static u8_t flags;$/;"	v	file:
flags	net/lwip/include/ipv4/lwip/ip_frag.h	/^  u8_t flags;$/;"	m	struct:ip_reassdata
flags	net/lwip/include/lwip/netif.h	/^  u8_t flags;$/;"	m	struct:netif
flags	net/lwip/include/lwip/pbuf.h	/^  u8_t flags;$/;"	m	struct:pbuf
flags	net/lwip/include/lwip/tcp.h	/^  u8_t flags;$/;"	m	struct:tcp_pcb
flags	net/lwip/include/lwip/udp.h	/^  u8_t flags;$/;"	m	struct:udp_pcb
flags	net/lwip/netif/ppp/fsm.h	/^  int flags;                       \/* Contains option bits *\/$/;"	m	struct:fsm
flags	net/lwip/netif/ppp/vj.h	/^  u_short flags;$/;"	m	struct:vjcompress
flags	obj/net/ns.asm	/^  flags = TCPH_FLAGS(tcphdr) & TCP_FLAGS;$/;"	d
flags1	net/lwip/core/dns.c	/^  u8_t flags1;$/;"	m	struct:dns_hdr	file:
flags2	net/lwip/core/dns.c	/^  u8_t flags2;$/;"	m	struct:dns_hdr	file:
flow1	net/lwip/include/ipv6/lwip/ip.h	/^  u8_t flow1:4, tclass2:4;  $/;"	m	struct:ip_hdr
flow2	net/lwip/include/ipv6/lwip/ip.h	/^  u16_t flow2;$/;"	m	struct:ip_hdr
flush	inc/fs.h	/^	} flush;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_flush
flush_block	fs/bc.c	/^flush_block(void *addr)$/;"	f
for_us	obj/net/ns.asm	/^    for_us = 0;$/;"	d
for_us	obj/net/ns.asm	/^    for_us = ip_addr_cmp(&dipaddr, &(netif->ip_addr));$/;"	d
fork	lib/fork.c	/^fork(void)$/;"	f
forkchild	user/forktree.c	/^forkchild(const char *cur, char branch)$/;"	f
forktree	user/forktree.c	/^forktree(const char *cur)$/;"	f
found	net/lwip/core/dns.c	/^  dns_found_callback found;$/;"	m	struct:dns_table_entry	file:
fprintf	lib/fprintf.c	/^fprintf(int fd, const char *fmt, ...)$/;"	f
fraghdr	obj/net/ns.asm	/^    fraghdr = (struct ip_hdr*)(ipr->p->payload);$/;"	d
fraghdr	obj/net/ns.asm	/^  fraghdr = (struct ip_hdr*)new_p->payload; $/;"	d
fraghdr	obj/net/ns.asm	/^  fraghdr = (struct ip_hdr*)p->payload;$/;"	d
free	lib/malloc.c	/^free(void *v)$/;"	f
free_block	fs/fs.c	/^free_block(uint32_t blockno)$/;"	f
free_etharp_q	net/lwip/netif/etharp.c	/^free_etharp_q(struct etharp_q_entry *q)$/;"	f	file:
free_msg	net/lwip/jos/arch/sys_arch.c	/^    sys_sem_t free_msg;$/;"	m	struct:sys_mbox_entry	file:
free_pbuf_and_return	obj/net/ns.asm	/^free_pbuf_and_return:$/;"	l
freeaddrinfo	net/lwip/include/lwip/netdb.h	104;"	d
freed	net/lwip/jos/arch/sys_arch.c	/^    int freed;$/;"	m	struct:sys_mbox_entry	file:
freed	net/lwip/jos/arch/sys_arch.c	/^    int freed;$/;"	m	struct:sys_sem_entry	file:
freepbuf	obj/net/ns.asm	/^freepbuf:$/;"	l
fs_init	fs/fs.c	/^fs_init(void)$/;"	f
fs_sync	fs/fs.c	/^fs_sync(void)$/;"	f
fs_test	fs/test.c	/^fs_test(void)$/;"	f
fsenv	obj/fs/fs.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/net/ns.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/net/testinput.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/net/testoutput.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/echosrv.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/echotest.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/forktree.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/hello.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/httpd.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/icode.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/idle.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/init.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/pingpong.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/primes.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testfile.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testfile.asm	/^	fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/testtime.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fsenv	obj/user/writemotd.asm	/^		fsenv = ipc_find_env(ENV_TYPE_FS);$/;"	d
fshandler	fs/serv.c	/^typedef int (*fshandler)(envid_t envid, union Fsipc *req);$/;"	t	file:
fsipc	lib/file.c	/^fsipc(unsigned type, void *dstva)$/;"	f	file:
fsipcbuf	lib/file.c	/^union Fsipc fsipcbuf __attribute__((aligned(PGSIZE)));$/;"	v	typeref:union:Fsipc
fsm	net/lwip/netif/ppp/fsm.h	/^typedef struct fsm {$/;"	s
fsm	net/lwip/netif/ppp/fsm.h	/^} fsm;$/;"	t	typeref:struct:fsm
fsm_callbacks	net/lwip/netif/ppp/fsm.h	/^typedef struct fsm_callbacks {$/;"	s
fsm_callbacks	net/lwip/netif/ppp/fsm.h	/^} fsm_callbacks;$/;"	t	typeref:struct:fsm_callbacks
fsm_close	net/lwip/netif/ppp/fsm.c	/^fsm_close(fsm *f, char *reason)$/;"	f
fsm_init	net/lwip/netif/ppp/fsm.c	/^fsm_init(fsm *f)$/;"	f
fsm_input	net/lwip/netif/ppp/fsm.c	/^fsm_input(fsm *f, u_char *inpacket, int l)$/;"	f
fsm_lowerdown	net/lwip/netif/ppp/fsm.c	/^fsm_lowerdown(fsm *f)$/;"	f
fsm_lowerup	net/lwip/netif/ppp/fsm.c	/^fsm_lowerup(fsm *f)$/;"	f
fsm_open	net/lwip/netif/ppp/fsm.c	/^fsm_open(fsm *f)$/;"	f
fsm_protreject	net/lwip/netif/ppp/fsm.c	/^fsm_protreject(fsm *f)$/;"	f
fsm_rcoderej	net/lwip/netif/ppp/fsm.c	/^fsm_rcoderej(fsm *f, u_char *inp, int len)$/;"	f	file:
fsm_rconfack	net/lwip/netif/ppp/fsm.c	/^fsm_rconfack(fsm *f, int id, u_char *inp, int len)$/;"	f	file:
fsm_rconfnakrej	net/lwip/netif/ppp/fsm.c	/^fsm_rconfnakrej(fsm *f, int code, int id, u_char *inp, int len)$/;"	f	file:
fsm_rconfreq	net/lwip/netif/ppp/fsm.c	/^fsm_rconfreq(fsm *f, u_char id, u_char *inp, int len)$/;"	f	file:
fsm_rtermack	net/lwip/netif/ppp/fsm.c	/^fsm_rtermack(fsm *f)$/;"	f	file:
fsm_rtermreq	net/lwip/netif/ppp/fsm.c	/^fsm_rtermreq(fsm *f, int id, u_char *p, int len)$/;"	f	file:
fsm_sconfreq	net/lwip/netif/ppp/fsm.c	/^fsm_sconfreq(fsm *f, int retransmit)$/;"	f	file:
fsm_sdata	net/lwip/netif/ppp/fsm.c	/^fsm_sdata( fsm *f, u_char code, u_char id, u_char *data, int datalen)$/;"	f
fsm_timeout	net/lwip/netif/ppp/fsm.c	/^fsm_timeout(void *arg)$/;"	f	file:
fsreq	fs/serv.c	/^union Fsipc *fsreq = (union Fsipc *)0x0ffff000;$/;"	v	typeref:union:Fsipc
fstat	lib/fd.c	/^fstat(int fdnum, struct Stat *stat)$/;"	f
ftruncate	lib/fd.c	/^ftruncate(int fdnum, off_t newsize)$/;"	f
func	kern/monitor.c	/^	int (*func)(int argc, char** argv, struct Trapframe* tf);$/;"	m	struct:Command	file:
func	kern/pci.h	/^    uint32_t func;$/;"	m	struct:pci_func
func	net/lwip/jos/arch/sys_arch.c	/^    void (*func)(void *arg);$/;"	m	struct:lwip_thread	file:
func	net/serv.c	/^	void (*func)(void);$/;"	m	struct:timer_thread	file:
function	net/lwip/include/lwip/api_msg.h	/^  void (* function)(struct api_msg_msg *msg);$/;"	m	struct:api_msg
function	net/lwip/include/lwip/netifapi.h	/^  void (* function)(struct netifapi_msg_msg *msg);$/;"	m	struct:netifapi_msg
fw	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER fw;               \/* Forwarded packets. *\/$/;"	m	struct:stats_proto
gd_dpl	inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc
gd_ist	inc/mmu.h	/^	unsigned gd_ist : 3;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc
gd_off_15_0	inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc
gd_off_31_16	inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc
gd_off_32_63	inc/mmu.h	/^    uint32_t gd_off_32_63;       $/;"	m	struct:Gatedesc
gd_p	inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc
gd_rsv1	inc/mmu.h	/^	unsigned gd_rsv1 : 5;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc
gd_rsv2	inc/mmu.h	/^    uint32_t gd_rsv2;                   $/;"	m	struct:Gatedesc
gd_s	inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc
gd_ss	inc/mmu.h	/^	unsigned gd_ss : 16;         \/\/ segment selector$/;"	m	struct:Gatedesc
gd_type	inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc
gdt	boot1/boot.S	/^gdt:$/;"	l
gdt	kern/env.c	/^struct Segdesc gdt[2*NCPU + 5] =$/;"	v	typeref:struct:Segdesc
gdt	kern/mpentry.S	/^gdt:$/;"	l
gdt32	kern/mpentry.S	/^gdt32:$/;"	l
gdt32desc	kern/mpentry.S	/^gdt32desc:$/;"	l
gdt_64	boot1/head64.S	/^gdt_64:$/;"	l
gdt_pd	kern/env.c	/^struct Pseudodesc gdt_pd = {$/;"	v	typeref:struct:Pseudodesc
gdtdesc	boot1/boot.S	/^gdtdesc:$/;"	l
gdtdesc	kern/mpentry.S	/^gdtdesc:$/;"	l
gdtdesc_64	boot1/head64.S	/^gdtdesc_64:$/;"	l
gdtdesc_64	kern/entry.S	/^gdtdesc_64:$/;"	l
gen	net/lwip/jos/arch/sys_arch.c	/^    int gen;$/;"	m	struct:sys_sem_entry	file:
gen_trap	net/lwip/include/lwip/snmp_msg.h	/^  u32_t gen_trap;$/;"	m	struct:snmp_msg_trap
generation	obj/kern/kernel.asm	/^		generation = 1 << ENVGENSHIFT;$/;"	d
generation	obj/kern/kernel.asm	/^	generation = (e->env_id + (1 << ENVGENSHIFT)) & ~(NENV - 1);$/;"	d
get_buffer	net/serv.c	/^get_buffer(void) {$/;"	f	file:
get_caller_pcs	kern/spinlock.c	/^get_caller_pcs(uint64_t pcs[])$/;"	f	file:
get_current_test	gradelib.py	/^def get_current_test():$/;"	f
get_gdb_port	gradelib.py	/^    def get_gdb_port():$/;"	f
get_idle_time	net/lwip/netif/ppp/ppp.c	/^get_idle_time(int u, struct ppp_idle *ip)$/;"	f
get_object_def	net/lwip/include/lwip/snmp_structs.h	/^  void (* const get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_array_node
get_object_def	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_external_node
get_object_def	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_list_rootnode
get_object_def	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_node
get_object_def	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_ram_array_node
get_object_def_a	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def_a)(u8_t rid, u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_external_node
get_object_def_pc	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def_pc)(u8_t rid, u8_t ident_len, s32_t *ident);$/;"	m	struct:mib_external_node
get_object_def_q	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def_q)(void* addr_inf, u8_t rid, u8_t ident_len, s32_t *ident);$/;"	m	struct:mib_external_node
get_objid	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_objid)(void* addr_inf, u8_t level, u16_t idx, s32_t *sub_id);$/;"	m	struct:mib_external_node
get_pap_passwd	net/lwip/netif/ppp/auth.c	/^get_pap_passwd(int unit, char *user, char *passwd)$/;"	f	file:
get_secret	net/lwip/netif/ppp/auth.c	/^int get_secret( int unit, char *client, char *server, char *secret, int *secret_len, int save_addrs)$/;"	f
get_socket	net/lwip/api/sockets.c	/^get_socket(int s)$/;"	f	file:
get_value	net/lwip/include/lwip/snmp_structs.h	/^  void (* const get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_array_node
get_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
get_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_list_rootnode
get_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_node
get_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_ram_array_node
get_value_a	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value_a)(u8_t rid, struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
get_value_pc	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value_pc)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node
get_value_q	net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value_q)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node
getaddrinfo	net/lwip/include/lwip/netdb.h	105;"	d
getchar	kern/console.c	/^getchar(void)$/;"	f
getchar	lib/console.c	/^getchar(void)$/;"	f
gethostbyname	net/lwip/include/lwip/netdb.h	101;"	d
gethostbyname_r	net/lwip/include/lwip/netdb.h	102;"	d
gethostbyname_r_helper	net/lwip/api/netdb.c	/^struct gethostbyname_r_helper {$/;"	s	file:
getint	lib/printfmt.c	/^getint(va_list *ap, int lflag)$/;"	f	file:
getip_hl	net/lwip/netif/ppp/vj.c	51;"	d	file:
getip_hl	net/lwip/netif/ppp/vj.c	54;"	d	file:
getpeername	net/lwip/include/lwip/sockets.h	332;"	d
getsockname	net/lwip/include/lwip/sockets.h	331;"	d
getsockopt	net/lwip/include/lwip/sockets.h	334;"	d
getth_off	net/lwip/netif/ppp/vj.c	52;"	d	file:
getth_off	net/lwip/netif/ppp/vj.c	55;"	d	file:
getuint	lib/printfmt.c	/^getuint(va_list *ap, int lflag)$/;"	f	file:
group_address	net/lwip/include/ipv4/lwip/igmp.h	/^  struct ip_addr     group_address;$/;"	m	struct:igmp_group	typeref:struct:igmp_group::ip_addr
group_query_rxed	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER group_query_rxed; \/* *\/$/;"	m	struct:stats_igmp
group_state	net/lwip/include/ipv4/lwip/igmp.h	/^  u8_t               group_state;$/;"	m	struct:igmp_group
grow	obj/net/ns.asm	/^  grow = new_len - p->tot_len;$/;"	d
gtrplen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t gtrplen;$/;"	m	struct:snmp_trap_header_lengths
gtrplenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t gtrplenlen;$/;"	m	struct:snmp_trap_header_lengths
gw	net/lwip/include/lwip/netif.h	/^  struct ip_addr gw;$/;"	m	struct:netif	typeref:struct:netif::ip_addr
gw	net/lwip/include/lwip/netifapi.h	/^      struct ip_addr *gw;$/;"	m	struct:netifapi_msg_msg::__anon20::__anon21	typeref:struct:netifapi_msg_msg::__anon20::__anon21::ip_addr
h	net/lwip/include/lwip/sys.h	/^  sys_timeout_handler h;$/;"	m	struct:sys_timeo
h	net/lwip/include/lwip/tcpip.h	/^      sys_timeout_handler h;$/;"	m	struct:tcpip_msg::__anon33::__anon36
h	obj/net/ns.asm	/^      h   = tmptimeout->h;$/;"	d
h	obj/net/ns.asm	/^      h = tmptimeout->h;$/;"	d
h_addr	net/lwip/include/lwip/netdb.h	71;"	d
h_addr_list	net/lwip/include/lwip/netdb.h	/^    char **h_addr_list; \/* A pointer to an array of pointers to network addresses (in$/;"	m	struct:hostent
h_addrtype	net/lwip/include/lwip/netdb.h	/^    int    h_addrtype;  \/* Address type. *\/$/;"	m	struct:hostent
h_aliases	net/lwip/include/lwip/netdb.h	/^    char **h_aliases;   \/* A pointer to an array of pointers to alternative host names,$/;"	m	struct:hostent
h_errno	net/lwip/api/netdb.c	/^int h_errno;$/;"	v
h_length	net/lwip/include/lwip/netdb.h	/^    int    h_length;    \/* The length, in bytes, of the address. *\/$/;"	m	struct:hostent
h_name	net/lwip/include/lwip/netdb.h	/^    char  *h_name;      \/* Official name of the host. *\/$/;"	m	struct:hostent
handle_client	user/echosrv.c	/^handle_client(int sock)$/;"	f
handle_client	user/httpd.c	/^handle_client(int sock)$/;"	f	file:
handle_output	gradelib.py	/^        def handle_output(output, buf=buf):$/;"	f	function:call_on_line.setup_call_on_line
handle_read	gradelib.py	/^    def handle_read(self):$/;"	f
handle_read	gradelib.py	/^    def handle_read(self):$/;"	m	class:GDBClient
handler	user/faultalloc.c	/^handler(struct UTrapframe *utf)$/;"	f
handler	user/faultallocbad.c	/^handler(struct UTrapframe *utf)$/;"	f
handler	user/faultdie.c	/^handler(struct UTrapframe *utf)$/;"	f
handlers	fs/serv.c	/^fshandler handlers[] = {$/;"	v
hang	boot/boot.S	/^hang:$/;"	l
hang	obj/boot/boot.asm	/^hang:$/;"	l
have_chap_secret	net/lwip/netif/ppp/auth.c	/^have_chap_secret(char *client, char *server, u32_t remote)$/;"	f	file:
have_pap_secret	net/lwip/netif/ppp/auth.c	/^have_pap_secret(void)$/;"	f	file:
hdr	obj/net/ns.asm	/^  hdr = p->payload;$/;"	d
hdrlen	obj/net/ns.asm	/^  hdrlen = TCPH_HDRLEN(tcphdr);$/;"	d
head	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *head;$/;"	m	struct:snmp_varbind_root	typeref:struct:snmp_varbind_root::snmp_varbind
head	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_list_node *head;$/;"	m	struct:mib_list_rootnode	typeref:struct:mib_list_rootnode::mib_list_node
head	net/lwip/jos/arch/sys_arch.c	/^    int head, nextq;$/;"	m	struct:sys_mbox_entry	file:
header	obj/net/ns.asm	/^    header = pbuf_alloc(PBUF_LINK, 0, PBUF_RAM);$/;"	d
header	user/httpd.c	/^	char *header;$/;"	m	struct:responce_header	file:
headers	user/httpd.c	/^struct responce_header headers[] = {$/;"	v	typeref:struct:responce_header
hello	user/buggyhello2.c	/^const char *hello = "hello, world\\n";$/;"	v
hexdump	grade-lab6	/^def hexdump(data):$/;"	f
hexdump	net/testinput.c	/^hexdump(const char *prefix, const void *data, int len)$/;"	f	file:
his_ipaddr	net/lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ppp_addrs::
hisaddr	net/lwip/netif/ppp/ipcp.h	/^  u32_t   ouraddr, hisaddr;  \/* Addresses in NETWORK BYTE ORDER *\/$/;"	m	struct:ipcp_options
hlen	obj/net/ns.asm	/^  hlen = IPH_HL(iphdr) * 4;$/;"	d
holding	kern/spinlock.c	/^holding(struct spinlock *lock)$/;"	f	file:
hoplim	net/lwip/include/ipv6/lwip/ip.h	/^  u8_t hoplim;              \/* hop limit (TTL) *\/$/;"	m	struct:ip_hdr
hostent	net/lwip/include/lwip/netdb.h	/^struct hostent {$/;"	s
hostname	net/lwip/include/lwip/netif.h	/^  char*  hostname;$/;"	m	struct:netif
htonl	net/lwip/core/ipv4/inet.c	/^htonl(u32_t n)$/;"	f
htonl	net/lwip/include/ipv4/lwip/inet.h	56;"	d
htonl	net/lwip/include/ipv4/lwip/inet.h	72;"	d
htonl	net/lwip/include/ipv4/lwip/inet.h	79;"	d
htonl	net/lwip/include/ipv4/lwip/inet.h	85;"	d
htons	net/lwip/core/ipv4/inet.c	/^htons(u16_t n)$/;"	f
htons	net/lwip/include/ipv4/lwip/inet.h	53;"	d
htons	net/lwip/include/ipv4/lwip/inet.h	70;"	d
htons	net/lwip/include/ipv4/lwip/inet.h	77;"	d
htons	net/lwip/include/ipv4/lwip/inet.h	83;"	d
http_port	grade-lab6	/^http_port = QEMU.get_gdb_port() + 2$/;"	v
http_request	user/httpd.c	/^struct http_request {$/;"	s	file:
http_request_parse	user/httpd.c	/^http_request_parse(struct http_request *req, char *request)$/;"	f	file:
hwaddr	net/lwip/include/lwip/netif.h	/^  u8_t hwaddr[NETIF_MAX_HWADDR_LEN];$/;"	m	struct:netif
hwaddr_len	net/lwip/include/lwip/netif.h	/^  u8_t hwaddr_len;$/;"	m	struct:netif
i	net/lwip/netif/ppp/md5.h	/^  u32_t i[2];               \/* number of _bits_ handled mod 2^64 *\/$/;"	m	struct:__anon13
i	obj/kern/kernel.asm	/^			i = conf->entry;$/;"	d
i	obj/kern/kernel.asm	/^		i = 1;$/;"	d
i	obj/kern/kernel.asm	/^		i = thiscpu->cpu_env-envs;$/;"	d
i	obj/kern/kernel.asm	/^	i = 0;$/;"	d
i	obj/net/ns.asm	/^      i = ETHARP_HWADDR_LEN;$/;"	d
i	obj/net/ns.asm	/^    i = 0;$/;"	d
i	obj/net/ns.asm	/^    i = empty;$/;"	d
i	obj/net/ns.asm	/^    i = old_pending;$/;"	d
i	obj/net/ns.asm	/^    i = old_queue;$/;"	d
i	obj/net/ns.asm	/^    i = old_stable;$/;"	d
i	obj/net/ns.asm	/^    i = sys_sem_wait_timeout(select_cb.sem, msectimeout);$/;"	d
i	obj/net/ns.asm	/^  i = alloc_socket(conn);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, ETHARP_FIND_ONLY);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, ETHARP_FIND_ONLY, NULL);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, ETHARP_TRY_HARD);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, ETHARP_TRY_HARD, netif);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, flags);$/;"	d
i	obj/net/ns.asm	/^  i = find_entry(ipaddr, flags, netif);$/;"	d
i	obj/net/testinput.asm	/^    i = 0;$/;"	d
i	obj/user/echosrv.asm	/^    i = 0;$/;"	d
i	obj/user/echotest.asm	/^    i = 0;$/;"	d
i	obj/user/httpd.asm	/^    i = 0;$/;"	d
i	obj/user/primes.asm	/^		i = ipc_recv(&envid, 0, 0);$/;"	d
i386_detect_memory	kern/pmap.c	/^i386_detect_memory(void)$/;"	f	file:
i386_detect_memory	kern/pmap.c.BACKUP.24152.c	/^i386_detect_memory(void)$/;"	f	file:
i386_detect_memory	kern/pmap.c.BASE.24152.c	/^i386_detect_memory(void)$/;"	f	file:
i386_detect_memory	kern/pmap.c.LOCAL.24152.c	/^i386_detect_memory(void)$/;"	f	file:
i386_detect_memory	kern/pmap.c.REMOTE.24152.c	/^i386_detect_memory(void)$/;"	f	file:
i386_detect_memory	kern/pmap1.c	/^i386_detect_memory(void)$/;"	f	file:
i386_init	init.s	/^i386_init:$/;"	l
i386_init	kern/init.c	/^i386_init(void)$/;"	f
icmp	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node icmp = {$/;"	v	typeref:struct:mib_array_node
icmp	net/lwip/include/lwip/stats.h	/^  struct stats_proto icmp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
icmp_dest_unreach	net/lwip/core/ipv4/icmp.c	/^icmp_dest_unreach(struct pbuf *p, enum icmp_dur_type t)$/;"	f
icmp_dest_unreach	net/lwip/core/ipv6/icmp6.c	/^icmp_dest_unreach(struct pbuf *p, enum icmp_dur_type t)$/;"	f
icmp_dur_hdr	net/lwip/include/ipv4/lwip/icmp.h	/^struct icmp_dur_hdr {$/;"	s
icmp_dur_hdr	net/lwip/include/ipv6/lwip/icmp.h	/^struct icmp_dur_hdr {$/;"	s
icmp_dur_type	net/lwip/include/ipv4/lwip/icmp.h	/^enum icmp_dur_type {$/;"	g
icmp_dur_type	net/lwip/include/ipv6/lwip/icmp.h	/^enum icmp_dur_type {$/;"	g
icmp_echo_hdr	net/lwip/include/ipv4/lwip/icmp.h	/^struct icmp_echo_hdr {$/;"	s
icmp_echo_hdr	net/lwip/include/ipv6/lwip/icmp.h	/^struct icmp_echo_hdr {$/;"	s
icmp_get_object_def	net/lwip/core/snmp/mib2.c	/^icmp_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
icmp_get_value	net/lwip/core/snmp/mib2.c	/^icmp_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
icmp_ids	net/lwip/core/snmp/mib2.c	/^const s32_t icmp_ids[26] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 };$/;"	v
icmp_input	net/lwip/core/ipv4/icmp.c	/^icmp_input(struct pbuf *p, struct netif *inp)$/;"	f
icmp_input	net/lwip/core/ipv6/icmp6.c	/^icmp_input(struct pbuf *p, struct netif *inp)$/;"	f
icmp_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const icmp_nodes[26] = {$/;"	v
icmp_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node icmp_scalar = {$/;"	v
icmp_te_hdr	net/lwip/include/ipv4/lwip/icmp.h	/^struct icmp_te_hdr {$/;"	s
icmp_te_hdr	net/lwip/include/ipv6/lwip/icmp.h	/^struct icmp_te_hdr {$/;"	s
icmp_te_type	net/lwip/include/ipv4/lwip/icmp.h	/^enum icmp_te_type {$/;"	g
icmp_te_type	net/lwip/include/ipv6/lwip/icmp.h	/^enum icmp_te_type {$/;"	g
icmp_time_exceeded	net/lwip/core/ipv4/icmp.c	/^icmp_time_exceeded(struct pbuf *p, enum icmp_te_type t)$/;"	f
icmp_time_exceeded	net/lwip/core/ipv6/icmp6.c	/^icmp_time_exceeded(struct pbuf *p, enum icmp_te_type t)$/;"	f
icmpinaddrmaskreps	net/lwip/core/snmp/mib2.c	/^             icmpinaddrmaskreps = 0,$/;"	v	file:
icmpinaddrmasks	net/lwip/core/snmp/mib2.c	/^             icmpinaddrmasks = 0,$/;"	v	file:
icmpindestunreachs	net/lwip/core/snmp/mib2.c	/^             icmpindestunreachs = 0,$/;"	v	file:
icmpinechoreps	net/lwip/core/snmp/mib2.c	/^             icmpinechoreps = 0,$/;"	v	file:
icmpinechos	net/lwip/core/snmp/mib2.c	/^             icmpinechos = 0,$/;"	v	file:
icmpinerrors	net/lwip/core/snmp/mib2.c	/^             icmpinerrors = 0,$/;"	v	file:
icmpinmsgs	net/lwip/core/snmp/mib2.c	/^static u32_t icmpinmsgs = 0,$/;"	v	file:
icmpinparmprobs	net/lwip/core/snmp/mib2.c	/^             icmpinparmprobs = 0,$/;"	v	file:
icmpinredirects	net/lwip/core/snmp/mib2.c	/^             icmpinredirects = 0,$/;"	v	file:
icmpinsrcquenchs	net/lwip/core/snmp/mib2.c	/^             icmpinsrcquenchs = 0,$/;"	v	file:
icmpintimeexcds	net/lwip/core/snmp/mib2.c	/^             icmpintimeexcds = 0,$/;"	v	file:
icmpintimestampreps	net/lwip/core/snmp/mib2.c	/^             icmpintimestampreps = 0,$/;"	v	file:
icmpintimestamps	net/lwip/core/snmp/mib2.c	/^             icmpintimestamps = 0,$/;"	v	file:
icmpoutaddrmaskreps	net/lwip/core/snmp/mib2.c	/^             icmpoutaddrmaskreps = 0;$/;"	v	file:
icmpoutaddrmasks	net/lwip/core/snmp/mib2.c	/^             icmpoutaddrmasks = 0,$/;"	v	file:
icmpoutdestunreachs	net/lwip/core/snmp/mib2.c	/^             icmpoutdestunreachs = 0,$/;"	v	file:
icmpoutechoreps	net/lwip/core/snmp/mib2.c	/^             icmpoutechoreps = 0,$/;"	v	file:
icmpoutechos	net/lwip/core/snmp/mib2.c	/^             icmpoutechos = 0,$/;"	v	file:
icmpouterrors	net/lwip/core/snmp/mib2.c	/^             icmpouterrors = 0,$/;"	v	file:
icmpoutmsgs	net/lwip/core/snmp/mib2.c	/^             icmpoutmsgs = 0,$/;"	v	file:
icmpoutparmprobs	net/lwip/core/snmp/mib2.c	/^             icmpoutparmprobs = 0,$/;"	v	file:
icmpoutredirects	net/lwip/core/snmp/mib2.c	/^             icmpoutredirects = 0,$/;"	v	file:
icmpoutsrcquenchs	net/lwip/core/snmp/mib2.c	/^             icmpoutsrcquenchs = 0,$/;"	v	file:
icmpouttimeexcds	net/lwip/core/snmp/mib2.c	/^             icmpouttimeexcds = 0,$/;"	v	file:
icmpouttimestampreps	net/lwip/core/snmp/mib2.c	/^             icmpouttimestampreps = 0,$/;"	v	file:
icmpouttimestamps	net/lwip/core/snmp/mib2.c	/^             icmpouttimestamps = 0,$/;"	v	file:
icode	net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t icode;$/;"	m	struct:icmp_dur_hdr
icode	net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t icode;$/;"	m	struct:icmp_echo_hdr
icode	net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t icode;$/;"	m	struct:icmp_te_hdr
id	inc/fd.h	/^	int id;$/;"	m	struct:FdFile
id	net/lwip/core/dns.c	/^  u16_t id;$/;"	m	struct:dns_hdr	file:
id	net/lwip/include/ipv6/lwip/icmp.h	/^  u16_t id;$/;"	m	struct:icmp_echo_hdr
id	net/lwip/include/lwip/snmp.h	/^  s32_t id[LWIP_SNMP_OBJ_ID_LEN];$/;"	m	struct:snmp_obj_id
id	net/lwip/netif/ppp/chap.h	/^  u_char id;                              \/* Current id *\/$/;"	m	struct:chap_state
id	net/lwip/netif/ppp/fsm.h	/^  u_char id;                       \/* Current id *\/$/;"	m	struct:fsm
id_inst_len	net/lwip/include/lwip/snmp_structs.h	/^  u8_t  id_inst_len;$/;"	m	struct:obj_def
id_inst_ptr	net/lwip/include/lwip/snmp_structs.h	/^  s32_t *id_inst_ptr;$/;"	m	struct:obj_def
ide_probe_disk1	fs/ide.c	/^ide_probe_disk1(void)$/;"	f
ide_read	fs/ide.c	/^ide_read(uint32_t secno, void *dst, size_t nsecs)$/;"	f
ide_set_disk	fs/ide.c	/^ide_set_disk(int d)$/;"	f
ide_wait_ready	fs/ide.c	/^ide_wait_ready(bool check_error)$/;"	f	file:
ide_write	fs/ide.c	/^ide_write(uint32_t secno, const void *src, size_t nsecs)$/;"	f
ident	net/lwip/include/lwip/snmp_msg.h	/^  s32_t *ident;$/;"	m	struct:snmp_varbind
ident	net/lwip/include/lwip/snmp_structs.h	/^  s32_t *ident;$/;"	m	struct:snmp_name_ptr
ident_cmp	net/lwip/include/lwip/snmp_structs.h	/^  s32_t (*ident_cmp)(void* addr_inf, u8_t level, u16_t idx, s32_t sub_id);$/;"	m	struct:mib_external_node
ident_len	net/lwip/include/lwip/snmp_msg.h	/^  u8_t ident_len;$/;"	m	struct:snmp_varbind
ident_len	net/lwip/include/lwip/snmp_structs.h	/^  u8_t ident_len;$/;"	m	struct:snmp_name_ptr
idle	obj/kern/kernel.asm	/^        idle = &envs[cpunum()];$/;"	d
idle_time_limit	net/lwip/netif/ppp/ppp.h	/^  u_short idle_time_limit;            \/* Shut down link if idle for this long *\/$/;"	m	struct:ppp_settings
idt	kern/trap.c	/^struct Gatedesc idt[256] = { { 0 } };$/;"	v	typeref:struct:Gatedesc
idt_pd	kern/trap.c	/^struct Pseudodesc idt_pd = {0,0};$/;"	v	typeref:struct:Pseudodesc
idur	obj/net/ns.asm	/^  idur = q->payload;$/;"	d
idx	lib/fprintf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:
idx	lib/printf.c	/^	int idx;	\/\/ current buffer index$/;"	m	struct:printbuf	file:
iecho	obj/net/ns.asm	/^    iecho = p->payload;$/;"	d
if_up	net/lwip/netif/ppp/ppp.c	/^  int  if_up;                   \/* True when the interface is up. *\/$/;"	m	struct:PPPControl_s	file:
ifentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node ifentry = {$/;"	v	typeref:struct:mib_array_node
ifentry_get_object_def	net/lwip/core/snmp/mib2.c	/^ifentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
ifentry_get_value	net/lwip/core/snmp/mib2.c	/^ifentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ifentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t ifentry_ids[22] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22 };$/;"	v
ifentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const ifentry_nodes[22] = {$/;"	v
ifentry_set_test	net/lwip/core/snmp/mib2.c	/^ifentry_set_test (struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ifentry_set_value	net/lwip/core/snmp/mib2.c	/^ifentry_set_value (struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ifindiscards	net/lwip/include/lwip/netif.h	/^  u32_t ifindiscards;$/;"	m	struct:netif
ifinnucastpkts	net/lwip/include/lwip/netif.h	/^  u32_t ifinnucastpkts;$/;"	m	struct:netif
ifinoctets	net/lwip/include/lwip/netif.h	/^  u32_t ifinoctets;$/;"	m	struct:netif
ifinucastpkts	net/lwip/include/lwip/netif.h	/^  u32_t ifinucastpkts;$/;"	m	struct:netif
iflist_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode iflist_root = {$/;"	v	typeref:struct:mib_list_rootnode
ifoutdiscards	net/lwip/include/lwip/netif.h	/^  u32_t ifoutdiscards;$/;"	m	struct:netif
ifoutnucastpkts	net/lwip/include/lwip/netif.h	/^  u32_t ifoutnucastpkts;$/;"	m	struct:netif
ifoutoctets	net/lwip/include/lwip/netif.h	/^  u32_t ifoutoctets;$/;"	m	struct:netif
ifoutucastpkts	net/lwip/include/lwip/netif.h	/^  u32_t ifoutucastpkts;$/;"	m	struct:netif
ifspecific	net/lwip/core/snmp/mib2.c	/^static const struct snmp_obj_id ifspecific = {2, {0, 0}};$/;"	v	typeref:struct:snmp_obj_id	file:
iftable	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node iftable = {$/;"	v	typeref:struct:mib_ram_array_node
iftable_id	net/lwip/core/snmp/mib2.c	/^s32_t iftable_id = 1;$/;"	v
iftable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* iftable_node = (struct mib_node* const)&ifentry;$/;"	v	typeref:struct:mib_node
igmp	net/lwip/include/lwip/stats.h	/^  struct stats_igmp igmp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_igmp
igmp_delaying_member	net/lwip/core/ipv4/igmp.c	/^igmp_delaying_member( struct igmp_group *group, u8_t maxresp)$/;"	f
igmp_dump_group_list	net/lwip/core/ipv4/igmp.c	/^igmp_dump_group_list()$/;"	f
igmp_dump_group_list	net/lwip/core/ipv4/igmp.c	137;"	d	file:
igmp_group	net/lwip/include/ipv4/lwip/igmp.h	/^struct igmp_group {$/;"	s
igmp_group_list	net/lwip/core/ipv4/igmp.c	/^static struct igmp_group* igmp_group_list;$/;"	v	typeref:struct:igmp_group	file:
igmp_init	net/lwip/core/ipv4/igmp.c	/^igmp_init(void)$/;"	f
igmp_input	net/lwip/core/ipv4/igmp.c	/^igmp_input(struct pbuf *p, struct netif *inp, struct ip_addr *dest)$/;"	f
igmp_ip_output_if	net/lwip/core/ipv4/igmp.c	/^igmp_ip_output_if(struct pbuf *p, struct ip_addr *src, struct ip_addr *dest,$/;"	f
igmp_joingroup	net/lwip/core/ipv4/igmp.c	/^igmp_joingroup(struct ip_addr *ifaddr, struct ip_addr *groupaddr)$/;"	f
igmp_leavegroup	net/lwip/core/ipv4/igmp.c	/^igmp_leavegroup(struct ip_addr *ifaddr, struct ip_addr *groupaddr)$/;"	f
igmp_lookfor_group	net/lwip/core/ipv4/igmp.c	/^igmp_lookfor_group(struct netif *ifp, struct ip_addr *addr)$/;"	f
igmp_lookup_group	net/lwip/core/ipv4/igmp.c	/^igmp_lookup_group(struct netif *ifp, struct ip_addr *addr)$/;"	f
igmp_mac_filter	net/lwip/include/lwip/netif.h	/^  err_t (*igmp_mac_filter)( struct netif *netif, struct ip_addr *group, u8_t action);$/;"	m	struct:netif
igmp_msg	net/lwip/include/ipv4/lwip/igmp.h	/^struct igmp_msg {$/;"	s
igmp_remove_group	net/lwip/core/ipv4/igmp.c	/^igmp_remove_group(struct igmp_group *group)$/;"	f
igmp_report_groups	net/lwip/core/ipv4/igmp.c	/^igmp_report_groups( struct netif *netif)$/;"	f
igmp_send	net/lwip/core/ipv4/igmp.c	/^igmp_send(struct igmp_group *group, u8_t type)$/;"	f
igmp_start	net/lwip/core/ipv4/igmp.c	/^igmp_start(struct netif *netif)$/;"	f
igmp_start_timer	net/lwip/core/ipv4/igmp.c	/^igmp_start_timer(struct igmp_group *group, u8_t max_time)$/;"	f
igmp_stop	net/lwip/core/ipv4/igmp.c	/^igmp_stop(struct netif *netif)$/;"	f
igmp_stop_timer	net/lwip/core/ipv4/igmp.c	/^igmp_stop_timer(struct igmp_group *group)$/;"	f
igmp_timeout	net/lwip/core/ipv4/igmp.c	/^igmp_timeout(struct igmp_group *group)$/;"	f
igmp_timer	net/lwip/api/tcpip.c	/^igmp_timer(void *arg)$/;"	f	file:
igmp_tmr	net/lwip/core/ipv4/igmp.c	/^igmp_tmr(void)$/;"	f
illegal	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER illegal;$/;"	m	struct:stats_mem
imcrp	kern/mpconfig.c	/^	uint8_t imcrp;$/;"	m	struct:mp	file:
imr_interface	net/lwip/include/lwip/sockets.h	/^    struct in_addr imr_interface; \/* local IP address of interface *\/$/;"	m	struct:ip_mreq	typeref:struct:ip_mreq::in_addr
imr_multiaddr	net/lwip/include/lwip/sockets.h	/^    struct in_addr imr_multiaddr; \/* IP multicast address of group *\/$/;"	m	struct:ip_mreq	typeref:struct:ip_mreq::in_addr
in	net/lwip/netif/ppp/md5.h	/^  unsigned char in[64];     \/* input buffer *\/$/;"	m	struct:__anon13
inACCM	net/lwip/netif/ppp/ppp.c	/^  ext_accm inACCM;              \/* Async-Ctl-Char-Map for input. *\/$/;"	m	struct:PPPControl_s	file:
inEscaped	net/lwip/netif/ppp/ppp.c	/^  char inEscaped;               \/* Escape next character. *\/$/;"	m	struct:PPPControl_s	file:
inFCS	net/lwip/netif/ppp/ppp.c	/^  u16_t inFCS;                  \/* Input Frame Check Sequence value. *\/$/;"	m	struct:PPPControl_s	file:
inHead	net/lwip/netif/ppp/ppp.c	/^  struct pbuf *inHead, *inTail; \/* The input packet. *\/$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::pbuf	file:
inProtocol	net/lwip/netif/ppp/ppp.c	/^  u16_t inProtocol;             \/* The input protocol code. *\/$/;"	m	struct:PPPControl_s	file:
inState	net/lwip/netif/ppp/ppp.c	/^  PPPDevStates inState;         \/* The input process state. *\/$/;"	m	struct:PPPControl_s	file:
inTail	net/lwip/netif/ppp/ppp.c	/^  struct pbuf *inHead, *inTail; \/* The input packet. *\/$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::	file:
in_addr	net/lwip/include/ipv4/lwip/inet.h	/^struct in_addr {$/;"	s
in_range	net/lwip/core/ipv4/inet.c	45;"	d	file:
inactive	obj/net/ns.asm	/^      inactive = pcb;$/;"	d
inactive	obj/net/ns.asm	/^  inactive = NULL;$/;"	d
inactivity	obj/net/ns.asm	/^      inactivity = tcp_ticks - pcb->tmr;$/;"	d
inactivity	obj/net/ns.asm	/^  inactivity = 0;$/;"	d
inb	inc/x86.h	/^inb(int port)$/;"	f
increment_magnitude	obj/net/ns.asm	/^    increment_magnitude = -header_size_increment;$/;"	d
increment_magnitude	obj/net/ns.asm	/^    increment_magnitude = header_size_increment;$/;"	d
inet_addr	net/lwip/core/ipv4/inet.c	/^inet_addr(const char *cp)$/;"	f
inet_aton	net/lwip/core/ipv4/inet.c	/^inet_aton(const char *cp, struct in_addr *addr)$/;"	f
inet_chksum	net/lwip/core/ipv4/inet_chksum.c	/^inet_chksum(void *dataptr, u16_t len)$/;"	f
inet_chksum	net/lwip/core/ipv6/inet6.c	/^inet_chksum(void *dataptr, u16_t len)$/;"	f
inet_chksum_pbuf	net/lwip/core/ipv4/inet_chksum.c	/^inet_chksum_pbuf(struct pbuf *p)$/;"	f
inet_chksum_pbuf	net/lwip/core/ipv6/inet6.c	/^inet_chksum_pbuf(struct pbuf *p)$/;"	f
inet_chksum_pseudo	net/lwip/core/ipv4/inet_chksum.c	/^inet_chksum_pseudo(struct pbuf *p,$/;"	f
inet_chksum_pseudo	net/lwip/core/ipv6/inet6.c	/^inet_chksum_pseudo(struct pbuf *p,$/;"	f
inet_chksum_pseudo_partial	net/lwip/core/ipv4/inet_chksum.c	/^inet_chksum_pseudo_partial(struct pbuf *p,$/;"	f
inet_ntoa	net/lwip/core/ipv4/inet.c	/^inet_ntoa(struct in_addr addr)$/;"	f
inet_ntoa	net/lwip/netif/ppp/ipcp.c	199;"	d	file:
init	net/lwip/include/lwip/netifapi.h	/^      err_t (* init) (struct netif *netif);$/;"	m	struct:netifapi_msg_msg::__anon20::__anon21
init	net/lwip/netif/ppp/ppp.h	/^    void (*init) (int unit);$/;"	m	struct:protent
init_stack	lib/spawn.c	/^init_stack(envid_t child, const char **argv, uintptr_t *init_esp)$/;"	f	file:
inl	inc/x86.h	/^inl(int port)$/;"	f
inp	net/lwip/include/lwip/tcpip.h	/^    } inp;$/;"	m	union:tcpip_msg::__anon33	typeref:struct:tcpip_msg::__anon33::__anon34
input	net/input.c	/^input(envid_t ns_envid)$/;"	f
input	net/lwip/include/lwip/netif.h	/^  err_t (* input)(struct pbuf *p, struct netif *inp);$/;"	m	struct:netif
input	net/lwip/include/lwip/netifapi.h	/^      err_t (* input)(struct pbuf *p, struct netif *netif);$/;"	m	struct:netifapi_msg_msg::__anon20::__anon21
input	net/lwip/netif/ppp/ppp.h	/^    void (*input) (int unit, u_char *pkt, int len);$/;"	m	struct:protent
input_envid	net/serv.c	/^static envid_t input_envid;$/;"	v	file:
input_envid	net/testinput.c	/^static envid_t input_envid;$/;"	v	file:
input_envid	obj/net/ns.asm	/^	input_envid = fork();$/;"	d
input_envid	obj/net/testinput.asm	/^	input_envid = fork();$/;"	d
insb	inc/x86.h	/^insb(int port, void *addr, int cnt)$/;"	f
inseg	net/lwip/core/tcp_in.c	/^static struct tcp_seg inseg;$/;"	v	typeref:struct:tcp_seg	file:
insl	inc/x86.h	/^insl(int port, void *addr, int cnt)$/;"	f
instance	net/lwip/include/lwip/snmp_structs.h	/^  u8_t instance;$/;"	m	struct:obj_def
insw	inc/x86.h	/^insw(int port, void *addr, int cnt)$/;"	f
int	obj/fs/fs.asm	/^int$/;"	l
int	obj/kern/kernel.asm	/^int	user_mem_check(struct Env *env, const void *va, size_t len, int perm);$/;"	l
int	obj/kern/kernel.asm	/^int$/;"	l
int	obj/net/ns.asm	/^int$/;"	l
int	obj/net/testinput.asm	/^int$/;"	l
int	obj/net/testoutput.asm	/^int$/;"	l
int	obj/user/echosrv.asm	/^int$/;"	l
int	obj/user/echotest.asm	/^int$/;"	l
int	obj/user/forktree.asm	/^int$/;"	l
int	obj/user/hello.asm	/^int$/;"	l
int	obj/user/httpd.asm	/^int$/;"	l
int	obj/user/icode.asm	/^int$/;"	l
int	obj/user/idle.asm	/^int$/;"	l
int	obj/user/init.asm	/^int$/;"	l
int	obj/user/pingpong.asm	/^int$/;"	l
int	obj/user/primes.asm	/^int$/;"	l
int	obj/user/testfile.asm	/^int$/;"	l
int	obj/user/testtime.asm	/^int$/;"	l
int	obj/user/writemotd.asm	/^int$/;"	l
int16_t	inc/types.h	/^typedef short int16_t;$/;"	t
int32_t	inc/types.h	/^typedef int int32_t;$/;"	t
int32_t	obj/fs/fs.asm	/^int32_t$/;"	l
int32_t	obj/net/ns.asm	/^int32_t$/;"	l
int32_t	obj/net/testinput.asm	/^int32_t$/;"	l
int32_t	obj/net/testoutput.asm	/^int32_t$/;"	l
int32_t	obj/user/echosrv.asm	/^int32_t$/;"	l
int32_t	obj/user/echotest.asm	/^int32_t$/;"	l
int32_t	obj/user/forktree.asm	/^int32_t$/;"	l
int32_t	obj/user/hello.asm	/^int32_t$/;"	l
int32_t	obj/user/httpd.asm	/^int32_t$/;"	l
int32_t	obj/user/icode.asm	/^int32_t$/;"	l
int32_t	obj/user/idle.asm	/^int32_t$/;"	l
int32_t	obj/user/init.asm	/^int32_t$/;"	l
int32_t	obj/user/pingpong.asm	/^int32_t$/;"	l
int32_t	obj/user/primes.asm	/^int32_t$/;"	l
int32_t	obj/user/testfile.asm	/^int32_t$/;"	l
int32_t	obj/user/testtime.asm	/^int32_t$/;"	l
int32_t	obj/user/writemotd.asm	/^int32_t$/;"	l
int64_t	inc/types.h	/^typedef long long int64_t;$/;"	t
int8_t	inc/types.h	/^typedef __signed char int8_t;$/;"	t
interface	net/lwip/include/ipv4/lwip/igmp.h	/^  struct netif      *interface;$/;"	m	struct:igmp_group	typeref:struct:igmp_group::netif
interface	net/lwip/include/lwip/api_msg.h	/^      struct ip_addr *interface;$/;"	m	struct:api_msg_msg::__anon25::__anon31	typeref:struct:api_msg_msg::__anon25::__anon31::ip_addr
interfaces	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node interfaces = {$/;"	v	typeref:struct:mib_array_node
interfaces_get_object_def	net/lwip/core/snmp/mib2.c	/^interfaces_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
interfaces_get_value	net/lwip/core/snmp/mib2.c	/^interfaces_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
interfaces_ids	net/lwip/core/snmp/mib2.c	/^const s32_t interfaces_ids[2] = { 1, 2 };$/;"	v
interfaces_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const interfaces_nodes[2] = {$/;"	v
interfaces_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node interfaces_scalar = {$/;"	v
internet	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node internet = {$/;"	v	typeref:struct:mib_array_node
internet_ids	net/lwip/core/snmp/mib2.c	/^const s32_t internet_ids[1] = { 2 };$/;"	v
internet_ids	net/lwip/core/snmp/mib2.c	/^s32_t internet_ids[2] = { 2, 4 };$/;"	v
internet_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const internet_nodes[1] = { (struct mib_node* const)&mgmt };$/;"	v
internet_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const internet_nodes[2] = { (struct mib_node* const)&mgmt, (struct mib_node* const)&private };$/;"	v
intptr_t	inc/types.h	/^typedef int32_t intptr_t;$/;"	t
invb	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind_root invb;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_varbind_root
invlpg	inc/x86.h	/^invlpg(void *addr)$/;"	f
inw	inc/x86.h	/^inw(int port)$/;"	f
ioctlsocket	net/lwip/include/lwip/sockets.h	342;"	d
ip	net/lwip/include/lwip/api.h	/^    struct ip_pcb  *ip;$/;"	m	union:netconn::__anon19	typeref:struct:netconn::__anon19::ip_pcb
ip	net/lwip/include/lwip/stats.h	/^  struct stats_proto ip;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
ip	net/lwip/netif/ppp/vjbsdhdr.h	/^struct ip$/;"	s
ip4_addr1	net/lwip/include/ipv4/lwip/ip_addr.h	156;"	d
ip4_addr2	net/lwip/include/ipv4/lwip/ip_addr.h	157;"	d
ip4_addr3	net/lwip/include/ipv4/lwip/ip_addr.h	158;"	d
ip4_addr4	net/lwip/include/ipv4/lwip/ip_addr.h	159;"	d
ip_addr	net/lwip/include/ipv4/lwip/ip_addr.h	/^struct ip_addr {$/;"	s
ip_addr	net/lwip/include/ipv6/lwip/ip_addr.h	/^ struct ip_addr {$/;"	s
ip_addr	net/lwip/include/lwip/netif.h	/^  struct ip_addr ip_addr;$/;"	m	struct:netif	typeref:struct:netif::ip_addr
ip_addr2	net/lwip/include/ipv4/lwip/ip_addr.h	/^struct ip_addr2 {$/;"	s
ip_addr2	net/lwip/include/ipv6/lwip/ip_addr.h	/^struct ip_addr2 {$/;"	s
ip_addr_any	net/lwip/core/ipv4/ip_addr.c	/^const struct ip_addr ip_addr_any = { IP_ADDR_ANY_VALUE };$/;"	v	typeref:struct:ip_addr
ip_addr_broadcast	net/lwip/core/ipv4/ip_addr.c	/^const struct ip_addr ip_addr_broadcast = { IP_ADDR_BROADCAST_VALUE };$/;"	v	typeref:struct:ip_addr
ip_addr_check	net/lwip/netif/ppp/auth.c	/^ip_addr_check(u32_t addr, struct wordlist *addrs)$/;"	f	file:
ip_addr_cmp	net/lwip/core/ipv6/ip6_addr.c	/^ip_addr_cmp(struct ip_addr *addr1, struct ip_addr *addr2)$/;"	f
ip_addr_cmp	net/lwip/include/ipv4/lwip/ip_addr.h	137;"	d
ip_addr_debug_print	net/lwip/include/ipv4/lwip/ip_addr.h	147;"	d
ip_addr_debug_print	net/lwip/include/ipv6/lwip/ip_addr.h	82;"	d
ip_addr_isany	net/lwip/core/ipv6/ip6_addr.c	/^ip_addr_isany(struct ip_addr *addr)$/;"	f
ip_addr_isany	net/lwip/include/ipv4/lwip/ip_addr.h	139;"	d
ip_addr_isbroadcast	net/lwip/core/ipv4/ip_addr.c	/^u8_t ip_addr_isbroadcast(struct ip_addr *addr, struct netif *netif)$/;"	f
ip_addr_islinklocal	net/lwip/include/ipv4/lwip/ip_addr.h	145;"	d
ip_addr_ismulticast	net/lwip/include/ipv4/lwip/ip_addr.h	143;"	d
ip_addr_netcmp	net/lwip/core/ipv6/ip6_addr.c	/^ip_addr_netcmp(struct ip_addr *addr1, struct ip_addr *addr2,$/;"	f
ip_addr_netcmp	net/lwip/include/ipv4/lwip/ip_addr.h	133;"	d
ip_addr_set	net/lwip/core/ipv6/ip6_addr.c	/^ip_addr_set(struct ip_addr *dest, struct ip_addr *src)$/;"	f
ip_addr_set	net/lwip/include/ipv4/lwip/ip_addr.h	122;"	d
ip_addrentry_get_object_def	net/lwip/core/snmp/mib2.c	/^ip_addrentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
ip_addrentry_get_value	net/lwip/core/snmp/mib2.c	/^ip_addrentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ip_debug_print	net/lwip/core/ipv4/ip.c	/^ip_debug_print(struct pbuf *p)$/;"	f
ip_debug_print	net/lwip/core/ipv6/ip6.c	/^ip_debug_print(struct pbuf *p)$/;"	f
ip_dst	net/lwip/netif/ppp/vjbsdhdr.h	/^  struct  in_addr ip_src,ip_dst; \/* source and dest address *\/$/;"	m	struct:ip	typeref:struct:ip::
ip_forward	net/lwip/core/ipv4/ip.c	/^ip_forward(struct pbuf *p, struct ip_hdr *iphdr, struct netif *inp)$/;"	f	file:
ip_forward	net/lwip/core/ipv6/ip6.c	/^ip_forward(struct pbuf *p, struct ip_hdr *iphdr)$/;"	f	file:
ip_frag	net/lwip/core/ipv4/ip_frag.c	/^ip_frag(struct pbuf *p, struct netif *netif, struct ip_addr *dest)$/;"	f
ip_frag	net/lwip/include/lwip/stats.h	/^  struct stats_proto ip_frag;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
ip_get_object_def	net/lwip/core/snmp/mib2.c	/^ip_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
ip_get_value	net/lwip/core/snmp/mib2.c	/^ip_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ip_hdr	net/lwip/include/ipv4/lwip/ip.h	/^struct ip_hdr {$/;"	s
ip_hdr	net/lwip/include/ipv6/lwip/ip.h	/^struct ip_hdr {$/;"	s
ip_hl_v	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char   ip_hl_v;  \/* bug in GCC for mips means the bitfield stuff will sometimes break - so we use a char for both and get round it with macro's instead... *\/$/;"	m	struct:ip
ip_id	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short ip_id;                 \/* identification *\/$/;"	m	struct:ip
ip_ids	net/lwip/core/snmp/mib2.c	/^const s32_t ip_ids[23] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 };$/;"	v
ip_init	net/lwip/core/ipv6/ip6.c	/^ip_init(void)$/;"	f
ip_init	net/lwip/include/ipv4/lwip/ip.h	46;"	d
ip_input	net/lwip/core/ipv4/ip.c	/^ip_input(struct pbuf *p, struct netif *inp)$/;"	f
ip_input	net/lwip/core/ipv6/ip6.c	/^ip_input(struct pbuf *p, struct netif *inp) {$/;"	f
ip_len	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short ip_len;                \/* total length *\/$/;"	m	struct:ip
ip_mreq	net/lwip/include/lwip/sockets.h	/^typedef struct ip_mreq {$/;"	s
ip_mreq	net/lwip/include/lwip/sockets.h	/^} ip_mreq;$/;"	t	typeref:struct:ip_mreq
ip_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const ip_nodes[23] = {$/;"	v
ip_ntomentry_get_object_def	net/lwip/core/snmp/mib2.c	/^ip_ntomentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
ip_ntomentry_get_value	net/lwip/core/snmp/mib2.c	/^ip_ntomentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ip_off	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short ip_off;                \/* fragment offset field *\/$/;"	m	struct:ip
ip_output	net/lwip/core/ipv4/ip.c	/^ip_output(struct pbuf *p, struct ip_addr *src, struct ip_addr *dest,$/;"	f
ip_output	net/lwip/core/ipv6/ip6.c	/^ip_output(struct pbuf *p, struct ip_addr *src, struct ip_addr *dest,$/;"	f
ip_output_if	net/lwip/core/ipv4/ip.c	/^ip_output_if(struct pbuf *p, struct ip_addr *src, struct ip_addr *dest,$/;"	f
ip_output_if	net/lwip/core/ipv6/ip6.c	/^ip_output_if (struct pbuf *p, struct ip_addr *src, struct ip_addr *dest,$/;"	f
ip_p	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char  ip_p;                  \/* protocol *\/$/;"	m	struct:ip
ip_pcb	net/lwip/include/ipv4/lwip/ip.h	/^struct ip_pcb {$/;"	s
ip_reass	net/lwip/core/ipv4/ip_frag.c	/^ip_reass(struct pbuf *p)$/;"	f
ip_reass_chain_frag_into_datagram_and_validate	net/lwip/core/ipv4/ip_frag.c	/^ip_reass_chain_frag_into_datagram_and_validate(struct ip_reassdata *ipr, struct pbuf *new_p)$/;"	f	file:
ip_reass_dequeue_datagram	net/lwip/core/ipv4/ip_frag.c	/^ip_reass_dequeue_datagram(struct ip_reassdata *ipr, struct ip_reassdata *prev)$/;"	f	file:
ip_reass_enqueue_new_datagram	net/lwip/core/ipv4/ip_frag.c	/^ip_reass_enqueue_new_datagram(struct ip_hdr *fraghdr, int clen)$/;"	f	file:
ip_reass_free_complete_datagram	net/lwip/core/ipv4/ip_frag.c	/^ip_reass_free_complete_datagram(struct ip_reassdata *ipr, struct ip_reassdata *prev)$/;"	f	file:
ip_reass_helper	net/lwip/core/ipv4/ip_frag.c	/^struct ip_reass_helper {$/;"	s	file:
ip_reass_pbufcount	net/lwip/core/ipv4/ip_frag.c	/^static u16_t ip_reass_pbufcount;$/;"	v	file:
ip_reass_remove_oldest_datagram	net/lwip/core/ipv4/ip_frag.c	/^ip_reass_remove_oldest_datagram(struct ip_hdr *fraghdr, int pbufs_needed)$/;"	f	file:
ip_reass_timer	net/lwip/api/tcpip.c	/^ip_reass_timer(void *arg)$/;"	f	file:
ip_reass_tmr	net/lwip/core/ipv4/ip_frag.c	/^ip_reass_tmr(void)$/;"	f
ip_reassdata	net/lwip/include/ipv4/lwip/ip_frag.h	/^struct ip_reassdata {$/;"	s
ip_route	net/lwip/core/ipv4/ip.c	/^ip_route(struct ip_addr *dest)$/;"	f
ip_route	net/lwip/core/ipv6/ip6.c	/^ip_route(struct ip_addr *dest)$/;"	f
ip_rteentry_get_object_def	net/lwip/core/snmp/mib2.c	/^ip_rteentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
ip_rteentry_get_value	net/lwip/core/snmp/mib2.c	/^ip_rteentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ip_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node ip_scalar = {$/;"	v
ip_set_test	net/lwip/core/snmp/mib2.c	/^ip_set_test(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
ip_src	net/lwip/netif/ppp/vjbsdhdr.h	/^  struct  in_addr ip_src,ip_dst; \/* source and dest address *\/$/;"	m	struct:ip	typeref:struct:ip::in_addr
ip_sum	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short ip_sum;                \/* checksum *\/$/;"	m	struct:ip
ip_tos	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char  ip_tos;                \/* type of service *\/$/;"	m	struct:ip
ip_ttl	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char  ip_ttl;                \/* time to live *\/$/;"	m	struct:ip
ipaddr	net/lwip/core/dns.c	/^  struct ip_addr ipaddr;$/;"	m	struct:dns_table_entry	typeref:struct:dns_table_entry::ip_addr	file:
ipaddr	net/lwip/include/lwip/api_msg.h	/^      struct ip_addr *ipaddr;$/;"	m	struct:api_msg_msg::__anon25::__anon27	typeref:struct:api_msg_msg::__anon25::__anon27::ip_addr
ipaddr	net/lwip/include/lwip/api_msg.h	/^      struct ip_addr *ipaddr;$/;"	m	struct:api_msg_msg::__anon25::__anon28	typeref:struct:api_msg_msg::__anon25::__anon28::ip_addr
ipaddr	net/lwip/include/lwip/netifapi.h	/^      struct ip_addr *ipaddr;$/;"	m	struct:netifapi_msg_msg::__anon20::__anon21	typeref:struct:netifapi_msg_msg::__anon20::__anon21::ip_addr
ipaddr	net/lwip/netif/etharp.c	/^  struct ip_addr ipaddr;$/;"	m	struct:etharp_entry	typeref:struct:etharp_entry::ip_addr	file:
ipaddr	obj/net/ns.asm	/^        ipaddr = &(netif->gw);$/;"	d
ipaddrentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node ipaddrentry = {$/;"	v	typeref:struct:mib_array_node
ipaddrentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t ipaddrentry_ids[5] = { 1, 2, 3, 4, 5 };$/;"	v
ipaddrentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const ipaddrentry_nodes[5] = {$/;"	v
ipaddrtable	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node ipaddrtable = {$/;"	v	typeref:struct:mib_ram_array_node
ipaddrtable_id	net/lwip/core/snmp/mib2.c	/^s32_t ipaddrtable_id = 1;$/;"	v
ipaddrtable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* ipaddrtable_node = (struct mib_node* const)&ipaddrentry;$/;"	v	typeref:struct:mib_node
ipaddrtree_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode ipaddrtree_root = {$/;"	v	typeref:struct:mib_list_rootnode
ipc_find_env	lib/ipc.c	/^ipc_find_env(enum EnvType type)$/;"	f
ipc_recv	lib/ipc.c	/^ipc_recv(envid_t *from_env_store, void *pg, int *perm_store)$/;"	f
ipc_send	lib/ipc.c	/^ipc_send(envid_t to_env, uint32_t val, void *pg, int perm)$/;"	f
ipcb	obj/net/ns.asm	/^        ipcb = ipcb->next;$/;"	d
ipcb	obj/net/ns.asm	/^        ipcb = udp_pcbs;$/;"	d
ipcb	obj/net/ns.asm	/^    ipcb = udp_pcbs;$/;"	d
ipcp_ackci	net/lwip/netif/ppp/ipcp.c	/^ipcp_ackci(fsm *f, u_char *p, int len)$/;"	f	file:
ipcp_addci	net/lwip/netif/ppp/ipcp.c	/^ipcp_addci(fsm *f, u_char *ucp, int *lenp)$/;"	f	file:
ipcp_allowoptions	net/lwip/netif/ppp/ipcp.c	/^ipcp_options ipcp_allowoptions[NUM_PPP]; \/* Options we allow peer to request *\/$/;"	v
ipcp_callbacks	net/lwip/netif/ppp/ipcp.c	/^static fsm_callbacks ipcp_callbacks = { \/* IPCP callback routines *\/$/;"	v	file:
ipcp_cilen	net/lwip/netif/ppp/ipcp.c	/^ipcp_cilen(fsm *f)$/;"	f	file:
ipcp_clear_addrs	net/lwip/netif/ppp/ipcp.c	/^ipcp_clear_addrs(int unit)$/;"	f	file:
ipcp_close	net/lwip/netif/ppp/ipcp.c	/^ipcp_close(int unit, char *reason)$/;"	f	file:
ipcp_down	net/lwip/netif/ppp/ipcp.c	/^ipcp_down(fsm *f)$/;"	f	file:
ipcp_finished	net/lwip/netif/ppp/ipcp.c	/^ipcp_finished(fsm *f)$/;"	f	file:
ipcp_fsm	net/lwip/netif/ppp/ipcp.c	/^fsm ipcp_fsm[NUM_PPP]; \/* IPCP fsm structure *\/$/;"	v
ipcp_gotoptions	net/lwip/netif/ppp/ipcp.c	/^ipcp_options ipcp_gotoptions[NUM_PPP];   \/* Options that peer ack'd *\/$/;"	v
ipcp_hisoptions	net/lwip/netif/ppp/ipcp.c	/^ipcp_options ipcp_hisoptions[NUM_PPP];   \/* Options that we ack'd *\/$/;"	v
ipcp_init	net/lwip/netif/ppp/ipcp.c	/^ipcp_init(int unit)$/;"	f	file:
ipcp_input	net/lwip/netif/ppp/ipcp.c	/^ipcp_input(int unit, u_char *p, int len)$/;"	f	file:
ipcp_lowerdown	net/lwip/netif/ppp/ipcp.c	/^ipcp_lowerdown(int unit)$/;"	f	file:
ipcp_lowerup	net/lwip/netif/ppp/ipcp.c	/^ipcp_lowerup(int unit)$/;"	f	file:
ipcp_nakci	net/lwip/netif/ppp/ipcp.c	/^ipcp_nakci(fsm *f, u_char *p, int len)$/;"	f	file:
ipcp_open	net/lwip/netif/ppp/ipcp.c	/^ipcp_open(int unit)$/;"	f	file:
ipcp_options	net/lwip/netif/ppp/ipcp.h	/^typedef struct ipcp_options {$/;"	s
ipcp_options	net/lwip/netif/ppp/ipcp.h	/^} ipcp_options;$/;"	t	typeref:struct:ipcp_options
ipcp_protent	net/lwip/netif/ppp/ipcp.c	/^struct protent ipcp_protent = {$/;"	v	typeref:struct:protent
ipcp_protrej	net/lwip/netif/ppp/ipcp.c	/^ipcp_protrej(int unit)$/;"	f	file:
ipcp_rejci	net/lwip/netif/ppp/ipcp.c	/^ipcp_rejci(fsm *f, u_char *p, int len)$/;"	f	file:
ipcp_reqci	net/lwip/netif/ppp/ipcp.c	/^ipcp_reqci(fsm *f, u_char *inp\/* Requested CIs *\/,int *len\/* Length of requested CIs *\/,int reject_if_disagree)$/;"	f	file:
ipcp_resetci	net/lwip/netif/ppp/ipcp.c	/^ipcp_resetci(fsm *f)$/;"	f	file:
ipcp_up	net/lwip/netif/ppp/ipcp.c	/^ipcp_up(fsm *f)$/;"	f	file:
ipcp_wantoptions	net/lwip/netif/ppp/ipcp.c	/^ipcp_options ipcp_wantoptions[NUM_PPP];  \/* Options that we want to request *\/$/;"	v
ipforwdatagrams	net/lwip/core/snmp/mib2.c	/^             ipforwdatagrams = 0,$/;"	v	file:
ipfragcreates	net/lwip/core/snmp/mib2.c	/^             ipfragcreates = 0,$/;"	v	file:
ipfragfails	net/lwip/core/snmp/mib2.c	/^             ipfragfails = 0,$/;"	v	file:
ipfragoks	net/lwip/core/snmp/mib2.c	/^             ipfragoks = 0,$/;"	v	file:
iphdr	net/lwip/core/tcp_in.c	/^static struct ip_hdr *iphdr;$/;"	v	typeref:struct:ip_hdr	file:
iphdr	net/lwip/include/ipv4/lwip/ip_frag.h	/^  struct ip_hdr iphdr;$/;"	m	struct:ip_reassdata	typeref:struct:ip_reassdata::ip_hdr
iphdr	obj/net/ns.asm	/^      iphdr = r->payload;$/;"	d
iphdr	obj/net/ns.asm	/^    iphdr = p->payload;$/;"	d
iphdr	obj/net/ns.asm	/^  iphdr = original_iphdr;$/;"	d
iphdr	obj/net/ns.asm	/^  iphdr = p->payload;$/;"	d
iphdr	obj/net/ns.asm	/^  iphdr = rambuf->payload;$/;"	d
iphdr_hlen	obj/net/ns.asm	/^  iphdr_hlen = IPH_HL(iphdr);$/;"	d
iphdr_len	obj/net/ns.asm	/^  iphdr_len = ntohs(IPH_LEN(iphdr));$/;"	d
ipinaddrerrors	net/lwip/core/snmp/mib2.c	/^             ipinaddrerrors = 0,$/;"	v	file:
ipindelivers	net/lwip/core/snmp/mib2.c	/^             ipindelivers = 0,$/;"	v	file:
ipindiscards	net/lwip/core/snmp/mib2.c	/^             ipindiscards = 0,$/;"	v	file:
ipinhdrerrors	net/lwip/core/snmp/mib2.c	/^             ipinhdrerrors = 0,$/;"	v	file:
ipinreceives	net/lwip/core/snmp/mib2.c	/^static u32_t ipinreceives = 0,$/;"	v	file:
ipinunknownprotos	net/lwip/core/snmp/mib2.c	/^             ipinunknownprotos = 0,$/;"	v	file:
ipntomentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node ipntomentry = {$/;"	v	typeref:struct:mib_array_node
ipntomentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t ipntomentry_ids[4] = { 1, 2, 3, 4 };$/;"	v
ipntomentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const ipntomentry_nodes[4] = {$/;"	v
ipntomtable	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node ipntomtable = {$/;"	v	typeref:struct:mib_ram_array_node
ipntomtable_id	net/lwip/core/snmp/mib2.c	/^s32_t ipntomtable_id = 1;$/;"	v
ipntomtable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* ipntomtable_node = (struct mib_node* const)&ipntomentry;$/;"	v	typeref:struct:mib_node
ipntomtree_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode ipntomtree_root = {$/;"	v	typeref:struct:mib_list_rootnode
ipoutdiscards	net/lwip/core/snmp/mib2.c	/^             ipoutdiscards = 0,$/;"	v	file:
ipoutnoroutes	net/lwip/core/snmp/mib2.c	/^             ipoutnoroutes = 0,$/;"	v	file:
ipoutrequests	net/lwip/core/snmp/mib2.c	/^             ipoutrequests = 0,$/;"	v	file:
ipr	obj/net/ns.asm	/^      ipr = memp_malloc(MEMP_REASSDATA);$/;"	d
ipr	obj/net/ns.asm	/^    ipr = ip_reass_enqueue_new_datagram(fraghdr, clen);$/;"	d
ipr	obj/net/ns.asm	/^  ipr = memp_malloc(MEMP_REASSDATA);$/;"	d
ipr_prev	obj/net/ns.asm	/^    ipr_prev = ipr;$/;"	d
ipreasmfails	net/lwip/core/snmp/mib2.c	/^             ipreasmfails = 0,$/;"	v	file:
ipreasmoks	net/lwip/core/snmp/mib2.c	/^             ipreasmoks = 0,$/;"	v	file:
ipreasmreqds	net/lwip/core/snmp/mib2.c	/^             ipreasmreqds = 0,$/;"	v	file:
iprh	obj/net/ns.asm	/^          iprh = (struct ip_reass_helper*)q->payload;$/;"	d
iprh	obj/net/ns.asm	/^      iprh = (struct ip_reass_helper*)r->payload;$/;"	d
iprh	obj/net/ns.asm	/^    iprh = (struct ip_reass_helper *)p->payload;$/;"	d
iprh	obj/net/ns.asm	/^  iprh = (struct ip_reass_helper *)ipr->p->payload;$/;"	d
iprh	obj/net/ns.asm	/^  iprh = (struct ip_reass_helper*)new_p->payload;$/;"	d
iprh_prev	obj/net/ns.asm	/^          iprh_prev = iprh;$/;"	d
iprh_prev	obj/net/ns.asm	/^        iprh_prev = iprh;$/;"	d
iprh_prev	obj/net/ns.asm	/^    iprh_prev = iprh_tmp;$/;"	d
iprh_tmp	obj/net/ns.asm	/^    iprh_tmp = (struct ip_reass_helper*)q->payload;$/;"	d
iprouteinfo	net/lwip/core/snmp/mib2.c	/^static const struct snmp_obj_id iprouteinfo = {2, {0, 0}};$/;"	v	typeref:struct:snmp_obj_id	file:
iproutingdiscards	net/lwip/core/snmp/mib2.c	/^             iproutingdiscards = 0;$/;"	v	file:
iprteentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node iprteentry = {$/;"	v	typeref:struct:mib_array_node
iprteentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t iprteentry_ids[13] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 };$/;"	v
iprteentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const iprteentry_nodes[13] = {$/;"	v
iprtetable	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node iprtetable = {$/;"	v	typeref:struct:mib_ram_array_node
iprtetable_id	net/lwip/core/snmp/mib2.c	/^s32_t iprtetable_id = 1;$/;"	v
iprtetable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* iprtetable_node = (struct mib_node* const)&iprteentry;$/;"	v	typeref:struct:mib_node
iprtetree_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode iprtetree_root = {$/;"	v	typeref:struct:mib_list_rootnode
irq_eoi	kern/picirq.c	/^irq_eoi(void)$/;"	f
irq_line	kern/pci.h	/^    uint8_t irq_line;$/;"	m	struct:pci_func
irq_mask_8259A	kern/picirq.c	/^uint16_t irq_mask_8259A = 0xFFFF & ~(1<<IRQ_SLAVE);$/;"	v
irq_mask_8259A	obj/kern/kernel.asm	/^	irq_mask_8259A = mask;$/;"	d
irq_setmask_8259A	kern/picirq.c	/^irq_setmask_8259A(uint16_t mask)$/;"	f
iscons	kern/console.c	/^iscons(int fdnum)$/;"	f
isdigit	net/lwip/core/ipv4/inet.c	47;"	d	file:
isfree	lib/malloc.c	/^isfree(void *v, size_t n)$/;"	f	file:
islower	net/lwip/core/ipv4/inet.c	49;"	d	file:
ismp	kern/mpconfig.c	/^int ismp;$/;"	v
ismp	obj/kern/kernel.asm	/^			ismp = 0;$/;"	d
ismp	obj/kern/kernel.asm	/^	ismp = 1;$/;"	d
isprint	net/lwip/core/ipv4/inet.c	46;"	d	file:
iss	obj/net/ns.asm	/^    iss = tcp_next_iss();$/;"	d
iss	obj/net/ns.asm	/^  iss = tcp_next_iss();$/;"	d
isspace	net/lwip/core/ipv4/inet.c	50;"	d	file:
isxdigit	net/lwip/core/ipv4/inet.c	48;"	d	file:
jb_r10	net/lwip/jos/arch/i386/setjmp.h	/^    uint64_t jb_r10;$/;"	m	struct:jos_jmp_buf
jb_r11	net/lwip/jos/arch/i386/setjmp.h	/^    uint64_t jb_r11;$/;"	m	struct:jos_jmp_buf
jb_r12	net/lwip/jos/arch/i386/setjmp.h	/^    uint64_t jb_r12;$/;"	m	struct:jos_jmp_buf
jb_r13	net/lwip/jos/arch/i386/setjmp.h	/^    uint64_t jb_r13;$/;"	m	struct:jos_jmp_buf
jb_r14	net/lwip/jos/arch/i386/setjmp.h	/^    uint64_t jb_r14;$/;"	m	struct:jos_jmp_buf
jb_r15	net/lwip/jos/arch/i386/setjmp.h	/^    uint64_t jb_r15;$/;"	m	struct:jos_jmp_buf
jb_r8	net/lwip/jos/arch/i386/setjmp.h	/^    uint64_t jb_r8;$/;"	m	struct:jos_jmp_buf
jb_r9	net/lwip/jos/arch/i386/setjmp.h	/^    uint64_t jb_r9;$/;"	m	struct:jos_jmp_buf
jb_rbp	net/lwip/jos/arch/i386/setjmp.h	/^    uint64_t jb_rbp;$/;"	m	struct:jos_jmp_buf
jb_rbx	net/lwip/jos/arch/i386/setjmp.h	/^    uint64_t jb_rbx;$/;"	m	struct:jos_jmp_buf
jb_rdi	net/lwip/jos/arch/i386/setjmp.h	/^    uint64_t jb_rdi;$/;"	m	struct:jos_jmp_buf
jb_rip	net/lwip/jos/arch/i386/setjmp.h	/^    uint64_t jb_rip;$/;"	m	struct:jos_jmp_buf
jb_rsi	net/lwip/jos/arch/i386/setjmp.h	/^    uint64_t jb_rsi;$/;"	m	struct:jos_jmp_buf
jb_rsp	net/lwip/jos/arch/i386/setjmp.h	/^    uint64_t jb_rsp;$/;"	m	struct:jos_jmp_buf
jif	net/lwip/jos/jif/jif.c	/^struct jif {$/;"	s	file:
jif	obj/net/ns.asm	/^    jif = mem_malloc(sizeof(struct jif));$/;"	d
jif	obj/net/ns.asm	/^    jif = netif->state;$/;"	d
jif_init	net/lwip/jos/jif/jif.c	/^jif_init(struct netif *netif)$/;"	f
jif_input	net/lwip/jos/jif/jif.c	/^jif_input(struct netif *netif, void *va)$/;"	f
jif_output	net/lwip/jos/jif/jif.c	/^jif_output(struct netif *netif, struct pbuf *p,$/;"	f	file:
jif_pkt	inc/ns.h	/^struct jif_pkt {$/;"	s
jl	net/lwip/include/lwip/api_msg.h	/^    } jl;$/;"	m	union:api_msg_msg::__anon25	typeref:struct:api_msg_msg::__anon25::__anon31
join_or_leave	net/lwip/include/lwip/api_msg.h	/^      enum netconn_igmp join_or_leave;$/;"	m	struct:api_msg_msg::__anon25::__anon31	typeref:enum:api_msg_msg::__anon25::__anon31::netconn_igmp
join_sent	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER join_sent;        \/* *\/$/;"	m	struct:stats_igmp
jos_jmp_buf	net/lwip/jos/arch/i386/setjmp.h	/^struct jos_jmp_buf {$/;"	s
jp_data	inc/ns.h	/^	char jp_data[0];$/;"	m	struct:jif_pkt
jp_len	inc/ns.h	/^	int jp_len;$/;"	m	struct:jif_pkt
jumpto_longmode	boot1/head64.S	/^jumpto_longmode:$/;"	l
jumpto_longmode	obj/boot1/boot.asm	/^jumpto_longmode:$/;"	l
k	obj/kern/kernel.asm	/^			k = 0;$/;"	d
k	obj/net/ns.asm	/^  k = ETHARP_HWADDR_LEN;$/;"	d
kbd_init	kern/console.c	/^kbd_init(void)$/;"	f	file:
kbd_intr	kern/console.c	/^kbd_intr(void)$/;"	f
kbd_proc_data	kern/console.c	/^kbd_proc_data(void)$/;"	f	file:
keep_cnt	net/lwip/include/lwip/tcp.h	/^  u32_t keep_cnt;$/;"	m	struct:tcp_pcb
keep_cnt_sent	net/lwip/include/lwip/tcp.h	/^  u8_t keep_cnt_sent;$/;"	m	struct:tcp_pcb
keep_idle	net/lwip/include/lwip/tcp.h	/^  u32_t keep_idle;$/;"	m	struct:tcp_pcb
keep_intvl	net/lwip/include/lwip/tcp.h	/^  u32_t keep_intvl;$/;"	m	struct:tcp_pcb
kernel_64	kern/entry.S	/^kernel_64:$/;"	l
kernel_lock	kern/spinlock.c	/^struct spinlock kernel_lock = {$/;"	v	typeref:struct:spinlock
key1	kern/pci.c	/^	uint32_t key1, key2;$/;"	m	struct:pci_driver	file:
key2	kern/pci.c	/^	uint32_t key1, key2;$/;"	m	struct:pci_driver	file:
kill	gradelib.py	/^    def kill(self):$/;"	m	class:GDBClient
kill_link	net/lwip/netif/ppp/ppp.c	/^  int  kill_link;               \/* Shut the link down. *\/$/;"	m	struct:PPPControl_s	file:
kill_queue	net/lwip/jos/arch/thread.c	/^static struct thread_queue kill_queue;$/;"	v	typeref:struct:thread_queue	file:
l	obj/kern/kernel.asm	/^			l = m;$/;"	d
l	obj/kern/kernel.asm	/^			l = true_m + 1;$/;"	d
l_linger	net/lwip/include/lwip/sockets.h	/^       int l_linger;               \/* linger time *\/$/;"	m	struct:linger
l_onoff	net/lwip/include/lwip/sockets.h	/^       int l_onoff;                \/* option on\/off *\/$/;"	m	struct:linger
lapic	kern/lapic.c	/^volatile uint32_t *lapic;$/;"	v
lapic	obj/kern/kernel.asm	/^	lapic = mmio_map_region(lapicaddr, 4096);$/;"	d
lapic_eoi	kern/lapic.c	/^lapic_eoi(void)$/;"	f
lapic_init	kern/lapic.c	/^lapic_init(void)$/;"	f
lapic_ipi	kern/lapic.c	/^lapic_ipi(int vector)$/;"	f
lapic_startap	kern/lapic.c	/^lapic_startap(uint8_t apicid, uint32_t addr)$/;"	f
lapicaddr	kern/lapic.c	/^physaddr_t lapicaddr;        \/\/ Initialized in mp.c$/;"	v
lapicaddr	kern/mpconfig.c	/^	uint32_t lapicaddr;           \/\/ address of local APIC$/;"	m	struct:mpconf	file:
lapicaddr	obj/kern/kernel.asm	/^		lapicaddr = 0;$/;"	d
lapicaddr	obj/kern/kernel.asm	/^	lapicaddr = conf->lapicaddr;$/;"	d
lapicw	kern/lapic.c	/^lapicw(int index, int value)$/;"	f	file:
last	obj/net/ns.asm	/^    last = (left <= mtu - IP_HLEN);$/;"	d
lastXMit	net/lwip/netif/ppp/ppp.c	/^  u_long lastXMit;              \/* Time of last transmission. *\/$/;"	m	struct:PPPControl_s	file:
last_cs	net/lwip/netif/ppp/vj.h	/^  struct cstate *last_cs;          \/* most recently used tstate *\/$/;"	m	struct:vjcompress	typeref:struct:vjcompress::cstate
last_recv	net/lwip/netif/ppp/vj.h	/^  u_char last_recv;                \/* last rcvd conn. id *\/$/;"	m	struct:vjcompress
last_reporter_flag	net/lwip/include/ipv4/lwip/igmp.h	/^  u8_t               last_reporter_flag; \/* signifies we were the last person to report *\/$/;"	m	struct:igmp_group
last_tf	kern/trap.c	/^static struct Trapframe *last_tf;$/;"	v	typeref:struct:Trapframe	file:
last_tf	obj/kern/kernel.asm	/^	last_tf = tf;$/;"	d
last_xmit	net/lwip/netif/ppp/vj.h	/^  u_char last_xmit;                \/* last sent conn. id *\/$/;"	m	struct:vjcompress
lastack	net/lwip/include/lwip/tcp.h	/^  u32_t lastack; \/* Highest acknowledged seqno. *\/$/;"	m	struct:tcp_pcb
lastconflict	net/lwip/include/ipv4/lwip/autoip.h	/^  u8_t lastconflict;        \/* ticks until a conflict can be solved by defending *\/$/;"	m	struct:autoip
lastdata	net/lwip/api/sockets.c	/^  struct netbuf *lastdata;$/;"	m	struct:lwip_socket	typeref:struct:lwip_socket::netbuf	file:
lastoffset	net/lwip/api/sockets.c	/^  u16_t lastoffset;$/;"	m	struct:lwip_socket	file:
lb	net/lwip/include/lwip/api_msg.h	/^    } lb;$/;"	m	union:api_msg_msg::__anon25	typeref:struct:api_msg_msg::__anon25::__anon32
lcp_ackci	net/lwip/netif/ppp/lcp.c	/^lcp_ackci(fsm *f, u_char *p, int len)$/;"	f	file:
lcp_addci	net/lwip/netif/ppp/lcp.c	/^lcp_addci(fsm *f, u_char *ucp, int *lenp)$/;"	f	file:
lcp_allowoptions	net/lwip/netif/ppp/lcp.c	/^lcp_options lcp_allowoptions[NUM_PPP]; \/* Options we allow peer to request *\/$/;"	v
lcp_callbacks	net/lwip/netif/ppp/lcp.c	/^static fsm_callbacks lcp_callbacks = { \/* LCP callback routines *\/$/;"	v	file:
lcp_cilen	net/lwip/netif/ppp/lcp.c	/^static int lcp_cilen(fsm *f)$/;"	f	file:
lcp_close	net/lwip/netif/ppp/lcp.c	/^lcp_close(int unit, char *reason)$/;"	f
lcp_down	net/lwip/netif/ppp/lcp.c	/^lcp_down(fsm *f)$/;"	f	file:
lcp_echo_fails	net/lwip/netif/ppp/lcp.c	/^static u_int lcp_echo_fails         = LCP_MAXECHOFAILS; \/* Tolerance to unanswered echo-requests *\/$/;"	v	file:
lcp_echo_interval	net/lwip/netif/ppp/lcp.c	/^static u_int lcp_echo_interval      = LCP_ECHOINTERVAL; \/* Interval between LCP echo-requests *\/$/;"	v	file:
lcp_echo_lowerdown	net/lwip/netif/ppp/lcp.c	/^lcp_echo_lowerdown (int unit)$/;"	f	file:
lcp_echo_lowerup	net/lwip/netif/ppp/lcp.c	/^lcp_echo_lowerup (int unit)$/;"	f	file:
lcp_echo_number	net/lwip/netif/ppp/lcp.c	/^static u32_t lcp_echo_number        = 0;                \/* ID number of next echo frame *\/$/;"	v	file:
lcp_echo_timer_running	net/lwip/netif/ppp/lcp.c	/^static u32_t lcp_echo_timer_running = 0;                \/* TRUE if a timer is running *\/$/;"	v	file:
lcp_echos_pending	net/lwip/netif/ppp/lcp.c	/^static u32_t lcp_echos_pending      = 0;                \/* Number of outstanding echo msgs *\/$/;"	v	file:
lcp_extcode	net/lwip/netif/ppp/lcp.c	/^lcp_extcode(fsm *f, int code, u_char id, u_char *inp, int len)$/;"	f	file:
lcp_finished	net/lwip/netif/ppp/lcp.c	/^lcp_finished(fsm *f)$/;"	f	file:
lcp_fsm	net/lwip/netif/ppp/lcp.c	/^static fsm lcp_fsm[NUM_PPP];                            \/* LCP fsm structure (global)*\/$/;"	v	file:
lcp_gotoptions	net/lwip/netif/ppp/lcp.c	/^lcp_options lcp_gotoptions[NUM_PPP];   \/* Options that peer ack'd *\/$/;"	v
lcp_hisoptions	net/lwip/netif/ppp/lcp.c	/^lcp_options lcp_hisoptions[NUM_PPP];   \/* Options that we ack'd *\/$/;"	v
lcp_init	net/lwip/netif/ppp/lcp.c	/^lcp_init(int unit)$/;"	f
lcp_input	net/lwip/netif/ppp/lcp.c	/^lcp_input(int unit, u_char *p, int len)$/;"	f	file:
lcp_loopbackfail	net/lwip/netif/ppp/lcp.c	/^int lcp_loopbackfail = DEFLOOPBACKFAIL;$/;"	v
lcp_lowerdown	net/lwip/netif/ppp/lcp.c	/^lcp_lowerdown(int unit)$/;"	f
lcp_lowerup	net/lwip/netif/ppp/lcp.c	/^lcp_lowerup(int unit)$/;"	f
lcp_nakci	net/lwip/netif/ppp/lcp.c	/^lcp_nakci(fsm *f, u_char *p, int len)$/;"	f	file:
lcp_open	net/lwip/netif/ppp/lcp.c	/^lcp_open(int unit)$/;"	f
lcp_options	net/lwip/netif/ppp/lcp.h	/^typedef struct lcp_options {$/;"	s
lcp_options	net/lwip/netif/ppp/lcp.h	/^} lcp_options;$/;"	t	typeref:struct:lcp_options
lcp_phase	net/lwip/netif/ppp/lcp.c	/^LinkPhase lcp_phase[NUM_PPP];          \/* Phase of link session (RFC 1661) *\/$/;"	v
lcp_protent	net/lwip/netif/ppp/lcp.c	/^struct protent lcp_protent = {$/;"	v	typeref:struct:protent
lcp_protrej	net/lwip/netif/ppp/lcp.c	/^lcp_protrej(int unit)$/;"	f	file:
lcp_received_echo_reply	net/lwip/netif/ppp/lcp.c	/^lcp_received_echo_reply (fsm *f, int id, u_char *inp, int len)$/;"	f	file:
lcp_rejci	net/lwip/netif/ppp/lcp.c	/^lcp_rejci(fsm *f, u_char *p, int len)$/;"	f	file:
lcp_reqci	net/lwip/netif/ppp/lcp.c	/^lcp_reqci(fsm *f, $/;"	f	file:
lcp_resetci	net/lwip/netif/ppp/lcp.c	/^lcp_resetci(fsm *f)$/;"	f	file:
lcp_rprotrej	net/lwip/netif/ppp/lcp.c	/^lcp_rprotrej(fsm *f, u_char *inp, int len)$/;"	f	file:
lcp_sprotrej	net/lwip/netif/ppp/lcp.c	/^lcp_sprotrej(int unit, u_char *p, int len)$/;"	f
lcp_starting	net/lwip/netif/ppp/lcp.c	/^lcp_starting(fsm *f)$/;"	f	file:
lcp_up	net/lwip/netif/ppp/lcp.c	/^lcp_up(fsm *f)$/;"	f	file:
lcp_wantoptions	net/lwip/netif/ppp/lcp.c	/^lcp_options lcp_wantoptions[NUM_PPP];  \/* Options that we want to request *\/$/;"	v
lcr0	inc/x86.h	/^lcr0(uint64_t val)$/;"	f
lcr3	inc/x86.h	/^lcr3(uint64_t val)$/;"	f
lcr4	inc/x86.h	/^lcr4(uint64_t val)$/;"	f
leave_sent	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER leave_sent;       \/* *\/$/;"	m	struct:stats_igmp
left	obj/net/ns.asm	/^  left = 0;$/;"	d
left	obj/net/ns.asm	/^  left = len;$/;"	d
left	obj/net/ns.asm	/^  left = p->tot_len - IP_HLEN;$/;"	d
len	net/lwip/core/dns.c	/^  u16_t len;$/;"	m	struct:dns_answer	file:
len	net/lwip/include/ipv6/lwip/ip.h	/^  u16_t len;                \/* payload length *\/$/;"	m	struct:ip_hdr
len	net/lwip/include/lwip/api_msg.h	/^      int len;$/;"	m	struct:api_msg_msg::__anon25::__anon29
len	net/lwip/include/lwip/api_msg.h	/^      u16_t len;$/;"	m	struct:api_msg_msg::__anon25::__anon30
len	net/lwip/include/lwip/pbuf.h	/^  u16_t len;  $/;"	m	struct:pbuf
len	net/lwip/include/lwip/snmp.h	/^  u8_t len;$/;"	m	struct:snmp_obj_id
len	net/lwip/include/lwip/tcp.h	/^  u16_t len;               \/* the TCP length of this segment *\/$/;"	m	struct:tcp_seg
len	obj/kern/kernel.asm	/^                len = rcv_desc_array[rdt].length;$/;"	d
len	obj/net/ns.asm	/^      len = 0;$/;"	d
len	obj/net/ns.asm	/^      len = p->tot_len;$/;"	d
len	obj/net/ns.asm	/^      len = p_from->len - offset_from;$/;"	d
len	obj/net/ns.asm	/^      len = p_to->len - offset_to;$/;"	d
len	obj/net/ns.asm	/^    len = 0;$/;"	d
len	obj/net/ns.asm	/^    len = 0xffff;$/;"	d
len	obj/net/ns.asm	/^    len = available;$/;"	d
len	obj/net/ns.asm	/^    len = conn->write_msg->msg.w.len - conn->write_offset;$/;"	d
len	obj/net/ns.asm	/^    len = p->tot_len;$/;"	d
len	obj/net/ns.asm	/^  len = (u16_t)((u8_t *)seg->tcphdr - (u8_t *)seg->p->payload);$/;"	d
len	obj/net/ns.asm	/^  len = 0;$/;"	d
len	obj/net/ns.asm	/^  len = ntohs(IPH_LEN(fraghdr)) - IPH_HL(fraghdr) * 4;$/;"	d
lenerr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER lenerr;           \/* Invalid length error. *\/$/;"	m	struct:stats_igmp
lenerr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER lenerr;           \/* Invalid length error. *\/$/;"	m	struct:stats_proto
lenerr	obj/net/ns.asm	/^lenerr:$/;"	l
length	kern/e1000.h	/^        uint16_t length;$/;"	m	struct:rcv_desc
length	kern/e1000.h	/^        uint16_t length;$/;"	m	struct:tx_desc
length	kern/mpconfig.c	/^	uint16_t length;                \/\/ total table length$/;"	m	struct:mpconf	file:
length	kern/mpconfig.c	/^	uint8_t length;                 \/\/ 1$/;"	m	struct:mp	file:
level	net/lwip/api/sockets.c	/^  int level;$/;"	m	struct:lwip_setgetsockopt_data	file:
level	obj/net/ns.asm	/^  level = data->level;$/;"	d
level_length	net/lwip/include/lwip/snmp_structs.h	/^  u16_t (*level_length)(void* addr_inf, u8_t level);$/;"	m	struct:mib_external_node
lexceptset	obj/net/ns.asm	/^      lexceptset = *exceptset;$/;"	d
lexceptset	obj/net/ns.asm	/^    lexceptset = *exceptset;$/;"	d
lfile	obj/kern/kernel.asm	/^	lfile = 0;$/;"	d
lflag	obj/fs/fs.asm	/^		lflag = 0;$/;"	d
lflag	obj/kern/kernel.asm	/^		lflag = 0;$/;"	d
lflag	obj/net/ns.asm	/^		lflag = 0;$/;"	d
lflag	obj/net/testinput.asm	/^		lflag = 0;$/;"	d
lflag	obj/net/testoutput.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/echosrv.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/echotest.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/forktree.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/hello.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/httpd.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/icode.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/idle.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/init.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/pingpong.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/primes.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testfile.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/testtime.asm	/^		lflag = 0;$/;"	d
lflag	obj/user/writemotd.asm	/^		lflag = 0;$/;"	d
lfree	net/lwip/core/mem.c	/^static struct mem *lfree;$/;"	v	typeref:struct:mem	file:
lfree	obj/net/ns.asm	/^            lfree = (struct mem *)&ram[lfree->next];$/;"	d
lfree	obj/net/ns.asm	/^      lfree = (struct mem *)&ram[ptr2];$/;"	d
lfree	obj/net/ns.asm	/^      lfree = mem2;$/;"	d
lfree	obj/net/ns.asm	/^      lfree = mem;$/;"	d
lfree	obj/net/ns.asm	/^      lfree = pmem;$/;"	d
lfree	obj/net/ns.asm	/^    lfree = mem;$/;"	d
lfree	obj/net/ns.asm	/^  lfree = (struct mem *)ram;$/;"	d
lfun	obj/kern/kernel.asm	/^	lfun = lfile;$/;"	d
lgdt	inc/x86.h	/^lgdt(void *p)$/;"	f
libmain	lib/libmain.c	/^libmain(int argc, char **argv)$/;"	f
lidt	inc/x86.h	/^lidt(void *p)$/;"	f
line	net/lwip/core/memp.c	/^  int line;$/;"	m	struct:memp	file:
linger	net/lwip/include/lwip/sockets.h	/^struct linger {$/;"	s
link	net/lwip/include/lwip/stats.h	/^  struct stats_proto link;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
linkStatusCB	net/lwip/netif/ppp/ppp.c	/^  void (*linkStatusCB)(void *ctx, int errCode, void *arg);$/;"	m	struct:PPPControl_s	file:
linkStatusCtx	net/lwip/netif/ppp/ppp.c	/^  void *linkStatusCtx;$/;"	m	struct:PPPControl_s	file:
link_callback	net/lwip/include/lwip/netif.h	/^  void (* link_callback)(struct netif *netif);$/;"	m	struct:netif
link_down	net/lwip/netif/ppp/auth.c	/^link_down(int unit)$/;"	f
link_established	net/lwip/netif/ppp/auth.c	/^link_established(int unit)$/;"	f
link_required	net/lwip/netif/ppp/auth.c	/^link_required(int unit)$/;"	f
link_speed	net/lwip/include/lwip/netif.h	/^  u32_t link_speed;$/;"	m	struct:netif
link_terminated	net/lwip/netif/ppp/auth.c	/^link_terminated(int unit)$/;"	f
link_type	net/lwip/include/lwip/netif.h	/^  u8_t link_type;$/;"	m	struct:netif
linkoutput	net/lwip/include/lwip/netif.h	/^  err_t (* linkoutput)(struct netif *netif, struct pbuf *p);$/;"	m	struct:netif
listen	inc/ns.h	/^	} listen;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_listen
listen	lib/sockets.c	/^listen(int s, int backlog)$/;"	f
listen	net/lwip/include/lwip/sockets.h	335;"	d
listen_pcbs	net/lwip/include/lwip/tcp.h	/^  struct tcp_pcb_listen *listen_pcbs; $/;"	m	union:tcp_listen_pcbs_t	typeref:struct:tcp_listen_pcbs_t::tcp_pcb_listen
lldt	inc/x86.h	/^lldt(uint16_t sel)$/;"	f
lline	obj/kern/kernel.asm	/^		lline = lfile;$/;"	d
lline	obj/kern/kernel.asm	/^		lline = lfun;$/;"	d
llipaddr	net/lwip/include/ipv4/lwip/autoip.h	/^  struct ip_addr llipaddr;  \/* the currently selected, probed, announced or used LL IP-Address *\/$/;"	m	struct:autoip	typeref:struct:autoip::ip_addr
load_icode	kern/env.c	/^load_icode(struct Env *e, uint8_t *binary, size_t size)$/;"	f	file:
local	net/lwip/include/lwip/api_msg.h	/^      u8_t local;$/;"	m	struct:api_msg_msg::__anon25::__anon28
local_match	obj/net/ns.asm	/^        local_match = 1;$/;"	d
local_match	obj/net/ns.asm	/^      local_match = 0;$/;"	d
local_match	obj/net/ns.asm	/^    local_match = 0;$/;"	d
local_mem_free_count	obj/net/ns.asm	/^        local_mem_free_count = mem_free_count;$/;"	d
local_port	net/lwip/include/lwip/udp.h	/^  u16_t local_port, remote_port;$/;"	m	struct:udp_pcb
local_port	obj/net/ns.asm	/^    local_port = pcb->local_port;$/;"	d
local_port	obj/net/ns.asm	/^  local_port = ((struct sockaddr_in *)name)->sin_port;$/;"	d
lock_kernel	kern/spinlock.h	/^lock_kernel(void)$/;"	f
lock_tcpip_core	net/lwip/api/tcpip.c	/^sys_sem_t lock_tcpip_core;$/;"	v
lock_tcpip_core	obj/net/ns.asm	/^  lock_tcpip_core = sys_sem_new(1);$/;"	d
locked	kern/spinlock.h	/^	unsigned locked;   \/\/ Is the lock held?$/;"	m	struct:spinlock
logged_in	net/lwip/netif/ppp/auth.c	/^static int logged_in;$/;"	v	file:
logout	net/lwip/netif/ppp/auth.c	/^logout(void)$/;"	f	file:
long	obj/fs/fs.asm	/^long$/;"	l
long	obj/kern/kernel.asm	/^long$/;"	l
long	obj/net/ns.asm	/^long$/;"	l
long	obj/net/testinput.asm	/^long$/;"	l
long	obj/net/testoutput.asm	/^long$/;"	l
long	obj/user/echosrv.asm	/^long$/;"	l
long	obj/user/echotest.asm	/^long$/;"	l
long	obj/user/forktree.asm	/^long$/;"	l
long	obj/user/hello.asm	/^long$/;"	l
long	obj/user/httpd.asm	/^long$/;"	l
long	obj/user/icode.asm	/^long$/;"	l
long	obj/user/idle.asm	/^long$/;"	l
long	obj/user/init.asm	/^long$/;"	l
long	obj/user/pingpong.asm	/^long$/;"	l
long	obj/user/primes.asm	/^long$/;"	l
long	obj/user/testfile.asm	/^long$/;"	l
long	obj/user/testtime.asm	/^long$/;"	l
long	obj/user/writemotd.asm	/^long$/;"	l
loop	boot/boot.S	/^loop:$/;"	l
loop	obj/boot/boot.asm	/^loop:$/;"	l
loop_cnt_current	net/lwip/include/lwip/netif.h	/^  u16_t loop_cnt_current;$/;"	m	struct:netif
loop_first	net/lwip/include/lwip/netif.h	/^  struct pbuf *loop_first;$/;"	m	struct:netif	typeref:struct:netif::pbuf
loop_last	net/lwip/include/lwip/netif.h	/^  struct pbuf *loop_last;$/;"	m	struct:netif	typeref:struct:netif::pbuf
loopif_init	net/lwip/netif/loopif.c	/^loopif_init(struct netif *netif)$/;"	f
loopif_poll	net/lwip/include/netif/loopif.h	44;"	d
loopmsg	boot/boot.S	/^loopmsg:$/;"	l
loopmsg	obj/boot/boot.asm	/^loopmsg:$/;"	l
low_level_init	net/lwip/jos/jif/jif.c	/^low_level_init(struct netif *netif)$/;"	f	file:
low_level_input	net/lwip/jos/jif/jif.c	/^low_level_input(void *va)$/;"	f	file:
low_level_output	net/lwip/jos/jif/jif.c	/^low_level_output(struct netif *netif, struct pbuf *p)$/;"	f	file:
lowerdown	net/lwip/netif/ppp/ppp.h	/^    void (*lowerdown) (int unit);$/;"	m	struct:protent
lowerup	net/lwip/netif/ppp/ppp.h	/^    void (*lowerup) (int unit);$/;"	m	struct:protent
lpcb	obj/net/ns.asm	/^  lpcb = memp_malloc(MEMP_TCP_PCB_LISTEN);$/;"	d
lpt_putc	kern/console.c	/^lpt_putc(int c)$/;"	f	file:
lqr_period	net/lwip/netif/ppp/lcp.h	/^    u32_t lqr_period;            \/* Reporting period for LQR 1\/100ths second *\/$/;"	m	struct:lcp_options
lreadset	obj/net/ns.asm	/^      lreadset = *readset;$/;"	d
lreadset	obj/net/ns.asm	/^    lreadset = *readset;$/;"	d
ltr	inc/x86.h	/^ltr(uint16_t sel)$/;"	f
lwip_accept	net/lwip/api/sockets.c	/^lwip_accept(int s, struct sockaddr *addr, socklen_t *addrlen)$/;"	f
lwip_bind	net/lwip/api/sockets.c	/^lwip_bind(int s, struct sockaddr *name, socklen_t namelen)$/;"	f
lwip_close	net/lwip/api/sockets.c	/^lwip_close(int s)$/;"	f
lwip_connect	net/lwip/api/sockets.c	/^lwip_connect(int s, const struct sockaddr *name, socklen_t namelen)$/;"	f
lwip_core_lock	net/lwip/jos/arch/sys_arch.c	/^lwip_core_lock(void)$/;"	f
lwip_core_unlock	net/lwip/jos/arch/sys_arch.c	/^lwip_core_unlock(void)$/;"	f
lwip_event	net/lwip/include/lwip/tcp.h	/^enum lwip_event {$/;"	g
lwip_freeaddrinfo	net/lwip/api/netdb.c	/^lwip_freeaddrinfo(struct addrinfo *ai)$/;"	f
lwip_getaddrinfo	net/lwip/api/netdb.c	/^lwip_getaddrinfo(const char *nodename, const char *servname,$/;"	f
lwip_getaddrname	net/lwip/api/sockets.c	/^lwip_getaddrname(int s, struct sockaddr *name, socklen_t *namelen, u8_t local)$/;"	f	file:
lwip_gethostbyname	net/lwip/api/netdb.c	/^lwip_gethostbyname(const char *name)$/;"	f
lwip_gethostbyname_r	net/lwip/api/netdb.c	/^lwip_gethostbyname_r(const char *name, struct hostent *ret, char *buf,$/;"	f
lwip_getpeername	net/lwip/api/sockets.c	/^lwip_getpeername(int s, struct sockaddr *name, socklen_t *namelen)$/;"	f
lwip_getsockname	net/lwip/api/sockets.c	/^lwip_getsockname(int s, struct sockaddr *name, socklen_t *namelen)$/;"	f
lwip_getsockopt	net/lwip/api/sockets.c	/^lwip_getsockopt(int s, int level, int optname, void *optval, socklen_t *optlen)$/;"	f
lwip_getsockopt_internal	net/lwip/api/sockets.c	/^lwip_getsockopt_internal(void *arg)$/;"	f	file:
lwip_init	net/lwip/core/init.c	/^lwip_init(void)$/;"	f
lwip_init	net/serv.c	/^lwip_init(struct netif *nif, void *if_state,$/;"	f	file:
lwip_ioctl	net/lwip/api/sockets.c	/^lwip_ioctl(int s, long cmd, void *argp)$/;"	f
lwip_listen	net/lwip/api/sockets.c	/^lwip_listen(int s, int backlog)$/;"	f
lwip_read	net/lwip/api/sockets.c	/^lwip_read(int s, void *mem, int len)$/;"	f
lwip_recv	net/lwip/api/sockets.c	/^lwip_recv(int s, void *mem, int len, unsigned int flags)$/;"	f
lwip_recvfrom	net/lwip/api/sockets.c	/^lwip_recvfrom(int s, void *mem, int len, unsigned int flags,$/;"	f
lwip_sanity_check	net/lwip/core/init.c	/^lwip_sanity_check(void)$/;"	f	file:
lwip_sanity_check	net/lwip/core/init.c	209;"	d	file:
lwip_select	net/lwip/api/sockets.c	/^lwip_select(int maxfdp1, fd_set *readset, fd_set *writeset, fd_set *exceptset,$/;"	f
lwip_select_cb	net/lwip/api/sockets.c	/^struct lwip_select_cb {$/;"	s	file:
lwip_selscan	net/lwip/api/sockets.c	/^lwip_selscan(int maxfdp1, fd_set *readset, fd_set *writeset, fd_set *exceptset)$/;"	f	file:
lwip_send	net/lwip/api/sockets.c	/^lwip_send(int s, const void *data, int size, unsigned int flags)$/;"	f
lwip_sendto	net/lwip/api/sockets.c	/^lwip_sendto(int s, const void *data, int size, unsigned int flags,$/;"	f
lwip_setgetsockopt_data	net/lwip/api/sockets.c	/^struct lwip_setgetsockopt_data {$/;"	s	file:
lwip_setsockopt	net/lwip/api/sockets.c	/^lwip_setsockopt(int s, int level, int optname, const void *optval, socklen_t optlen)$/;"	f
lwip_setsockopt_internal	net/lwip/api/sockets.c	/^lwip_setsockopt_internal(void *arg)$/;"	f	file:
lwip_shutdown	net/lwip/api/sockets.c	/^lwip_shutdown(int s, int how)$/;"	f
lwip_socket	net/lwip/api/sockets.c	/^lwip_socket(int domain, int type, int protocol)$/;"	f
lwip_socket	net/lwip/api/sockets.c	/^struct lwip_socket {$/;"	s	file:
lwip_socket_init	net/lwip/api/sockets.c	/^lwip_socket_init(void)$/;"	f
lwip_standard_chksum	net/lwip/core/ipv4/inet_chksum.c	/^lwip_standard_chksum(void *dataptr, int len)$/;"	f	file:
lwip_standard_chksum	net/lwip/core/ipv4/inet_chksum.c	/^lwip_standard_chksum(void *dataptr, u16_t len)$/;"	f	file:
lwip_stats	net/lwip/core/stats.c	/^struct stats_ lwip_stats;$/;"	v	typeref:struct:stats_
lwip_strerr	net/lwip/api/err.c	/^lwip_strerr(err_t err)$/;"	f
lwip_strerr	net/lwip/include/lwip/err.h	80;"	d
lwip_thread	net/lwip/jos/arch/sys_arch.c	/^struct lwip_thread {$/;"	s	file:
lwip_thread_entry	net/lwip/jos/arch/sys_arch.c	/^lwip_thread_entry(uint64_t arg)$/;"	f	file:
lwip_write	net/lwip/api/sockets.c	/^lwip_write(int s, const void *data, int size)$/;"	f
lwriteset	obj/net/ns.asm	/^      lwriteset = *writeset;$/;"	d
lwriteset	obj/net/ns.asm	/^    lwriteset = *writeset;$/;"	d
m	obj/fs/fs.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/net/ns.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/net/ns.asm	/^        m = -m;$/;"	d
m	obj/net/ns.asm	/^      m = (s16_t)(tcp_ticks - pcb->rttest);$/;"	d
m	obj/net/ns.asm	/^      m = m - (pcb->sa >> 3);$/;"	d
m	obj/net/ns.asm	/^      m = m - (pcb->sv >> 2);$/;"	d
m	obj/net/testinput.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/net/testoutput.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/echosrv.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/echotest.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/forktree.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/hello.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/httpd.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/icode.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/idle.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/init.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/pingpong.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/primes.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testfile.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/testtime.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
m	obj/user/writemotd.asm	/^		m = read(fdnum, (char*)buf + tot, n - tot);$/;"	d
magic	net/lwip/netif/ppp/magic.c	/^u32_t magic()$/;"	f
magicInit	net/lwip/netif/ppp/magic.c	/^void magicInit()$/;"	f
magicnumber	net/lwip/netif/ppp/lcp.h	/^    u32_t magicnumber;$/;"	m	struct:lcp_options
main	ex1.c	/^int main()$/;"	f
main	fs/fsformat.c	/^main(int argc, char **argv)$/;"	f
make	gradelib.py	/^def make(*target):$/;"	f
malloc	lib/malloc.c	/^malloc(size_t n)$/;"	f
map_block	fs/fs.c	/^map_block(uint32_t blockno)$/;"	f
map_segment	lib/spawn.c	/^map_segment(envid_t child, uintptr_t va, size_t memsz,$/;"	f	file:
match	gradelib.py	/^    def match(self, *args, **kwargs):$/;"	m	class:Runner
match_packet_seq	grade-lab6	/^def match_packet_seq(got, expect):$/;"	f
matchtest	grade-lab5	/^def matchtest(parent, name, *args, **kw):$/;"	f
max	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER max;$/;"	m	struct:stats_syselem
max	net/lwip/include/lwip/stats.h	/^  mem_size_t max;$/;"	m	struct:stats_mem
maxSlotIndex	net/lwip/netif/ppp/vj.h	/^  u_char maxSlotIndex;$/;"	m	struct:vjcompress
max_tid	net/lwip/jos/arch/thread.c	/^static thread_id_t max_tid;$/;"	v	file:
max_tid	obj/net/ns.asm	/^    max_tid = 0;$/;"	d
max_transmits	net/lwip/netif/ppp/chap.h	/^  int max_transmits;                      \/* Maximum # of challenge transmissions *\/$/;"	m	struct:chap_state
maxconfreqtransmits	net/lwip/netif/ppp/fsm.h	/^  int maxconfreqtransmits;         \/* Maximum Configure-Request transmissions *\/$/;"	m	struct:fsm
maxconnect	net/lwip/netif/ppp/ppp.h	/^  int  maxconnect;                    \/* Maximum connect time (seconds) *\/$/;"	m	struct:ppp_settings
maxlength	net/lwip/include/lwip/snmp_structs.h	/^  const u16_t maxlength;$/;"	m	struct:mib_array_node
maxlength	net/lwip/include/lwip/snmp_structs.h	/^  const u16_t maxlength;$/;"	m	struct:mib_node
maxlength	net/lwip/include/lwip/snmp_structs.h	/^  u16_t maxlength;$/;"	m	struct:mib_external_node
maxlength	net/lwip/include/lwip/snmp_structs.h	/^  u16_t maxlength;$/;"	m	struct:mib_list_rootnode
maxlength	net/lwip/include/lwip/snmp_structs.h	/^  u16_t maxlength;$/;"	m	struct:mib_ram_array_node
maxnakloops	net/lwip/netif/ppp/fsm.h	/^  int maxnakloops;                 \/* Maximum number of nak loops tolerated *\/$/;"	m	struct:fsm
maxslotindex	net/lwip/netif/ppp/ipcp.h	/^  u_char  maxslotindex;      \/* VJ slots - 1. *\/$/;"	m	struct:ipcp_options
maxtermtransmits	net/lwip/netif/ppp/fsm.h	/^  int maxtermtransmits;            \/* Maximum Terminate-Request transmissions *\/$/;"	m	struct:fsm
maybe_unlink	gradelib.py	/^def maybe_unlink(*paths):$/;"	f
mbegin	lib/malloc.c	/^static uint8_t *mbegin = (uint8_t*) 0x08000000;$/;"	v	file:
mbox	net/lwip/api/tcpip.c	/^static sys_mbox_t mbox = SYS_MBOX_NULL;$/;"	v	file:
mbox	net/lwip/include/lwip/stats.h	/^  struct stats_syselem mbox;$/;"	m	struct:stats_sys	typeref:struct:stats_sys::stats_syselem
mbox	obj/net/ns.asm	/^  mbox = sys_mbox_new(TCPIP_MBOX_SIZE);$/;"	d
mboxes	net/lwip/jos/arch/sys_arch.c	/^static struct sys_mbox_entry mboxes[NMBOX];$/;"	v	typeref:struct:sys_mbox_entry	file:
mc146818_read	kern/kclock.c	/^mc146818_read(unsigned reg)$/;"	f
mc146818_write	kern/kclock.c	/^mc146818_write(unsigned reg, unsigned datum)$/;"	f
mem	net/lwip/core/mem.c	/^struct mem {$/;"	s	file:
mem	net/lwip/include/lwip/stats.h	/^  struct stats_mem mem;$/;"	m	struct:stats_	typeref:struct:stats_::stats_mem
mem	obj/net/ns.asm	/^      mem = (struct mem *)&ram[ptr];$/;"	d
mem	obj/net/ns.asm	/^  mem = (struct mem *)((u8_t *)rmem - SIZEOF_STRUCT_MEM);$/;"	d
mem	obj/net/ns.asm	/^  mem = (struct mem *)ram;$/;"	d
mem2	obj/net/ns.asm	/^          mem2 = (struct mem *)&ram[ptr2];$/;"	d
mem2	obj/net/ns.asm	/^    mem2 = (struct mem *)&ram[ptr2];$/;"	d
mem2	obj/net/ns.asm	/^  mem2 = (struct mem *)&ram[mem->next];$/;"	d
mem_calloc	net/lwip/core/mem.c	/^void *mem_calloc(mem_size_t count, mem_size_t size)$/;"	f
mem_calloc	net/lwip/include/lwip/mem.h	59;"	d
mem_free	net/lwip/core/mem.c	/^mem_free(void *rmem)$/;"	f
mem_free	net/lwip/include/lwip/mem.h	53;"	d
mem_free_callback	net/lwip/api/tcpip.c	/^mem_free_callback(void *m)$/;"	f
mem_free_count	net/lwip/core/mem.c	/^static volatile u8_t mem_free_count;$/;"	v	file:
mem_free_count	obj/net/ns.asm	/^      mem_free_count = 0;$/;"	d
mem_free_count	obj/net/ns.asm	/^  mem_free_count = 1;$/;"	d
mem_helper	net/lwip/core/mem.c	/^struct mem_helper$/;"	s	file:
mem_init	net/lwip/core/mem.c	/^mem_init(void)$/;"	f
mem_init	net/lwip/include/lwip/mem.h	48;"	d
mem_init	net/lwip/include/lwip/mem.h	77;"	d
mem_init_mp	kern/pmap.c	/^mem_init_mp(void)$/;"	f	file:
mem_init_mp	kern/pmap.c.BACKUP.24152.c	/^mem_init_mp(void)$/;"	f	file:
mem_init_mp	kern/pmap.c.BASE.24152.c	/^mem_init_mp(void)$/;"	f	file:
mem_init_mp	kern/pmap.c.LOCAL.24152.c	/^mem_init_mp(void)$/;"	f	file:
mem_init_mp	kern/pmap.c.REMOTE.24152.c	/^mem_init_mp(void)$/;"	f	file:
mem_init_mp	kern/pmap1.c	/^mem_init_mp(void)$/;"	f	file:
mem_malloc	net/lwip/core/mem.c	/^mem_malloc(mem_size_t size)$/;"	f
mem_malloc	net/lwip/include/lwip/mem.h	56;"	d
mem_ptr_t	net/lwip/jos/arch/cc.h	/^typedef uintptr_t mem_ptr_t;$/;"	t
mem_realloc	net/lwip/core/mem.c	/^mem_realloc(void *rmem, mem_size_t newsize)$/;"	f
mem_realloc	net/lwip/include/lwip/mem.h	62;"	d
mem_realloc	net/lwip/include/lwip/mem.h	80;"	d
mem_sem	net/lwip/core/mem.c	/^static sys_sem_t mem_sem;$/;"	v	file:
mem_sem	obj/net/ns.asm	/^  mem_sem = sys_sem_new(1);$/;"	d
mem_size_t	net/lwip/include/lwip/mem.h	/^typedef size_t mem_size_t;$/;"	t
mem_size_t	net/lwip/include/lwip/mem.h	/^typedef u16_t mem_size_t;$/;"	t
mem_size_t	net/lwip/include/lwip/mem.h	/^typedef u32_t mem_size_t;$/;"	t
memcmp	lib/string.c	/^memcmp(const void *v1, const void *v2, size_t n)$/;"	f
memcpy	lib/string.c	/^memcpy(void *dst, const void *src, size_t n)$/;"	f
memerr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER memerr;           \/* Out of memory error. *\/$/;"	m	struct:stats_proto
memerr	obj/net/ns.asm	/^memerr:$/;"	l
memfind	lib/string.c	/^memfind(const void *s, int c, size_t n)$/;"	f
memmove	lib/string.c	/^memmove(void *dst, const void *src, size_t n)$/;"	f
memp	net/lwip/core/memp.c	/^struct memp {$/;"	s	file:
memp	net/lwip/include/lwip/stats.h	/^  struct stats_mem memp[MEMP_MAX];$/;"	m	struct:stats_	typeref:struct:stats_::stats_mem
memp	obj/net/ns.asm	/^      memp = (struct memp *)((u8_t *)memp + MEMP_SIZE + memp_sizes[i]);$/;"	d
memp	obj/net/ns.asm	/^    memp = (struct memp*)((u8_t*)memp + MEMP_SIZE);$/;"	d
memp	obj/net/ns.asm	/^  memp = (struct memp *)((u8_t*)mem - MEMP_SIZE);$/;"	d
memp	obj/net/ns.asm	/^  memp = LWIP_MEM_ALIGN(memp_memory);$/;"	d
memp	obj/net/ns.asm	/^  memp = memp_tab[type];$/;"	d
memp_desc	net/lwip/core/memp.c	/^static const char *memp_desc[MEMP_MAX] = {$/;"	v	file:
memp_free	net/lwip/core/memp.c	/^memp_free(memp_t type, void *mem)$/;"	f
memp_init	net/lwip/core/memp.c	/^memp_init(void)$/;"	f
memp_malloc	net/lwip/core/memp.c	/^memp_malloc(memp_t type)$/;"	f
memp_malloc	net/lwip/include/lwip/memp.h	84;"	d
memp_memory	net/lwip/core/memp.c	/^static u8_t memp_memory[MEM_ALIGNMENT - 1 $/;"	v	file:
memp_num	net/lwip/core/memp.c	/^static const u16_t memp_num[MEMP_MAX] = {$/;"	v	file:
memp_overflow_check_all	net/lwip/core/memp.c	/^memp_overflow_check_all(void)$/;"	f	file:
memp_overflow_check_element	net/lwip/core/memp.c	/^memp_overflow_check_element(struct memp *p, u16_t memp_size)$/;"	f	file:
memp_overflow_init	net/lwip/core/memp.c	/^memp_overflow_init(void)$/;"	f	file:
memp_pool_helper_t	net/lwip/include/lwip/memp.h	/^} memp_pool_helper_t;$/;"	t	typeref:enum:__anon24
memp_sanity	net/lwip/core/memp.c	/^memp_sanity(void)$/;"	f	file:
memp_sizes	net/lwip/core/memp.c	/^const u16_t memp_sizes[MEMP_MAX] = {$/;"	v	file:
memp_t	net/lwip/include/lwip/memp.h	/^} memp_t;$/;"	t	typeref:enum:__anon23
memp_tab	net/lwip/core/memp.c	/^static struct memp *memp_tab[MEMP_MAX];$/;"	v	typeref:struct:memp	file:
memset	lib/string.c	/^memset(void *v, int c, size_t n)$/;"	f
mend	lib/malloc.c	/^static uint8_t *mend   = (uint8_t*) 0x10000000;$/;"	v	file:
mgmt	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node mgmt = {$/;"	v	typeref:struct:mib_array_node
mgmt_ids	net/lwip/core/snmp/mib2.c	/^const s32_t mgmt_ids[1] = { 1 };$/;"	v
mgmt_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const mgmt_nodes[1] = { (struct mib_node* const)&mib2 };$/;"	v
mib2	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node mib2 = {$/;"	v	typeref:struct:mib_array_node
mib2_at_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* mib2_at_node = (struct mib_node* const)&attable;$/;"	v	typeref:struct:mib_node
mib2_ids	net/lwip/core/snmp/mib2.c	/^const s32_t mib2_ids[MIB2_GROUPS] =$/;"	v
mib2_ip	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node mib2_ip = {$/;"	v	typeref:struct:mib_array_node
mib2_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const mib2_nodes[MIB2_GROUPS] = {$/;"	v
mib_array_node	net/lwip/include/lwip/snmp_structs.h	/^struct mib_array_node$/;"	s
mib_external_node	net/lwip/include/lwip/snmp_structs.h	/^struct mib_external_node$/;"	s
mib_list_node	net/lwip/include/lwip/snmp_structs.h	/^struct mib_list_node$/;"	s
mib_list_rootnode	net/lwip/include/lwip/snmp_structs.h	/^struct mib_list_rootnode$/;"	s
mib_node	net/lwip/include/lwip/snmp_structs.h	/^struct mib_node$/;"	s
mib_ram_array_node	net/lwip/include/lwip/snmp_structs.h	/^struct mib_ram_array_node$/;"	s
mib_scalar_node	net/lwip/include/lwip/snmp_structs.h	/^typedef struct mib_node mib_scalar_node;$/;"	t	typeref:struct:mib_node
microdelay	kern/lapic.c	/^microdelay(int us)$/;"	f	file:
mime_type	user/httpd.c	/^mime_type(const char *file)$/;"	f	file:
mk_test_httpd	grade-lab6	/^def mk_test_httpd(url, expect_code, expect_data):$/;"	f
mm1	obj/kern/kernel.asm	/^	mm1 = (uintptr_t) mmio_map_region(0, 4097);$/;"	d
mm2	obj/kern/kernel.asm	/^	mm2 = (uintptr_t) mmio_map_region(0, 4096);$/;"	d
mmio_map_region	kern/pmap.c	/^mmio_map_region(physaddr_t pa, size_t size)$/;"	f
mmio_map_region	kern/pmap.c.BACKUP.24152.c	/^mmio_map_region(physaddr_t pa, size_t size)$/;"	f
mmio_map_region	kern/pmap.c.BASE.24152.c	/^mmio_map_region(physaddr_t pa, size_t size)$/;"	f
mmio_map_region	kern/pmap.c.LOCAL.24152.c	/^mmio_map_region(physaddr_t pa, size_t size)$/;"	f
mmio_map_region	kern/pmap.c.REMOTE.24152.c	/^mmio_map_region(physaddr_t pa, size_t size)$/;"	f
mmio_map_region	kern/pmap1.c	/^mmio_map_region(physaddr_t pa, size_t size)$/;"	f
mode	net/lwip/netif/ppp/ppp.c	/^  enum NPmode mode;$/;"	m	struct:npioctl	typeref:enum:npioctl::NPmode	file:
mon_backtrace	kern/monitor.c	/^mon_backtrace(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_help	kern/monitor.c	/^mon_help(int argc, char **argv, struct Trapframe *tf)$/;"	f
mon_kerninfo	kern/monitor.c	/^mon_kerninfo(int argc, char **argv, struct Trapframe *tf)$/;"	f
monitor	kern/monitor.c	/^monitor(struct Trapframe *tf)$/;"	f
movl	kern/trapentry.S	/^movl %esp, %edi$/;"	l
movl	obj/kern/kernel.asm	/^movl %esp, %edi$/;"	l
mp	kern/mpconfig.c	/^struct mp {             \/\/ floating pointer [MP 4.1]$/;"	s	file:
mp_init	kern/mpconfig.c	/^mp_init(void)$/;"	f
mp_main	kern/init.c	/^mp_main(void)$/;"	f
mpconf	kern/mpconfig.c	/^struct mpconf {         \/\/ configuration table header [MP 4.2]$/;"	s	file:
mpconfig	kern/mpconfig.c	/^mpconfig(struct mp **pmp)$/;"	f	file:
mpentry_end	kern/mpentry.S	/^mpentry_end:$/;"	l
mpentry_end	obj/kern/kernel.asm	/^mpentry_end:$/;"	l
mpentry_kstack	kern/init.c	/^void *mpentry_kstack;$/;"	v
mpentry_kstack	obj/kern/kernel.asm	/^		mpentry_kstack = percpu_kstacks[c - cpus] + KSTKSIZE;$/;"	d
mpentry_start	kern/mpentry.S	/^mpentry_start:$/;"	l
mpentry_start	obj/kern/kernel.asm	/^mpentry_start:$/;"	l
mpproc	kern/mpconfig.c	/^struct mpproc {         \/\/ processor table entry [MP 4.3.1]$/;"	s	file:
mprio	obj/net/ns.asm	/^      mprio = pcb->prio;$/;"	d
mprio	obj/net/ns.asm	/^  mprio = TCP_PRIO_MAX;$/;"	d
mpsearch	kern/mpconfig.c	/^mpsearch(void)$/;"	f	file:
mpsearch1	kern/mpconfig.c	/^mpsearch1(physaddr_t a, int len)$/;"	f	file:
mptr	lib/malloc.c	/^static uint8_t *mptr;$/;"	v	file:
mptr	obj/net/ns.asm	/^			mptr = mbegin;$/;"	d
mptr	obj/net/ns.asm	/^		mptr = ROUNDDOWN(mptr + PGSIZE, PGSIZE);$/;"	d
mptr	obj/net/ns.asm	/^		mptr = mbegin;$/;"	d
mptr	obj/user/httpd.asm	/^			mptr = mbegin;$/;"	d
mptr	obj/user/httpd.asm	/^		mptr = ROUNDDOWN(mptr + PGSIZE, PGSIZE);$/;"	d
mptr	obj/user/httpd.asm	/^		mptr = mbegin;$/;"	d
mrru	net/lwip/netif/ppp/lcp.h	/^    u_short mrru;                \/* Value of MRRU, and multilink enable *\/$/;"	m	struct:lcp_options
mru	net/lwip/netif/ppp/lcp.h	/^    u_short mru;                 \/* Value of MRU *\/$/;"	m	struct:lcp_options
msec	net/serv.c	/^	uint32_t msec;$/;"	m	struct:timer_thread	file:
msecs	net/lwip/include/lwip/tcpip.h	/^      u32_t msecs;$/;"	m	struct:tcpip_msg::__anon33::__anon36
msecs	obj/net/ns.asm	/^  msecs = 10*1000;$/;"	d
msecs	obj/net/ns.asm	/^  msecs = 500;$/;"	d
msecs	obj/net/ns.asm	/^  msecs = dhcp->tries < 10 ? dhcp->tries * 1000 : 10 * 1000;$/;"	d
msecs	obj/net/ns.asm	/^  msecs = dhcp->tries < 10 ? dhcp->tries * 2000 : 20 * 1000;$/;"	d
msecs	obj/net/ns.asm	/^  msecs = dhcp->tries < 4 ? (dhcp->tries + 1) * 1000 : 10 * 1000;$/;"	d
msecs	obj/net/ns.asm	/^  msecs = dhcp->tries < 4 ? dhcp->tries * 1000 : 4 * 1000;$/;"	d
msectimeout	obj/net/ns.asm	/^        msectimeout = 1;$/;"	d
msectimeout	obj/net/ns.asm	/^      msectimeout =  ((timeout->tv_sec * 1000) + ((timeout->tv_usec + 500)\/1000));$/;"	d
msectimeout	obj/net/ns.asm	/^      msectimeout = 0;$/;"	d
msg	fs/test.c	/^static char *msg = "This is the NEW message of the day!\\n\\n";$/;"	v	file:
msg	net/lwip/include/lwip/api_msg.h	/^  struct api_msg_msg msg;$/;"	m	struct:api_msg	typeref:struct:api_msg::api_msg_msg
msg	net/lwip/include/lwip/api_msg.h	/^  } msg;$/;"	m	struct:api_msg_msg	typeref:union:api_msg_msg::__anon25
msg	net/lwip/include/lwip/netifapi.h	/^  struct netifapi_msg_msg msg;$/;"	m	struct:netifapi_msg	typeref:struct:netifapi_msg::netifapi_msg_msg
msg	net/lwip/include/lwip/netifapi.h	/^  } msg;$/;"	m	struct:netifapi_msg_msg	typeref:union:netifapi_msg_msg::__anon20
msg	net/lwip/include/lwip/tcpip.h	/^  } msg;$/;"	m	struct:tcpip_msg	typeref:union:tcpip_msg::__anon33
msg	net/lwip/jos/arch/sys_arch.c	/^    void *msg[MBOXSLOTS];$/;"	m	struct:sys_mbox_entry	file:
msg	obj/net/ns.asm	/^    msg = memp_malloc(MEMP_TCPIP_MSG_API);$/;"	d
msg	obj/net/ns.asm	/^    msg = memp_malloc(MEMP_TCPIP_MSG_INPKT);$/;"	d
msg	user/echotest.c	/^const char *msg = "Hello world!\\n";$/;"	v
msg	user/httpd.c	/^	char *msg;$/;"	m	struct:error_messages	file:
msg	user/testfile.c	/^const char *msg = "This is the NEW message of the day!\\n\\n";$/;"	v
msg1	user/init.c	/^	char msg1[5000];$/;"	m	struct:__anon44	file:
msg2	user/init.c	/^	char msg2[1000];$/;"	m	struct:__anon44	file:
msg_in	net/lwip/include/lwip/dhcp.h	/^  struct dhcp_msg *msg_in;$/;"	m	struct:dhcp	typeref:struct:dhcp::dhcp_msg
msg_input_list	net/lwip/core/snmp/msg_in.c	/^struct snmp_msg_pstat msg_input_list[SNMP_CONCURRENT_REQUESTS];$/;"	v	typeref:struct:snmp_msg_pstat
msg_out	net/lwip/include/lwip/dhcp.h	/^  struct dhcp_msg *msg_out; \/* outgoing msg *\/$/;"	m	struct:dhcp	typeref:struct:dhcp::dhcp_msg
msg_type	obj/net/ns.asm	/^  msg_type = dhcp_get_option_byte(options_ptr + 2);$/;"	d
mss	net/lwip/include/lwip/tcp.h	/^  u16_t mss;   \/* maximum segment size *\/$/;"	m	struct:tcp_pcb
mss	obj/net/ns.asm	/^        mss = (opts[c + 2] << 8) | opts[c + 3];$/;"	d
mss_s	obj/net/ns.asm	/^    mss_s = outif->mtu - IP_HLEN - TCP_HLEN;$/;"	d
mtu	net/lwip/include/lwip/netif.h	/^  u16_t mtu;$/;"	m	struct:netif
mtu	net/lwip/netif/ppp/ppp.c	/^  int  mtu;                     \/* Peer's mru *\/$/;"	m	struct:PPPControl_s	file:
multiaddr	net/lwip/include/lwip/api_msg.h	/^      struct ip_addr *multiaddr;$/;"	m	struct:api_msg_msg::__anon25::__anon31	typeref:struct:api_msg_msg::__anon25::__anon31::ip_addr
multicast_ip	net/lwip/include/lwip/udp.h	/^  struct ip_addr multicast_ip;$/;"	m	struct:udp_pcb	typeref:struct:udp_pcb::ip_addr
n	fs/fsformat.c	/^	int n;$/;"	m	struct:Dir	file:
n	net/lwip/include/lwip/api_msg.h	/^    } n;$/;"	m	union:api_msg_msg::__anon25	typeref:struct:api_msg_msg::__anon25::__anon26
n	obj/kern/kernel.asm	/^	n = ROUNDUP(NENV*sizeof(struct Env), PGSIZE);$/;"	d
n	obj/kern/kernel.asm	/^	n = ROUNDUP(npages*sizeof(struct Page), PGSIZE);$/;"	d
n	obj/net/ns.asm	/^	n = ROUNDUP(n, 4);$/;"	d
n	obj/net/ns.asm	/^  n = pp - parts + 1;$/;"	d
n	obj/net/testinput.asm	/^  n = pp - parts + 1;$/;"	d
n	obj/user/echosrv.asm	/^  n = pp - parts + 1;$/;"	d
n	obj/user/echotest.asm	/^  n = pp - parts + 1;$/;"	d
n	obj/user/httpd.asm	/^	n = ROUNDUP(n, 4);$/;"	d
n	obj/user/httpd.asm	/^  n = pp - parts + 1;$/;"	d
nPut	net/lwip/netif/ppp/ppp.c	/^nPut(PPPControl *pc, struct pbuf *nb)$/;"	f	file:
n_desc	inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab
n_other	inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab
n_strx	inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab
n_type	inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab
n_value	inc/stab.h	/^	uint32_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab
nak_buffer	net/lwip/netif/ppp/lcp.c	/^static u_char nak_buffer[PPP_MRU]; \/* where we construct a nak packet *\/$/;"	v	file:
nakci	net/lwip/netif/ppp/fsm.h	/^  int  (*nakci)(fsm*, u_char*, int);                \/* NAK our Configuration Information *\/$/;"	m	struct:fsm_callbacks
nakloops	net/lwip/netif/ppp/fsm.h	/^  int nakloops;                    \/* Number of nak loops since last ack *\/$/;"	m	struct:fsm
name	kern/monitor.c	/^	const char *name;$/;"	m	struct:Command	file:
name	kern/spinlock.h	/^	char *name;        \/\/ Name of lock.$/;"	m	struct:spinlock
name	kern/trapentry.S	/^	name:								\\$/;"	l
name	kern/trapentry.S	/^	name:			\/* function starts here *\/		\\$/;"	l
name	net/lwip/core/dns.c	/^  char name[DNS_MAX_NAME_LENGTH];$/;"	m	struct:dns_table_entry	file:
name	net/lwip/include/lwip/api_msg.h	/^  const char *name;$/;"	m	struct:dns_api_msg
name	net/lwip/include/lwip/netif.h	/^  char name[2];$/;"	m	struct:netif
name	net/lwip/netif/ppp/ppp.h	/^    char *name;         \/* Text name of protocol *\/$/;"	m	struct:protent
name	net/serv.c	/^	const char *name;$/;"	m	struct:timer_thread	file:
name_size	net/lwip/jos/arch/threadq.h	/^enum { name_size = 32 };$/;"	e	enum:__anon42
nblock	obj/fs/fs.asm	/^	nblock = dir->f_size \/ BLKSIZE;$/;"	d
nblocks	fs/fsformat.c	/^uint32_t nblocks;$/;"	v
ncpu	kern/mpconfig.c	/^int ncpu;$/;"	v
ncpu	obj/kern/kernel.asm	/^		ncpu = 1;$/;"	d
neg_accompression	net/lwip/netif/ppp/lcp.h	/^    u_int neg_accompression : 1; \/* HDLC Address\/Control Field Compression? *\/$/;"	m	struct:lcp_options
neg_addr	net/lwip/netif/ppp/ipcp.h	/^  u_int   neg_addr      : 1; \/* Negotiate IP Address? *\/$/;"	m	struct:ipcp_options
neg_asyncmap	net/lwip/netif/ppp/lcp.h	/^    u_int neg_asyncmap      : 1; \/* Negotiate the async map? *\/$/;"	m	struct:lcp_options
neg_cbcp	net/lwip/netif/ppp/lcp.h	/^    u_int neg_cbcp          : 1; \/* Negotiate use of CBCP *\/$/;"	m	struct:lcp_options
neg_chap	net/lwip/netif/ppp/lcp.h	/^    u_int neg_chap          : 1; \/* Ask for CHAP authentication? *\/$/;"	m	struct:lcp_options
neg_endpoint	net/lwip/netif/ppp/lcp.h	/^    u_int neg_endpoint      : 1; \/* Negotiate endpoint discriminator *\/$/;"	m	struct:lcp_options
neg_lqr	net/lwip/netif/ppp/lcp.h	/^    u_int neg_lqr           : 1; \/* Negotiate use of Link Quality Reports *\/$/;"	m	struct:lcp_options
neg_magicnumber	net/lwip/netif/ppp/lcp.h	/^    u_int neg_magicnumber   : 1; \/* Ask for magic number? *\/$/;"	m	struct:lcp_options
neg_mrru	net/lwip/netif/ppp/lcp.h	/^    u_int neg_mrru          : 1; \/* Negotiate multilink MRRU *\/$/;"	m	struct:lcp_options
neg_mru	net/lwip/netif/ppp/lcp.h	/^    u_int neg_mru           : 1; \/* Negotiate the MRU? *\/$/;"	m	struct:lcp_options
neg_pcompression	net/lwip/netif/ppp/lcp.h	/^    u_int neg_pcompression  : 1; \/* HDLC Protocol Field Compression? *\/$/;"	m	struct:lcp_options
neg_ssnhf	net/lwip/netif/ppp/lcp.h	/^    u_int neg_ssnhf         : 1; \/* Negotiate short sequence numbers *\/$/;"	m	struct:lcp_options
neg_upap	net/lwip/netif/ppp/lcp.h	/^    u_int neg_upap          : 1; \/* Ask for UPAP authentication? *\/$/;"	m	struct:lcp_options
neg_vj	net/lwip/netif/ppp/ipcp.h	/^  u_int   neg_vj        : 1; \/* Van Jacobson Compression? *\/$/;"	m	struct:ipcp_options
net_timer	net/serv.c	/^net_timer(uint64_t arg)$/;"	f	file:
netbuf	net/lwip/include/lwip/netbuf.h	/^struct netbuf {$/;"	s
netbuf	obj/net/ns.asm	/^netbuf *netbuf_new(void)$/;"	l
netbuf_alloc	net/lwip/api/netbuf.c	/^netbuf_alloc(struct netbuf *buf, u16_t size)$/;"	f
netbuf_chain	net/lwip/api/netbuf.c	/^netbuf_chain(struct netbuf *head, struct netbuf *tail)$/;"	f
netbuf_copy	net/lwip/include/lwip/netbuf.h	67;"	d
netbuf_copy_partial	net/lwip/include/lwip/netbuf.h	65;"	d
netbuf_data	net/lwip/api/netbuf.c	/^netbuf_data(struct netbuf *buf, void **dataptr, u16_t *len)$/;"	f
netbuf_delete	net/lwip/api/netbuf.c	/^netbuf_delete(struct netbuf *buf)$/;"	f
netbuf_first	net/lwip/api/netbuf.c	/^netbuf_first(struct netbuf *buf)$/;"	f
netbuf_free	net/lwip/api/netbuf.c	/^netbuf_free(struct netbuf *buf)$/;"	f
netbuf_fromaddr	net/lwip/include/lwip/netbuf.h	69;"	d
netbuf_fromport	net/lwip/include/lwip/netbuf.h	70;"	d
netbuf_len	net/lwip/include/lwip/netbuf.h	68;"	d
netbuf_new	net/lwip/api/netbuf.c	/^netbuf *netbuf_new(void)$/;"	f
netbuf_next	net/lwip/api/netbuf.c	/^netbuf_next(struct netbuf *buf)$/;"	f
netbuf_ref	net/lwip/api/netbuf.c	/^netbuf_ref(struct netbuf *buf, const void *dataptr, u16_t size)$/;"	f
netconn	net/lwip/include/lwip/api.h	/^struct netconn {$/;"	s
netconn_accept	net/lwip/api/api_lib.c	/^netconn_accept(struct netconn *conn)$/;"	f
netconn_addr	net/lwip/include/lwip/api.h	176;"	d
netconn_alloc	net/lwip/api/api_msg.c	/^netconn_alloc(enum netconn_type t, netconn_callback callback)$/;"	f
netconn_bind	net/lwip/api/api_lib.c	/^netconn_bind(struct netconn *conn, struct ip_addr *addr, u16_t port)$/;"	f
netconn_callback	net/lwip/include/lwip/api.h	/^typedef void (* netconn_callback)(struct netconn *, enum netconn_evt, u16_t len);$/;"	t
netconn_close	net/lwip/api/api_lib.c	/^netconn_close(struct netconn *conn)$/;"	f
netconn_connect	net/lwip/api/api_lib.c	/^netconn_connect(struct netconn *conn, struct ip_addr *addr, u16_t port)$/;"	f
netconn_delete	net/lwip/api/api_lib.c	/^netconn_delete(struct netconn *conn)$/;"	f
netconn_disconnect	net/lwip/api/api_lib.c	/^netconn_disconnect(struct netconn *conn)$/;"	f
netconn_err	net/lwip/include/lwip/api.h	208;"	d
netconn_evt	net/lwip/include/lwip/api.h	/^enum netconn_evt {$/;"	g
netconn_free	net/lwip/api/api_msg.c	/^netconn_free(struct netconn *conn)$/;"	f
netconn_getaddr	net/lwip/api/api_lib.c	/^netconn_getaddr(struct netconn *conn, struct ip_addr *addr, u16_t *port, u8_t local)$/;"	f
netconn_gethostbyname	net/lwip/api/api_lib.c	/^netconn_gethostbyname(const char *name, struct ip_addr *addr)$/;"	f
netconn_igmp	net/lwip/include/lwip/api.h	/^enum netconn_igmp {$/;"	g
netconn_join_leave_group	net/lwip/api/api_lib.c	/^netconn_join_leave_group(struct netconn *conn,$/;"	f
netconn_listen	net/lwip/include/lwip/api.h	186;"	d
netconn_listen_with_backlog	net/lwip/api/api_lib.c	/^netconn_listen_with_backlog(struct netconn *conn, u8_t backlog)$/;"	f
netconn_new	net/lwip/include/lwip/api.h	163;"	d
netconn_new_with_callback	net/lwip/include/lwip/api.h	164;"	d
netconn_new_with_proto_and_callback	net/lwip/api/api_lib.c	/^netconn_new_with_proto_and_callback(enum netconn_type t, u8_t proto, netconn_callback callback)$/;"	f
netconn_peer	net/lwip/include/lwip/api.h	175;"	d
netconn_recv	net/lwip/api/api_lib.c	/^netconn_recv(struct netconn *conn)$/;"	f
netconn_recv_bufsize	net/lwip/include/lwip/api.h	209;"	d
netconn_send	net/lwip/api/api_lib.c	/^netconn_send(struct netconn *conn, struct netbuf *buf)$/;"	f
netconn_sendto	net/lwip/api/api_lib.c	/^netconn_sendto(struct netconn *conn, struct netbuf *buf, struct ip_addr *addr, u16_t port)$/;"	f
netconn_state	net/lwip/include/lwip/api.h	/^enum netconn_state {$/;"	g
netconn_type	net/lwip/api/api_lib.c	/^netconn_type(struct netconn *conn)$/;"	f
netconn_type	net/lwip/include/lwip/api.h	/^enum netconn_type {$/;"	g
netconn_write	net/lwip/api/api_lib.c	/^netconn_write(struct netconn *conn, const void *dataptr, int size, u8_t apiflags)$/;"	f
netif	net/lwip/include/lwip/netif.h	/^struct netif {$/;"	s
netif	net/lwip/include/lwip/netifapi.h	/^  struct netif *netif;$/;"	m	struct:netifapi_msg_msg	typeref:struct:netifapi_msg_msg::netif
netif	net/lwip/include/lwip/tcpip.h	/^      struct netif *netif;$/;"	m	struct:tcpip_msg::__anon33::__anon34	typeref:struct:tcpip_msg::__anon33::__anon34::netif
netif	net/lwip/netif/etharp.c	/^  struct netif *netif;$/;"	m	struct:etharp_entry	typeref:struct:etharp_entry::netif	file:
netif	net/lwip/netif/ppp/ppp.c	/^  struct netif netif;$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::netif	file:
netif	obj/net/ns.asm	/^        netif = inp;$/;"	d
netif	obj/net/ns.asm	/^        netif = netif->next;$/;"	d
netif	obj/net/ns.asm	/^        netif = netif_list;$/;"	d
netif	obj/net/ns.asm	/^    netif = inp;$/;"	d
netif	obj/net/ns.asm	/^    netif = ip_route(&(pcb->remote_ip));$/;"	d
netif	obj/net/ns.asm	/^    netif = netif->next;$/;"	d
netif	obj/net/ns.asm	/^  netif = ip_route((ip_addr_ismulticast(dst_ip))?(&(pcb->multicast_ip)):(dst_ip));$/;"	d
netif	obj/net/ns.asm	/^  netif = ip_route(dst_ip);$/;"	d
netif_add	net/lwip/core/netif.c	/^netif_add(struct netif *netif, struct ip_addr *ipaddr, struct ip_addr *netmask,$/;"	f
netif_default	net/lwip/core/netif.c	/^struct netif *netif_default;$/;"	v	typeref:struct:netif
netif_default	obj/net/ns.asm	/^  netif_default = netif;$/;"	d
netif_find	net/lwip/core/netif.c	/^netif_find(char *name)$/;"	f
netif_init	net/lwip/include/lwip/netif.h	205;"	d
netif_is_link_up	net/lwip/core/netif.c	/^u8_t netif_is_link_up(struct netif *netif)$/;"	f
netif_is_up	net/lwip/core/netif.c	/^u8_t netif_is_up(struct netif *netif)$/;"	f
netif_list	net/lwip/core/netif.c	/^struct netif *netif_list;$/;"	v	typeref:struct:netif
netif_list	obj/net/ns.asm	/^    netif_list = netif->next;$/;"	d
netif_list	obj/net/ns.asm	/^  netif_list = netif;$/;"	d
netif_loop_output	net/lwip/core/netif.c	/^netif_loop_output(struct netif *netif, struct pbuf *p,$/;"	f
netif_poll	net/lwip/core/netif.c	/^netif_poll(struct netif *netif)$/;"	f
netif_poll_all	net/lwip/core/netif.c	/^netif_poll_all(void)$/;"	f
netif_remove	net/lwip/core/netif.c	/^void netif_remove(struct netif * netif)$/;"	f
netif_set_addr	net/lwip/core/netif.c	/^netif_set_addr(struct netif *netif, struct ip_addr *ipaddr, struct ip_addr *netmask,$/;"	f
netif_set_default	net/lwip/core/netif.c	/^netif_set_default(struct netif *netif)$/;"	f
netif_set_down	net/lwip/core/netif.c	/^void netif_set_down(struct netif *netif)$/;"	f
netif_set_gw	net/lwip/core/netif.c	/^netif_set_gw(struct netif *netif, struct ip_addr *gw)$/;"	f
netif_set_ipaddr	net/lwip/core/netif.c	/^netif_set_ipaddr(struct netif *netif, struct ip_addr *ipaddr)$/;"	f
netif_set_link_callback	net/lwip/core/netif.c	/^void netif_set_link_callback(struct netif *netif, void (* link_callback)(struct netif *netif ))$/;"	f
netif_set_link_down	net/lwip/core/netif.c	/^void netif_set_link_down(struct netif *netif )$/;"	f
netif_set_link_up	net/lwip/core/netif.c	/^void netif_set_link_up(struct netif *netif )$/;"	f
netif_set_netmask	net/lwip/core/netif.c	/^netif_set_netmask(struct netif *netif, struct ip_addr *netmask)$/;"	f
netif_set_status_callback	net/lwip/core/netif.c	/^void netif_set_status_callback(struct netif *netif, void (* status_callback)(struct netif *netif ))$/;"	f
netif_set_up	net/lwip/core/netif.c	/^void netif_set_up(struct netif *netif)$/;"	f
netifapi_autoip_start	net/lwip/include/lwip/netifapi.h	91;"	d
netifapi_autoip_stop	net/lwip/include/lwip/netifapi.h	92;"	d
netifapi_dhcp_start	net/lwip/include/lwip/netifapi.h	89;"	d
netifapi_dhcp_stop	net/lwip/include/lwip/netifapi.h	90;"	d
netifapi_msg	net/lwip/include/lwip/netifapi.h	/^struct netifapi_msg {$/;"	s
netifapi_msg_msg	net/lwip/include/lwip/netifapi.h	/^struct netifapi_msg_msg {$/;"	s
netifapi_netif_add	net/lwip/api/netifapi.c	/^netifapi_netif_add(struct netif *netif,$/;"	f
netifapi_netif_common	net/lwip/api/netifapi.c	/^netifapi_netif_common( struct netif *netif,$/;"	f
netifapi_netif_remove	net/lwip/include/lwip/netifapi.h	85;"	d
netifapi_netif_set_default	net/lwip/include/lwip/netifapi.h	88;"	d
netifapi_netif_set_down	net/lwip/include/lwip/netifapi.h	87;"	d
netifapi_netif_set_up	net/lwip/include/lwip/netifapi.h	86;"	d
netifapimsg	net/lwip/include/lwip/tcpip.h	/^    struct netifapi_msg *netifapimsg;$/;"	m	union:tcpip_msg::__anon33	typeref:struct:tcpip_msg::__anon33::netifapi_msg
netmask	net/lwip/include/lwip/netif.h	/^  struct ip_addr netmask;$/;"	m	struct:netif	typeref:struct:netif::ip_addr
netmask	net/lwip/include/lwip/netifapi.h	/^      struct ip_addr *netmask;$/;"	m	struct:netifapi_msg_msg::__anon20::__anon21	typeref:struct:netifapi_msg_msg::__anon20::__anon21::ip_addr
netmask	net/lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ppp_addrs::
network_phase	net/lwip/netif/ppp/auth.c	/^network_phase(int unit)$/;"	f	file:
newPage	obj/kern/kernel.asm	/^			newPage = page_alloc(0);$/;"	d
new_block_for_indirect	obj/fs/fs.asm	/^		new_block_for_indirect = 1;$/;"	d
new_entry	obj/net/ns.asm	/^        new_entry = memp_malloc(MEMP_ARP_QUEUE);$/;"	d
new_nblocks	obj/fs/fs.asm	/^	new_nblocks = (newsize + BLKSIZE - 1) \/ BLKSIZE;$/;"	d
new_tot_len	obj/net/ns.asm	/^        new_tot_len = (u16_t)(inseg.p->tot_len - off);$/;"	d
newconn	obj/net/ns.asm	/^    newconn = NULL;$/;"	d
newconn	obj/net/ns.asm	/^  newconn = netconn_accept(sock->conn);$/;"	d
newconn	obj/net/ns.asm	/^  newconn = netconn_alloc(conn->type, conn->callback);$/;"	d
newfd	obj/fs/fs.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/net/ns.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/net/testinput.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/net/testoutput.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/echosrv.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/echotest.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/forktree.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/hello.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/httpd.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/icode.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/idle.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/init.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/pingpong.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/primes.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testfile.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/testtime.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newfd	obj/user/writemotd.asm	/^	newfd = INDEX2FD(newfdnum);$/;"	d
newsize	obj/net/ns.asm	/^    newsize = MIN_SIZE_ALIGNED;$/;"	d
newsize	obj/net/ns.asm	/^  newsize = LWIP_MEM_ALIGN_SIZE(newsize);$/;"	d
newsock	obj/net/ns.asm	/^  newsock = alloc_socket(newconn);$/;"	d
next	net/lwip/api/sockets.c	/^  struct lwip_select_cb *next;$/;"	m	struct:lwip_select_cb	typeref:struct:lwip_select_cb::lwip_select_cb	file:
next	net/lwip/core/mem.c	/^  mem_size_t next;$/;"	m	struct:mem	file:
next	net/lwip/core/memp.c	/^  struct memp *next;$/;"	m	struct:memp	typeref:struct:memp::memp	file:
next	net/lwip/include/ipv4/lwip/igmp.h	/^  struct igmp_group *next;$/;"	m	struct:igmp_group	typeref:struct:igmp_group::igmp_group
next	net/lwip/include/ipv4/lwip/ip_frag.h	/^  struct ip_reassdata *next;$/;"	m	struct:ip_reassdata	typeref:struct:ip_reassdata::ip_reassdata
next	net/lwip/include/lwip/netif.h	/^  struct netif *next;$/;"	m	struct:netif	typeref:struct:netif::netif
next	net/lwip/include/lwip/pbuf.h	/^  struct pbuf *next;$/;"	m	struct:pbuf	typeref:struct:pbuf::pbuf
next	net/lwip/include/lwip/raw.h	/^  struct raw_pcb *next;$/;"	m	struct:raw_pcb	typeref:struct:raw_pcb::raw_pcb
next	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *next;$/;"	m	struct:snmp_varbind	typeref:struct:snmp_varbind::snmp_varbind
next	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_list_node *next;$/;"	m	struct:mib_list_node	typeref:struct:mib_list_node::mib_list_node
next	net/lwip/include/lwip/sys.h	/^  struct sys_timeo *next;$/;"	m	struct:sys_timeo	typeref:struct:sys_timeo::sys_timeo
next	net/lwip/include/lwip/sys.h	/^  struct sys_timeo *next;$/;"	m	struct:sys_timeouts	typeref:struct:sys_timeouts::sys_timeo
next	net/lwip/include/lwip/tcp.h	/^  struct tcp_seg *next;    \/* used when putting segements on a queue *\/$/;"	m	struct:tcp_seg	typeref:struct:tcp_seg::tcp_seg
next	net/lwip/include/lwip/udp.h	/^  struct udp_pcb *next;$/;"	m	struct:udp_pcb	typeref:struct:udp_pcb::udp_pcb
next	net/lwip/include/netif/etharp.h	/^  struct etharp_q_entry *next;$/;"	m	struct:etharp_q_entry	typeref:struct:etharp_q_entry::etharp_q_entry
next	net/lwip/netif/ppp/auth.c	/^  struct wordlist *next;$/;"	m	struct:wordlist	typeref:struct:wordlist::wordlist	file:
next	obj/net/ns.asm	/^                    next = cseg->next;$/;"	d
next	obj/net/ns.asm	/^        next = pcb->unacked;$/;"	d
next	obj/net/ns.asm	/^      next = pcb->unsent;$/;"	d
next	obj/net/ns.asm	/^    next = mem2->next;$/;"	d
next	obj/net/ns.asm	/^    next = seg->next;$/;"	d
next_i	net/serv.c	/^static int next_i(int i) { return (i+1) % QUEUE_SIZE; }$/;"	f	file:
next_pbuf	net/lwip/core/ipv4/ip_frag.c	/^  struct pbuf *next_pbuf;$/;"	m	struct:ip_reass_helper	typeref:struct:ip_reass_helper::pbuf	file:
nextfree	kern/pmap.c	/^static char *nextfree;$/;"	v	file:
nextfree	kern/pmap.c.BACKUP.24152.c	/^static char *nextfree;$/;"	v	file:
nextfree	kern/pmap.c.LOCAL.24152.c	/^static char *nextfree;$/;"	v	file:
nextfree	kern/pmap1.c	/^static char *nextfree;$/;"	v	file:
nextfree	obj/kern/kernel.asm	/^		nextfree = ROUNDUP((char *) end, PGSIZE);$/;"	d
nextfree	obj/kern/kernel.asm	/^	nextfree = ROUNDUP(nextfree + n, PGSIZE);$/;"	d
nexthdr	net/lwip/include/ipv6/lwip/ip.h	/^  u8_t nexthdr;             \/* next header *\/$/;"	m	struct:ip_hdr
nextq	net/lwip/jos/arch/sys_arch.c	/^    int head, nextq;$/;"	m	struct:sys_mbox_entry	file:
nfb	obj/net/ns.asm	/^  nfb = (mtu - IP_HLEN) \/ 8;$/;"	d
nif	net/serv.c	/^struct netif nif;$/;"	v	typeref:struct:netif
nmem	obj/net/ns.asm	/^  nmem = (struct mem *)&ram[mem->next];$/;"	d
node_stack	net/lwip/core/snmp/mib_structs.c	/^static struct nse node_stack[NODE_STACK_SIZE];$/;"	v	typeref:struct:nse	file:
node_stack_cnt	net/lwip/core/snmp/mib_structs.c	/^static u8_t node_stack_cnt;$/;"	v	file:
node_type	net/lwip/include/lwip/snmp_structs.h	/^  const u8_t node_type;$/;"	m	struct:mib_array_node
node_type	net/lwip/include/lwip/snmp_structs.h	/^  const u8_t node_type;$/;"	m	struct:mib_node
node_type	net/lwip/include/lwip/snmp_structs.h	/^  u8_t node_type;$/;"	m	struct:mib_external_node
node_type	net/lwip/include/lwip/snmp_structs.h	/^  u8_t node_type;$/;"	m	struct:mib_list_rootnode
node_type	net/lwip/include/lwip/snmp_structs.h	/^  u8_t node_type;$/;"	m	struct:mib_ram_array_node
noleafs_get_object_def	net/lwip/core/snmp/mib2.c	/^noleafs_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f
noleafs_get_value	net/lwip/core/snmp/mib2.c	/^noleafs_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f
noleafs_set_test	net/lwip/core/snmp/mib2.c	/^noleafs_set_test(struct obj_def *od, u16_t len, void *value)$/;"	f
noleafs_set_value	net/lwip/core/snmp/mib2.c	/^noleafs_set_value(struct obj_def *od, u16_t len, void *value)$/;"	f
normalmap	kern/console.c	/^static uint8_t normalmap[256] =$/;"	v	file:
now	obj/net/ns.asm	/^	now = sys_time_msec();$/;"	d
np_down	net/lwip/netif/ppp/auth.c	/^np_down(int unit, u16_t proto)$/;"	f
np_finished	net/lwip/netif/ppp/auth.c	/^np_finished(int unit, u16_t proto)$/;"	f
np_up	net/lwip/netif/ppp/auth.c	/^np_up(int unit, u16_t proto)$/;"	f
npages	kern/pmap.c	/^size_t npages;			\/\/ Amount of physical memory (in pages)$/;"	v
npages	kern/pmap.c.BACKUP.24152.c	/^size_t npages;			\/\/ Amount of physical memory (in pages)$/;"	v
npages	kern/pmap.c.BASE.24152.c	/^size_t npages;			\/\/ Amount of physical memory (in pages)$/;"	v
npages	kern/pmap.c.LOCAL.24152.c	/^size_t npages;			\/\/ Amount of physical memory (in pages)$/;"	v
npages	kern/pmap.c.REMOTE.24152.c	/^size_t npages;			\/\/ Amount of physical memory (in pages)$/;"	v
npages	kern/pmap1.c	/^size_t npages;			\/\/ Amount of physical memory (in pages)$/;"	v
npages	obj/kern/kernel.asm	/^		npages = (EXTPHYSMEM \/ PGSIZE) + npages_extmem;$/;"	d
npages	obj/kern/kernel.asm	/^		npages = npages_basemem;$/;"	d
npages_basemem	kern/pmap.c	/^static size_t npages_basemem;	\/\/ Amount of base memory (in pages)$/;"	v	file:
npages_basemem	kern/pmap.c.BACKUP.24152.c	/^static size_t npages_basemem;	\/\/ Amount of base memory (in pages)$/;"	v	file:
npages_basemem	kern/pmap.c.BASE.24152.c	/^static size_t npages_basemem;	\/\/ Amount of base memory (in pages)$/;"	v	file:
npages_basemem	kern/pmap.c.LOCAL.24152.c	/^static size_t npages_basemem;	\/\/ Amount of base memory (in pages)$/;"	v	file:
npages_basemem	kern/pmap.c.REMOTE.24152.c	/^static size_t npages_basemem;	\/\/ Amount of base memory (in pages)$/;"	v	file:
npages_basemem	kern/pmap1.c	/^static size_t npages_basemem;	\/\/ Amount of base memory (in pages)$/;"	v	file:
npages_basemem	obj/kern/kernel.asm	/^	npages_basemem = (nvram_read(NVRAM_BASELO) * 1024) \/ PGSIZE;$/;"	d
npages_extmem	obj/kern/kernel.asm	/^	npages_extmem = (nvram_read(NVRAM_EXTLO) * 1024) \/ PGSIZE;$/;"	d
npcb	obj/net/ns.asm	/^    npcb = tcp_alloc(pcb->prio);$/;"	d
npioctl	net/lwip/netif/ppp/ppp.c	/^struct npioctl {$/;"	s	file:
nptr	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_node **nptr;$/;"	m	struct:mib_ram_array_node	typeref:struct:mib_ram_array_node::mib_node
nptr	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_node *nptr;$/;"	m	struct:mib_list_node	typeref:struct:mib_list_node::mib_node
nptr	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_node* const *nptr;$/;"	m	struct:mib_array_node
nready	obj/net/ns.asm	/^    nready = lwip_selscan(maxfdp1, &lreadset, &lwriteset, &lexceptset);$/;"	d
nready	obj/net/ns.asm	/^  nready = lwip_selscan(maxfdp1, &lreadset, &lwriteset, &lexceptset);$/;"	d
nrtx	net/lwip/include/lwip/tcp.h	/^  u8_t nrtx;    \/* number of retransmissions *\/$/;"	m	struct:tcp_pcb
nse	net/lwip/core/snmp/mib_structs.c	/^struct nse$/;"	s	file:
nsenv	obj/fs/fs.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/net/ns.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/net/testinput.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/net/testoutput.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/echosrv.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/echotest.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/forktree.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/hello.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/httpd.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/icode.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/idle.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/init.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/pingpong.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/primes.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testfile.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/testtime.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsenv	obj/user/writemotd.asm	/^		nsenv = ipc_find_env(ENV_TYPE_NS);$/;"	d
nsipc	lib/nsipc.c	/^nsipc(unsigned type)$/;"	f	file:
nsipc_accept	lib/nsipc.c	/^nsipc_accept(int s, struct sockaddr *addr, socklen_t *addrlen)$/;"	f
nsipc_bind	lib/nsipc.c	/^nsipc_bind(int s, struct sockaddr *name, socklen_t namelen)$/;"	f
nsipc_close	lib/nsipc.c	/^nsipc_close(int s)$/;"	f
nsipc_connect	lib/nsipc.c	/^nsipc_connect(int s, const struct sockaddr *name, socklen_t namelen)$/;"	f
nsipc_listen	lib/nsipc.c	/^nsipc_listen(int s, int backlog)$/;"	f
nsipc_recv	lib/nsipc.c	/^nsipc_recv(int s, void *mem, int len, unsigned int flags)$/;"	f
nsipc_send	lib/nsipc.c	/^nsipc_send(int s, const void *buf, int size, unsigned int flags)$/;"	f
nsipc_shutdown	lib/nsipc.c	/^nsipc_shutdown(int s, int how)$/;"	f
nsipc_socket	lib/nsipc.c	/^nsipc_socket(int domain, int type, int protocol)$/;"	f
nsipcbuf	lib/nsipc.c	/^union Nsipc nsipcbuf __attribute__((aligned(PGSIZE)));$/;"	v	typeref:union:Nsipc
nsock	obj/net/ns.asm	/^  nsock = &sockets[newsock];$/;"	d
ntohl	net/lwip/core/ipv4/inet.c	/^ntohl(u32_t n)$/;"	f
ntohl	net/lwip/include/ipv4/lwip/inet.h	62;"	d
ntohl	net/lwip/include/ipv4/lwip/inet.h	73;"	d
ntohl	net/lwip/include/ipv4/lwip/inet.h	80;"	d
ntohl	net/lwip/include/ipv4/lwip/inet.h	86;"	d
ntohs	net/lwip/core/ipv4/inet.c	/^ntohs(u16_t n)$/;"	f
ntohs	net/lwip/include/ipv4/lwip/inet.h	59;"	d
ntohs	net/lwip/include/ipv4/lwip/inet.h	71;"	d
ntohs	net/lwip/include/ipv4/lwip/inet.h	78;"	d
ntohs	net/lwip/include/ipv4/lwip/inet.h	84;"	d
null_login	net/lwip/netif/ppp/auth.c	/^null_login(int unit)$/;"	f	file:
nullreturn	obj/net/ns.asm	/^nullreturn:$/;"	l
num	net/lwip/include/lwip/netif.h	/^  u8_t num;$/;"	m	struct:netif
num	obj/fs/fs.asm	/^				num = -(long long) num;$/;"	d
num	obj/fs/fs.asm	/^			num = (unsigned long long)$/;"	d
num	obj/fs/fs.asm	/^			num = getint(&aq, lflag);$/;"	d
num	obj/fs/fs.asm	/^			num = getuint(&aq, lflag);$/;"	d
num	obj/kern/kernel.asm	/^				num = -(long long) num;$/;"	d
num	obj/kern/kernel.asm	/^			num = (unsigned long long)$/;"	d
num	obj/kern/kernel.asm	/^			num = getint(&aq, lflag);$/;"	d
num	obj/kern/kernel.asm	/^			num = getuint(&aq, lflag);$/;"	d
num	obj/net/ns.asm	/^				num = -(long long) num;$/;"	d
num	obj/net/ns.asm	/^			num = (unsigned long long)$/;"	d
num	obj/net/ns.asm	/^			num = getint(&aq, lflag);$/;"	d
num	obj/net/ns.asm	/^			num = getuint(&aq, lflag);$/;"	d
num	obj/net/ns.asm	/^  num = name[2] - '0';$/;"	d
num	obj/net/testinput.asm	/^				num = -(long long) num;$/;"	d
num	obj/net/testinput.asm	/^			num = (unsigned long long)$/;"	d
num	obj/net/testinput.asm	/^			num = getint(&aq, lflag);$/;"	d
num	obj/net/testinput.asm	/^			num = getuint(&aq, lflag);$/;"	d
num	obj/net/testoutput.asm	/^				num = -(long long) num;$/;"	d
num	obj/net/testoutput.asm	/^			num = (unsigned long long)$/;"	d
num	obj/net/testoutput.asm	/^			num = getint(&aq, lflag);$/;"	d
num	obj/net/testoutput.asm	/^			num = getuint(&aq, lflag);$/;"	d
num	obj/user/echosrv.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/echosrv.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/echosrv.asm	/^			num = getint(&aq, lflag);$/;"	d
num	obj/user/echosrv.asm	/^			num = getuint(&aq, lflag);$/;"	d
num	obj/user/echotest.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/echotest.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/echotest.asm	/^			num = getint(&aq, lflag);$/;"	d
num	obj/user/echotest.asm	/^			num = getuint(&aq, lflag);$/;"	d
num	obj/user/forktree.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/forktree.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/forktree.asm	/^			num = getint(&aq, lflag);$/;"	d
num	obj/user/forktree.asm	/^			num = getuint(&aq, lflag);$/;"	d
num	obj/user/hello.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/hello.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/hello.asm	/^			num = getint(&aq, lflag);$/;"	d
num	obj/user/hello.asm	/^			num = getuint(&aq, lflag);$/;"	d
num	obj/user/httpd.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/httpd.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/httpd.asm	/^			num = getint(&aq, lflag);$/;"	d
num	obj/user/httpd.asm	/^			num = getuint(&aq, lflag);$/;"	d
num	obj/user/icode.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/icode.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/icode.asm	/^			num = getint(&aq, lflag);$/;"	d
num	obj/user/icode.asm	/^			num = getuint(&aq, lflag);$/;"	d
num	obj/user/idle.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/idle.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/idle.asm	/^			num = getint(&aq, lflag);$/;"	d
num	obj/user/idle.asm	/^			num = getuint(&aq, lflag);$/;"	d
num	obj/user/init.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/init.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/init.asm	/^			num = getint(&aq, lflag);$/;"	d
num	obj/user/init.asm	/^			num = getuint(&aq, lflag);$/;"	d
num	obj/user/pingpong.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/pingpong.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/pingpong.asm	/^			num = getint(&aq, lflag);$/;"	d
num	obj/user/pingpong.asm	/^			num = getuint(&aq, lflag);$/;"	d
num	obj/user/primes.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/primes.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/primes.asm	/^			num = getint(&aq, lflag);$/;"	d
num	obj/user/primes.asm	/^			num = getuint(&aq, lflag);$/;"	d
num	obj/user/testfile.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testfile.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testfile.asm	/^			num = getint(&aq, lflag);$/;"	d
num	obj/user/testfile.asm	/^			num = getuint(&aq, lflag);$/;"	d
num	obj/user/testtime.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/testtime.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/testtime.asm	/^			num = getint(&aq, lflag);$/;"	d
num	obj/user/testtime.asm	/^			num = getuint(&aq, lflag);$/;"	d
num	obj/user/writemotd.asm	/^				num = -(long long) num;$/;"	d
num	obj/user/writemotd.asm	/^			num = (unsigned long long)$/;"	d
num	obj/user/writemotd.asm	/^			num = getint(&aq, lflag);$/;"	d
num	obj/user/writemotd.asm	/^			num = getuint(&aq, lflag);$/;"	d
num_np_open	net/lwip/netif/ppp/auth.c	/^static int num_np_open;$/;"	v	file:
num_np_up	net/lwip/netif/ppp/auth.c	/^static int num_np_up;$/;"	v	file:
numanswers	net/lwip/core/dns.c	/^  u16_t numanswers;$/;"	m	struct:dns_hdr	file:
numauthrr	net/lwip/core/dns.c	/^  u16_t numauthrr;$/;"	m	struct:dns_hdr	file:
number	obj/fs/fs.asm	/^		number:$/;"	l
number	obj/kern/kernel.asm	/^		number:$/;"	l
number	obj/net/ns.asm	/^		number:$/;"	l
number	obj/net/testinput.asm	/^		number:$/;"	l
number	obj/net/testoutput.asm	/^		number:$/;"	l
number	obj/user/echosrv.asm	/^		number:$/;"	l
number	obj/user/echotest.asm	/^		number:$/;"	l
number	obj/user/forktree.asm	/^		number:$/;"	l
number	obj/user/hello.asm	/^		number:$/;"	l
number	obj/user/httpd.asm	/^		number:$/;"	l
number	obj/user/icode.asm	/^		number:$/;"	l
number	obj/user/idle.asm	/^		number:$/;"	l
number	obj/user/init.asm	/^		number:$/;"	l
number	obj/user/pingpong.asm	/^		number:$/;"	l
number	obj/user/primes.asm	/^		number:$/;"	l
number	obj/user/testfile.asm	/^		number:$/;"	l
number	obj/user/testtime.asm	/^		number:$/;"	l
number	obj/user/writemotd.asm	/^		number:$/;"	l
numdns	net/lwip/core/dns.c	/^  u8_t  numdns;$/;"	m	struct:dns_table_entry	file:
numextrarr	net/lwip/core/dns.c	/^  u16_t numextrarr;$/;"	m	struct:dns_hdr	file:
numloops	net/lwip/netif/ppp/lcp.h	/^    int numloops;                \/* Number of loops during magic number neg. *\/$/;"	m	struct:lcp_options
numquestions	net/lwip/core/dns.c	/^  u16_t numquestions;$/;"	m	struct:dns_hdr	file:
nva	obj/fs/fs.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/net/ns.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/net/testinput.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/net/testoutput.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/echosrv.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/echotest.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/forktree.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/hello.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/httpd.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/icode.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/idle.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/init.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/pingpong.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/primes.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testfile.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/testtime.asm	/^	nva = fd2data(newfd);$/;"	d
nva	obj/user/writemotd.asm	/^	nva = fd2data(newfd);$/;"	d
nvram_read	kern/pmap.c	/^nvram_read(int r)$/;"	f	file:
nvram_read	kern/pmap.c.BACKUP.24152.c	/^nvram_read(int r)$/;"	f	file:
nvram_read	kern/pmap.c.BASE.24152.c	/^nvram_read(int r)$/;"	f	file:
nvram_read	kern/pmap.c.LOCAL.24152.c	/^nvram_read(int r)$/;"	f	file:
nvram_read	kern/pmap.c.REMOTE.24152.c	/^nvram_read(int r)$/;"	f	file:
nvram_read	kern/pmap1.c	/^nvram_read(int r)$/;"	f	file:
nwrap	obj/net/ns.asm	/^	nwrap = 0;$/;"	d
nwrap	obj/user/httpd.asm	/^	nwrap = 0;$/;"	d
o	obj/fs/fs.asm	/^	o = &opentab[fileid % MAXOPEN];$/;"	d
o_fd	fs/serv.c	/^	struct Fd *o_fd;	\/\/ Fd page$/;"	m	struct:OpenFile	typeref:struct:OpenFile::Fd	file:
o_file	fs/serv.c	/^	struct File *o_file;	\/\/ mapped descriptor for open file$/;"	m	struct:OpenFile	typeref:struct:OpenFile::File	file:
o_fileid	fs/serv.c	/^	uint32_t o_fileid;	\/\/ file id$/;"	m	struct:OpenFile	file:
o_mode	fs/serv.c	/^	int o_mode;		\/\/ open mode$/;"	m	struct:OpenFile	file:
obj_def	net/lwip/include/lwip/snmp_structs.h	/^struct obj_def$/;"	s
objectidncpy	net/lwip/core/snmp/mib2.c	/^void objectidncpy(s32_t *dst, s32_t *src, u8_t n)$/;"	f
objid	net/lwip/include/lwip/snmp_structs.h	/^  const s32_t *objid;$/;"	m	struct:mib_array_node
objid	net/lwip/include/lwip/snmp_structs.h	/^  s32_t *objid;$/;"	m	struct:mib_ram_array_node
objid	net/lwip/include/lwip/snmp_structs.h	/^  s32_t objid;$/;"	m	struct:mib_list_node
ocstrncpy	net/lwip/core/snmp/mib2.c	/^void ocstrncpy(u8_t *dst, u8_t *src, u8_t n)$/;"	f
octetptr	obj/net/ns.asm	/^  octetptr = (u8_t*)dataptr;$/;"	d
oemlength	kern/mpconfig.c	/^	uint16_t oemlength;             \/\/ OEM table length$/;"	m	struct:mpconf	file:
oemtable	kern/mpconfig.c	/^	uint32_t oemtable;            \/\/ OEM table pointer$/;"	m	struct:mpconf	file:
off	obj/net/ns.asm	/^      off = pcb->rcv_nxt - seqno;$/;"	d
off_t	fs/fsformat.c	/^typedef uint32_t off_t;$/;"	t	file:
off_t	fs/fsformat.c	20;"	d	file:
off_t	fs/fsformat.c	6;"	d	file:
off_t	inc/types.h	/^typedef int32_t off_t;$/;"	t
offered_bc_addr	net/lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_bc_addr;$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr
offered_dns_addr	net/lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_dns_addr[DHCP_MAX_DNS]; \/* DNS server addresses *\/$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr
offered_gw_addr	net/lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_gw_addr;$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr
offered_ip_addr	net/lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_ip_addr;$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr
offered_sn_mask	net/lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_sn_mask;$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr
offered_t0_lease	net/lwip/include/lwip/dhcp.h	/^  u32_t offered_t0_lease; \/* lease period (in seconds) *\/$/;"	m	struct:dhcp
offered_t1_renew	net/lwip/include/lwip/dhcp.h	/^  u32_t offered_t1_renew; \/* recommended renew time (usually 50% of lease period) *\/$/;"	m	struct:dhcp
offered_t2_rebind	net/lwip/include/lwip/dhcp.h	/^  u32_t offered_t2_rebind; \/* recommended rebind time (usually 66% of lease period)  *\/$/;"	m	struct:dhcp
offset	obj/boot1/boot.asm	/^	offset = (offset \/ SECTSIZE) + 3;$/;"	d
offset	obj/net/ns.asm	/^      offset = 0;$/;"	d
offset	obj/net/ns.asm	/^  offset = (ntohs(IPH_OFFSET(fraghdr)) & IP_OFFMASK) * 8;$/;"	d
offset	obj/net/ns.asm	/^  offset = 0;$/;"	d
offset_from	obj/net/ns.asm	/^      offset_from = 0;$/;"	d
offset_to	obj/net/ns.asm	/^      offset_to = 0;$/;"	d
offsetof	inc/types.h	71;"	d
ofo	obj/net/ns.asm	/^  ofo = tmp & IP_OFFMASK;$/;"	d
old_addrs	net/lwip/netif/ppp/ipcp.h	/^  u_int   old_addrs     : 1; \/* Use old (IP-Addresses) option? *\/$/;"	m	struct:ipcp_options
old_cwnd	obj/net/ns.asm	/^        old_cwnd = pcb->cwnd;$/;"	d
old_nblocks	obj/fs/fs.asm	/^	old_nblocks = (f->f_size + BLKSIZE - 1) \/ BLKSIZE;$/;"	d
old_pending	obj/net/ns.asm	/^          old_pending = i;$/;"	d
old_queue	obj/net/ns.asm	/^          old_queue = i;$/;"	d
old_stable	obj/net/ns.asm	/^        old_stable = i;$/;"	d
old_vj	net/lwip/netif/ppp/ipcp.h	/^  u_int   old_vj        : 1; \/* use old (short) form of VJ option? *\/$/;"	m	struct:ipcp_options
oldest	obj/net/ns.asm	/^          oldest = r;$/;"	d
oldest	obj/net/ns.asm	/^    oldest = NULL;$/;"	d
olen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t olen;$/;"	m	struct:snmp_varbind
olenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t olenlen;$/;"	m	struct:snmp_varbind
omf	obj/net/ns.asm	/^  omf = tmp & IP_MF;$/;"	d
ooseq	net/lwip/include/lwip/tcp.h	/^  struct tcp_seg *ooseq;    \/* Received out of sequence segments. *\/$/;"	m	struct:tcp_pcb	typeref:struct:tcp_pcb::tcp_seg
op_completed	net/lwip/include/lwip/api.h	/^  sys_sem_t op_completed;$/;"	m	struct:netconn
open	inc/fs.h	/^	} open;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_open
open	lib/file.c	/^open(const char *path, int mode)$/;"	f
open	net/lwip/netif/ppp/ppp.h	/^    void (*open) (int unit);$/;"	m	struct:protent
openFlag	net/lwip/netif/ppp/ppp.c	/^  char openFlag;                \/* True when in use. *\/$/;"	m	struct:PPPControl_s	file:
opendisk	fs/fsformat.c	/^opendisk(const char *name)$/;"	f
openfile_alloc	fs/serv.c	/^openfile_alloc(struct OpenFile **o)$/;"	f
openfile_lookup	fs/serv.c	/^openfile_lookup(envid_t envid, uint32_t fileid, struct OpenFile **po)$/;"	f
opentab	fs/serv.c	/^struct OpenFile opentab[MAXOPEN] = {$/;"	v	typeref:struct:OpenFile
opt	obj/net/ns.asm	/^      opt = opts[c];$/;"	d
optdata	obj/net/ns.asm	/^    optdata = TCP_BUILD_MSS_OPTION();$/;"	d
optdata	obj/net/ns.asm	/^  optdata = TCP_BUILD_MSS_OPTION();$/;"	d
opterr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER opterr;           \/* Error in options. *\/$/;"	m	struct:stats_proto
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_BROADCAST);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_DNS_SERVER);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_LEASE_TIME);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_ROUTER);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_SUBNET_MASK);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_T1);$/;"	d
option_ptr	obj/net/ns.asm	/^  option_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_T2);$/;"	d
options	obj/net/ns.asm	/^        options = (u8_t *)&dhcp->msg_in->file;$/;"	d
options	obj/net/ns.asm	/^        options = (u8_t *)&dhcp->msg_in->sname;$/;"	d
options_in	net/lwip/include/lwip/dhcp.h	/^  struct dhcp_msg *options_in; $/;"	m	struct:dhcp	typeref:struct:dhcp::dhcp_msg
options_in_len	net/lwip/include/lwip/dhcp.h	/^  u16_t options_in_len;$/;"	m	struct:dhcp
options_out_len	net/lwip/include/lwip/dhcp.h	/^  u16_t options_out_len; \/* outgoing msg options length *\/$/;"	m	struct:dhcp
options_ptr	obj/net/ns.asm	/^  options_ptr = dhcp_get_option_ptr(dhcp, DHCP_OPTION_MESSAGE_TYPE);$/;"	d
optlen	net/lwip/api/sockets.c	/^  socklen_t *optlen;$/;"	m	struct:lwip_setgetsockopt_data	file:
optname	net/lwip/api/sockets.c	/^  int optname;$/;"	m	struct:lwip_setgetsockopt_data	file:
optname	obj/net/ns.asm	/^  optname = data->optname;$/;"	d
opts	obj/net/ns.asm	/^  opts = (u8_t *)tcphdr + TCP_HLEN;$/;"	d
optval	net/lwip/api/sockets.c	/^  void *optval;$/;"	m	struct:lwip_setgetsockopt_data	file:
optval	obj/net/ns.asm	/^  optval = data->optval;$/;"	d
original_iphdr	obj/net/ns.asm	/^  original_iphdr = p->payload;$/;"	d
os	grade-lab6	/^import os, re, threading, socket, time, urllib2, shutil, struct, difflib$/;"	i
os	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
other_datagrams	obj/net/ns.asm	/^    other_datagrams = 0;$/;"	d
our_ipaddr	net/lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ppp_addrs::ip_addr
our_name	net/lwip/netif/ppp/ppp.h	/^  char our_name   [MAXNAMELEN   + 1]; \/* Our name for authentication purposes *\/$/;"	m	struct:ppp_settings
ouraddr	net/lwip/netif/ppp/ipcp.h	/^  u32_t   ouraddr, hisaddr;  \/* Addresses in NETWORK BYTE ORDER *\/$/;"	m	struct:ipcp_options
out	obj/net/ns.asm	/^out:$/;"	l
out	obj/net/testinput.asm	/^			out = buf + snprintf(buf, end - buf,$/;"	d
outACCM	net/lwip/netif/ppp/ppp.c	/^  ext_accm outACCM;             \/* Async-Ctl-Char-Map for output. *\/$/;"	m	struct:PPPControl_s	file:
outb	inc/x86.h	/^outb(int port, uint8_t data)$/;"	f
outif	obj/net/ns.asm	/^  outif = ip_route(addr);$/;"	d
outl	inc/x86.h	/^outl(int port, uint32_t data)$/;"	f
outpacket_buf	net/lwip/netif/ppp/ppp.c	/^u_char *outpacket_buf[NUM_PPP];  $/;"	v
output	net/lwip/include/lwip/netif.h	/^  err_t (* output)(struct netif *netif, struct pbuf *p,$/;"	m	struct:netif
output	net/output.c	/^output(envid_t ns_envid)$/;"	f
output_envid	net/serv.c	/^static envid_t output_envid;$/;"	v	file:
output_envid	net/testinput.c	/^static envid_t output_envid;$/;"	v	file:
output_envid	net/testoutput.c	/^static envid_t output_envid;$/;"	v	file:
output_envid	obj/net/ns.asm	/^	output_envid = fork();$/;"	d
output_envid	obj/net/ns.asm	/^    output_envid = (envid_t *)netif->state;$/;"	d
output_envid	obj/net/testinput.asm	/^	output_envid = fork();$/;"	d
output_envid	obj/net/testoutput.asm	/^	output_envid = fork();$/;"	d
outsb	inc/x86.h	/^outsb(int port, const void *addr, int cnt)$/;"	f
outsl	inc/x86.h	/^outsl(int port, const void *addr, int cnt)$/;"	f
outsw	inc/x86.h	/^outsw(int port, const void *addr, int cnt)$/;"	f
outvb	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind_root outvb;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_varbind_root
outvb	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind_root outvb;$/;"	m	struct:snmp_msg_trap	typeref:struct:snmp_msg_trap::snmp_varbind_root
outw	inc/x86.h	/^outw(int port, uint16_t data)$/;"	f
ova	obj/fs/fs.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/net/ns.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/net/testinput.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/net/testoutput.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/echosrv.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/echotest.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/forktree.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/hello.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/httpd.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/icode.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/idle.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/init.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/pingpong.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/primes.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testfile.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/testtime.asm	/^	ova = fd2data(oldfd);$/;"	d
ova	obj/user/writemotd.asm	/^	ova = fd2data(oldfd);$/;"	d
overload	obj/net/ns.asm	/^        overload = options[offset++];$/;"	d
p	net/lwip/include/ipv4/lwip/ip_frag.h	/^  struct pbuf *p;$/;"	m	struct:ip_reassdata	typeref:struct:ip_reassdata::pbuf
p	net/lwip/include/lwip/dhcp.h	/^  struct pbuf *p;$/;"	m	struct:dhcp	typeref:struct:dhcp::pbuf
p	net/lwip/include/lwip/netbuf.h	/^  struct pbuf *p, *ptr;$/;"	m	struct:netbuf	typeref:struct:netbuf::pbuf
p	net/lwip/include/lwip/tcp.h	/^  struct pbuf *p;          \/* buffer containing data + TCP header *\/$/;"	m	struct:tcp_seg	typeref:struct:tcp_seg::pbuf
p	net/lwip/include/lwip/tcpip.h	/^      struct pbuf *p;$/;"	m	struct:tcpip_msg::__anon33::__anon34	typeref:struct:tcpip_msg::__anon33::__anon34::pbuf
p	net/lwip/include/netif/etharp.h	/^  struct pbuf *p;$/;"	m	struct:etharp_q_entry	typeref:struct:etharp_q_entry::pbuf
p	obj/fs/fs.asm	/^				p = "(null)";$/;"	d
p	obj/fs/fs.asm	/^		p = path;$/;"	d
p	obj/kern/kernel.asm	/^				p = "(null)";$/;"	d
p	obj/kern/kernel.asm	/^		p = *(uint16_t *) (bda + 0x13) * 1024;$/;"	d
p	obj/net/ns.asm	/^				p = "(null)";$/;"	d
p	obj/net/ns.asm	/^	p = sys_time_msec();$/;"	d
p	obj/net/ns.asm	/^            p = NULL;$/;"	d
p	obj/net/ns.asm	/^          p = NULL;$/;"	d
p	obj/net/ns.asm	/^          p = p->next;$/;"	d
p	obj/net/ns.asm	/^        p = NULL;$/;"	d
p	obj/net/ns.asm	/^        p = p->next;$/;"	d
p	obj/net/ns.asm	/^        p = pbuf_alloc(PBUF_RAW, p->tot_len, PBUF_RAM);$/;"	d
p	obj/net/ns.asm	/^        p = q;$/;"	d
p	obj/net/ns.asm	/^      p = NULL;$/;"	d
p	obj/net/ns.asm	/^      p = inseg.p;$/;"	d
p	obj/net/ns.asm	/^      p = memp_malloc(MEMP_PBUF_POOL);$/;"	d
p	obj/net/ns.asm	/^      p = q;$/;"	d
p	obj/net/ns.asm	/^      p = r;$/;"	d
p	obj/net/ns.asm	/^    p = (struct pbuf*)mem_malloc(LWIP_MEM_ALIGN_SIZE(SIZEOF_STRUCT_PBUF + offset) + LWIP_MEM_ALIGN_SIZE(length));$/;"	d
p	obj/net/ns.asm	/^    p = ip_reass(p);$/;"	d
p	obj/net/ns.asm	/^    p = ipr->p;$/;"	d
p	obj/net/ns.asm	/^    p = iprh->next_pbuf;$/;"	d
p	obj/net/ns.asm	/^    p = low_level_input(va);$/;"	d
p	obj/net/ns.asm	/^    p = memp_malloc(MEMP_PBUF);$/;"	d
p	obj/net/ns.asm	/^    p = p->next;$/;"	d
p	obj/net/ns.asm	/^    p = pbuf_alloc(PBUF_IP, TCP_HLEN, PBUF_RAM);$/;"	d
p	obj/net/ns.asm	/^    p = q->p;$/;"	d
p	obj/net/ns.asm	/^  p = NULL;$/;"	d
p	obj/net/ns.asm	/^  p = ipr->p;$/;"	d
p	obj/net/ns.asm	/^  p = mem_malloc(count * size);$/;"	d
p	obj/net/ns.asm	/^  p = pbuf_alloc(PBUF_IP, TCP_HLEN + 1, PBUF_RAM);$/;"	d
p	obj/net/ns.asm	/^  p = pbuf_alloc(PBUF_IP, TCP_HLEN, PBUF_RAM);$/;"	d
p	obj/net/ns.asm	/^  p = pbuf_alloc(PBUF_LINK, sizeof(struct etharp_hdr), PBUF_RAM);$/;"	d
p	obj/net/testinput.asm	/^				p = "(null)";$/;"	d
p	obj/net/testoutput.asm	/^				p = "(null)";$/;"	d
p	obj/user/echosrv.asm	/^				p = "(null)";$/;"	d
p	obj/user/echotest.asm	/^				p = "(null)";$/;"	d
p	obj/user/forktree.asm	/^				p = "(null)";$/;"	d
p	obj/user/hello.asm	/^				p = "(null)";$/;"	d
p	obj/user/httpd.asm	/^				p = "(null)";$/;"	d
p	obj/user/icode.asm	/^				p = "(null)";$/;"	d
p	obj/user/idle.asm	/^				p = "(null)";$/;"	d
p	obj/user/init.asm	/^				p = "(null)";$/;"	d
p	obj/user/pingpong.asm	/^				p = "(null)";$/;"	d
p	obj/user/primes.asm	/^				p = "(null)";$/;"	d
p	obj/user/primes.asm	/^	p = ipc_recv(&envid, 0, 0);$/;"	d
p	obj/user/testfile.asm	/^				p = "(null)";$/;"	d
p	obj/user/testtime.asm	/^				p = "(null)";$/;"	d
p	obj/user/writemotd.asm	/^				p = "(null)";$/;"	d
p_align	inc/elf.h	/^	uint64_t p_align;$/;"	m	struct:Proghdr
p_filesz	inc/elf.h	/^	uint64_t p_filesz;$/;"	m	struct:Proghdr
p_flags	inc/elf.h	/^    uint32_t p_flags;$/;"	m	struct:Proghdr
p_from	obj/net/ns.asm	/^      p_from = p_from->next;$/;"	d
p_memsz	inc/elf.h	/^	uint64_t p_memsz;$/;"	m	struct:Proghdr
p_offset	inc/elf.h	/^	uint64_t p_offset;$/;"	m	struct:Proghdr
p_out	net/lwip/include/lwip/dhcp.h	/^  struct pbuf *p_out; \/* pbuf of outcoming msg *\/$/;"	m	struct:dhcp	typeref:struct:dhcp::pbuf
p_pa	inc/elf.h	/^	uint64_t p_pa;$/;"	m	struct:Proghdr
p_sock	obj/net/ns.asm	/^      p_sock = get_socket(i);$/;"	d
p_to	obj/net/ns.asm	/^      p_to = p_to->next;$/;"	d
p_type	inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr
p_va	inc/elf.h	/^	uint64_t p_va;$/;"	m	struct:Proghdr
pa	obj/kern/kernel.asm	/^			pa = PTE_ADDR(env_pgdir[pdeno]);$/;"	d
pa	obj/kern/kernel.asm	/^		pa = PTE_ADDR(env_pdpe[pdpe_index]);$/;"	d
pa	obj/kern/kernel.asm	/^	pa = e->env_cr3;$/;"	d
pa2page	kern/pmap.h	/^pa2page(physaddr_t pa)$/;"	f
padc	obj/fs/fs.asm	/^			padc = '-';$/;"	d
padc	obj/fs/fs.asm	/^			padc = '0';$/;"	d
padc	obj/fs/fs.asm	/^		padc = ' ';$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '-';$/;"	d
padc	obj/kern/kernel.asm	/^			padc = '0';$/;"	d
padc	obj/kern/kernel.asm	/^		padc = ' ';$/;"	d
padc	obj/net/ns.asm	/^			padc = '-';$/;"	d
padc	obj/net/ns.asm	/^			padc = '0';$/;"	d
padc	obj/net/ns.asm	/^		padc = ' ';$/;"	d
padc	obj/net/testinput.asm	/^			padc = '-';$/;"	d
padc	obj/net/testinput.asm	/^			padc = '0';$/;"	d
padc	obj/net/testinput.asm	/^		padc = ' ';$/;"	d
padc	obj/net/testoutput.asm	/^			padc = '-';$/;"	d
padc	obj/net/testoutput.asm	/^			padc = '0';$/;"	d
padc	obj/net/testoutput.asm	/^		padc = ' ';$/;"	d
padc	obj/user/echosrv.asm	/^			padc = '-';$/;"	d
padc	obj/user/echosrv.asm	/^			padc = '0';$/;"	d
padc	obj/user/echosrv.asm	/^		padc = ' ';$/;"	d
padc	obj/user/echotest.asm	/^			padc = '-';$/;"	d
padc	obj/user/echotest.asm	/^			padc = '0';$/;"	d
padc	obj/user/echotest.asm	/^		padc = ' ';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '-';$/;"	d
padc	obj/user/forktree.asm	/^			padc = '0';$/;"	d
padc	obj/user/forktree.asm	/^		padc = ' ';$/;"	d
padc	obj/user/hello.asm	/^			padc = '-';$/;"	d
padc	obj/user/hello.asm	/^			padc = '0';$/;"	d
padc	obj/user/hello.asm	/^		padc = ' ';$/;"	d
padc	obj/user/httpd.asm	/^			padc = '-';$/;"	d
padc	obj/user/httpd.asm	/^			padc = '0';$/;"	d
padc	obj/user/httpd.asm	/^		padc = ' ';$/;"	d
padc	obj/user/icode.asm	/^			padc = '-';$/;"	d
padc	obj/user/icode.asm	/^			padc = '0';$/;"	d
padc	obj/user/icode.asm	/^		padc = ' ';$/;"	d
padc	obj/user/idle.asm	/^			padc = '-';$/;"	d
padc	obj/user/idle.asm	/^			padc = '0';$/;"	d
padc	obj/user/idle.asm	/^		padc = ' ';$/;"	d
padc	obj/user/init.asm	/^			padc = '-';$/;"	d
padc	obj/user/init.asm	/^			padc = '0';$/;"	d
padc	obj/user/init.asm	/^		padc = ' ';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '-';$/;"	d
padc	obj/user/pingpong.asm	/^			padc = '0';$/;"	d
padc	obj/user/pingpong.asm	/^		padc = ' ';$/;"	d
padc	obj/user/primes.asm	/^			padc = '-';$/;"	d
padc	obj/user/primes.asm	/^			padc = '0';$/;"	d
padc	obj/user/primes.asm	/^		padc = ' ';$/;"	d
padc	obj/user/testfile.asm	/^			padc = '-';$/;"	d
padc	obj/user/testfile.asm	/^			padc = '0';$/;"	d
padc	obj/user/testfile.asm	/^		padc = ' ';$/;"	d
padc	obj/user/testtime.asm	/^			padc = '-';$/;"	d
padc	obj/user/testtime.asm	/^			padc = '0';$/;"	d
padc	obj/user/testtime.asm	/^		padc = ' ';$/;"	d
padc	obj/user/writemotd.asm	/^			padc = '-';$/;"	d
padc	obj/user/writemotd.asm	/^			padc = '0';$/;"	d
padc	obj/user/writemotd.asm	/^		padc = ' ';$/;"	d
page2kva	kern/pmap.h	/^page2kva(struct Page *pp)$/;"	f
page2pa	kern/pmap.h	/^page2pa(struct Page *pp)$/;"	f
page2ppn	kern/pmap.h	/^page2ppn(struct Page *pp)$/;"	f
page_alloc	kern/pmap.c	/^page_alloc(int alloc_flags)$/;"	f
page_alloc	kern/pmap.c.BACKUP.24152.c	/^page_alloc(int alloc_flags)$/;"	f
page_alloc	kern/pmap.c.BASE.24152.c	/^page_alloc(int alloc_flags)$/;"	f
page_alloc	kern/pmap.c.LOCAL.24152.c	/^page_alloc(int alloc_flags)$/;"	f
page_alloc	kern/pmap.c.REMOTE.24152.c	/^page_alloc(int alloc_flags)$/;"	f
page_alloc	kern/pmap1.c	/^page_alloc(int alloc_flags)$/;"	f
page_check	kern/pmap.c	/^page_check(void)$/;"	f	file:
page_check	kern/pmap.c.BACKUP.24152.c	/^page_check(void)$/;"	f	file:
page_check	kern/pmap.c.BASE.24152.c	/^page_check(void)$/;"	f	file:
page_check	kern/pmap.c.LOCAL.24152.c	/^page_check(void)$/;"	f	file:
page_check	kern/pmap.c.REMOTE.24152.c	/^page_check(void)$/;"	f	file:
page_check	kern/pmap1.c	/^page_check(void)$/;"	f	file:
page_decref	kern/pmap.c	/^page_decref(struct Page* pp)$/;"	f
page_decref	kern/pmap.c.BACKUP.24152.c	/^page_decref(struct Page* pp)$/;"	f
page_decref	kern/pmap.c.BASE.24152.c	/^page_decref(struct Page* pp)$/;"	f
page_decref	kern/pmap.c.LOCAL.24152.c	/^page_decref(struct Page* pp)$/;"	f
page_decref	kern/pmap.c.REMOTE.24152.c	/^page_decref(struct Page* pp)$/;"	f
page_decref	kern/pmap1.c	/^page_decref(struct Page* pp)$/;"	f
page_fault_handler	kern/trap.c	/^page_fault_handler(struct Trapframe *tf)$/;"	f
page_free	kern/pmap.c	/^page_free(struct Page *pp)$/;"	f
page_free	kern/pmap.c.BACKUP.24152.c	/^page_free(struct Page *pp)$/;"	f
page_free	kern/pmap.c.BASE.24152.c	/^page_free(struct Page *pp)$/;"	f
page_free	kern/pmap.c.LOCAL.24152.c	/^page_free(struct Page *pp)$/;"	f
page_free	kern/pmap.c.REMOTE.24152.c	/^page_free(struct Page *pp)$/;"	f
page_free	kern/pmap1.c	/^page_free(struct Page *pp)$/;"	f
page_free_list	kern/pmap.c	/^static struct Page *page_free_list;	\/\/ Free list of physical pages$/;"	v	typeref:struct:Page	file:
page_free_list	kern/pmap.c.BACKUP.24152.c	/^static struct Page *page_free_list;	\/\/ Free list of physical pages$/;"	v	typeref:struct:Page	file:
page_free_list	kern/pmap.c.BASE.24152.c	/^static struct Page *page_free_list;	\/\/ Free list of physical pages$/;"	v	typeref:struct:Page	file:
page_free_list	kern/pmap.c.LOCAL.24152.c	/^static struct Page *page_free_list;	\/\/ Free list of physical pages$/;"	v	typeref:struct:Page	file:
page_free_list	kern/pmap.c.REMOTE.24152.c	/^static struct Page *page_free_list;	\/\/ Free list of physical pages$/;"	v	typeref:struct:Page	file:
page_free_list	kern/pmap1.c	/^static struct Page *page_free_list;	\/\/ Free list of physical pages$/;"	v	typeref:struct:Page	file:
page_free_list	obj/kern/kernel.asm	/^			page_free_list = &pages[i];$/;"	d
page_free_list	obj/kern/kernel.asm	/^		page_free_list = pp1;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = 0;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = NULL;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = fl;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = page_free_list->pp_link;$/;"	d
page_free_list	obj/kern/kernel.asm	/^	page_free_list = pp;$/;"	d
page_init	kern/pmap.c	/^page_init(void)$/;"	f
page_init	kern/pmap.c.BACKUP.24152.c	/^page_init(void)$/;"	f
page_init	kern/pmap.c.BASE.24152.c	/^page_init(void)$/;"	f
page_init	kern/pmap.c.LOCAL.24152.c	/^page_init(void)$/;"	f
page_init	kern/pmap.c.REMOTE.24152.c	/^page_init(void)$/;"	f
page_init	kern/pmap1.c	/^page_init(void)$/;"	f
page_initpp	kern/pmap.c	/^page_initpp(struct Page *pp)$/;"	f	file:
page_initpp	kern/pmap.c.BACKUP.24152.c	/^page_initpp(struct Page *pp)$/;"	f	file:
page_initpp	kern/pmap.c.BASE.24152.c	/^page_initpp(struct Page *pp)$/;"	f	file:
page_initpp	kern/pmap.c.LOCAL.24152.c	/^page_initpp(struct Page *pp)$/;"	f	file:
page_initpp	kern/pmap.c.REMOTE.24152.c	/^page_initpp(struct Page *pp)$/;"	f	file:
page_initpp	kern/pmap1.c	/^page_initpp(struct Page *pp)$/;"	f	file:
page_insert	kern/pmap.c	/^page_insert(pml4e_t *pml4e, struct Page *pp, void *va, int perm)$/;"	f
page_insert	kern/pmap.c.BACKUP.24152.c	/^page_insert(pml4e_t *pml4e, struct Page *pp, void *va, int perm)$/;"	f
page_insert	kern/pmap.c.BASE.24152.c	/^page_insert(pml4e_t *pml4e, struct Page *pp, void *va, int perm)$/;"	f
page_insert	kern/pmap.c.LOCAL.24152.c	/^page_insert(pml4e_t *pml4e, struct Page *pp, void *va, int perm)$/;"	f
page_insert	kern/pmap.c.REMOTE.24152.c	/^page_insert(pml4e_t *pml4e, struct Page *pp, void *va, int perm)$/;"	f
page_insert	kern/pmap1.c	/^page_insert(pml4e_t *pml4e, struct Page *pp, void *va, int perm)$/;"	f
page_lookup	kern/pmap.c	/^page_lookup(pml4e_t *pml4e, void *va, pte_t **pte_store)$/;"	f
page_lookup	kern/pmap.c.BACKUP.24152.c	/^page_lookup(pml4e_t *pml4e, void *va, pte_t **pte_store)$/;"	f
page_lookup	kern/pmap.c.BASE.24152.c	/^page_lookup(pml4e_t *pml4e, void *va, pte_t **pte_store)$/;"	f
page_lookup	kern/pmap.c.LOCAL.24152.c	/^page_lookup(pml4e_t *pml4e, void *va, pte_t **pte_store)$/;"	f
page_lookup	kern/pmap.c.REMOTE.24152.c	/^page_lookup(pml4e_t *pml4e, void *va, pte_t **pte_store)$/;"	f
page_lookup	kern/pmap1.c	/^page_lookup(pml4e_t *pml4e, void *va, pte_t **pte_store)$/;"	f
page_remove	kern/pmap.c	/^page_remove(pml4e_t *pml4e, void *va)$/;"	f
page_remove	kern/pmap.c.BACKUP.24152.c	/^page_remove(pml4e_t *pml4e, void *va)$/;"	f
page_remove	kern/pmap.c.BASE.24152.c	/^page_remove(pml4e_t *pml4e, void *va)$/;"	f
page_remove	kern/pmap.c.LOCAL.24152.c	/^page_remove(pml4e_t *pml4e, void *va)$/;"	f
page_remove	kern/pmap.c.REMOTE.24152.c	/^page_remove(pml4e_t *pml4e, void *va)$/;"	f
page_remove	kern/pmap1.c	/^page_remove(pml4e_t *pml4e, void *va)$/;"	f
pageref	lib/pageref.c	/^pageref(void *v)$/;"	f
pages	kern/pmap.c	/^struct Page *pages;		\/\/ Physical page state array$/;"	v	typeref:struct:Page
pages	kern/pmap.c.BACKUP.24152.c	/^struct Page *pages;		\/\/ Physical page state array$/;"	v	typeref:struct:Page
pages	kern/pmap.c.BASE.24152.c	/^struct Page *pages;		\/\/ Physical page state array$/;"	v	typeref:struct:Page
pages	kern/pmap.c.LOCAL.24152.c	/^struct Page *pages;		\/\/ Physical page state array$/;"	v	typeref:struct:Page
pages	kern/pmap.c.REMOTE.24152.c	/^struct Page *pages;		\/\/ Physical page state array$/;"	v	typeref:struct:Page
pages	kern/pmap1.c	/^struct Page *pages;		\/\/ Physical page state array$/;"	v	typeref:struct:Page
pages	obj/kern/kernel.asm	/^	pages = boot_alloc(npages * sizeof(struct Page));$/;"	d
panic	fs/fsformat.c	/^panic(const char *fmt, ...)$/;"	f
panic	inc/assert.h	12;"	d
panicstr	kern/init.c	/^const char *panicstr;$/;"	v
panicstr	obj/kern/kernel.asm	/^	panicstr = fmt;$/;"	d
pap_protent	net/lwip/netif/ppp/pap.c	/^struct protent pap_protent = {$/;"	v	typeref:struct:protent
parent_bridge	kern/pci.h	/^    struct pci_func *parent_bridge;$/;"	m	struct:pci_bus	typeref:struct:pci_bus::pci_func
passive	net/lwip/netif/ppp/lcp.h	/^    u_int passive           : 1; \/* Don't die if we don't get a response *\/$/;"	m	struct:lcp_options
passwd	net/lwip/netif/ppp/ppp.h	/^  char passwd     [MAXSECRETLEN + 1]; \/* Password for PAP, secret for CHAP *\/$/;"	m	struct:ppp_settings
passwd_from_file	net/lwip/netif/ppp/auth.c	/^static int passwd_from_file;$/;"	v	file:
path	obj/fs/fs.asm	/^		path = skip_slash(path);$/;"	d
path	obj/fs/fs.asm	/^	path = skip_slash(path);$/;"	d
payload	net/lwip/include/lwip/pbuf.h	/^  void *payload;$/;"	m	struct:pbuf
payload	obj/net/ns.asm	/^  payload = p->payload;$/;"	d
pbuf	net/lwip/include/lwip/pbuf.h	/^struct pbuf {$/;"	s
pbuf_alloc	net/lwip/core/pbuf.c	/^pbuf_alloc(pbuf_layer layer, u16_t length, pbuf_type type)$/;"	f
pbuf_cat	net/lwip/core/pbuf.c	/^pbuf_cat(struct pbuf *h, struct pbuf *t)$/;"	f
pbuf_chain	net/lwip/core/pbuf.c	/^pbuf_chain(struct pbuf *h, struct pbuf *t)$/;"	f
pbuf_clen	net/lwip/core/pbuf.c	/^pbuf_clen(struct pbuf *p)$/;"	f
pbuf_copy	net/lwip/core/pbuf.c	/^pbuf_copy(struct pbuf *p_to, struct pbuf *p_from)$/;"	f
pbuf_copy_partial	net/lwip/core/pbuf.c	/^pbuf_copy_partial(struct pbuf *buf, void *dataptr, u16_t len, u16_t offset)$/;"	f
pbuf_dechain	net/lwip/core/pbuf.c	/^pbuf_dechain(struct pbuf *p)$/;"	f
pbuf_free	net/lwip/core/pbuf.c	/^pbuf_free(struct pbuf *p)$/;"	f
pbuf_free_callback	net/lwip/api/tcpip.c	/^pbuf_free_callback(struct pbuf *p)$/;"	f
pbuf_free_int	net/lwip/api/tcpip.c	/^pbuf_free_int(void *p)$/;"	f	file:
pbuf_header	net/lwip/core/pbuf.c	/^pbuf_header(struct pbuf *p, s16_t header_size_increment)$/;"	f
pbuf_init	net/lwip/include/lwip/pbuf.h	99;"	d
pbuf_layer	net/lwip/include/lwip/pbuf.h	/^} pbuf_layer;$/;"	t	typeref:enum:__anon37
pbuf_realloc	net/lwip/core/pbuf.c	/^pbuf_realloc(struct pbuf *p, u16_t new_len)$/;"	f
pbuf_ref	net/lwip/core/pbuf.c	/^pbuf_ref(struct pbuf *p)$/;"	f
pbuf_type	net/lwip/include/lwip/pbuf.h	/^} pbuf_type;$/;"	t	typeref:enum:__anon38
pbufs_freed_current	obj/net/ns.asm	/^      pbufs_freed_current = ip_reass_free_complete_datagram(oldest, prev);$/;"	d
pcb	net/lwip/include/lwip/api.h	/^  } pcb;$/;"	m	struct:netconn	typeref:union:netconn::__anon19
pcb	net/lwip/include/lwip/dhcp.h	/^  struct udp_pcb *pcb;$/;"	m	struct:dhcp	typeref:struct:dhcp::udp_pcb
pcb	net/lwip/include/lwip/snmp_msg.h	/^  struct udp_pcb *pcb;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::udp_pcb
pcb	net/lwip/include/lwip/snmp_msg.h	/^  struct udp_pcb *pcb;$/;"	m	struct:snmp_msg_trap	typeref:struct:snmp_msg_trap::udp_pcb
pcb	obj/net/ns.asm	/^          pcb = inp->dhcp->pcb;$/;"	d
pcb	obj/net/ns.asm	/^        pcb = next;$/;"	d
pcb	obj/net/ns.asm	/^        pcb = pcb->next;$/;"	d
pcb	obj/net/ns.asm	/^      pcb = memp_malloc(MEMP_TCP_PCB);$/;"	d
pcb	obj/net/ns.asm	/^      pcb = pcb->next;$/;"	d
pcb	obj/net/ns.asm	/^      pcb = pcb2;$/;"	d
pcb	obj/net/ns.asm	/^      pcb = uncon_pcb;$/;"	d
pcb	obj/net/ns.asm	/^    pcb = NULL;$/;"	d
pcb	obj/net/ns.asm	/^    pcb = memp_malloc(MEMP_TCP_PCB);$/;"	d
pcb	obj/net/ns.asm	/^    pcb = pcb->next;$/;"	d
pcb	obj/net/ns.asm	/^    pcb = tcp_active_pcbs;$/;"	d
pcb	obj/net/ns.asm	/^  pcb = NULL;$/;"	d
pcb	obj/net/ns.asm	/^  pcb = conn->pcb.tcp;$/;"	d
pcb	obj/net/ns.asm	/^  pcb = memp_malloc(MEMP_RAW_PCB);$/;"	d
pcb	obj/net/ns.asm	/^  pcb = memp_malloc(MEMP_TCP_PCB);$/;"	d
pcb	obj/net/ns.asm	/^  pcb = memp_malloc(MEMP_UDP_PCB);$/;"	d
pcb	obj/net/ns.asm	/^  pcb = raw_pcbs;$/;"	d
pcb	obj/net/ns.asm	/^  pcb = tcp_active_pcbs;$/;"	d
pcb	obj/net/ns.asm	/^  pcb = tcp_tw_pcbs;$/;"	d
pcb2	obj/net/ns.asm	/^      pcb2 = pcb->next;$/;"	d
pcb_new	net/lwip/api/api_msg.c	/^pcb_new(struct api_msg_msg *msg)$/;"	f	file:
pcb_remove	obj/net/ns.asm	/^    pcb_remove = 0;$/;"	d
pcbs	net/lwip/include/lwip/tcp.h	/^  struct tcp_pcb *pcbs;$/;"	m	union:tcp_listen_pcbs_t	typeref:struct:tcp_listen_pcbs_t::tcp_pcb
pci_attach	kern/pci.c	/^pci_attach(struct pci_func *f)$/;"	f	file:
pci_attach_class	kern/pci.c	/^struct pci_driver pci_attach_class[] = {$/;"	v	typeref:struct:pci_driver
pci_attach_match	kern/pci.c	/^pci_attach_match(uint32_t key1, uint32_t key2,$/;"	f	file:
pci_attach_vendor	kern/pci.c	/^struct pci_driver pci_attach_vendor[] = {$/;"	v	typeref:struct:pci_driver
pci_bridge_attach	kern/pci.c	/^pci_bridge_attach(struct pci_func *pcif)$/;"	f	file:
pci_bus	kern/pci.h	/^struct pci_bus {$/;"	s
pci_class	kern/pci.c	/^static const char *pci_class[] =$/;"	v	file:
pci_class_t	kern/pcireg.h	/^typedef uint8_t pci_class_t;$/;"	t
pci_conf1_addr_ioport	kern/pci.c	/^static uint32_t pci_conf1_addr_ioport = 0x0cf8;$/;"	v	file:
pci_conf1_data_ioport	kern/pci.c	/^static uint32_t pci_conf1_data_ioport = 0x0cfc;$/;"	v	file:
pci_conf1_set_addr	kern/pci.c	/^pci_conf1_set_addr(uint32_t bus,$/;"	f	file:
pci_conf_read	kern/pci.c	/^pci_conf_read(struct pci_func *f, uint32_t off)$/;"	f	file:
pci_conf_write	kern/pci.c	/^pci_conf_write(struct pci_func *f, uint32_t off, uint32_t v)$/;"	f	file:
pci_driver	kern/pci.c	/^struct pci_driver {$/;"	s	file:
pci_func	kern/pci.h	/^struct pci_func {$/;"	s
pci_func_enable	kern/pci.c	/^pci_func_enable(struct pci_func *f)$/;"	f
pci_init	kern/pci.c	/^pci_init(void)$/;"	f
pci_interface_t	kern/pcireg.h	/^typedef uint8_t pci_interface_t;$/;"	t
pci_intr_grant_t	kern/pcireg.h	/^typedef uint8_t pci_intr_grant_t;$/;"	t
pci_intr_latency_t	kern/pcireg.h	/^typedef uint8_t pci_intr_latency_t;$/;"	t
pci_intr_line_t	kern/pcireg.h	/^typedef uint8_t pci_intr_line_t;$/;"	t
pci_intr_pin_t	kern/pcireg.h	/^typedef uint8_t pci_intr_pin_t;$/;"	t
pci_print_func	kern/pci.c	/^pci_print_func(struct pci_func *f)$/;"	f	file:
pci_product_id_t	kern/pcireg.h	/^typedef uint16_t pci_product_id_t;$/;"	t
pci_res_bus	kern/pci.h	/^enum { pci_res_bus, pci_res_mem, pci_res_io, pci_res_max };$/;"	e	enum:__anon8
pci_res_io	kern/pci.h	/^enum { pci_res_bus, pci_res_mem, pci_res_io, pci_res_max };$/;"	e	enum:__anon8
pci_res_max	kern/pci.h	/^enum { pci_res_bus, pci_res_mem, pci_res_io, pci_res_max };$/;"	e	enum:__anon8
pci_res_mem	kern/pci.h	/^enum { pci_res_bus, pci_res_mem, pci_res_io, pci_res_max };$/;"	e	enum:__anon8
pci_revision_t	kern/pcireg.h	/^typedef uint8_t pci_revision_t;$/;"	t
pci_scan_bus	kern/pci.c	/^pci_scan_bus(struct pci_bus *bus)$/;"	f	file:
pci_show_addrs	kern/pci.c	/^static int pci_show_addrs = 0;$/;"	v	file:
pci_show_devs	kern/pci.c	/^static int pci_show_devs = 1;$/;"	v	file:
pci_subclass_t	kern/pcireg.h	/^typedef uint8_t pci_subclass_t;$/;"	t
pci_vendor_id_t	kern/pcireg.h	/^typedef uint16_t pci_vendor_id_t;$/;"	t
pci_vpd	kern/pcireg.h	/^struct pci_vpd {$/;"	s
pci_vpd_largeres	kern/pcireg.h	/^struct pci_vpd_largeres {$/;"	s
pci_vpd_smallres	kern/pcireg.h	/^struct pci_vpd_smallres {$/;"	s
pcomp	net/lwip/netif/ppp/ppp.c	/^  int  pcomp;                   \/* Does peer accept protocol compression? *\/$/;"	m	struct:PPPControl_s	file:
pcs	kern/spinlock.h	/^	uintptr_t pcs[10]; \/\/ The call stack (an array of program counters)$/;"	m	struct:spinlock
pcur	obj/net/ns.asm	/^    pcur = p;$/;"	d
pd_base	inc/mmu.h	/^	uint64_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc
pd_lim	inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc
pde	obj/kern/kernel.asm	/^	pde  = KADDR(PTE_ADDR(pdpe[0]));$/;"	d
pde	obj/kern/kernel.asm	/^	pde  = KADDR(PTE_ADDR(pdpe[PDPE(va)]));$/;"	d
pde	obj/kern/kernel.asm	/^	pde = &pde[PDX(va)];$/;"	d
pde	obj/kern/kernel.asm	/^	pde = (pde_t *) KADDR(PTE_ADDR(pdpe[PDPE(va)]));$/;"	d
pde	obj/kern/kernel.asm	/^	pde = KADDR(PTE_ADDR(pdpe[PDPE(PGSIZE)]));$/;"	d
pde_t	inc/memlayout.h	/^typedef uint64_t pde_t;$/;"	t
pdeno_limit	obj/kern/kernel.asm	/^		pdeno_limit  = pdpe_index==3?PDX(UTOP):PDX(0xFFFFFFFF);$/;"	d
pdpe	obj/kern/kernel.asm	/^	pdpe = (pdpe_t *) KADDR(PTE_ADDR(*pml4e));$/;"	d
pdpe	obj/kern/kernel.asm	/^	pdpe = KADDR(PTE_ADDR(boot_pml4e[0]));$/;"	d
pdpe	obj/kern/kernel.asm	/^	pdpe = KADDR(PTE_ADDR(boot_pml4e[PML4(PGSIZE)]));$/;"	d
pdpe	obj/kern/kernel.asm	/^	pdpe = KADDR(PTE_ADDR(boot_pml4e[PML4(va)]));$/;"	d
pdpe_t	inc/memlayout.h	/^typedef uint64_t pdpe_t;$/;"	t
pdpe_walk	kern/pmap.c	/^pdpe_walk(pdpe_t *pdpe,const void *va,int create){$/;"	f
pdpe_walk	kern/pmap.c.BACKUP.24152.c	/^pdpe_walk(pdpe_t *pdpe,const void *va,int create){$/;"	f
pdpe_walk	kern/pmap.c.BASE.24152.c	/^pdpe_walk(pdpe_t *pdpe,const void *va,int create){$/;"	f
pdpe_walk	kern/pmap.c.LOCAL.24152.c	/^pdpe_walk(pdpe_t *pdpe,const void *va,int create){$/;"	f
pdpe_walk	kern/pmap.c.REMOTE.24152.c	/^pdpe_walk(pdpe_t *pdpe,const void *va,int create){$/;"	f
pdpe_walk	kern/pmap1.c	/^pdpe_walk(pdpe_t *pdpe,const void *va,int create){$/;"	f
pdulen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t pdulen;$/;"	m	struct:snmp_resp_header_lengths
pdulen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t pdulen;$/;"	m	struct:snmp_trap_header_lengths
pdulenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t pdulenlen;$/;"	m	struct:snmp_resp_header_lengths
pdulenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t pdulenlen;$/;"	m	struct:snmp_trap_header_lengths
peer_authname	net/lwip/netif/ppp/auth.c	/^static char peer_authname[MAXNAMELEN];$/;"	v	file:
peer_mru	net/lwip/netif/ppp/fsm.c	/^int peer_mru[NUM_PPP];$/;"	v
percpu_kstacks	kern/mpconfig.c	/^unsigned char percpu_kstacks[NCPU][KSTKSIZE]$/;"	v
perm	obj/fs/fs.asm	/^		perm = 0;$/;"	d
perm	obj/net/ns.asm	/^		perm = 0;$/;"	d
perm	obj/user/icode.asm	/^		perm = PTE_P | PTE_U;$/;"	d
perror	net/lwip/jos/arch/perror.c	/^perror(const char *s) {$/;"	f
persist_backoff	net/lwip/include/lwip/tcp.h	/^  u8_t persist_backoff;$/;"	m	struct:tcp_pcb
persist_cnt	net/lwip/include/lwip/tcp.h	/^  u32_t persist_cnt;$/;"	m	struct:tcp_pcb
pg	obj/fs/fs.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/fs/fs.asm	/^		pg = (void *)UTOP;$/;"	d
pg	obj/fs/fs.asm	/^		pg = NULL;$/;"	d
pg	obj/net/ns.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/net/ns.asm	/^		pg = (void *)UTOP;$/;"	d
pg	obj/net/testinput.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/net/testinput.asm	/^		pg = (void *)UTOP;$/;"	d
pg	obj/net/testoutput.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/net/testoutput.asm	/^		pg = (void *)UTOP;$/;"	d
pg	obj/user/echosrv.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/echosrv.asm	/^		pg = (void *)UTOP;$/;"	d
pg	obj/user/echotest.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/echotest.asm	/^		pg = (void *)UTOP;$/;"	d
pg	obj/user/forktree.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/forktree.asm	/^		pg = (void *)UTOP;$/;"	d
pg	obj/user/hello.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/hello.asm	/^		pg = (void *)UTOP;$/;"	d
pg	obj/user/httpd.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/httpd.asm	/^		pg = (void *)UTOP;$/;"	d
pg	obj/user/icode.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/icode.asm	/^		pg = (void *)UTOP;$/;"	d
pg	obj/user/idle.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/idle.asm	/^		pg = (void *)UTOP;$/;"	d
pg	obj/user/init.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/init.asm	/^		pg = (void *)UTOP;$/;"	d
pg	obj/user/pingpong.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/pingpong.asm	/^		pg = (void *)UTOP;$/;"	d
pg	obj/user/primes.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/primes.asm	/^		pg = (void *)UTOP;$/;"	d
pg	obj/user/testfile.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/testfile.asm	/^		pg = (void *)UTOP;$/;"	d
pg	obj/user/testtime.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/testtime.asm	/^		pg = (void *)UTOP;$/;"	d
pg	obj/user/writemotd.asm	/^		pg = (void *) UTOP;$/;"	d
pg	obj/user/writemotd.asm	/^		pg = (void *)UTOP;$/;"	d
pgdir_walk	kern/pmap.c	/^pgdir_walk(pde_t *pgdir, const void *va, int create)$/;"	f
pgdir_walk	kern/pmap.c.BACKUP.24152.c	/^pgdir_walk(pde_t *pgdir, const void *va, int create)$/;"	f
pgdir_walk	kern/pmap.c.BASE.24152.c	/^pgdir_walk(pde_t *pgdir, const void *va, int create)$/;"	f
pgdir_walk	kern/pmap.c.LOCAL.24152.c	/^pgdir_walk(pde_t *pgdir, const void *va, int create)$/;"	f
pgdir_walk	kern/pmap.c.REMOTE.24152.c	/^pgdir_walk(pde_t *pgdir, const void *va, int create)$/;"	f
pgdir_walk	kern/pmap1.c	/^pgdir_walk(pde_t *pgdir, const void *va, int create)$/;"	f
pgfault	lib/fork.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:
pgfault	user/faultregs.c	/^pgfault(struct UTrapframe *utf)$/;"	f	file:
ph	obj/boot1/boot.asm	/^	ph = (struct Proghdr *) ((uint8_t *) ELFHDR + ELFHDR->e_phoff);$/;"	d
ph	obj/user/icode.asm	/^	ph = (struct Proghdr*) (elf_buf + elf->e_phoff);$/;"	d
physaddr	kern/mpconfig.c	/^	uint32_t physaddr;            \/\/ phys addr of MP config table$/;"	m	struct:mp	file:
physaddr_t	fs/fsformat.c	/^typedef uint32_t physaddr_t;$/;"	t	file:
physaddr_t	inc/types.h	/^typedef uint64_t physaddr_t;$/;"	t
physaddr_t	obj/kern/kernel.asm	/^physaddr_t lapicaddr;        \/\/ Initialized in mp.c$/;"	l
pic_init	kern/picirq.c	/^pic_init(void)$/;"	f
pkt	inc/ns.h	/^	struct jif_pkt pkt;$/;"	m	union:Nsipc	typeref:struct:Nsipc::jif_pkt
pkt	net/testinput.c	/^static struct jif_pkt *pkt = (struct jif_pkt*)REQVA;$/;"	v	typeref:struct:jif_pkt	file:
pkt	net/testoutput.c	/^static struct jif_pkt *pkt = (struct jif_pkt*)REQVA;$/;"	v	typeref:struct:jif_pkt	file:
plug_holes	net/lwip/core/mem.c	/^plug_holes(struct mem *mem)$/;"	f	file:
pmem	obj/net/ns.asm	/^  pmem = (struct mem *)&ram[mem->prev];$/;"	d
pml4e	obj/kern/kernel.asm	/^	pml4e = &pml4e[PML4(va)];$/;"	d
pml4e	obj/kern/kernel.asm	/^	pml4e = boot_alloc(PGSIZE);$/;"	d
pml4e	obj/kern/kernel.asm	/^	pml4e = boot_pml4e;$/;"	d
pml4e_t	inc/memlayout.h	/^typedef uint64_t pml4e_t;$/;"	t
pml4e_walk	kern/pmap.c	/^pml4e_walk(pml4e_t *pml4e, const void *va, int create)$/;"	f
pml4e_walk	kern/pmap.c.BACKUP.24152.c	/^pml4e_walk(pml4e_t *pml4e, const void *va, int create)$/;"	f
pml4e_walk	kern/pmap.c.BASE.24152.c	/^pml4e_walk(pml4e_t *pml4e, const void *va, int create)$/;"	f
pml4e_walk	kern/pmap.c.LOCAL.24152.c	/^pml4e_walk(pml4e_t *pml4e, const void *va, int create)$/;"	f
pml4e_walk	kern/pmap.c.REMOTE.24152.c	/^pml4e_walk(pml4e_t *pml4e, const void *va, int create)$/;"	f
pml4e_walk	kern/pmap1.c	/^pml4e_walk(pml4e_t *pml4e, const void *va, int create)$/;"	f
poff	obj/net/ns.asm	/^    poff = newpbuflen;$/;"	d
poll	net/lwip/include/lwip/tcp.h	/^  err_t (* poll)(void *arg, struct tcp_pcb *pcb);$/;"	m	struct:tcp_pcb
poll_tcp	net/lwip/api/api_msg.c	/^poll_tcp(void *arg, struct tcp_pcb *pcb)$/;"	f	file:
pollinterval	net/lwip/include/lwip/tcp.h	/^  u8_t polltmr, pollinterval;$/;"	m	struct:tcp_pcb
polltmr	net/lwip/include/lwip/tcp.h	/^  u8_t polltmr, pollinterval;$/;"	m	struct:tcp_pcb
poolnr	net/lwip/core/mem.c	/^   memp_t poolnr;$/;"	m	struct:mem_helper	file:
pop_node	net/lwip/core/snmp/mib_structs.c	/^pop_node(struct nse* node)$/;"	f	file:
port	net/lwip/include/lwip/api_msg.h	/^      u16_t *port;$/;"	m	struct:api_msg_msg::__anon25::__anon28
port	net/lwip/include/lwip/api_msg.h	/^      u16_t port;$/;"	m	struct:api_msg_msg::__anon25::__anon27
port	net/lwip/include/lwip/netbuf.h	/^  u16_t port;$/;"	m	struct:netbuf
port	obj/net/ns.asm	/^      port = netbuf_fromport(buf);$/;"	d
port	obj/net/ns.asm	/^    port = TCP_LOCAL_PORT_RANGE_START;$/;"	d
port	obj/net/ns.asm	/^    port = UDP_LOCAL_PORT_RANGE_START;$/;"	d
port	obj/net/ns.asm	/^    port = tcp_new_port();$/;"	d
pos	obj/kern/kernel.asm	/^	pos = inb(addr_6845 + 1) << 8;$/;"	d
post_make	gradelib.py	/^def post_make():$/;"	f
pp	obj/kern/kernel.asm	/^		pp = pa2page(*pte);$/;"	d
pp0	obj/kern/kernel.asm	/^	pp0 = pp1 = pp2 = 0;$/;"	d
pp0	obj/kern/kernel.asm	/^	pp0 = pp1 = pp2 = pp3 = pp4 = pp5 =0;$/;"	d
pp_link	inc/memlayout.h	/^        struct Page *pp_link;$/;"	m	struct:Page	typeref:struct:Page::Page
pp_ref	inc/memlayout.h	/^	uint16_t pp_ref;$/;"	m	struct:Page
ppn_t	inc/types.h	/^typedef uint64_t ppn_t;$/;"	t
pppACCMMask	net/lwip/netif/ppp/ppp.c	/^static u_char pppACCMMask[] = {$/;"	v	file:
pppAppend	net/lwip/netif/ppp/ppp.c	/^pppAppend(u_char c, struct pbuf *nb, ext_accm *outACCM)$/;"	f	file:
pppAuthType	net/lwip/netif/ppp/ppp.h	/^enum pppAuthType {$/;"	g
pppClose	net/lwip/netif/ppp/ppp.c	/^pppClose(int pd)$/;"	f
pppControl	net/lwip/netif/ppp/ppp.c	/^static PPPControl pppControl[NUM_PPP]; \/* The PPP interface control blocks. *\/$/;"	v	file:
pppDrop	net/lwip/netif/ppp/ppp.c	/^pppDrop(PPPControl *pc)$/;"	f	file:
pppHupCB	net/lwip/netif/ppp/ppp.c	/^pppHupCB(void *arg)$/;"	f	file:
pppIOCtl	net/lwip/netif/ppp/ppp.c	/^pppIOCtl(int pd, int cmd, void *arg)$/;"	f
pppInProc	net/lwip/netif/ppp/ppp.c	/^pppInProc(int pd, u_char *s, int l)$/;"	f	file:
pppInProcOverEthernet	net/lwip/netif/ppp/ppp.c	/^pppInProcOverEthernet(int pd, struct pbuf *pb)$/;"	f
pppInit	net/lwip/netif/ppp/ppp.c	/^pppInit(void)$/;"	f
pppInput	net/lwip/netif/ppp/ppp.c	/^pppInput(void *arg)$/;"	f	file:
pppInputHeader	net/lwip/netif/ppp/ppp.c	/^struct pppInputHeader {$/;"	s	file:
pppLinkDown	net/lwip/netif/ppp/ppp.c	/^pppLinkDown(int pd)$/;"	f
pppLinkTerminated	net/lwip/netif/ppp/ppp.c	/^pppLinkTerminated(int pd)$/;"	f
pppMTU	net/lwip/netif/ppp/ppp.c	/^pppMTU(int pd)$/;"	f
pppMain	net/lwip/netif/ppp/ppp.c	/^pppMain(void *arg)$/;"	f	file:
pppMainWakeup	net/lwip/netif/ppp/ppp.c	/^pppMainWakeup(int pd)$/;"	f
pppOpen	net/lwip/netif/ppp/ppp.h	393;"	d
pppOverEthernetClose	net/lwip/netif/ppp/ppp.c	/^pppOverEthernetClose(int pd)$/;"	f
pppOverEthernetInitFailed	net/lwip/netif/ppp/ppp.c	/^pppOverEthernetInitFailed(void* arg)$/;"	f
pppOverEthernetLinkStatusCB	net/lwip/netif/ppp/ppp.c	/^pppOverEthernetLinkStatusCB(int pd, int up)$/;"	f	file:
pppOverEthernetOpen	net/lwip/netif/ppp/ppp.c	/^int pppOverEthernetOpen(struct netif *ethif, const char *service_name, const char *concentrator_name, void (*linkStatusCB)(void *ctx, int errCode, void *arg), void *linkStatusCtx)$/;"	f
pppOverSerialOpen	net/lwip/netif/ppp/ppp.c	/^pppOverSerialOpen(sio_fd_t fd, void (*linkStatusCB)(void *ctx, int errCode, void *arg), void *linkStatusCtx)$/;"	f
pppSetAuth	net/lwip/netif/ppp/ppp.c	/^pppSetAuth(enum pppAuthType authType, const char *user, const char *passwd)$/;"	f
pppSigHUP	net/lwip/netif/ppp/ppp.c	/^pppSigHUP(int pd)$/;"	f
pppSingleBuf	net/lwip/netif/ppp/ppp.c	/^pppSingleBuf(struct pbuf *p)$/;"	f
pppStartCB	net/lwip/netif/ppp/ppp.c	/^pppStartCB(void *arg)$/;"	f	file:
pppStopCB	net/lwip/netif/ppp/ppp.c	/^pppStopCB(void *arg)$/;"	f	file:
pppWrite	net/lwip/netif/ppp/ppp.c	/^pppWrite(int pd, const u_char *s, int n)$/;"	f
pppWriteOverEthernet	net/lwip/netif/ppp/ppp.c	/^pppWriteOverEthernet(int pd, const u_char *s, int n)$/;"	f
ppp_addrs	net/lwip/netif/ppp/ppp.h	/^struct ppp_addrs {$/;"	s
ppp_idle	net/lwip/netif/ppp/ppp.h	/^struct ppp_idle {$/;"	s
ppp_protocols	net/lwip/netif/ppp/ppp.c	/^struct protent *ppp_protocols[] = {$/;"	v	typeref:struct:protent
ppp_recv_config	net/lwip/netif/ppp/ppp.c	/^ppp_recv_config( int unit, int mru, u32_t asyncmap, int pcomp, int accomp)$/;"	f
ppp_send_config	net/lwip/netif/ppp/ppp.c	/^ppp_send_config( int unit, int mtu, u32_t asyncmap, int pcomp, int accomp)$/;"	f
ppp_set_xaccm	net/lwip/netif/ppp/ppp.c	/^ppp_set_xaccm(int unit, ext_accm *accm)$/;"	f
ppp_settings	net/lwip/netif/ppp/ppp.c	/^struct ppp_settings ppp_settings;$/;"	v	typeref:struct:ppp_settings
ppp_settings	net/lwip/netif/ppp/ppp.h	/^struct ppp_settings {$/;"	s
ppperr_strerr	net/lwip/netif/ppp/fsm.c	/^static const char *ppperr_strerr[] = {$/;"	v	file:
pppifNetifInit	net/lwip/netif/ppp/ppp.c	/^pppifNetifInit(struct netif *netif)$/;"	f	file:
pppifOutput	net/lwip/netif/ppp/ppp.c	/^pppifOutput(struct netif *netif, struct pbuf *pb, struct ip_addr *ipaddr)$/;"	f	file:
pppifOutputOverEthernet	net/lwip/netif/ppp/ppp.c	/^pppifOutputOverEthernet(int pd, struct pbuf *p)$/;"	f	file:
pppoe_abort_connect	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_abort_connect(struct pppoe_softc *sc)$/;"	f	file:
pppoe_clear_softc	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_clear_softc(struct pppoe_softc *sc, const char *message)$/;"	f	file:
pppoe_connect	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_connect(struct pppoe_softc *sc)$/;"	f
pppoe_create	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_create(struct netif *ethif, int pd, void (*linkStatusCB)(int pd, int up), struct pppoe_softc **scptr)$/;"	f
pppoe_data_input	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_data_input(struct netif *netif, struct pbuf *pb)$/;"	f
pppoe_destroy	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_destroy(struct netif *ifp)$/;"	f
pppoe_disc_input	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_disc_input(struct netif *netif, struct pbuf *p)$/;"	f
pppoe_disconnect	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_disconnect(struct pppoe_softc *sc)$/;"	f
pppoe_dispatch_disc_pkt	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_dispatch_disc_pkt(struct netif *netif, struct pbuf *pb)$/;"	f	file:
pppoe_do_disconnect	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_do_disconnect(struct pppoe_softc *sc)$/;"	f	file:
pppoe_find_softc_by_hunique	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_find_softc_by_hunique(u8_t *token, size_t len, struct netif *rcvif)$/;"	f	file:
pppoe_find_softc_by_session	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_find_softc_by_session(u_int session, struct netif *rcvif)$/;"	f	file:
pppoe_hdrlen	net/lwip/netif/ppp/ppp_oe.c	/^int pppoe_hdrlen;$/;"	v
pppoe_init	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_init(void)$/;"	f
pppoe_linkstatus_up	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_linkstatus_up(void *arg)$/;"	f	file:
pppoe_output	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_output(struct pppoe_softc *sc, struct pbuf *pb)$/;"	f	file:
pppoe_sc	net/lwip/netif/ppp/ppp.c	/^  struct pppoe_softc *pppoe_sc;$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::pppoe_softc	file:
pppoe_send_padi	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_send_padi(struct pppoe_softc *sc)$/;"	f	file:
pppoe_send_pado	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_send_pado(struct pppoe_softc *sc)$/;"	f	file:
pppoe_send_padr	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_send_padr(struct pppoe_softc *sc)$/;"	f	file:
pppoe_send_pads	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_send_pads(struct pppoe_softc *sc)$/;"	f	file:
pppoe_send_padt	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_send_padt(struct netif *outgoing_if, u_int session, const u8_t *dest)$/;"	f	file:
pppoe_softc	net/lwip/netif/ppp/ppp_oe.c	/^struct pppoe_softc {$/;"	s	file:
pppoe_timeout	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_timeout(void *arg)$/;"	f	file:
pppoe_xmit	net/lwip/netif/ppp/ppp_oe.c	/^pppoe_xmit(struct pppoe_softc *sc, struct pbuf *pb)$/;"	f
pppoehdr	net/lwip/include/netif/ppp_oe.h	/^struct pppoehdr {$/;"	s
pppoetag	net/lwip/include/netif/ppp_oe.h	/^struct pppoetag {$/;"	s
ppte	obj/kern/kernel.asm	/^		ppte = pml4e_walk(env->env_pml4e, addr, 0);$/;"	d
ppte	obj/kern/kernel.asm	/^		ppte = pml4e_walk(pml4e, (void*)virtual_addr, 1);$/;"	d
pre_make	gradelib.py	/^def pre_make():$/;"	f
precision	obj/fs/fs.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/fs/fs.asm	/^			precision = va_arg(aq, int);$/;"	d
precision	obj/fs/fs.asm	/^		precision = -1;$/;"	d
precision	obj/kern/kernel.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/kern/kernel.asm	/^			precision = va_arg(aq, int);$/;"	d
precision	obj/kern/kernel.asm	/^		precision = -1;$/;"	d
precision	obj/net/ns.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/net/ns.asm	/^			precision = va_arg(aq, int);$/;"	d
precision	obj/net/ns.asm	/^		precision = -1;$/;"	d
precision	obj/net/testinput.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/net/testinput.asm	/^			precision = va_arg(aq, int);$/;"	d
precision	obj/net/testinput.asm	/^		precision = -1;$/;"	d
precision	obj/net/testoutput.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/net/testoutput.asm	/^			precision = va_arg(aq, int);$/;"	d
precision	obj/net/testoutput.asm	/^		precision = -1;$/;"	d
precision	obj/user/echosrv.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/echosrv.asm	/^			precision = va_arg(aq, int);$/;"	d
precision	obj/user/echosrv.asm	/^		precision = -1;$/;"	d
precision	obj/user/echotest.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/echotest.asm	/^			precision = va_arg(aq, int);$/;"	d
precision	obj/user/echotest.asm	/^		precision = -1;$/;"	d
precision	obj/user/forktree.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/forktree.asm	/^			precision = va_arg(aq, int);$/;"	d
precision	obj/user/forktree.asm	/^		precision = -1;$/;"	d
precision	obj/user/hello.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/hello.asm	/^			precision = va_arg(aq, int);$/;"	d
precision	obj/user/hello.asm	/^		precision = -1;$/;"	d
precision	obj/user/httpd.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/httpd.asm	/^			precision = va_arg(aq, int);$/;"	d
precision	obj/user/httpd.asm	/^		precision = -1;$/;"	d
precision	obj/user/icode.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/icode.asm	/^			precision = va_arg(aq, int);$/;"	d
precision	obj/user/icode.asm	/^		precision = -1;$/;"	d
precision	obj/user/idle.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/idle.asm	/^			precision = va_arg(aq, int);$/;"	d
precision	obj/user/idle.asm	/^		precision = -1;$/;"	d
precision	obj/user/init.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/init.asm	/^			precision = va_arg(aq, int);$/;"	d
precision	obj/user/init.asm	/^		precision = -1;$/;"	d
precision	obj/user/pingpong.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pingpong.asm	/^			precision = va_arg(aq, int);$/;"	d
precision	obj/user/pingpong.asm	/^		precision = -1;$/;"	d
precision	obj/user/primes.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/primes.asm	/^			precision = va_arg(aq, int);$/;"	d
precision	obj/user/primes.asm	/^		precision = -1;$/;"	d
precision	obj/user/testfile.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testfile.asm	/^			precision = va_arg(aq, int);$/;"	d
precision	obj/user/testfile.asm	/^		precision = -1;$/;"	d
precision	obj/user/testtime.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testtime.asm	/^			precision = va_arg(aq, int);$/;"	d
precision	obj/user/testtime.asm	/^		precision = -1;$/;"	d
precision	obj/user/writemotd.asm	/^				precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/writemotd.asm	/^			precision = va_arg(aq, int);$/;"	d
precision	obj/user/writemotd.asm	/^		precision = -1;$/;"	d
prefix	net/lwip/core/snmp/mib_structs.c	/^const s32_t prefix[4] = {1, 3, 6, 1};$/;"	v
prev	net/lwip/core/mem.c	/^  mem_size_t prev;$/;"	m	struct:mem	file:
prev	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *prev;$/;"	m	struct:snmp_varbind	typeref:struct:snmp_varbind::snmp_varbind
prev	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_list_node *prev;  $/;"	m	struct:mib_list_node	typeref:struct:mib_list_node::mib_list_node
prev	obj/net/ns.asm	/^            prev = next;$/;"	d
prev	obj/net/ns.asm	/^          prev = NULL;$/;"	d
prev	obj/net/ns.asm	/^        prev = r;$/;"	d
prev	obj/net/ns.asm	/^      prev = (struct tcp_pcb *)lpcb;$/;"	d
prev	obj/net/ns.asm	/^      prev = pcb;$/;"	d
prev	obj/net/ns.asm	/^      prev = r;$/;"	d
prev	obj/net/ns.asm	/^    prev = NULL;$/;"	d
prev	obj/net/ns.asm	/^    prev = pcb;$/;"	d
prev	obj/net/ns.asm	/^  prev = NULL;    $/;"	d
prev	obj/net/ns.asm	/^  prev = NULL;$/;"	d
prev_i	net/serv.c	/^static int prev_i(int i) { return (i ? i-1 : QUEUE_SIZE-1); }$/;"	f	file:
primeproc	user/primes.c	/^primeproc(void)$/;"	f
print_jb	net/lwip/jos/arch/thread.c	/^print_jb(struct thread_context *tc) {$/;"	f	file:
print_regs	kern/trap.c	/^print_regs(struct PushRegs *regs)$/;"	f
print_trapframe	kern/trap.c	/^print_trapframe(struct Trapframe *tf)$/;"	f
printbuf	lib/fprintf.c	/^struct printbuf {$/;"	s	file:
printbuf	lib/printf.c	/^struct printbuf {$/;"	s	file:
printf	lib/fprintf.c	/^printf(const char *fmt, ...)$/;"	f
printfmt	lib/printfmt.c	/^printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...)$/;"	f
printnum	lib/printfmt.c	/^printnum(void (*putch)(int, void*), void *putdat,$/;"	f	file:
proc	obj/kern/kernel.asm	/^			proc = (struct mpproc *)p;$/;"	d
process_precision	obj/fs/fs.asm	/^		process_precision:$/;"	l
process_precision	obj/kern/kernel.asm	/^		process_precision:$/;"	l
process_precision	obj/net/ns.asm	/^		process_precision:$/;"	l
process_precision	obj/net/testinput.asm	/^		process_precision:$/;"	l
process_precision	obj/net/testoutput.asm	/^		process_precision:$/;"	l
process_precision	obj/user/echosrv.asm	/^		process_precision:$/;"	l
process_precision	obj/user/echotest.asm	/^		process_precision:$/;"	l
process_precision	obj/user/forktree.asm	/^		process_precision:$/;"	l
process_precision	obj/user/hello.asm	/^		process_precision:$/;"	l
process_precision	obj/user/httpd.asm	/^		process_precision:$/;"	l
process_precision	obj/user/icode.asm	/^		process_precision:$/;"	l
process_precision	obj/user/idle.asm	/^		process_precision:$/;"	l
process_precision	obj/user/init.asm	/^		process_precision:$/;"	l
process_precision	obj/user/pingpong.asm	/^		process_precision:$/;"	l
process_precision	obj/user/primes.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testfile.asm	/^		process_precision:$/;"	l
process_precision	obj/user/testtime.asm	/^		process_precision:$/;"	l
process_precision	obj/user/writemotd.asm	/^		process_precision:$/;"	l
process_timer	net/serv.c	/^process_timer(envid_t envid) {$/;"	f	file:
product	kern/mpconfig.c	/^	uint8_t product[20];            \/\/ product id$/;"	m	struct:mpconf	file:
protcseg	boot1/boot.S	/^protcseg:$/;"	l
protcseg	obj/boot1/boot.asm	/^protcseg:$/;"	l
protent	net/lwip/netif/ppp/ppp.h	/^struct protent {$/;"	s
proterr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER proterr;          \/* Protocol error. *\/$/;"	m	struct:stats_proto
proto	net/lwip/include/lwip/api_msg.h	/^      u8_t proto;$/;"	m	struct:api_msg_msg::__anon25::__anon26
proto	net/lwip/netif/ppp/ppp.c	/^  u16_t proto;$/;"	m	struct:pppInputHeader	file:
proto	obj/net/ns.asm	/^  proto = IPH_PROTO(iphdr);$/;"	d
proto_name	net/lwip/netif/ppp/fsm.h	/^  char *proto_name;                                 \/* String name for protocol (for messages) *\/$/;"	m	struct:fsm_callbacks
protocol	net/lwip/include/lwip/raw.h	/^  u8_t protocol;$/;"	m	struct:raw_pcb
protocol	net/lwip/netif/ppp/fsm.h	/^  u_short protocol;                \/* Data Link Layer Protocol field value *\/$/;"	m	struct:fsm
protocol	net/lwip/netif/ppp/ppp.c	/^  int         protocol; \/* PPP procotol, e.g. PPP_IP *\/$/;"	m	struct:npioctl	file:
protocol	net/lwip/netif/ppp/ppp.h	/^    u_short protocol;       \/* PPP protocol number *\/$/;"	m	struct:protent
protrej	net/lwip/netif/ppp/ppp.h	/^    void (*protrej) (int unit);$/;"	m	struct:protent
protreject	net/lwip/netif/ppp/fsm.h	/^  void (*protreject)(int);                          \/* Called when Protocol-Reject received *\/$/;"	m	struct:fsm_callbacks
proxy_arp	net/lwip/netif/ppp/ipcp.h	/^  u_int   proxy_arp     : 1; \/* Make proxy ARP entry for peer? *\/$/;"	m	struct:ipcp_options
psem	net/lwip/core/sys.c	/^  sys_sem_t *psem;$/;"	m	struct:sswt_cb	file:
pt	obj/kern/kernel.asm	/^			pt = (pte_t*) KADDR(pa);$/;"	d
pte	obj/fs/fs.asm	/^	pte = vpt[PPN(v)];$/;"	d
pte	obj/kern/kernel.asm	/^	pte = (pte_t*) KADDR(PTE_ADDR(*pde));$/;"	d
pte	obj/net/ns.asm	/^	pte = vpt[PPN(v)];$/;"	d
pte	obj/net/testinput.asm	/^	pte = vpt[PPN(v)];$/;"	d
pte	obj/net/testoutput.asm	/^	pte = vpt[PPN(v)];$/;"	d
pte	obj/user/echosrv.asm	/^	pte = vpt[PPN(v)];$/;"	d
pte	obj/user/echotest.asm	/^	pte = vpt[PPN(v)];$/;"	d
pte	obj/user/forktree.asm	/^	pte = vpt[PPN(v)];$/;"	d
pte	obj/user/hello.asm	/^	pte = vpt[PPN(v)];$/;"	d
pte	obj/user/httpd.asm	/^	pte = vpt[PPN(v)];$/;"	d
pte	obj/user/icode.asm	/^	pte = vpt[PPN(v)];$/;"	d
pte	obj/user/idle.asm	/^	pte = vpt[PPN(v)];$/;"	d
pte	obj/user/init.asm	/^	pte = vpt[PPN(v)];$/;"	d
pte	obj/user/pingpong.asm	/^	pte = vpt[PPN(v)];$/;"	d
pte	obj/user/primes.asm	/^	pte = vpt[PPN(v)];$/;"	d
pte	obj/user/testfile.asm	/^	pte = vpt[PPN(v)];$/;"	d
pte	obj/user/testtime.asm	/^	pte = vpt[PPN(v)];$/;"	d
pte	obj/user/writemotd.asm	/^	pte = vpt[PPN(v)];$/;"	d
pte_t	inc/memlayout.h	/^typedef uint64_t pte_t;$/;"	t
pte_t	obj/kern/kernel.asm	/^pte_t *$/;"	l
ptep	obj/kern/kernel.asm	/^	ptep  = KADDR(PTE_ADDR(pde[0]));$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = KADDR(PTE_ADDR(pde[PDX(PGSIZE)]));$/;"	d
ptep	obj/kern/kernel.asm	/^	ptep = pml4e_walk(boot_pml4e, va, 1);$/;"	d
ptep1	obj/kern/kernel.asm	/^	ptep1 = KADDR(PTE_ADDR(pde[PDX(va)]));$/;"	d
ptr	net/lwip/include/lwip/netbuf.h	/^  struct pbuf *p, *ptr;$/;"	m	struct:netbuf	typeref:struct:netbuf::
ptr	obj/net/ns.asm	/^         ptr = ((struct mem *)&ram[ptr])->next) {$/;"	d
ptr	obj/net/ns.asm	/^    ptr = (void *)((u8_t *)ptr + seglen);$/;"	d
ptr	obj/net/ns.asm	/^  ptr = (u8_t *)mem - ram;$/;"	d
ptr	obj/net/ns.asm	/^  ptr = arg;$/;"	d
ptr2	obj/net/ns.asm	/^          ptr2 = ptr + SIZEOF_STRUCT_MEM + size;$/;"	d
ptr2	obj/net/ns.asm	/^    ptr2 = ptr + SIZEOF_STRUCT_MEM + newsize;$/;"	d
push_node	net/lwip/core/snmp/mib_structs.c	/^push_node(struct nse* node)$/;"	f	file:
pushq	kern/trapentry.S	/^pushq $GD_KD$/;"	l
pushq	obj/kern/kernel.asm	/^pushq $GD_KD$/;"	l
put_buffer	net/serv.c	/^put_buffer(void *va) {$/;"	f	file:
putch	kern/printf.c	/^putch(int ch, int *cnt)$/;"	f	file:
putch	lib/fprintf.c	/^putch(int ch, void *thunk)$/;"	f	file:
putch	lib/printf.c	/^putch(int ch, struct printbuf *b)$/;"	f	file:
q	net/lwip/netif/etharp.c	/^  struct etharp_q_entry *q;$/;"	m	struct:etharp_entry	typeref:struct:etharp_entry::etharp_q_entry	file:
q	obj/net/ns.asm	/^          q = iprh->next_pbuf;$/;"	d
q	obj/net/ns.asm	/^        q = NULL;$/;"	d
q	obj/net/ns.asm	/^        q = iprh->next_pbuf;$/;"	d
q	obj/net/ns.asm	/^      q = memp_malloc(MEMP_PBUF_POOL);$/;"	d
q	obj/net/ns.asm	/^      q = p->next;$/;"	d
q	obj/net/ns.asm	/^    q = NULL;$/;"	d
q	obj/net/ns.asm	/^    q = iprh_tmp->next_pbuf;$/;"	d
q	obj/net/ns.asm	/^    q = mem_realloc(q, (u8_t *)q->payload - (u8_t *)q + rem_len);$/;"	d
q	obj/net/ns.asm	/^    q = p;$/;"	d
q	obj/net/ns.asm	/^    q = pbuf_alloc(PBUF_IP, 0, PBUF_RAM);$/;"	d
q	obj/net/ns.asm	/^    q = pbuf_alloc(PBUF_IP, UDP_HLEN, PBUF_RAM);$/;"	d
q	obj/net/ns.asm	/^    q = pbuf_alloc(PBUF_RAW, p->tot_len, PBUF_RAM);$/;"	d
q	obj/net/ns.asm	/^    q = q->next;$/;"	d
q	obj/net/ns.asm	/^  q = p->next;$/;"	d
q	obj/net/ns.asm	/^  q = p;$/;"	d
q	obj/net/ns.asm	/^  q = pbuf_alloc(PBUF_IP, sizeof(struct icmp_dur_hdr) + IP_HLEN + ICMP_DEST_UNREACH_DATASIZE,$/;"	d
queue	obj/net/ns.asm	/^      queue = seg;$/;"	d
queued_msg	net/lwip/jos/arch/sys_arch.c	/^    sys_sem_t queued_msg;$/;"	m	struct:sys_mbox_entry	file:
queuelen	obj/net/ns.asm	/^  queuelen = pcb->snd_queuelen;$/;"	d
quote	gradelib.py	/^    from pipes import quote$/;"	i
r	grade-lab1	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab2	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab3	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab4	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab5	/^r = Runner(save("jos.out"),$/;"	v
r	grade-lab6	/^r = Runner(save("jos.out"),$/;"	v
r	net/lwip/include/lwip/api_msg.h	/^    } r;$/;"	m	union:api_msg_msg::__anon25	typeref:struct:api_msg_msg::__anon25::__anon30
r	obj/fs/fs.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/fs/fs.asm	/^			r = -E_INVAL;$/;"	d
r	obj/fs/fs.asm	/^			r = 0;$/;"	d
r	obj/fs/fs.asm	/^			r = handlers[req](whom, fsreq);$/;"	d
r	obj/fs/fs.asm	/^			r = serve_open(whom, (struct Fsreq_open*)fsreq, &pg, &perm);$/;"	d
r	obj/fs/fs.asm	/^		r = sys_env_set_pgfault_upcall(envid, _pgfault_upcall);$/;"	d
r	obj/fs/fs.asm	/^		r = sys_page_alloc(envid, (void*) (UXSTACKTOP - PGSIZE), PTE_P|PTE_U|PTE_W);$/;"	d
r	obj/fs/fs.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/fs/fs.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/kern/kernel.asm	/^			r = m - 1;$/;"	d
r	obj/net/ns.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/net/ns.asm	/^			r = 0;$/;"	d
r	obj/net/ns.asm	/^		r = -E_INVAL;$/;"	d
r	obj/net/ns.asm	/^		r = 0;$/;"	d
r	obj/net/ns.asm	/^		r = lwip_accept(req->accept.req_s, &ret.ret_addr,$/;"	d
r	obj/net/ns.asm	/^		r = lwip_bind(req->bind.req_s, &req->bind.req_name,$/;"	d
r	obj/net/ns.asm	/^		r = lwip_close(req->close.req_s);$/;"	d
r	obj/net/ns.asm	/^		r = lwip_connect(req->connect.req_s, &req->connect.req_name,$/;"	d
r	obj/net/ns.asm	/^		r = lwip_listen(req->listen.req_s, req->listen.req_backlog);$/;"	d
r	obj/net/ns.asm	/^		r = lwip_recv(req->recv.req_s, req->recvRet.ret_buf,$/;"	d
r	obj/net/ns.asm	/^		r = lwip_send(req->send.req_s, &req->send.req_buf,$/;"	d
r	obj/net/ns.asm	/^		r = lwip_shutdown(req->shutdown.req_s, req->shutdown.req_how);$/;"	d
r	obj/net/ns.asm	/^		r = lwip_socket(req->socket.req_domain, req->socket.req_type,$/;"	d
r	obj/net/ns.asm	/^		r = sys_env_set_pgfault_upcall(envid, _pgfault_upcall);$/;"	d
r	obj/net/ns.asm	/^		r = sys_page_alloc(envid, (void*) (UXSTACKTOP - PGSIZE), PTE_P|PTE_U|PTE_W);$/;"	d
r	obj/net/ns.asm	/^		r = sys_page_map(0, addr, envid, addr, perm);$/;"	d
r	obj/net/ns.asm	/^	r = duppage(envid, VPN(USTACKTOP - PGSIZE));$/;"	d
r	obj/net/ns.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/net/ns.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/net/ns.asm	/^	r = sys_page_alloc(envid, (void*) (UXSTACKTOP - PGSIZE), PTE_P|PTE_U|PTE_W);$/;"	d
r	obj/net/ns.asm	/^	r = sys_page_map(0, addr, envid, addr, perm);$/;"	d
r	obj/net/ns.asm	/^                r = sys_ipc_recv(&nsipcbuf);$/;"	d
r	obj/net/ns.asm	/^              r = r->next;$/;"	d
r	obj/net/ns.asm	/^            r = arp_table[i].q;$/;"	d
r	obj/net/ns.asm	/^      r = iprh->next_pbuf;$/;"	d
r	obj/net/ns.asm	/^      r = pbuf_alloc(PBUF_LINK, p->tot_len, PBUF_RAM);$/;"	d
r	obj/net/ns.asm	/^      r = q;$/;"	d
r	obj/net/ns.asm	/^      r = r->next;$/;"	d
r	obj/net/ns.asm	/^    r = ((struct ip_reass_helper*)ipr->p->payload)->next_pbuf;$/;"	d
r	obj/net/ns.asm	/^    r = p;$/;"	d
r	obj/net/ns.asm	/^    r = q;$/;"	d
r	obj/net/ns.asm	/^    r = reassdatagrams;$/;"	d
r	obj/net/ns.asm	/^  r = reassdatagrams;$/;"	d
r	obj/net/testinput.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/net/testinput.asm	/^			r = 0;$/;"	d
r	obj/net/testinput.asm	/^		r = sys_env_set_pgfault_upcall(envid, _pgfault_upcall);$/;"	d
r	obj/net/testinput.asm	/^		r = sys_page_alloc(envid, (void*) (UXSTACKTOP - PGSIZE), PTE_P|PTE_U|PTE_W);$/;"	d
r	obj/net/testinput.asm	/^		r = sys_page_map(0, addr, envid, addr, perm);$/;"	d
r	obj/net/testinput.asm	/^	r = duppage(envid, VPN(USTACKTOP - PGSIZE));$/;"	d
r	obj/net/testinput.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/net/testinput.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/net/testinput.asm	/^	r = sys_page_alloc(envid, (void*) (UXSTACKTOP - PGSIZE), PTE_P|PTE_U|PTE_W);$/;"	d
r	obj/net/testinput.asm	/^	r = sys_page_map(0, addr, envid, addr, perm);$/;"	d
r	obj/net/testinput.asm	/^                r = sys_ipc_recv(&nsipcbuf);$/;"	d
r	obj/net/testoutput.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/net/testoutput.asm	/^			r = 0;$/;"	d
r	obj/net/testoutput.asm	/^		r = sys_env_set_pgfault_upcall(envid, _pgfault_upcall);$/;"	d
r	obj/net/testoutput.asm	/^		r = sys_page_alloc(envid, (void*) (UXSTACKTOP - PGSIZE), PTE_P|PTE_U|PTE_W);$/;"	d
r	obj/net/testoutput.asm	/^		r = sys_page_map(0, addr, envid, addr, perm);$/;"	d
r	obj/net/testoutput.asm	/^	r = duppage(envid, VPN(USTACKTOP - PGSIZE));$/;"	d
r	obj/net/testoutput.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/net/testoutput.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/net/testoutput.asm	/^	r = sys_page_alloc(envid, (void*) (UXSTACKTOP - PGSIZE), PTE_P|PTE_U|PTE_W);$/;"	d
r	obj/net/testoutput.asm	/^	r = sys_page_map(0, addr, envid, addr, perm);$/;"	d
r	obj/net/testoutput.asm	/^                r = sys_ipc_recv(&nsipcbuf);$/;"	d
r	obj/user/echosrv.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/echosrv.asm	/^			r = 0;$/;"	d
r	obj/user/echosrv.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/echosrv.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/echotest.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/echotest.asm	/^			r = 0;$/;"	d
r	obj/user/echotest.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/echotest.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/forktree.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/forktree.asm	/^			r = 0;$/;"	d
r	obj/user/forktree.asm	/^		r = sys_env_set_pgfault_upcall(envid, _pgfault_upcall);$/;"	d
r	obj/user/forktree.asm	/^		r = sys_page_alloc(envid, (void*) (UXSTACKTOP - PGSIZE), PTE_P|PTE_U|PTE_W);$/;"	d
r	obj/user/forktree.asm	/^		r = sys_page_map(0, addr, envid, addr, perm);$/;"	d
r	obj/user/forktree.asm	/^	r = duppage(envid, VPN(USTACKTOP - PGSIZE));$/;"	d
r	obj/user/forktree.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/forktree.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/forktree.asm	/^	r = sys_page_alloc(envid, (void*) (UXSTACKTOP - PGSIZE), PTE_P|PTE_U|PTE_W);$/;"	d
r	obj/user/forktree.asm	/^	r = sys_page_map(0, addr, envid, addr, perm);$/;"	d
r	obj/user/hello.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/hello.asm	/^			r = 0;$/;"	d
r	obj/user/hello.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/hello.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/httpd.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/httpd.asm	/^			r = 0;$/;"	d
r	obj/user/httpd.asm	/^		r = http_request_parse(req, buffer);$/;"	d
r	obj/user/httpd.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/httpd.asm	/^	r = snprintf(buf, 128, "Content-Type: %s\\r\\n", type);$/;"	d
r	obj/user/httpd.asm	/^	r = snprintf(buf, 512, "HTTP\/" HTTP_VERSION" %d %s\\r\\n"$/;"	d
r	obj/user/httpd.asm	/^	r = snprintf(buf, 64, "Content-Length: %ld\\r\\n", (long)size);$/;"	d
r	obj/user/httpd.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/icode.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/icode.asm	/^			r = 0;$/;"	d
r	obj/user/icode.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/icode.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/idle.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/idle.asm	/^			r = 0;$/;"	d
r	obj/user/idle.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/idle.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/init.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/init.asm	/^			r = 0;$/;"	d
r	obj/user/init.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/init.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/pingpong.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/pingpong.asm	/^			r = 0;$/;"	d
r	obj/user/pingpong.asm	/^		r = sys_env_set_pgfault_upcall(envid, _pgfault_upcall);$/;"	d
r	obj/user/pingpong.asm	/^		r = sys_page_alloc(envid, (void*) (UXSTACKTOP - PGSIZE), PTE_P|PTE_U|PTE_W);$/;"	d
r	obj/user/pingpong.asm	/^		r = sys_page_map(0, addr, envid, addr, perm);$/;"	d
r	obj/user/pingpong.asm	/^	r = duppage(envid, VPN(USTACKTOP - PGSIZE));$/;"	d
r	obj/user/pingpong.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/pingpong.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/pingpong.asm	/^	r = sys_page_alloc(envid, (void*) (UXSTACKTOP - PGSIZE), PTE_P|PTE_U|PTE_W);$/;"	d
r	obj/user/pingpong.asm	/^	r = sys_page_map(0, addr, envid, addr, perm);$/;"	d
r	obj/user/primes.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/primes.asm	/^			r = 0;$/;"	d
r	obj/user/primes.asm	/^		r = sys_env_set_pgfault_upcall(envid, _pgfault_upcall);$/;"	d
r	obj/user/primes.asm	/^		r = sys_page_alloc(envid, (void*) (UXSTACKTOP - PGSIZE), PTE_P|PTE_U|PTE_W);$/;"	d
r	obj/user/primes.asm	/^		r = sys_page_map(0, addr, envid, addr, perm);$/;"	d
r	obj/user/primes.asm	/^	r = duppage(envid, VPN(USTACKTOP - PGSIZE));$/;"	d
r	obj/user/primes.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/primes.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/primes.asm	/^	r = sys_page_alloc(envid, (void*) (UXSTACKTOP - PGSIZE), PTE_P|PTE_U|PTE_W);$/;"	d
r	obj/user/primes.asm	/^	r = sys_page_map(0, addr, envid, addr, perm);$/;"	d
r	obj/user/testfile.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testfile.asm	/^			r = 0;$/;"	d
r	obj/user/testfile.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testfile.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/testtime.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/testtime.asm	/^			r = 0;$/;"	d
r	obj/user/testtime.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/testtime.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r	obj/user/writemotd.asm	/^			r = (*dev->dev_close)(fd);$/;"	d
r	obj/user/writemotd.asm	/^			r = 0;$/;"	d
r	obj/user/writemotd.asm	/^	r = fstat(fd, stat);$/;"	d
r	obj/user/writemotd.asm	/^	r = sys_ipc_recv(pg);$/;"	d
r_id	net/lwip/core/snmp/mib_structs.c	/^  s32_t r_id;$/;"	m	struct:nse	file:
r_nl	net/lwip/core/snmp/mib_structs.c	/^  u8_t r_nl;$/;"	m	struct:nse	file:
r_ptr	net/lwip/core/snmp/mib_structs.c	/^  struct mib_node* r_ptr;$/;"	m	struct:nse	typeref:struct:nse::mib_node	file:
ram	net/lwip/core/mem.c	/^static u8_t *ram;$/;"	v	file:
ram	obj/net/ns.asm	/^  ram = LWIP_MEM_ALIGN(ram_heap);$/;"	d
ram_end	net/lwip/core/mem.c	/^static struct mem *ram_end;$/;"	v	typeref:struct:mem	file:
ram_end	obj/net/ns.asm	/^  ram_end = (struct mem *)&ram[MEM_SIZE_ALIGNED];$/;"	d
ram_heap	net/lwip/core/mem.c	/^static u8_t ram_heap[MEM_SIZE_ALIGNED + (2*SIZEOF_STRUCT_MEM) + MEM_ALIGNMENT];$/;"	v	file:
rambuf	obj/net/ns.asm	/^  rambuf = pbuf_alloc(PBUF_LINK, 0, PBUF_REF);$/;"	d
randCount	net/lwip/netif/ppp/randm.c	/^static long randCount = 0;      \/* Pseudo-random incrementer *\/$/;"	v	file:
randPool	net/lwip/netif/ppp/randm.c	/^static char randPool[RANDPOOLSZ];   \/* Pool of randomness. *\/$/;"	v	file:
raw	net/lwip/include/lwip/api.h	/^    struct raw_pcb *raw;$/;"	m	union:netconn::__anon19	typeref:struct:netconn::__anon19::raw_pcb
raw_bind	net/lwip/core/raw.c	/^raw_bind(struct raw_pcb *pcb, struct ip_addr *ipaddr)$/;"	f
raw_connect	net/lwip/core/raw.c	/^raw_connect(struct raw_pcb *pcb, struct ip_addr *ipaddr)$/;"	f
raw_init	net/lwip/include/lwip/raw.h	89;"	d
raw_input	net/lwip/core/raw.c	/^raw_input(struct pbuf *p, struct netif *inp)$/;"	f
raw_new	net/lwip/core/raw.c	/^raw_new(u8_t proto) {$/;"	f
raw_pcb	net/lwip/include/lwip/raw.h	/^struct raw_pcb {$/;"	s
raw_pcbs	net/lwip/core/raw.c	/^static struct raw_pcb *raw_pcbs;$/;"	v	typeref:struct:raw_pcb	file:
raw_pcbs	obj/net/ns.asm	/^            raw_pcbs = pcb;$/;"	d
raw_pcbs	obj/net/ns.asm	/^    raw_pcbs = pcb;$/;"	d
raw_pcbs	obj/net/ns.asm	/^    raw_pcbs = raw_pcbs->next;$/;"	d
raw_recv	net/lwip/core/raw.c	/^raw_recv(struct raw_pcb *pcb,$/;"	f
raw_remove	net/lwip/core/raw.c	/^raw_remove(struct raw_pcb *pcb)$/;"	f
raw_send	net/lwip/core/raw.c	/^raw_send(struct raw_pcb *pcb, struct pbuf *p)$/;"	f
raw_sendto	net/lwip/core/raw.c	/^raw_sendto(struct raw_pcb *pcb, struct pbuf *p, struct ip_addr *ipaddr)$/;"	f
rbp	obj/kern/kernel.asm	/^		rbp = (uint64_t *)(*rbp);$/;"	d
rbp	obj/kern/kernel.asm	/^		rbp = (uint64_t *)rbp[0]; \/\/ saved %rbp$/;"	d
rbp	obj/kern/kernel.asm	/^	rbp = (uint64_t *)read_rbp();$/;"	d
rc	obj/fs/fs.asm	/^	rc = vsnprintf(buf, n, fmt, aq);$/;"	d
rc	obj/kern/kernel.asm	/^	rc = vsnprintf(buf, n, fmt, aq);$/;"	d
rc	obj/net/ns.asm	/^	rc = vsnprintf(buf, n, fmt, aq);$/;"	d
rc	obj/net/testinput.asm	/^	rc = vsnprintf(buf, n, fmt, aq);$/;"	d
rc	obj/net/testoutput.asm	/^	rc = vsnprintf(buf, n, fmt, aq);$/;"	d
rc	obj/user/echosrv.asm	/^	rc = vsnprintf(buf, n, fmt, aq);$/;"	d
rc	obj/user/echotest.asm	/^	rc = vsnprintf(buf, n, fmt, aq);$/;"	d
rc	obj/user/forktree.asm	/^	rc = vsnprintf(buf, n, fmt, aq);$/;"	d
rc	obj/user/hello.asm	/^	rc = vsnprintf(buf, n, fmt, aq);$/;"	d
rc	obj/user/httpd.asm	/^	rc = vsnprintf(buf, n, fmt, aq);$/;"	d
rc	obj/user/icode.asm	/^	rc = vsnprintf(buf, n, fmt, aq);$/;"	d
rc	obj/user/idle.asm	/^	rc = vsnprintf(buf, n, fmt, aq);$/;"	d
rc	obj/user/init.asm	/^	rc = vsnprintf(buf, n, fmt, aq);$/;"	d
rc	obj/user/pingpong.asm	/^	rc = vsnprintf(buf, n, fmt, aq);$/;"	d
rc	obj/user/primes.asm	/^	rc = vsnprintf(buf, n, fmt, aq);$/;"	d
rc	obj/user/testfile.asm	/^	rc = vsnprintf(buf, n, fmt, aq);$/;"	d
rc	obj/user/testtime.asm	/^	rc = vsnprintf(buf, n, fmt, aq);$/;"	d
rc	obj/user/writemotd.asm	/^	rc = vsnprintf(buf, n, fmt, aq);$/;"	d
rcr0	inc/x86.h	/^rcr0(void)$/;"	f
rcr2	inc/x86.h	/^rcr2(void)$/;"	f
rcr3	inc/x86.h	/^rcr3(void)$/;"	f
rcr4	inc/x86.h	/^rcr4(void)$/;"	f
rcv_ann_wnd	net/lwip/include/lwip/tcp.h	/^  u16_t rcv_ann_wnd; \/* announced receive window *\/$/;"	m	struct:tcp_pcb
rcv_desc	kern/e1000.h	/^struct rcv_desc$/;"	s
rcv_desc_array	kern/e1000.c	/^struct rcv_desc rcv_desc_array[E1000_RCVDESC] __attribute__ ((aligned (16)));$/;"	v	typeref:struct:rcv_desc
rcv_nxt	net/lwip/include/lwip/tcp.h	/^  u32_t rcv_nxt;   \/* next seqno expected *\/$/;"	m	struct:tcp_pcb
rcv_pkt	kern/e1000.h	/^struct rcv_pkt$/;"	s
rcv_pkt_bufs	kern/e1000.c	/^struct rcv_pkt rcv_pkt_bufs[E1000_RCVDESC];$/;"	v	typeref:struct:rcv_pkt
rcv_wnd	net/lwip/include/lwip/tcp.h	/^  u16_t rcv_wnd;   \/* receiver window *\/$/;"	m	struct:tcp_pcb
rcvevent	net/lwip/api/sockets.c	/^  u16_t rcvevent;$/;"	m	struct:lwip_socket	file:
rdt	obj/kern/kernel.asm	/^        rdt = e1000[E1000_RDT];$/;"	d
re	grade-lab1	/^import re$/;"	i
re	grade-lab4	/^import re$/;"	i
re	grade-lab6	/^import os, re, threading, socket, time, urllib2, shutil, struct, difflib$/;"	i
re	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
read	inc/fs.h	/^	} read;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_read
read	lib/fd.c	/^read(int fdnum, void *buf, size_t n)$/;"	f
read	net/lwip/include/lwip/sockets.h	345;"	d
readRet	inc/fs.h	/^	} readRet;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsret_read
read_disk	boot/boot.S	/^read_disk:$/;"	l
read_disk	obj/boot/boot.asm	/^read_disk:$/;"	l
read_eflags	inc/x86.h	/^read_eflags(void)$/;"	f
read_pcap	grade-lab6	/^def read_pcap():$/;"	f
read_rbp	inc/x86.h	/^read_rbp(void)$/;"	f
read_rsp	inc/x86.h	/^read_rsp(void)$/;"	f
read_tsc	inc/x86.h	/^read_tsc(void)$/;"	f
readdeps	mergedep.pl	/^sub readdeps {$/;"	s
readline	lib/readline.c	/^readline(const char *prompt)$/;"	f
readn	fs/fsformat.c	/^readn(int f, void *out, size_t n)$/;"	f
readn	lib/fd.c	/^readn(int fdnum, void *buf, size_t n)$/;"	f
readsect	boot/main.c	/^readsect(void *dst, uint32_t offset)$/;"	f
readsect	boot1/main.c	/^readsect(void *dst, uint64_t offset)$/;"	f
readseg	boot/main.c	/^readseg(uint32_t pa, uint32_t count, uint32_t offset)$/;"	f
readseg	boot1/main.c	/^readseg(uint64_t pa, uint64_t count, uint64_t offset)$/;"	f
readset	net/lwip/api/sockets.c	/^  fd_set *readset;$/;"	m	struct:lwip_select_cb	file:
ready	grade-lab6	/^        def ready(line):$/;"	f	function:mk_test_httpd.test_httpd_test
ready	grade-lab6	/^    def ready(line):$/;"	f	function:test_echosrv
reassdatagrams	net/lwip/core/ipv4/ip_frag.c	/^static struct ip_reassdata *reassdatagrams;$/;"	v	typeref:struct:ip_reassdata	file:
reassdatagrams	obj/net/ns.asm	/^    reassdatagrams = ipr->next;$/;"	d
reassdatagrams	obj/net/ns.asm	/^  reassdatagrams = ipr;$/;"	d
rebind	obj/net/ns.asm	/^      rebind = 1;$/;"	d
rebind	obj/net/ns.asm	/^  rebind = 0;$/;"	d
recv	inc/ns.h	/^	} recv;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_recv
recv	net/lwip/include/lwip/raw.h	/^  u8_t (* recv)(void *arg, struct raw_pcb *pcb, struct pbuf *p,$/;"	m	struct:raw_pcb
recv	net/lwip/include/lwip/sockets.h	336;"	d
recv	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER recv;             \/* Received packets. *\/$/;"	m	struct:stats_proto
recv	net/lwip/include/lwip/tcp.h	/^  err_t (* recv)(void *arg, struct tcp_pcb *pcb, struct pbuf *p, err_t err);$/;"	m	struct:tcp_pcb
recv	net/lwip/include/lwip/udp.h	/^  void (* recv)(void *arg, struct udp_pcb *pcb, struct pbuf *p,$/;"	m	struct:udp_pcb
recvRet	inc/ns.h	/^	} recvRet;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsret_recv
recv_arg	net/lwip/include/lwip/raw.h	/^  void *recv_arg;$/;"	m	struct:raw_pcb
recv_arg	net/lwip/include/lwip/udp.h	/^  void *recv_arg;  $/;"	m	struct:udp_pcb
recv_avail	net/lwip/include/lwip/api.h	/^  u16_t recv_avail;$/;"	m	struct:netconn
recv_bufsize	net/lwip/include/lwip/api.h	/^  int recv_bufsize;$/;"	m	struct:netconn
recv_data	net/lwip/core/tcp_in.c	/^static struct pbuf *recv_data;$/;"	v	typeref:struct:pbuf	file:
recv_data	obj/net/ns.asm	/^              recv_data = cseg->p;$/;"	d
recv_data	obj/net/ns.asm	/^          recv_data = inseg.p;$/;"	d
recv_data	obj/net/ns.asm	/^    recv_data = NULL;$/;"	d
recv_flags	net/lwip/core/tcp_in.c	/^static u8_t recv_flags;$/;"	v	file:
recv_flags	obj/net/ns.asm	/^            recv_flags = TF_GOT_FIN;$/;"	d
recv_flags	obj/net/ns.asm	/^          recv_flags = TF_GOT_FIN;$/;"	d
recv_flags	obj/net/ns.asm	/^      recv_flags = TF_CLOSED;$/;"	d
recv_flags	obj/net/ns.asm	/^      recv_flags = TF_RESET;$/;"	d
recv_flags	obj/net/ns.asm	/^    recv_flags = 0;$/;"	d
recv_idle	net/lwip/netif/ppp/ppp.h	/^  u_short recv_idle;      \/* seconds since last NP packet received *\/$/;"	m	struct:ppp_idle
recv_raw	net/lwip/api/api_msg.c	/^recv_raw(void *arg, struct raw_pcb *pcb, struct pbuf *p,$/;"	f	file:
recv_tcp	net/lwip/api/api_msg.c	/^recv_tcp(void *arg, struct tcp_pcb *pcb, struct pbuf *p, err_t err)$/;"	f	file:
recv_timeout	net/lwip/include/lwip/api.h	/^  int recv_timeout;$/;"	m	struct:netconn
recv_udp	net/lwip/api/api_msg.c	/^recv_udp(void *arg, struct udp_pcb *pcb, struct pbuf *p,$/;"	f	file:
recvfrom	net/lwip/include/lwip/sockets.h	337;"	d
recvmbox	net/lwip/include/lwip/api.h	/^  sys_mbox_t recvmbox;$/;"	m	struct:netconn
ref	net/lwip/include/lwip/pbuf.h	/^  u16_t ref;$/;"	m	struct:pbuf
ref	obj/net/ns.asm	/^		ref = (uint32_t*) (ROUNDUP(mptr, PGSIZE) - 4);$/;"	d
ref	obj/net/ns.asm	/^	ref = (uint32_t*) (c + PGSIZE - 4);$/;"	d
ref	obj/net/ns.asm	/^	ref = (uint32_t*) (mptr + i - 4);$/;"	d
ref	obj/net/ns.asm	/^    ref = --(p->ref);$/;"	d
ref	obj/user/httpd.asm	/^		ref = (uint32_t*) (ROUNDUP(mptr, PGSIZE) - 4);$/;"	d
ref	obj/user/httpd.asm	/^	ref = (uint32_t*) (c + PGSIZE - 4);$/;"	d
ref	obj/user/httpd.asm	/^	ref = (uint32_t*) (mptr + i - 4);$/;"	d
refuse_chap	net/lwip/netif/ppp/ppp.h	/^  u_int  refuse_chap       : 1;       \/* Don't wanna auth. ourselves with CHAP *\/$/;"	m	struct:ppp_settings
refuse_pap	net/lwip/netif/ppp/ppp.h	/^  u_int  refuse_pap        : 1;       \/* Don't wanna auth. ourselves with PAP *\/$/;"	m	struct:ppp_settings
refused_data	net/lwip/include/lwip/tcp.h	/^  struct pbuf *refused_data; \/* Data previously received but not yet taken by upper layer *\/$/;"	m	struct:tcp_pcb	typeref:struct:tcp_pcb::pbuf
reg_base	kern/pci.h	/^    uint32_t reg_base[6];$/;"	m	struct:pci_func
reg_r10	inc/trap.h	/^    uint64_t reg_r10;$/;"	m	struct:PushRegs
reg_r11	inc/trap.h	/^    uint64_t reg_r11;$/;"	m	struct:PushRegs
reg_r12	inc/trap.h	/^    uint64_t reg_r12;$/;"	m	struct:PushRegs
reg_r13	inc/trap.h	/^    uint64_t reg_r13;$/;"	m	struct:PushRegs
reg_r14	inc/trap.h	/^    uint64_t reg_r14;$/;"	m	struct:PushRegs
reg_r15	inc/trap.h	/^    uint64_t reg_r15;$/;"	m	struct:PushRegs
reg_r8	inc/trap.h	/^    uint64_t reg_r8;$/;"	m	struct:PushRegs
reg_r9	inc/trap.h	/^    uint64_t reg_r9;$/;"	m	struct:PushRegs
reg_rax	inc/trap.h	/^	uint64_t reg_rax;$/;"	m	struct:PushRegs
reg_rbp	inc/trap.h	/^	uint64_t reg_rbp;$/;"	m	struct:PushRegs
reg_rbx	inc/trap.h	/^	uint64_t reg_rbx;$/;"	m	struct:PushRegs
reg_rcx	inc/trap.h	/^	uint64_t reg_rcx;$/;"	m	struct:PushRegs
reg_rdi	inc/trap.h	/^	uint64_t reg_rdi;$/;"	m	struct:PushRegs
reg_rdx	inc/trap.h	/^	uint64_t reg_rdx;$/;"	m	struct:PushRegs
reg_rsi	inc/trap.h	/^	uint64_t reg_rsi;$/;"	m	struct:PushRegs
reg_size	kern/pci.h	/^    uint32_t reg_size[6];$/;"	m	struct:pci_func
region_alloc	kern/env.c	/^region_alloc(struct Env *e, void *va, size_t len)$/;"	f	file:
register_test	gradelib.py	/^    def register_test(fn, title=title):$/;"	f	function:test
regs	user/faultregs.c	/^	struct PushRegs regs;$/;"	m	struct:regs	typeref:struct:regs::PushRegs	file:
regs	user/faultregs.c	/^struct regs$/;"	s	file:
rejci	net/lwip/netif/ppp/fsm.h	/^  int  (*rejci)(fsm*, u_char*, int);                \/* Reject our Configuration Information *\/$/;"	m	struct:fsm_callbacks
relocate_mbr	boot/boot.S	/^relocate_mbr:$/;"	l
relocate_mbr	obj/boot/boot.asm	/^relocate_mbr:$/;"	l
relocated	kern/entry.S	/^relocated:$/;"	l
relocated	obj/kern/kernel.asm	/^relocated:$/;"	l
rem	obj/net/ns.asm	/^      rem = *ap % (u8_t)10;$/;"	d
rem	obj/net/testinput.asm	/^      rem = *ap % (u8_t)10;$/;"	d
rem	obj/user/echosrv.asm	/^      rem = *ap % (u8_t)10;$/;"	d
rem	obj/user/echotest.asm	/^      rem = *ap % (u8_t)10;$/;"	d
rem	obj/user/httpd.asm	/^      rem = *ap % (u8_t)10;$/;"	d
rem_len	obj/net/ns.asm	/^    rem_len = length - p->len;$/;"	d
rem_len	obj/net/ns.asm	/^  rem_len = new_len;$/;"	d
remote_name	net/lwip/netif/ppp/ppp.h	/^  char remote_name[MAXNAMELEN   + 1]; \/* Peer's name for authentication *\/$/;"	m	struct:ppp_settings
remote_port	net/lwip/include/lwip/tcp.h	/^  u16_t remote_port;$/;"	m	struct:tcp_pcb
remote_port	net/lwip/include/lwip/udp.h	/^  u16_t local_port, remote_port;$/;"	m	struct:udp_pcb
remote_port	obj/net/ns.asm	/^    remote_port      = 0;$/;"	d
remote_port	obj/net/ns.asm	/^    remote_port      = ntohs(((struct sockaddr_in *)to)->sin_port);$/;"	d
remote_port	obj/net/ns.asm	/^    remote_port = ((struct sockaddr_in *)name)->sin_port;$/;"	d
remote_port	obj/net/ns.asm	/^    remote_port = pcb->remote_port;$/;"	d
remove	inc/fs.h	/^	} remove;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_remove
remove	lib/file.c	/^remove(const char *path)$/;"	f
report_rxed	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER report_rxed;      \/* *\/$/;"	m	struct:stats_igmp
report_sent	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER report_sent;      \/* *\/$/;"	m	struct:stats_igmp
req	net/serv.c	/^	union Nsipc *req;$/;"	m	struct:st_args	typeref:union:st_args::Nsipc	file:
req	obj/fs/fs.asm	/^		req = ipc_recv((int32_t *) &whom, fsreq, &perm);$/;"	d
req_addr	net/lwip/netif/ppp/ipcp.h	/^  u_int   req_addr      : 1; \/* Ask peer to send IP address? *\/$/;"	m	struct:ipcp_options
req_backlog	inc/ns.h	/^		int req_backlog;$/;"	m	struct:Nsipc::Nsreq_listen
req_buf	inc/fs.h	/^		char req_buf[PGSIZE - (sizeof(int) + sizeof(size_t))];$/;"	m	struct:Fsipc::Fsreq_write
req_buf	inc/ns.h	/^		char req_buf[0];$/;"	m	struct:Nsipc::Nsreq_send
req_dns1	net/lwip/netif/ppp/ipcp.h	/^  u_int   req_dns1      : 1; \/* Ask peer to send primary DNS address? *\/$/;"	m	struct:ipcp_options
req_dns2	net/lwip/netif/ppp/ipcp.h	/^  u_int   req_dns2      : 1; \/* Ask peer to send secondary DNS address? *\/$/;"	m	struct:ipcp_options
req_domain	inc/ns.h	/^		int req_domain;$/;"	m	struct:Nsipc::Nsreq_socket
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_flush
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_read
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_set_size
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_stat
req_fileid	inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_write
req_flags	inc/ns.h	/^		unsigned int req_flags;$/;"	m	struct:Nsipc::Nsreq_recv
req_flags	inc/ns.h	/^		unsigned int req_flags;$/;"	m	struct:Nsipc::Nsreq_send
req_free	user/httpd.c	/^req_free(struct http_request *req)$/;"	f	file:
req_how	inc/ns.h	/^		int req_how;$/;"	m	struct:Nsipc::Nsreq_shutdown
req_len	inc/ns.h	/^		int req_len;$/;"	m	struct:Nsipc::Nsreq_recv
req_n	inc/fs.h	/^		size_t req_n;$/;"	m	struct:Fsipc::Fsreq_read
req_n	inc/fs.h	/^		size_t req_n;$/;"	m	struct:Fsipc::Fsreq_write
req_name	inc/ns.h	/^		struct sockaddr req_name;$/;"	m	struct:Nsipc::Nsreq_bind	typeref:struct:Nsipc::Nsreq_bind::sockaddr
req_name	inc/ns.h	/^		struct sockaddr req_name;$/;"	m	struct:Nsipc::Nsreq_connect	typeref:struct:Nsipc::Nsreq_connect::sockaddr
req_namelen	inc/ns.h	/^		socklen_t req_namelen;$/;"	m	struct:Nsipc::Nsreq_bind
req_namelen	inc/ns.h	/^		socklen_t req_namelen;$/;"	m	struct:Nsipc::Nsreq_connect
req_omode	inc/fs.h	/^		int req_omode;$/;"	m	struct:Fsipc::Fsreq_open
req_path	inc/fs.h	/^		char req_path[MAXPATHLEN];$/;"	m	struct:Fsipc::Fsreq_open
req_path	inc/fs.h	/^		char req_path[MAXPATHLEN];$/;"	m	struct:Fsipc::Fsreq_remove
req_protocol	inc/ns.h	/^		int req_protocol;$/;"	m	struct:Nsipc::Nsreq_socket
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_accept
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_bind
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_close
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_connect
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_listen
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_recv
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_send
req_s	inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_shutdown
req_size	inc/fs.h	/^		off_t req_size;$/;"	m	struct:Fsipc::Fsreq_set_size
req_size	inc/ns.h	/^		int req_size;$/;"	m	struct:Nsipc::Nsreq_send
req_type	inc/ns.h	/^		int req_type;$/;"	m	struct:Nsipc::Nsreq_socket
reqci	net/lwip/netif/ppp/fsm.h	/^  int  (*reqci)(fsm*, u_char*, int*, int);          \/* Request peer's Configuration Information *\/$/;"	m	struct:fsm_callbacks
reqid	net/lwip/netif/ppp/fsm.h	/^  u_char reqid;                    \/* Current request id *\/$/;"	m	struct:fsm
reqno	net/serv.c	/^	int32_t reqno;$/;"	m	struct:st_args	file:
reqno	obj/net/ns.asm	/^		reqno = ipc_recv((int32_t *) &whom, (void *) va, &perm);$/;"	d
request_timeout	net/lwip/include/lwip/dhcp.h	/^  u16_t request_timeout; \/* #ticks with period DHCP_FINE_TIMER_SECS for request timeout *\/$/;"	m	struct:dhcp
reserved	kern/mpconfig.c	/^	uint8_t reserved;$/;"	m	struct:mpconf	file:
reserved	kern/mpconfig.c	/^	uint8_t reserved[3];$/;"	m	struct:mp	file:
reserved	kern/mpconfig.c	/^	uint8_t reserved[8];$/;"	m	struct:mpproc	file:
reset_fs	gradelib.py	/^def reset_fs():$/;"	f
resetci	net/lwip/netif/ppp/fsm.h	/^  void (*resetci)(fsm*);                            \/* Reset our Configuration Information *\/$/;"	m	struct:fsm_callbacks
resp_id	net/lwip/netif/ppp/chap.h	/^  u_char resp_id;                         \/* ID for response messages *\/$/;"	m	struct:chap_state
resp_length	net/lwip/netif/ppp/chap.h	/^  u_char resp_length;                     \/* length of response *\/$/;"	m	struct:chap_state
resp_name	net/lwip/netif/ppp/chap.h	/^  char *resp_name;                        \/* Our name to send with response *\/$/;"	m	struct:chap_state
resp_transmits	net/lwip/netif/ppp/chap.h	/^  int resp_transmits;                     \/* Number of transmissions of response *\/$/;"	m	struct:chap_state
resp_type	net/lwip/netif/ppp/chap.h	/^  u_char resp_type;                       \/* hash algorithm for responses *\/$/;"	m	struct:chap_state
responce_header	user/httpd.c	/^struct responce_header {$/;"	s	file:
response	net/lwip/netif/ppp/chap.h	/^  u_char response[MAX_RESPONSE_LENGTH];   \/* Response to send *\/$/;"	m	struct:chap_state
restart	net/lwip/netif/ppp/lcp.h	/^    u_int restart           : 1; \/* Restart vs. exit after close *\/$/;"	m	struct:lcp_options
result	lib/fprintf.c	/^	ssize_t result;	\/\/ accumulated results from write$/;"	m	struct:printbuf	file:
result	obj/kern/kernel.asm	/^	result = env_alloc(&e, thiscpu->cpu_env->env_id);$/;"	d
result	obj/kern/kernel.asm	/^	result = envid2env(envid, &e, 1);$/;"	d
result	obj/kern/kernel.asm	/^	result = nextfree;$/;"	d
result	obj/kern/kernel.asm	/^	result = page_insert(e->env_pml4e, p, ROUNDDOWN(va, PGSIZE), perm);$/;"	d
result	obj/kern/kernel.asm	/^        result = envid2env(envid, &e, 1);$/;"	d
result	obj/net/ns.asm	/^          result = ERR_OK;$/;"	d
result	obj/net/ns.asm	/^      result = etharp_send_ip(netif, q, srcaddr, &(arp_table[i].ethaddr));$/;"	d
result	obj/net/ns.asm	/^    result = etharp_request(netif, ipaddr);$/;"	d
result	obj/net/ns.asm	/^  result = dhcp_create_request(netif);$/;"	d
result	obj/net/ns.asm	/^  result = dhcp_discover(netif);$/;"	d
result	obj/net/ns.asm	/^  result = etharp_query(netif, &dhcp->offered_ip_addr, NULL);$/;"	d
result	obj/net/ns.asm	/^  result = netif->linkoutput(netif, p);$/;"	d
result_dst	obj/kern/kernel.asm	/^	result_dst = envid2env(dstenvid, &dst_env, 1);$/;"	d
result_dst	obj/kern/kernel.asm	/^	result_dst = page_insert(dst_env->env_pml4e, src_page, dstva, perm);$/;"	d
result_src	obj/kern/kernel.asm	/^	result_src = envid2env(srcenvid, &src_env, 1);$/;"	d
reswitch	obj/fs/fs.asm	/^	reswitch:$/;"	l
reswitch	obj/kern/kernel.asm	/^	reswitch:$/;"	l
reswitch	obj/net/ns.asm	/^	reswitch:$/;"	l
reswitch	obj/net/testinput.asm	/^	reswitch:$/;"	l
reswitch	obj/net/testoutput.asm	/^	reswitch:$/;"	l
reswitch	obj/user/echosrv.asm	/^	reswitch:$/;"	l
reswitch	obj/user/echotest.asm	/^	reswitch:$/;"	l
reswitch	obj/user/forktree.asm	/^	reswitch:$/;"	l
reswitch	obj/user/hello.asm	/^	reswitch:$/;"	l
reswitch	obj/user/httpd.asm	/^	reswitch:$/;"	l
reswitch	obj/user/icode.asm	/^	reswitch:$/;"	l
reswitch	obj/user/idle.asm	/^	reswitch:$/;"	l
reswitch	obj/user/init.asm	/^	reswitch:$/;"	l
reswitch	obj/user/pingpong.asm	/^	reswitch:$/;"	l
reswitch	obj/user/primes.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testfile.asm	/^	reswitch:$/;"	l
reswitch	obj/user/testtime.asm	/^	reswitch:$/;"	l
reswitch	obj/user/writemotd.asm	/^	reswitch:$/;"	l
ret	obj/fs/fs.asm	/^	ret = dst;$/;"	d
ret	obj/kern/kernel.asm	/^	ret = dst;$/;"	d
ret	obj/net/ns.asm	/^	ret = dst;$/;"	d
ret	obj/net/ns.asm	/^      ret = ip_output_if(p, &(iphdr->src), IP_HDRINCL,$/;"	d
ret	obj/net/ns.asm	/^    ret = pbuf_copy_partial(dhcp->p, dhcp->options_in, dhcp->options_in_len, sizeof(struct dhcp_msg) - DHCP_OPTIONS_LEN);$/;"	d
ret	obj/net/ns.asm	/^  ret = pbuf_copy_partial(dhcp->p, dhcp->msg_in, sizeof(struct dhcp_msg) - DHCP_OPTIONS_LEN, 0);$/;"	d
ret	obj/net/ns.asm	/^  ret = tcp_enqueue(pcb, NULL, 0, TCP_SYN, 0, (u8_t *)&optdata, 4);$/;"	d
ret	obj/net/testinput.asm	/^	ret = dst;$/;"	d
ret	obj/net/testoutput.asm	/^	ret = dst;$/;"	d
ret	obj/user/echosrv.asm	/^	ret = dst;$/;"	d
ret	obj/user/echotest.asm	/^	ret = dst;$/;"	d
ret	obj/user/forktree.asm	/^	ret = dst;$/;"	d
ret	obj/user/hello.asm	/^	ret = dst;$/;"	d
ret	obj/user/httpd.asm	/^	ret = dst;$/;"	d
ret	obj/user/icode.asm	/^	ret = dst;$/;"	d
ret	obj/user/idle.asm	/^	ret = dst;$/;"	d
ret	obj/user/init.asm	/^	ret = dst;$/;"	d
ret	obj/user/pingpong.asm	/^	ret = dst;$/;"	d
ret	obj/user/primes.asm	/^	ret = dst;$/;"	d
ret	obj/user/testfile.asm	/^	ret = dst;$/;"	d
ret	obj/user/testtime.asm	/^	ret = dst;$/;"	d
ret	obj/user/writemotd.asm	/^	ret = dst;$/;"	d
ret_addr	inc/ns.h	/^		struct sockaddr ret_addr;$/;"	m	struct:Nsipc::Nsret_accept	typeref:struct:Nsipc::Nsret_accept::sockaddr
ret_addrlen	inc/ns.h	/^		socklen_t ret_addrlen;$/;"	m	struct:Nsipc::Nsret_accept
ret_buf	inc/fs.h	/^		char ret_buf[PGSIZE];$/;"	m	struct:Fsipc::Fsret_read
ret_buf	inc/ns.h	/^		char ret_buf[0];$/;"	m	struct:Nsipc::Nsret_recv
ret_isdir	inc/fs.h	/^		int ret_isdir;$/;"	m	struct:Fsipc::Fsret_stat
ret_name	inc/fs.h	/^		char ret_name[MAXNAMELEN];$/;"	m	struct:Fsipc::Fsret_stat
ret_size	inc/fs.h	/^		off_t ret_size;$/;"	m	struct:Fsipc::Fsret_stat
retransmit	net/lwip/netif/ppp/fsm.h	/^  void (*retransmit)(fsm*);                         \/* Retransmission is necessary *\/$/;"	m	struct:fsm_callbacks
retransmits	net/lwip/netif/ppp/fsm.h	/^  int retransmits;                 \/* Number of retransmissions left *\/$/;"	m	struct:fsm
retries	net/lwip/core/dns.c	/^  u8_t  retries;$/;"	m	struct:dns_table_entry	file:
rfile	obj/kern/kernel.asm	/^	rfile = (stab_end - stabs) - 1;$/;"	d
rfun	obj/kern/kernel.asm	/^	rfun = rfile;$/;"	d
rhl	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_resp_header_lengths rhl;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_resp_header_lengths
rid	net/lwip/include/lwip/snmp_msg.h	/^  s32_t rid;$/;"	m	struct:snmp_msg_pstat
ridlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t ridlen;$/;"	m	struct:snmp_resp_header_lengths
ridlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t ridlenlen;$/;"	m	struct:snmp_resp_header_lengths
right_wnd_edge	obj/net/ns.asm	/^    right_wnd_edge = pcb->snd_wnd + pcb->snd_wl1;$/;"	d
rip_file	kern/kdebug.h	/^	const char *rip_file;		\/\/ Source code filename for RIP$/;"	m	struct:Ripdebuginfo
rip_fn_addr	kern/kdebug.h	/^	uintptr_t rip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Ripdebuginfo
rip_fn_name	kern/kdebug.h	/^	const char *rip_fn_name;	\/\/ Name of function containing RIP$/;"	m	struct:Ripdebuginfo
rip_fn_namelen	kern/kdebug.h	/^	int rip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Ripdebuginfo
rip_fn_narg	kern/kdebug.h	/^	int rip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Ripdebuginfo
rip_line	kern/kdebug.h	/^	int rip_line;			\/\/ Source code linenumber for RIP$/;"	m	struct:Ripdebuginfo
rline	obj/kern/kernel.asm	/^		rline = rfile;$/;"	d
rline	obj/kern/kernel.asm	/^		rline = rfun;$/;"	d
rp	obj/net/ns.asm	/^  rp = str;$/;"	d
rp	obj/net/testinput.asm	/^  rp = str;$/;"	d
rp	obj/user/echosrv.asm	/^  rp = str;$/;"	d
rp	obj/user/echotest.asm	/^  rp = str;$/;"	d
rp	obj/user/httpd.asm	/^  rp = str;$/;"	d
rpos	kern/console.c	/^	uint32_t rpos;$/;"	m	struct:__anon9	file:
rseg	obj/net/ns.asm	/^      rseg = pcb->unacked;$/;"	d
rstate	net/lwip/netif/ppp/vj.h	/^  struct cstate rstate[MAX_SLOTS]; \/* receive connection states *\/$/;"	m	struct:vjcompress	typeref:struct:vjcompress::cstate
rt	net/lwip/include/lwip/snmp_msg.h	/^  u8_t rt;$/;"	m	struct:snmp_msg_pstat
rterr	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER rterr;            \/* Routing error. *\/$/;"	m	struct:stats_proto
rtime	net/lwip/include/lwip/tcp.h	/^  s16_t rtime;$/;"	m	struct:tcp_pcb
rto	net/lwip/include/lwip/tcp.h	/^  s16_t rto;    \/* retransmission time-out *\/$/;"	m	struct:tcp_pcb
rtseq	net/lwip/include/lwip/tcp.h	/^  u32_t rtseq;  \/* sequence number being timed *\/$/;"	m	struct:tcp_pcb
rttest	net/lwip/include/lwip/tcp.h	/^  u32_t rttest; \/* RTT estimate in 500ms ticks *\/$/;"	m	struct:tcp_pcb
run_qemu	gradelib.py	/^    def run_qemu(self, *monitors, **kw):$/;"	m	class:Runner
run_qemu_kw	gradelib.py	/^        def run_qemu_kw(target_base="qemu", make_args=[], timeout=30):$/;"	f	function:Runner.run_qemu
run_test	gradelib.py	/^        def run_test():$/;"	f	function:test.register_test
run_tests	gradelib.py	/^def run_tests():$/;"	f
runcmd	kern/monitor.c	/^runcmd(char *buf, struct Trapframe *tf)$/;"	f	file:
s	net/lwip/api/sockets.c	/^  int s;$/;"	m	struct:lwip_setgetsockopt_data	file:
s	obj/fs/fs.asm	/^	s = src;$/;"	d
s	obj/kern/kernel.asm	/^	s = src;$/;"	d
s	obj/net/ns.asm	/^	s = src;$/;"	d
s	obj/net/ns.asm	/^    s = conn->socket;$/;"	d
s	obj/net/ns.asm	/^  s = data->s;$/;"	d
s	obj/net/testinput.asm	/^	s = src;$/;"	d
s	obj/net/testoutput.asm	/^	s = src;$/;"	d
s	obj/user/echosrv.asm	/^	s = src;$/;"	d
s	obj/user/echotest.asm	/^	s = src;$/;"	d
s	obj/user/forktree.asm	/^	s = src;$/;"	d
s	obj/user/hello.asm	/^	s = src;$/;"	d
s	obj/user/httpd.asm	/^	s = src;$/;"	d
s	obj/user/icode.asm	/^	s = src;$/;"	d
s	obj/user/idle.asm	/^	s = src;$/;"	d
s	obj/user/init.asm	/^	s = src;$/;"	d
s	obj/user/pingpong.asm	/^	s = src;$/;"	d
s	obj/user/primes.asm	/^	s = src;$/;"	d
s	obj/user/testfile.asm	/^	s = src;$/;"	d
s	obj/user/testtime.asm	/^	s = src;$/;"	d
s	obj/user/writemotd.asm	/^	s = src;$/;"	d
s16_t	net/lwip/jos/arch/cc.h	/^typedef int16_t s16_t;$/;"	t
s32_t	net/lwip/jos/arch/cc.h	/^typedef int32_t s32_t;$/;"	t
s64_t	net/lwip/jos/arch/cc.h	/^typedef int64_t s64_t;$/;"	t
s8_t	net/lwip/jos/arch/cc.h	/^typedef int8_t s8_t;$/;"	t
s8_t	obj/net/ns.asm	/^s8_t$/;"	l
s_addr	net/lwip/include/ipv4/lwip/inet.h	/^  u32_t s_addr;$/;"	m	struct:in_addr
s_magic	inc/fs.h	/^	uint32_t s_magic;		\/\/ Magic number: FS_MAGIC$/;"	m	struct:Super
s_nblocks	inc/fs.h	/^	uint32_t s_nblocks;		\/\/ Total number of blocks on disk$/;"	m	struct:Super
s_root	inc/fs.h	/^	struct File s_root;		\/\/ Root directory node$/;"	m	struct:Super	typeref:struct:Super::File
sa	net/lwip/include/lwip/tcp.h	/^  s16_t sa, sv; \/* @todo document this *\/$/;"	m	struct:tcp_pcb
sa_data	net/lwip/include/lwip/sockets.h	/^  char sa_data[14];$/;"	m	struct:sockaddr
sa_family	net/lwip/include/lwip/sockets.h	/^  u8_t sa_family;$/;"	m	struct:sockaddr
sa_len	net/lwip/include/lwip/sockets.h	/^  u8_t sa_len;$/;"	m	struct:sockaddr
save	gradelib.py	/^def save(path):$/;"	f
save_on_finish	gradelib.py	/^    def save_on_finish(fail):$/;"	f	function:save
save_pcap	grade-lab6	/^    def save_pcap(fail):$/;"	f	function:save_pcap_on_fail
save_pcap_on_fail	grade-lab6	/^def save_pcap_on_fail():$/;"	f
sc_ac_cookie	net/lwip/netif/ppp/ppp_oe.c	/^  u8_t *sc_ac_cookie;          \/* content of AC cookie we must echo back *\/$/;"	m	struct:pppoe_softc	file:
sc_ac_cookie_len	net/lwip/netif/ppp/ppp_oe.c	/^  size_t sc_ac_cookie_len;     \/* length of cookie data *\/$/;"	m	struct:pppoe_softc	file:
sc_concentrator_name	net/lwip/netif/ppp/ppp_oe.c	/^  char *sc_concentrator_name;  \/* if != NULL: requested concentrator id *\/$/;"	m	struct:pppoe_softc	file:
sc_dest	net/lwip/netif/ppp/ppp_oe.c	/^  struct eth_addr sc_dest;     \/* hardware address of concentrator *\/$/;"	m	struct:pppoe_softc	typeref:struct:pppoe_softc::eth_addr	file:
sc_ethif	net/lwip/netif/ppp/ppp_oe.c	/^  struct netif *sc_ethif;      \/* ethernet interface we are using *\/$/;"	m	struct:pppoe_softc	typeref:struct:pppoe_softc::netif	file:
sc_hunique	net/lwip/netif/ppp/ppp_oe.c	/^  u8_t *sc_hunique;            \/* content of host unique we must echo back *\/$/;"	m	struct:pppoe_softc	file:
sc_hunique_len	net/lwip/netif/ppp/ppp_oe.c	/^  size_t sc_hunique_len;       \/* length of host unique *\/$/;"	m	struct:pppoe_softc	file:
sc_linkStatusCB	net/lwip/netif/ppp/ppp_oe.c	/^  void (*sc_linkStatusCB)(int pd, int up);$/;"	m	struct:pppoe_softc	file:
sc_padi_retried	net/lwip/netif/ppp/ppp_oe.c	/^  int sc_padi_retried;         \/* number of PADI retries already done *\/$/;"	m	struct:pppoe_softc	file:
sc_padr_retried	net/lwip/netif/ppp/ppp_oe.c	/^  int sc_padr_retried;         \/* number of PADR retries already done *\/$/;"	m	struct:pppoe_softc	file:
sc_pd	net/lwip/netif/ppp/ppp_oe.c	/^  int sc_pd;                   \/* ppp unit number *\/$/;"	m	struct:pppoe_softc	file:
sc_service_name	net/lwip/netif/ppp/ppp_oe.c	/^  char *sc_service_name;       \/* if != NULL: requested name of service *\/$/;"	m	struct:pppoe_softc	file:
sc_session	net/lwip/netif/ppp/ppp_oe.c	/^  u16_t sc_session;            \/* PPPoE session id *\/$/;"	m	struct:pppoe_softc	file:
sc_state	net/lwip/netif/ppp/ppp_oe.c	/^  int sc_state;                \/* discovery phase or session connected *\/$/;"	m	struct:pppoe_softc	file:
sched_yield	kern/sched.c	/^sched_yield(void)$/;"	f
sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc
sd_avl	inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:SystemSegdesc64
sd_base_15_0	inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc
sd_base_15_0	inc/mmu.h	/^    unsigned sd_base_15_0 : 16;$/;"	m	struct:SystemSegdesc64
sd_base_23_16	inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc
sd_base_23_16	inc/mmu.h	/^    unsigned sd_base_23_16 : 8;$/;"	m	struct:SystemSegdesc64
sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc
sd_base_31_24	inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:SystemSegdesc64
sd_base_63_32	inc/mmu.h	/^    uint32_t sd_base_63_32;  $/;"	m	struct:SystemSegdesc64
sd_clear	inc/mmu.h	/^    unsigned sd_clear : 8;$/;"	m	struct:SystemSegdesc64
sd_db	inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc
sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc
sd_dpl	inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:SystemSegdesc64
sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc
sd_g	inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:SystemSegdesc64
sd_l	inc/mmu.h	/^	unsigned sd_l : 1;       \/\/ Reserved$/;"	m	struct:Segdesc
sd_lim_15_0	inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc
sd_lim_15_0	inc/mmu.h	/^    unsigned sd_lim_15_0 : 16;$/;"	m	struct:SystemSegdesc64
sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc
sd_lim_19_16	inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:SystemSegdesc64
sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc
sd_p	inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:SystemSegdesc64
sd_res1	inc/mmu.h	/^    unsigned sd_res1 : 8;$/;"	m	struct:SystemSegdesc64
sd_res2	inc/mmu.h	/^    unsigned sd_res2 : 16;$/;"	m	struct:SystemSegdesc64
sd_rsv1	inc/mmu.h	/^	unsigned sd_rsv1 : 2;       \/\/ Reserved$/;"	m	struct:SystemSegdesc64
sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc
sd_s	inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:SystemSegdesc64
sd_type	inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc
sd_type	inc/mmu.h	/^    unsigned sd_type : 4;$/;"	m	struct:SystemSegdesc64
sectorReadError	boot/boot.S	/^sectorReadError:$/;"	l
sectorReadSuccess	boot/boot.S	/^sectorReadSuccess:$/;"	l
seek	lib/fd.c	/^seek(int fdnum, off_t offset)$/;"	f
seen_ack	net/lwip/netif/ppp/fsm.h	/^  u_char seen_ack;                 \/* Have received valid Ack\/Nak\/Rej to Req *\/$/;"	m	struct:fsm
seg	obj/net/ns.asm	/^      seg = NULL;$/;"	d
seg	obj/net/ns.asm	/^    seg = memp_malloc(MEMP_TCP_SEG);$/;"	d
seg	obj/net/ns.asm	/^    seg = next;$/;"	d
seg	obj/net/ns.asm	/^    seg = pcb->unsent;$/;"	d
seg	obj/net/ns.asm	/^  seg = pcb->unacked->next;$/;"	d
seg	obj/net/ns.asm	/^  seg = pcb->unacked;$/;"	d
seg	obj/net/ns.asm	/^  seg = pcb->unsent;$/;"	d
seglen	obj/net/ns.asm	/^    seglen = left > pcb->mss? pcb->mss: left;$/;"	d
seglen	obj/net/ns.asm	/^  seglen = 0;$/;"	d
select	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
select	net/lwip/include/lwip/sockets.h	341;"	d
select_cb_list	net/lwip/api/sockets.c	/^static struct lwip_select_cb *select_cb_list;$/;"	v	typeref:struct:lwip_select_cb	file:
select_cb_list	obj/net/ns.asm	/^      select_cb_list = select_cb.next;$/;"	d
select_cb_list	obj/net/ns.asm	/^    select_cb_list = &select_cb;$/;"	d
selectsem	net/lwip/api/sockets.c	/^static sys_sem_t selectsem;$/;"	v	file:
selectsem	obj/net/ns.asm	/^  selectsem = sys_sem_new(1);$/;"	d
sem	net/lwip/api/sockets.c	/^  sys_sem_t sem;$/;"	m	struct:lwip_select_cb	file:
sem	net/lwip/include/lwip/api_msg.h	/^  sys_sem_t sem;$/;"	m	struct:dns_api_msg
sem	net/lwip/include/lwip/netifapi.h	/^  sys_sem_t sem;$/;"	m	struct:netifapi_msg_msg
sem	net/lwip/include/lwip/stats.h	/^  struct stats_syselem sem;$/;"	m	struct:stats_sys	typeref:struct:stats_sys::stats_syselem
sem	net/lwip/include/lwip/tcpip.h	/^  sys_sem_t *sem;$/;"	m	struct:tcpip_msg
sem_signalled	net/lwip/api/sockets.c	/^  int sem_signalled;$/;"	m	struct:lwip_select_cb	file:
sems	net/lwip/jos/arch/sys_arch.c	/^static struct sys_sem_entry sems[NSEM];$/;"	v	typeref:struct:sys_sem_entry	file:
send	inc/ns.h	/^	} send;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_send
send	net/lwip/include/lwip/sockets.h	338;"	d
send_content_type	user/httpd.c	/^send_content_type(struct http_request *req)$/;"	f	file:
send_data	user/httpd.c	/^send_data(struct http_request *req, int fd)$/;"	f	file:
send_error	user/httpd.c	/^send_error(struct http_request *req, int code)$/;"	f	file:
send_file	user/httpd.c	/^send_file(struct http_request *req)$/;"	f	file:
send_header	user/httpd.c	/^send_header(struct http_request *req, int code)$/;"	f	file:
send_header_fin	user/httpd.c	/^send_header_fin(struct http_request *req)$/;"	f	file:
send_packets	grade-lab6	/^    def send_packets():$/;"	f	function:test_testinput_helper
send_size	user/httpd.c	/^send_size(struct http_request *req, off_t size)$/;"	f	file:
sendevent	net/lwip/api/sockets.c	/^  u16_t sendevent;$/;"	m	struct:lwip_socket	file:
sendmss	obj/net/ns.asm	/^    sendmss = LWIP_MIN(sendmss, mss_s);$/;"	d
sendto	net/lwip/include/lwip/sockets.h	339;"	d
sent	net/lwip/include/lwip/tcp.h	/^  err_t (* sent)(void *arg, struct tcp_pcb *pcb, u16_t space);$/;"	m	struct:tcp_pcb
sent_num	net/lwip/include/ipv4/lwip/autoip.h	/^  u8_t sent_num;            \/* sent number of probes or announces, dependent on state *\/$/;"	m	struct:autoip
sent_tcp	net/lwip/api/api_msg.c	/^sent_tcp(void *arg, struct tcp_pcb *pcb, u16_t len)$/;"	f	file:
seqlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t seqlen;$/;"	m	struct:snmp_resp_header_lengths
seqlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t seqlen;$/;"	m	struct:snmp_trap_header_lengths
seqlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t seqlen;$/;"	m	struct:snmp_varbind
seqlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t seqlen;$/;"	m	struct:snmp_varbind_root
seqlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t seqlenlen;$/;"	m	struct:snmp_resp_header_lengths
seqlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t seqlenlen;$/;"	m	struct:snmp_trap_header_lengths
seqlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t seqlenlen;$/;"	m	struct:snmp_varbind
seqlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t seqlenlen;$/;"	m	struct:snmp_varbind_root
seqno	net/lwip/core/dns.c	/^  u8_t  seqno;$/;"	m	struct:dns_table_entry	file:
seqno	net/lwip/core/tcp_in.c	/^static u32_t seqno, ackno;$/;"	v	file:
seqno	net/lwip/include/ipv6/lwip/icmp.h	/^  u16_t seqno;$/;"	m	struct:icmp_echo_hdr
seqno	obj/net/ns.asm	/^          seqno = pcb->ooseq->tcphdr->seqno;$/;"	d
seqno	obj/net/ns.asm	/^    seqno = pcb->snd_nxt;$/;"	d
seqno	obj/net/ns.asm	/^  seqno = pcb->snd_lbb;$/;"	d
seqno	obj/net/ns.asm	/^  seqno = tcphdr->seqno = ntohl(tcphdr->seqno);$/;"	d
serial_exists	kern/console.c	/^static bool serial_exists;$/;"	v	file:
serial_exists	obj/kern/kernel.asm	/^	serial_exists = (inb(COM1+COM_LSR) != 0xFF);$/;"	d
serial_init	kern/console.c	/^serial_init(void)$/;"	f	file:
serial_intr	kern/console.c	/^serial_intr(void)$/;"	f
serial_proc_data	kern/console.c	/^serial_proc_data(void)$/;"	f	file:
serial_putc	kern/console.c	/^serial_putc(int c)$/;"	f	file:
serve	fs/serv.c	/^serve(void)$/;"	f
serve	net/serv.c	/^serve(void) {$/;"	f
serve_flush	fs/serv.c	/^serve_flush(envid_t envid, struct Fsreq_flush *req)$/;"	f
serve_init	fs/serv.c	/^serve_init(void)$/;"	f
serve_init	net/serv.c	/^serve_init(uint32_t ipaddr, uint32_t netmask, uint32_t gw)$/;"	f
serve_open	fs/serv.c	/^serve_open(envid_t envid, struct Fsreq_open *req,$/;"	f
serve_read	fs/serv.c	/^serve_read(envid_t envid, union Fsipc *ipc)$/;"	f
serve_remove	fs/serv.c	/^serve_remove(envid_t envid, struct Fsreq_remove *req)$/;"	f
serve_set_size	fs/serv.c	/^serve_set_size(envid_t envid, struct Fsreq_set_size *req)$/;"	f
serve_stat	fs/serv.c	/^serve_stat(envid_t envid, union Fsipc *ipc)$/;"	f
serve_sync	fs/serv.c	/^serve_sync(envid_t envid, union Fsipc *req)$/;"	f
serve_thread	net/serv.c	/^serve_thread(uint64_t a) {$/;"	f	file:
serve_write	fs/serv.c	/^serve_write(envid_t envid, struct Fsreq_write *req)$/;"	f
server_ip_addr	net/lwip/include/lwip/dhcp.h	/^  struct ip_addr server_ip_addr; \/* dhcp server address that offered this lease *\/$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr
serverstate	net/lwip/netif/ppp/chap.h	/^  int serverstate;                        \/* Server state *\/$/;"	m	struct:chap_state
set_errno	net/lwip/api/sockets.c	153;"	d	file:
set_errno	net/lwip/api/sockets.c	155;"	d	file:
set_pgfault_handler	lib/pgfault.c	/^set_pgfault_handler(void (*handler)(struct UTrapframe *utf))$/;"	f
set_size	inc/fs.h	/^	} set_size;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_set_size
set_test	net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_array_node
set_test	net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
set_test	net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_list_rootnode
set_test	net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_node
set_test	net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_ram_array_node
set_test_a	net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test_a)(u8_t rid, struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
set_test_pc	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_test_pc)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node
set_test_q	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_test_q)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node
set_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);  $/;"	m	struct:mib_node
set_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_array_node
set_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
set_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_list_rootnode
set_value	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_ram_array_node
set_value_a	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value_a)(u8_t rid, struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
set_value_pc	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value_pc)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node
set_value_q	net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value_q)(u8_t rid, struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node
setsockopt	net/lwip/include/lwip/sockets.h	333;"	d
setup_breakpoint	gradelib.py	/^    def setup_breakpoint(runner):$/;"	f	function:stop_breakpoint
setup_call_on_line	gradelib.py	/^    def setup_call_on_line(runner):$/;"	f	function:call_on_line
setup_save	gradelib.py	/^    def setup_save(runner):$/;"	f	function:save
setup_tcp	net/lwip/api/api_msg.c	/^setup_tcp(struct netconn *conn)$/;"	f	file:
sfork	lib/fork.c	/^sfork(void)$/;"	f
sh_addr	inc/elf.h	/^	uint64_t sh_addr;$/;"	m	struct:Secthdr
sh_addralign	inc/elf.h	/^	uint64_t sh_addralign;$/;"	m	struct:Secthdr
sh_entsize	inc/elf.h	/^	uint64_t sh_entsize;$/;"	m	struct:Secthdr
sh_flags	inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr
sh_info	inc/elf.h	/^	uint64_t sh_info;$/;"	m	struct:Secthdr
sh_link	inc/elf.h	/^	uint64_t sh_link;$/;"	m	struct:Secthdr
sh_name	inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr
sh_offset	inc/elf.h	/^	uint64_t sh_offset;$/;"	m	struct:Secthdr
sh_size	inc/elf.h	/^	uint64_t sh_size;$/;"	m	struct:Secthdr
sh_type	inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr
shiftcode	kern/console.c	/^static uint8_t shiftcode[256] =$/;"	v	file:
shiftmap	kern/console.c	/^static uint8_t shiftmap[256] =$/;"	v	file:
show_command	gradelib.py	/^def show_command(cmd):$/;"	f
show_part	gradelib.py	/^    def show_part():$/;"	f	function:end_part
shutdown	inc/ns.h	/^	} shutdown;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_shutdown
shutdown	lib/sockets.c	/^shutdown(int s, int how)$/;"	f
shutdown	net/lwip/include/lwip/sockets.h	328;"	d
shutil	grade-lab6	/^import os, re, threading, socket, time, urllib2, shutil, struct, difflib$/;"	i
shutil	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
sifaddr	net/lwip/netif/ppp/ppp.c	/^sifaddr( int pd, u32_t o, u32_t h, u32_t m, u32_t ns1, u32_t ns2)$/;"	f
sifdefaultroute	net/lwip/netif/ppp/ppp.c	/^sifdefaultroute(int pd, u32_t l, u32_t g)$/;"	f
sifdown	net/lwip/netif/ppp/ppp.c	/^sifdown(int pd)$/;"	f
sifnpmode	net/lwip/netif/ppp/ppp.c	/^sifnpmode(int u, int proto, enum NPmode mode)$/;"	f
sifup	net/lwip/netif/ppp/ppp.c	/^sifup(int pd)$/;"	f
sifvjcomp	net/lwip/netif/ppp/ppp.c	/^sifvjcomp( int pd, int vjcomp, int cidcomp, int maxcid)$/;"	f
sig_hup	net/lwip/netif/ppp/ppp.c	/^  int  sig_hup;                 \/* Carrier lost. *\/$/;"	m	struct:PPPControl_s	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "PCMP"$/;"	m	struct:mpconf	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ "_MP_"$/;"	m	struct:mp	file:
signature	kern/mpconfig.c	/^	uint8_t signature[4];           \/\/ CPU signature$/;"	m	struct:mpproc	file:
silent	net/lwip/netif/ppp/lcp.h	/^    u_int silent            : 1; \/* Wait for the other end to start first *\/$/;"	m	struct:lcp_options
sin_addr	net/lwip/include/lwip/sockets.h	/^  struct in_addr sin_addr;$/;"	m	struct:sockaddr_in	typeref:struct:sockaddr_in::in_addr
sin_family	net/lwip/include/lwip/sockets.h	/^  u8_t sin_family;$/;"	m	struct:sockaddr_in
sin_len	net/lwip/include/lwip/sockets.h	/^  u8_t sin_len;$/;"	m	struct:sockaddr_in
sin_port	net/lwip/include/lwip/sockets.h	/^  u16_t sin_port;$/;"	m	struct:sockaddr_in
sin_zero	net/lwip/include/lwip/sockets.h	/^  char sin_zero[8];$/;"	m	struct:sockaddr_in
sio_fd_t	net/lwip/include/lwip/sio.h	/^typedef void * sio_fd_t;$/;"	t
sip	net/lwip/include/lwip/snmp_msg.h	/^  struct ip_addr sip;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::ip_addr
sip_raw	net/lwip/include/lwip/snmp_msg.h	/^  u8_t sip_raw[4];$/;"	m	struct:snmp_msg_trap
size	obj/kern/kernel.asm	/^			size = PCI_MAPREG_IO_SIZE(rv);$/;"	d
size	obj/kern/kernel.asm	/^			size = PCI_MAPREG_MEM_SIZE(rv);$/;"	d
size	obj/kern/kernel.asm	/^	size = ROUNDUP(size, PGSIZE);$/;"	d
size	obj/net/ns.asm	/^    size = MIN_SIZE_ALIGNED;$/;"	d
size	obj/net/ns.asm	/^  size = DEFAULT_RAW_RECVMBOX_SIZE;$/;"	d
size	obj/net/ns.asm	/^  size = LWIP_MEM_ALIGN_SIZE(size);$/;"	d
size	obj/net/ns.asm	/^  size = mem->next - ptr - SIZEOF_STRUCT_MEM;$/;"	d
size_t	inc/types.h	/^typedef uint64_t size_t;$/;"	t
size_t	obj/fs/fs.asm	/^size_t$/;"	l
size_t	obj/kern/kernel.asm	/^size_t$/;"	l
size_t	obj/net/ns.asm	/^size_t$/;"	l
size_t	obj/net/testinput.asm	/^size_t$/;"	l
size_t	obj/net/testoutput.asm	/^size_t$/;"	l
size_t	obj/user/echosrv.asm	/^size_t$/;"	l
size_t	obj/user/echotest.asm	/^size_t$/;"	l
size_t	obj/user/forktree.asm	/^size_t$/;"	l
size_t	obj/user/hello.asm	/^size_t$/;"	l
size_t	obj/user/httpd.asm	/^size_t$/;"	l
size_t	obj/user/icode.asm	/^size_t$/;"	l
size_t	obj/user/idle.asm	/^size_t$/;"	l
size_t	obj/user/init.asm	/^size_t$/;"	l
size_t	obj/user/pingpong.asm	/^size_t$/;"	l
size_t	obj/user/primes.asm	/^size_t$/;"	l
size_t	obj/user/testfile.asm	/^size_t$/;"	l
size_t	obj/user/testtime.asm	/^size_t$/;"	l
size_t	obj/user/writemotd.asm	/^size_t$/;"	l
skip_slash	fs/fs.c	/^skip_slash(const char *p)$/;"	f	file:
sleep	user/testtime.c	/^sleep(int sec)$/;"	f
slipif_init	net/lwip/netif/slipif.c	/^slipif_init(struct netif *netif)$/;"	f
slipif_input	net/lwip/netif/slipif.c	/^slipif_input(struct netif *netif)$/;"	f	file:
slipif_loop	net/lwip/netif/slipif.c	/^slipif_loop(void *nf)$/;"	f	file:
slipif_output	net/lwip/netif/slipif.c	/^slipif_output(struct netif *netif, struct pbuf *p, struct ip_addr *ipaddr)$/;"	f
snd_buf	net/lwip/include/lwip/tcp.h	/^  u16_t snd_buf;   \/* Available buffer space for sending (in bytes). *\/$/;"	m	struct:tcp_pcb
snd_lbb	net/lwip/include/lwip/tcp.h	/^    snd_lbb;       \/* Sequence number of next byte to be buffered. *\/$/;"	m	struct:tcp_pcb
snd_max	net/lwip/include/lwip/tcp.h	/^    snd_max;       \/* Highest seqno sent. *\/$/;"	m	struct:tcp_pcb
snd_nxt	net/lwip/include/lwip/tcp.h	/^  u32_t snd_nxt,   \/* next seqno to be sent *\/$/;"	m	struct:tcp_pcb
snd_queuelen	net/lwip/include/lwip/tcp.h	/^  u16_t snd_queuelen; \/* Available buffer space for sending (in tcp_segs). *\/$/;"	m	struct:tcp_pcb
snd_wl1	net/lwip/include/lwip/tcp.h	/^  u32_t snd_wl1, snd_wl2, \/* Sequence and acknowledgement numbers of last$/;"	m	struct:tcp_pcb
snd_wl2	net/lwip/include/lwip/tcp.h	/^  u32_t snd_wl1, snd_wl2, \/* Sequence and acknowledgement numbers of last$/;"	m	struct:tcp_pcb
snd_wnd	net/lwip/include/lwip/tcp.h	/^  u16_t snd_wnd;   \/* sender window *\/$/;"	m	struct:tcp_pcb
snmp	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node snmp = {$/;"	v	typeref:struct:mib_array_node
snmp1_pcb	net/lwip/core/snmp/msg_in.c	/^struct udp_pcb *snmp1_pcb;$/;"	v	typeref:struct:udp_pcb
snmp_add_ifinoctets	net/lwip/core/snmp/mib2.c	/^void snmp_add_ifinoctets(struct netif *ni, u32_t value)$/;"	f
snmp_add_ifinoctets	net/lwip/include/lwip/snmp.h	242;"	d
snmp_add_ifoutoctets	net/lwip/core/snmp/mib2.c	/^void snmp_add_ifoutoctets(struct netif *ni, u32_t value)$/;"	f
snmp_add_ifoutoctets	net/lwip/include/lwip/snmp.h	246;"	d
snmp_add_snmpintotalreqvars	net/lwip/core/snmp/mib2.c	/^void snmp_add_snmpintotalreqvars(u8_t value)$/;"	f
snmp_add_snmpintotalreqvars	net/lwip/include/lwip/snmp.h	338;"	d
snmp_add_snmpintotalsetvars	net/lwip/core/snmp/mib2.c	/^void snmp_add_snmpintotalsetvars(u8_t value)$/;"	f
snmp_add_snmpintotalsetvars	net/lwip/include/lwip/snmp.h	339;"	d
snmp_add_sysuptime	net/lwip/core/snmp/mib2.c	/^void snmp_add_sysuptime(u32_t value)$/;"	f
snmp_add_sysuptime	net/lwip/include/lwip/snmp.h	235;"	d
snmp_asn1_dec_length	net/lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_length(struct pbuf *p, u16_t ofs, u8_t *octets_used, u16_t *length)$/;"	f
snmp_asn1_dec_oid	net/lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_oid(struct pbuf *p, u16_t ofs, u16_t len, struct snmp_obj_id *oid)$/;"	f
snmp_asn1_dec_raw	net/lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_raw(struct pbuf *p, u16_t ofs, u16_t len, u16_t raw_len, u8_t *raw)$/;"	f
snmp_asn1_dec_s32t	net/lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_s32t(struct pbuf *p, u16_t ofs, u16_t len, s32_t *value)$/;"	f
snmp_asn1_dec_type	net/lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_type(struct pbuf *p, u16_t ofs, u8_t *type)$/;"	f
snmp_asn1_dec_u32t	net/lwip/core/snmp/asn1_dec.c	/^snmp_asn1_dec_u32t(struct pbuf *p, u16_t ofs, u16_t len, u32_t *value)$/;"	f
snmp_asn1_enc_length	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_length(struct pbuf *p, u16_t ofs, u16_t length)$/;"	f
snmp_asn1_enc_length_cnt	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_length_cnt(u16_t length, u8_t *octets_needed)$/;"	f
snmp_asn1_enc_oid	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_oid(struct pbuf *p, u16_t ofs, u8_t ident_len, s32_t *ident)$/;"	f
snmp_asn1_enc_oid_cnt	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_oid_cnt(u8_t ident_len, s32_t *ident, u16_t *octets_needed)$/;"	f
snmp_asn1_enc_raw	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_raw(struct pbuf *p, u16_t ofs, u8_t raw_len, u8_t *raw)$/;"	f
snmp_asn1_enc_s32t	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_s32t(struct pbuf *p, u16_t ofs, u8_t octets_needed, s32_t value)$/;"	f
snmp_asn1_enc_s32t_cnt	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_s32t_cnt(s32_t value, u16_t *octets_needed)$/;"	f
snmp_asn1_enc_type	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_type(struct pbuf *p, u16_t ofs, u8_t type)$/;"	f
snmp_asn1_enc_u32t	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_u32t(struct pbuf *p, u16_t ofs, u8_t octets_needed, u32_t value)$/;"	f
snmp_asn1_enc_u32t_cnt	net/lwip/core/snmp/asn1_enc.c	/^snmp_asn1_enc_u32t_cnt(u32_t value, u16_t *octets_needed)$/;"	f
snmp_authfail_trap	net/lwip/core/snmp/msg_out.c	/^snmp_authfail_trap(void)$/;"	f
snmp_coldstart_trap	net/lwip/core/snmp/msg_out.c	/^snmp_coldstart_trap(void)$/;"	f
snmp_dec_iflist	net/lwip/core/snmp/mib2.c	/^void snmp_dec_iflist(void)$/;"	f
snmp_dec_iflist	net/lwip/include/lwip/snmp.h	251;"	d
snmp_delete_arpidx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_delete_arpidx_tree(struct netif *ni, struct ip_addr *ip)$/;"	f
snmp_delete_arpidx_tree	net/lwip/include/lwip/snmp.h	255;"	d
snmp_delete_ipaddridx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_delete_ipaddridx_tree(struct netif *ni)$/;"	f
snmp_delete_ipaddridx_tree	net/lwip/include/lwip/snmp.h	276;"	d
snmp_delete_iprteidx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_delete_iprteidx_tree(u8_t dflt, struct netif *ni)$/;"	f
snmp_delete_iprteidx_tree	net/lwip/include/lwip/snmp.h	278;"	d
snmp_delete_udpidx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_delete_udpidx_tree(struct udp_pcb *pcb)$/;"	f
snmp_delete_udpidx_tree	net/lwip/include/lwip/snmp.h	324;"	d
snmp_error_response	net/lwip/core/snmp/msg_in.c	/^snmp_error_response(struct snmp_msg_pstat *msg_ps, u8_t error)$/;"	f	file:
snmp_expand_tree	net/lwip/core/snmp/mib_structs.c	/^snmp_expand_tree(struct mib_node *node, u8_t ident_len, s32_t *ident, struct snmp_obj_id *oidret)$/;"	f
snmp_get_object_def	net/lwip/core/snmp/mib2.c	/^snmp_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
snmp_get_snmpenableauthentraps	net/lwip/core/snmp/mib2.c	/^void snmp_get_snmpenableauthentraps(u8_t *value)$/;"	f
snmp_get_snmpenableauthentraps	net/lwip/include/lwip/snmp.h	356;"	d
snmp_get_snmpgrpid_ptr	net/lwip/core/snmp/mib2.c	/^void snmp_get_snmpgrpid_ptr(struct snmp_obj_id **oid)$/;"	f
snmp_get_snmpgrpid_ptr	net/lwip/include/lwip/snmp.h	354;"	d
snmp_get_sysobjid_ptr	net/lwip/core/snmp/mib2.c	/^void snmp_get_sysobjid_ptr(struct snmp_obj_id **oid)$/;"	f
snmp_get_sysobjid_ptr	net/lwip/include/lwip/snmp.h	233;"	d
snmp_get_sysuptime	net/lwip/core/snmp/mib2.c	/^void snmp_get_sysuptime(u32_t *value)$/;"	f
snmp_get_sysuptime	net/lwip/include/lwip/snmp.h	236;"	d
snmp_get_value	net/lwip/core/snmp/mib2.c	/^snmp_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
snmp_ids	net/lwip/core/snmp/mib2.c	/^const s32_t snmp_ids[28] = {$/;"	v
snmp_ifType	net/lwip/include/lwip/snmp.h	/^enum snmp_ifType {$/;"	g
snmp_ifType_basicISDN	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_basicISDN,$/;"	e	enum:snmp_ifType
snmp_ifType_ddn_x25	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ddn_x25,$/;"	e	enum:snmp_ifType
snmp_ifType_ds1	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ds1,                    \/* T-1 *\/$/;"	e	enum:snmp_ifType
snmp_ifType_ds3	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ds3,                    \/* T-3 *\/$/;"	e	enum:snmp_ifType
snmp_ifType_e1	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_e1,                     \/* european equiv. of T-1 *\/$/;"	e	enum:snmp_ifType
snmp_ifType_eon	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_eon,                    \/* CLNP over IP [11] *\/$/;"	e	enum:snmp_ifType
snmp_ifType_ethernet_3Mbit	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ethernet_3Mbit,$/;"	e	enum:snmp_ifType
snmp_ifType_ethernet_csmacd	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ethernet_csmacd,$/;"	e	enum:snmp_ifType
snmp_ifType_fddi	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_fddi,$/;"	e	enum:snmp_ifType
snmp_ifType_frame_relay	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_frame_relay$/;"	e	enum:snmp_ifType
snmp_ifType_hdh1822	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_hdh1822,$/;"	e	enum:snmp_ifType
snmp_ifType_hyperchannel	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_hyperchannel,$/;"	e	enum:snmp_ifType
snmp_ifType_iso88023_csmacd	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_iso88023_csmacd,$/;"	e	enum:snmp_ifType
snmp_ifType_iso88024_tokenBus	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_iso88024_tokenBus,$/;"	e	enum:snmp_ifType
snmp_ifType_iso88025_tokenRing	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_iso88025_tokenRing,$/;"	e	enum:snmp_ifType
snmp_ifType_iso88026_man	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_iso88026_man,$/;"	e	enum:snmp_ifType
snmp_ifType_lapb	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_lapb,$/;"	e	enum:snmp_ifType
snmp_ifType_nsip	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_nsip,                   \/* XNS over IP *\/$/;"	e	enum:snmp_ifType
snmp_ifType_other	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_other=1,                \/* none of the following *\/$/;"	e	enum:snmp_ifType
snmp_ifType_ppp	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ppp,$/;"	e	enum:snmp_ifType
snmp_ifType_primaryISDN	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_primaryISDN,            \/* proprietary serial *\/$/;"	e	enum:snmp_ifType
snmp_ifType_propPointToPointSerial	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_propPointToPointSerial,$/;"	e	enum:snmp_ifType
snmp_ifType_proteon_10Mbit	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_proteon_10Mbit,$/;"	e	enum:snmp_ifType
snmp_ifType_proteon_80Mbit	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_proteon_80Mbit,$/;"	e	enum:snmp_ifType
snmp_ifType_regular1822	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_regular1822,$/;"	e	enum:snmp_ifType
snmp_ifType_rfc877_x25	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_rfc877_x25,$/;"	e	enum:snmp_ifType
snmp_ifType_sdlc	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_sdlc,$/;"	e	enum:snmp_ifType
snmp_ifType_sip	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_sip,                    \/* SMDS *\/$/;"	e	enum:snmp_ifType
snmp_ifType_slip	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_slip,                   \/* generic SLIP *\/$/;"	e	enum:snmp_ifType
snmp_ifType_softwareLoopback	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_softwareLoopback,$/;"	e	enum:snmp_ifType
snmp_ifType_starLan	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_starLan,$/;"	e	enum:snmp_ifType
snmp_ifType_ultra	net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ultra,                  \/* ULTRA technologies *\/$/;"	e	enum:snmp_ifType
snmp_ifindextonetif	net/lwip/core/snmp/mib_structs.c	/^snmp_ifindextonetif(s32_t ifindex, struct netif **netif)$/;"	f
snmp_inc_icmpinaddrmaskreps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinaddrmaskreps(void)$/;"	f
snmp_inc_icmpinaddrmaskreps	net/lwip/include/lwip/snmp.h	293;"	d
snmp_inc_icmpinaddrmasks	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinaddrmasks(void)$/;"	f
snmp_inc_icmpinaddrmasks	net/lwip/include/lwip/snmp.h	292;"	d
snmp_inc_icmpindestunreachs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpindestunreachs(void)$/;"	f
snmp_inc_icmpindestunreachs	net/lwip/include/lwip/snmp.h	283;"	d
snmp_inc_icmpinechoreps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinechoreps(void)$/;"	f
snmp_inc_icmpinechoreps	net/lwip/include/lwip/snmp.h	289;"	d
snmp_inc_icmpinechos	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinechos(void)$/;"	f
snmp_inc_icmpinechos	net/lwip/include/lwip/snmp.h	288;"	d
snmp_inc_icmpinerrors	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinerrors(void)$/;"	f
snmp_inc_icmpinerrors	net/lwip/include/lwip/snmp.h	282;"	d
snmp_inc_icmpinmsgs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinmsgs(void)$/;"	f
snmp_inc_icmpinmsgs	net/lwip/include/lwip/snmp.h	281;"	d
snmp_inc_icmpinparmprobs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinparmprobs(void)$/;"	f
snmp_inc_icmpinparmprobs	net/lwip/include/lwip/snmp.h	285;"	d
snmp_inc_icmpinredirects	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinredirects(void)$/;"	f
snmp_inc_icmpinredirects	net/lwip/include/lwip/snmp.h	287;"	d
snmp_inc_icmpinsrcquenchs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpinsrcquenchs(void)$/;"	f
snmp_inc_icmpinsrcquenchs	net/lwip/include/lwip/snmp.h	286;"	d
snmp_inc_icmpintimeexcds	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpintimeexcds(void)$/;"	f
snmp_inc_icmpintimeexcds	net/lwip/include/lwip/snmp.h	284;"	d
snmp_inc_icmpintimestampreps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpintimestampreps(void)$/;"	f
snmp_inc_icmpintimestampreps	net/lwip/include/lwip/snmp.h	291;"	d
snmp_inc_icmpintimestamps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpintimestamps(void)$/;"	f
snmp_inc_icmpintimestamps	net/lwip/include/lwip/snmp.h	290;"	d
snmp_inc_icmpoutaddrmaskreps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutaddrmaskreps(void)$/;"	f
snmp_inc_icmpoutaddrmaskreps	net/lwip/include/lwip/snmp.h	306;"	d
snmp_inc_icmpoutaddrmasks	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutaddrmasks(void)$/;"	f
snmp_inc_icmpoutaddrmasks	net/lwip/include/lwip/snmp.h	305;"	d
snmp_inc_icmpoutdestunreachs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutdestunreachs(void)$/;"	f
snmp_inc_icmpoutdestunreachs	net/lwip/include/lwip/snmp.h	296;"	d
snmp_inc_icmpoutechoreps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutechoreps(void)$/;"	f
snmp_inc_icmpoutechoreps	net/lwip/include/lwip/snmp.h	302;"	d
snmp_inc_icmpoutechos	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutechos(void)$/;"	f
snmp_inc_icmpoutechos	net/lwip/include/lwip/snmp.h	301;"	d
snmp_inc_icmpouterrors	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpouterrors(void)$/;"	f
snmp_inc_icmpouterrors	net/lwip/include/lwip/snmp.h	295;"	d
snmp_inc_icmpoutmsgs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutmsgs(void)$/;"	f
snmp_inc_icmpoutmsgs	net/lwip/include/lwip/snmp.h	294;"	d
snmp_inc_icmpoutparmprobs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutparmprobs(void)$/;"	f
snmp_inc_icmpoutparmprobs	net/lwip/include/lwip/snmp.h	298;"	d
snmp_inc_icmpoutredirects	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutredirects(void)$/;"	f
snmp_inc_icmpoutredirects	net/lwip/include/lwip/snmp.h	300;"	d
snmp_inc_icmpoutsrcquenchs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpoutsrcquenchs(void)$/;"	f
snmp_inc_icmpoutsrcquenchs	net/lwip/include/lwip/snmp.h	299;"	d
snmp_inc_icmpouttimeexcds	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpouttimeexcds(void)$/;"	f
snmp_inc_icmpouttimeexcds	net/lwip/include/lwip/snmp.h	297;"	d
snmp_inc_icmpouttimestampreps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpouttimestampreps(void)$/;"	f
snmp_inc_icmpouttimestampreps	net/lwip/include/lwip/snmp.h	304;"	d
snmp_inc_icmpouttimestamps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_icmpouttimestamps(void)$/;"	f
snmp_inc_icmpouttimestamps	net/lwip/include/lwip/snmp.h	303;"	d
snmp_inc_ifindiscards	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ifindiscards(struct netif *ni)$/;"	f
snmp_inc_ifindiscards	net/lwip/include/lwip/snmp.h	245;"	d
snmp_inc_ifinnucastpkts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ifinnucastpkts(struct netif *ni)$/;"	f
snmp_inc_ifinnucastpkts	net/lwip/include/lwip/snmp.h	244;"	d
snmp_inc_ifinucastpkts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ifinucastpkts(struct netif *ni)$/;"	f
snmp_inc_ifinucastpkts	net/lwip/include/lwip/snmp.h	243;"	d
snmp_inc_iflist	net/lwip/core/snmp/mib2.c	/^void snmp_inc_iflist(void)$/;"	f
snmp_inc_iflist	net/lwip/include/lwip/snmp.h	250;"	d
snmp_inc_ifoutdiscards	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ifoutdiscards(struct netif *ni)$/;"	f
snmp_inc_ifoutdiscards	net/lwip/include/lwip/snmp.h	249;"	d
snmp_inc_ifoutnucastpkts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ifoutnucastpkts(struct netif *ni)$/;"	f
snmp_inc_ifoutnucastpkts	net/lwip/include/lwip/snmp.h	248;"	d
snmp_inc_ifoutucastpkts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ifoutucastpkts(struct netif *ni)$/;"	f
snmp_inc_ifoutucastpkts	net/lwip/include/lwip/snmp.h	247;"	d
snmp_inc_ipforwdatagrams	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipforwdatagrams(void)$/;"	f
snmp_inc_ipforwdatagrams	net/lwip/include/lwip/snmp.h	261;"	d
snmp_inc_ipfragcreates	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipfragcreates(void)$/;"	f
snmp_inc_ipfragcreates	net/lwip/include/lwip/snmp.h	273;"	d
snmp_inc_ipfragfails	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipfragfails(void)$/;"	f
snmp_inc_ipfragfails	net/lwip/include/lwip/snmp.h	272;"	d
snmp_inc_ipfragoks	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipfragoks(void)$/;"	f
snmp_inc_ipfragoks	net/lwip/include/lwip/snmp.h	271;"	d
snmp_inc_ipinaddrerrors	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipinaddrerrors(void)$/;"	f
snmp_inc_ipinaddrerrors	net/lwip/include/lwip/snmp.h	260;"	d
snmp_inc_ipindelivers	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipindelivers(void)$/;"	f
snmp_inc_ipindelivers	net/lwip/include/lwip/snmp.h	264;"	d
snmp_inc_ipindiscards	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipindiscards(void)$/;"	f
snmp_inc_ipindiscards	net/lwip/include/lwip/snmp.h	263;"	d
snmp_inc_ipinhdrerrors	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipinhdrerrors(void)$/;"	f
snmp_inc_ipinhdrerrors	net/lwip/include/lwip/snmp.h	259;"	d
snmp_inc_ipinreceives	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipinreceives(void)$/;"	f
snmp_inc_ipinreceives	net/lwip/include/lwip/snmp.h	258;"	d
snmp_inc_ipinunknownprotos	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipinunknownprotos(void)$/;"	f
snmp_inc_ipinunknownprotos	net/lwip/include/lwip/snmp.h	262;"	d
snmp_inc_ipoutdiscards	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipoutdiscards(void)$/;"	f
snmp_inc_ipoutdiscards	net/lwip/include/lwip/snmp.h	266;"	d
snmp_inc_ipoutnoroutes	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipoutnoroutes(void)$/;"	f
snmp_inc_ipoutnoroutes	net/lwip/include/lwip/snmp.h	267;"	d
snmp_inc_ipoutrequests	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipoutrequests(void)$/;"	f
snmp_inc_ipoutrequests	net/lwip/include/lwip/snmp.h	265;"	d
snmp_inc_ipreasmfails	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipreasmfails(void)$/;"	f
snmp_inc_ipreasmfails	net/lwip/include/lwip/snmp.h	270;"	d
snmp_inc_ipreasmoks	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipreasmoks(void)$/;"	f
snmp_inc_ipreasmoks	net/lwip/include/lwip/snmp.h	269;"	d
snmp_inc_ipreasmreqds	net/lwip/core/snmp/mib2.c	/^void snmp_inc_ipreasmreqds(void)$/;"	f
snmp_inc_ipreasmreqds	net/lwip/include/lwip/snmp.h	268;"	d
snmp_inc_iproutingdiscards	net/lwip/core/snmp/mib2.c	/^void snmp_inc_iproutingdiscards(void)$/;"	f
snmp_inc_iproutingdiscards	net/lwip/include/lwip/snmp.h	274;"	d
snmp_inc_snmpinasnparseerrs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinasnparseerrs(void)$/;"	f
snmp_inc_snmpinasnparseerrs	net/lwip/include/lwip/snmp.h	332;"	d
snmp_inc_snmpinbadcommunitynames	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinbadcommunitynames(void)$/;"	f
snmp_inc_snmpinbadcommunitynames	net/lwip/include/lwip/snmp.h	330;"	d
snmp_inc_snmpinbadcommunityuses	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinbadcommunityuses(void)$/;"	f
snmp_inc_snmpinbadcommunityuses	net/lwip/include/lwip/snmp.h	331;"	d
snmp_inc_snmpinbadvalues	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinbadvalues(void)$/;"	f
snmp_inc_snmpinbadvalues	net/lwip/include/lwip/snmp.h	335;"	d
snmp_inc_snmpinbadversions	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinbadversions(void)$/;"	f
snmp_inc_snmpinbadversions	net/lwip/include/lwip/snmp.h	329;"	d
snmp_inc_snmpingenerrs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpingenerrs(void)$/;"	f
snmp_inc_snmpingenerrs	net/lwip/include/lwip/snmp.h	337;"	d
snmp_inc_snmpingetnexts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpingetnexts(void)$/;"	f
snmp_inc_snmpingetnexts	net/lwip/include/lwip/snmp.h	341;"	d
snmp_inc_snmpingetrequests	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpingetrequests(void)$/;"	f
snmp_inc_snmpingetrequests	net/lwip/include/lwip/snmp.h	340;"	d
snmp_inc_snmpingetresponses	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpingetresponses(void)$/;"	f
snmp_inc_snmpingetresponses	net/lwip/include/lwip/snmp.h	343;"	d
snmp_inc_snmpinnosuchnames	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinnosuchnames(void)$/;"	f
snmp_inc_snmpinnosuchnames	net/lwip/include/lwip/snmp.h	334;"	d
snmp_inc_snmpinpkts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinpkts(void)$/;"	f
snmp_inc_snmpinpkts	net/lwip/include/lwip/snmp.h	327;"	d
snmp_inc_snmpinreadonlys	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinreadonlys(void)$/;"	f
snmp_inc_snmpinreadonlys	net/lwip/include/lwip/snmp.h	336;"	d
snmp_inc_snmpinsetrequests	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpinsetrequests(void)$/;"	f
snmp_inc_snmpinsetrequests	net/lwip/include/lwip/snmp.h	342;"	d
snmp_inc_snmpintoobigs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpintoobigs(void)$/;"	f
snmp_inc_snmpintoobigs	net/lwip/include/lwip/snmp.h	333;"	d
snmp_inc_snmpintraps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpintraps(void)$/;"	f
snmp_inc_snmpintraps	net/lwip/include/lwip/snmp.h	344;"	d
snmp_inc_snmpoutbadvalues	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutbadvalues(void)$/;"	f
snmp_inc_snmpoutbadvalues	net/lwip/include/lwip/snmp.h	347;"	d
snmp_inc_snmpoutgenerrs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutgenerrs(void)$/;"	f
snmp_inc_snmpoutgenerrs	net/lwip/include/lwip/snmp.h	348;"	d
snmp_inc_snmpoutgetnexts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutgetnexts(void)$/;"	f
snmp_inc_snmpoutgetnexts	net/lwip/include/lwip/snmp.h	350;"	d
snmp_inc_snmpoutgetrequests	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutgetrequests(void)$/;"	f
snmp_inc_snmpoutgetrequests	net/lwip/include/lwip/snmp.h	349;"	d
snmp_inc_snmpoutgetresponses	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutgetresponses(void)$/;"	f
snmp_inc_snmpoutgetresponses	net/lwip/include/lwip/snmp.h	352;"	d
snmp_inc_snmpoutnosuchnames	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutnosuchnames(void)$/;"	f
snmp_inc_snmpoutnosuchnames	net/lwip/include/lwip/snmp.h	346;"	d
snmp_inc_snmpoutpkts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutpkts(void)$/;"	f
snmp_inc_snmpoutpkts	net/lwip/include/lwip/snmp.h	328;"	d
snmp_inc_snmpoutsetrequests	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpoutsetrequests(void)$/;"	f
snmp_inc_snmpoutsetrequests	net/lwip/include/lwip/snmp.h	351;"	d
snmp_inc_snmpouttoobigs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpouttoobigs(void)$/;"	f
snmp_inc_snmpouttoobigs	net/lwip/include/lwip/snmp.h	345;"	d
snmp_inc_snmpouttraps	net/lwip/core/snmp/mib2.c	/^void snmp_inc_snmpouttraps(void)$/;"	f
snmp_inc_snmpouttraps	net/lwip/include/lwip/snmp.h	353;"	d
snmp_inc_sysuptime	net/lwip/core/snmp/mib2.c	/^void snmp_inc_sysuptime(void)$/;"	f
snmp_inc_sysuptime	net/lwip/include/lwip/snmp.h	234;"	d
snmp_inc_tcpactiveopens	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpactiveopens(void)$/;"	f
snmp_inc_tcpactiveopens	net/lwip/include/lwip/snmp.h	308;"	d
snmp_inc_tcpattemptfails	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpattemptfails(void)$/;"	f
snmp_inc_tcpattemptfails	net/lwip/include/lwip/snmp.h	310;"	d
snmp_inc_tcpestabresets	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpestabresets(void)$/;"	f
snmp_inc_tcpestabresets	net/lwip/include/lwip/snmp.h	311;"	d
snmp_inc_tcpinerrs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpinerrs(void)$/;"	f
snmp_inc_tcpinerrs	net/lwip/include/lwip/snmp.h	315;"	d
snmp_inc_tcpinsegs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpinsegs(void)$/;"	f
snmp_inc_tcpinsegs	net/lwip/include/lwip/snmp.h	312;"	d
snmp_inc_tcpoutrsts	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpoutrsts(void)$/;"	f
snmp_inc_tcpoutrsts	net/lwip/include/lwip/snmp.h	316;"	d
snmp_inc_tcpoutsegs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpoutsegs(void)$/;"	f
snmp_inc_tcpoutsegs	net/lwip/include/lwip/snmp.h	313;"	d
snmp_inc_tcppassiveopens	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcppassiveopens(void)$/;"	f
snmp_inc_tcppassiveopens	net/lwip/include/lwip/snmp.h	309;"	d
snmp_inc_tcpretranssegs	net/lwip/core/snmp/mib2.c	/^void snmp_inc_tcpretranssegs(void)$/;"	f
snmp_inc_tcpretranssegs	net/lwip/include/lwip/snmp.h	314;"	d
snmp_inc_udpindatagrams	net/lwip/core/snmp/mib2.c	/^void snmp_inc_udpindatagrams(void)$/;"	f
snmp_inc_udpindatagrams	net/lwip/include/lwip/snmp.h	319;"	d
snmp_inc_udpinerrors	net/lwip/core/snmp/mib2.c	/^void snmp_inc_udpinerrors(void)$/;"	f
snmp_inc_udpinerrors	net/lwip/include/lwip/snmp.h	321;"	d
snmp_inc_udpnoports	net/lwip/core/snmp/mib2.c	/^void snmp_inc_udpnoports(void)$/;"	f
snmp_inc_udpnoports	net/lwip/include/lwip/snmp.h	320;"	d
snmp_inc_udpoutdatagrams	net/lwip/core/snmp/mib2.c	/^void snmp_inc_udpoutdatagrams(void)$/;"	f
snmp_inc_udpoutdatagrams	net/lwip/include/lwip/snmp.h	322;"	d
snmp_init	net/lwip/core/snmp/msg_in.c	/^snmp_init(void)$/;"	f
snmp_insert_arpidx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_insert_arpidx_tree(struct netif *ni, struct ip_addr *ip)$/;"	f
snmp_insert_arpidx_tree	net/lwip/include/lwip/snmp.h	254;"	d
snmp_insert_ipaddridx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_insert_ipaddridx_tree(struct netif *ni)$/;"	f
snmp_insert_ipaddridx_tree	net/lwip/include/lwip/snmp.h	275;"	d
snmp_insert_iprteidx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_insert_iprteidx_tree(u8_t dflt, struct netif *ni)$/;"	f
snmp_insert_iprteidx_tree	net/lwip/include/lwip/snmp.h	277;"	d
snmp_insert_udpidx_tree	net/lwip/core/snmp/mib2.c	/^void snmp_insert_udpidx_tree(struct udp_pcb *pcb)$/;"	f
snmp_insert_udpidx_tree	net/lwip/include/lwip/snmp.h	323;"	d
snmp_iptooid	net/lwip/core/snmp/mib_structs.c	/^snmp_iptooid(struct ip_addr *ip, s32_t *ident)$/;"	f
snmp_iso_prefix_expand	net/lwip/core/snmp/mib_structs.c	/^snmp_iso_prefix_expand(u8_t ident_len, s32_t *ident, struct snmp_obj_id *oidret)$/;"	f
snmp_iso_prefix_tst	net/lwip/core/snmp/mib_structs.c	/^snmp_iso_prefix_tst(u8_t ident_len, s32_t *ident)$/;"	f
snmp_mib_ln_alloc	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_ln_alloc(s32_t id)$/;"	f
snmp_mib_ln_free	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_ln_free(struct mib_list_node *ln)$/;"	f
snmp_mib_lrn_alloc	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_lrn_alloc(void)$/;"	f
snmp_mib_lrn_free	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_lrn_free(struct mib_list_rootnode *lrn)$/;"	f
snmp_mib_node_delete	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_node_delete(struct mib_list_rootnode *rn, struct mib_list_node *n)$/;"	f
snmp_mib_node_find	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_node_find(struct mib_list_rootnode *rn, s32_t objid, struct mib_list_node **fn)$/;"	f
snmp_mib_node_insert	net/lwip/core/snmp/mib_structs.c	/^snmp_mib_node_insert(struct mib_list_rootnode *rn, s32_t objid, struct mib_list_node **insn)$/;"	f
snmp_msg_event	net/lwip/core/snmp/msg_in.c	/^snmp_msg_event(u8_t request_id)$/;"	f
snmp_msg_get_event	net/lwip/core/snmp/msg_in.c	/^snmp_msg_get_event(u8_t request_id, struct snmp_msg_pstat *msg_ps)$/;"	f	file:
snmp_msg_getnext_event	net/lwip/core/snmp/msg_in.c	/^snmp_msg_getnext_event(u8_t request_id, struct snmp_msg_pstat *msg_ps)$/;"	f	file:
snmp_msg_pstat	net/lwip/include/lwip/snmp_msg.h	/^struct snmp_msg_pstat$/;"	s
snmp_msg_set_event	net/lwip/core/snmp/msg_in.c	/^snmp_msg_set_event(u8_t request_id, struct snmp_msg_pstat *msg_ps)$/;"	f	file:
snmp_msg_trap	net/lwip/include/lwip/snmp_msg.h	/^struct snmp_msg_trap$/;"	s
snmp_name_ptr	net/lwip/include/lwip/snmp_structs.h	/^struct snmp_name_ptr$/;"	s
snmp_netiftoifindex	net/lwip/core/snmp/mib_structs.c	/^snmp_netiftoifindex(struct netif *netif, s32_t *ifidx)$/;"	f
snmp_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const snmp_nodes[28] = {$/;"	v
snmp_obj_id	net/lwip/include/lwip/snmp.h	/^struct snmp_obj_id$/;"	s
snmp_oidtoip	net/lwip/core/snmp/mib_structs.c	/^snmp_oidtoip(s32_t *ident, struct ip_addr *ip)$/;"	f
snmp_ok_response	net/lwip/core/snmp/msg_in.c	/^snmp_ok_response(struct snmp_msg_pstat *msg_ps)$/;"	f	file:
snmp_pdu_dec_varbindlist	net/lwip/core/snmp/msg_in.c	/^snmp_pdu_dec_varbindlist(struct pbuf *p, u16_t ofs, u16_t *ofs_ret, struct snmp_msg_pstat *m_stat)$/;"	f	file:
snmp_pdu_header_check	net/lwip/core/snmp/msg_in.c	/^snmp_pdu_header_check(struct pbuf *p, u16_t ofs, u16_t pdu_len, u16_t *ofs_ret, struct snmp_msg_pstat *m_stat)$/;"	f	file:
snmp_publiccommunity	net/lwip/core/snmp/msg_in.c	/^const char snmp_publiccommunity[7] = "public";$/;"	v
snmp_recv	net/lwip/core/snmp/msg_in.c	/^snmp_recv(void *arg, struct udp_pcb *pcb, struct pbuf *p, struct ip_addr *addr, u16_t port)$/;"	f	file:
snmp_resp_header_enc	net/lwip/core/snmp/msg_out.c	/^snmp_resp_header_enc(struct snmp_msg_pstat *m_stat, struct pbuf *p)$/;"	f	file:
snmp_resp_header_lengths	net/lwip/include/lwip/snmp_msg.h	/^struct snmp_resp_header_lengths$/;"	s
snmp_resp_header_sum	net/lwip/core/snmp/msg_out.c	/^snmp_resp_header_sum(struct snmp_msg_pstat *m_stat, u16_t vb_len)$/;"	f	file:
snmp_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node snmp_scalar = {$/;"	v
snmp_search_tree	net/lwip/core/snmp/mib_structs.c	/^snmp_search_tree(struct mib_node *node, u8_t ident_len, s32_t *ident, struct snmp_name_ptr *np)$/;"	f
snmp_send_response	net/lwip/core/snmp/msg_out.c	/^snmp_send_response(struct snmp_msg_pstat *m_stat)$/;"	f
snmp_send_trap	net/lwip/core/snmp/msg_out.c	/^snmp_send_trap(s8_t generic_trap, struct snmp_obj_id *eoid, s32_t specific_trap)$/;"	f
snmp_set_snmpenableauthentraps	net/lwip/core/snmp/mib2.c	/^void snmp_set_snmpenableauthentraps(u8_t *value)$/;"	f
snmp_set_snmpenableauthentraps	net/lwip/include/lwip/snmp.h	355;"	d
snmp_set_syscontact	net/lwip/core/snmp/mib2.c	/^void snmp_set_syscontact(u8_t *ocstr, u8_t *ocstrlen)$/;"	f
snmp_set_syscontact	net/lwip/include/lwip/snmp.h	237;"	d
snmp_set_sysdesr	net/lwip/core/snmp/mib2.c	/^void snmp_set_sysdesr(u8_t *str, u8_t *len)$/;"	f
snmp_set_sysdesr	net/lwip/include/lwip/snmp.h	231;"	d
snmp_set_syslocation	net/lwip/core/snmp/mib2.c	/^void snmp_set_syslocation(u8_t *ocstr, u8_t *ocstrlen)$/;"	f
snmp_set_syslocation	net/lwip/include/lwip/snmp.h	239;"	d
snmp_set_sysname	net/lwip/core/snmp/mib2.c	/^void snmp_set_sysname(u8_t *ocstr, u8_t *ocstrlen)$/;"	f
snmp_set_sysname	net/lwip/include/lwip/snmp.h	238;"	d
snmp_set_sysobjid	net/lwip/core/snmp/mib2.c	/^void snmp_set_sysobjid(struct snmp_obj_id *oid)$/;"	f
snmp_set_sysobjid	net/lwip/include/lwip/snmp.h	232;"	d
snmp_set_test	net/lwip/core/snmp/mib2.c	/^snmp_set_test(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
snmp_set_value	net/lwip/core/snmp/mib2.c	/^snmp_set_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
snmp_trap_dst	net/lwip/core/snmp/msg_out.c	/^struct snmp_trap_dst$/;"	s	file:
snmp_trap_dst_enable	net/lwip/core/snmp/msg_out.c	/^snmp_trap_dst_enable(u8_t dst_idx, u8_t enable)$/;"	f
snmp_trap_dst_ip_set	net/lwip/core/snmp/msg_out.c	/^snmp_trap_dst_ip_set(u8_t dst_idx, struct ip_addr *dst)$/;"	f
snmp_trap_header_enc	net/lwip/core/snmp/msg_out.c	/^snmp_trap_header_enc(struct snmp_msg_trap *m_trap, struct pbuf *p)$/;"	f	file:
snmp_trap_header_lengths	net/lwip/include/lwip/snmp_msg.h	/^struct snmp_trap_header_lengths$/;"	s
snmp_trap_header_sum	net/lwip/core/snmp/msg_out.c	/^snmp_trap_header_sum(struct snmp_msg_trap *m_trap, u16_t vb_len)$/;"	f	file:
snmp_varbind	net/lwip/include/lwip/snmp_msg.h	/^struct snmp_varbind$/;"	s
snmp_varbind_alloc	net/lwip/core/snmp/msg_in.c	/^snmp_varbind_alloc(struct snmp_obj_id *oid, u8_t type, u8_t len)$/;"	f
snmp_varbind_free	net/lwip/core/snmp/msg_in.c	/^snmp_varbind_free(struct snmp_varbind *vb)$/;"	f
snmp_varbind_list_enc	net/lwip/core/snmp/msg_out.c	/^snmp_varbind_list_enc(struct snmp_varbind_root *root, struct pbuf *p, u16_t ofs)$/;"	f	file:
snmp_varbind_list_free	net/lwip/core/snmp/msg_in.c	/^snmp_varbind_list_free(struct snmp_varbind_root *root)$/;"	f
snmp_varbind_list_sum	net/lwip/core/snmp/msg_out.c	/^snmp_varbind_list_sum(struct snmp_varbind_root *root)$/;"	f	file:
snmp_varbind_root	net/lwip/include/lwip/snmp_msg.h	/^struct snmp_varbind_root$/;"	s
snmp_varbind_tail_add	net/lwip/core/snmp/msg_in.c	/^snmp_varbind_tail_add(struct snmp_varbind_root *root, struct snmp_varbind *vb)$/;"	f
snmp_varbind_tail_remove	net/lwip/core/snmp/msg_in.c	/^snmp_varbind_tail_remove(struct snmp_varbind_root *root)$/;"	f
snmp_version	net/lwip/core/snmp/msg_in.c	/^const s32_t snmp_version = 0;$/;"	v
snmpenableauthentraps_default	net/lwip/core/snmp/mib2.c	/^static const u8_t snmpenableauthentraps_default = 2; \/* disabled *\/$/;"	v	file:
snmpenableauthentraps_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* snmpenableauthentraps_ptr = (u8_t*)&snmpenableauthentraps_default;$/;"	v	file:
snmpgrp_id	net/lwip/core/snmp/mib2.c	/^static struct snmp_obj_id snmpgrp_id = {7,{1,3,6,1,2,1,11}};$/;"	v	typeref:struct:snmp_obj_id	file:
snmpinasnparseerrs	net/lwip/core/snmp/mib2.c	/^             snmpinasnparseerrs = 0,$/;"	v	file:
snmpinbadcommunitynames	net/lwip/core/snmp/mib2.c	/^             snmpinbadcommunitynames = 0,$/;"	v	file:
snmpinbadcommunityuses	net/lwip/core/snmp/mib2.c	/^             snmpinbadcommunityuses = 0,$/;"	v	file:
snmpinbadvalues	net/lwip/core/snmp/mib2.c	/^             snmpinbadvalues = 0,$/;"	v	file:
snmpinbadversions	net/lwip/core/snmp/mib2.c	/^             snmpinbadversions = 0,$/;"	v	file:
snmpingenerrs	net/lwip/core/snmp/mib2.c	/^             snmpingenerrs = 0,$/;"	v	file:
snmpingetnexts	net/lwip/core/snmp/mib2.c	/^             snmpingetnexts = 0,$/;"	v	file:
snmpingetrequests	net/lwip/core/snmp/mib2.c	/^             snmpingetrequests = 0,$/;"	v	file:
snmpingetresponses	net/lwip/core/snmp/mib2.c	/^             snmpingetresponses = 0,$/;"	v	file:
snmpinnosuchnames	net/lwip/core/snmp/mib2.c	/^             snmpinnosuchnames = 0,$/;"	v	file:
snmpinpkts	net/lwip/core/snmp/mib2.c	/^static u32_t snmpinpkts = 0,$/;"	v	file:
snmpinreadonlys	net/lwip/core/snmp/mib2.c	/^             snmpinreadonlys = 0,$/;"	v	file:
snmpinsetrequests	net/lwip/core/snmp/mib2.c	/^             snmpinsetrequests = 0,$/;"	v	file:
snmpintoobigs	net/lwip/core/snmp/mib2.c	/^             snmpintoobigs = 0,$/;"	v	file:
snmpintotalreqvars	net/lwip/core/snmp/mib2.c	/^             snmpintotalreqvars = 0,$/;"	v	file:
snmpintotalsetvars	net/lwip/core/snmp/mib2.c	/^             snmpintotalsetvars = 0,$/;"	v	file:
snmpintraps	net/lwip/core/snmp/mib2.c	/^             snmpintraps = 0,$/;"	v	file:
snmpoutbadvalues	net/lwip/core/snmp/mib2.c	/^             snmpoutbadvalues = 0,$/;"	v	file:
snmpoutgenerrs	net/lwip/core/snmp/mib2.c	/^             snmpoutgenerrs = 0,$/;"	v	file:
snmpoutgetnexts	net/lwip/core/snmp/mib2.c	/^             snmpoutgetnexts = 0,$/;"	v	file:
snmpoutgetrequests	net/lwip/core/snmp/mib2.c	/^             snmpoutgetrequests = 0,$/;"	v	file:
snmpoutgetresponses	net/lwip/core/snmp/mib2.c	/^             snmpoutgetresponses = 0,$/;"	v	file:
snmpoutnosuchnames	net/lwip/core/snmp/mib2.c	/^             snmpoutnosuchnames = 0,$/;"	v	file:
snmpoutpkts	net/lwip/core/snmp/mib2.c	/^             snmpoutpkts = 0,$/;"	v	file:
snmpoutsetrequests	net/lwip/core/snmp/mib2.c	/^             snmpoutsetrequests = 0,$/;"	v	file:
snmpouttoobigs	net/lwip/core/snmp/mib2.c	/^             snmpouttoobigs = 0,$/;"	v	file:
snmpouttraps	net/lwip/core/snmp/mib2.c	/^             snmpouttraps = 0;$/;"	v	file:
snprintf	lib/printfmt.c	/^snprintf(char *buf, int n, const char *fmt, ...)$/;"	f
so	obj/net/ns.asm	/^       so do nothing here! *\/$/;"	d
sock	net/lwip/api/sockets.c	/^  struct lwip_socket *sock;$/;"	m	struct:lwip_setgetsockopt_data	typeref:struct:lwip_setgetsockopt_data::lwip_socket	file:
sock	obj/net/ns.asm	/^    sock = get_socket(s);$/;"	d
sock	obj/net/ns.asm	/^  sock = &sockets[s];$/;"	d
sock	obj/net/ns.asm	/^  sock = data->sock;$/;"	d
sock	obj/net/ns.asm	/^  sock = get_socket(s);$/;"	d
sock	user/httpd.c	/^	int sock;$/;"	m	struct:http_request	file:
sock_set_errno	net/lwip/api/sockets.c	158;"	d	file:
sockaddr	net/lwip/include/lwip/sockets.h	/^struct sockaddr {$/;"	s
sockaddr_in	net/lwip/include/lwip/sockets.h	/^struct sockaddr_in {$/;"	s
socket	grade-lab6	/^import os, re, threading, socket, time, urllib2, shutil, struct, difflib$/;"	i
socket	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
socket	inc/ns.h	/^	} socket;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_socket
socket	lib/sockets.c	/^socket(int domain, int type, int protocol)$/;"	f
socket	net/lwip/include/lwip/api.h	/^  int socket;$/;"	m	struct:netconn
socket	net/lwip/include/lwip/sockets.h	340;"	d
sockets	net/lwip/api/sockets.c	/^static struct lwip_socket sockets[NUM_SOCKETS];$/;"	v	typeref:struct:lwip_socket	file:
sockid	inc/fd.h	/^	int sockid;$/;"	m	struct:FdSock
socklen_t	net/lwip/include/lwip/sockets.h	64;"	d
socksem	net/lwip/api/sockets.c	/^static sys_sem_t socksem;$/;"	v	file:
socksem	obj/net/ns.asm	/^  socksem   = sys_sem_new(1);$/;"	d
sp	net/lwip/include/lwip/snmp_msg.h	/^  u16_t sp;$/;"	m	struct:snmp_msg_pstat
spawn	lib/spawn.c	/^spawn(const char *prog, const char **argv)$/;"	f
spawnl	lib/spawn.c	/^spawnl(const char *prog, const char *arg0, ...)$/;"	f
spc_trap	net/lwip/include/lwip/snmp_msg.h	/^  u32_t spc_trap;$/;"	m	struct:snmp_msg_trap
special	kern/e1000.h	/^        uint16_t special;$/;"	m	struct:rcv_desc
special	kern/e1000.h	/^        uint16_t special;$/;"	m	struct:tx_desc
specrev	kern/mpconfig.c	/^	uint8_t specrev;                \/\/ [14]$/;"	m	struct:mp	file:
spin	boot1/boot.S	/^spin:$/;"	l
spin	kern/entry.S	/^spin:	jmp	spin$/;"	l
spin	kern/mpentry.S	/^spin:$/;"	l
spin	obj/boot1/boot.asm	/^spin:$/;"	l
spin	obj/kern/kernel.asm	/^spin:	jmp	spin$/;"	l
spin	obj/kern/kernel.asm	/^spin:$/;"	l
spin_initlock	kern/spinlock.h	26;"	d
spin_lock	kern/spinlock.c	/^spin_lock(struct spinlock *lk)$/;"	f
spin_unlock	kern/spinlock.c	/^spin_unlock(struct spinlock *lk)$/;"	f
spinlock	kern/spinlock.h	/^struct spinlock {$/;"	s
sprintbuf	lib/printfmt.c	/^struct sprintbuf {$/;"	s	file:
sprintputch	lib/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b)$/;"	f	file:
src	net/lwip/include/ipv6/lwip/ip.h	/^  struct ip_addr src, dest;          \/* source and destination IP addresses *\/$/;"	m	struct:ip_hdr	typeref:struct:ip_hdr::ip_addr
src	obj/net/ns.asm	/^    src = (*octetptr) << 8;$/;"	d
src	obj/net/ns.asm	/^  src = ntohs(udphdr->src);$/;"	d
src_ip	obj/net/ns.asm	/^    src_ip = &(netif->ip_addr);$/;"	d
src_ip	obj/net/ns.asm	/^    src_ip = &(pcb->local_ip);$/;"	d
src_page	obj/kern/kernel.asm	/^		src_page = page_lookup(srcenv->env_pml4e, srcva, &src_pte);$/;"	d
src_page	obj/kern/kernel.asm	/^	src_page = page_lookup(src_env->env_pml4e, srcva, &src_pte);$/;"	d
ssize_t	inc/types.h	/^typedef int32_t ssize_t;$/;"	t
ssize_t	obj/fs/fs.asm	/^ssize_t$/;"	l
ssize_t	obj/net/ns.asm	/^ssize_t$/;"	l
ssize_t	obj/net/testinput.asm	/^ssize_t$/;"	l
ssize_t	obj/net/testoutput.asm	/^ssize_t$/;"	l
ssize_t	obj/user/echosrv.asm	/^ssize_t$/;"	l
ssize_t	obj/user/echotest.asm	/^ssize_t$/;"	l
ssize_t	obj/user/forktree.asm	/^ssize_t$/;"	l
ssize_t	obj/user/hello.asm	/^ssize_t$/;"	l
ssize_t	obj/user/httpd.asm	/^ssize_t$/;"	l
ssize_t	obj/user/icode.asm	/^ssize_t$/;"	l
ssize_t	obj/user/idle.asm	/^ssize_t$/;"	l
ssize_t	obj/user/init.asm	/^ssize_t$/;"	l
ssize_t	obj/user/pingpong.asm	/^ssize_t$/;"	l
ssize_t	obj/user/primes.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testfile.asm	/^ssize_t$/;"	l
ssize_t	obj/user/testtime.asm	/^ssize_t$/;"	l
ssize_t	obj/user/writemotd.asm	/^ssize_t$/;"	l
ssthresh	net/lwip/include/lwip/tcp.h	/^  u16_t ssthresh;$/;"	m	struct:tcp_pcb
sswt_cb	net/lwip/core/sys.c	/^struct sswt_cb$/;"	s	file:
sswt_handler	net/lwip/core/sys.c	/^sswt_handler(void *arg)$/;"	f	file:
st_args	net/serv.c	/^struct st_args {$/;"	s	file:
st_dev	inc/fd.h	/^	struct Dev *st_dev;$/;"	m	struct:Stat	typeref:struct:Stat::Dev
st_isdir	inc/fd.h	/^	int st_isdir;$/;"	m	struct:Stat
st_name	inc/fd.h	/^	char st_name[MAXNAMELEN];$/;"	m	struct:Stat
st_size	inc/fd.h	/^	off_t st_size;$/;"	m	struct:Stat
stab_binsearch	kern/kdebug.c	/^stab_binsearch(const struct Stab *stabs, int *region_left, int *region_right,$/;"	f	file:
stab_end	kern/kdebug.c	/^	const struct Stab *stab_end;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:
stab_end	obj/kern/kernel.asm	/^		stab_end = __STAB_END__;$/;"	d
stab_end	obj/kern/kernel.asm	/^		stab_end = usd->stab_end;$/;"	d
stabs	kern/kdebug.c	/^	const struct Stab *stabs;$/;"	m	struct:UserStabData	typeref:struct:UserStabData::Stab	file:
stabs	obj/kern/kernel.asm	/^		stabs = __STAB_BEGIN__;$/;"	d
stabs	obj/kern/kernel.asm	/^		stabs = usd->stabs;$/;"	d
stabstr	kern/kdebug.c	/^	const char *stabstr;$/;"	m	struct:UserStabData	file:
stabstr	obj/kern/kernel.asm	/^		stabstr = __STABSTR_BEGIN__;$/;"	d
stabstr	obj/kern/kernel.asm	/^		stabstr = usd->stabstr;$/;"	d
stabstr_end	kern/kdebug.c	/^	const char *stabstr_end;$/;"	m	struct:UserStabData	file:
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = __STABSTR_END__;$/;"	d
stabstr_end	obj/kern/kernel.asm	/^		stabstr_end = usd->stabstr_end;$/;"	d
stack_size	net/lwip/jos/arch/threadq.h	/^enum { stack_size = PGSIZE };$/;"	e	enum:__anon43
stacktop	obj/net/ns.asm	/^    stacktop = stacktop - 8;$/;"	d
start	boot/boot.S	/^start:$/;"	l
start	boot1/boot.S	/^start:$/;"	l
start	net/lwip/core/ipv4/ip_frag.c	/^  u16_t start;$/;"	m	struct:ip_reass_helper	file:
start	obj/boot/boot.asm	/^start:$/;"	l
start	obj/boot1/boot.asm	/^start:$/;"	l
start	obj/net/ns.asm	/^	start = sys_time_msec();$/;"	d
start32	kern/mpentry.S	/^start32:$/;"	l
start32	obj/kern/kernel.asm	/^start32:$/;"	l
start64	kern/mpentry.S	/^start64:$/;"	l
start64	obj/kern/kernel.asm	/^start64:$/;"	l
start_timer	net/serv.c	/^start_timer(struct timer_thread *t, void (*func)(void), const char *name, int msec)$/;"	f	file:
startdir	fs/fsformat.c	/^startdir(struct File *f, struct Dir *dout)$/;"	f
starting	net/lwip/netif/ppp/fsm.h	/^  void (*starting)(fsm*);                           \/* Called when we want the lower layer *\/$/;"	m	struct:fsm_callbacks
stat	inc/fs.h	/^	} stat;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_stat
stat	lib/fd.c	/^stat(const char *path, struct Stat *stat)$/;"	f
statRet	inc/fs.h	/^	} statRet;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsret_stat
state	net/lwip/core/dns.c	/^  u8_t  state;$/;"	m	struct:dns_table_entry	file:
state	net/lwip/include/ipv4/lwip/autoip.h	/^  u8_t state;               \/* current AutoIP state machine state *\/$/;"	m	struct:autoip
state	net/lwip/include/lwip/api.h	/^  enum netconn_state state;$/;"	m	struct:netconn	typeref:enum:netconn::netconn_state
state	net/lwip/include/lwip/dhcp.h	/^  u8_t state;$/;"	m	struct:dhcp
state	net/lwip/include/lwip/netif.h	/^  void *state;$/;"	m	struct:netif
state	net/lwip/include/lwip/netifapi.h	/^      void *state;$/;"	m	struct:netifapi_msg_msg::__anon20::__anon21
state	net/lwip/include/lwip/snmp_msg.h	/^  u8_t state;$/;"	m	struct:snmp_msg_pstat
state	net/lwip/netif/etharp.c	/^  enum etharp_state state;$/;"	m	struct:etharp_entry	typeref:enum:etharp_entry::etharp_state	file:
state	net/lwip/netif/ppp/fsm.h	/^  int state;                       \/* State *\/$/;"	m	struct:fsm
static	obj/boot1/boot.asm	/^static __inline uint8_t$/;"	l
static	obj/boot1/boot.asm	/^static __inline void$/;"	l
static	obj/fs/fs.asm	/^static __inline uint8_t$/;"	l
static	obj/fs/fs.asm	/^static __inline void$/;"	l
static	obj/fs/fs.asm	/^static char *msg = "This is the NEW message of the day!\\n\\n";$/;"	l
static	obj/fs/fs.asm	/^static inline int64_t$/;"	l
static	obj/fs/fs.asm	/^static int diskno = 1;$/;"	l
static	obj/fs/fs.asm	/^static int$/;"	l
static	obj/fs/fs.asm	/^static long long$/;"	l
static	obj/fs/fs.asm	/^static ssize_t$/;"	l
static	obj/fs/fs.asm	/^static unsigned long long$/;"	l
static	obj/fs/fs.asm	/^static void$/;"	l
static	obj/kern/kernel.asm	/^	static struct pci_bus root_bus;$/;"	t
static	obj/kern/kernel.asm	/^static __inline uint32_t$/;"	l
static	obj/kern/kernel.asm	/^static __inline uint64_t$/;"	l
static	obj/kern/kernel.asm	/^static __inline uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static __inline void $/;"	l
static	obj/kern/kernel.asm	/^static __inline void$/;"	l
static	obj/kern/kernel.asm	/^static bool didinit;$/;"	l
static	obj/kern/kernel.asm	/^static bool serial_exists;$/;"	l
static	obj/kern/kernel.asm	/^static char buf[BUFLEN];$/;"	l
static	obj/kern/kernel.asm	/^static const char *trapname(int trapno)$/;"	l
static	obj/kern/kernel.asm	/^static envid_t$/;"	l
static	obj/kern/kernel.asm	/^static inline physaddr_t$/;"	l
static	obj/kern/kernel.asm	/^static inline ppn_t$/;"	l
static	obj/kern/kernel.asm	/^static inline struct Page*$/;"	l
static	obj/kern/kernel.asm	/^static inline uint32_t$/;"	l
static	obj/kern/kernel.asm	/^static inline void$/;"	l
static	obj/kern/kernel.asm	/^static inline void*$/;"	l
static	obj/kern/kernel.asm	/^static int$/;"	l
static	obj/kern/kernel.asm	/^static long long$/;"	l
static	obj/kern/kernel.asm	/^static struct mp *$/;"	t
static	obj/kern/kernel.asm	/^static struct mpconf *$/;"	t
static	obj/kern/kernel.asm	/^static uint16_t *crt_buf;$/;"	l
static	obj/kern/kernel.asm	/^static uint16_t crt_pos;$/;"	l
static	obj/kern/kernel.asm	/^static uint8_t$/;"	l
static	obj/kern/kernel.asm	/^static unsigned int ticks;$/;"	l
static	obj/kern/kernel.asm	/^static unsigned long long$/;"	l
static	obj/kern/kernel.asm	/^static void *$/;"	l
static	obj/kern/kernel.asm	/^static void boot_aps(void);$/;"	l
static	obj/kern/kernel.asm	/^static void cons_putc(int c);$/;"	l
static	obj/kern/kernel.asm	/^static void$/;"	l
static	obj/net/ns.asm	/^static LIST_HEAD(thread_list, sys_thread) threads[thread_hash_size];$/;"	l
static	obj/net/ns.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/net/ns.asm	/^static bool buse[QUEUE_SIZE];$/;"	l
static	obj/net/ns.asm	/^static envid_t input_envid;$/;"	l
static	obj/net/ns.asm	/^static envid_t output_envid;$/;"	l
static	obj/net/ns.asm	/^static envid_t timer_envid;$/;"	l
static	obj/net/ns.asm	/^static err_t$/;"	l
static	obj/net/ns.asm	/^static inline int64_t$/;"	l
static	obj/net/ns.asm	/^static inline struct thread_context *$/;"	l
static	obj/net/ns.asm	/^static inline void $/;"	l
static	obj/net/ns.asm	/^static inline void$/;"	l
static	obj/net/ns.asm	/^static int next_i(int i) { return (i+1) % QUEUE_SIZE; }$/;"	l
static	obj/net/ns.asm	/^static int prev_i(int i) { return (i ? i-1 : QUEUE_SIZE-1); }$/;"	l
static	obj/net/ns.asm	/^static int$/;"	l
static	obj/net/ns.asm	/^static long long$/;"	l
static	obj/net/ns.asm	/^static ssize_t$/;"	l
static	obj/net/ns.asm	/^static struct ip_reassdata*$/;"	t
static	obj/net/ns.asm	/^static struct lwip_socket *$/;"	t
static	obj/net/ns.asm	/^static struct pbuf *$/;"	t
static	obj/net/ns.asm	/^static struct thread_queue kill_queue;$/;"	t
static	obj/net/ns.asm	/^static struct thread_queue thread_queue;$/;"	t
static	obj/net/ns.asm	/^static thread_id_t$/;"	l
static	obj/net/ns.asm	/^static u16_t$/;"	l
static	obj/net/ns.asm	/^static u32_t dhcp_get_option_long(u8_t *ptr)$/;"	l
static	obj/net/ns.asm	/^static u8_t *dhcp_get_option_ptr(struct dhcp *dhcp, u8_t option_type)$/;"	l
static	obj/net/ns.asm	/^static u8_t$/;"	l
static	obj/net/ns.asm	/^static uint8_t *mend   = (uint8_t*) 0x10000000;$/;"	l
static	obj/net/ns.asm	/^static uint8_t *mptr;$/;"	l
static	obj/net/ns.asm	/^static unsigned long long$/;"	l
static	obj/net/ns.asm	/^static void *$/;"	l
static	obj/net/ns.asm	/^static void __attribute__((noreturn))$/;"	l
static	obj/net/ns.asm	/^static void dhcp_free_reply(struct dhcp *dhcp)$/;"	l
static	obj/net/ns.asm	/^static void dhcp_recv(void *arg, struct udp_pcb *pcb, struct pbuf *p, struct ip_addr *addr, u16_t port)$/;"	l
static	obj/net/ns.asm	/^static void$/;"	l
static	obj/net/testinput.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/net/testinput.asm	/^static inline int64_t$/;"	l
static	obj/net/testinput.asm	/^static int$/;"	l
static	obj/net/testinput.asm	/^static long long$/;"	l
static	obj/net/testinput.asm	/^static ssize_t$/;"	l
static	obj/net/testinput.asm	/^static struct jif_pkt *pkt = (struct jif_pkt*)REQVA;$/;"	t
static	obj/net/testinput.asm	/^static unsigned long long$/;"	l
static	obj/net/testinput.asm	/^static void$/;"	l
static	obj/net/testoutput.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/net/testoutput.asm	/^static inline int64_t$/;"	l
static	obj/net/testoutput.asm	/^static int$/;"	l
static	obj/net/testoutput.asm	/^static long long$/;"	l
static	obj/net/testoutput.asm	/^static ssize_t$/;"	l
static	obj/net/testoutput.asm	/^static struct jif_pkt *pkt = (struct jif_pkt*)REQVA;$/;"	t
static	obj/net/testoutput.asm	/^static unsigned long long$/;"	l
static	obj/net/testoutput.asm	/^static void$/;"	l
static	obj/user/echosrv.asm	/^static inline int64_t$/;"	l
static	obj/user/echosrv.asm	/^static int$/;"	l
static	obj/user/echosrv.asm	/^static long long$/;"	l
static	obj/user/echosrv.asm	/^static ssize_t$/;"	l
static	obj/user/echosrv.asm	/^static unsigned long long$/;"	l
static	obj/user/echosrv.asm	/^static void$/;"	l
static	obj/user/echotest.asm	/^static inline int64_t$/;"	l
static	obj/user/echotest.asm	/^static int$/;"	l
static	obj/user/echotest.asm	/^static long long$/;"	l
static	obj/user/echotest.asm	/^static ssize_t$/;"	l
static	obj/user/echotest.asm	/^static unsigned long long$/;"	l
static	obj/user/echotest.asm	/^static void$/;"	l
static	obj/user/forktree.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/forktree.asm	/^static inline int64_t$/;"	l
static	obj/user/forktree.asm	/^static int$/;"	l
static	obj/user/forktree.asm	/^static long long$/;"	l
static	obj/user/forktree.asm	/^static ssize_t$/;"	l
static	obj/user/forktree.asm	/^static unsigned long long$/;"	l
static	obj/user/forktree.asm	/^static void$/;"	l
static	obj/user/hello.asm	/^static inline int64_t$/;"	l
static	obj/user/hello.asm	/^static int$/;"	l
static	obj/user/hello.asm	/^static long long$/;"	l
static	obj/user/hello.asm	/^static ssize_t$/;"	l
static	obj/user/hello.asm	/^static unsigned long long$/;"	l
static	obj/user/hello.asm	/^static void$/;"	l
static	obj/user/httpd.asm	/^static const char*$/;"	l
static	obj/user/httpd.asm	/^static inline int64_t$/;"	l
static	obj/user/httpd.asm	/^static int$/;"	l
static	obj/user/httpd.asm	/^static long long$/;"	l
static	obj/user/httpd.asm	/^static ssize_t$/;"	l
static	obj/user/httpd.asm	/^static uint8_t *mend   = (uint8_t*) 0x10000000;$/;"	l
static	obj/user/httpd.asm	/^static uint8_t *mptr;$/;"	l
static	obj/user/httpd.asm	/^static unsigned long long$/;"	l
static	obj/user/httpd.asm	/^static void$/;"	l
static	obj/user/icode.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/icode.asm	/^static inline int64_t$/;"	l
static	obj/user/icode.asm	/^static int$/;"	l
static	obj/user/icode.asm	/^static long long$/;"	l
static	obj/user/icode.asm	/^static ssize_t$/;"	l
static	obj/user/icode.asm	/^static unsigned long long$/;"	l
static	obj/user/icode.asm	/^static void$/;"	l
static	obj/user/idle.asm	/^static inline int64_t$/;"	l
static	obj/user/idle.asm	/^static int$/;"	l
static	obj/user/idle.asm	/^static long long$/;"	l
static	obj/user/idle.asm	/^static ssize_t$/;"	l
static	obj/user/idle.asm	/^static unsigned long long$/;"	l
static	obj/user/idle.asm	/^static void$/;"	l
static	obj/user/init.asm	/^static inline int64_t$/;"	l
static	obj/user/init.asm	/^static int$/;"	l
static	obj/user/init.asm	/^static long long$/;"	l
static	obj/user/init.asm	/^static ssize_t$/;"	l
static	obj/user/init.asm	/^static unsigned long long$/;"	l
static	obj/user/init.asm	/^static void$/;"	l
static	obj/user/pingpong.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/pingpong.asm	/^static inline int64_t$/;"	l
static	obj/user/pingpong.asm	/^static int$/;"	l
static	obj/user/pingpong.asm	/^static long long$/;"	l
static	obj/user/pingpong.asm	/^static ssize_t$/;"	l
static	obj/user/pingpong.asm	/^static unsigned long long$/;"	l
static	obj/user/pingpong.asm	/^static void$/;"	l
static	obj/user/primes.asm	/^static __inline envid_t __attribute__((always_inline))$/;"	l
static	obj/user/primes.asm	/^static inline int64_t$/;"	l
static	obj/user/primes.asm	/^static int$/;"	l
static	obj/user/primes.asm	/^static long long$/;"	l
static	obj/user/primes.asm	/^static ssize_t$/;"	l
static	obj/user/primes.asm	/^static unsigned long long$/;"	l
static	obj/user/primes.asm	/^static void$/;"	l
static	obj/user/testfile.asm	/^static inline int64_t$/;"	l
static	obj/user/testfile.asm	/^static int$/;"	l
static	obj/user/testfile.asm	/^static long long$/;"	l
static	obj/user/testfile.asm	/^static ssize_t$/;"	l
static	obj/user/testfile.asm	/^static unsigned long long$/;"	l
static	obj/user/testfile.asm	/^static void$/;"	l
static	obj/user/testtime.asm	/^static __inline uint64_t read_tsc(void) __attribute__((always_inline));$/;"	l
static	obj/user/testtime.asm	/^static __inline void$/;"	l
static	obj/user/testtime.asm	/^static inline int64_t$/;"	l
static	obj/user/testtime.asm	/^static int$/;"	l
static	obj/user/testtime.asm	/^static long long$/;"	l
static	obj/user/testtime.asm	/^static ssize_t$/;"	l
static	obj/user/testtime.asm	/^static unsigned long long$/;"	l
static	obj/user/testtime.asm	/^static void$/;"	l
static	obj/user/writemotd.asm	/^static inline int64_t$/;"	l
static	obj/user/writemotd.asm	/^static int$/;"	l
static	obj/user/writemotd.asm	/^static long long$/;"	l
static	obj/user/writemotd.asm	/^static ssize_t$/;"	l
static	obj/user/writemotd.asm	/^static unsigned long long$/;"	l
static	obj/user/writemotd.asm	/^static void$/;"	l
static_assert	inc/assert.h	18;"	d
stats	net/lwip/netif/ppp/vj.h	/^  struct vjstat stats;$/;"	m	struct:vjcompress	typeref:struct:vjcompress::vjstat
stats_	net/lwip/include/lwip/stats.h	/^struct stats_ {$/;"	s
stats_display	net/lwip/core/stats.c	/^stats_display(void)$/;"	f
stats_display	net/lwip/include/lwip/stats.h	271;"	d
stats_display_igmp	net/lwip/core/stats.c	/^stats_display_igmp(struct stats_igmp *igmp)$/;"	f
stats_display_igmp	net/lwip/include/lwip/stats.h	273;"	d
stats_display_mem	net/lwip/core/stats.c	/^stats_display_mem(struct stats_mem *mem, char *name)$/;"	f
stats_display_mem	net/lwip/include/lwip/stats.h	274;"	d
stats_display_memp	net/lwip/core/stats.c	/^stats_display_memp(struct stats_mem *mem, int index)$/;"	f
stats_display_memp	net/lwip/include/lwip/stats.h	275;"	d
stats_display_proto	net/lwip/core/stats.c	/^stats_display_proto(struct stats_proto *proto, char *name)$/;"	f
stats_display_proto	net/lwip/include/lwip/stats.h	272;"	d
stats_display_sys	net/lwip/core/stats.c	/^stats_display_sys(struct stats_sys *sys)$/;"	f
stats_display_sys	net/lwip/include/lwip/stats.h	276;"	d
stats_igmp	net/lwip/include/lwip/stats.h	/^struct stats_igmp {$/;"	s
stats_init	net/lwip/include/lwip/stats.h	142;"	d
stats_init	net/lwip/include/lwip/stats.h	147;"	d
stats_mem	net/lwip/include/lwip/stats.h	/^struct stats_mem {$/;"	s
stats_proto	net/lwip/include/lwip/stats.h	/^struct stats_proto {$/;"	s
stats_sys	net/lwip/include/lwip/stats.h	/^struct stats_sys {$/;"	s
stats_syselem	net/lwip/include/lwip/stats.h	/^struct stats_syselem {$/;"	s
status	kern/e1000.h	/^        uint8_t status;$/;"	m	struct:rcv_desc
status	kern/e1000.h	/^        uint8_t status;$/;"	m	struct:tx_desc
status_callback	net/lwip/include/lwip/netif.h	/^  void (* status_callback)(struct netif *netif);$/;"	m	struct:netif
stktop	obj/kern/kernel.asm	/^            		stktop = tf->tf_rsp - sizeof(uintptr_t);$/;"	d
stop	gradelib.py	/^    def stop(line):$/;"	f	function:stop_on_line
stop	obj/net/ns.asm	/^			stop = sys_time_msec() + to;$/;"	d
stop	obj/net/testinput.asm	/^			stop = sys_time_msec() + to;$/;"	d
stop	obj/net/testoutput.asm	/^			stop = sys_time_msec() + to;$/;"	d
stop_breakpoint	gradelib.py	/^def stop_breakpoint(addr):$/;"	f
stop_on_line	gradelib.py	/^def stop_on_line(regexp):$/;"	f
strcat	lib/string.c	/^strcat(char *dst, const char *src)$/;"	f
strchr	lib/string.c	/^strchr(const char *s, char c)$/;"	f
strcmp	lib/string.c	/^strcmp(const char *p, const char *q)$/;"	f
strcpy	lib/string.c	/^strcpy(char *dst, const char *src)$/;"	f
strfind	lib/string.c	/^strfind(const char *s, char c)$/;"	f
string_size	obj/user/icode.asm	/^	string_size = 0;$/;"	d
string_store	obj/user/icode.asm	/^	string_store = (char*) UTEMP + PGSIZE - string_size;$/;"	d
strlcpy	lib/string.c	/^strlcpy(char *dst, const char *src, size_t size)$/;"	f
strlen	lib/string.c	/^strlen(const char *s)$/;"	f
strncmp	lib/string.c	/^strncmp(const char *p, const char *q, size_t n)$/;"	f
strncpy	lib/string.c	/^strncpy(char *dst, const char *src, size_t size) {$/;"	f
strnlen	lib/string.c	/^strnlen(const char *s, size_t size)$/;"	f
strplen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t strplen;$/;"	m	struct:snmp_trap_header_lengths
strplenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t strplenlen;$/;"	m	struct:snmp_trap_header_lengths
strtol	lib/string.c	/^strtol(const char *s, char **endptr, int base)$/;"	f
struct	grade-lab6	/^import os, re, threading, socket, time, urllib2, shutil, struct, difflib$/;"	i
subnetMask	net/lwip/netif/ppp/ppp.c	/^u_long subnetMask;$/;"	v
subprocess	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
success	boot/boot.S	/^success:$/;"	l
success	obj/boot/boot.asm	/^success:$/;"	l
sum	kern/mpconfig.c	/^sum(void *addr, int len)$/;"	f	file:
sum	obj/kern/kernel.asm	/^	sum = 0;$/;"	d
sum	user/init.c	/^sum(const char *s, int n)$/;"	f
super	fs/fs.h	/^struct Super *super;		\/\/ superblock$/;"	v	typeref:struct:Super
super	fs/fsformat.c	/^struct Super *super;$/;"	v	typeref:struct:Super
super	obj/fs/fs.asm	/^	super = diskaddr(1);$/;"	d
sv	net/lwip/include/lwip/tcp.h	/^  s16_t sa, sv; \/* @todo document this *\/$/;"	m	struct:tcp_pcb
swapped	obj/net/ns.asm	/^      swapped = 1 - swapped;$/;"	d
swapped	obj/net/ns.asm	/^  swapped = 0;$/;"	d
sync	lib/file.c	/^sync(void)$/;"	f
sys	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
sys	net/lwip/include/lwip/stats.h	/^  struct stats_sys sys;$/;"	m	struct:stats_	typeref:struct:stats_::stats_sys
sys_arch_mbox_fetch	net/lwip/jos/arch/sys_arch.c	/^sys_arch_mbox_fetch(sys_mbox_t mbox, void **msg, u32_t tm_msec)$/;"	f
sys_arch_mbox_tryfetch	net/lwip/jos/arch/sys_arch.c	/^sys_arch_mbox_tryfetch(sys_mbox_t mbox, void **msg)$/;"	f
sys_arch_sem_wait	net/lwip/include/lwip/sys.h	57;"	d
sys_arch_sem_wait	net/lwip/jos/arch/sys_arch.c	/^sys_arch_sem_wait(sys_sem_t sem, u32_t tm_msec)$/;"	f
sys_arch_timeouts	net/lwip/jos/arch/sys_arch.c	/^sys_arch_timeouts(void)$/;"	f
sys_cgetc	kern/syscall.c	/^sys_cgetc(void)$/;"	f	file:
sys_cgetc	lib/syscall.c	/^sys_cgetc(void)$/;"	f
sys_cputs	kern/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f	file:
sys_cputs	lib/syscall.c	/^sys_cputs(const char *s, size_t len)$/;"	f
sys_env_destroy	kern/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f	file:
sys_env_destroy	lib/syscall.c	/^sys_env_destroy(envid_t envid)$/;"	f
sys_env_set_pgfault_upcall	kern/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *func)$/;"	f	file:
sys_env_set_pgfault_upcall	lib/syscall.c	/^sys_env_set_pgfault_upcall(envid_t envid, void *upcall)$/;"	f
sys_env_set_status	kern/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f	file:
sys_env_set_status	lib/syscall.c	/^sys_env_set_status(envid_t envid, int status)$/;"	f
sys_env_set_trapframe	kern/syscall.c	/^sys_env_set_trapframe(envid_t envid, struct Trapframe *tf)$/;"	f	file:
sys_env_set_trapframe	lib/syscall.c	/^sys_env_set_trapframe(envid_t envid, struct Trapframe *tf)$/;"	f
sys_errlist	net/lwip/jos/arch/perror.c	/^const char *sys_errlist[] = {$/;"	v
sys_exofork	inc/lib.h	/^sys_exofork(void)$/;"	f
sys_exofork	kern/syscall.c	/^sys_exofork(void)$/;"	f	file:
sys_getenvid	kern/syscall.c	/^sys_getenvid(void)$/;"	f	file:
sys_getenvid	lib/syscall.c	/^sys_getenvid(void)$/;"	f
sys_init	net/lwip/include/lwip/sys.h	50;"	d
sys_init	net/lwip/jos/arch/sys_arch.c	/^sys_init(void)$/;"	f
sys_ipc_recv	kern/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f	file:
sys_ipc_recv	lib/syscall.c	/^sys_ipc_recv(void *dstva)$/;"	f
sys_ipc_try_send	kern/syscall.c	/^sys_ipc_try_send(envid_t envid, uint32_t value, void *srcva, unsigned perm)$/;"	f	file:
sys_ipc_try_send	lib/syscall.c	/^sys_ipc_try_send(envid_t envid, uint64_t value, void *srcva, int perm)$/;"	f
sys_mbox_entry	net/lwip/jos/arch/sys_arch.c	/^struct sys_mbox_entry {$/;"	s	file:
sys_mbox_fetch	net/lwip/core/sys.c	/^sys_mbox_fetch(sys_mbox_t mbox, void **msg)$/;"	f
sys_mbox_fetch	net/lwip/include/lwip/sys.h	60;"	d
sys_mbox_free	net/lwip/include/lwip/sys.h	64;"	d
sys_mbox_free	net/lwip/jos/arch/sys_arch.c	/^sys_mbox_free(sys_mbox_t mbox)$/;"	f
sys_mbox_new	net/lwip/include/lwip/sys.h	59;"	d
sys_mbox_new	net/lwip/jos/arch/sys_arch.c	/^sys_mbox_new(int size)$/;"	f
sys_mbox_post	net/lwip/include/lwip/sys.h	62;"	d
sys_mbox_post	net/lwip/jos/arch/sys_arch.c	/^sys_mbox_post(sys_mbox_t mbox, void *msg)$/;"	f
sys_mbox_t	net/lwip/include/lwip/sys.h	/^typedef u8_t sys_mbox_t;$/;"	t
sys_mbox_t	net/lwip/jos/arch/sys_arch.h	/^typedef int sys_mbox_t;$/;"	t
sys_mbox_t	obj/net/ns.asm	/^sys_mbox_t$/;"	l
sys_mbox_tryfetch	net/lwip/include/lwip/sys.h	135;"	d
sys_mbox_tryfetch	net/lwip/include/lwip/sys.h	61;"	d
sys_mbox_trypost	net/lwip/include/lwip/sys.h	63;"	d
sys_mbox_trypost	net/lwip/jos/arch/sys_arch.c	/^sys_mbox_trypost(sys_mbox_t mbox, void *msg)$/;"	f
sys_msleep	net/lwip/core/sys.c	/^sys_msleep(u32_t ms)$/;"	f
sys_net_try_receive	kern/syscall.c	/^sys_net_try_receive(char *data, int *len)$/;"	f	file:
sys_net_try_receive	lib/syscall.c	/^sys_net_try_receive(char *data, int *len)$/;"	f
sys_net_try_send	kern/syscall.c	/^sys_net_try_send(char *data, int len)$/;"	f	file:
sys_net_try_send	lib/syscall.c	/^sys_net_try_send(char *data, int len)$/;"	f
sys_page_alloc	kern/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f	file:
sys_page_alloc	lib/syscall.c	/^sys_page_alloc(envid_t envid, void *va, int perm)$/;"	f
sys_page_map	kern/syscall.c	/^sys_page_map(envid_t srcenvid, void *srcva,$/;"	f	file:
sys_page_map	lib/syscall.c	/^sys_page_map(envid_t srcenv, void *srcva, envid_t dstenv, void *dstva, int perm)$/;"	f
sys_page_unmap	kern/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f	file:
sys_page_unmap	lib/syscall.c	/^sys_page_unmap(envid_t envid, void *va)$/;"	f
sys_prot_t	net/lwip/include/lwip/sys.h	/^typedef u8_t sys_prot_t;$/;"	t
sys_sem_entry	net/lwip/jos/arch/sys_arch.c	/^struct sys_sem_entry {$/;"	s	file:
sys_sem_free	net/lwip/include/lwip/sys.h	58;"	d
sys_sem_free	net/lwip/jos/arch/sys_arch.c	/^sys_sem_free(sys_sem_t sem)$/;"	f
sys_sem_new	net/lwip/include/lwip/sys.h	53;"	d
sys_sem_new	net/lwip/jos/arch/sys_arch.c	/^sys_sem_new(u8_t count)$/;"	f
sys_sem_signal	net/lwip/include/lwip/sys.h	54;"	d
sys_sem_signal	net/lwip/jos/arch/sys_arch.c	/^sys_sem_signal(sys_sem_t sem)$/;"	f
sys_sem_t	net/lwip/include/lwip/sys.h	/^typedef u8_t sys_sem_t;$/;"	t
sys_sem_t	net/lwip/jos/arch/sys_arch.h	/^typedef	int sys_sem_t;$/;"	t
sys_sem_t	obj/net/ns.asm	/^sys_sem_t$/;"	l
sys_sem_wait	net/lwip/core/sys.c	/^sys_sem_wait(sys_sem_t sem)$/;"	f
sys_sem_wait	net/lwip/include/lwip/sys.h	55;"	d
sys_sem_wait_timeout	net/lwip/core/sys.c	/^sys_sem_wait_timeout(sys_sem_t sem, u32_t timeout)$/;"	f
sys_sem_wait_timeout	net/lwip/include/lwip/sys.h	56;"	d
sys_tem	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node sys_tem = {$/;"	v	typeref:struct:mib_array_node
sys_tem_ids	net/lwip/core/snmp/mib2.c	/^const s32_t sys_tem_ids[7] = { 1, 2, 3, 4, 5, 6, 7 };$/;"	v
sys_tem_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const sys_tem_nodes[7] = {$/;"	v
sys_tem_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node sys_tem_scalar = {$/;"	v
sys_thread	net/lwip/jos/arch/sys_arch.c	/^struct sys_thread {$/;"	s	file:
sys_thread_new	net/lwip/include/lwip/sys.h	66;"	d
sys_thread_new	net/lwip/jos/arch/sys_arch.c	/^sys_thread_new(char *name, void (* thread)(void *arg), void *arg, $/;"	f
sys_thread_t	net/lwip/jos/arch/sys_arch.h	/^typedef int sys_thread_t;$/;"	t
sys_thread_t	obj/net/ns.asm	/^sys_thread_t$/;"	l
sys_time_msec	kern/syscall.c	/^sys_time_msec(void)$/;"	f	file:
sys_time_msec	lib/syscall.c	/^sys_time_msec(void)$/;"	f
sys_timeo	net/lwip/include/lwip/sys.h	/^struct sys_timeo {$/;"	s
sys_timeo	net/lwip/include/lwip/sys.h	/^struct sys_timeo {u8_t dummy;};$/;"	s
sys_timeout	net/lwip/core/sys.c	/^sys_timeout(u32_t msecs, sys_timeout_handler h, void *arg)$/;"	f
sys_timeout	net/lwip/include/lwip/sys.h	51;"	d
sys_timeout_handler	net/lwip/include/lwip/sys.h	/^typedef void (* sys_timeout_handler)(void *arg);$/;"	t
sys_timeouts	net/lwip/include/lwip/sys.h	/^struct sys_timeouts {$/;"	s
sys_untimeout	net/lwip/core/sys.c	/^sys_untimeout(sys_timeout_handler h, void *arg)$/;"	f
sys_untimeout	net/lwip/include/lwip/sys.h	52;"	d
sys_yield	kern/syscall.c	/^sys_yield(void)$/;"	f	file:
sys_yield	lib/syscall.c	/^sys_yield(void)$/;"	f
syscall	kern/syscall.c	/^syscall(uint64_t syscallno, uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)$/;"	f
syscall	lib/syscall.c	/^syscall(int num, int check, uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)$/;"	f	file:
syscontact_default	net/lwip/core/snmp/mib2.c	/^static const u8_t syscontact_default[] = "";$/;"	v	file:
syscontact_len_default	net/lwip/core/snmp/mib2.c	/^static const u8_t syscontact_len_default = 0;$/;"	v	file:
syscontact_len_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* syscontact_len_ptr = (u8_t*)&syscontact_len_default;$/;"	v	file:
syscontact_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* syscontact_ptr = (u8_t*)&syscontact_default[0];$/;"	v	file:
sysdescr_default	net/lwip/core/snmp/mib2.c	/^static const u8_t sysdescr_default[] = "lwIP";$/;"	v	file:
sysdescr_len_default	net/lwip/core/snmp/mib2.c	/^static const u8_t sysdescr_len_default = 4;$/;"	v	file:
sysdescr_len_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* sysdescr_len_ptr = (u8_t*)&sysdescr_len_default;$/;"	v	file:
sysdescr_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* sysdescr_ptr = (u8_t*)&sysdescr_default[0];$/;"	v	file:
syslocation_default	net/lwip/core/snmp/mib2.c	/^static const u8_t syslocation_default[] = "";$/;"	v	file:
syslocation_len_default	net/lwip/core/snmp/mib2.c	/^static const u8_t syslocation_len_default = 0;$/;"	v	file:
syslocation_len_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* syslocation_len_ptr = (u8_t*)&syslocation_len_default;$/;"	v	file:
syslocation_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* syslocation_ptr = (u8_t*)&syslocation_default[0];$/;"	v	file:
sysname_default	net/lwip/core/snmp/mib2.c	/^static const u8_t sysname_default[] = "FQDN-unk";$/;"	v	file:
sysname_len_default	net/lwip/core/snmp/mib2.c	/^static const u8_t sysname_len_default = 8;$/;"	v	file:
sysname_len_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* sysname_len_ptr = (u8_t*)&sysname_len_default;$/;"	v	file:
sysname_ptr	net/lwip/core/snmp/mib2.c	/^static u8_t* sysname_ptr = (u8_t*)&sysname_default[0];$/;"	v	file:
sysobjid	net/lwip/core/snmp/mib2.c	/^static struct snmp_obj_id sysobjid = {SNMP_SYSOBJID_LEN, SNMP_SYSOBJID};$/;"	v	typeref:struct:snmp_obj_id	file:
sysservices	net/lwip/core/snmp/mib2.c	/^static const s32_t sysservices = SNMP_SYSSERVICES;$/;"	v	file:
system_get_object_def	net/lwip/core/snmp/mib2.c	/^system_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
system_get_value	net/lwip/core/snmp/mib2.c	/^system_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
system_set_test	net/lwip/core/snmp/mib2.c	/^system_set_test(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
system_set_value	net/lwip/core/snmp/mib2.c	/^system_set_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
sysuptime	net/lwip/core/snmp/mib2.c	/^static u32_t sysuptime = 0;$/;"	v	file:
t	obj/net/ns.asm	/^    t = malloc(sizeof(*t));$/;"	d
t1_timeout	net/lwip/include/lwip/dhcp.h	/^  u16_t t1_timeout;  \/* #ticks with period DHCP_COARSE_TIMER_SECS for renewal time *\/$/;"	m	struct:dhcp
t2_timeout	net/lwip/include/lwip/dhcp.h	/^  u16_t t2_timeout;  \/* #ticks with period DHCP_COARSE_TIMER_SECS for rebind time *\/$/;"	m	struct:dhcp
t_arp	net/serv.c	/^static struct timer_thread t_arp;$/;"	v	typeref:struct:timer_thread	file:
t_tcpf	net/serv.c	/^static struct timer_thread t_tcpf;$/;"	v	typeref:struct:timer_thread	file:
t_tcps	net/serv.c	/^static struct timer_thread t_tcps;$/;"	v	typeref:struct:timer_thread	file:
tail	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *tail;$/;"	m	struct:snmp_varbind_root	typeref:struct:snmp_varbind_root::snmp_varbind
tail	net/lwip/include/lwip/snmp_structs.h	/^  struct mib_list_node *tail;$/;"	m	struct:mib_list_rootnode	typeref:struct:mib_list_rootnode::mib_list_node
tail_gone	obj/net/ns.asm	/^    tail_gone = pbuf_free(q);$/;"	d
tc	obj/net/ns.asm	/^	tc = tc->tc_queue_link;$/;"	d
tc_arg	net/lwip/jos/arch/threadq.h	/^    uint32_t		tc_arg;$/;"	m	struct:thread_context
tc_entry	net/lwip/jos/arch/threadq.h	/^    void		(*tc_entry)(uint64_t);$/;"	m	struct:thread_context
tc_jb	net/lwip/jos/arch/threadq.h	/^    struct jos_jmp_buf	tc_jb;$/;"	m	struct:thread_context	typeref:struct:thread_context::jos_jmp_buf
tc_name	net/lwip/jos/arch/threadq.h	/^    char 		tc_name[name_size];$/;"	m	struct:thread_context
tc_nonhalt	net/lwip/jos/arch/threadq.h	/^    int			tc_nonhalt;$/;"	m	struct:thread_context
tc_onhalt	net/lwip/jos/arch/threadq.h	/^    void		(*tc_onhalt[THREAD_NUM_ONHALT])(thread_id_t);$/;"	m	struct:thread_context
tc_queue_link	net/lwip/jos/arch/threadq.h	/^    struct thread_context *tc_queue_link;$/;"	m	struct:thread_context	typeref:struct:thread_context::thread_context
tc_stack_bottom	net/lwip/jos/arch/threadq.h	/^    void		*tc_stack_bottom;$/;"	m	struct:thread_context
tc_tid	net/lwip/jos/arch/threadq.h	/^    thread_id_t		tc_tid;$/;"	m	struct:thread_context
tc_wait_addr	net/lwip/jos/arch/threadq.h	/^    volatile uint32_t	*tc_wait_addr;$/;"	m	struct:thread_context
tc_wakeup	net/lwip/jos/arch/threadq.h	/^    volatile char	tc_wakeup;$/;"	m	struct:thread_context
tclass1	net/lwip/include/ipv6/lwip/ip.h	/^  u8_t tclass1:4, v:4;$/;"	m	struct:ip_hdr
tclass2	net/lwip/include/ipv6/lwip/ip.h	/^  u8_t flow1:4, tclass2:4;  $/;"	m	struct:ip_hdr
tcp	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node tcp = {$/;"	v	typeref:struct:mib_array_node
tcp	net/lwip/include/lwip/api.h	/^    struct tcp_pcb *tcp;$/;"	m	union:netconn::__anon19	typeref:struct:netconn::__anon19::tcp_pcb
tcp	net/lwip/include/lwip/stats.h	/^  struct stats_proto tcp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
tcp_abort	net/lwip/core/tcp.c	/^tcp_abort(struct tcp_pcb *pcb)$/;"	f
tcp_accept	net/lwip/core/tcp.c	/^tcp_accept(struct tcp_pcb *pcb,$/;"	f
tcp_accept_null	net/lwip/core/tcp.c	/^tcp_accept_null(void *arg, struct tcp_pcb *pcb, err_t err)$/;"	f	file:
tcp_accepted	net/lwip/include/lwip/tcp.h	83;"	d
tcp_accepted	net/lwip/include/lwip/tcp.h	85;"	d
tcp_ack	net/lwip/include/lwip/tcp.h	509;"	d
tcp_ack_now	net/lwip/include/lwip/tcp.h	517;"	d
tcp_active_pcbs	net/lwip/core/tcp.c	/^struct tcp_pcb *tcp_active_pcbs;  $/;"	v	typeref:struct:tcp_pcb
tcp_active_pcbs	obj/net/ns.asm	/^        tcp_active_pcbs = pcb->next;$/;"	d
tcp_active_pcbs	obj/net/ns.asm	/^        tcp_active_pcbs = pcb;$/;"	d
tcp_alloc	net/lwip/core/tcp.c	/^tcp_alloc(u8_t prio)$/;"	f
tcp_arg	net/lwip/core/tcp.c	/^tcp_arg(struct tcp_pcb *pcb, void *arg)$/;"	f
tcp_backoff	net/lwip/core/tcp.c	/^const u8_t tcp_backoff[13] =$/;"	v
tcp_bind	net/lwip/core/tcp.c	/^tcp_bind(struct tcp_pcb *pcb, struct ip_addr *ipaddr, u16_t port)$/;"	f
tcp_bound_pcbs	net/lwip/core/tcp.c	/^struct tcp_pcb *tcp_bound_pcbs;  $/;"	v	typeref:struct:tcp_pcb
tcp_close	net/lwip/core/tcp.c	/^tcp_close(struct tcp_pcb *pcb)$/;"	f
tcp_connect	net/lwip/core/tcp.c	/^tcp_connect(struct tcp_pcb *pcb, struct ip_addr *ipaddr, u16_t port,$/;"	f
tcp_debug_print	net/lwip/core/tcp.c	/^tcp_debug_print(struct tcp_hdr *tcphdr)$/;"	f
tcp_debug_print	net/lwip/include/lwip/tcp.h	550;"	d
tcp_debug_print_flags	net/lwip/core/tcp.c	/^tcp_debug_print_flags(u8_t flags)$/;"	f
tcp_debug_print_flags	net/lwip/include/lwip/tcp.h	551;"	d
tcp_debug_print_pcbs	net/lwip/core/tcp.c	/^tcp_debug_print_pcbs(void)$/;"	f
tcp_debug_print_pcbs	net/lwip/include/lwip/tcp.h	553;"	d
tcp_debug_print_state	net/lwip/core/tcp.c	/^tcp_debug_print_state(enum tcp_state s)$/;"	f
tcp_debug_print_state	net/lwip/include/lwip/tcp.h	552;"	d
tcp_do_output_nagle	net/lwip/include/lwip/tcp.h	134;"	d
tcp_eff_send_mss	net/lwip/core/tcp.c	/^tcp_eff_send_mss(u16_t sendmss, struct ip_addr *addr)$/;"	f
tcp_enqueue	net/lwip/core/tcp_out.c	/^tcp_enqueue(struct tcp_pcb *pcb, void *arg, u16_t len,$/;"	f
tcp_err	net/lwip/core/tcp.c	/^tcp_err(struct tcp_pcb *pcb,$/;"	f
tcp_fasttmr	net/lwip/core/tcp.c	/^tcp_fasttmr(void)$/;"	f
tcp_get_object_def	net/lwip/core/snmp/mib2.c	/^tcp_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
tcp_get_value	net/lwip/core/snmp/mib2.c	/^tcp_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
tcp_hdr	net/lwip/include/lwip/tcp.h	/^struct tcp_hdr {$/;"	s
tcp_ids	net/lwip/core/snmp/mib2.c	/^const s32_t tcp_ids[15] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 };$/;"	v
tcp_init	net/lwip/include/lwip/tcp.h	55;"	d
tcp_input	net/lwip/core/tcp_in.c	/^tcp_input(struct pbuf *p, struct netif *inp)$/;"	f
tcp_input_pcb	net/lwip/core/tcp_in.c	/^struct tcp_pcb *tcp_input_pcb;$/;"	v	typeref:struct:tcp_pcb
tcp_input_pcb	obj/net/ns.asm	/^    tcp_input_pcb = NULL;$/;"	d
tcp_input_pcb	obj/net/ns.asm	/^    tcp_input_pcb = pcb;$/;"	d
tcp_keepalive	net/lwip/core/tcp_out.c	/^tcp_keepalive(struct tcp_pcb *pcb)$/;"	f
tcp_kill_prio	net/lwip/core/tcp.c	/^tcp_kill_prio(u8_t prio)$/;"	f	file:
tcp_kill_timewait	net/lwip/core/tcp.c	/^tcp_kill_timewait(void)$/;"	f	file:
tcp_listen	net/lwip/include/lwip/tcp.h	97;"	d
tcp_listen_input	net/lwip/core/tcp_in.c	/^tcp_listen_input(struct tcp_pcb_listen *pcb)$/;"	f	file:
tcp_listen_pcbs	net/lwip/core/tcp.c	/^union tcp_listen_pcbs_t tcp_listen_pcbs;$/;"	v	typeref:union:tcp_listen_pcbs_t
tcp_listen_pcbs_t	net/lwip/include/lwip/tcp.h	/^union tcp_listen_pcbs_t { \/* List of all TCP PCBs in LISTEN state. *\/$/;"	u
tcp_listen_with_backlog	net/lwip/core/tcp.c	/^tcp_listen_with_backlog(struct tcp_pcb *pcb, u8_t backlog)$/;"	f
tcp_mss	net/lwip/include/lwip/tcp.h	79;"	d
tcp_new	net/lwip/core/tcp.c	/^tcp_new(void)$/;"	f
tcp_new_port	net/lwip/core/tcp.c	/^tcp_new_port(void)$/;"	f	file:
tcp_next_iss	net/lwip/core/tcp.c	/^tcp_next_iss(void)$/;"	f
tcp_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const tcp_nodes[15] = {$/;"	v
tcp_output	net/lwip/core/tcp_out.c	/^tcp_output(struct tcp_pcb *pcb)$/;"	f
tcp_output_nagle	net/lwip/include/lwip/tcp.h	138;"	d
tcp_output_segment	net/lwip/core/tcp_out.c	/^tcp_output_segment(struct tcp_seg *seg, struct tcp_pcb *pcb)$/;"	f	file:
tcp_parseopt	net/lwip/core/tcp_in.c	/^tcp_parseopt(struct tcp_pcb *pcb)$/;"	f	file:
tcp_pcb	net/lwip/include/lwip/tcp.h	/^struct tcp_pcb {$/;"	s
tcp_pcb_listen	net/lwip/include/lwip/tcp.h	/^struct tcp_pcb_listen {  $/;"	s
tcp_pcb_purge	net/lwip/core/tcp.c	/^tcp_pcb_purge(struct tcp_pcb *pcb)$/;"	f
tcp_pcb_remove	net/lwip/core/tcp.c	/^tcp_pcb_remove(struct tcp_pcb **pcblist, struct tcp_pcb *pcb)$/;"	f
tcp_pcbs_sane	net/lwip/core/tcp.c	/^tcp_pcbs_sane(void)$/;"	f
tcp_pcbs_sane	net/lwip/include/lwip/tcp.h	554;"	d
tcp_persist_backoff	net/lwip/core/tcp.c	/^const u8_t tcp_persist_backoff[7] = { 3, 6, 12, 24, 48, 96, 120 };$/;"	v
tcp_poll	net/lwip/core/tcp.c	/^tcp_poll(struct tcp_pcb *pcb,$/;"	f
tcp_process	net/lwip/core/tcp_in.c	/^tcp_process(struct tcp_pcb *pcb)$/;"	f	file:
tcp_receive	net/lwip/core/tcp_in.c	/^tcp_receive(struct tcp_pcb *pcb)$/;"	f	file:
tcp_recv	net/lwip/core/tcp.c	/^tcp_recv(struct tcp_pcb *pcb,$/;"	f
tcp_recv_null	net/lwip/core/tcp.c	/^tcp_recv_null(void *arg, struct tcp_pcb *pcb, struct pbuf *p, err_t err)$/;"	f	file:
tcp_recved	net/lwip/core/tcp.c	/^tcp_recved(struct tcp_pcb *pcb, u16_t len)$/;"	f
tcp_rexmit	net/lwip/core/tcp_out.c	/^tcp_rexmit(struct tcp_pcb *pcb)$/;"	f
tcp_rexmit_rto	net/lwip/core/tcp_out.c	/^tcp_rexmit_rto(struct tcp_pcb *pcb)$/;"	f
tcp_rst	net/lwip/core/tcp_out.c	/^tcp_rst(u32_t seqno, u32_t ackno,$/;"	f
tcp_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node tcp_scalar = {$/;"	v
tcp_seg	net/lwip/include/lwip/tcp.h	/^struct tcp_seg {$/;"	s
tcp_seg_copy	net/lwip/core/tcp.c	/^tcp_seg_copy(struct tcp_seg *seg)$/;"	f
tcp_seg_free	net/lwip/core/tcp.c	/^tcp_seg_free(struct tcp_seg *seg)$/;"	f
tcp_segs_free	net/lwip/core/tcp.c	/^tcp_segs_free(struct tcp_seg *seg)$/;"	f
tcp_send_ctrl	net/lwip/core/tcp_out.c	/^tcp_send_ctrl(struct tcp_pcb *pcb, u8_t flags)$/;"	f
tcp_sent	net/lwip/core/tcp.c	/^tcp_sent(struct tcp_pcb *pcb,$/;"	f
tcp_seq	net/lwip/netif/ppp/vjbsdhdr.h	/^typedef u32_t tcp_seq;$/;"	t
tcp_setprio	net/lwip/core/tcp.c	/^tcp_setprio(struct tcp_pcb *pcb, u8_t prio)$/;"	f
tcp_slowtmr	net/lwip/core/tcp.c	/^tcp_slowtmr(void)$/;"	f
tcp_sndbuf	net/lwip/include/lwip/tcp.h	80;"	d
tcp_state	net/lwip/include/lwip/tcp.h	/^enum tcp_state {$/;"	g
tcp_ticks	net/lwip/core/tcp.c	/^u32_t tcp_ticks;$/;"	v
tcp_timer	net/lwip/core/tcp.c	/^static u8_t tcp_timer;$/;"	v	file:
tcp_timer_needed	net/lwip/api/tcpip.c	/^tcp_timer_needed(void)$/;"	f
tcp_timer_needed	net/lwip/include/lwip/tcp.h	558;"	d
tcp_timewait_input	net/lwip/core/tcp_in.c	/^tcp_timewait_input(struct tcp_pcb *pcb)$/;"	f	file:
tcp_tmp_pcb	net/lwip/core/tcp.c	/^struct tcp_pcb *tcp_tmp_pcb;$/;"	v	typeref:struct:tcp_pcb
tcp_tmr	net/lwip/core/tcp.c	/^tcp_tmr(void)$/;"	f
tcp_tw_pcbs	net/lwip/core/tcp.c	/^struct tcp_pcb *tcp_tw_pcbs;$/;"	v	typeref:struct:tcp_pcb
tcp_tw_pcbs	obj/net/ns.asm	/^        tcp_tw_pcbs = pcb->next;$/;"	d
tcp_write	net/lwip/core/tcp_out.c	/^tcp_write(struct tcp_pcb *pcb, const void *data, u16_t len, u8_t apiflags)$/;"	f
tcp_zero_window_probe	net/lwip/core/tcp_out.c	/^tcp_zero_window_probe(struct tcp_pcb *pcb)$/;"	f
tcpactiveopens	net/lwip/core/snmp/mib2.c	/^static u32_t tcpactiveopens = 0,$/;"	v	file:
tcpattemptfails	net/lwip/core/snmp/mib2.c	/^             tcpattemptfails = 0,$/;"	v	file:
tcpconnentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node tcpconnentry = {$/;"	v	typeref:struct:mib_array_node
tcpconnentry_get_object_def	net/lwip/core/snmp/mib2.c	/^tcpconnentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
tcpconnentry_get_value	net/lwip/core/snmp/mib2.c	/^tcpconnentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
tcpconnentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t tcpconnentry_ids[5] = { 1, 2, 3, 4, 5 };$/;"	v
tcpconnentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const tcpconnentry_nodes[5] = {$/;"	v
tcpconntable	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node tcpconntable = {$/;"	v	typeref:struct:mib_ram_array_node
tcpconntable_id	net/lwip/core/snmp/mib2.c	/^s32_t tcpconntable_id = 1;$/;"	v
tcpconntable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* tcpconntable_node = (struct mib_node* const)&tcpconnentry;$/;"	v	typeref:struct:mib_node
tcpconntree_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode tcpconntree_root = {$/;"	v	typeref:struct:mib_list_rootnode
tcpestabresets	net/lwip/core/snmp/mib2.c	/^             tcpestabresets = 0,$/;"	v	file:
tcphdr	net/lwip/core/tcp_in.c	/^static struct tcp_hdr *tcphdr;$/;"	v	typeref:struct:tcp_hdr	file:
tcphdr	net/lwip/include/lwip/tcp.h	/^  struct tcp_hdr *tcphdr;  \/* the TCP header *\/$/;"	m	struct:tcp_seg	typeref:struct:tcp_seg::tcp_hdr
tcphdr	net/lwip/netif/ppp/vjbsdhdr.h	/^struct tcphdr  $/;"	s
tcphdr	obj/net/ns.asm	/^    tcphdr = p->payload;$/;"	d
tcphdr	obj/net/ns.asm	/^  tcphdr = (struct tcp_hdr *)((u8_t *)p->payload + IPH_HL(iphdr) * 4);$/;"	d
tcphdr	obj/net/ns.asm	/^  tcphdr = p->payload;$/;"	d
tcpinerrs	net/lwip/core/snmp/mib2.c	/^             tcpinerrs = 0,$/;"	v	file:
tcpinsegs	net/lwip/core/snmp/mib2.c	/^             tcpinsegs = 0,$/;"	v	file:
tcpip_apimsg	net/lwip/api/tcpip.c	/^tcpip_apimsg(struct api_msg *apimsg)$/;"	f
tcpip_apimsg_lock	net/lwip/api/tcpip.c	/^tcpip_apimsg_lock(struct api_msg *apimsg)$/;"	f
tcpip_callback	net/lwip/include/lwip/tcpip.h	86;"	d
tcpip_callback_with_block	net/lwip/api/tcpip.c	/^tcpip_callback_with_block(void (*f)(void *ctx), void *ctx, u8_t block)$/;"	f
tcpip_init	net/lwip/api/tcpip.c	/^tcpip_init(void (* initfunc)(void *), void *arg)$/;"	f
tcpip_init_done	net/lwip/api/tcpip.c	/^static void (* tcpip_init_done)(void *arg);$/;"	v	file:
tcpip_init_done	net/serv.c	/^tcpip_init_done(void *arg)$/;"	f	file:
tcpip_init_done	obj/net/ns.asm	/^  tcpip_init_done = initfunc;$/;"	d
tcpip_init_done_arg	net/lwip/api/tcpip.c	/^static void *tcpip_init_done_arg;$/;"	v	file:
tcpip_init_done_arg	obj/net/ns.asm	/^  tcpip_init_done_arg = arg;$/;"	d
tcpip_input	net/lwip/api/tcpip.c	/^tcpip_input(struct pbuf *p, struct netif *inp)$/;"	f
tcpip_msg	net/lwip/include/lwip/tcpip.h	/^struct tcpip_msg {$/;"	s
tcpip_msg_type	net/lwip/include/lwip/tcpip.h	/^enum tcpip_msg_type {$/;"	g
tcpip_netifapi	net/lwip/api/tcpip.c	/^tcpip_netifapi(struct netifapi_msg* netifapimsg)$/;"	f
tcpip_netifapi_lock	net/lwip/api/tcpip.c	/^tcpip_netifapi_lock(struct netifapi_msg* netifapimsg)$/;"	f
tcpip_tcp_timer	net/lwip/api/tcpip.c	/^tcpip_tcp_timer(void *arg)$/;"	f	file:
tcpip_tcp_timer_active	net/lwip/api/tcpip.c	/^static int tcpip_tcp_timer_active;$/;"	v	file:
tcpip_tcp_timer_active	obj/net/ns.asm	/^    tcpip_tcp_timer_active = 0;$/;"	d
tcpip_tcp_timer_active	obj/net/ns.asm	/^    tcpip_tcp_timer_active = 1;$/;"	d
tcpip_thread	net/lwip/api/tcpip.c	/^tcpip_thread(void *arg)$/;"	f	file:
tcpip_timeout	net/lwip/api/tcpip.c	/^tcpip_timeout(u32_t msecs, sys_timeout_handler h, void *arg)$/;"	f
tcpip_untimeout	net/lwip/include/lwip/tcpip.h	93;"	d
tcplen	net/lwip/core/tcp_in.c	/^static u16_t tcplen;$/;"	v	file:
tcplen	obj/net/ns.asm	/^        tcplen = TCP_TCPLEN(&inseg);$/;"	d
tcplen	obj/net/ns.asm	/^  tcplen = p->tot_len + ((flags & TCP_FIN || flags & TCP_SYN)? 1: 0);$/;"	d
tcpoutrsts	net/lwip/core/snmp/mib2.c	/^             tcpoutrsts = 0;$/;"	v	file:
tcpoutsegs	net/lwip/core/snmp/mib2.c	/^             tcpoutsegs = 0,$/;"	v	file:
tcppassiveopens	net/lwip/core/snmp/mib2.c	/^             tcppassiveopens = 0,$/;"	v	file:
tcpretranssegs	net/lwip/core/snmp/mib2.c	/^             tcpretranssegs = 0,$/;"	v	file:
tehdr	obj/net/ns.asm	/^  tehdr = q->payload;$/;"	d
term_reason	net/lwip/netif/ppp/fsm.h	/^  char* term_reason;               \/* Reason for closing protocol *\/$/;"	m	struct:fsm
term_reason_len	net/lwip/netif/ppp/fsm.h	/^  int term_reason_len;             \/* Length of term_reason *\/$/;"	m	struct:fsm
test	gradelib.py	/^def test(points, title=None, parent=None):$/;"	f
test_backtrace	init.s	/^test_backtrace:$/;"	l
test_backtrace_arguments	grade-lab1	/^def test_backtrace_arguments():$/;"	f
test_backtrace_count	grade-lab1	/^def test_backtrace_count():$/;"	f
test_backtrace_lines	grade-lab1	/^def test_backtrace_lines():$/;"	f
test_backtrace_symbols	grade-lab1	/^def test_backtrace_symbols():$/;"	f
test_badsegment	grade-lab3	/^def test_badsegment():$/;"	f
test_breakpoint	grade-lab3	/^def test_breakpoint():$/;"	f
test_buggyhello	grade-lab3	/^def test_buggyhello():$/;"	f
test_buggyhello2	grade-lab3	/^def test_buggyhello2():$/;"	f
test_check_kern_pgdir	grade-lab2	/^def test_check_kern_pgdir():$/;"	f
test_check_page	grade-lab2	/^def test_check_page():$/;"	f
test_check_page_alloc	grade-lab2	/^def test_check_page_alloc():$/;"	f
test_divzero	grade-lab3	/^def test_divzero():$/;"	f
test_dumbfork	grade-lab4	/^def test_dumbfork():$/;"	f
test_echosrv	grade-lab6	/^def test_echosrv():$/;"	f
test_evilhello	grade-lab3	/^def test_evilhello():$/;"	f
test_faultalloc	grade-lab4	/^def test_faultalloc():$/;"	f
test_faultallocbad	grade-lab4	/^def test_faultallocbad():$/;"	f
test_faultbadhandler	grade-lab4	/^def test_faultbadhandler():$/;"	f
test_faultdie	grade-lab4	/^def test_faultdie():$/;"	f
test_faultevilhandler	grade-lab4	/^def test_faultevilhandler():$/;"	f
test_faultnostack	grade-lab4	/^def test_faultnostack():$/;"	f
test_faultread	grade-lab3	/^def test_faultread():$/;"	f
test_faultread	grade-lab4	/^def test_faultread():$/;"	f
test_faultreadkernel	grade-lab3	/^def test_faultreadkernel():$/;"	f
test_faultregs	grade-lab4	/^def test_faultregs():$/;"	f
test_faultwrite	grade-lab3	/^def test_faultwrite():$/;"	f
test_faultwrite	grade-lab4	/^def test_faultwrite():$/;"	f
test_faultwritekernel	grade-lab3	/^def test_faultwritekernel():$/;"	f
test_forktree	grade-lab4	/^def test_forktree():$/;"	f
test_fs	grade-lab5	/^def test_fs():$/;"	f
test_hello	grade-lab3	/^def test_hello():$/;"	f
test_httpd	grade-lab6	/^def test_httpd():$/;"	f
test_httpd_test	grade-lab6	/^    def test_httpd_test():$/;"	f	function:mk_test_httpd
test_icode	grade-lab5	/^def test_icode():$/;"	f
test_jos	grade-lab1	/^def test_jos():$/;"	f
test_jos	grade-lab2	/^def test_jos():$/;"	f
test_pci_attach	grade-lab6	/^def test_pci_attach():$/;"	f
test_pingpong	grade-lab4	/^def test_pingpong():$/;"	f
test_primes	grade-lab4	/^def test_primes():$/;"	f
test_printf	grade-lab1	/^def test_printf():$/;"	f
test_softint	grade-lab3	/^def test_softint():$/;"	f
test_spin	grade-lab4	/^def test_spin():$/;"	f
test_stresssched	grade-lab4	/^def test_stresssched():$/;"	f
test_testbss	grade-lab3	/^def test_testbss():$/;"	f
test_testfile	grade-lab5	/^def test_testfile():$/;"	f
test_testinput_100	grade-lab6	/^def test_testinput_100():$/;"	f
test_testinput_5	grade-lab6	/^def test_testinput_5():$/;"	f
test_testinput_helper	grade-lab6	/^def test_testinput_helper(count):$/;"	f
test_testoutput_100	grade-lab6	/^def test_testoutput_100():$/;"	f
test_testoutput_5	grade-lab6	/^def test_testoutput_5():$/;"	f
test_testoutput_helper	grade-lab6	/^def test_testoutput_helper(count):$/;"	f
test_testtime	grade-lab6	/^def test_testtime():$/;"	f
test_writemotd1	grade-lab5	/^def test_writemotd1():$/;"	f
test_writemotd2	grade-lab5	/^def test_writemotd2():$/;"	f
tf	obj/kern/kernel.asm	/^		tf = &curenv->env_tf;$/;"	d
tf_cs	inc/trap.h	/^	uint16_t tf_cs;$/;"	m	struct:Trapframe
tf_ds	inc/trap.h	/^	uint16_t tf_ds;$/;"	m	struct:Trapframe
tf_eflags	inc/trap.h	/^	uint64_t tf_eflags;$/;"	m	struct:Trapframe
tf_err	inc/trap.h	/^	uint64_t tf_err;$/;"	m	struct:Trapframe
tf_es	inc/trap.h	/^	uint16_t tf_es;$/;"	m	struct:Trapframe
tf_padding1	inc/trap.h	/^	uint16_t tf_padding1;$/;"	m	struct:Trapframe
tf_padding2	inc/trap.h	/^    uint32_t tf_padding2;$/;"	m	struct:Trapframe
tf_padding3	inc/trap.h	/^	uint16_t tf_padding3;$/;"	m	struct:Trapframe
tf_padding4	inc/trap.h	/^    uint32_t tf_padding4;$/;"	m	struct:Trapframe
tf_padding5	inc/trap.h	/^	uint16_t tf_padding5;$/;"	m	struct:Trapframe
tf_padding6	inc/trap.h	/^    uint32_t tf_padding6;$/;"	m	struct:Trapframe
tf_padding7	inc/trap.h	/^	uint16_t tf_padding7;$/;"	m	struct:Trapframe
tf_padding8	inc/trap.h	/^    uint32_t tf_padding8;$/;"	m	struct:Trapframe
tf_regs	inc/trap.h	/^	struct PushRegs tf_regs;$/;"	m	struct:Trapframe	typeref:struct:Trapframe::PushRegs
tf_rip	inc/trap.h	/^	uintptr_t tf_rip;$/;"	m	struct:Trapframe
tf_rsp	inc/trap.h	/^	uintptr_t tf_rsp;$/;"	m	struct:Trapframe
tf_ss	inc/trap.h	/^	uint16_t tf_ss;$/;"	m	struct:Trapframe
tf_trapno	inc/trap.h	/^	uint64_t tf_trapno;$/;"	m	struct:Trapframe
th_ack	net/lwip/netif/ppp/vjbsdhdr.h	/^  tcp_seq  th_ack;      \/* acknowledgement number *\/$/;"	m	struct:tcphdr
th_dport	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_dport;    \/* destination port *\/$/;"	m	struct:tcphdr
th_flags	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char   th_flags;$/;"	m	struct:tcphdr
th_off	net/lwip/netif/ppp/vjbsdhdr.h	/^           th_off:4;    \/* data offset *\/$/;"	m	struct:tcphdr
th_off	net/lwip/netif/ppp/vjbsdhdr.h	/^  unsigned th_off:4,    \/* data offset *\/$/;"	m	struct:tcphdr
th_seq	net/lwip/netif/ppp/vjbsdhdr.h	/^  tcp_seq  th_seq;      \/* sequence number *\/$/;"	m	struct:tcphdr
th_sport	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_sport;    \/* source port *\/$/;"	m	struct:tcphdr
th_sum	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_sum;      \/* checksum *\/$/;"	m	struct:tcphdr
th_urp	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_urp;      \/* urgent pointer *\/$/;"	m	struct:tcphdr
th_win	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_win;      \/* window *\/$/;"	m	struct:tcphdr
th_x2	net/lwip/netif/ppp/vjbsdhdr.h	/^           th_x2 :4;    \/* (unused) *\/$/;"	m	struct:tcphdr
th_x2	net/lwip/netif/ppp/vjbsdhdr.h	/^  unsigned th_x2 :4,    \/* (unused) *\/$/;"	m	struct:tcphdr
th_x2_off	net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char   th_x2_off;$/;"	m	struct:tcphdr
thiscpu	kern/cpu.h	37;"	d
thisenv	lib/libmain.c	/^const volatile struct Env *thisenv;$/;"	v	typeref:struct:Env
thisenv	obj/fs/fs.asm	/^	thisenv = &(envs[ENVX(sys_getenvid())]);$/;"	d
thisenv	obj/net/ns.asm	/^		thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/net/ns.asm	/^	thisenv = &(envs[ENVX(sys_getenvid())]);$/;"	d
thisenv	obj/net/testinput.asm	/^		thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/net/testinput.asm	/^	thisenv = &(envs[ENVX(sys_getenvid())]);$/;"	d
thisenv	obj/net/testoutput.asm	/^		thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/net/testoutput.asm	/^	thisenv = &(envs[ENVX(sys_getenvid())]);$/;"	d
thisenv	obj/user/echosrv.asm	/^	thisenv = &(envs[ENVX(sys_getenvid())]);$/;"	d
thisenv	obj/user/echotest.asm	/^	thisenv = &(envs[ENVX(sys_getenvid())]);$/;"	d
thisenv	obj/user/forktree.asm	/^		thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/forktree.asm	/^	thisenv = &(envs[ENVX(sys_getenvid())]);$/;"	d
thisenv	obj/user/hello.asm	/^	thisenv = &(envs[ENVX(sys_getenvid())]);$/;"	d
thisenv	obj/user/httpd.asm	/^	thisenv = &(envs[ENVX(sys_getenvid())]);$/;"	d
thisenv	obj/user/icode.asm	/^	thisenv = &(envs[ENVX(sys_getenvid())]);$/;"	d
thisenv	obj/user/idle.asm	/^	thisenv = &(envs[ENVX(sys_getenvid())]);$/;"	d
thisenv	obj/user/init.asm	/^	thisenv = &(envs[ENVX(sys_getenvid())]);$/;"	d
thisenv	obj/user/pingpong.asm	/^		thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/pingpong.asm	/^	thisenv = &(envs[ENVX(sys_getenvid())]);$/;"	d
thisenv	obj/user/primes.asm	/^		thisenv = envs + ENVX(sys_getenvid());$/;"	d
thisenv	obj/user/primes.asm	/^	thisenv = &(envs[ENVX(sys_getenvid())]);$/;"	d
thisenv	obj/user/testfile.asm	/^	thisenv = &(envs[ENVX(sys_getenvid())]);$/;"	d
thisenv	obj/user/testtime.asm	/^	thisenv = &(envs[ENVX(sys_getenvid())]);$/;"	d
thisenv	obj/user/writemotd.asm	/^	thisenv = &(envs[ENVX(sys_getenvid())]);$/;"	d
thl	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_trap_header_lengths thl;$/;"	m	struct:snmp_msg_trap	typeref:struct:snmp_msg_trap::snmp_trap_header_lengths
thread_clean	net/lwip/jos/arch/thread.c	/^thread_clean(struct thread_context *tc) {$/;"	f	file:
thread_context	net/lwip/jos/arch/threadq.h	/^struct thread_context {$/;"	s
thread_create	net/lwip/jos/arch/thread.c	/^thread_create(thread_id_t *tid, const char *name, $/;"	f
thread_entry	net/lwip/jos/arch/thread.c	/^thread_entry(void) {$/;"	f	file:
thread_halt	net/lwip/jos/arch/thread.c	/^thread_halt() {$/;"	f
thread_hash_size	net/lwip/jos/arch/sys_arch.c	/^enum { thread_hash_size = 257 };$/;"	e	enum:__anon41	file:
thread_id	net/lwip/jos/arch/thread.c	/^thread_id(void) {$/;"	f
thread_id_t	net/lwip/jos/arch/thread.h	/^typedef uint32_t thread_id_t;$/;"	t
thread_init	net/lwip/jos/arch/thread.c	/^thread_init(void) {$/;"	f
thread_onhalt	net/lwip/jos/arch/thread.c	/^thread_onhalt(void (*fun)(thread_id_t)) {$/;"	f
thread_queue	net/lwip/jos/arch/thread.c	/^static struct thread_queue thread_queue;$/;"	v	typeref:struct:thread_queue	file:
thread_queue	net/lwip/jos/arch/threadq.h	/^struct thread_queue$/;"	s
thread_set_name	net/lwip/jos/arch/thread.c	/^thread_set_name(struct thread_context *tc, const char *name)$/;"	f	file:
thread_wait	net/lwip/jos/arch/thread.c	/^thread_wait(volatile uint32_t *addr, uint32_t val, uint32_t msec) {$/;"	f
thread_wakeup	net/lwip/jos/arch/thread.c	/^thread_wakeup(volatile uint32_t *addr) {$/;"	f
thread_wakeups_pending	net/lwip/jos/arch/thread.c	/^thread_wakeups_pending(void)$/;"	f
thread_yield	net/lwip/jos/arch/thread.c	/^thread_yield(void) {$/;"	f
threading	grade-lab6	/^import os, re, threading, socket, time, urllib2, shutil, struct, difflib$/;"	i
threadq_init	net/lwip/jos/arch/threadq.h	/^threadq_init(struct thread_queue *tq)$/;"	f
threadq_pop	net/lwip/jos/arch/threadq.h	/^threadq_pop(struct thread_queue *tq)$/;"	f
threadq_push	net/lwip/jos/arch/threadq.h	/^threadq_push(struct thread_queue *tq, struct thread_context *tc)$/;"	f
ticks	kern/time.c	/^static unsigned int ticks;$/;"	v	file:
ticks	obj/kern/kernel.asm	/^	ticks = 0;$/;"	d
tid	net/lwip/jos/arch/sys_arch.c	/^    thread_id_t tid;$/;"	m	struct:sys_thread	file:
time	grade-lab6	/^import os, re, threading, socket, time, urllib2, shutil, struct, difflib$/;"	i
time	gradelib.py	/^import sys, os, re, time, socket, select, subprocess, errno, shutil$/;"	i
time	net/lwip/include/lwip/sys.h	/^  u32_t time;$/;"	m	struct:sys_timeo
time_init	kern/time.c	/^time_init(void)$/;"	f
time_msec	kern/time.c	/^time_msec(void)$/;"	f
time_needed	obj/net/ns.asm	/^      time_needed = SYS_ARCH_TIMEOUT;$/;"	d
time_needed	obj/net/ns.asm	/^      time_needed = sys_arch_mbox_fetch(mbox, msg, timeouts->next->time);$/;"	d
time_needed	obj/net/ns.asm	/^      time_needed = sys_arch_sem_wait(sem, timeouts->next->time);$/;"	d
time_needed	obj/net/ns.asm	/^    time_needed = sys_arch_mbox_fetch(mbox, msg, 0);$/;"	d
time_tick	kern/time.c	/^time_tick(void)$/;"	f
timeflag	net/lwip/core/sys.c	/^  s16_t timeflag;$/;"	m	struct:sswt_cb	file:
timeout	obj/net/ns.asm	/^      timeout = 0xffff;$/;"	d
timeout	obj/net/ns.asm	/^    timeout = (dhcp->offered_t1_renew + DHCP_COARSE_TIMER_SECS \/ 2) \/ DHCP_COARSE_TIMER_SECS;$/;"	d
timeout	obj/net/ns.asm	/^    timeout = (dhcp->offered_t2_rebind + DHCP_COARSE_TIMER_SECS \/ 2) \/ DHCP_COARSE_TIMER_SECS;$/;"	d
timeout	obj/net/ns.asm	/^  timeout = memp_malloc(MEMP_SYS_TIMEOUT);$/;"	d
timeout_cleanup	net/lwip/jos/arch/sys_arch.c	/^timeout_cleanup(thread_id_t tid)$/;"	f	file:
timeouts	obj/net/ns.asm	/^  timeouts = sys_arch_timeouts();$/;"	d
timeouttime	net/lwip/netif/ppp/chap.h	/^  int timeouttime;                        \/* Timeout time in seconds *\/$/;"	m	struct:chap_state
timeouttime	net/lwip/netif/ppp/fsm.h	/^  int timeouttime;                 \/* Timeout time in milliseconds *\/$/;"	m	struct:fsm
timer	net/lwip/include/ipv4/lwip/igmp.h	/^  u16_t              timer;$/;"	m	struct:igmp_group
timer	net/lwip/include/ipv4/lwip/ip_frag.h	/^  u8_t timer;$/;"	m	struct:ip_reassdata
timer	net/timer.c	/^timer(envid_t ns_envid, uint32_t initial_to) {$/;"	f
timer_envid	net/serv.c	/^static envid_t timer_envid;$/;"	v	file:
timer_envid	obj/net/ns.asm	/^	timer_envid = fork();$/;"	d
timer_thread	net/serv.c	/^struct timer_thread {$/;"	s	file:
timeval	net/lwip/include/lwip/sockets.h	/^struct timeval {$/;"	s
tlb_invalidate	kern/pmap.c	/^tlb_invalidate(pml4e_t *pml4e, void *va)$/;"	f
tlb_invalidate	kern/pmap.c.BACKUP.24152.c	/^tlb_invalidate(pml4e_t *pml4e, void *va)$/;"	f
tlb_invalidate	kern/pmap.c.BASE.24152.c	/^tlb_invalidate(pml4e_t *pml4e, void *va)$/;"	f
tlb_invalidate	kern/pmap.c.LOCAL.24152.c	/^tlb_invalidate(pml4e_t *pml4e, void *va)$/;"	f
tlb_invalidate	kern/pmap.c.REMOTE.24152.c	/^tlb_invalidate(pml4e_t *pml4e, void *va)$/;"	f
tlb_invalidate	kern/pmap1.c	/^tlb_invalidate(pml4e_t *pml4e, void *va)$/;"	f
tlbflush	inc/x86.h	/^tlbflush(void)$/;"	f
tmain	net/serv.c	/^tmain(uint64_t arg) {$/;"	f	file:
tmo	net/lwip/include/lwip/tcpip.h	/^    } tmo;$/;"	m	union:tcpip_msg::__anon33	typeref:struct:tcpip_msg::__anon33::__anon36
tmo	net/lwip/jos/arch/sys_arch.c	/^    struct sys_timeouts tmo;$/;"	m	struct:sys_thread	typeref:struct:sys_thread::sys_timeouts	file:
tmp	obj/net/ns.asm	/^      tmp = r;$/;"	d
tmp	obj/net/ns.asm	/^      tmp = tmp | IP_MF;$/;"	d
tmp	obj/net/ns.asm	/^    tmp = omf | (IP_OFFMASK & (ofo));$/;"	d
tmp	obj/net/ns.asm	/^  tmp = ntohs(IPH_OFFSET(iphdr));$/;"	d
tmptimeout	obj/net/ns.asm	/^      tmptimeout = timeouts->next;$/;"	d
tmr	net/lwip/core/dns.c	/^  u8_t  tmr;$/;"	m	struct:dns_table_entry	file:
tmr	net/lwip/include/lwip/tcp.h	/^  u32_t tmr;$/;"	m	struct:tcp_pcb
to	obj/net/ns.asm	/^			to = ipc_recv((int32_t *) &whom, 0, 0);$/;"	d
to	obj/net/ns.asm	/^	to = TIMER_INTERVAL - (now - start);$/;"	d
to	obj/net/testinput.asm	/^			to = ipc_recv((int32_t *) &whom, 0, 0);$/;"	d
to	obj/net/testoutput.asm	/^			to = ipc_recv((int32_t *) &whom, 0, 0);$/;"	d
togglecode	kern/console.c	/^static uint8_t togglecode[256] =$/;"	v	file:
top	obj/user/primes.asm	/^top:$/;"	l
tot_len	net/lwip/include/lwip/pbuf.h	/^  u16_t tot_len;$/;"	m	struct:pbuf
tq_first	net/lwip/jos/arch/threadq.h	/^    struct thread_context *tq_first;$/;"	m	struct:thread_queue	typeref:struct:thread_queue::thread_context
tq_last	net/lwip/jos/arch/threadq.h	/^    struct thread_context *tq_last;$/;"	m	struct:thread_queue	typeref:struct:thread_queue::thread_context
trap	kern/trap.c	/^trap(struct Trapframe *tf)$/;"	f
trap_dispatch	kern/trap.c	/^trap_dispatch(struct Trapframe *tf)$/;"	f	file:
trap_dst	net/lwip/core/snmp/msg_out.c	/^struct snmp_trap_dst trap_dst[SNMP_TRAP_DESTINATIONS];$/;"	v	typeref:struct:snmp_trap_dst
trap_init	kern/trap.c	/^trap_init(void)$/;"	f
trap_init_percpu	kern/trap.c	/^trap_init_percpu(void)$/;"	f
trap_msg	net/lwip/core/snmp/msg_out.c	/^struct snmp_msg_trap trap_msg;$/;"	v	typeref:struct:snmp_msg_trap
trapname	kern/trap.c	/^static const char *trapname(int trapno)$/;"	f	file:
tree_levels	net/lwip/include/lwip/snmp_structs.h	/^  u8_t tree_levels;$/;"	m	struct:mib_external_node
tried_llipaddr	net/lwip/include/ipv4/lwip/autoip.h	/^  u8_t tried_llipaddr;      \/* total number of probed\/used Link Local IP-Addresses *\/$/;"	m	struct:autoip
tries	net/lwip/include/lwip/dhcp.h	/^  u8_t tries;$/;"	m	struct:dhcp
true	inc/types.h	/^enum { false, true };$/;"	e	enum:__anon3
try_open	obj/fs/fs.asm	/^try_open:$/;"	l
ts	kern/trap.c	/^static struct Taskstate ts;$/;"	v	typeref:struct:Taskstate	file:
ts	net/lwip/include/lwip/netif.h	/^  u32_t ts;$/;"	m	struct:netif
ts	net/lwip/include/lwip/snmp_msg.h	/^  u32_t ts;$/;"	m	struct:snmp_msg_trap
ts_esp0	inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate
ts_esp1	inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate
ts_esp2	inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate
ts_iomb	inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate
ts_ist1	inc/mmu.h	/^    uint64_t ts_ist1;$/;"	m	struct:Taskstate
ts_ist2	inc/mmu.h	/^    uint64_t ts_ist2;$/;"	m	struct:Taskstate
ts_ist3	inc/mmu.h	/^    uint64_t ts_ist3;$/;"	m	struct:Taskstate
ts_ist4	inc/mmu.h	/^    uint64_t ts_ist4;$/;"	m	struct:Taskstate
ts_ist5	inc/mmu.h	/^    uint64_t ts_ist5;$/;"	m	struct:Taskstate
ts_ist6	inc/mmu.h	/^    uint64_t ts_ist6;$/;"	m	struct:Taskstate
ts_ist7	inc/mmu.h	/^    uint64_t ts_ist7;$/;"	m	struct:Taskstate
ts_res1	inc/mmu.h	/^	uint32_t ts_res1;	\/\/ -- reserved in long mode$/;"	m	struct:Taskstate
ts_res2	inc/mmu.h	/^	uint64_t ts_res2;	\/\/ reserved in long mode$/;"	m	struct:Taskstate
ts_res3	inc/mmu.h	/^    uint64_t ts_res3;$/;"	m	struct:Taskstate
ts_res4	inc/mmu.h	/^    uint16_t ts_res4;$/;"	m	struct:Taskstate
tslen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t tslen;$/;"	m	struct:snmp_trap_header_lengths
tslenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t tslenlen;$/;"	m	struct:snmp_trap_header_lengths
tstate	net/lwip/netif/ppp/vj.h	/^  struct cstate tstate[MAX_SLOTS]; \/* xmit connection states *\/$/;"	m	struct:vjcompress	typeref:struct:vjcompress::cstate
ttl	net/lwip/core/dns.c	/^  u32_t ttl;$/;"	m	struct:dns_answer	file:
ttl	net/lwip/core/dns.c	/^  u32_t ttl;$/;"	m	struct:dns_table_entry	file:
ttw	net/lwip/include/ipv4/lwip/autoip.h	/^  u16_t ttw;                \/* ticks to wait, tick is AUTOIP_TMR_INTERVAL long *\/$/;"	m	struct:autoip
tv_sec	net/lwip/include/lwip/sockets.h	/^  long    tv_sec;         \/* seconds *\/$/;"	m	struct:timeval
tv_usec	net/lwip/include/lwip/sockets.h	/^  long    tv_usec;        \/* and microseconds *\/$/;"	m	struct:timeval
tx_desc	kern/e1000.h	/^struct tx_desc$/;"	s
tx_desc_array	kern/e1000.c	/^struct tx_desc tx_desc_array[E1000_TXDESC] __attribute__ ((aligned (16)));$/;"	v	typeref:struct:tx_desc
tx_pkt	kern/e1000.h	/^struct tx_pkt$/;"	s
tx_pkt_bufs	kern/e1000.c	/^struct tx_pkt tx_pkt_bufs[E1000_TXDESC];$/;"	v	typeref:struct:tx_pkt
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ MP system config type$/;"	m	struct:mp	file:
type	kern/mpconfig.c	/^	uint8_t type;                   \/\/ entry type (0)$/;"	m	struct:mpproc	file:
type	net/lwip/core/dns.c	/^  u16_t type;$/;"	m	struct:dns_answer	file:
type	net/lwip/core/dns.c	/^  u16_t type;$/;"	m	struct:dns_query	file:
type	net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t type;$/;"	m	struct:icmp_dur_hdr
type	net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t type;$/;"	m	struct:icmp_echo_hdr
type	net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t type;$/;"	m	struct:icmp_te_hdr
type	net/lwip/include/lwip/api.h	/^  enum netconn_type type;$/;"	m	struct:netconn	typeref:enum:netconn::netconn_type
type	net/lwip/include/lwip/pbuf.h	/^  u8_t \/*pbuf_type*\/ type;$/;"	m	struct:pbuf
type	net/lwip/include/lwip/tcpip.h	/^  enum tcpip_msg_type type;$/;"	m	struct:tcpip_msg	typeref:enum:tcpip_msg::tcpip_msg_type
type	obj/net/ns.asm	/^      type = p->type;$/;"	d
type	obj/net/ns.asm	/^  type = *((u8_t *)p->payload);$/;"	d
type	obj/net/ns.asm	/^  type = p->type;$/;"	d
type	obj/user/httpd.asm	/^	type = mime_type(req->url);$/;"	d
u16_t	net/lwip/jos/arch/cc.h	/^typedef uint16_t u16_t;$/;"	t
u16_t	obj/net/ns.asm	/^u16_t$/;"	l
u16_t	obj/net/testinput.asm	/^u16_t$/;"	l
u16_t	obj/user/echosrv.asm	/^u16_t$/;"	l
u16_t	obj/user/echotest.asm	/^u16_t$/;"	l
u16_t	obj/user/httpd.asm	/^u16_t$/;"	l
u32_t	net/lwip/jos/arch/cc.h	/^typedef uint32_t u32_t;$/;"	t
u32_t	obj/net/ns.asm	/^u32_t $/;"	l
u32_t	obj/net/ns.asm	/^u32_t$/;"	l
u32_t	obj/net/testinput.asm	/^u32_t$/;"	l
u32_t	obj/user/echosrv.asm	/^u32_t$/;"	l
u32_t	obj/user/echotest.asm	/^u32_t$/;"	l
u32_t	obj/user/httpd.asm	/^u32_t$/;"	l
u64_t	net/lwip/jos/arch/cc.h	/^typedef uint64_t u64_t;$/;"	t
u8_t	net/lwip/jos/arch/cc.h	/^typedef uint8_t u8_t;$/;"	t
u8_t	obj/net/ns.asm	/^u8_t ip_addr_isbroadcast(struct ip_addr *addr, struct netif *netif)$/;"	l
u8_t	obj/net/ns.asm	/^u8_t netif_is_up(struct netif *netif)$/;"	l
u8_t	obj/net/ns.asm	/^u8_t$/;"	l
u_char	net/lwip/netif/ppp/ppp.h	/^typedef unsigned char  u_char;$/;"	t
u_int	net/lwip/netif/ppp/ppp.h	/^typedef unsigned int   u_int;$/;"	t
u_long	net/lwip/netif/ppp/ppp.h	/^typedef unsigned long  u_long;$/;"	t
u_short	net/lwip/netif/ppp/ppp.h	/^typedef unsigned short u_short;$/;"	t
udp	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node udp = {$/;"	v	typeref:struct:mib_array_node
udp	net/lwip/include/lwip/api.h	/^    struct udp_pcb *udp;$/;"	m	union:netconn::__anon19	typeref:struct:netconn::__anon19::udp_pcb
udp	net/lwip/include/lwip/stats.h	/^  struct stats_proto udp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto
udp_bind	net/lwip/core/udp.c	/^udp_bind(struct udp_pcb *pcb, struct ip_addr *ipaddr, u16_t port)$/;"	f
udp_connect	net/lwip/core/udp.c	/^udp_connect(struct udp_pcb *pcb, struct ip_addr *ipaddr, u16_t port)$/;"	f
udp_debug_print	net/lwip/core/udp.c	/^udp_debug_print(struct udp_hdr *udphdr)$/;"	f
udp_debug_print	net/lwip/include/lwip/udp.h	141;"	d
udp_disconnect	net/lwip/core/udp.c	/^udp_disconnect(struct udp_pcb *pcb)$/;"	f
udp_flags	net/lwip/include/lwip/udp.h	130;"	d
udp_get_object_def	net/lwip/core/snmp/mib2.c	/^udp_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
udp_get_value	net/lwip/core/snmp/mib2.c	/^udp_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
udp_hdr	net/lwip/include/lwip/udp.h	/^struct udp_hdr {$/;"	s
udp_ids	net/lwip/core/snmp/mib2.c	/^const s32_t udp_ids[5] = { 1, 2, 3, 4, 5 };$/;"	v
udp_init	net/lwip/include/lwip/udp.h	136;"	d
udp_input	net/lwip/core/udp.c	/^udp_input(struct pbuf *p, struct netif *inp)$/;"	f
udp_new	net/lwip/core/udp.c	/^udp_new(void)$/;"	f
udp_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const udp_nodes[5] = {$/;"	v
udp_pcb	net/lwip/include/lwip/udp.h	/^struct udp_pcb {$/;"	s
udp_pcbs	net/lwip/core/udp.c	/^struct udp_pcb *udp_pcbs;$/;"	v	typeref:struct:udp_pcb
udp_pcbs	obj/net/ns.asm	/^          udp_pcbs = pcb;$/;"	d
udp_pcbs	obj/net/ns.asm	/^    udp_pcbs = pcb;$/;"	d
udp_pcbs	obj/net/ns.asm	/^    udp_pcbs = udp_pcbs->next;$/;"	d
udp_pcbs	obj/net/ns.asm	/^  udp_pcbs = pcb;$/;"	d
udp_recv	net/lwip/core/udp.c	/^udp_recv(struct udp_pcb *pcb,$/;"	f
udp_remove	net/lwip/core/udp.c	/^udp_remove(struct udp_pcb *pcb)$/;"	f
udp_root	net/lwip/core/snmp/mib2.c	/^struct mib_list_rootnode udp_root = {$/;"	v	typeref:struct:mib_list_rootnode
udp_scalar	net/lwip/core/snmp/mib2.c	/^const mib_scalar_node udp_scalar = {$/;"	v
udp_send	net/lwip/core/udp.c	/^udp_send(struct udp_pcb *pcb, struct pbuf *p)$/;"	f
udp_sendto	net/lwip/core/udp.c	/^udp_sendto(struct udp_pcb *pcb, struct pbuf *p,$/;"	f
udp_sendto_if	net/lwip/core/udp.c	/^udp_sendto_if(struct udp_pcb *pcb, struct pbuf *p,$/;"	f
udp_setflags	net/lwip/include/lwip/udp.h	131;"	d
udpentry	net/lwip/core/snmp/mib2.c	/^const struct mib_array_node udpentry = {$/;"	v	typeref:struct:mib_array_node
udpentry_get_object_def	net/lwip/core/snmp/mib2.c	/^udpentry_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od)$/;"	f	file:
udpentry_get_value	net/lwip/core/snmp/mib2.c	/^udpentry_get_value(struct obj_def *od, u16_t len, void *value)$/;"	f	file:
udpentry_ids	net/lwip/core/snmp/mib2.c	/^const s32_t udpentry_ids[2] = { 1, 2 };$/;"	v
udpentry_nodes	net/lwip/core/snmp/mib2.c	/^struct mib_node* const udpentry_nodes[2] = {$/;"	v
udphdr	obj/net/ns.asm	/^  udphdr = (struct udp_hdr *)p->payload;$/;"	d
udphdr	obj/net/ns.asm	/^  udphdr = q->payload;$/;"	d
udpindatagrams	net/lwip/core/snmp/mib2.c	/^static u32_t udpindatagrams = 0,$/;"	v	file:
udpinerrors	net/lwip/core/snmp/mib2.c	/^             udpinerrors = 0,$/;"	v	file:
udpnoports	net/lwip/core/snmp/mib2.c	/^             udpnoports = 0,$/;"	v	file:
udpoutdatagrams	net/lwip/core/snmp/mib2.c	/^             udpoutdatagrams = 0;$/;"	v	file:
udptable	net/lwip/core/snmp/mib2.c	/^struct mib_ram_array_node udptable = {$/;"	v	typeref:struct:mib_ram_array_node
udptable_id	net/lwip/core/snmp/mib2.c	/^s32_t udptable_id = 1;$/;"	v
udptable_node	net/lwip/core/snmp/mib2.c	/^struct mib_node* udptable_node = (struct mib_node* const)&udpentry;$/;"	v	typeref:struct:mib_node
uint16_t	inc/types.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	inc/types.h	/^typedef unsigned int uint32_t;$/;"	t
uint32_t	obj/net/ns.asm	/^uint32_t$/;"	l
uint64_t	inc/types.h	/^typedef unsigned long long uint64_t;$/;"	t
uint64_t	obj/fs/fs.asm	/^uint64_t$/;"	l
uint64_t	obj/net/ns.asm	/^uint64_t$/;"	l
uint64_t	obj/net/testinput.asm	/^uint64_t$/;"	l
uint64_t	obj/net/testoutput.asm	/^uint64_t$/;"	l
uint64_t	obj/user/echosrv.asm	/^uint64_t$/;"	l
uint64_t	obj/user/echotest.asm	/^uint64_t$/;"	l
uint64_t	obj/user/forktree.asm	/^uint64_t$/;"	l
uint64_t	obj/user/hello.asm	/^uint64_t$/;"	l
uint64_t	obj/user/httpd.asm	/^uint64_t$/;"	l
uint64_t	obj/user/icode.asm	/^uint64_t$/;"	l
uint64_t	obj/user/idle.asm	/^uint64_t$/;"	l
uint64_t	obj/user/init.asm	/^uint64_t$/;"	l
uint64_t	obj/user/pingpong.asm	/^uint64_t$/;"	l
uint64_t	obj/user/primes.asm	/^uint64_t$/;"	l
uint64_t	obj/user/testfile.asm	/^uint64_t$/;"	l
uint64_t	obj/user/testtime.asm	/^uint64_t$/;"	l
uint64_t	obj/user/writemotd.asm	/^uint64_t$/;"	l
uint8_t	inc/types.h	/^typedef unsigned char uint8_t;$/;"	t
uintptr_t	inc/types.h	/^typedef uint64_t uintptr_t;$/;"	t
umain	fs/serv.c	/^umain(int argc, char **argv)$/;"	f
umain	net/serv.c	/^umain(int argc, char **argv)$/;"	f
umain	net/testinput.c	/^umain(int argc, char **argv)$/;"	f
umain	net/testoutput.c	/^umain(int argc, char **argv)$/;"	f
umain	user/badsegment.c	/^umain(int argc, char **argv)$/;"	f
umain	user/breakpoint.c	/^umain(int argc, char **argv)$/;"	f
umain	user/buggyhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/buggyhello2.c	/^umain(int argc, char **argv)$/;"	f
umain	user/divzero.c	/^umain(int argc, char **argv)$/;"	f
umain	user/dumbfork.c	/^umain(int argc, char **argv)$/;"	f
umain	user/echosrv.c	/^umain(int argc, char **argv)$/;"	f
umain	user/echotest.c	/^void umain(int argc, char **argv)$/;"	f
umain	user/evilhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/fairness.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultalloc.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultallocbad.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultbadhandler.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultdie.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultevilhandler.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultnostack.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultread.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultreadkernel.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultregs.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultwrite.c	/^umain(int argc, char **argv)$/;"	f
umain	user/faultwritekernel.c	/^umain(int argc, char **argv)$/;"	f
umain	user/forktree.c	/^umain(int argc, char **argv)$/;"	f
umain	user/hello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/httpd.c	/^umain(int argc, char **argv)$/;"	f
umain	user/icode.c	/^umain(int argc, char **argv)$/;"	f
umain	user/idle.c	/^umain(int argc, char **argv)$/;"	f
umain	user/init.c	/^umain(int argc, char **argv)$/;"	f
umain	user/pingpong.c	/^umain(int argc, char **argv)$/;"	f
umain	user/pingpongs.c	/^umain(int argc, char **argv)$/;"	f
umain	user/primes.c	/^umain(int argc, char **argv)$/;"	f
umain	user/softint.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spawnhello.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spawninit.c	/^umain(int argc, char **argv)$/;"	f
umain	user/spin.c	/^umain(int argc, char **argv)$/;"	f
umain	user/stresssched.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testbss.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testfile.c	/^umain(int argc, char **argv)$/;"	f
umain	user/testtime.c	/^umain(int argc, char **argv)$/;"	f
umain	user/writemotd.c	/^umain(int argc, char **argv)$/;"	f
umain	user/yield.c	/^umain(int argc, char **argv)$/;"	f
unacked	net/lwip/include/lwip/tcp.h	/^  struct tcp_seg *unacked;  \/* Sent but unacknowledged segments. *\/$/;"	m	struct:tcp_pcb	typeref:struct:tcp_pcb::tcp_seg
uncon_pcb	obj/net/ns.asm	/^          uncon_pcb = pcb;$/;"	d
uncon_pcb	obj/net/ns.asm	/^    uncon_pcb = NULL;$/;"	d
unicast_query	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER unicast_query;    \/* *\/$/;"	m	struct:stats_igmp
union	obj/fs/fs.asm	/^union Fsipc *fsreq = (union Fsipc *)0x0ffff000;$/;"	l
unit	net/lwip/netif/ppp/chap.h	/^  int unit;                               \/* Interface unit number *\/$/;"	m	struct:chap_state
unit	net/lwip/netif/ppp/fsm.h	/^  int unit;                        \/* Interface unit number *\/$/;"	m	struct:fsm
unit	net/lwip/netif/ppp/ppp.c	/^  int unit;$/;"	m	struct:pppInputHeader	file:
unlock_kernel	kern/spinlock.h	/^unlock_kernel(void)$/;"	f
unsent	net/lwip/include/lwip/tcp.h	/^  struct tcp_seg *unsent;   \/* Unsent (queued) segments. *\/$/;"	m	struct:tcp_pcb	typeref:struct:tcp_pcb::tcp_seg
unsigned	obj/fs/fs.asm	/^unsigned int$/;"	l
unsigned	obj/kern/kernel.asm	/^unsigned int$/;"	l
unsigned	obj/kern/kernel.asm	/^unsigned$/;"	l
unsigned	obj/net/ns.asm	/^unsigned int$/;"	l
unsigned	obj/net/testinput.asm	/^unsigned int$/;"	l
unsigned	obj/net/testoutput.asm	/^unsigned int$/;"	l
unsigned	obj/user/echosrv.asm	/^unsigned int$/;"	l
unsigned	obj/user/echotest.asm	/^unsigned int$/;"	l
unsigned	obj/user/forktree.asm	/^unsigned int$/;"	l
unsigned	obj/user/hello.asm	/^unsigned int$/;"	l
unsigned	obj/user/httpd.asm	/^unsigned int$/;"	l
unsigned	obj/user/icode.asm	/^unsigned int$/;"	l
unsigned	obj/user/idle.asm	/^unsigned int$/;"	l
unsigned	obj/user/init.asm	/^unsigned int$/;"	l
unsigned	obj/user/pingpong.asm	/^unsigned int$/;"	l
unsigned	obj/user/primes.asm	/^unsigned int$/;"	l
unsigned	obj/user/primes.asm	/^unsigned$/;"	l
unsigned	obj/user/testfile.asm	/^unsigned int$/;"	l
unsigned	obj/user/testtime.asm	/^unsigned int$/;"	l
unsigned	obj/user/writemotd.asm	/^unsigned int$/;"	l
unused	net/lwip/include/ipv6/lwip/icmp.h	/^  u32_t unused;$/;"	m	struct:icmp_dur_hdr
unused	net/lwip/include/ipv6/lwip/icmp.h	/^  u32_t unused;$/;"	m	struct:icmp_te_hdr
up	net/lwip/netif/ppp/fsm.h	/^  void (*up)(fsm*);                                 \/* Called when fsm reaches LS_OPENED state *\/$/;"	m	struct:fsm_callbacks
upap	net/lwip/netif/ppp/pap.c	/^upap_state upap[NUM_PPP]; \/* UPAP state; one for each unit *\/$/;"	v
upap_authpeer	net/lwip/netif/ppp/pap.c	/^upap_authpeer(int unit)$/;"	f
upap_authwithpeer	net/lwip/netif/ppp/pap.c	/^upap_authwithpeer(int unit, char *user, char *password)$/;"	f
upap_init	net/lwip/netif/ppp/pap.c	/^upap_init(int unit)$/;"	f	file:
upap_input	net/lwip/netif/ppp/pap.c	/^upap_input(int unit, u_char *inpacket, int l)$/;"	f	file:
upap_lowerdown	net/lwip/netif/ppp/pap.c	/^upap_lowerdown(int unit)$/;"	f	file:
upap_lowerup	net/lwip/netif/ppp/pap.c	/^upap_lowerup(int unit)$/;"	f	file:
upap_protrej	net/lwip/netif/ppp/pap.c	/^upap_protrej(int unit)$/;"	f	file:
upap_rauthack	net/lwip/netif/ppp/pap.c	/^upap_rauthack(upap_state *u, u_char *inp, int id, int len)$/;"	f	file:
upap_rauthnak	net/lwip/netif/ppp/pap.c	/^upap_rauthnak(upap_state *u, u_char *inp, int id, int len)$/;"	f	file:
upap_rauthreq	net/lwip/netif/ppp/pap.c	/^upap_rauthreq(upap_state *u, u_char *inp, int id, int len)$/;"	f	file:
upap_reqtimeout	net/lwip/netif/ppp/pap.c	/^upap_reqtimeout(void *arg)$/;"	f	file:
upap_sauthreq	net/lwip/netif/ppp/pap.c	/^upap_sauthreq(upap_state *u)$/;"	f	file:
upap_setloginpasswd	net/lwip/netif/ppp/pap.c	/^upap_setloginpasswd(int unit, const char *luser, const char *lpassword)$/;"	f
upap_sresp	net/lwip/netif/ppp/pap.c	/^upap_sresp(upap_state *u, u_char code, u_char id, char *msg, int msglen)$/;"	f	file:
upap_state	net/lwip/netif/ppp/pap.h	/^typedef struct upap_state {$/;"	s
upap_state	net/lwip/netif/ppp/pap.h	/^} upap_state;$/;"	t	typeref:struct:upap_state
upap_timeout	net/lwip/netif/ppp/pap.c	/^upap_timeout(void *arg)$/;"	f	file:
update_arp_entry	net/lwip/netif/etharp.c	/^update_arp_entry(struct netif *netif, struct ip_addr *ipaddr, struct eth_addr *ethaddr, u8_t flags)$/;"	f	file:
url	obj/user/httpd.asm	/^	url = request;$/;"	d
url	user/httpd.c	/^	char *url;$/;"	m	struct:http_request	file:
url_len	obj/user/httpd.asm	/^	url_len = request - url;$/;"	d
urllib2	grade-lab6	/^import os, re, threading, socket, time, urllib2, shutil, struct, difflib$/;"	i
us_clientstate	net/lwip/netif/ppp/pap.h	/^  int us_clientstate;    \/* Client state *\/$/;"	m	struct:upap_state
us_id	net/lwip/netif/ppp/pap.h	/^  u_char us_id;          \/* Current id *\/$/;"	m	struct:upap_state
us_maxtransmits	net/lwip/netif/ppp/pap.h	/^  int us_maxtransmits;   \/* Maximum number of auth-reqs to send *\/$/;"	m	struct:upap_state
us_passwd	net/lwip/netif/ppp/pap.h	/^  const char *us_passwd; \/* Password *\/$/;"	m	struct:upap_state
us_passwdlen	net/lwip/netif/ppp/pap.h	/^  int us_passwdlen;      \/* Password length *\/$/;"	m	struct:upap_state
us_reqtimeout	net/lwip/netif/ppp/pap.h	/^  int us_reqtimeout;     \/* Time to wait for auth-req from peer *\/$/;"	m	struct:upap_state
us_serverstate	net/lwip/netif/ppp/pap.h	/^  int us_serverstate;    \/* Server state *\/$/;"	m	struct:upap_state
us_timeouttime	net/lwip/netif/ppp/pap.h	/^  int us_timeouttime;    \/* Timeout (seconds) for auth-req retrans. *\/$/;"	m	struct:upap_state
us_transmits	net/lwip/netif/ppp/pap.h	/^  int us_transmits;      \/* Number of auth-reqs sent *\/$/;"	m	struct:upap_state
us_unit	net/lwip/netif/ppp/pap.h	/^  int us_unit;           \/* Interface unit number *\/$/;"	m	struct:upap_state
us_user	net/lwip/netif/ppp/pap.h	/^  const char *us_user;   \/* User *\/$/;"	m	struct:upap_state
us_userlen	net/lwip/netif/ppp/pap.h	/^  int us_userlen;        \/* User length *\/$/;"	m	struct:upap_state
usage	fs/fsformat.c	/^usage(void)$/;"	f
use	net/lwip/include/ipv4/lwip/igmp.h	/^  u8_t               use; \/* counter of simultaneous uses *\/$/;"	m	struct:igmp_group
used	net/lwip/core/mem.c	/^  u8_t used;$/;"	m	struct:mem	file:
used	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER used;$/;"	m	struct:stats_syselem
used	net/lwip/include/lwip/stats.h	/^  mem_size_t used;$/;"	m	struct:stats_mem
useg	obj/net/ns.asm	/^          useg = useg->next;$/;"	d
useg	obj/net/ns.asm	/^        useg = seg;$/;"	d
useg	obj/net/ns.asm	/^    useg = NULL;$/;"	d
useg	obj/net/ns.asm	/^    useg = seg;$/;"	d
useg	obj/net/ns.asm	/^  useg = pcb->unacked;$/;"	d
useg	obj/net/ns.asm	/^  useg = queue = seg = NULL;$/;"	d
usehostname	net/lwip/netif/ppp/ppp.h	/^  u_int  usehostname       : 1;       \/* Use hostname for our_name *\/$/;"	m	struct:ppp_settings
usepeerdns	net/lwip/netif/ppp/ppp.h	/^  u_int  usepeerdns        : 1;       \/* Ask peer for DNS adds *\/$/;"	m	struct:ppp_settings
user	net/lwip/netif/ppp/ppp.h	/^  char user       [MAXNAMELEN   + 1]; \/* Username for PAP *\/$/;"	m	struct:ppp_settings
user_mem_assert	kern/pmap.c	/^user_mem_assert(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_assert	kern/pmap.c.BACKUP.24152.c	/^user_mem_assert(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_assert	kern/pmap.c.BASE.24152.c	/^user_mem_assert(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_assert	kern/pmap.c.LOCAL.24152.c	/^user_mem_assert(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_assert	kern/pmap.c.REMOTE.24152.c	/^user_mem_assert(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_assert	kern/pmap1.c	/^user_mem_assert(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check	kern/pmap.c	/^user_mem_check(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check	kern/pmap.c.BACKUP.24152.c	/^user_mem_check(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check	kern/pmap.c.BASE.24152.c	/^user_mem_check(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check	kern/pmap.c.LOCAL.24152.c	/^user_mem_check(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check	kern/pmap.c.REMOTE.24152.c	/^user_mem_check(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check	kern/pmap1.c	/^user_mem_check(struct Env *env, const void *va, size_t len, int perm)$/;"	f
user_mem_check_addr	kern/pmap.c	/^static uintptr_t user_mem_check_addr;$/;"	v	file:
user_mem_check_addr	kern/pmap.c.BACKUP.24152.c	/^static uintptr_t user_mem_check_addr;$/;"	v	file:
user_mem_check_addr	kern/pmap.c.BASE.24152.c	/^static uintptr_t user_mem_check_addr;$/;"	v	file:
user_mem_check_addr	kern/pmap.c.LOCAL.24152.c	/^static uintptr_t user_mem_check_addr;$/;"	v	file:
user_mem_check_addr	kern/pmap.c.REMOTE.24152.c	/^static uintptr_t user_mem_check_addr;$/;"	v	file:
user_mem_check_addr	kern/pmap1.c	/^static uintptr_t user_mem_check_addr;$/;"	v	file:
user_mem_check_addr	obj/kern/kernel.asm	/^			user_mem_check_addr = (addr == va)? (uint64_t)va: ROUNDDOWN((uint64_t)addr, PGSIZE);$/;"	d
user_mem_check_addr	obj/kern/kernel.asm	/^		user_mem_check_addr = (uint64_t)va;$/;"	d
user_test	gradelib.py	/^    def user_test(self, binary, *monitors, **kw):$/;"	m	class:Runner
utf_eflags	inc/trap.h	/^	uint64_t utf_eflags;$/;"	m	struct:UTrapframe
utf_err	inc/trap.h	/^	uint64_t utf_err;$/;"	m	struct:UTrapframe
utf_fault_va	inc/trap.h	/^	uint64_t utf_fault_va;	\/* va for T_PGFLT, 0 otherwise *\/$/;"	m	struct:UTrapframe
utf_regs	inc/trap.h	/^	struct PushRegs utf_regs;$/;"	m	struct:UTrapframe	typeref:struct:UTrapframe::PushRegs
utf_rip	inc/trap.h	/^	uintptr_t utf_rip;$/;"	m	struct:UTrapframe
utf_rsp	inc/trap.h	/^	uintptr_t utf_rsp;$/;"	m	struct:UTrapframe
v	net/lwip/include/ipv6/lwip/ip.h	/^  u8_t tclass1:4, v:4;$/;"	m	struct:ip_hdr
v	net/lwip/jos/arch/sys_arch.c	/^	uint32_t v;$/;"	m	union:sys_sem_entry::__anon39	file:
v	obj/net/ns.asm	/^			v = mptr;$/;"	d
v	obj/net/ns.asm	/^	v = mptr;$/;"	d
v	obj/user/httpd.asm	/^			v = mptr;$/;"	d
v	obj/user/httpd.asm	/^	v = mptr;$/;"	d
v1_rxed	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER v1_rxed;          \/* *\/$/;"	m	struct:stats_igmp
v_len	net/lwip/include/lwip/snmp_structs.h	/^  u16_t v_len;$/;"	m	struct:obj_def
va	obj/kern/kernel.asm	/^	va = (void*)(PGSIZE * 100);$/;"	d
va	obj/net/ns.asm	/^		va = get_buffer();$/;"	d
va	obj/net/ns.asm	/^	va = (void *)(REQVA + i * PGSIZE);$/;"	d
va_arg	inc/stdarg.h	11;"	d
va_copy	inc/stdarg.h	15;"	d
va_end	inc/stdarg.h	13;"	d
va_is_dirty	fs/bc.c	/^va_is_dirty(void *va)$/;"	f
va_is_mapped	fs/bc.c	/^va_is_mapped(void *va)$/;"	f
va_list	inc/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t
va_start	inc/stdarg.h	9;"	d
val	obj/net/ns.asm	/^        val = (val * base) + (int)(c - '0');$/;"	d
val	obj/net/ns.asm	/^        val = (val << 4) | (int)(c + 10 - (islower(c) ? 'a' : 'A'));$/;"	d
val	obj/net/ns.asm	/^    val = 0;$/;"	d
val	obj/net/testinput.asm	/^        val = (val * base) + (int)(c - '0');$/;"	d
val	obj/net/testinput.asm	/^        val = (val << 4) | (int)(c + 10 - (islower(c) ? 'a' : 'A'));$/;"	d
val	obj/net/testinput.asm	/^    val = 0;$/;"	d
val	obj/user/echosrv.asm	/^        val = (val * base) + (int)(c - '0');$/;"	d
val	obj/user/echosrv.asm	/^        val = (val << 4) | (int)(c + 10 - (islower(c) ? 'a' : 'A'));$/;"	d
val	obj/user/echosrv.asm	/^    val = 0;$/;"	d
val	obj/user/echotest.asm	/^        val = (val * base) + (int)(c - '0');$/;"	d
val	obj/user/echotest.asm	/^        val = (val << 4) | (int)(c + 10 - (islower(c) ? 'a' : 'A'));$/;"	d
val	obj/user/echotest.asm	/^    val = 0;$/;"	d
val	obj/user/httpd.asm	/^        val = (val * base) + (int)(c - '0');$/;"	d
val	obj/user/httpd.asm	/^        val = (val << 4) | (int)(c + 10 - (islower(c) ? 'a' : 'A'));$/;"	d
val	obj/user/httpd.asm	/^    val = 0;$/;"	d
val	user/pingpongs.c	/^uint32_t val;$/;"	v
valid	obj/net/ns.asm	/^            valid = 0;$/;"	d
valid	obj/net/ns.asm	/^          valid = 0;$/;"	d
valid	obj/net/ns.asm	/^        valid = 0;$/;"	d
value	net/lwip/include/lwip/snmp_msg.h	/^  void *value;$/;"	m	struct:snmp_varbind
value	obj/net/ns.asm	/^  value = (u32_t)(*ptr++) << 24;$/;"	d
value_len	net/lwip/include/lwip/snmp_msg.h	/^  u8_t value_len;$/;"	m	struct:snmp_varbind
value_type	net/lwip/include/lwip/snmp_msg.h	/^  u8_t value_type;$/;"	m	struct:snmp_varbind
vb_idx	net/lwip/include/lwip/snmp_msg.h	/^  u8_t vb_idx;$/;"	m	struct:snmp_msg_pstat
vb_ptr	net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *vb_ptr;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_varbind
vcprintf	kern/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
vcprintf	lib/printf.c	/^vcprintf(const char *fmt, va_list ap)$/;"	f
verify_cpu	boot1/head64.S	/^verify_cpu:$/;"	l
verify_cpu	obj/boot1/boot.asm	/^verify_cpu:$/;"	l
verify_cpu_no_longmode	boot1/head64.S	/^verify_cpu_no_longmode:$/;"	l
verify_cpu_no_longmode	obj/boot1/boot.asm	/^verify_cpu_no_longmode:$/;"	l
verlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t verlen;$/;"	m	struct:snmp_resp_header_lengths
verlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t verlen;$/;"	m	struct:snmp_trap_header_lengths
verlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t verlenlen;$/;"	m	struct:snmp_resp_header_lengths
verlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t verlenlen;$/;"	m	struct:snmp_trap_header_lengths
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ [14]$/;"	m	struct:mpconf	file:
version	kern/mpconfig.c	/^	uint8_t version;                \/\/ local APIC version$/;"	m	struct:mpproc	file:
version	obj/user/httpd.asm	/^	version = request;$/;"	d
version	user/httpd.c	/^	char *version;$/;"	m	struct:http_request	file:
version_len	obj/user/httpd.asm	/^	version_len = request - version;$/;"	d
vfprintf	lib/fprintf.c	/^vfprintf(int fd, const char *fmt, va_list ap)$/;"	f
vjComp	net/lwip/netif/ppp/ppp.c	/^  struct vjcompress vjComp;     \/* Van Jabobsen compression header. *\/$/;"	m	struct:PPPControl_s	typeref:struct:PPPControl_s::vjcompress	file:
vjEnabled	net/lwip/netif/ppp/ppp.c	/^  int  vjEnabled;               \/* Flag indicating VJ compression enabled. *\/$/;"	m	struct:PPPControl_s	file:
vj_compress_init	net/lwip/netif/ppp/vj.c	/^vj_compress_init(struct vjcompress *comp)$/;"	f
vj_compress_tcp	net/lwip/netif/ppp/vj.c	/^vj_compress_tcp(struct vjcompress *comp, struct pbuf *pb)$/;"	f
vj_protocol	net/lwip/netif/ppp/ipcp.h	/^  u_short vj_protocol;       \/* protocol value to use in VJ option *\/$/;"	m	struct:ipcp_options
vj_uncompress_err	net/lwip/netif/ppp/vj.c	/^vj_uncompress_err(struct vjcompress *comp)$/;"	f
vj_uncompress_tcp	net/lwip/netif/ppp/vj.c	/^vj_uncompress_tcp(struct pbuf **nb, struct vjcompress *comp)$/;"	f
vj_uncompress_uncomp	net/lwip/netif/ppp/vj.c	/^vj_uncompress_uncomp(struct pbuf *nb, struct vjcompress *comp)$/;"	f
vjcompress	net/lwip/netif/ppp/vj.h	/^struct vjcompress {$/;"	s
vjcs_u	net/lwip/netif/ppp/vj.h	/^  } vjcs_u;$/;"	m	struct:cstate	typeref:union:cstate::__anon15
vjs_compressed	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_compressed;     \/* outbound compressed packets *\/$/;"	m	struct:vjstat
vjs_compressedin	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_compressedin;   \/* inbound compressed packets *\/$/;"	m	struct:vjstat
vjs_errorin	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_errorin;        \/* inbound unknown type packets *\/$/;"	m	struct:vjstat
vjs_misses	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_misses;         \/* times couldn't find conn. state *\/$/;"	m	struct:vjstat
vjs_packets	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_packets;        \/* outbound packets *\/$/;"	m	struct:vjstat
vjs_searches	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_searches;       \/* searches for connection state *\/$/;"	m	struct:vjstat
vjs_tossed	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_tossed;         \/* inbound packets tossed because of error *\/$/;"	m	struct:vjstat
vjs_uncompressedin	net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_uncompressedin; \/* inbound uncompressed packets *\/$/;"	m	struct:vjstat
vjstat	net/lwip/netif/ppp/vj.h	/^struct vjstat {$/;"	s
vlen	net/lwip/include/lwip/snmp_msg.h	/^  u16_t vlen;$/;"	m	struct:snmp_varbind
vlenlen	net/lwip/include/lwip/snmp_msg.h	/^  u8_t vlenlen;$/;"	m	struct:snmp_varbind
void	obj/boot1/boot.asm	/^void readsect(void*, uint64_t);$/;"	l
void	obj/boot1/boot.asm	/^void readseg(uint64_t, uint64_t, uint64_t);$/;"	l
void	obj/boot1/boot.asm	/^void$/;"	l
void	obj/fs/fs.asm	/^void *$/;"	l
void	obj/fs/fs.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/fs/fs.asm	/^void$/;"	l
void	obj/kern/kernel.asm	/^void	user_mem_assert(struct Env *env, const void *va, size_t len, int perm);$/;"	l
void	obj/kern/kernel.asm	/^void *$/;"	l
void	obj/kern/kernel.asm	/^void *mpentry_kstack;$/;"	l
void	obj/kern/kernel.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/kern/kernel.asm	/^void$/;"	l
void	obj/net/ns.asm	/^void *$/;"	l
void	obj/net/ns.asm	/^void *mem_calloc(mem_size_t count, mem_size_t size)$/;"	l
void	obj/net/ns.asm	/^void dhcp_arp_reply(struct netif *netif, struct ip_addr *addr)$/;"	l
void	obj/net/ns.asm	/^void netif_remove(struct netif * netif)$/;"	l
void	obj/net/ns.asm	/^void netif_set_down(struct netif *netif)$/;"	l
void	obj/net/ns.asm	/^void netif_set_up(struct netif *netif)$/;"	l
void	obj/net/ns.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/net/ns.asm	/^void$/;"	l
void	obj/net/testinput.asm	/^void *$/;"	l
void	obj/net/testinput.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/net/testinput.asm	/^void$/;"	l
void	obj/net/testoutput.asm	/^void *$/;"	l
void	obj/net/testoutput.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/net/testoutput.asm	/^void$/;"	l
void	obj/user/echosrv.asm	/^void *$/;"	l
void	obj/user/echosrv.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/echosrv.asm	/^void$/;"	l
void	obj/user/echotest.asm	/^void *$/;"	l
void	obj/user/echotest.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/echotest.asm	/^void umain(int argc, char **argv)$/;"	l
void	obj/user/echotest.asm	/^void$/;"	l
void	obj/user/forktree.asm	/^void *$/;"	l
void	obj/user/forktree.asm	/^void forktree(const char *cur);$/;"	l
void	obj/user/forktree.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/forktree.asm	/^void$/;"	l
void	obj/user/hello.asm	/^void *$/;"	l
void	obj/user/hello.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/hello.asm	/^void$/;"	l
void	obj/user/httpd.asm	/^void *$/;"	l
void	obj/user/httpd.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/httpd.asm	/^void$/;"	l
void	obj/user/icode.asm	/^void *$/;"	l
void	obj/user/icode.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/icode.asm	/^void$/;"	l
void	obj/user/idle.asm	/^void *$/;"	l
void	obj/user/idle.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/idle.asm	/^void$/;"	l
void	obj/user/init.asm	/^void *$/;"	l
void	obj/user/init.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/init.asm	/^void$/;"	l
void	obj/user/pingpong.asm	/^void *$/;"	l
void	obj/user/pingpong.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/pingpong.asm	/^void$/;"	l
void	obj/user/primes.asm	/^void *$/;"	l
void	obj/user/primes.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/primes.asm	/^void$/;"	l
void	obj/user/testfile.asm	/^void *$/;"	l
void	obj/user/testfile.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testfile.asm	/^void$/;"	l
void	obj/user/testtime.asm	/^void *$/;"	l
void	obj/user/testtime.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/testtime.asm	/^void$/;"	l
void	obj/user/writemotd.asm	/^void *$/;"	l
void	obj/user/writemotd.asm	/^void printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	l
void	obj/user/writemotd.asm	/^void$/;"	l
voidfunc	net/lwip/include/lwip/netifapi.h	/^      void  (* voidfunc)(struct netif *netif);$/;"	m	struct:netifapi_msg_msg::__anon20::__anon22
volatile	obj/kern/kernel.asm	/^volatile uint32_t *lapic;$/;"	l
vpd_key0	kern/pcireg.h	/^	uint8_t		vpd_key0;$/;"	m	struct:pci_vpd
vpd_key1	kern/pcireg.h	/^	uint8_t		vpd_key1;$/;"	m	struct:pci_vpd
vpd_len	kern/pcireg.h	/^	uint8_t		vpd_len;		\/* length of data only *\/$/;"	m	struct:pci_vpd
vpdres_byte0	kern/pcireg.h	/^	uint8_t		vpdres_byte0;		\/* length of data + tag *\/$/;"	m	struct:pci_vpd_smallres
vpdres_byte0	kern/pcireg.h	/^	uint8_t		vpdres_byte0;$/;"	m	struct:pci_vpd_largeres
vpdres_len_lsb	kern/pcireg.h	/^	uint8_t		vpdres_len_lsb;		\/* length of data only *\/$/;"	m	struct:pci_vpd_largeres
vpdres_len_msb	kern/pcireg.h	/^	uint8_t		vpdres_len_msb;$/;"	m	struct:pci_vpd_largeres
vprintfmt	lib/printfmt.c	/^vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap)$/;"	f
vsnprintf	lib/printfmt.c	/^vsnprintf(char *buf, int n, const char *fmt, va_list ap)$/;"	f
w	net/lwip/include/lwip/api_msg.h	/^    } w;$/;"	m	union:api_msg_msg::__anon25	typeref:struct:api_msg_msg::__anon25::__anon29
wait	gradelib.py	/^    def wait(self):$/;"	f
waitdisk	boot/main.c	/^waitdisk(void)$/;"	f
waitdisk	boot1/main.c	/^waitdisk(void)$/;"	f
waiters	net/lwip/jos/arch/sys_arch.c	/^	    uint16_t waiters;$/;"	m	struct:sys_sem_entry::__anon39::__anon40	file:
walk_path	fs/fs.c	/^walk_path(const char *path, struct File **pdir, struct File **pf, char *lastelem)$/;"	f	file:
want	obj/user/init.asm	/^	want = 0xf989e;$/;"	d
warn	inc/assert.h	11;"	d
was	obj/kern/kernel.asm	/^	was = *cp;$/;"	d
we	obj/net/ns.asm	/^       we do NOT return to the application thread, since ERR_MEM is$/;"	d
whom	net/serv.c	/^	uint32_t whom;$/;"	m	struct:st_args	file:
width	obj/fs/fs.asm	/^				width = 0;$/;"	d
width	obj/fs/fs.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/fs/fs.asm	/^		width = -1;$/;"	d
width	obj/kern/kernel.asm	/^				width = 0;$/;"	d
width	obj/kern/kernel.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/kern/kernel.asm	/^		width = -1;$/;"	d
width	obj/net/ns.asm	/^				width = 0;$/;"	d
width	obj/net/ns.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/net/ns.asm	/^		width = -1;$/;"	d
width	obj/net/testinput.asm	/^				width = 0;$/;"	d
width	obj/net/testinput.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/net/testinput.asm	/^		width = -1;$/;"	d
width	obj/net/testoutput.asm	/^				width = 0;$/;"	d
width	obj/net/testoutput.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/net/testoutput.asm	/^		width = -1;$/;"	d
width	obj/user/echosrv.asm	/^				width = 0;$/;"	d
width	obj/user/echosrv.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/echosrv.asm	/^		width = -1;$/;"	d
width	obj/user/echotest.asm	/^				width = 0;$/;"	d
width	obj/user/echotest.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/echotest.asm	/^		width = -1;$/;"	d
width	obj/user/forktree.asm	/^				width = 0;$/;"	d
width	obj/user/forktree.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/forktree.asm	/^		width = -1;$/;"	d
width	obj/user/hello.asm	/^				width = 0;$/;"	d
width	obj/user/hello.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/hello.asm	/^		width = -1;$/;"	d
width	obj/user/httpd.asm	/^				width = 0;$/;"	d
width	obj/user/httpd.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/httpd.asm	/^		width = -1;$/;"	d
width	obj/user/icode.asm	/^				width = 0;$/;"	d
width	obj/user/icode.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/icode.asm	/^		width = -1;$/;"	d
width	obj/user/idle.asm	/^				width = 0;$/;"	d
width	obj/user/idle.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/idle.asm	/^		width = -1;$/;"	d
width	obj/user/init.asm	/^				width = 0;$/;"	d
width	obj/user/init.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/init.asm	/^		width = -1;$/;"	d
width	obj/user/pingpong.asm	/^				width = 0;$/;"	d
width	obj/user/pingpong.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/pingpong.asm	/^		width = -1;$/;"	d
width	obj/user/primes.asm	/^				width = 0;$/;"	d
width	obj/user/primes.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/primes.asm	/^		width = -1;$/;"	d
width	obj/user/testfile.asm	/^				width = 0;$/;"	d
width	obj/user/testfile.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testfile.asm	/^		width = -1;$/;"	d
width	obj/user/testtime.asm	/^				width = 0;$/;"	d
width	obj/user/testtime.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/testtime.asm	/^		width = -1;$/;"	d
width	obj/user/writemotd.asm	/^				width = 0;$/;"	d
width	obj/user/writemotd.asm	/^				width = precision, precision = -1;$/;"	d
width	obj/user/writemotd.asm	/^		width = -1;$/;"	d
winsaddr	net/lwip/netif/ppp/ipcp.h	/^  u32_t   winsaddr[2];       \/* Primary and secondary MS WINS entries *\/$/;"	m	struct:ipcp_options
wnd	obj/net/ns.asm	/^  wnd = LWIP_MIN(pcb->snd_wnd, pcb->cwnd);$/;"	d
word	net/lwip/netif/ppp/auth.c	/^  char        word[1];$/;"	m	struct:wordlist	file:
wordlist	net/lwip/netif/ppp/auth.c	/^struct wordlist {$/;"	s	file:
wpos	kern/console.c	/^	uint32_t wpos;$/;"	m	struct:__anon9	file:
write	inc/fs.h	/^	} write;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_write
write	lib/fd.c	/^write(int fdnum, const void *buf, size_t n)$/;"	f
write	net/lwip/include/lwip/sockets.h	346;"	d
write_block	fs/fs.c	/^write_block(uint32_t blockno)$/;"	f
write_delayed	net/lwip/include/lwip/api.h	/^  u8_t write_delayed;$/;"	m	struct:netconn
write_eflags	inc/x86.h	/^write_eflags(uint64_t eflags)$/;"	f
write_finished	obj/net/ns.asm	/^      write_finished = 1;$/;"	d
write_finished	obj/net/ns.asm	/^    write_finished = 1;$/;"	d
write_msg	net/lwip/include/lwip/api.h	/^  struct api_msg_msg *write_msg;$/;"	m	struct:netconn	typeref:struct:netconn::api_msg_msg
write_offset	net/lwip/include/lwip/api.h	/^  int write_offset;$/;"	m	struct:netconn
writebuf	lib/fprintf.c	/^writebuf(struct printbuf *b)$/;"	f	file:
writefile	fs/fsformat.c	/^writefile(struct Dir *dir, const char *name)$/;"	f
writeset	net/lwip/api/sockets.c	/^  fd_set *writeset;$/;"	m	struct:lwip_select_cb	file:
wrv	obj/kern/kernel.asm	/^	wrv = (uint16_t *)KADDR((0x40 << 4 | 0x67));  \/\/ Warm reset vector$/;"	d
x64_vm_init	kern/pmap.c	/^x64_vm_init(void)$/;"	f
x64_vm_init	kern/pmap.c.BACKUP.24152.c	/^x64_vm_init(void)$/;"	f
x64_vm_init	kern/pmap.c.BASE.24152.c	/^x64_vm_init(void)$/;"	f
x64_vm_init	kern/pmap.c.LOCAL.24152.c	/^x64_vm_init(void)$/;"	f
x64_vm_init	kern/pmap.c.REMOTE.24152.c	/^x64_vm_init(void)$/;"	f
x64_vm_init	kern/pmap1.c	/^x64_vm_init(void)$/;"	f
xchecksum	kern/mpconfig.c	/^	uint8_t xchecksum;              \/\/ extended table checksum$/;"	m	struct:mpconf	file:
xchg	inc/x86.h	/^xchg(volatile uint32_t *addr,uint32_t newval){$/;"	f
xid	net/lwip/core/dhcp.c	/^static u32_t xid = 0xABCD0000;$/;"	v	file:
xid	net/lwip/include/lwip/dhcp.h	/^  u32_t xid;$/;"	m	struct:dhcp
xlength	kern/mpconfig.c	/^	uint16_t xlength;               \/\/ extended table length$/;"	m	struct:mpconf	file:
xmit	net/lwip/include/lwip/stats.h	/^  STAT_COUNTER xmit;             \/* Transmitted packets. *\/$/;"	m	struct:stats_proto
xmit_accm	net/lwip/netif/ppp/lcp.c	/^ext_accm xmit_accm[NUM_PPP];           \/* extended transmit ACCM *\/$/;"	v
xmit_idle	net/lwip/netif/ppp/ppp.h	/^  u_short xmit_idle;      \/* seconds since last NP packet sent *\/$/;"	m	struct:ppp_idle
xopen	user/testfile.c	/^xopen(const char *path, int mode)$/;"	f	file:
zero	user/divzero.c	/^int zero;$/;"	v
