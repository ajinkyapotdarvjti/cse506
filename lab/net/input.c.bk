#include "ns.h"
#include "kern/e1000.h"

extern union Nsipc nsipcbuf;

void
input(envid_t ns_envid)
{
	binaryname = "ns_input";

	// LAB 6: Your code here:
	// 	- read a packet from the device driver
	//	- send it to the network server
	// Hint: When you IPC a page to the network server, it will be
	// reading from it for a while, so don't immediately receive
	// another packet in to the same physical page.

        int r;
        envid_t current_envid = sys_getenvid();
        while (1) {

                //cprintf("Reading a packet from the device driver\n");

                char data[2048];
		int length;

		while((r=sys_net_try_receive(data, &length))<0);

      
                if ((r = sys_page_alloc(0, &nsipcbuf, PTE_P|PTE_U|PTE_W)) < 0)
                        panic("sys_page_alloc: %e", r);

		nsipcbuf.pkt.jp_len = length;
		memmove(nsipcbuf.pkt.jp_data, (void*)data, length);

                //cprintf("Received a packet from the device driver, data = %s, length = %d\n", nsipcbuf.pkt.jp_data, nsipcbuf.pkt.jp_len);

		//cprintf("Sending a packet to the network server in environment....%0x\n", current_envid);
		while(sys_ipc_try_send(ns_envid, NSREQ_INPUT, &nsipcbuf, PTE_P|PTE_W|PTE_U) < 0);
                //cprintf("packet sent to the network server\n");
        }
}
